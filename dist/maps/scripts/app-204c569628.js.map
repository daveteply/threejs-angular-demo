{"version":3,"sources":["scripts/app.js"],"names":["angular","module","component","bindings","parentSize","gameLevel","templateUrl","controller","$window","$element","threeDApiFactory","shapesFactory","gameFactory","ctrl","this","_c","find","setCanvasDimensions","width","height","handleResizeEvent","handleClick","event","isScoring","x","y","actualX","actualY","rect","getBoundingClientRect","targetTouches","length","clientX","left","clientY","top","intersects","detectObjectIntersection","updateShapeProps","startNewLevel","shapes","get","removeAllShapes","shapeCnt","Math","ceil","level","newShapes","buildShapes","textures","addShapes","$onInit","initRenderer","setUpScene","loader","loadTextures","manager","onLoad","render","$onChanges","changesObj","isFirstChange","$scope","textRollConfig","filter","score","scoreChangeCallback","$apply","linkData","href","label","$document","$timeout","_w","element","size","updateClientRect","isFullScreen","screenfull","isFullscreen","height_scale","innerWidth","innerHeight","$digest","bind","timer","$onDestroy","startLevel","global","factory","exports","define","amd","THREE","EventDispatcher","Vector2","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","Object","defineProperty","value","TextureIdCount","uuid","generateUUID","name","sourceFile","undefined","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","ClampToEdgeWrapping","LinearFilter","LinearMipMapLinearFilter","RGBAFormat","UnsignedByteType","offset","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","LinearEncoding","version","onUpdate","count","Vector4","z","w","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","call","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","Vector3","Matrix4","elements","Float32Array","arguments","console","error","CubeTexture","images","CubeReflectionMapping","UniformContainer","seq","map","flatten","array","nBlocks","blockSize","firstElem","n","r","arrayCacheF32","toArray","i","allocTexUnits","renderer","arrayCacheI32","Int32Array","allocTextureUnit","setValue1f","gl","v","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","b","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","emptyTexture","setValueT6","setTextureCube","emptyCubeTexture","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","addUniform","container","uniformObject","push","parseUniform","path","pathLength","RePathPart","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","Color","set","setRGB","Box2","min","max","Infinity","LensFlarePlugin","flares","init","vertices","faces","Uint16Array","vertexBuffer","createBuffer","elementBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","tempTexture","createTexture","occlusionTexture","state","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","shader","vertexShader","join","fragmentShader","createProgram","attributes","vertex","getAttribLocation","uv","uniforms","renderType","occlusionMap","opacity","color","scale","rotation","screenPosition","createShader","FRAGMENT_SHADER","VERTEX_SHADER","prefix","getPrecision","shaderSource","compileShader","attachShader","linkProgram","context","scene","camera","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","disable","CULL_FACE","setDepthWrite","l","flare","matrixWorld","applyMatrix4","matrixWorldInverse","applyProjection","projectionMatrix","copy","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","j","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","resetGLState","SpritePlugin","sprites","position","uvOffset","uvScale","modelViewMatrix","fogType","fogDensity","fogNear","fogFar","fogColor","alphaTest","canvas","document","createElementNS","getContext","fillStyle","fillRect","needsUpdate","painterSortStable","a","renderOrder","spritePosition","spriteRotation","spriteScale","oldFogType","sceneFogType","fog","isFog","near","far","isFogExp2","density","multiplyMatrices","sort","material","visible","decompose","setDepthTest","depthTest","depthWrite","Material","MaterialIdCount","lights","NormalBlending","side","FrontSide","shading","SmoothShading","vertexColors","NoColors","transparent","SrcAlphaFactor","OneMinusSrcAlphaFactor","AddEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","LessEqualDepth","clippingPlanes","clipShadows","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","count$1","ShaderMaterial","parameters","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","morphTargets","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv2","index0AttributeName","setValues","MeshDepthMaterial","depthPacking","BasicDepthPacking","alphaMap","displacementMap","displacementScale","displacementBias","Box3","Sphere","center","radius","Matrix3","Plane","normal","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","WebGLShadowMap","_renderer","_lights","_objects","capabilities","getDepthMaterial","object","isPointLight","lightPositionWorld","geometry","result","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","isBufferGeometry","morphAttributes","isGeometry","useSkinning","isSkinnedMesh","variantIndex","_MorphingFlag","_SkinningFlag","localClippingEnabled","keyA","keyB","materialsForVariant","_materialCache","cachedMaterial","clone","scope","renderSingleSided","DoubleSide","renderReverseSided","BackSide","lightPos","projectObject","shadowCamera","layers","mask","isMesh","isLine","isPoints","castShadow","frustumCulled","_frustum","intersectsObject","_renderList","children","_gl","_state","_projScreenMatrix","_lightShadows","shadows","_shadowMapSize","_maxShadowMapSize","maxTextureSize","_lookTarget","_lightPositionWorld","_NumberOfMaterialVariants","Array","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","RGBADepthPacking","distanceShader","ShaderLib","distanceUniforms","UniformsUtils","depthMaterial","distanceMaterial","USE_SHADOWMAP","enabled","autoUpdate","PCFShadowMap","clearColor","setScissorTest","faceCount","il","light","shadow","mapSize","vpWidth","vpHeight","pars","NearestFilter","updateProjectionMatrix","isSpotLightShadow","update","shadowMap","shadowMatrix","matrix","setFromMatrixPosition","setRenderTarget","clear","face","add","up","lookAt","vpDimensions","target","updateMatrixWorld","getInverse","multiply","setFromMatrix","isMultiMaterial","groups","materials","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","warn","getClearColor","clearAlpha","getClearAlpha","setClearColor","Ray","origin","direction","Euler","order","_order","DefaultOrder","Layers","Object3D","onRotationChange","quaternion","setFromEuler","onQuaternionChange","setFromQuaternion","Object3DIdCount","parent","DefaultUp","onChange","defineProperties","enumerable","normalMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","userData","onBeforeRender","count$2","Line3","start","end","Triangle","c","Face3","isVector3","vertexNormals","isArray","isColor","MeshBasicMaterial","aoMap","aoMapIntensity","specularMap","envMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframeLinecap","wireframeLinejoin","BufferAttribute","itemSize","normalized","TypeError","dynamic","updateRange","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Int32Attribute","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","setDynamic","Geometry","GeometryIdCount","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","boundingSphere","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","count$3","DirectGeometry","indices","normals","uvs","uvs2","BufferGeometry","index","drawRange","Mesh","random","drawMode","TrianglesDrawMode","updateMorphTargets","BoxBufferGeometry","depth","widthSegments","heightSegments","depthSegments","calculateVertexCount","h","d","calculateIndexCount","buildPlane","u","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","iy","ix","vertexBufferOffset","uvBufferOffset","numberOfVertices","indexBufferOffset","addGroup","groupStart","floor","vertexCount","indexCount","setIndex","addAttribute","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","OrthographicCamera","right","bottom","WebGLIndexedBufferRenderer","infoRender","setMode","mode","UNSIGNED_INT","calls","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","isInterleavedBufferAttribute","data","drawArraysInstancedANGLE","WebGLLights","shadowBias","shadowRadius","shadowMapSize","distance","coneCos","penumbraCos","decay","skyColor","groundColor","addLineNumbers","string","lines","split","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getEncodingComponents","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","Error","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","generateExtensions","rendererExtensions","chunks","envMapCubeUV","bumpMap","normalMap","flatShading","logarithmicDepthBuffer","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","replace","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","ShaderChunk","pattern","unrollLoops","snippet","unroll","parseInt","WebGLProgram","code","__webglShader","shadowMapTypeDefine","shadowMapType","PCFSoftShadowMap","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","CubeRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","MixOperation","AddOperation","prefixVertex","prefixFragment","gammaFactorDefine","gammaFactor","customExtensions","customDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","lightMap","emissiveMap","roughnessMap","metalnessMap","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","sizeAttenuation","useFog","fogExp","physicallyCorrectLights","NoToneMapping","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","isShaderMaterial","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","log","deleteShader","cachedUniforms","getUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","programIdCount","usedTimes","WebGLPrograms","allocateBones","floatVertexTextures","skeleton","nVertexUniforms","maxVertexUniforms","nVertexMatrices","bones","getTextureEncodingFromMap","gammaOverrideLinear","isTexture","isWebGLRenderTarget","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","parameterNames","getParameters","nClipPlanes","shaderID","getMaxPrecision","currentRenderTarget","getCurrentRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","FlatShading","maxMorphTargets","maxMorphNormals","directional","point","spot","hemi","getProgramCode","acquireProgram","p","pl","programInfo","releaseProgram","indexOf","pop","WebGLGeometries","properties","onGeometryDispose","buffergeometry","geometries","deleteAttribute","deleteAttributes","removeEventListener","property","bufferproperty","memory","getAttributeBuffer","attribute","__webglBuffer","buffer","deleteBuffer","removeAttributeBuffer","addEventListener","_bufferGeometry","setFromObject","WebGLObjects","updateFromObject","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","DYNAMIC_DRAW","bufferSubData","BYTES_PER_ELEMENT","subarray","getWireframeAttribute","TypeArray","WebGLTextures","paramThreeToGL","clampToMaxSize","maxSize","drawImage","isPowerOfTwo","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","nearestPowerOfTwo","textureNeedsPowerOfTwo","filterFallback","f","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LINEAR","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","dispose","isWebGLRenderTargetCube","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","complete","uploadTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","isDataTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","RGBFormat","getCompressedTextureFormats","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","generateMipmap","setTextureCubeDynamic","textureType","FloatType","HalfFloatType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","_isWebGL2","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DepthStencilFormat","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","DepthFormat","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGL2RenderingContext","WebGLProperties","delete","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","setClear","equals","reset","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthMask","setFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","setDepthFunc","setFlipSided","setCullFace","CullFaceBack","newAttributes","enabledAttributes","enableVertexAttribArray","attributeDivisors","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","compressedTextureFormats","formats","getParameter","COMPRESSED_TEXTURE_FORMATS","NoBlending","currentBlending","currentPremultipledAlpha","AdditiveBlending","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","MultiplyBlending","SRC_COLOR","CustomBlending","currentBlendEquation","currentBlendEquationAlpha","currentBlendSrc","currentBlendDst","currentBlendSrcAlpha","currentBlendDstAlpha","setColorWrite","colorBuffer","setStencilTest","setStencilWrite","stencilWrite","setStencilFunc","setStencilOp","currentFlipSided","frontFace","CW","CCW","cullFace","CullFaceNone","currentCullFace","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setLineWidth","currentLineWidth","lineWidth","setPolygonOffset","factor","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","getScissorTest","currentScissorTest","SCISSOR_TEST","webglSlot","maxTextures","currentTextureSlot","webglType","boundTexture","currentBoundTextures","emptyTextures","apply","currentScissor","currentViewport","maxVertexAttributes","MAX_VERTEX_ATTRIBS","MAX_TEXTURE_IMAGE_UNITS","buffers","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","WebGLExtensions","getExtension","WebGLClipping","resetGlobalState","uniform","globalState","numGlobalPlanes","numPlanes","projectPlanes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","viewNormalMatrix","getNormalMatrix","i4","plane","renderingShadows","enableLocalClipping","beginShadows","endShadows","setState","cache","fromCache","nGlobal","lGlobal","clippingState","WebGLRenderer","getTargetPixelRatio","_currentRenderTarget","_pixelRatio","glClearColor","_premultipliedAlpha","setDefaultGLState","_currentScissor","_scissor","multiplyScalar","_currentViewport","_viewport","_clearColor","_clearAlpha","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","onContextLost","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","programCache","setupVertexAttributes","startIndex","isInstancedBufferGeometry","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","SHORT","INT","BYTE","objects","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","absNumericalSort","abs","reversePainterSortStable","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","isObjectViewable","computeBoundingSphere","_sphere","isSphereViewable","isSpriteViewable","sphere","intersectsSphere","_clipping","_this","negRad","distanceToPoint","isLight","isSprite","isLensFlare","isImmediateRenderObject","sortObjects","renderObjects","renderList","overrideMaterial","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","programChange","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","hash","ambientLightColor","ambient","directionalLights","spotLights","pointLights","hemisphereLights","directionalShadowMap","directionalShadowMatrix","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","progUniforms","uniformsList","seqWithValue","dynamicUniforms","splitDynamic","_usedTextureUnits","_clippingEnabled","_localClippingEnabled","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","isMeshBasicMaterial","setOptional","markUniformsLightsNeedsUpdate","refreshUniformsFog","isMeshDepthMaterial","refreshUniformsCommon","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshNormalMaterial","upload","dynUniforms","evalDynamic","diffuse","emissive","emissiveIntensity","uvScaleMap","offsetRepeat","flipEnvMap","isCubeTexture","dashSize","totalSize","gapSize","_canvas","clientHeight","lightMapIntensity","specular","shininess","bumpScale","normalScale","roughness","metalness","envMapIntensity","clearCoat","clearCoatRoughness","setupShadows","lightShadowsLength","setupLights","ll","intensity","directionalLength","pointLength","spotLength","hemiLength","isAmbientLight","isDirectionalLight","lightCache","sub","transformDirection","bias","isSpotLight","cos","angle","penumbra","negate","identity","setPosition","isHemisphereLight","normalize","textureUnit","RepeatWrapping","REPEAT","MirroredRepeatWrapping","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipMapNearestFilter","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","DST_ALPHA","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","DstColorFactor","DST_COLOR","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","RGB_S3TC_DXT1_Format","COMPRESSED_RGB_S3TC_DXT1_EXT","RGBA_S3TC_DXT1_Format","COMPRESSED_RGBA_S3TC_DXT1_EXT","RGBA_S3TC_DXT3_Format","COMPRESSED_RGBA_S3TC_DXT3_EXT","RGBA_S3TC_DXT5_Format","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","RGB_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","RGBA_PVRTC_4BPPV1_Format","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","COMPRESSED_RGB_ETC1_WEBGL","MinEquation","MIN_EXT","MaxEquation","MAX_EXT","UnsignedInt248Type","UNSIGNED_INT_24_8_WEBGL","REVISION","_context","_alpha","alpha","_depth","_stencil","_antialias","antialias","_preserveDrawingBuffer","preserveDrawingBuffer","morphInfluences","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMappingExposure","toneMappingWhitePoint","_currentFramebuffer","_currentScissorTest","_width","_height","_scissorTest","_infoRender","points","rangeMin","rangeMax","MaxIndex","bufferRenderer","indexedBufferRenderer","backgroundCamera","backgroundCamera2","backgroundPlaneMesh","backgroundBoxShader","backgroundBoxMesh","spritePlugin","lensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","style","setViewport","setScissor","boolean","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","updateBuffers","geometryProgram","morphTargetInfluences","activeInfluences","influence","removeAttribute","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TriangleStripDrawMode","TRIANGLE_STRIP","TriangleFanDrawMode","TRIANGLE_FAN","isLineSegments","LINE_STRIP","POINTS","forceClear","isCamera","background","extractRotation","setFaceCulling","frontFaceDirection","FrontFaceDirectionCW","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","DataTexture","Skeleton","boneInverses","identityMatrix","slice","sqrt","nextPowerOfTwo","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","Bone","skin","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","bone","gbone","fromArray","pos","rotq","scl","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","Points","Group","VideoTexture","video","requestAnimationFrame","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","sortFunction","edge","keys","numEdges","edges","key","toString","coords","o","ol","index2","getX","getY","getZ","numTris","index1","ParametricGeometry","func","slices","stacks","verts","sliceCount","uva","uvb","uvc","uvd","computeFaceNormals","computeVertexNormals","PolyhedronGeometry","detail","prepare","that","azimuth","PI","inclination","make","v1","v2","v3","centroid","divideScalar","azi","correctUV","subdivide","cols","pow","aj","lerp","bj","rows","atan2","x0","x1","x2","mergeVertices","TetrahedronGeometry","OctahedronGeometry","IcosahedronGeometry","t","DodecahedronGeometry","TubeGeometry","segments","radialSegments","closed","taper","vert","NoTaper","tangent","binormal","cx","cy","ip","jp","grid","numpoints","pos2","frames","FrenetFrames","tangents","binormals","getPointAt","sin","TorusKnotBufferGeometry","tube","tubularSegments","q","calculatePositionOnCurve","cu","su","quOverP","cs","indexOffset","P1","P2","B","T","N","subVectors","addVectors","crossVectors","setXYZ","setXY","setX","TorusKnotGeometry","heightScale","fromBufferGeometry","TorusBufferGeometry","arc","TorusGeometry","ExtrudeGeometry","addShapeList","TextGeometry","text","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereBufferGeometry","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","positions","verticesRow","px","py","pz","v4","SphereGeometry","RingBufferGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","RingGeometry","PlaneGeometry","LatheBufferGeometry","clamp","base","inverseSegments","phi","n1","n2","LatheGeometry","ShapeGeometry","EdgesGeometry","thresholdAngle","geometry2","thresholdDot","DEG2RAD","vert1","vert2","face1","face2","dot","CylinderBufferGeometry","radiusTop","radiusBottom","openEnded","nbCap","generateTorso","slope","indexRow","theta","sinTheta","cosTheta","halfHeight","indexArray","i1","i2","i3","generateCap","centerIndexStart","centerIndexEnd","sign","CylinderGeometry","ConeGeometry","ConeBufferGeometry","CircleBufferGeometry","s","ii","CircleGeometry","BoxGeometry","ShadowMaterial","merge","UniformsLib","RawShaderMaterial","MultiMaterial","STANDARD","PHYSICAL","LoadingManager","onProgress","onError","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","url","itemEnd","itemError","XHRLoader","DefaultLoadingManager","CompressedTextureLoader","_parser","BinaryTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","updateMatrix","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","constructor","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","times","values","interpolation","AnimationUtils","convertArray","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","duration","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","withCredentials","ObjectLoader","texturePath","Curve","LineCurve","CurvePath","curves","autoClose","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","SplineCurve","CubicBezierCurve","v0","QuadraticBezierCurve","Shape","Path","holes","currentPoint","fromPoints","ShapePath","subPaths","currentPath","Font","FontLoader","getAudioContext","window","AudioContext","webkitAudioContext","AudioLoader","StereoCamera","eyeSep","cameraL","cameraR","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","AudioListener","gain","createGain","connect","destination","Audio","listener","source","createBufferSource","onended","onEnded","getInput","autoplay","startTime","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","typeName","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","AnimationObjectGroup","var_args","prototype","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindings","_bindingsIndicesByPath","stats","[object Object]","total","inUse","bindingsPerObject","AnimationAction","mixer","clip","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","endingStart","ZeroCurvatureEnding","endingEnd","interpolant","createInterpolant","settings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","LoopRepeat","_loopCount","_startTime","time","timeScale","_effectiveTimeScale","weight","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","ray","params","threshold","PointCloud","ascSort","intersectObject","raycaster","recursive","raycast","Clock","autoStart","oldTime","elapsedTime","running","Spline","interpolate","t2","t3","intPoint","w2","w3","pa","pb","pc","pd","initFromArray","getPoint","getControlPointsArray","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","distanceTo","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Spherical","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","fps","createAnimation","setAnimationWeight","ImmediateRenderObject","renderCallback","VertexNormalsHelper","hex","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","isBone","VertexColors","PointLightHelper","sphereSize","HemisphereLightHelper","rotateX","FaceColors","lightSphere","GridHelper","divisions","color1","color2","step","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","BoundingBoxHelper","box","BoxHelper","ArrowHelper","dir","headLength","headWidth","line","lineGeometry","coneGeometry","setDirection","setLength","AxisHelper","ClosedSplineCurve3","CatmullRomCurve3","ArcCurve","aRadius","Face4","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","EdgesHelper","WireframeHelper","Projector","projectVector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","Number","EPSILON","Function","assign","output","nextKey","hasOwnProperty","_listeners","listeners","hasEventListener","listenerArray","splice","dispatchEvent","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCCW","BasicShadowMap","BlendingMode","UVMapping","TextureMapping","TextureWrapping","TextureFilter","RGBEFormat","LoopOnce","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroSlopeEnding","WrapAroundEnding","LogLuvEncoding","RAD2DEG","chars","rnd","euclideanModulo","m","mapLinear","a1","a2","b1","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","round","isVector2","setScalar","scalar","setY","setComponent","getComponent","addScalar","addScaledVector","subScalar","isFinite","divide","clampScalar","minVal","maxVal","clampLength","roundToZero","lengthSq","lengthManhattan","distanceToSquared","dx","dy","distanceToManhattan","lerpVectors","fromAttribute","rotateAround","toJSON","meta","getDataURL","toDataURL","metadata","generator","wrap","transformUv","isVector4","setZ","setW","e","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","create","onChangeCallback","euler","isEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","EPS","vFrom","vTo","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","qa","qm","slerpFlat","dst","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","y1","z1","w1","sqrSin","len","tDir","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","qx","qy","qz","qw","iz","iw","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setFromSpherical","sinPhiRadius","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","temp","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","copyPosition","me","extractBasis","xAxis","yAxis","zAxis","makeBasis","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","applyToVector3Array","applyToBuffer","determinant","transpose","tmp","flattenToArrayOffset","getPosition","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","invSX","invSY","invSZ","makeFrustum","makePerspective","ymax","tan","ymin","xmin","xmax","makeOrthographic","onUpdateCallback","merged","uniforms_src","uniforms_dst","parameter_src","isMatrix3","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","setHex","setStyle","setHSL","hue2rgb","handleAlpha","parseFloat","charAt","ColorKeywords","copyGammaToLinear","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","basic","lambert","phong","standard","dashed","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","physical","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","isEmpty","getCenter","expandByVector","expandByScalar","containsBox","intersectsBox","clampPoint","clampedPoint","intersect","union","translate","isMaterial","newValue","currentValue","extractFromCache","isRoot","srcPlanes","dstPlanes","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","traverse","closestPoint","intersectsPlane","getBoundingSphere","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setFromMatrix4","matrix4","transposeIntoArray","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsSprite","negRadius","d1","d2","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","toggle","test","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","isRootObject","JSON","stringify","parse","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","triangle","area","midpoint","edgeList","projectedPoint","minDistance","isBufferAttribute","copyAt","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXYZW","computeBoundingBox","obj","addFace","tempNormals","tempUVs","tempUVs2","cb","ab","fl","vA","vB","vC","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","dupIndex","idx","sortFacesByMaterialIndex","materialIndexSort","_id","newUvs1","newUvs2","setBit","getNormalIndex","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","getIndex","getAttribute","clearGroups","setDrawRange","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","array2","setDrawMode","morphTargetDictionary","ml","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","uvA","uvB","uvC","faceIndex","inverseMatrix","tempA","tempB","tempC","fvA","fvB","fvC","isFaceMaterial","faceMaterial","tl","targets","uvs_f","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","vecX","vecY","wantedRotation","matrixPosition","guessSizeSq","addLevel","getObjectForDistance","pose","offsetMatrix","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","tz","mat","getTangentAt","ShapeUtils","contour","triangulate","snip","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","shape","prevShapeIdx","nextShapeIdx","insideAngle","hole","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","intersectsHoleEdge","ihIdx","chkHole","hIdx","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","concat","failedCuts","hl","minShapeIndex","counter","h2","forEach","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","addShape","scalePt2","pt","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","buildLidFaces","layer","vlen","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","position2","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","getSpacedPoints","shapePoints","extractPoints","reverse","bs","contourMovements","oneHoleMovements","holesMovements","verticesMovements","indexA","indexB","indexC","indexD","Geometries","freeze","isShadowMaterial","Materials","Cache","files","file","load","cached","setTimeout","request","XMLHttpRequest","open","response","status","responseType","overrideMimeType","send","setPath","setResponseType","setWithCredentials","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","onload","URL","revokeObjectURL","src","blob","createObjectURL","setCrossOrigin","crossOrigin","urls","isJPEG","search","arraySlice","from","to","isTypedArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","KeyframeTrackPrototype","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","ValueTypeName","getInterpolation","shift","timeOffset","trim","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","json","trackType","_getTrackTypeForValueTypeName","track","toLowerCase","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","TYPED_ARRAYS","typedArray","drawcalls","offsets","extractUrlBase","initMaterials","createMaterial","textureLoader","materialLoader","fullPath","Handlers","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","handlers","regex","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","getGeometry","getMaterial","isInteger","getUtoTmapping","getPoints","lengths","getLengths","cacheArcLengths","current","last","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getPointFunc","isLineCurve","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","twoPi","deltaAngle","samePoints","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","point0","point1","point2","point3","PathPrototype","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","extractAllPoints","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","betterShapeHoles","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","createPaths","String","paths","ret","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","action","ha","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","eyeSepOnProjection","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","orientation","setOrientation","setNodeSource","audioNode","setBuffer","play","pause","stop","currentTime","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetArray","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","dest","Composite","targetGroup","optionalParsedPath","_targetGroup","subscribe_","firstValidIndex","isAnimationObjectGroup","re","matches","results","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","_nActiveBindings","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingsByRoot","_bindingsByRootAndName","bindingByName","_removeInactiveBinding","uncacheAction","bindingsByName","_addInactiveBinding","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","instances","isInterleavedBuffer","setFromCamera","intersectObjects","performance","Date","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","objPos","objNorm","vector2","coneLength","coneWidth","boneList","matrixWorldInv","boneMatrix","setColors","lightPlane","targetLine","setPoint","setColor","CubicPoly","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","SplineCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","SceneUtils","createMultiMaterialObject","detach","attach","LineStrip","LinePieces","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CubeGeometry","MeshFaceMaterial","Particle","UtilityFactoryFunction","svc","three","getRandomDecimal","getRandomVector","getRandomInt","resetLimits","shapeObj","xLimit","yLimit","zLimit","locationVelocity","$inject","threeDApi","$log","_near","_far","xPos","yPos","dirLight","ambLight","shapeObjs","removeShapeCallback","xhr","updatePos","ShapesFactoryFunction","utilFactory","getShape","shapeName","textureMaterial","targetShape","startPosition","rndTextureIndex","clearShapes","removeShape","inx","endLevel","hit","updateScore","GameFactoryFunction","timemark","timeDiff","getTime","runBlock","run","config","$logProvider","debugEnabled","$templateCache","put"],"mappings":"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","file":"scripts/app-204c569628.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('3js0', ['ngMaterial', 'angularScreenfull', 'ui.ngTextRoll']);\r\n\r\n})();\n(function () {\r\n\r\n    'use strict';\r\n\r\n    angular.module('3js0').component('threeCanvas', {\r\n        bindings: {\r\n            parentSize: '<',\r\n            gameLevel: '<'\r\n        },\r\n        templateUrl: 'app/components/threeCanvas/threeCanvas.html',\r\n        controller: function ($window, $element, threeDApiFactory, shapesFactory, gameFactory) {\r\n            var ctrl = this;\r\n\r\n            var _c = $element.find('canvas')[0];\r\n\r\n            var setCanvasDimensions = function () {\r\n                ctrl.width = ctrl.parentSize.width;\r\n                ctrl.height = ctrl.parentSize.height;\r\n            };\r\n\r\n            var handleResizeEvent = function () {\r\n                setCanvasDimensions();\r\n                threeDApiFactory.handleResizeEvent(ctrl.width, ctrl.height);\r\n            };\r\n\r\n            ctrl.handleClick = function (event) {\r\n                if (gameFactory.isScoring) {\r\n                    var rect = _c.getBoundingClientRect();\r\n                    var x, y, actualX, actualY;\r\n                    if (event.targetTouches && event.targetTouches.length > 0) {\r\n                        actualX = event.targetTouches[0].clientX - rect.left;\r\n                        actualY = event.targetTouches[0].clientY - rect.top;\r\n                    } else {\r\n                        actualX = event.clientX - rect.left;\r\n                        actualY = event.clientY - rect.top;\r\n                    }\r\n                    x = (actualX / rect.width) * 2 - 1;\r\n                    y = -(actualY / rect.height) * 2 + 1;\r\n                    var intersects = threeDApiFactory.detectObjectIntersection(x, y);\r\n                    shapesFactory.updateShapeProps(intersects);\r\n                }\r\n            };\r\n\r\n            var startNewLevel = function () {\r\n                // clear shapes (only for initial level)\r\n                var shapes = shapesFactory.get();\r\n                threeDApiFactory.removeAllShapes(shapes);\r\n                \r\n                // add shapes for new level\r\n                var shapeCnt = Math.ceil(gameFactory.level * 3.3);\r\n                var newShapes = shapesFactory.buildShapes(shapeCnt, threeDApiFactory.textures);\r\n                threeDApiFactory.addShapes(newShapes);\r\n            };\r\n\r\n            ctrl.$onInit = function () {\r\n                // setup\r\n                setCanvasDimensions();\r\n                threeDApiFactory.initRenderer(_c, ctrl.width, ctrl.height);\r\n                threeDApiFactory.setUpScene(ctrl.width, ctrl.height);\r\n                var loader = threeDApiFactory.loadTextures();\r\n                loader.manager.onLoad = function () {\r\n                    // textures are finished loading,\r\n                    //  build shapes and add them to scene\r\n                    var shapes = shapesFactory.buildShapes(8, threeDApiFactory.textures);\r\n                    threeDApiFactory.addShapes(shapes);\r\n\r\n                    // let the show begin!\r\n                    threeDApiFactory.render();\r\n                };\r\n            };\r\n\r\n            ctrl.$onChanges = function (changesObj) {\r\n                if (changesObj.parentSize && !changesObj.parentSize.isFirstChange()) {\r\n                    handleResizeEvent();\r\n                }\r\n                if (changesObj.gameLevel && !changesObj.gameLevel.isFirstChange()) {\r\n                    startNewLevel();\r\n                }\r\n            };\r\n\r\n        }\r\n    });\r\n\r\n})();\n(function () {\r\n\r\n    'use strict';\r\n\r\n    angular.module('3js0').component('score', {\r\n        templateUrl: 'app/components/score/score.html',\r\n        controller: function ($scope, gameFactory) {\r\n            var ctrl = this;\r\n            \r\n            ctrl.textRollConfig = {\r\n                filter: 'number'\r\n            };\r\n\r\n            ctrl.score = 0;\r\n\r\n            gameFactory.scoreChangeCallback = function () {\r\n                ctrl.score = gameFactory.score;\r\n                $scope.$apply();\r\n            };\r\n        }\r\n    });\r\n\r\n})();\n(function () {\r\n\r\n    'use strict';\r\n\r\n    angular.module('3js0').component('links', {\r\n        templateUrl: 'app/components/links/links.html',\r\n        controller: function () {\r\n            var ctrl = this;\r\n\r\n            ctrl.linkData = [\r\n                {\r\n                    href: \"https://threejs.org\",\r\n                    label: \"three.js\"\r\n                },\r\n                {\r\n                    href: \"https://angularjs.org\",\r\n                    label: \"AngularJS\"\r\n                },\r\n                {\r\n                    href: \"https://material.angularjs.org\",\r\n                    label: \"Angular Material\"\r\n                },\r\n                {\r\n                    href: \"https://github.com/hrajchert/angular-screenfull\",\r\n                    label: \"Angular Screenfull\"\r\n                }\r\n            ];\r\n\r\n        }\r\n    });\r\n\r\n})();\n(function () {\r\n\r\n    'use strict';\r\n\r\n    angular.module('3js0').component('gameContainer', {\r\n        templateUrl: 'app/components/gameContainer/gameContainer.html',\r\n        controller: function ($window, $document, $element, $timeout, $scope, gameFactory) {\r\n\r\n            var ctrl = this;\r\n            var _w = angular.element($window);\r\n\r\n            ctrl.size = {};\r\n\r\n            ctrl.gameFactory = gameFactory; // for template binding\r\n\r\n            var updateClientRect = function () {\r\n                var rect = $element[0].getBoundingClientRect();\r\n                var isFullScreen = ($window.screenfull && $window.screenfull.isFullscreen);\r\n                var height_scale = isFullScreen ? 0.85 : 0.5;\r\n                var width = isFullScreen ? _w[0].innerWidth : rect.width;\r\n                ctrl.size = {\r\n                    width: width,\r\n                    height: _w[0].innerHeight * height_scale\r\n                };\r\n\r\n                // resize event occurs outside of Angular\r\n                $scope.$digest();\r\n            };\r\n\r\n            ctrl.$onInit = function () {\r\n                // resize event\r\n                _w.bind('resize', updateClientRect);\r\n\r\n                // initial size\r\n                ctrl.timer = $timeout(function () {\r\n                    updateClientRect();\r\n                });\r\n            };\r\n\r\n            ctrl.$onDestroy = function () {\r\n                ctrl.timer();\r\n            };\r\n\r\n            ctrl.startLevel = function () {\r\n                gameFactory.startLevel();\r\n            };\r\n\r\n        }\r\n    });\r\n\r\n})();\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\r\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\r\n    (factory((global.THREE = global.THREE || {})));\r\n}(this, (function (exports) { 'use strict';\r\n\r\n    // Polyfills\r\n\r\n    if ( Number.EPSILON === undefined ) {\r\n\r\n    \tNumber.EPSILON = Math.pow( 2, - 52 );\r\n\r\n    }\r\n\r\n    //\r\n\r\n    if ( Math.sign === undefined ) {\r\n\r\n    \t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n    \tMath.sign = function ( x ) {\r\n\r\n    \t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    if ( Function.prototype.name === undefined ) {\r\n\r\n    \t// Missing in IE9-11.\r\n    \t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n    \tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n    \t\tget: function () {\r\n\r\n    \t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n    \t\t}\r\n\r\n    \t} );\r\n\r\n    }\r\n\r\n    if ( Object.assign === undefined ) {\r\n\r\n    \t// Missing in IE.\r\n    \t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\r\n    \t( function () {\r\n\r\n    \t\tObject.assign = function ( target ) {\r\n\r\n    \t\t\t'use strict';\r\n\r\n    \t\t\tif ( target === undefined || target === null ) {\r\n\r\n    \t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar output = Object( target );\r\n\r\n    \t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\r\n\r\n    \t\t\t\tvar source = arguments[ index ];\r\n\r\n    \t\t\t\tif ( source !== undefined && source !== null ) {\r\n\r\n    \t\t\t\t\tfor ( var nextKey in source ) {\r\n\r\n    \t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\r\n\r\n    \t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn output;\r\n\r\n    \t\t};\r\n\r\n    \t} )();\r\n\r\n    }\r\n\r\n    /**\r\n     * https://github.com/mrdoob/eventdispatcher.js/\r\n     */\r\n\r\n    function EventDispatcher() {}\r\n\r\n    Object.assign( EventDispatcher.prototype, {\r\n\r\n    \taddEventListener: function ( type, listener ) {\r\n\r\n    \t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n    \t\tvar listeners = this._listeners;\r\n\r\n    \t\tif ( listeners[ type ] === undefined ) {\r\n\r\n    \t\t\tlisteners[ type ] = [];\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n    \t\t\tlisteners[ type ].push( listener );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \thasEventListener: function ( type, listener ) {\r\n\r\n    \t\tif ( this._listeners === undefined ) return false;\r\n\r\n    \t\tvar listeners = this._listeners;\r\n\r\n    \t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n    \t\t\treturn true;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn false;\r\n\r\n    \t},\r\n\r\n    \tremoveEventListener: function ( type, listener ) {\r\n\r\n    \t\tif ( this._listeners === undefined ) return;\r\n\r\n    \t\tvar listeners = this._listeners;\r\n    \t\tvar listenerArray = listeners[ type ];\r\n\r\n    \t\tif ( listenerArray !== undefined ) {\r\n\r\n    \t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n    \t\t\tif ( index !== - 1 ) {\r\n\r\n    \t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tdispatchEvent: function ( event ) {\r\n\r\n    \t\tif ( this._listeners === undefined ) return;\r\n\r\n    \t\tvar listeners = this._listeners;\r\n    \t\tvar listenerArray = listeners[ event.type ];\r\n\r\n    \t\tif ( listenerArray !== undefined ) {\r\n\r\n    \t\t\tevent.target = this;\r\n\r\n    \t\t\tvar array = [], i = 0;\r\n    \t\t\tvar length = listenerArray.length;\r\n\r\n    \t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n    \t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n    \t\t\t\tarray[ i ].call( this, event );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    var REVISION = '81';\r\n    var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n    var CullFaceNone = 0;\r\n    var CullFaceBack = 1;\r\n    var CullFaceFront = 2;\r\n    var CullFaceFrontBack = 3;\r\n    var FrontFaceDirectionCW = 0;\r\n    var FrontFaceDirectionCCW = 1;\r\n    var BasicShadowMap = 0;\r\n    var PCFShadowMap = 1;\r\n    var PCFSoftShadowMap = 2;\r\n    var FrontSide = 0;\r\n    var BackSide = 1;\r\n    var DoubleSide = 2;\r\n    var FlatShading = 1;\r\n    var SmoothShading = 2;\r\n    var NoColors = 0;\r\n    var FaceColors = 1;\r\n    var VertexColors = 2;\r\n    var NoBlending = 0;\r\n    var NormalBlending = 1;\r\n    var AdditiveBlending = 2;\r\n    var SubtractiveBlending = 3;\r\n    var MultiplyBlending = 4;\r\n    var CustomBlending = 5;\r\n    var BlendingMode = {\r\n        NoBlending: NoBlending,\r\n        NormalBlending: NormalBlending,\r\n        AdditiveBlending: AdditiveBlending,\r\n        SubtractiveBlending: SubtractiveBlending,\r\n        MultiplyBlending: MultiplyBlending,\r\n        CustomBlending: CustomBlending\r\n    };\r\n    var AddEquation = 100;\r\n    var SubtractEquation = 101;\r\n    var ReverseSubtractEquation = 102;\r\n    var MinEquation = 103;\r\n    var MaxEquation = 104;\r\n    var ZeroFactor = 200;\r\n    var OneFactor = 201;\r\n    var SrcColorFactor = 202;\r\n    var OneMinusSrcColorFactor = 203;\r\n    var SrcAlphaFactor = 204;\r\n    var OneMinusSrcAlphaFactor = 205;\r\n    var DstAlphaFactor = 206;\r\n    var OneMinusDstAlphaFactor = 207;\r\n    var DstColorFactor = 208;\r\n    var OneMinusDstColorFactor = 209;\r\n    var SrcAlphaSaturateFactor = 210;\r\n    var NeverDepth = 0;\r\n    var AlwaysDepth = 1;\r\n    var LessDepth = 2;\r\n    var LessEqualDepth = 3;\r\n    var EqualDepth = 4;\r\n    var GreaterEqualDepth = 5;\r\n    var GreaterDepth = 6;\r\n    var NotEqualDepth = 7;\r\n    var MultiplyOperation = 0;\r\n    var MixOperation = 1;\r\n    var AddOperation = 2;\r\n    var NoToneMapping = 0;\r\n    var LinearToneMapping = 1;\r\n    var ReinhardToneMapping = 2;\r\n    var Uncharted2ToneMapping = 3;\r\n    var CineonToneMapping = 4;\r\n    var UVMapping = 300;\r\n    var CubeReflectionMapping = 301;\r\n    var CubeRefractionMapping = 302;\r\n    var EquirectangularReflectionMapping = 303;\r\n    var EquirectangularRefractionMapping = 304;\r\n    var SphericalReflectionMapping = 305;\r\n    var CubeUVReflectionMapping = 306;\r\n    var CubeUVRefractionMapping = 307;\r\n    var TextureMapping = {\r\n        UVMapping: UVMapping,\r\n        CubeReflectionMapping: CubeReflectionMapping,\r\n        CubeRefractionMapping: CubeRefractionMapping,\r\n        EquirectangularReflectionMapping: EquirectangularReflectionMapping,\r\n        EquirectangularRefractionMapping: EquirectangularRefractionMapping,\r\n        SphericalReflectionMapping: SphericalReflectionMapping,\r\n        CubeUVReflectionMapping: CubeUVReflectionMapping,\r\n        CubeUVRefractionMapping: CubeUVRefractionMapping\r\n    };\r\n    var RepeatWrapping = 1000;\r\n    var ClampToEdgeWrapping = 1001;\r\n    var MirroredRepeatWrapping = 1002;\r\n    var TextureWrapping = {\r\n        RepeatWrapping: RepeatWrapping,\r\n        ClampToEdgeWrapping: ClampToEdgeWrapping,\r\n        MirroredRepeatWrapping: MirroredRepeatWrapping\r\n    };\r\n    var NearestFilter = 1003;\r\n    var NearestMipMapNearestFilter = 1004;\r\n    var NearestMipMapLinearFilter = 1005;\r\n    var LinearFilter = 1006;\r\n    var LinearMipMapNearestFilter = 1007;\r\n    var LinearMipMapLinearFilter = 1008;\r\n    var TextureFilter = {\r\n        NearestFilter: NearestFilter,\r\n        NearestMipMapNearestFilter: NearestMipMapNearestFilter,\r\n        NearestMipMapLinearFilter: NearestMipMapLinearFilter,\r\n        LinearFilter: LinearFilter,\r\n        LinearMipMapNearestFilter: LinearMipMapNearestFilter,\r\n        LinearMipMapLinearFilter: LinearMipMapLinearFilter\r\n    };\r\n    var UnsignedByteType = 1009;\r\n    var ByteType = 1010;\r\n    var ShortType = 1011;\r\n    var UnsignedShortType = 1012;\r\n    var IntType = 1013;\r\n    var UnsignedIntType = 1014;\r\n    var FloatType = 1015;\r\n    var HalfFloatType = 1016;\r\n    var UnsignedShort4444Type = 1017;\r\n    var UnsignedShort5551Type = 1018;\r\n    var UnsignedShort565Type = 1019;\r\n    var UnsignedInt248Type = 1020;\r\n    var AlphaFormat = 1021;\r\n    var RGBFormat = 1022;\r\n    var RGBAFormat = 1023;\r\n    var LuminanceFormat = 1024;\r\n    var LuminanceAlphaFormat = 1025;\r\n    var RGBEFormat = RGBAFormat;\r\n    var DepthFormat = 1026;\r\n    var DepthStencilFormat = 1027;\r\n    var RGB_S3TC_DXT1_Format = 2001;\r\n    var RGBA_S3TC_DXT1_Format = 2002;\r\n    var RGBA_S3TC_DXT3_Format = 2003;\r\n    var RGBA_S3TC_DXT5_Format = 2004;\r\n    var RGB_PVRTC_4BPPV1_Format = 2100;\r\n    var RGB_PVRTC_2BPPV1_Format = 2101;\r\n    var RGBA_PVRTC_4BPPV1_Format = 2102;\r\n    var RGBA_PVRTC_2BPPV1_Format = 2103;\r\n    var RGB_ETC1_Format = 2151;\r\n    var LoopOnce = 2200;\r\n    var LoopRepeat = 2201;\r\n    var LoopPingPong = 2202;\r\n    var InterpolateDiscrete = 2300;\r\n    var InterpolateLinear = 2301;\r\n    var InterpolateSmooth = 2302;\r\n    var ZeroCurvatureEnding = 2400;\r\n    var ZeroSlopeEnding = 2401;\r\n    var WrapAroundEnding = 2402;\r\n    var TrianglesDrawMode = 0;\r\n    var TriangleStripDrawMode = 1;\r\n    var TriangleFanDrawMode = 2;\r\n    var LinearEncoding = 3000;\r\n    var sRGBEncoding = 3001;\r\n    var GammaEncoding = 3007;\r\n    var RGBEEncoding = 3002;\r\n    var LogLuvEncoding = 3003;\r\n    var RGBM7Encoding = 3004;\r\n    var RGBM16Encoding = 3005;\r\n    var RGBDEncoding = 3006;\r\n    var BasicDepthPacking = 3200;\r\n    var RGBADepthPacking = 3201;\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    exports.Math = {\r\n\r\n    \tDEG2RAD: Math.PI / 180,\r\n    \tRAD2DEG: 180 / Math.PI,\r\n\r\n    \tgenerateUUID: function () {\r\n\r\n    \t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n    \t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n    \t\tvar uuid = new Array( 36 );\r\n    \t\tvar rnd = 0, r;\r\n\r\n    \t\treturn function generateUUID() {\r\n\r\n    \t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n    \t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n    \t\t\t\t\tuuid[ i ] = '-';\r\n\r\n    \t\t\t\t} else if ( i === 14 ) {\r\n\r\n    \t\t\t\t\tuuid[ i ] = '4';\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n    \t\t\t\t\tr = rnd & 0xf;\r\n    \t\t\t\t\trnd = rnd >> 4;\r\n    \t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn uuid.join( '' );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclamp: function ( value, min, max ) {\r\n\r\n    \t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n    \t},\r\n\r\n    \t// compute euclidian modulo of m % n\r\n    \t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n    \teuclideanModulo: function ( n, m ) {\r\n\r\n    \t\treturn ( ( n % m ) + m ) % m;\r\n\r\n    \t},\r\n\r\n    \t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n    \tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n    \t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n    \t},\r\n\r\n    \t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n    \tsmoothstep: function ( x, min, max ) {\r\n\r\n    \t\tif ( x <= min ) return 0;\r\n    \t\tif ( x >= max ) return 1;\r\n\r\n    \t\tx = ( x - min ) / ( max - min );\r\n\r\n    \t\treturn x * x * ( 3 - 2 * x );\r\n\r\n    \t},\r\n\r\n    \tsmootherstep: function ( x, min, max ) {\r\n\r\n    \t\tif ( x <= min ) return 0;\r\n    \t\tif ( x >= max ) return 1;\r\n\r\n    \t\tx = ( x - min ) / ( max - min );\r\n\r\n    \t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n    \t},\r\n\r\n    \trandom16: function () {\r\n\r\n    \t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\r\n    \t\treturn Math.random();\r\n\r\n    \t},\r\n\r\n    \t// Random integer from <low, high> interval\r\n\r\n    \trandInt: function ( low, high ) {\r\n\r\n    \t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n    \t},\r\n\r\n    \t// Random float from <low, high> interval\r\n\r\n    \trandFloat: function ( low, high ) {\r\n\r\n    \t\treturn low + Math.random() * ( high - low );\r\n\r\n    \t},\r\n\r\n    \t// Random float from <-range/2, range/2> interval\r\n\r\n    \trandFloatSpread: function ( range ) {\r\n\r\n    \t\treturn range * ( 0.5 - Math.random() );\r\n\r\n    \t},\r\n\r\n    \tdegToRad: function ( degrees ) {\r\n\r\n    \t\treturn degrees * exports.Math.DEG2RAD;\r\n\r\n    \t},\r\n\r\n    \tradToDeg: function ( radians ) {\r\n\r\n    \t\treturn radians * exports.Math.RAD2DEG;\r\n\r\n    \t},\r\n\r\n    \tisPowerOfTwo: function ( value ) {\r\n\r\n    \t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n    \t},\r\n\r\n    \tnearestPowerOfTwo: function ( value ) {\r\n\r\n    \t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\r\n\r\n    \t},\r\n\r\n    \tnextPowerOfTwo: function ( value ) {\r\n\r\n    \t\tvalue --;\r\n    \t\tvalue |= value >> 1;\r\n    \t\tvalue |= value >> 2;\r\n    \t\tvalue |= value >> 4;\r\n    \t\tvalue |= value >> 8;\r\n    \t\tvalue |= value >> 16;\r\n    \t\tvalue ++;\r\n\r\n    \t\treturn value;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author philogb / http://blog.thejit.org/\r\n     * @author egraether / http://egraether.com/\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     */\r\n\r\n    function Vector2( x, y ) {\r\n\r\n    \tthis.x = x || 0;\r\n    \tthis.y = y || 0;\r\n\r\n    }\r\n\r\n    Vector2.prototype = {\r\n\r\n    \tconstructor: Vector2,\r\n\r\n    \tisVector2: true,\r\n\r\n    \tget width() {\r\n\r\n    \t\treturn this.x;\r\n\r\n    \t},\r\n\r\n    \tset width( value ) {\r\n\r\n    \t\tthis.x = value;\r\n\r\n    \t},\r\n\r\n    \tget height() {\r\n\r\n    \t\treturn this.y;\r\n\r\n    \t},\r\n\r\n    \tset height( value ) {\r\n\r\n    \t\tthis.y = value;\r\n\r\n    \t},\r\n\r\n    \t//\r\n\r\n    \tset: function ( x, y ) {\r\n\r\n    \t\tthis.x = x;\r\n    \t\tthis.y = y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetScalar: function ( scalar ) {\r\n\r\n    \t\tthis.x = scalar;\r\n    \t\tthis.y = scalar;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetX: function ( x ) {\r\n\r\n    \t\tthis.x = x;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetY: function ( y ) {\r\n\r\n    \t\tthis.y = y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetComponent: function ( index, value ) {\r\n\r\n    \t\tswitch ( index ) {\r\n\r\n    \t\t\tcase 0: this.x = value; break;\r\n    \t\t\tcase 1: this.y = value; break;\r\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tgetComponent: function ( index ) {\r\n\r\n    \t\tswitch ( index ) {\r\n\r\n    \t\t\tcase 0: return this.x;\r\n    \t\t\tcase 1: return this.y;\r\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this.x, this.y );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( v ) {\r\n\r\n    \t\tthis.x = v.x;\r\n    \t\tthis.y = v.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tadd: function ( v, w ) {\r\n\r\n    \t\tif ( w !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n    \t\t\treturn this.addVectors( v, w );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.x += v.x;\r\n    \t\tthis.y += v.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddScalar: function ( s ) {\r\n\r\n    \t\tthis.x += s;\r\n    \t\tthis.y += s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddVectors: function ( a, b ) {\r\n\r\n    \t\tthis.x = a.x + b.x;\r\n    \t\tthis.y = a.y + b.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddScaledVector: function ( v, s ) {\r\n\r\n    \t\tthis.x += v.x * s;\r\n    \t\tthis.y += v.y * s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsub: function ( v, w ) {\r\n\r\n    \t\tif ( w !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n    \t\t\treturn this.subVectors( v, w );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.x -= v.x;\r\n    \t\tthis.y -= v.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsubScalar: function ( s ) {\r\n\r\n    \t\tthis.x -= s;\r\n    \t\tthis.y -= s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsubVectors: function ( a, b ) {\r\n\r\n    \t\tthis.x = a.x - b.x;\r\n    \t\tthis.y = a.y - b.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiply: function ( v ) {\r\n\r\n    \t\tthis.x *= v.x;\r\n    \t\tthis.y *= v.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiplyScalar: function ( scalar ) {\r\n\r\n    \t\tif ( isFinite( scalar ) ) {\r\n\r\n    \t\t\tthis.x *= scalar;\r\n    \t\t\tthis.y *= scalar;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.x = 0;\r\n    \t\t\tthis.y = 0;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdivide: function ( v ) {\r\n\r\n    \t\tthis.x /= v.x;\r\n    \t\tthis.y /= v.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdivideScalar: function ( scalar ) {\r\n\r\n    \t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n    \t},\r\n\r\n    \tmin: function ( v ) {\r\n\r\n    \t\tthis.x = Math.min( this.x, v.x );\r\n    \t\tthis.y = Math.min( this.y, v.y );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmax: function ( v ) {\r\n\r\n    \t\tthis.x = Math.max( this.x, v.x );\r\n    \t\tthis.y = Math.max( this.y, v.y );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclamp: function ( min, max ) {\r\n\r\n    \t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n    \t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n    \t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclampScalar: function () {\r\n\r\n    \t\tvar min, max;\r\n\r\n    \t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n    \t\t\tif ( min === undefined ) {\r\n\r\n    \t\t\t\tmin = new Vector2();\r\n    \t\t\t\tmax = new Vector2();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tmin.set( minVal, minVal );\r\n    \t\t\tmax.set( maxVal, maxVal );\r\n\r\n    \t\t\treturn this.clamp( min, max );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclampLength: function ( min, max ) {\r\n\r\n    \t\tvar length = this.length();\r\n\r\n    \t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n    \t},\r\n\r\n    \tfloor: function () {\r\n\r\n    \t\tthis.x = Math.floor( this.x );\r\n    \t\tthis.y = Math.floor( this.y );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tceil: function () {\r\n\r\n    \t\tthis.x = Math.ceil( this.x );\r\n    \t\tthis.y = Math.ceil( this.y );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tround: function () {\r\n\r\n    \t\tthis.x = Math.round( this.x );\r\n    \t\tthis.y = Math.round( this.y );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \troundToZero: function () {\r\n\r\n    \t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n    \t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tnegate: function () {\r\n\r\n    \t\tthis.x = - this.x;\r\n    \t\tthis.y = - this.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdot: function ( v ) {\r\n\r\n    \t\treturn this.x * v.x + this.y * v.y;\r\n\r\n    \t},\r\n\r\n    \tlengthSq: function () {\r\n\r\n    \t\treturn this.x * this.x + this.y * this.y;\r\n\r\n    \t},\r\n\r\n    \tlength: function () {\r\n\r\n    \t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n    \t},\r\n\r\n    \tlengthManhattan: function() {\r\n\r\n    \t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n    \t},\r\n\r\n    \tnormalize: function () {\r\n\r\n    \t\treturn this.divideScalar( this.length() );\r\n\r\n    \t},\r\n\r\n    \tangle: function () {\r\n\r\n    \t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n    \t\tvar angle = Math.atan2( this.y, this.x );\r\n\r\n    \t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\r\n    \t\treturn angle;\r\n\r\n    \t},\r\n\r\n    \tdistanceTo: function ( v ) {\r\n\r\n    \t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n    \t},\r\n\r\n    \tdistanceToSquared: function ( v ) {\r\n\r\n    \t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n    \t\treturn dx * dx + dy * dy;\r\n\r\n    \t},\r\n\r\n    \tdistanceToManhattan: function ( v ) {\r\n\r\n    \t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\r\n\r\n    \t},\r\n\r\n    \tsetLength: function ( length ) {\r\n\r\n    \t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n    \t},\r\n\r\n    \tlerp: function ( v, alpha ) {\r\n\r\n    \t\tthis.x += ( v.x - this.x ) * alpha;\r\n    \t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n    \t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n    \t},\r\n\r\n    \tequals: function ( v ) {\r\n\r\n    \t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n    \t},\r\n\r\n    \tfromArray: function ( array, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tthis.x = array[ offset ];\r\n    \t\tthis.y = array[ offset + 1 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoArray: function ( array, offset ) {\r\n\r\n    \t\tif ( array === undefined ) array = [];\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tarray[ offset ] = this.x;\r\n    \t\tarray[ offset + 1 ] = this.y;\r\n\r\n    \t\treturn array;\r\n\r\n    \t},\r\n\r\n    \tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tindex = index * attribute.itemSize + offset;\r\n\r\n    \t\tthis.x = attribute.array[ index ];\r\n    \t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \trotateAround: function ( center, angle ) {\r\n\r\n    \t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n    \t\tvar x = this.x - center.x;\r\n    \t\tvar y = this.y - center.y;\r\n\r\n    \t\tthis.x = x * c - y * s + center.x;\r\n    \t\tthis.y = x * s + y * c + center.y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author szimek / https://github.com/szimek/\r\n     */\r\n\r\n    function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n    \tObject.defineProperty( this, 'id', { value: TextureIdCount() } );\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.name = '';\r\n    \tthis.sourceFile = '';\r\n\r\n    \tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\r\n    \tthis.mipmaps = [];\r\n\r\n    \tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\r\n\r\n    \tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\r\n    \tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\r\n\r\n    \tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\r\n    \tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\r\n\r\n    \tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n    \tthis.format = format !== undefined ? format : RGBAFormat;\r\n    \tthis.type = type !== undefined ? type : UnsignedByteType;\r\n\r\n    \tthis.offset = new Vector2( 0, 0 );\r\n    \tthis.repeat = new Vector2( 1, 1 );\r\n\r\n    \tthis.generateMipmaps = true;\r\n    \tthis.premultiplyAlpha = false;\r\n    \tthis.flipY = true;\r\n    \tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\r\n    \t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n    \t//\r\n    \t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n    \t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n    \tthis.encoding = encoding !== undefined ? encoding :  LinearEncoding;\r\n\r\n    \tthis.version = 0;\r\n    \tthis.onUpdate = null;\r\n\r\n    }\r\n\r\n    Texture.DEFAULT_IMAGE = undefined;\r\n    Texture.DEFAULT_MAPPING = UVMapping;\r\n\r\n    Texture.prototype = {\r\n\r\n    \tconstructor: Texture,\r\n\r\n    \tisTexture: true,\r\n\r\n    \tset needsUpdate( value ) {\r\n\r\n    \t\tif ( value === true ) this.version ++;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tthis.image = source.image;\r\n    \t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n    \t\tthis.mapping = source.mapping;\r\n\r\n    \t\tthis.wrapS = source.wrapS;\r\n    \t\tthis.wrapT = source.wrapT;\r\n\r\n    \t\tthis.magFilter = source.magFilter;\r\n    \t\tthis.minFilter = source.minFilter;\r\n\r\n    \t\tthis.anisotropy = source.anisotropy;\r\n\r\n    \t\tthis.format = source.format;\r\n    \t\tthis.type = source.type;\r\n\r\n    \t\tthis.offset.copy( source.offset );\r\n    \t\tthis.repeat.copy( source.repeat );\r\n\r\n    \t\tthis.generateMipmaps = source.generateMipmaps;\r\n    \t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n    \t\tthis.flipY = source.flipY;\r\n    \t\tthis.unpackAlignment = source.unpackAlignment;\r\n    \t\tthis.encoding = source.encoding;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function ( meta ) {\r\n\r\n    \t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n    \t\t\treturn meta.textures[ this.uuid ];\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction getDataURL( image ) {\r\n\r\n    \t\t\tvar canvas;\r\n\r\n    \t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n    \t\t\t\tcanvas = image;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n    \t\t\t\tcanvas.width = image.width;\r\n    \t\t\t\tcanvas.height = image.height;\r\n\r\n    \t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n    \t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar output = {\r\n    \t\t\tmetadata: {\r\n    \t\t\t\tversion: 4.4,\r\n    \t\t\t\ttype: 'Texture',\r\n    \t\t\t\tgenerator: 'Texture.toJSON'\r\n    \t\t\t},\r\n\r\n    \t\t\tuuid: this.uuid,\r\n    \t\t\tname: this.name,\r\n\r\n    \t\t\tmapping: this.mapping,\r\n\r\n    \t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n    \t\t\toffset: [ this.offset.x, this.offset.y ],\r\n    \t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n    \t\t\tminFilter: this.minFilter,\r\n    \t\t\tmagFilter: this.magFilter,\r\n    \t\t\tanisotropy: this.anisotropy,\r\n\r\n    \t\t\tflipY: this.flipY\r\n    \t\t};\r\n\r\n    \t\tif ( this.image !== undefined ) {\r\n\r\n    \t\t\t// TODO: Move to THREE.Image\r\n\r\n    \t\t\tvar image = this.image;\r\n\r\n    \t\t\tif ( image.uuid === undefined ) {\r\n\r\n    \t\t\t\timage.uuid = exports.Math.generateUUID(); // UGH\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n    \t\t\t\tmeta.images[ image.uuid ] = {\r\n    \t\t\t\t\tuuid: image.uuid,\r\n    \t\t\t\t\turl: getDataURL( image )\r\n    \t\t\t\t};\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\toutput.image = image.uuid;\r\n\r\n    \t\t}\r\n\r\n    \t\tmeta.textures[ this.uuid ] = output;\r\n\r\n    \t\treturn output;\r\n\r\n    \t},\r\n\r\n    \tdispose: function () {\r\n\r\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n    \t},\r\n\r\n    \ttransformUv: function ( uv ) {\r\n\r\n    \t\tif ( this.mapping !== UVMapping )  return;\r\n\r\n    \t\tuv.multiply( this.repeat );\r\n    \t\tuv.add( this.offset );\r\n\r\n    \t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n    \t\t\tswitch ( this.wrapS ) {\r\n\r\n    \t\t\t\tcase RepeatWrapping:\r\n\r\n    \t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n    \t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n    \t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n    \t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n    \t\t\tswitch ( this.wrapT ) {\r\n\r\n    \t\t\t\tcase RepeatWrapping:\r\n\r\n    \t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase ClampToEdgeWrapping:\r\n\r\n    \t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase MirroredRepeatWrapping:\r\n\r\n    \t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n    \t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.flipY ) {\r\n\r\n    \t\t\tuv.y = 1 - uv.y;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    Object.assign( Texture.prototype, EventDispatcher.prototype );\r\n\r\n    var count = 0;\r\n    function TextureIdCount() { return count++; };\r\n\r\n    /**\r\n     * @author supereggbert / http://www.paulbrunt.co.uk/\r\n     * @author philogb / http://blog.thejit.org/\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author egraether / http://egraether.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     */\r\n\r\n    function Vector4( x, y, z, w ) {\r\n\r\n    \tthis.x = x || 0;\r\n    \tthis.y = y || 0;\r\n    \tthis.z = z || 0;\r\n    \tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n    }\r\n\r\n    Vector4.prototype = {\r\n\r\n    \tconstructor: Vector4,\r\n\r\n    \tisVector4: true,\r\n\r\n    \tset: function ( x, y, z, w ) {\r\n\r\n    \t\tthis.x = x;\r\n    \t\tthis.y = y;\r\n    \t\tthis.z = z;\r\n    \t\tthis.w = w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetScalar: function ( scalar ) {\r\n\r\n    \t\tthis.x = scalar;\r\n    \t\tthis.y = scalar;\r\n    \t\tthis.z = scalar;\r\n    \t\tthis.w = scalar;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetX: function ( x ) {\r\n\r\n    \t\tthis.x = x;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetY: function ( y ) {\r\n\r\n    \t\tthis.y = y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetZ: function ( z ) {\r\n\r\n    \t\tthis.z = z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetW: function ( w ) {\r\n\r\n    \t\tthis.w = w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetComponent: function ( index, value ) {\r\n\r\n    \t\tswitch ( index ) {\r\n\r\n    \t\t\tcase 0: this.x = value; break;\r\n    \t\t\tcase 1: this.y = value; break;\r\n    \t\t\tcase 2: this.z = value; break;\r\n    \t\t\tcase 3: this.w = value; break;\r\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tgetComponent: function ( index ) {\r\n\r\n    \t\tswitch ( index ) {\r\n\r\n    \t\t\tcase 0: return this.x;\r\n    \t\t\tcase 1: return this.y;\r\n    \t\t\tcase 2: return this.z;\r\n    \t\t\tcase 3: return this.w;\r\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( v ) {\r\n\r\n    \t\tthis.x = v.x;\r\n    \t\tthis.y = v.y;\r\n    \t\tthis.z = v.z;\r\n    \t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tadd: function ( v, w ) {\r\n\r\n    \t\tif ( w !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n    \t\t\treturn this.addVectors( v, w );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.x += v.x;\r\n    \t\tthis.y += v.y;\r\n    \t\tthis.z += v.z;\r\n    \t\tthis.w += v.w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddScalar: function ( s ) {\r\n\r\n    \t\tthis.x += s;\r\n    \t\tthis.y += s;\r\n    \t\tthis.z += s;\r\n    \t\tthis.w += s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddVectors: function ( a, b ) {\r\n\r\n    \t\tthis.x = a.x + b.x;\r\n    \t\tthis.y = a.y + b.y;\r\n    \t\tthis.z = a.z + b.z;\r\n    \t\tthis.w = a.w + b.w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddScaledVector: function ( v, s ) {\r\n\r\n    \t\tthis.x += v.x * s;\r\n    \t\tthis.y += v.y * s;\r\n    \t\tthis.z += v.z * s;\r\n    \t\tthis.w += v.w * s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsub: function ( v, w ) {\r\n\r\n    \t\tif ( w !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n    \t\t\treturn this.subVectors( v, w );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.x -= v.x;\r\n    \t\tthis.y -= v.y;\r\n    \t\tthis.z -= v.z;\r\n    \t\tthis.w -= v.w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsubScalar: function ( s ) {\r\n\r\n    \t\tthis.x -= s;\r\n    \t\tthis.y -= s;\r\n    \t\tthis.z -= s;\r\n    \t\tthis.w -= s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsubVectors: function ( a, b ) {\r\n\r\n    \t\tthis.x = a.x - b.x;\r\n    \t\tthis.y = a.y - b.y;\r\n    \t\tthis.z = a.z - b.z;\r\n    \t\tthis.w = a.w - b.w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiplyScalar: function ( scalar ) {\r\n\r\n    \t\tif ( isFinite( scalar ) ) {\r\n\r\n    \t\t\tthis.x *= scalar;\r\n    \t\t\tthis.y *= scalar;\r\n    \t\t\tthis.z *= scalar;\r\n    \t\t\tthis.w *= scalar;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.x = 0;\r\n    \t\t\tthis.y = 0;\r\n    \t\t\tthis.z = 0;\r\n    \t\t\tthis.w = 0;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tapplyMatrix4: function ( m ) {\r\n\r\n    \t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\r\n    \t\tvar e = m.elements;\r\n\r\n    \t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n    \t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n    \t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n    \t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdivideScalar: function ( scalar ) {\r\n\r\n    \t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n    \t},\r\n\r\n    \tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n    \t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n    \t\t// q is assumed to be normalized\r\n\r\n    \t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n    \t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n    \t\tif ( s < 0.0001 ) {\r\n\r\n    \t\t\t this.x = 1;\r\n    \t\t\t this.y = 0;\r\n    \t\t\t this.z = 0;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t this.x = q.x / s;\r\n    \t\t\t this.y = q.y / s;\r\n    \t\t\t this.z = q.z / s;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n    \t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n    \t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n    \t\tvar angle, x, y, z,\t\t// variables for result\r\n    \t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n    \t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n    \t\t\tte = m.elements,\r\n\r\n    \t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n    \t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n    \t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n    \t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n    \t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n    \t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n    \t\t\t// singularity found\r\n    \t\t\t// first check for identity matrix which must have +1 for all terms\r\n    \t\t\t// in leading diagonal and zero in other terms\r\n\r\n    \t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n    \t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n    \t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n    \t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n    \t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n    \t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n    \t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// otherwise this singularity is angle = 180\r\n\r\n    \t\t\tangle = Math.PI;\r\n\r\n    \t\t\tvar xx = ( m11 + 1 ) / 2;\r\n    \t\t\tvar yy = ( m22 + 1 ) / 2;\r\n    \t\t\tvar zz = ( m33 + 1 ) / 2;\r\n    \t\t\tvar xy = ( m12 + m21 ) / 4;\r\n    \t\t\tvar xz = ( m13 + m31 ) / 4;\r\n    \t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n    \t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n    \t\t\t\t// m11 is the largest diagonal term\r\n\r\n    \t\t\t\tif ( xx < epsilon ) {\r\n\r\n    \t\t\t\t\tx = 0;\r\n    \t\t\t\t\ty = 0.707106781;\r\n    \t\t\t\t\tz = 0.707106781;\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tx = Math.sqrt( xx );\r\n    \t\t\t\t\ty = xy / x;\r\n    \t\t\t\t\tz = xz / x;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( yy > zz ) {\r\n\r\n    \t\t\t\t// m22 is the largest diagonal term\r\n\r\n    \t\t\t\tif ( yy < epsilon ) {\r\n\r\n    \t\t\t\t\tx = 0.707106781;\r\n    \t\t\t\t\ty = 0;\r\n    \t\t\t\t\tz = 0.707106781;\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\ty = Math.sqrt( yy );\r\n    \t\t\t\t\tx = xy / y;\r\n    \t\t\t\t\tz = yz / y;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n    \t\t\t\tif ( zz < epsilon ) {\r\n\r\n    \t\t\t\t\tx = 0.707106781;\r\n    \t\t\t\t\ty = 0.707106781;\r\n    \t\t\t\t\tz = 0;\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tz = Math.sqrt( zz );\r\n    \t\t\t\t\tx = xz / z;\r\n    \t\t\t\t\ty = yz / z;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.set( x, y, z, angle );\r\n\r\n    \t\t\treturn this; // return 180 deg rotation\r\n\r\n    \t\t}\r\n\r\n    \t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n    \t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n    \t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\r\n    \t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n    \t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n    \t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n    \t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n    \t\tthis.x = ( m32 - m23 ) / s;\r\n    \t\tthis.y = ( m13 - m31 ) / s;\r\n    \t\tthis.z = ( m21 - m12 ) / s;\r\n    \t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmin: function ( v ) {\r\n\r\n    \t\tthis.x = Math.min( this.x, v.x );\r\n    \t\tthis.y = Math.min( this.y, v.y );\r\n    \t\tthis.z = Math.min( this.z, v.z );\r\n    \t\tthis.w = Math.min( this.w, v.w );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmax: function ( v ) {\r\n\r\n    \t\tthis.x = Math.max( this.x, v.x );\r\n    \t\tthis.y = Math.max( this.y, v.y );\r\n    \t\tthis.z = Math.max( this.z, v.z );\r\n    \t\tthis.w = Math.max( this.w, v.w );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclamp: function ( min, max ) {\r\n\r\n    \t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n    \t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n    \t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n    \t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n    \t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclampScalar: function () {\r\n\r\n    \t\tvar min, max;\r\n\r\n    \t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n    \t\t\tif ( min === undefined ) {\r\n\r\n    \t\t\t\tmin = new Vector4();\r\n    \t\t\t\tmax = new Vector4();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n    \t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n    \t\t\treturn this.clamp( min, max );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tfloor: function () {\r\n\r\n    \t\tthis.x = Math.floor( this.x );\r\n    \t\tthis.y = Math.floor( this.y );\r\n    \t\tthis.z = Math.floor( this.z );\r\n    \t\tthis.w = Math.floor( this.w );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tceil: function () {\r\n\r\n    \t\tthis.x = Math.ceil( this.x );\r\n    \t\tthis.y = Math.ceil( this.y );\r\n    \t\tthis.z = Math.ceil( this.z );\r\n    \t\tthis.w = Math.ceil( this.w );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tround: function () {\r\n\r\n    \t\tthis.x = Math.round( this.x );\r\n    \t\tthis.y = Math.round( this.y );\r\n    \t\tthis.z = Math.round( this.z );\r\n    \t\tthis.w = Math.round( this.w );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \troundToZero: function () {\r\n\r\n    \t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n    \t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n    \t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n    \t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tnegate: function () {\r\n\r\n    \t\tthis.x = - this.x;\r\n    \t\tthis.y = - this.y;\r\n    \t\tthis.z = - this.z;\r\n    \t\tthis.w = - this.w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdot: function ( v ) {\r\n\r\n    \t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n    \t},\r\n\r\n    \tlengthSq: function () {\r\n\r\n    \t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n    \t},\r\n\r\n    \tlength: function () {\r\n\r\n    \t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n    \t},\r\n\r\n    \tlengthManhattan: function () {\r\n\r\n    \t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n    \t},\r\n\r\n    \tnormalize: function () {\r\n\r\n    \t\treturn this.divideScalar( this.length() );\r\n\r\n    \t},\r\n\r\n    \tsetLength: function ( length ) {\r\n\r\n    \t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n    \t},\r\n\r\n    \tlerp: function ( v, alpha ) {\r\n\r\n    \t\tthis.x += ( v.x - this.x ) * alpha;\r\n    \t\tthis.y += ( v.y - this.y ) * alpha;\r\n    \t\tthis.z += ( v.z - this.z ) * alpha;\r\n    \t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n    \t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n    \t},\r\n\r\n    \tequals: function ( v ) {\r\n\r\n    \t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n    \t},\r\n\r\n    \tfromArray: function ( array, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tthis.x = array[ offset ];\r\n    \t\tthis.y = array[ offset + 1 ];\r\n    \t\tthis.z = array[ offset + 2 ];\r\n    \t\tthis.w = array[ offset + 3 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoArray: function ( array, offset ) {\r\n\r\n    \t\tif ( array === undefined ) array = [];\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tarray[ offset ] = this.x;\r\n    \t\tarray[ offset + 1 ] = this.y;\r\n    \t\tarray[ offset + 2 ] = this.z;\r\n    \t\tarray[ offset + 3 ] = this.w;\r\n\r\n    \t\treturn array;\r\n\r\n    \t},\r\n\r\n    \tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tindex = index * attribute.itemSize + offset;\r\n\r\n    \t\tthis.x = attribute.array[ index ];\r\n    \t\tthis.y = attribute.array[ index + 1 ];\r\n    \t\tthis.z = attribute.array[ index + 2 ];\r\n    \t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author szimek / https://github.com/szimek/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author Marius Kintel / https://github.com/kintel\r\n     */\r\n\r\n    /*\r\n     In options, we can specify:\r\n     * Texture parameters for an auto-generated target texture\r\n     * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n    */\r\n    function WebGLRenderTarget( width, height, options ) {\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.width = width;\r\n    \tthis.height = height;\r\n\r\n    \tthis.scissor = new Vector4( 0, 0, width, height );\r\n    \tthis.scissorTest = false;\r\n\r\n    \tthis.viewport = new Vector4( 0, 0, width, height );\r\n\r\n    \toptions = options || {};\r\n\r\n    \tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\r\n\r\n    \tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n\r\n    \tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n    \tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n    \tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\r\n\r\n    }\r\n\r\n    Object.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\r\n\r\n    \tisWebGLRenderTarget: true,\r\n\r\n    \tsetSize: function ( width, height ) {\r\n\r\n    \t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n    \t\t\tthis.width = width;\r\n    \t\t\tthis.height = height;\r\n\r\n    \t\t\tthis.dispose();\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.viewport.set( 0, 0, width, height );\r\n    \t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tthis.width = source.width;\r\n    \t\tthis.height = source.height;\r\n\r\n    \t\tthis.viewport.copy( source.viewport );\r\n\r\n    \t\tthis.texture = source.texture.clone();\r\n\r\n    \t\tthis.depthBuffer = source.depthBuffer;\r\n    \t\tthis.stencilBuffer = source.stencilBuffer;\r\n    \t\tthis.depthTexture = source.depthTexture;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdispose: function () {\r\n\r\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com\r\n     */\r\n\r\n    function WebGLRenderTargetCube( width, height, options ) {\r\n\r\n    \tWebGLRenderTarget.call( this, width, height, options );\r\n\r\n    \tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n    \tthis.activeMipMapLevel = 0;\r\n\r\n    }\r\n\r\n    WebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\r\n    WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\r\n\r\n    WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    function Quaternion( x, y, z, w ) {\r\n\r\n    \tthis._x = x || 0;\r\n    \tthis._y = y || 0;\r\n    \tthis._z = z || 0;\r\n    \tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n    }\r\n\r\n    Quaternion.prototype = {\r\n\r\n    \tconstructor: Quaternion,\r\n\r\n    \tget x () {\r\n\r\n    \t\treturn this._x;\r\n\r\n    \t},\r\n\r\n    \tset x ( value ) {\r\n\r\n    \t\tthis._x = value;\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t},\r\n\r\n    \tget y () {\r\n\r\n    \t\treturn this._y;\r\n\r\n    \t},\r\n\r\n    \tset y ( value ) {\r\n\r\n    \t\tthis._y = value;\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t},\r\n\r\n    \tget z () {\r\n\r\n    \t\treturn this._z;\r\n\r\n    \t},\r\n\r\n    \tset z ( value ) {\r\n\r\n    \t\tthis._z = value;\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t},\r\n\r\n    \tget w () {\r\n\r\n    \t\treturn this._w;\r\n\r\n    \t},\r\n\r\n    \tset w ( value ) {\r\n\r\n    \t\tthis._w = value;\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t},\r\n\r\n    \tset: function ( x, y, z, w ) {\r\n\r\n    \t\tthis._x = x;\r\n    \t\tthis._y = y;\r\n    \t\tthis._z = z;\r\n    \t\tthis._w = w;\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( quaternion ) {\r\n\r\n    \t\tthis._x = quaternion.x;\r\n    \t\tthis._y = quaternion.y;\r\n    \t\tthis._z = quaternion.z;\r\n    \t\tthis._w = quaternion.w;\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromEuler: function ( euler, update ) {\r\n\r\n    \t\tif ( (euler && euler.isEuler) === false ) {\r\n\r\n    \t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n    \t\t}\r\n\r\n    \t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n    \t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n    \t\t//\tcontent/SpinCalc.m\r\n\r\n    \t\tvar c1 = Math.cos( euler._x / 2 );\r\n    \t\tvar c2 = Math.cos( euler._y / 2 );\r\n    \t\tvar c3 = Math.cos( euler._z / 2 );\r\n    \t\tvar s1 = Math.sin( euler._x / 2 );\r\n    \t\tvar s2 = Math.sin( euler._y / 2 );\r\n    \t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n    \t\tvar order = euler.order;\r\n\r\n    \t\tif ( order === 'XYZ' ) {\r\n\r\n    \t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n    \t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n    \t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n    \t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    \t\t} else if ( order === 'YXZ' ) {\r\n\r\n    \t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n    \t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n    \t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n    \t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    \t\t} else if ( order === 'ZXY' ) {\r\n\r\n    \t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n    \t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n    \t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n    \t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    \t\t} else if ( order === 'ZYX' ) {\r\n\r\n    \t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n    \t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n    \t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n    \t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    \t\t} else if ( order === 'YZX' ) {\r\n\r\n    \t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n    \t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n    \t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n    \t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n    \t\t} else if ( order === 'XZY' ) {\r\n\r\n    \t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n    \t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n    \t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n    \t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n    \t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n    \t\t// assumes axis is normalized\r\n\r\n    \t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n    \t\tthis._x = axis.x * s;\r\n    \t\tthis._y = axis.y * s;\r\n    \t\tthis._z = axis.z * s;\r\n    \t\tthis._w = Math.cos( halfAngle );\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromRotationMatrix: function ( m ) {\r\n\r\n    \t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n    \t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n    \t\tvar te = m.elements,\r\n\r\n    \t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n    \t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n    \t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n    \t\t\ttrace = m11 + m22 + m33,\r\n    \t\t\ts;\r\n\r\n    \t\tif ( trace > 0 ) {\r\n\r\n    \t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n    \t\t\tthis._w = 0.25 / s;\r\n    \t\t\tthis._x = ( m32 - m23 ) * s;\r\n    \t\t\tthis._y = ( m13 - m31 ) * s;\r\n    \t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n    \t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n    \t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n    \t\t\tthis._w = ( m32 - m23 ) / s;\r\n    \t\t\tthis._x = 0.25 * s;\r\n    \t\t\tthis._y = ( m12 + m21 ) / s;\r\n    \t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n    \t\t} else if ( m22 > m33 ) {\r\n\r\n    \t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n    \t\t\tthis._w = ( m13 - m31 ) / s;\r\n    \t\t\tthis._x = ( m12 + m21 ) / s;\r\n    \t\t\tthis._y = 0.25 * s;\r\n    \t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n    \t\t\tthis._w = ( m21 - m12 ) / s;\r\n    \t\t\tthis._x = ( m13 + m31 ) / s;\r\n    \t\t\tthis._y = ( m23 + m32 ) / s;\r\n    \t\t\tthis._z = 0.25 * s;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromUnitVectors: function () {\r\n\r\n    \t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n    \t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n    \t\tvar v1, r;\r\n\r\n    \t\tvar EPS = 0.000001;\r\n\r\n    \t\treturn function setFromUnitVectors( vFrom, vTo ) {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\r\n    \t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n    \t\t\tif ( r < EPS ) {\r\n\r\n    \t\t\t\tr = 0;\r\n\r\n    \t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n    \t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis._x = v1.x;\r\n    \t\t\tthis._y = v1.y;\r\n    \t\t\tthis._z = v1.z;\r\n    \t\t\tthis._w = r;\r\n\r\n    \t\t\treturn this.normalize();\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tinverse: function () {\r\n\r\n    \t\treturn this.conjugate().normalize();\r\n\r\n    \t},\r\n\r\n    \tconjugate: function () {\r\n\r\n    \t\tthis._x *= - 1;\r\n    \t\tthis._y *= - 1;\r\n    \t\tthis._z *= - 1;\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdot: function ( v ) {\r\n\r\n    \t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n    \t},\r\n\r\n    \tlengthSq: function () {\r\n\r\n    \t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n    \t},\r\n\r\n    \tlength: function () {\r\n\r\n    \t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n    \t},\r\n\r\n    \tnormalize: function () {\r\n\r\n    \t\tvar l = this.length();\r\n\r\n    \t\tif ( l === 0 ) {\r\n\r\n    \t\t\tthis._x = 0;\r\n    \t\t\tthis._y = 0;\r\n    \t\t\tthis._z = 0;\r\n    \t\t\tthis._w = 1;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tl = 1 / l;\r\n\r\n    \t\t\tthis._x = this._x * l;\r\n    \t\t\tthis._y = this._y * l;\r\n    \t\t\tthis._z = this._z * l;\r\n    \t\t\tthis._w = this._w * l;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiply: function ( q, p ) {\r\n\r\n    \t\tif ( p !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n    \t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this.multiplyQuaternions( this, q );\r\n\r\n    \t},\r\n\r\n    \tpremultiply: function ( q ) {\r\n\r\n    \t\treturn this.multiplyQuaternions( q, this );\r\n\r\n    \t},\r\n\r\n    \tmultiplyQuaternions: function ( a, b ) {\r\n\r\n    \t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n    \t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n    \t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n    \t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n    \t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n    \t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n    \t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tslerp: function ( qb, t ) {\r\n\r\n    \t\tif ( t === 0 ) return this;\r\n    \t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n    \t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n    \t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n    \t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n    \t\tif ( cosHalfTheta < 0 ) {\r\n\r\n    \t\t\tthis._w = - qb._w;\r\n    \t\t\tthis._x = - qb._x;\r\n    \t\t\tthis._y = - qb._y;\r\n    \t\t\tthis._z = - qb._z;\r\n\r\n    \t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.copy( qb );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n    \t\t\tthis._w = w;\r\n    \t\t\tthis._x = x;\r\n    \t\t\tthis._y = y;\r\n    \t\t\tthis._z = z;\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n    \t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n    \t\t\tthis._w = 0.5 * ( w + this._w );\r\n    \t\t\tthis._x = 0.5 * ( x + this._x );\r\n    \t\t\tthis._y = 0.5 * ( y + this._y );\r\n    \t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n    \t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n    \t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n    \t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n    \t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n    \t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n    \t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( quaternion ) {\r\n\r\n    \t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n    \t},\r\n\r\n    \tfromArray: function ( array, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tthis._x = array[ offset ];\r\n    \t\tthis._y = array[ offset + 1 ];\r\n    \t\tthis._z = array[ offset + 2 ];\r\n    \t\tthis._w = array[ offset + 3 ];\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoArray: function ( array, offset ) {\r\n\r\n    \t\tif ( array === undefined ) array = [];\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tarray[ offset ] = this._x;\r\n    \t\tarray[ offset + 1 ] = this._y;\r\n    \t\tarray[ offset + 2 ] = this._z;\r\n    \t\tarray[ offset + 3 ] = this._w;\r\n\r\n    \t\treturn array;\r\n\r\n    \t},\r\n\r\n    \tonChange: function ( callback ) {\r\n\r\n    \t\tthis.onChangeCallback = callback;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tonChangeCallback: function () {}\r\n\r\n    };\r\n\r\n    Object.assign( Quaternion, {\r\n\r\n    \tslerp: function( qa, qb, qm, t ) {\r\n\r\n    \t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n    \t},\r\n\r\n    \tslerpFlat: function(\r\n    \t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n    \t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n    \t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n    \t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n    \t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n    \t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n    \t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n    \t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n    \t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n    \t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n    \t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n    \t\t\tvar s = 1 - t,\r\n\r\n    \t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n    \t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n    \t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n    \t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n    \t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n    \t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n    \t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n    \t\t\t\ts = Math.sin( s * len ) / sin;\r\n    \t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar tDir = t * dir;\r\n\r\n    \t\t\tx0 = x0 * s + x1 * tDir;\r\n    \t\t\ty0 = y0 * s + y1 * tDir;\r\n    \t\t\tz0 = z0 * s + z1 * tDir;\r\n    \t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n    \t\t\t// Normalize in case we just did a lerp:\r\n    \t\t\tif ( s === 1 - t ) {\r\n\r\n    \t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n    \t\t\t\tx0 *= f;\r\n    \t\t\t\ty0 *= f;\r\n    \t\t\t\tz0 *= f;\r\n    \t\t\t\tw0 *= f;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tdst[ dstOffset ] = x0;\r\n    \t\tdst[ dstOffset + 1 ] = y0;\r\n    \t\tdst[ dstOffset + 2 ] = z0;\r\n    \t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author *kile / http://kile.stravaganza.org/\r\n     * @author philogb / http://blog.thejit.org/\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author egraether / http://egraether.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     */\r\n\r\n    function Vector3( x, y, z ) {\r\n\r\n    \tthis.x = x || 0;\r\n    \tthis.y = y || 0;\r\n    \tthis.z = z || 0;\r\n\r\n    }\r\n\r\n    Vector3.prototype = {\r\n\r\n    \tconstructor: Vector3,\r\n\r\n    \tisVector3: true,\r\n\r\n    \tset: function ( x, y, z ) {\r\n\r\n    \t\tthis.x = x;\r\n    \t\tthis.y = y;\r\n    \t\tthis.z = z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetScalar: function ( scalar ) {\r\n\r\n    \t\tthis.x = scalar;\r\n    \t\tthis.y = scalar;\r\n    \t\tthis.z = scalar;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetX: function ( x ) {\r\n\r\n    \t\tthis.x = x;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetY: function ( y ) {\r\n\r\n    \t\tthis.y = y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetZ: function ( z ) {\r\n\r\n    \t\tthis.z = z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetComponent: function ( index, value ) {\r\n\r\n    \t\tswitch ( index ) {\r\n\r\n    \t\t\tcase 0: this.x = value; break;\r\n    \t\t\tcase 1: this.y = value; break;\r\n    \t\t\tcase 2: this.z = value; break;\r\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tgetComponent: function ( index ) {\r\n\r\n    \t\tswitch ( index ) {\r\n\r\n    \t\t\tcase 0: return this.x;\r\n    \t\t\tcase 1: return this.y;\r\n    \t\t\tcase 2: return this.z;\r\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( v ) {\r\n\r\n    \t\tthis.x = v.x;\r\n    \t\tthis.y = v.y;\r\n    \t\tthis.z = v.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tadd: function ( v, w ) {\r\n\r\n    \t\tif ( w !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n    \t\t\treturn this.addVectors( v, w );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.x += v.x;\r\n    \t\tthis.y += v.y;\r\n    \t\tthis.z += v.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddScalar: function ( s ) {\r\n\r\n    \t\tthis.x += s;\r\n    \t\tthis.y += s;\r\n    \t\tthis.z += s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddVectors: function ( a, b ) {\r\n\r\n    \t\tthis.x = a.x + b.x;\r\n    \t\tthis.y = a.y + b.y;\r\n    \t\tthis.z = a.z + b.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddScaledVector: function ( v, s ) {\r\n\r\n    \t\tthis.x += v.x * s;\r\n    \t\tthis.y += v.y * s;\r\n    \t\tthis.z += v.z * s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsub: function ( v, w ) {\r\n\r\n    \t\tif ( w !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n    \t\t\treturn this.subVectors( v, w );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.x -= v.x;\r\n    \t\tthis.y -= v.y;\r\n    \t\tthis.z -= v.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsubScalar: function ( s ) {\r\n\r\n    \t\tthis.x -= s;\r\n    \t\tthis.y -= s;\r\n    \t\tthis.z -= s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsubVectors: function ( a, b ) {\r\n\r\n    \t\tthis.x = a.x - b.x;\r\n    \t\tthis.y = a.y - b.y;\r\n    \t\tthis.z = a.z - b.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiply: function ( v, w ) {\r\n\r\n    \t\tif ( w !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n    \t\t\treturn this.multiplyVectors( v, w );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.x *= v.x;\r\n    \t\tthis.y *= v.y;\r\n    \t\tthis.z *= v.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiplyScalar: function ( scalar ) {\r\n\r\n    \t\tif ( isFinite( scalar ) ) {\r\n\r\n    \t\t\tthis.x *= scalar;\r\n    \t\t\tthis.y *= scalar;\r\n    \t\t\tthis.z *= scalar;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.x = 0;\r\n    \t\t\tthis.y = 0;\r\n    \t\t\tthis.z = 0;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiplyVectors: function ( a, b ) {\r\n\r\n    \t\tthis.x = a.x * b.x;\r\n    \t\tthis.y = a.y * b.y;\r\n    \t\tthis.z = a.z * b.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tapplyEuler: function () {\r\n\r\n    \t\tvar quaternion;\r\n\r\n    \t\treturn function applyEuler( euler ) {\r\n\r\n    \t\t\tif ( (euler && euler.isEuler) === false ) {\r\n\r\n    \t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\r\n\r\n    \t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tapplyAxisAngle: function () {\r\n\r\n    \t\tvar quaternion;\r\n\r\n    \t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n    \t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\r\n\r\n    \t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tapplyMatrix3: function ( m ) {\r\n\r\n    \t\tvar x = this.x, y = this.y, z = this.z;\r\n    \t\tvar e = m.elements;\r\n\r\n    \t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n    \t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n    \t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tapplyMatrix4: function ( m ) {\r\n\r\n    \t\t// input: THREE.Matrix4 affine matrix\r\n\r\n    \t\tvar x = this.x, y = this.y, z = this.z;\r\n    \t\tvar e = m.elements;\r\n\r\n    \t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n    \t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n    \t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tapplyProjection: function ( m ) {\r\n\r\n    \t\t// input: THREE.Matrix4 projection matrix\r\n\r\n    \t\tvar x = this.x, y = this.y, z = this.z;\r\n    \t\tvar e = m.elements;\r\n    \t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n    \t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n    \t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n    \t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tapplyQuaternion: function ( q ) {\r\n\r\n    \t\tvar x = this.x, y = this.y, z = this.z;\r\n    \t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n    \t\t// calculate quat * vector\r\n\r\n    \t\tvar ix =  qw * x + qy * z - qz * y;\r\n    \t\tvar iy =  qw * y + qz * x - qx * z;\r\n    \t\tvar iz =  qw * z + qx * y - qy * x;\r\n    \t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n    \t\t// calculate result * inverse quat\r\n\r\n    \t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n    \t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n    \t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tproject: function () {\r\n\r\n    \t\tvar matrix;\r\n\r\n    \t\treturn function project( camera ) {\r\n\r\n    \t\t\tif ( matrix === undefined ) matrix = new Matrix4();\r\n\r\n    \t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n    \t\t\treturn this.applyProjection( matrix );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tunproject: function () {\r\n\r\n    \t\tvar matrix;\r\n\r\n    \t\treturn function unproject( camera ) {\r\n\r\n    \t\t\tif ( matrix === undefined ) matrix = new Matrix4();\r\n\r\n    \t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n    \t\t\treturn this.applyProjection( matrix );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttransformDirection: function ( m ) {\r\n\r\n    \t\t// input: THREE.Matrix4 affine matrix\r\n    \t\t// vector interpreted as a direction\r\n\r\n    \t\tvar x = this.x, y = this.y, z = this.z;\r\n    \t\tvar e = m.elements;\r\n\r\n    \t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n    \t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n    \t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n    \t\treturn this.normalize();\r\n\r\n    \t},\r\n\r\n    \tdivide: function ( v ) {\r\n\r\n    \t\tthis.x /= v.x;\r\n    \t\tthis.y /= v.y;\r\n    \t\tthis.z /= v.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdivideScalar: function ( scalar ) {\r\n\r\n    \t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n    \t},\r\n\r\n    \tmin: function ( v ) {\r\n\r\n    \t\tthis.x = Math.min( this.x, v.x );\r\n    \t\tthis.y = Math.min( this.y, v.y );\r\n    \t\tthis.z = Math.min( this.z, v.z );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmax: function ( v ) {\r\n\r\n    \t\tthis.x = Math.max( this.x, v.x );\r\n    \t\tthis.y = Math.max( this.y, v.y );\r\n    \t\tthis.z = Math.max( this.z, v.z );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclamp: function ( min, max ) {\r\n\r\n    \t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n    \t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n    \t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n    \t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclampScalar: function () {\r\n\r\n    \t\tvar min, max;\r\n\r\n    \t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n    \t\t\tif ( min === undefined ) {\r\n\r\n    \t\t\t\tmin = new Vector3();\r\n    \t\t\t\tmax = new Vector3();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tmin.set( minVal, minVal, minVal );\r\n    \t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n    \t\t\treturn this.clamp( min, max );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclampLength: function ( min, max ) {\r\n\r\n    \t\tvar length = this.length();\r\n\r\n    \t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n    \t},\r\n\r\n    \tfloor: function () {\r\n\r\n    \t\tthis.x = Math.floor( this.x );\r\n    \t\tthis.y = Math.floor( this.y );\r\n    \t\tthis.z = Math.floor( this.z );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tceil: function () {\r\n\r\n    \t\tthis.x = Math.ceil( this.x );\r\n    \t\tthis.y = Math.ceil( this.y );\r\n    \t\tthis.z = Math.ceil( this.z );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tround: function () {\r\n\r\n    \t\tthis.x = Math.round( this.x );\r\n    \t\tthis.y = Math.round( this.y );\r\n    \t\tthis.z = Math.round( this.z );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \troundToZero: function () {\r\n\r\n    \t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n    \t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n    \t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tnegate: function () {\r\n\r\n    \t\tthis.x = - this.x;\r\n    \t\tthis.y = - this.y;\r\n    \t\tthis.z = - this.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdot: function ( v ) {\r\n\r\n    \t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n    \t},\r\n\r\n    \tlengthSq: function () {\r\n\r\n    \t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n    \t},\r\n\r\n    \tlength: function () {\r\n\r\n    \t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n    \t},\r\n\r\n    \tlengthManhattan: function () {\r\n\r\n    \t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n    \t},\r\n\r\n    \tnormalize: function () {\r\n\r\n    \t\treturn this.divideScalar( this.length() );\r\n\r\n    \t},\r\n\r\n    \tsetLength: function ( length ) {\r\n\r\n    \t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n    \t},\r\n\r\n    \tlerp: function ( v, alpha ) {\r\n\r\n    \t\tthis.x += ( v.x - this.x ) * alpha;\r\n    \t\tthis.y += ( v.y - this.y ) * alpha;\r\n    \t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n    \t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n    \t},\r\n\r\n    \tcross: function ( v, w ) {\r\n\r\n    \t\tif ( w !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n    \t\t\treturn this.crossVectors( v, w );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n    \t\tthis.x = y * v.z - z * v.y;\r\n    \t\tthis.y = z * v.x - x * v.z;\r\n    \t\tthis.z = x * v.y - y * v.x;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcrossVectors: function ( a, b ) {\r\n\r\n    \t\tvar ax = a.x, ay = a.y, az = a.z;\r\n    \t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n    \t\tthis.x = ay * bz - az * by;\r\n    \t\tthis.y = az * bx - ax * bz;\r\n    \t\tthis.z = ax * by - ay * bx;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tprojectOnVector: function ( vector ) {\r\n\r\n    \t\tvar scalar = vector.dot( this ) / vector.lengthSq();\r\n\r\n    \t\treturn this.copy( vector ).multiplyScalar( scalar );\r\n\r\n    \t},\r\n\r\n    \tprojectOnPlane: function () {\r\n\r\n    \t\tvar v1;\r\n\r\n    \t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\r\n    \t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n    \t\t\treturn this.sub( v1 );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \treflect: function () {\r\n\r\n    \t\t// reflect incident vector off plane orthogonal to normal\r\n    \t\t// normal is assumed to have unit length\r\n\r\n    \t\tvar v1;\r\n\r\n    \t\treturn function reflect( normal ) {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\r\n    \t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tangleTo: function ( v ) {\r\n\r\n    \t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\r\n    \t\t// clamp, to handle numerical problems\r\n\r\n    \t\treturn Math.acos( exports.Math.clamp( theta, - 1, 1 ) );\r\n\r\n    \t},\r\n\r\n    \tdistanceTo: function ( v ) {\r\n\r\n    \t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n    \t},\r\n\r\n    \tdistanceToSquared: function ( v ) {\r\n\r\n    \t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n    \t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n    \t},\r\n\r\n    \tdistanceToManhattan: function ( v ) {\r\n\r\n    \t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\r\n\r\n    \t},\r\n\r\n    \tsetFromSpherical: function( s ) {\r\n\r\n    \t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\r\n\r\n    \t\tthis.x = sinPhiRadius * Math.sin( s.theta );\r\n    \t\tthis.y = Math.cos( s.phi ) * s.radius;\r\n    \t\tthis.z = sinPhiRadius * Math.cos( s.theta );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromMatrixPosition: function ( m ) {\r\n\r\n    \t\treturn this.setFromMatrixColumn( m, 3 );\r\n\r\n    \t},\r\n\r\n    \tsetFromMatrixScale: function ( m ) {\r\n\r\n    \t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n    \t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n    \t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n    \t\tthis.x = sx;\r\n    \t\tthis.y = sy;\r\n    \t\tthis.z = sz;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromMatrixColumn: function ( m, index ) {\r\n\r\n    \t\tif ( typeof m === 'number' ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\r\n    \t\t\tvar temp = m\r\n    \t\t\tm = index;\r\n    \t\t\tindex = temp;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n    \t},\r\n\r\n    \tequals: function ( v ) {\r\n\r\n    \t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n    \t},\r\n\r\n    \tfromArray: function ( array, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tthis.x = array[ offset ];\r\n    \t\tthis.y = array[ offset + 1 ];\r\n    \t\tthis.z = array[ offset + 2 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoArray: function ( array, offset ) {\r\n\r\n    \t\tif ( array === undefined ) array = [];\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tarray[ offset ] = this.x;\r\n    \t\tarray[ offset + 1 ] = this.y;\r\n    \t\tarray[ offset + 2 ] = this.z;\r\n\r\n    \t\treturn array;\r\n\r\n    \t},\r\n\r\n    \tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tindex = index * attribute.itemSize + offset;\r\n\r\n    \t\tthis.x = attribute.array[ index ];\r\n    \t\tthis.y = attribute.array[ index + 1 ];\r\n    \t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author supereggbert / http://www.paulbrunt.co.uk/\r\n     * @author philogb / http://blog.thejit.org/\r\n     * @author jordi_ros / http://plattsoft.com\r\n     * @author D1plo1d / http://github.com/D1plo1d\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author timknip / http://www.floorplanner.com/\r\n     * @author bhouston / http://clara.io\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     */\r\n\r\n    function Matrix4() {\r\n\r\n    \tthis.elements = new Float32Array( [\r\n\r\n    \t\t1, 0, 0, 0,\r\n    \t\t0, 1, 0, 0,\r\n    \t\t0, 0, 1, 0,\r\n    \t\t0, 0, 0, 1\r\n\r\n    \t] );\r\n\r\n    \tif ( arguments.length > 0 ) {\r\n\r\n    \t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    Matrix4.prototype = {\r\n\r\n    \tconstructor: Matrix4,\r\n\r\n    \tisMatrix4: true,\r\n\r\n    \tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n    \t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n    \t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n    \t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tidentity: function () {\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\t1, 0, 0, 0,\r\n    \t\t\t0, 1, 0, 0,\r\n    \t\t\t0, 0, 1, 0,\r\n    \t\t\t0, 0, 0, 1\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new Matrix4().fromArray( this.elements );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( m ) {\r\n\r\n    \t\tthis.elements.set( m.elements );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyPosition: function ( m ) {\r\n\r\n    \t\tvar te = this.elements;\r\n    \t\tvar me = m.elements;\r\n\r\n    \t\tte[ 12 ] = me[ 12 ];\r\n    \t\tte[ 13 ] = me[ 13 ];\r\n    \t\tte[ 14 ] = me[ 14 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n    \t\txAxis.setFromMatrixColumn( this, 0 );\r\n    \t\tyAxis.setFromMatrixColumn( this, 1 );\r\n    \t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n    \t\tthis.set(\r\n    \t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n    \t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n    \t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n    \t\t\t0,       0,       0,       1\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \textractRotation: function () {\r\n\r\n    \t\tvar v1;\r\n\r\n    \t\treturn function extractRotation( m ) {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n\r\n    \t\t\tvar te = this.elements;\r\n    \t\t\tvar me = m.elements;\r\n\r\n    \t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\r\n    \t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\r\n    \t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n    \t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n    \t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n    \t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n    \t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n    \t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n    \t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n    \t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n    \t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n    \t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tmakeRotationFromEuler: function ( euler ) {\r\n\r\n    \t\tif ( (euler && euler.isEuler) === false ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n    \t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n    \t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n    \t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n    \t\tif ( euler.order === 'XYZ' ) {\r\n\r\n    \t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n    \t\t\tte[ 0 ] = c * e;\r\n    \t\t\tte[ 4 ] = - c * f;\r\n    \t\t\tte[ 8 ] = d;\r\n\r\n    \t\t\tte[ 1 ] = af + be * d;\r\n    \t\t\tte[ 5 ] = ae - bf * d;\r\n    \t\t\tte[ 9 ] = - b * c;\r\n\r\n    \t\t\tte[ 2 ] = bf - ae * d;\r\n    \t\t\tte[ 6 ] = be + af * d;\r\n    \t\t\tte[ 10 ] = a * c;\r\n\r\n    \t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n    \t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n    \t\t\tte[ 0 ] = ce + df * b;\r\n    \t\t\tte[ 4 ] = de * b - cf;\r\n    \t\t\tte[ 8 ] = a * d;\r\n\r\n    \t\t\tte[ 1 ] = a * f;\r\n    \t\t\tte[ 5 ] = a * e;\r\n    \t\t\tte[ 9 ] = - b;\r\n\r\n    \t\t\tte[ 2 ] = cf * b - de;\r\n    \t\t\tte[ 6 ] = df + ce * b;\r\n    \t\t\tte[ 10 ] = a * c;\r\n\r\n    \t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n    \t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n    \t\t\tte[ 0 ] = ce - df * b;\r\n    \t\t\tte[ 4 ] = - a * f;\r\n    \t\t\tte[ 8 ] = de + cf * b;\r\n\r\n    \t\t\tte[ 1 ] = cf + de * b;\r\n    \t\t\tte[ 5 ] = a * e;\r\n    \t\t\tte[ 9 ] = df - ce * b;\r\n\r\n    \t\t\tte[ 2 ] = - a * d;\r\n    \t\t\tte[ 6 ] = b;\r\n    \t\t\tte[ 10 ] = a * c;\r\n\r\n    \t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n    \t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n    \t\t\tte[ 0 ] = c * e;\r\n    \t\t\tte[ 4 ] = be * d - af;\r\n    \t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n    \t\t\tte[ 1 ] = c * f;\r\n    \t\t\tte[ 5 ] = bf * d + ae;\r\n    \t\t\tte[ 9 ] = af * d - be;\r\n\r\n    \t\t\tte[ 2 ] = - d;\r\n    \t\t\tte[ 6 ] = b * c;\r\n    \t\t\tte[ 10 ] = a * c;\r\n\r\n    \t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n    \t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n    \t\t\tte[ 0 ] = c * e;\r\n    \t\t\tte[ 4 ] = bd - ac * f;\r\n    \t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n    \t\t\tte[ 1 ] = f;\r\n    \t\t\tte[ 5 ] = a * e;\r\n    \t\t\tte[ 9 ] = - b * e;\r\n\r\n    \t\t\tte[ 2 ] = - d * e;\r\n    \t\t\tte[ 6 ] = ad * f + bc;\r\n    \t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n    \t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n    \t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n    \t\t\tte[ 0 ] = c * e;\r\n    \t\t\tte[ 4 ] = - f;\r\n    \t\t\tte[ 8 ] = d * e;\r\n\r\n    \t\t\tte[ 1 ] = ac * f + bd;\r\n    \t\t\tte[ 5 ] = a * e;\r\n    \t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n    \t\t\tte[ 2 ] = bc * f - ad;\r\n    \t\t\tte[ 6 ] = b * e;\r\n    \t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n    \t\t}\r\n\r\n    \t\t// last column\r\n    \t\tte[ 3 ] = 0;\r\n    \t\tte[ 7 ] = 0;\r\n    \t\tte[ 11 ] = 0;\r\n\r\n    \t\t// bottom row\r\n    \t\tte[ 12 ] = 0;\r\n    \t\tte[ 13 ] = 0;\r\n    \t\tte[ 14 ] = 0;\r\n    \t\tte[ 15 ] = 1;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n    \t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n    \t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n    \t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n    \t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n    \t\tte[ 0 ] = 1 - ( yy + zz );\r\n    \t\tte[ 4 ] = xy - wz;\r\n    \t\tte[ 8 ] = xz + wy;\r\n\r\n    \t\tte[ 1 ] = xy + wz;\r\n    \t\tte[ 5 ] = 1 - ( xx + zz );\r\n    \t\tte[ 9 ] = yz - wx;\r\n\r\n    \t\tte[ 2 ] = xz - wy;\r\n    \t\tte[ 6 ] = yz + wx;\r\n    \t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n    \t\t// last column\r\n    \t\tte[ 3 ] = 0;\r\n    \t\tte[ 7 ] = 0;\r\n    \t\tte[ 11 ] = 0;\r\n\r\n    \t\t// bottom row\r\n    \t\tte[ 12 ] = 0;\r\n    \t\tte[ 13 ] = 0;\r\n    \t\tte[ 14 ] = 0;\r\n    \t\tte[ 15 ] = 1;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tlookAt: function () {\r\n\r\n    \t\tvar x, y, z;\r\n\r\n    \t\treturn function lookAt( eye, target, up ) {\r\n\r\n    \t\t\tif ( x === undefined ) {\r\n\r\n    \t\t\t\tx = new Vector3();\r\n    \t\t\t\ty = new Vector3();\r\n    \t\t\t\tz = new Vector3();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar te = this.elements;\r\n\r\n    \t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n    \t\t\tif ( z.lengthSq() === 0 ) {\r\n\r\n    \t\t\t\tz.z = 1;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n    \t\t\tif ( x.lengthSq() === 0 ) {\r\n\r\n    \t\t\t\tz.z += 0.0001;\r\n    \t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\ty.crossVectors( z, x );\r\n\r\n\r\n    \t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n    \t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n    \t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tmultiply: function ( m, n ) {\r\n\r\n    \t\tif ( n !== undefined ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n    \t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this.multiplyMatrices( this, m );\r\n\r\n    \t},\r\n\r\n    \tpremultiply: function ( m ) {\r\n\r\n    \t\treturn this.multiplyMatrices( m, this );\r\n\r\n    \t},\r\n\r\n    \tmultiplyMatrices: function ( a, b ) {\r\n\r\n    \t\tvar ae = a.elements;\r\n    \t\tvar be = b.elements;\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n    \t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n    \t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n    \t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n    \t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n    \t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n    \t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n    \t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n    \t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n    \t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n    \t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n    \t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n    \t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n    \t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n    \t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n    \t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n    \t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n    \t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n    \t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n    \t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n    \t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n    \t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n    \t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n    \t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiplyToArray: function ( a, b, r ) {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tthis.multiplyMatrices( a, b );\r\n\r\n    \t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n    \t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n    \t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n    \t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiplyScalar: function ( s ) {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n    \t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n    \t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n    \t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tapplyToVector3Array: function () {\r\n\r\n    \t\tvar v1;\r\n\r\n    \t\treturn function applyToVector3Array( array, offset, length ) {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n    \t\t\tif ( offset === undefined ) offset = 0;\r\n    \t\t\tif ( length === undefined ) length = array.length;\r\n\r\n    \t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n    \t\t\t\tv1.fromArray( array, j );\r\n    \t\t\t\tv1.applyMatrix4( this );\r\n    \t\t\t\tv1.toArray( array, j );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn array;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tapplyToBuffer: function () {\r\n\r\n    \t\tvar v1;\r\n\r\n    \t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n    \t\t\tif ( offset === undefined ) offset = 0;\r\n    \t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n    \t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n    \t\t\t\tv1.x = buffer.getX( j );\r\n    \t\t\t\tv1.y = buffer.getY( j );\r\n    \t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n    \t\t\t\tv1.applyMatrix4( this );\r\n\r\n    \t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn buffer;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tdeterminant: function () {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n    \t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n    \t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n    \t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n    \t\t//TODO: make this more efficient\r\n    \t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n    \t\treturn (\r\n    \t\t\tn41 * (\r\n    \t\t\t\t+ n14 * n23 * n32\r\n    \t\t\t\t - n13 * n24 * n32\r\n    \t\t\t\t - n14 * n22 * n33\r\n    \t\t\t\t + n12 * n24 * n33\r\n    \t\t\t\t + n13 * n22 * n34\r\n    \t\t\t\t - n12 * n23 * n34\r\n    \t\t\t) +\r\n    \t\t\tn42 * (\r\n    \t\t\t\t+ n11 * n23 * n34\r\n    \t\t\t\t - n11 * n24 * n33\r\n    \t\t\t\t + n14 * n21 * n33\r\n    \t\t\t\t - n13 * n21 * n34\r\n    \t\t\t\t + n13 * n24 * n31\r\n    \t\t\t\t - n14 * n23 * n31\r\n    \t\t\t) +\r\n    \t\t\tn43 * (\r\n    \t\t\t\t+ n11 * n24 * n32\r\n    \t\t\t\t - n11 * n22 * n34\r\n    \t\t\t\t - n14 * n21 * n32\r\n    \t\t\t\t + n12 * n21 * n34\r\n    \t\t\t\t + n14 * n22 * n31\r\n    \t\t\t\t - n12 * n24 * n31\r\n    \t\t\t) +\r\n    \t\t\tn44 * (\r\n    \t\t\t\t- n13 * n22 * n31\r\n    \t\t\t\t - n11 * n23 * n32\r\n    \t\t\t\t + n11 * n22 * n33\r\n    \t\t\t\t + n13 * n21 * n32\r\n    \t\t\t\t - n12 * n21 * n33\r\n    \t\t\t\t + n12 * n23 * n31\r\n    \t\t\t)\r\n\r\n    \t\t);\r\n\r\n    \t},\r\n\r\n    \ttranspose: function () {\r\n\r\n    \t\tvar te = this.elements;\r\n    \t\tvar tmp;\r\n\r\n    \t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n    \t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n    \t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n    \t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n    \t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n    \t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n    \t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\r\n    \t\t\t\t\"- just use .toArray instead.\" );\r\n\r\n    \t\treturn this.toArray( array, offset );\r\n\r\n    \t},\r\n\r\n    \tgetPosition: function () {\r\n\r\n    \t\tvar v1;\r\n\r\n    \t\treturn function getPosition() {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n    \t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n    \t\t\treturn v1.setFromMatrixColumn( this, 3 );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tsetPosition: function ( v ) {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tte[ 12 ] = v.x;\r\n    \t\tte[ 13 ] = v.y;\r\n    \t\tte[ 14 ] = v.z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetInverse: function ( m, throwOnDegenerate ) {\r\n\r\n    \t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n    \t\tvar te = this.elements,\r\n    \t\t\tme = m.elements,\r\n\r\n    \t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\r\n    \t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\r\n    \t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\r\n    \t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\r\n\r\n    \t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n    \t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n    \t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n    \t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n    \t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n    \t\tif ( det === 0 ) {\r\n\r\n    \t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n    \t\t\tif ( throwOnDegenerate === true ) {\r\n\r\n    \t\t\t\tthrow new Error( msg );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tconsole.warn( msg );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn this.identity();\r\n\r\n    \t\t}\r\n\r\n    \t\tvar detInv = 1 / det;\r\n\r\n    \t\tte[ 0 ] = t11 * detInv;\r\n    \t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n    \t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n    \t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n    \t\tte[ 4 ] = t12 * detInv;\r\n    \t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n    \t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n    \t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n    \t\tte[ 8 ] = t13 * detInv;\r\n    \t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n    \t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n    \t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n    \t\tte[ 12 ] = t14 * detInv;\r\n    \t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n    \t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n    \t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tscale: function ( v ) {\r\n\r\n    \t\tvar te = this.elements;\r\n    \t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n    \t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n    \t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n    \t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n    \t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetMaxScaleOnAxis: function () {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n    \t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n    \t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n    \t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n    \t},\r\n\r\n    \tmakeTranslation: function ( x, y, z ) {\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\t1, 0, 0, x,\r\n    \t\t\t0, 1, 0, y,\r\n    \t\t\t0, 0, 1, z,\r\n    \t\t\t0, 0, 0, 1\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakeRotationX: function ( theta ) {\r\n\r\n    \t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\t1, 0,  0, 0,\r\n    \t\t\t0, c, - s, 0,\r\n    \t\t\t0, s,  c, 0,\r\n    \t\t\t0, 0,  0, 1\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakeRotationY: function ( theta ) {\r\n\r\n    \t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\t c, 0, s, 0,\r\n    \t\t\t 0, 1, 0, 0,\r\n    \t\t\t- s, 0, c, 0,\r\n    \t\t\t 0, 0, 0, 1\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakeRotationZ: function ( theta ) {\r\n\r\n    \t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\tc, - s, 0, 0,\r\n    \t\t\ts,  c, 0, 0,\r\n    \t\t\t0,  0, 1, 0,\r\n    \t\t\t0,  0, 0, 1\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n    \t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n    \t\tvar c = Math.cos( angle );\r\n    \t\tvar s = Math.sin( angle );\r\n    \t\tvar t = 1 - c;\r\n    \t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n    \t\tvar tx = t * x, ty = t * y;\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n    \t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n    \t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n    \t\t\t0, 0, 0, 1\r\n\r\n    \t\t);\r\n\r\n    \t\t return this;\r\n\r\n    \t},\r\n\r\n    \tmakeScale: function ( x, y, z ) {\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\tx, 0, 0, 0,\r\n    \t\t\t0, y, 0, 0,\r\n    \t\t\t0, 0, z, 0,\r\n    \t\t\t0, 0, 0, 1\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcompose: function ( position, quaternion, scale ) {\r\n\r\n    \t\tthis.makeRotationFromQuaternion( quaternion );\r\n    \t\tthis.scale( scale );\r\n    \t\tthis.setPosition( position );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdecompose: function () {\r\n\r\n    \t\tvar vector, matrix;\r\n\r\n    \t\treturn function decompose( position, quaternion, scale ) {\r\n\r\n    \t\t\tif ( vector === undefined ) {\r\n\r\n    \t\t\t\tvector = new Vector3();\r\n    \t\t\t\tmatrix = new Matrix4();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar te = this.elements;\r\n\r\n    \t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n    \t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n    \t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n    \t\t\t// if determine is negative, we need to invert one scale\r\n    \t\t\tvar det = this.determinant();\r\n    \t\t\tif ( det < 0 ) {\r\n\r\n    \t\t\t\tsx = - sx;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tposition.x = te[ 12 ];\r\n    \t\t\tposition.y = te[ 13 ];\r\n    \t\t\tposition.z = te[ 14 ];\r\n\r\n    \t\t\t// scale the rotation part\r\n\r\n    \t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n    \t\t\tvar invSX = 1 / sx;\r\n    \t\t\tvar invSY = 1 / sy;\r\n    \t\t\tvar invSZ = 1 / sz;\r\n\r\n    \t\t\tmatrix.elements[ 0 ] *= invSX;\r\n    \t\t\tmatrix.elements[ 1 ] *= invSX;\r\n    \t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n    \t\t\tmatrix.elements[ 4 ] *= invSY;\r\n    \t\t\tmatrix.elements[ 5 ] *= invSY;\r\n    \t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n    \t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n    \t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n    \t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n    \t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n    \t\t\tscale.x = sx;\r\n    \t\t\tscale.y = sy;\r\n    \t\t\tscale.z = sz;\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n    \t\tvar te = this.elements;\r\n    \t\tvar x = 2 * near / ( right - left );\r\n    \t\tvar y = 2 * near / ( top - bottom );\r\n\r\n    \t\tvar a = ( right + left ) / ( right - left );\r\n    \t\tvar b = ( top + bottom ) / ( top - bottom );\r\n    \t\tvar c = - ( far + near ) / ( far - near );\r\n    \t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n    \t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n    \t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n    \t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n    \t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n    \t\tvar ymax = near * Math.tan( exports.Math.DEG2RAD * fov * 0.5 );\r\n    \t\tvar ymin = - ymax;\r\n    \t\tvar xmin = ymin * aspect;\r\n    \t\tvar xmax = ymax * aspect;\r\n\r\n    \t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n    \t},\r\n\r\n    \tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n    \t\tvar te = this.elements;\r\n    \t\tvar w = 1.0 / ( right - left );\r\n    \t\tvar h = 1.0 / ( top - bottom );\r\n    \t\tvar p = 1.0 / ( far - near );\r\n\r\n    \t\tvar x = ( right + left ) * w;\r\n    \t\tvar y = ( top + bottom ) * h;\r\n    \t\tvar z = ( far + near ) * p;\r\n\r\n    \t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n    \t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n    \t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n    \t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( matrix ) {\r\n\r\n    \t\tvar te = this.elements;\r\n    \t\tvar me = matrix.elements;\r\n\r\n    \t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n    \t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn true;\r\n\r\n    \t},\r\n\r\n    \tfromArray: function ( array, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tfor( var i = 0; i < 16; i ++ ) {\r\n\r\n    \t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoArray: function ( array, offset ) {\r\n\r\n    \t\tif ( array === undefined ) array = [];\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tarray[ offset ] = te[ 0 ];\r\n    \t\tarray[ offset + 1 ] = te[ 1 ];\r\n    \t\tarray[ offset + 2 ] = te[ 2 ];\r\n    \t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n    \t\tarray[ offset + 4 ] = te[ 4 ];\r\n    \t\tarray[ offset + 5 ] = te[ 5 ];\r\n    \t\tarray[ offset + 6 ] = te[ 6 ];\r\n    \t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n    \t\tarray[ offset + 8 ]  = te[ 8 ];\r\n    \t\tarray[ offset + 9 ]  = te[ 9 ];\r\n    \t\tarray[ offset + 10 ] = te[ 10 ];\r\n    \t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n    \t\tarray[ offset + 12 ] = te[ 12 ];\r\n    \t\tarray[ offset + 13 ] = te[ 13 ];\r\n    \t\tarray[ offset + 14 ] = te[ 14 ];\r\n    \t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n    \t\treturn array;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n    \timages = images !== undefined ? images : [];\r\n    \tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\r\n\r\n    \tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n    \tthis.flipY = false;\r\n\r\n    }\r\n\r\n    CubeTexture.prototype = Object.create( Texture.prototype );\r\n    CubeTexture.prototype.constructor = CubeTexture;\r\n\r\n    CubeTexture.prototype.isCubeTexture = true;\r\n\r\n    Object.defineProperty( CubeTexture.prototype, 'images', {\r\n\r\n    \tget: function () {\r\n\r\n    \t\treturn this.image;\r\n\r\n    \t},\r\n\r\n    \tset: function ( value ) {\r\n\r\n    \t\tthis.image = value;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    var emptyTexture = new Texture();\r\n    var emptyCubeTexture = new CubeTexture();\r\n\r\n    // --- Base for inner nodes (including the root) ---\r\n\r\n    function UniformContainer() {\r\n\r\n    \tthis.seq = [];\r\n    \tthis.map = {};\r\n\r\n    }\r\n\r\n    // --- Utilities ---\r\n\r\n    // Array Caches (provide typed arrays for temporary by size)\r\n\r\n    var arrayCacheF32 = [];\r\n    var arrayCacheI32 = [];\r\n\r\n    // Flattening for arrays of vectors and matrices\r\n\r\n    function flatten( array, nBlocks, blockSize ) {\r\n\r\n    \tvar firstElem = array[ 0 ];\r\n\r\n    \tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n    \t// unoptimized: ! isNaN( firstElem )\r\n    \t// see http://jacksondunstan.com/articles/983\r\n\r\n    \tvar n = nBlocks * blockSize,\r\n    \t\tr = arrayCacheF32[ n ];\r\n\r\n    \tif ( r === undefined ) {\r\n\r\n    \t\tr = new Float32Array( n );\r\n    \t\tarrayCacheF32[ n ] = r;\r\n\r\n    \t}\r\n\r\n    \tif ( nBlocks !== 0 ) {\r\n\r\n    \t\tfirstElem.toArray( r, 0 );\r\n\r\n    \t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n    \t\t\toffset += blockSize;\r\n    \t\t\tarray[ i ].toArray( r, offset );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \treturn r;\r\n\r\n    }\r\n\r\n    // Texture unit allocation\r\n\r\n    function allocTexUnits( renderer, n ) {\r\n\r\n    \tvar r = arrayCacheI32[ n ];\r\n\r\n    \tif ( r === undefined ) {\r\n\r\n    \t\tr = new Int32Array( n );\r\n    \t\tarrayCacheI32[ n ] = r;\r\n\r\n    \t}\r\n\r\n    \tfor ( var i = 0; i !== n; ++ i )\r\n    \t\tr[ i ] = renderer.allocTextureUnit();\r\n\r\n    \treturn r;\r\n\r\n    }\r\n\r\n    // --- Setters ---\r\n\r\n    // Note: Defining these methods externally, because they come in a bunch\r\n    // and this way their names minify.\r\n\r\n    // Single scalar\r\n\r\n    function setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\r\n    function setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\r\n\r\n    // Single float vector (from flat array or THREE.VectorN)\r\n\r\n    function setValue2fv( gl, v ) {\r\n\r\n    \tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\r\n    \telse gl.uniform2f( this.addr, v.x, v.y );\r\n\r\n    }\r\n\r\n    function setValue3fv( gl, v ) {\r\n\r\n    \tif ( v.x !== undefined )\r\n    \t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n    \telse if ( v.r !== undefined )\r\n    \t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n    \telse\r\n    \t\tgl.uniform3fv( this.addr, v );\r\n\r\n    }\r\n\r\n    function setValue4fv( gl, v ) {\r\n\r\n    \tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\r\n    \telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n    }\r\n\r\n    // Single matrix (from flat array or MatrixN)\r\n\r\n    function setValue2fm( gl, v ) {\r\n\r\n    \tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\r\n\r\n    }\r\n\r\n    function setValue3fm( gl, v ) {\r\n\r\n    \tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\r\n\r\n    }\r\n\r\n    function setValue4fm( gl, v ) {\r\n\r\n    \tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\r\n\r\n    }\r\n\r\n    // Single texture (2D / Cube)\r\n\r\n    function setValueT1( gl, v, renderer ) {\r\n\r\n    \tvar unit = renderer.allocTextureUnit();\r\n    \tgl.uniform1i( this.addr, unit );\r\n    \trenderer.setTexture2D( v || emptyTexture, unit );\r\n\r\n    }\r\n\r\n    function setValueT6( gl, v, renderer ) {\r\n\r\n    \tvar unit = renderer.allocTextureUnit();\r\n    \tgl.uniform1i( this.addr, unit );\r\n    \trenderer.setTextureCube( v || emptyCubeTexture, unit );\r\n\r\n    }\r\n\r\n    // Integer / Boolean vectors or arrays thereof (always flat arrays)\r\n\r\n    function setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\r\n    function setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\r\n    function setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\r\n\r\n    // Helper to pick the right setter for the singular case\r\n\r\n    function getSingularSetter( type ) {\r\n\r\n    \tswitch ( type ) {\r\n\r\n    \t\tcase 0x1406: return setValue1f; // FLOAT\r\n    \t\tcase 0x8b50: return setValue2fv; // _VEC2\r\n    \t\tcase 0x8b51: return setValue3fv; // _VEC3\r\n    \t\tcase 0x8b52: return setValue4fv; // _VEC4\r\n\r\n    \t\tcase 0x8b5a: return setValue2fm; // _MAT2\r\n    \t\tcase 0x8b5b: return setValue3fm; // _MAT3\r\n    \t\tcase 0x8b5c: return setValue4fm; // _MAT4\r\n\r\n    \t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\r\n    \t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\r\n\r\n    \t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\r\n    \t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n    \t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n    \t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    // Array of scalars\r\n\r\n    function setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\r\n    function setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\r\n\r\n    // Array of vectors (flat or from THREE classes)\r\n\r\n    function setValueV2a( gl, v ) {\r\n\r\n    \tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\r\n\r\n    }\r\n\r\n    function setValueV3a( gl, v ) {\r\n\r\n    \tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\r\n\r\n    }\r\n\r\n    function setValueV4a( gl, v ) {\r\n\r\n    \tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\r\n\r\n    }\r\n\r\n    // Array of matrices (flat or from THREE clases)\r\n\r\n    function setValueM2a( gl, v ) {\r\n\r\n    \tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\r\n\r\n    }\r\n\r\n    function setValueM3a( gl, v ) {\r\n\r\n    \tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\r\n\r\n    }\r\n\r\n    function setValueM4a( gl, v ) {\r\n\r\n    \tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\r\n\r\n    }\r\n\r\n    // Array of textures (2D / Cube)\r\n\r\n    function setValueT1a( gl, v, renderer ) {\r\n\r\n    \tvar n = v.length,\r\n    \t\tunits = allocTexUnits( renderer, n );\r\n\r\n    \tgl.uniform1iv( this.addr, units );\r\n\r\n    \tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n    \t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    function setValueT6a( gl, v, renderer ) {\r\n\r\n    \tvar n = v.length,\r\n    \t\tunits = allocTexUnits( renderer, n );\r\n\r\n    \tgl.uniform1iv( this.addr, units );\r\n\r\n    \tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n    \t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    // Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n    function getPureArraySetter( type ) {\r\n\r\n    \tswitch ( type ) {\r\n\r\n    \t\tcase 0x1406: return setValue1fv; // FLOAT\r\n    \t\tcase 0x8b50: return setValueV2a; // _VEC2\r\n    \t\tcase 0x8b51: return setValueV3a; // _VEC3\r\n    \t\tcase 0x8b52: return setValueV4a; // _VEC4\r\n\r\n    \t\tcase 0x8b5a: return setValueM2a; // _MAT2\r\n    \t\tcase 0x8b5b: return setValueM3a; // _MAT3\r\n    \t\tcase 0x8b5c: return setValueM4a; // _MAT4\r\n\r\n    \t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\r\n    \t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\r\n\r\n    \t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\r\n    \t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n    \t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n    \t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    // --- Uniform Classes ---\r\n\r\n    function SingleUniform( id, activeInfo, addr ) {\r\n\r\n    \tthis.id = id;\r\n    \tthis.addr = addr;\r\n    \tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n    \t// this.path = activeInfo.name; // DEBUG\r\n\r\n    }\r\n\r\n    function PureArrayUniform( id, activeInfo, addr ) {\r\n\r\n    \tthis.id = id;\r\n    \tthis.addr = addr;\r\n    \tthis.size = activeInfo.size;\r\n    \tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n    \t// this.path = activeInfo.name; // DEBUG\r\n\r\n    }\r\n\r\n    function StructuredUniform( id ) {\r\n\r\n    \tthis.id = id;\r\n\r\n    \tUniformContainer.call( this ); // mix-in\r\n\r\n    }\r\n\r\n    StructuredUniform.prototype.setValue = function( gl, value ) {\r\n\r\n    \t// Note: Don't need an extra 'renderer' parameter, since samplers\r\n    \t// are not allowed in structured uniforms.\r\n\r\n    \tvar seq = this.seq;\r\n\r\n    \tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n    \t\tvar u = seq[ i ];\r\n    \t\tu.setValue( gl, value[ u.id ] );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    // --- Top-level ---\r\n\r\n    // Parser - builds up the property tree from the path strings\r\n\r\n    var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\r\n\r\n    // extracts\r\n    // \t- the identifier (member name or array index)\r\n    //  - followed by an optional right bracket (found when array index)\r\n    //  - followed by an optional left bracket or dot (type of subscript)\r\n    //\r\n    // Note: These portions can be read in a non-overlapping fashion and\r\n    // allow straightforward parsing of the hierarchy that WebGL encodes\r\n    // in the uniform names.\r\n\r\n    function addUniform( container, uniformObject ) {\r\n\r\n    \tcontainer.seq.push( uniformObject );\r\n    \tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n    }\r\n\r\n    function parseUniform( activeInfo, addr, container ) {\r\n\r\n    \tvar path = activeInfo.name,\r\n    \t\tpathLength = path.length;\r\n\r\n    \t// reset RegExp object, because of the early exit of a previous run\r\n    \tRePathPart.lastIndex = 0;\r\n\r\n    \tfor (; ;) {\r\n\r\n    \t\tvar match = RePathPart.exec( path ),\r\n    \t\t\tmatchEnd = RePathPart.lastIndex,\r\n\r\n    \t\t\tid = match[ 1 ],\r\n    \t\t\tidIsIndex = match[ 2 ] === ']',\r\n    \t\t\tsubscript = match[ 3 ];\r\n\r\n    \t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n    \t\tif ( subscript === undefined ||\r\n    \t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\r\n    \t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n    \t\t\taddUniform( container, subscript === undefined ?\r\n    \t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n    \t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n    \t\t\tbreak;\r\n\r\n    \t\t} else {\r\n    \t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n    \t\t\tvar map = container.map,\r\n    \t\t\t\tnext = map[ id ];\r\n\r\n    \t\t\tif ( next === undefined ) {\r\n\r\n    \t\t\t\tnext = new StructuredUniform( id );\r\n    \t\t\t\taddUniform( container, next );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tcontainer = next;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    // Root Container\r\n\r\n    function WebGLUniforms( gl, program, renderer ) {\r\n\r\n    \tUniformContainer.call( this );\r\n\r\n    \tthis.renderer = renderer;\r\n\r\n    \tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n    \tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n    \t\tvar info = gl.getActiveUniform( program, i ),\r\n    \t\t\tpath = info.name,\r\n    \t\t\taddr = gl.getUniformLocation( program, path );\r\n\r\n    \t\tparseUniform( info, addr, this );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    WebGLUniforms.prototype.setValue = function( gl, name, value ) {\r\n\r\n    \tvar u = this.map[ name ];\r\n\r\n    \tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\r\n\r\n    };\r\n\r\n    WebGLUniforms.prototype.set = function( gl, object, name ) {\r\n\r\n    \tvar u = this.map[ name ];\r\n\r\n    \tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\r\n\r\n    };\r\n\r\n    WebGLUniforms.prototype.setOptional = function( gl, object, name ) {\r\n\r\n    \tvar v = object[ name ];\r\n\r\n    \tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n    };\r\n\r\n\r\n    // Static interface\r\n\r\n    WebGLUniforms.upload = function( gl, seq, values, renderer ) {\r\n\r\n    \tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n    \t\tvar u = seq[ i ],\r\n    \t\t\tv = values[ u.id ];\r\n\r\n    \t\tif ( v.needsUpdate !== false ) {\r\n    \t\t\t// note: always updating when .needsUpdate is undefined\r\n\r\n    \t\t\tu.setValue( gl, v.value, renderer );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    WebGLUniforms.seqWithValue = function( seq, values ) {\r\n\r\n    \tvar r = [];\r\n\r\n    \tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n    \t\tvar u = seq[ i ];\r\n    \t\tif ( u.id in values ) r.push( u );\r\n\r\n    \t}\r\n\r\n    \treturn r;\r\n\r\n    };\r\n\r\n    WebGLUniforms.splitDynamic = function( seq, values ) {\r\n\r\n    \tvar r = null,\r\n    \t\tn = seq.length,\r\n    \t\tw = 0;\r\n\r\n    \tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n    \t\tvar u = seq[ i ],\r\n    \t\t\tv = values[ u.id ];\r\n\r\n    \t\tif ( v && v.dynamic === true ) {\r\n\r\n    \t\t\tif ( r === null ) r = [];\r\n    \t\t\tr.push( u );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// in-place compact 'seq', removing the matches\r\n    \t\t\tif ( w < i ) seq[ w ] = u;\r\n    \t\t\t++ w;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tif ( w < n ) seq.length = w;\r\n\r\n    \treturn r;\r\n\r\n    };\r\n\r\n    WebGLUniforms.evalDynamic = function( seq, values, object, material, camera ) {\r\n\r\n    \tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n    \t\tvar v = values[ seq[ i ].id ],\r\n    \t\t\tf = v.onUpdateCallback;\r\n\r\n    \t\tif ( f !== undefined ) f.call( v, object, material, camera );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * Uniform Utilities\r\n     */\r\n\r\n    exports.UniformsUtils = {\r\n\r\n    \tmerge: function ( uniforms ) {\r\n\r\n    \t\tvar merged = {};\r\n\r\n    \t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n    \t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n    \t\t\tfor ( var p in tmp ) {\r\n\r\n    \t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn merged;\r\n\r\n    \t},\r\n\r\n    \tclone: function ( uniforms_src ) {\r\n\r\n    \t\tvar uniforms_dst = {};\r\n\r\n    \t\tfor ( var u in uniforms_src ) {\r\n\r\n    \t\t\tuniforms_dst[ u ] = {};\r\n\r\n    \t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n    \t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n    \t\t\t\tif ( (parameter_src && parameter_src.isColor) ||\r\n    \t\t\t\t\t (parameter_src && parameter_src.isVector2) ||\r\n    \t\t\t\t\t (parameter_src && parameter_src.isVector3) ||\r\n    \t\t\t\t\t (parameter_src && parameter_src.isVector4) ||\r\n    \t\t\t\t\t (parameter_src && parameter_src.isMatrix3) ||\r\n    \t\t\t\t\t (parameter_src && parameter_src.isMatrix4) ||\r\n    \t\t\t\t\t (parameter_src && parameter_src.isTexture) ) {\r\n\r\n    \t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n    \t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n    \t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn uniforms_dst;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\r\n\r\n    var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\r\n\r\n    var alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\r\n\r\n    var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\n    var begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n    var beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n    var bsdfs = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\r\n\r\n    var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\r\n\r\n    var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n#endif\\n\";\r\n\r\n    var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\r\n\r\n    var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\r\n\r\n    var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\r\n\r\n    var color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\n    var color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\r\n\r\n    var color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\r\n\r\n    var color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\r\n\r\n    var common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\r\n\r\n    var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\r\n\r\n    var defaultnormal_vertex = \"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n    var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\r\n\r\n    var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\r\n\r\n    var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\r\n\r\n    var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\r\n\r\n    var encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\r\n\r\n    var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\r\n\r\n    var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\r\n\r\n    var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\r\n\r\n    var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\r\n\r\n    var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\n    var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\r\n\r\n    var lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#include <normal_flip>\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#include <normal_flip>\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\r\n\r\n    var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\r\n\r\n    var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\r\n\r\n    var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\r\n\r\n    var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\r\n\r\n    var lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\t\\t\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\r\n\r\n    var logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\n    var logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\r\n\r\n    var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\r\n\r\n    var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n    var map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\r\n\r\n    var map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n    var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\r\n\r\n    var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\n    var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\r\n\r\n    var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\r\n\r\n    var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\r\n\r\n    var normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\r\n\r\n    var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\r\n\r\n    var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\r\n\r\n    var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\r\n\r\n    var project_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n    var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\r\n\r\n    var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\n    var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\r\n\r\n    var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\r\n\r\n    var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\n    var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\r\n\r\n    var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\r\n\r\n    var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\r\n\r\n    var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\n    var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\r\n\r\n    var tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\r\n\r\n    var uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\r\n\r\n    var uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\r\n\r\n    var uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\r\n\r\n    var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n    var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n    var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\r\n\r\n    var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\";\r\n\r\n    var cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\r\n\r\n    var cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\r\n\r\n    var depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\r\n\r\n    var depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n    var distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\r\n\r\n    var distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\r\n\r\n    var equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\r\n\r\n    var equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\r\n\r\n    var linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n    var linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n    var meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n    var meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\";\r\n\r\n    var meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n    var meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n    var meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n    var meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n    var meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n    var meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n    var normal_frag = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n    var normal_vert = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n    var points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\r\n\r\n    var points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n    var shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\r\n\r\n    var shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n    var ShaderChunk = {\r\n    \talphamap_fragment: alphamap_fragment,\r\n    \talphamap_pars_fragment: alphamap_pars_fragment,\r\n    \talphatest_fragment: alphatest_fragment,\r\n    \taomap_fragment: aomap_fragment,\r\n    \taomap_pars_fragment: aomap_pars_fragment,\r\n    \tbegin_vertex: begin_vertex,\r\n    \tbeginnormal_vertex: beginnormal_vertex,\r\n    \tbsdfs: bsdfs,\r\n    \tbumpmap_pars_fragment: bumpmap_pars_fragment,\r\n    \tclipping_planes_fragment: clipping_planes_fragment,\r\n    \tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\r\n    \tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\r\n    \tclipping_planes_vertex: clipping_planes_vertex,\r\n    \tcolor_fragment: color_fragment,\r\n    \tcolor_pars_fragment: color_pars_fragment,\r\n    \tcolor_pars_vertex: color_pars_vertex,\r\n    \tcolor_vertex: color_vertex,\r\n    \tcommon: common,\r\n    \tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\r\n    \tdefaultnormal_vertex: defaultnormal_vertex,\r\n    \tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\r\n    \tdisplacementmap_vertex: displacementmap_vertex,\r\n    \temissivemap_fragment: emissivemap_fragment,\r\n    \temissivemap_pars_fragment: emissivemap_pars_fragment,\r\n    \tencodings_fragment: encodings_fragment,\r\n    \tencodings_pars_fragment: encodings_pars_fragment,\r\n    \tenvmap_fragment: envmap_fragment,\r\n    \tenvmap_pars_fragment: envmap_pars_fragment,\r\n    \tenvmap_pars_vertex: envmap_pars_vertex,\r\n    \tenvmap_vertex: envmap_vertex,\r\n    \tfog_fragment: fog_fragment,\r\n    \tfog_pars_fragment: fog_pars_fragment,\r\n    \tlightmap_fragment: lightmap_fragment,\r\n    \tlightmap_pars_fragment: lightmap_pars_fragment,\r\n    \tlights_lambert_vertex: lights_lambert_vertex,\r\n    \tlights_pars: lights_pars,\r\n    \tlights_phong_fragment: lights_phong_fragment,\r\n    \tlights_phong_pars_fragment: lights_phong_pars_fragment,\r\n    \tlights_physical_fragment: lights_physical_fragment,\r\n    \tlights_physical_pars_fragment: lights_physical_pars_fragment,\r\n    \tlights_template: lights_template,\r\n    \tlogdepthbuf_fragment: logdepthbuf_fragment,\r\n    \tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\r\n    \tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\r\n    \tlogdepthbuf_vertex: logdepthbuf_vertex,\r\n    \tmap_fragment: map_fragment,\r\n    \tmap_pars_fragment: map_pars_fragment,\r\n    \tmap_particle_fragment: map_particle_fragment,\r\n    \tmap_particle_pars_fragment: map_particle_pars_fragment,\r\n    \tmetalnessmap_fragment: metalnessmap_fragment,\r\n    \tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\r\n    \tmorphnormal_vertex: morphnormal_vertex,\r\n    \tmorphtarget_pars_vertex: morphtarget_pars_vertex,\r\n    \tmorphtarget_vertex: morphtarget_vertex,\r\n    \tnormal_flip: normal_flip,\r\n    \tnormal_fragment: normal_fragment,\r\n    \tnormalmap_pars_fragment: normalmap_pars_fragment,\r\n    \tpacking: packing,\r\n    \tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\r\n    \tproject_vertex: project_vertex,\r\n    \troughnessmap_fragment: roughnessmap_fragment,\r\n    \troughnessmap_pars_fragment: roughnessmap_pars_fragment,\r\n    \tshadowmap_pars_fragment: shadowmap_pars_fragment,\r\n    \tshadowmap_pars_vertex: shadowmap_pars_vertex,\r\n    \tshadowmap_vertex: shadowmap_vertex,\r\n    \tshadowmask_pars_fragment: shadowmask_pars_fragment,\r\n    \tskinbase_vertex: skinbase_vertex,\r\n    \tskinning_pars_vertex: skinning_pars_vertex,\r\n    \tskinning_vertex: skinning_vertex,\r\n    \tskinnormal_vertex: skinnormal_vertex,\r\n    \tspecularmap_fragment: specularmap_fragment,\r\n    \tspecularmap_pars_fragment: specularmap_pars_fragment,\r\n    \ttonemapping_fragment: tonemapping_fragment,\r\n    \ttonemapping_pars_fragment: tonemapping_pars_fragment,\r\n    \tuv_pars_fragment: uv_pars_fragment,\r\n    \tuv_pars_vertex: uv_pars_vertex,\r\n    \tuv_vertex: uv_vertex,\r\n    \tuv2_pars_fragment: uv2_pars_fragment,\r\n    \tuv2_pars_vertex: uv2_pars_vertex,\r\n    \tuv2_vertex: uv2_vertex,\r\n    \tworldpos_vertex: worldpos_vertex,\r\n\r\n    \tcube_frag: cube_frag,\r\n    \tcube_vert: cube_vert,\r\n    \tdepth_frag: depth_frag,\r\n    \tdepth_vert: depth_vert,\r\n    \tdistanceRGBA_frag: distanceRGBA_frag,\r\n    \tdistanceRGBA_vert: distanceRGBA_vert,\r\n    \tequirect_frag: equirect_frag,\r\n    \tequirect_vert: equirect_vert,\r\n    \tlinedashed_frag: linedashed_frag,\r\n    \tlinedashed_vert: linedashed_vert,\r\n    \tmeshbasic_frag: meshbasic_frag,\r\n    \tmeshbasic_vert: meshbasic_vert,\r\n    \tmeshlambert_frag: meshlambert_frag,\r\n    \tmeshlambert_vert: meshlambert_vert,\r\n    \tmeshphong_frag: meshphong_frag,\r\n    \tmeshphong_vert: meshphong_vert,\r\n    \tmeshphysical_frag: meshphysical_frag,\r\n    \tmeshphysical_vert: meshphysical_vert,\r\n    \tnormal_frag: normal_frag,\r\n    \tnormal_vert: normal_vert,\r\n    \tpoints_frag: points_frag,\r\n    \tpoints_vert: points_vert,\r\n    \tshadow_frag: shadow_frag,\r\n    \tshadow_vert: shadow_vert\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Color( r, g, b ) {\r\n\r\n    \tif ( g === undefined && b === undefined ) {\r\n\r\n    \t\t// r is THREE.Color, hex or string\r\n    \t\treturn this.set( r );\r\n\r\n    \t}\r\n\r\n    \treturn this.setRGB( r, g, b );\r\n\r\n    }\r\n\r\n    Color.prototype = {\r\n\r\n    \tconstructor: Color,\r\n\r\n    \tisColor: true,\r\n\r\n    \tr: 1, g: 1, b: 1,\r\n\r\n    \tset: function ( value ) {\r\n\r\n    \t\tif ( (value && value.isColor) ) {\r\n\r\n    \t\t\tthis.copy( value );\r\n\r\n    \t\t} else if ( typeof value === 'number' ) {\r\n\r\n    \t\t\tthis.setHex( value );\r\n\r\n    \t\t} else if ( typeof value === 'string' ) {\r\n\r\n    \t\t\tthis.setStyle( value );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetScalar: function ( scalar ) {\r\n\r\n    \t\tthis.r = scalar;\r\n    \t\tthis.g = scalar;\r\n    \t\tthis.b = scalar;\r\n\r\n    \t},\r\n\r\n    \tsetHex: function ( hex ) {\r\n\r\n    \t\thex = Math.floor( hex );\r\n\r\n    \t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n    \t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n    \t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetRGB: function ( r, g, b ) {\r\n\r\n    \t\tthis.r = r;\r\n    \t\tthis.g = g;\r\n    \t\tthis.b = b;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetHSL: function () {\r\n\r\n    \t\tfunction hue2rgb( p, q, t ) {\r\n\r\n    \t\t\tif ( t < 0 ) t += 1;\r\n    \t\t\tif ( t > 1 ) t -= 1;\r\n    \t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n    \t\t\tif ( t < 1 / 2 ) return q;\r\n    \t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n    \t\t\treturn p;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn function setHSL( h, s, l ) {\r\n\r\n    \t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n    \t\t\th = exports.Math.euclideanModulo( h, 1 );\r\n    \t\t\ts = exports.Math.clamp( s, 0, 1 );\r\n    \t\t\tl = exports.Math.clamp( l, 0, 1 );\r\n\r\n    \t\t\tif ( s === 0 ) {\r\n\r\n    \t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n    \t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n    \t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n    \t\t\t\tthis.g = hue2rgb( q, p, h );\r\n    \t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tsetStyle: function ( style ) {\r\n\r\n    \t\tfunction handleAlpha( string ) {\r\n\r\n    \t\t\tif ( string === undefined ) return;\r\n\r\n    \t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n\r\n    \t\tvar m;\r\n\r\n    \t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n    \t\t\t// rgb / hsl\r\n\r\n    \t\t\tvar color;\r\n    \t\t\tvar name = m[ 1 ];\r\n    \t\t\tvar components = m[ 2 ];\r\n\r\n    \t\t\tswitch ( name ) {\r\n\r\n    \t\t\t\tcase 'rgb':\r\n    \t\t\t\tcase 'rgba':\r\n\r\n    \t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n    \t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n    \t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n    \t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n    \t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n    \t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n    \t\t\t\t\t\treturn this;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n    \t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n    \t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n    \t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n    \t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n    \t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n    \t\t\t\t\t\treturn this;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'hsl':\r\n    \t\t\t\tcase 'hsla':\r\n\r\n    \t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n    \t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n    \t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n    \t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n    \t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n    \t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n    \t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n    \t\t\t// hex color\r\n\r\n    \t\t\tvar hex = m[ 1 ];\r\n    \t\t\tvar size = hex.length;\r\n\r\n    \t\t\tif ( size === 3 ) {\r\n\r\n    \t\t\t\t// #ff0\r\n    \t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n    \t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n    \t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n    \t\t\t\treturn this;\r\n\r\n    \t\t\t} else if ( size === 6 ) {\r\n\r\n    \t\t\t\t// #ff0000\r\n    \t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n    \t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n    \t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n    \t\t\t\treturn this;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( style && style.length > 0 ) {\r\n\r\n    \t\t\t// color keywords\r\n    \t\t\tvar hex = exports.ColorKeywords[ style ];\r\n\r\n    \t\t\tif ( hex !== undefined ) {\r\n\r\n    \t\t\t\t// red\r\n    \t\t\t\tthis.setHex( hex );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// unknown color\r\n    \t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( color ) {\r\n\r\n    \t\tthis.r = color.r;\r\n    \t\tthis.g = color.g;\r\n    \t\tthis.b = color.b;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n    \t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n    \t\tthis.r = Math.pow( color.r, gammaFactor );\r\n    \t\tthis.g = Math.pow( color.g, gammaFactor );\r\n    \t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n    \t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n    \t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n    \t\tthis.r = Math.pow( color.r, safeInverse );\r\n    \t\tthis.g = Math.pow( color.g, safeInverse );\r\n    \t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tconvertGammaToLinear: function () {\r\n\r\n    \t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n    \t\tthis.r = r * r;\r\n    \t\tthis.g = g * g;\r\n    \t\tthis.b = b * b;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tconvertLinearToGamma: function () {\r\n\r\n    \t\tthis.r = Math.sqrt( this.r );\r\n    \t\tthis.g = Math.sqrt( this.g );\r\n    \t\tthis.b = Math.sqrt( this.b );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetHex: function () {\r\n\r\n    \t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n    \t},\r\n\r\n    \tgetHexString: function () {\r\n\r\n    \t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n    \t},\r\n\r\n    \tgetHSL: function ( optionalTarget ) {\r\n\r\n    \t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n    \t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n    \t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n    \t\tvar max = Math.max( r, g, b );\r\n    \t\tvar min = Math.min( r, g, b );\r\n\r\n    \t\tvar hue, saturation;\r\n    \t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n    \t\tif ( min === max ) {\r\n\r\n    \t\t\thue = 0;\r\n    \t\t\tsaturation = 0;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tvar delta = max - min;\r\n\r\n    \t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n    \t\t\tswitch ( max ) {\r\n\r\n    \t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n    \t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n    \t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\thue /= 6;\r\n\r\n    \t\t}\r\n\r\n    \t\thsl.h = hue;\r\n    \t\thsl.s = saturation;\r\n    \t\thsl.l = lightness;\r\n\r\n    \t\treturn hsl;\r\n\r\n    \t},\r\n\r\n    \tgetStyle: function () {\r\n\r\n    \t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n    \t},\r\n\r\n    \toffsetHSL: function ( h, s, l ) {\r\n\r\n    \t\tvar hsl = this.getHSL();\r\n\r\n    \t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n    \t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tadd: function ( color ) {\r\n\r\n    \t\tthis.r += color.r;\r\n    \t\tthis.g += color.g;\r\n    \t\tthis.b += color.b;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddColors: function ( color1, color2 ) {\r\n\r\n    \t\tthis.r = color1.r + color2.r;\r\n    \t\tthis.g = color1.g + color2.g;\r\n    \t\tthis.b = color1.b + color2.b;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddScalar: function ( s ) {\r\n\r\n    \t\tthis.r += s;\r\n    \t\tthis.g += s;\r\n    \t\tthis.b += s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsub: function( color ) {\r\n\r\n    \t\tthis.r = Math.max( 0, this.r - color.r );\r\n    \t\tthis.g = Math.max( 0, this.g - color.g );\r\n    \t\tthis.b = Math.max( 0, this.b - color.b );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiply: function ( color ) {\r\n\r\n    \t\tthis.r *= color.r;\r\n    \t\tthis.g *= color.g;\r\n    \t\tthis.b *= color.b;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmultiplyScalar: function ( s ) {\r\n\r\n    \t\tthis.r *= s;\r\n    \t\tthis.g *= s;\r\n    \t\tthis.b *= s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tlerp: function ( color, alpha ) {\r\n\r\n    \t\tthis.r += ( color.r - this.r ) * alpha;\r\n    \t\tthis.g += ( color.g - this.g ) * alpha;\r\n    \t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( c ) {\r\n\r\n    \t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n    \t},\r\n\r\n    \tfromArray: function ( array, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tthis.r = array[ offset ];\r\n    \t\tthis.g = array[ offset + 1 ];\r\n    \t\tthis.b = array[ offset + 2 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoArray: function ( array, offset ) {\r\n\r\n    \t\tif ( array === undefined ) array = [];\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tarray[ offset ] = this.r;\r\n    \t\tarray[ offset + 1 ] = this.g;\r\n    \t\tarray[ offset + 2 ] = this.b;\r\n\r\n    \t\treturn array;\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function () {\r\n\r\n    \t\treturn this.getHex();\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    exports.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n    'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n    'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n    'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n    'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n    'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n    'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n    'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n    'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n    'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n    'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n    'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n    'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n    'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n    'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n    'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n    'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n    'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n    'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n    'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n    'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n    'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n    'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n    'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n    /**\r\n     * Uniforms library for shared webgl shaders\r\n     */\r\n\r\n    var UniformsLib = {\r\n\r\n    \tcommon: {\r\n\r\n    \t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n    \t\topacity: { value: 1.0 },\r\n\r\n    \t\tmap: { value: null },\r\n    \t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\r\n\r\n    \t\tspecularMap: { value: null },\r\n    \t\talphaMap: { value: null },\r\n\r\n    \t\tenvMap: { value: null },\r\n    \t\tflipEnvMap: { value: - 1 },\r\n    \t\treflectivity: { value: 1.0 },\r\n    \t\trefractionRatio: { value: 0.98 }\r\n\r\n    \t},\r\n\r\n    \taomap: {\r\n\r\n    \t\taoMap: { value: null },\r\n    \t\taoMapIntensity: { value: 1 }\r\n\r\n    \t},\r\n\r\n    \tlightmap: {\r\n\r\n    \t\tlightMap: { value: null },\r\n    \t\tlightMapIntensity: { value: 1 }\r\n\r\n    \t},\r\n\r\n    \temissivemap: {\r\n\r\n    \t\temissiveMap: { value: null }\r\n\r\n    \t},\r\n\r\n    \tbumpmap: {\r\n\r\n    \t\tbumpMap: { value: null },\r\n    \t\tbumpScale: { value: 1 }\r\n\r\n    \t},\r\n\r\n    \tnormalmap: {\r\n\r\n    \t\tnormalMap: { value: null },\r\n    \t\tnormalScale: { value: new Vector2( 1, 1 ) }\r\n\r\n    \t},\r\n\r\n    \tdisplacementmap: {\r\n\r\n    \t\tdisplacementMap: { value: null },\r\n    \t\tdisplacementScale: { value: 1 },\r\n    \t\tdisplacementBias: { value: 0 }\r\n\r\n    \t},\r\n\r\n    \troughnessmap: {\r\n\r\n    \t\troughnessMap: { value: null }\r\n\r\n    \t},\r\n\r\n    \tmetalnessmap: {\r\n\r\n    \t\tmetalnessMap: { value: null }\r\n\r\n    \t},\r\n\r\n    \tfog: {\r\n\r\n    \t\tfogDensity: { value: 0.00025 },\r\n    \t\tfogNear: { value: 1 },\r\n    \t\tfogFar: { value: 2000 },\r\n    \t\tfogColor: { value: new Color( 0xffffff ) }\r\n\r\n    \t},\r\n\r\n    \tlights: {\r\n\r\n    \t\tambientLightColor: { value: [] },\r\n\r\n    \t\tdirectionalLights: { value: [], properties: {\r\n    \t\t\tdirection: {},\r\n    \t\t\tcolor: {},\r\n\r\n    \t\t\tshadow: {},\r\n    \t\t\tshadowBias: {},\r\n    \t\t\tshadowRadius: {},\r\n    \t\t\tshadowMapSize: {}\r\n    \t\t} },\r\n\r\n    \t\tdirectionalShadowMap: { value: [] },\r\n    \t\tdirectionalShadowMatrix: { value: [] },\r\n\r\n    \t\tspotLights: { value: [], properties: {\r\n    \t\t\tcolor: {},\r\n    \t\t\tposition: {},\r\n    \t\t\tdirection: {},\r\n    \t\t\tdistance: {},\r\n    \t\t\tconeCos: {},\r\n    \t\t\tpenumbraCos: {},\r\n    \t\t\tdecay: {},\r\n\r\n    \t\t\tshadow: {},\r\n    \t\t\tshadowBias: {},\r\n    \t\t\tshadowRadius: {},\r\n    \t\t\tshadowMapSize: {}\r\n    \t\t} },\r\n\r\n    \t\tspotShadowMap: { value: [] },\r\n    \t\tspotShadowMatrix: { value: [] },\r\n\r\n    \t\tpointLights: { value: [], properties: {\r\n    \t\t\tcolor: {},\r\n    \t\t\tposition: {},\r\n    \t\t\tdecay: {},\r\n    \t\t\tdistance: {},\r\n\r\n    \t\t\tshadow: {},\r\n    \t\t\tshadowBias: {},\r\n    \t\t\tshadowRadius: {},\r\n    \t\t\tshadowMapSize: {}\r\n    \t\t} },\r\n\r\n    \t\tpointShadowMap: { value: [] },\r\n    \t\tpointShadowMatrix: { value: [] },\r\n\r\n    \t\themisphereLights: { value: [], properties: {\r\n    \t\t\tdirection: {},\r\n    \t\t\tskyColor: {},\r\n    \t\t\tgroundColor: {}\r\n    \t\t} }\r\n\r\n    \t},\r\n\r\n    \tpoints: {\r\n\r\n    \t\tdiffuse: { value: new Color( 0xeeeeee ) },\r\n    \t\topacity: { value: 1.0 },\r\n    \t\tsize: { value: 1.0 },\r\n    \t\tscale: { value: 1.0 },\r\n    \t\tmap: { value: null },\r\n    \t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author mikael emtinger / http://gomo.se/\r\n     */\r\n\r\n    var ShaderLib = {\r\n\r\n    \tbasic: {\r\n\r\n    \t\tuniforms: exports.UniformsUtils.merge( [\r\n\r\n    \t\t\tUniformsLib.common,\r\n    \t\t\tUniformsLib.aomap,\r\n    \t\t\tUniformsLib.fog\r\n\r\n    \t\t] ),\r\n\r\n    \t\tvertexShader: ShaderChunk.meshbasic_vert,\r\n    \t\tfragmentShader: ShaderChunk.meshbasic_frag\r\n\r\n    \t},\r\n\r\n    \tlambert: {\r\n\r\n    \t\tuniforms: exports.UniformsUtils.merge( [\r\n\r\n    \t\t\tUniformsLib.common,\r\n    \t\t\tUniformsLib.aomap,\r\n    \t\t\tUniformsLib.lightmap,\r\n    \t\t\tUniformsLib.emissivemap,\r\n    \t\t\tUniformsLib.fog,\r\n    \t\t\tUniformsLib.lights,\r\n\r\n    \t\t\t{\r\n    \t\t\t\temissive : { value: new Color( 0x000000 ) }\r\n    \t\t\t}\r\n\r\n    \t\t] ),\r\n\r\n    \t\tvertexShader: ShaderChunk.meshlambert_vert,\r\n    \t\tfragmentShader: ShaderChunk.meshlambert_frag\r\n\r\n    \t},\r\n\r\n    \tphong: {\r\n\r\n    \t\tuniforms: exports.UniformsUtils.merge( [\r\n\r\n    \t\t\tUniformsLib.common,\r\n    \t\t\tUniformsLib.aomap,\r\n    \t\t\tUniformsLib.lightmap,\r\n    \t\t\tUniformsLib.emissivemap,\r\n    \t\t\tUniformsLib.bumpmap,\r\n    \t\t\tUniformsLib.normalmap,\r\n    \t\t\tUniformsLib.displacementmap,\r\n    \t\t\tUniformsLib.fog,\r\n    \t\t\tUniformsLib.lights,\r\n\r\n    \t\t\t{\r\n    \t\t\t\temissive : { value: new Color( 0x000000 ) },\r\n    \t\t\t\tspecular : { value: new Color( 0x111111 ) },\r\n    \t\t\t\tshininess: { value: 30 }\r\n    \t\t\t}\r\n\r\n    \t\t] ),\r\n\r\n    \t\tvertexShader: ShaderChunk.meshphong_vert,\r\n    \t\tfragmentShader: ShaderChunk.meshphong_frag\r\n\r\n    \t},\r\n\r\n    \tstandard: {\r\n\r\n    \t\tuniforms: exports.UniformsUtils.merge( [\r\n\r\n    \t\t\tUniformsLib.common,\r\n    \t\t\tUniformsLib.aomap,\r\n    \t\t\tUniformsLib.lightmap,\r\n    \t\t\tUniformsLib.emissivemap,\r\n    \t\t\tUniformsLib.bumpmap,\r\n    \t\t\tUniformsLib.normalmap,\r\n    \t\t\tUniformsLib.displacementmap,\r\n    \t\t\tUniformsLib.roughnessmap,\r\n    \t\t\tUniformsLib.metalnessmap,\r\n    \t\t\tUniformsLib.fog,\r\n    \t\t\tUniformsLib.lights,\r\n\r\n    \t\t\t{\r\n    \t\t\t\temissive : { value: new Color( 0x000000 ) },\r\n    \t\t\t\troughness: { value: 0.5 },\r\n    \t\t\t\tmetalness: { value: 0 },\r\n    \t\t\t\tenvMapIntensity : { value: 1 }, // temporary\r\n    \t\t\t}\r\n\r\n    \t\t] ),\r\n\r\n    \t\tvertexShader: ShaderChunk.meshphysical_vert,\r\n    \t\tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n    \t},\r\n\r\n    \tpoints: {\r\n\r\n    \t\tuniforms: exports.UniformsUtils.merge( [\r\n\r\n    \t\t\tUniformsLib.points,\r\n    \t\t\tUniformsLib.fog\r\n\r\n    \t\t] ),\r\n\r\n    \t\tvertexShader: ShaderChunk.points_vert,\r\n    \t\tfragmentShader: ShaderChunk.points_frag\r\n\r\n    \t},\r\n\r\n    \tdashed: {\r\n\r\n    \t\tuniforms: exports.UniformsUtils.merge( [\r\n\r\n    \t\t\tUniformsLib.common,\r\n    \t\t\tUniformsLib.fog,\r\n\r\n    \t\t\t{\r\n    \t\t\t\tscale    : { value: 1 },\r\n    \t\t\t\tdashSize : { value: 1 },\r\n    \t\t\t\ttotalSize: { value: 2 }\r\n    \t\t\t}\r\n\r\n    \t\t] ),\r\n\r\n    \t\tvertexShader: ShaderChunk.linedashed_vert,\r\n    \t\tfragmentShader: ShaderChunk.linedashed_frag\r\n\r\n    \t},\r\n\r\n    \tdepth: {\r\n\r\n    \t\tuniforms: exports.UniformsUtils.merge( [\r\n\r\n    \t\t\tUniformsLib.common,\r\n    \t\t\tUniformsLib.displacementmap\r\n\r\n    \t\t] ),\r\n\r\n    \t\tvertexShader: ShaderChunk.depth_vert,\r\n    \t\tfragmentShader: ShaderChunk.depth_frag\r\n\r\n    \t},\r\n\r\n    \tnormal: {\r\n\r\n    \t\tuniforms: {\r\n\r\n    \t\t\topacity : { value: 1.0 }\r\n\r\n    \t\t},\r\n\r\n    \t\tvertexShader: ShaderChunk.normal_vert,\r\n    \t\tfragmentShader: ShaderChunk.normal_frag\r\n\r\n    \t},\r\n\r\n    \t/* -------------------------------------------------------------------------\r\n    \t//\tCube map shader\r\n    \t ------------------------------------------------------------------------- */\r\n\r\n    \tcube: {\r\n\r\n    \t\tuniforms: {\r\n    \t\t\ttCube: { value: null },\r\n    \t\t\ttFlip: { value: - 1 },\r\n    \t\t\topacity: { value: 1.0 }\r\n    \t\t},\r\n\r\n    \t\tvertexShader: ShaderChunk.cube_vert,\r\n    \t\tfragmentShader: ShaderChunk.cube_frag\r\n\r\n    \t},\r\n\r\n    \t/* -------------------------------------------------------------------------\r\n    \t//\tCube map shader\r\n    \t ------------------------------------------------------------------------- */\r\n\r\n    \tequirect: {\r\n\r\n    \t\tuniforms: {\r\n    \t\t\ttEquirect: { value: null },\r\n    \t\t\ttFlip: { value: - 1 }\r\n    \t\t},\r\n\r\n    \t\tvertexShader: ShaderChunk.equirect_vert,\r\n    \t\tfragmentShader: ShaderChunk.equirect_frag\r\n\r\n    \t},\r\n\r\n    \tdistanceRGBA: {\r\n\r\n    \t\tuniforms: {\r\n\r\n    \t\t\tlightPos: { value: new Vector3() }\r\n\r\n    \t\t},\r\n\r\n    \t\tvertexShader: ShaderChunk.distanceRGBA_vert,\r\n    \t\tfragmentShader: ShaderChunk.distanceRGBA_frag\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    ShaderLib.physical = {\r\n\r\n    \tuniforms: exports.UniformsUtils.merge( [\r\n\r\n    \t\tShaderLib.standard.uniforms,\r\n\r\n    \t\t{\r\n    \t\t\tclearCoat: { value: 0 },\r\n    \t\t\tclearCoatRoughness: { value: 0 }\r\n    \t\t}\r\n\r\n    \t] ),\r\n\r\n    \tvertexShader: ShaderChunk.meshphysical_vert,\r\n    \tfragmentShader: ShaderChunk.meshphysical_frag\r\n\r\n    };\r\n\r\n    /**\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    function Box2( min, max ) {\r\n\r\n    \tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\r\n    \tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\r\n\r\n    }\r\n\r\n    Box2.prototype = {\r\n\r\n    \tconstructor: Box2,\r\n\r\n    \tset: function ( min, max ) {\r\n\r\n    \t\tthis.min.copy( min );\r\n    \t\tthis.max.copy( max );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromPoints: function ( points ) {\r\n\r\n    \t\tthis.makeEmpty();\r\n\r\n    \t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n    \t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromCenterAndSize: function () {\r\n\r\n    \t\tvar v1 = new Vector2();\r\n\r\n    \t\treturn function setFromCenterAndSize( center, size ) {\r\n\r\n    \t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n    \t\t\tthis.min.copy( center ).sub( halfSize );\r\n    \t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( box ) {\r\n\r\n    \t\tthis.min.copy( box.min );\r\n    \t\tthis.max.copy( box.max );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakeEmpty: function () {\r\n\r\n    \t\tthis.min.x = this.min.y = + Infinity;\r\n    \t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tisEmpty: function () {\r\n\r\n    \t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n    \t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n    \t},\r\n\r\n    \tgetCenter: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector2();\r\n    \t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n    \t},\r\n\r\n    \tgetSize: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector2();\r\n    \t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\r\n\r\n    \t},\r\n\r\n    \texpandByPoint: function ( point ) {\r\n\r\n    \t\tthis.min.min( point );\r\n    \t\tthis.max.max( point );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \texpandByVector: function ( vector ) {\r\n\r\n    \t\tthis.min.sub( vector );\r\n    \t\tthis.max.add( vector );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \texpandByScalar: function ( scalar ) {\r\n\r\n    \t\tthis.min.addScalar( - scalar );\r\n    \t\tthis.max.addScalar( scalar );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcontainsPoint: function ( point ) {\r\n\r\n    \t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n    \t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n    \t\t\treturn false;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn true;\r\n\r\n    \t},\r\n\r\n    \tcontainsBox: function ( box ) {\r\n\r\n    \t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n    \t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n    \t\t\treturn true;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn false;\r\n\r\n    \t},\r\n\r\n    \tgetParameter: function ( point, optionalTarget ) {\r\n\r\n    \t\t// This can potentially have a divide by zero if the box\r\n    \t\t// has a size dimension of 0.\r\n\r\n    \t\tvar result = optionalTarget || new Vector2();\r\n\r\n    \t\treturn result.set(\r\n    \t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n    \t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n    \t\t);\r\n\r\n    \t},\r\n\r\n    \tintersectsBox: function ( box ) {\r\n\r\n    \t\t// using 6 splitting planes to rule out intersections.\r\n\r\n    \t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n    \t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n    \t\t\treturn false;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn true;\r\n\r\n    \t},\r\n\r\n    \tclampPoint: function ( point, optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector2();\r\n    \t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n    \t},\r\n\r\n    \tdistanceToPoint: function () {\r\n\r\n    \t\tvar v1 = new Vector2();\r\n\r\n    \t\treturn function distanceToPoint( point ) {\r\n\r\n    \t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n    \t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tintersect: function ( box ) {\r\n\r\n    \t\tthis.min.max( box.min );\r\n    \t\tthis.max.min( box.max );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tunion: function ( box ) {\r\n\r\n    \t\tthis.min.min( box.min );\r\n    \t\tthis.max.max( box.max );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttranslate: function ( offset ) {\r\n\r\n    \t\tthis.min.add( offset );\r\n    \t\tthis.max.add( offset );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( box ) {\r\n\r\n    \t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function LensFlarePlugin( renderer, flares ) {\r\n\r\n    \tvar gl = renderer.context;\r\n    \tvar state = renderer.state;\r\n\r\n    \tvar vertexBuffer, elementBuffer;\r\n    \tvar shader, program, attributes, uniforms;\r\n\r\n    \tvar tempTexture, occlusionTexture;\r\n\r\n    \tfunction init() {\r\n\r\n    \t\tvar vertices = new Float32Array( [\r\n    \t\t\t- 1, - 1,  0, 0,\r\n    \t\t\t 1, - 1,  1, 0,\r\n    \t\t\t 1,  1,  1, 1,\r\n    \t\t\t- 1,  1,  0, 1\r\n    \t\t] );\r\n\r\n    \t\tvar faces = new Uint16Array( [\r\n    \t\t\t0, 1, 2,\r\n    \t\t\t0, 2, 3\r\n    \t\t] );\r\n\r\n    \t\t// buffers\r\n\r\n    \t\tvertexBuffer     = gl.createBuffer();\r\n    \t\telementBuffer    = gl.createBuffer();\r\n\r\n    \t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n    \t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n    \t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n    \t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n    \t\t// textures\r\n\r\n    \t\ttempTexture      = gl.createTexture();\r\n    \t\tocclusionTexture = gl.createTexture();\r\n\r\n    \t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n    \t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n    \t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n    \t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n    \t\tshader = {\r\n\r\n    \t\t\tvertexShader: [\r\n\r\n    \t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n    \t\t\t\t\"uniform vec3 screenPosition;\",\r\n    \t\t\t\t\"uniform vec2 scale;\",\r\n    \t\t\t\t\"uniform float rotation;\",\r\n\r\n    \t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n    \t\t\t\t\"attribute vec2 position;\",\r\n    \t\t\t\t\"attribute vec2 uv;\",\r\n\r\n    \t\t\t\t\"varying vec2 vUV;\",\r\n    \t\t\t\t\"varying float vVisibility;\",\r\n\r\n    \t\t\t\t\"void main() {\",\r\n\r\n    \t\t\t\t\t\"vUV = uv;\",\r\n\r\n    \t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n    \t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\r\n    \t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n    \t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n    \t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n    \t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n    \t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n    \t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n    \t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n    \t\t\t\t\t\"}\",\r\n\r\n    \t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n    \t\t\t\t\"}\"\r\n\r\n    \t\t\t].join( \"\\n\" ),\r\n\r\n    \t\t\tfragmentShader: [\r\n\r\n    \t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n    \t\t\t\t\"uniform sampler2D map;\",\r\n    \t\t\t\t\"uniform float opacity;\",\r\n    \t\t\t\t\"uniform vec3 color;\",\r\n\r\n    \t\t\t\t\"varying vec2 vUV;\",\r\n    \t\t\t\t\"varying float vVisibility;\",\r\n\r\n    \t\t\t\t\"void main() {\",\r\n\r\n    \t\t\t\t\t// pink square\r\n\r\n    \t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\r\n    \t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n    \t\t\t\t\t// restore\r\n\r\n    \t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\r\n    \t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n    \t\t\t\t\t// flare\r\n\r\n    \t\t\t\t\t\"} else {\",\r\n\r\n    \t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n    \t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n    \t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n    \t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n    \t\t\t\t\t\"}\",\r\n\r\n    \t\t\t\t\"}\"\r\n\r\n    \t\t\t].join( \"\\n\" )\r\n\r\n    \t\t};\r\n\r\n    \t\tprogram = createProgram( shader );\r\n\r\n    \t\tattributes = {\r\n    \t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n    \t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n    \t\t};\r\n\r\n    \t\tuniforms = {\r\n    \t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n    \t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n    \t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n    \t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n    \t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n    \t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n    \t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n    \t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n    \t\t};\r\n\r\n    \t}\r\n\r\n    \t/*\r\n    \t * Render lens flares\r\n    \t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n    \t *         reads these back and calculates occlusion.\r\n    \t */\r\n\r\n    \tthis.render = function ( scene, camera, viewport ) {\r\n\r\n    \t\tif ( flares.length === 0 ) return;\r\n\r\n    \t\tvar tempPosition = new Vector3();\r\n\r\n    \t\tvar invAspect = viewport.w / viewport.z,\r\n    \t\t\thalfViewportWidth = viewport.z * 0.5,\r\n    \t\t\thalfViewportHeight = viewport.w * 0.5;\r\n\r\n    \t\tvar size = 16 / viewport.w,\r\n    \t\t\tscale = new Vector2( size * invAspect, size );\r\n\r\n    \t\tvar screenPosition = new Vector3( 1, 1, 0 ),\r\n    \t\t\tscreenPositionPixels = new Vector2( 1, 1 );\r\n\r\n    \t\tvar validArea = new Box2();\r\n\r\n    \t\tvalidArea.min.set( 0, 0 );\r\n    \t\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\r\n\r\n    \t\tif ( program === undefined ) {\r\n\r\n    \t\t\tinit();\r\n\r\n    \t\t}\r\n\r\n    \t\tgl.useProgram( program );\r\n\r\n    \t\tstate.initAttributes();\r\n    \t\tstate.enableAttribute( attributes.vertex );\r\n    \t\tstate.enableAttribute( attributes.uv );\r\n    \t\tstate.disableUnusedAttributes();\r\n\r\n    \t\t// loop through all lens flares to update their occlusion and positions\r\n    \t\t// setup gl and common used attribs/uniforms\r\n\r\n    \t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n    \t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n    \t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n    \t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n    \t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n    \t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n    \t\tstate.disable( gl.CULL_FACE );\r\n    \t\tstate.setDepthWrite( false );\r\n\r\n    \t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n    \t\t\tsize = 16 / viewport.w;\r\n    \t\t\tscale.set( size * invAspect, size );\r\n\r\n    \t\t\t// calc object screen position\r\n\r\n    \t\t\tvar flare = flares[ i ];\r\n\r\n    \t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n    \t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n    \t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n    \t\t\t// setup arrays for gl programs\r\n\r\n    \t\t\tscreenPosition.copy( tempPosition );\r\n\r\n    \t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\r\n\r\n    \t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\r\n    \t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\r\n\r\n    \t\t\t// screen cull\r\n\r\n    \t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\r\n\r\n    \t\t\t\t// save current RGB to temp texture\r\n\r\n    \t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n    \t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n    \t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n    \t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n    \t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\r\n\r\n\r\n    \t\t\t\t// render pink quad\r\n\r\n    \t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n    \t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n    \t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n    \t\t\t\tstate.disable( gl.BLEND );\r\n    \t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n    \t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n    \t\t\t\t// copy result to occlusionMap\r\n\r\n    \t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n    \t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n    \t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\r\n\r\n\r\n    \t\t\t\t// restore graphics\r\n\r\n    \t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n    \t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n    \t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n    \t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n    \t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n    \t\t\t\t// update object positions\r\n\r\n    \t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n    \t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n    \t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tflare.updateLensFlares();\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t// render flares\r\n\r\n    \t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n    \t\t\t\tstate.enable( gl.BLEND );\r\n\r\n    \t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n    \t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n    \t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n    \t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n    \t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n    \t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\r\n\r\n    \t\t\t\t\t\tscale.x = size * invAspect;\r\n    \t\t\t\t\t\tscale.y = size;\r\n\r\n    \t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n    \t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n    \t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n    \t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n    \t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n    \t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n    \t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\r\n\r\n    \t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// restore gl\r\n\r\n    \t\tstate.enable( gl.CULL_FACE );\r\n    \t\tstate.enable( gl.DEPTH_TEST );\r\n    \t\tstate.setDepthWrite( true );\r\n\r\n    \t\trenderer.resetGLState();\r\n\r\n    \t};\r\n\r\n    \tfunction createProgram( shader ) {\r\n\r\n    \t\tvar program = gl.createProgram();\r\n\r\n    \t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n    \t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n    \t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n    \t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n    \t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n    \t\tgl.compileShader( fragmentShader );\r\n    \t\tgl.compileShader( vertexShader );\r\n\r\n    \t\tgl.attachShader( program, fragmentShader );\r\n    \t\tgl.attachShader( program, vertexShader );\r\n\r\n    \t\tgl.linkProgram( program );\r\n\r\n    \t\treturn program;\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function SpritePlugin( renderer, sprites ) {\r\n\r\n    \tvar gl = renderer.context;\r\n    \tvar state = renderer.state;\r\n\r\n    \tvar vertexBuffer, elementBuffer;\r\n    \tvar program, attributes, uniforms;\r\n\r\n    \tvar texture;\r\n\r\n    \t// decompose matrixWorld\r\n\r\n    \tvar spritePosition = new Vector3();\r\n    \tvar spriteRotation = new Quaternion();\r\n    \tvar spriteScale = new Vector3();\r\n\r\n    \tfunction init() {\r\n\r\n    \t\tvar vertices = new Float32Array( [\r\n    \t\t\t- 0.5, - 0.5,  0, 0,\r\n    \t\t\t  0.5, - 0.5,  1, 0,\r\n    \t\t\t  0.5,   0.5,  1, 1,\r\n    \t\t\t- 0.5,   0.5,  0, 1\r\n    \t\t] );\r\n\r\n    \t\tvar faces = new Uint16Array( [\r\n    \t\t\t0, 1, 2,\r\n    \t\t\t0, 2, 3\r\n    \t\t] );\r\n\r\n    \t\tvertexBuffer  = gl.createBuffer();\r\n    \t\telementBuffer = gl.createBuffer();\r\n\r\n    \t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n    \t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n    \t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n    \t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n    \t\tprogram = createProgram();\r\n\r\n    \t\tattributes = {\r\n    \t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n    \t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n    \t\t};\r\n\r\n    \t\tuniforms = {\r\n    \t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n    \t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n    \t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n    \t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n    \t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n    \t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n    \t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n    \t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n    \t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n    \t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n    \t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n    \t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n    \t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n    \t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n    \t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n    \t\t};\r\n\r\n    \t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n    \t\tcanvas.width = 8;\r\n    \t\tcanvas.height = 8;\r\n\r\n    \t\tvar context = canvas.getContext( '2d' );\r\n    \t\tcontext.fillStyle = 'white';\r\n    \t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n    \t\ttexture = new Texture( canvas );\r\n    \t\ttexture.needsUpdate = true;\r\n\r\n    \t}\r\n\r\n    \tthis.render = function ( scene, camera ) {\r\n\r\n    \t\tif ( sprites.length === 0 ) return;\r\n\r\n    \t\t// setup gl\r\n\r\n    \t\tif ( program === undefined ) {\r\n\r\n    \t\t\tinit();\r\n\r\n    \t\t}\r\n\r\n    \t\tgl.useProgram( program );\r\n\r\n    \t\tstate.initAttributes();\r\n    \t\tstate.enableAttribute( attributes.position );\r\n    \t\tstate.enableAttribute( attributes.uv );\r\n    \t\tstate.disableUnusedAttributes();\r\n\r\n    \t\tstate.disable( gl.CULL_FACE );\r\n    \t\tstate.enable( gl.BLEND );\r\n\r\n    \t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n    \t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n    \t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n    \t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n    \t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n    \t\tstate.activeTexture( gl.TEXTURE0 );\r\n    \t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n    \t\tvar oldFogType = 0;\r\n    \t\tvar sceneFogType = 0;\r\n    \t\tvar fog = scene.fog;\r\n\r\n    \t\tif ( fog ) {\r\n\r\n    \t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n    \t\t\tif ( (fog && fog.isFog) ) {\r\n\r\n    \t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n    \t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n    \t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n    \t\t\t\toldFogType = 1;\r\n    \t\t\t\tsceneFogType = 1;\r\n\r\n    \t\t\t} else if ( (fog && fog.isFogExp2) ) {\r\n\r\n    \t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n    \t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n    \t\t\t\toldFogType = 2;\r\n    \t\t\t\tsceneFogType = 2;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n    \t\t\toldFogType = 0;\r\n    \t\t\tsceneFogType = 0;\r\n\r\n    \t\t}\r\n\r\n\r\n    \t\t// update positions and sort\r\n\r\n    \t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar sprite = sprites[ i ];\r\n\r\n    \t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n    \t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n    \t\t}\r\n\r\n    \t\tsprites.sort( painterSortStable );\r\n\r\n    \t\t// render all sprites\r\n\r\n    \t\tvar scale = [];\r\n\r\n    \t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar sprite = sprites[ i ];\r\n    \t\t\tvar material = sprite.material;\r\n\r\n    \t\t\tif ( material.visible === false ) continue;\r\n\r\n    \t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n    \t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n    \t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n    \t\t\tscale[ 0 ] = spriteScale.x;\r\n    \t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n    \t\t\tvar fogType = 0;\r\n\r\n    \t\t\tif ( scene.fog && material.fog ) {\r\n\r\n    \t\t\t\tfogType = sceneFogType;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( oldFogType !== fogType ) {\r\n\r\n    \t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n    \t\t\t\toldFogType = fogType;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( material.map !== null ) {\r\n\r\n    \t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n    \t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n    \t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n    \t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n    \t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n    \t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n    \t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n    \t\t\tstate.setDepthTest( material.depthTest );\r\n    \t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n    \t\t\tif ( material.map ) {\r\n\r\n    \t\t\t\trenderer.setTexture2D( material.map, 0 );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\trenderer.setTexture2D( texture, 0 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n    \t\t}\r\n\r\n    \t\t// restore gl\r\n\r\n    \t\tstate.enable( gl.CULL_FACE );\r\n\r\n    \t\trenderer.resetGLState();\r\n\r\n    \t};\r\n\r\n    \tfunction createProgram() {\r\n\r\n    \t\tvar program = gl.createProgram();\r\n\r\n    \t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n    \t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n    \t\tgl.shaderSource( vertexShader, [\r\n\r\n    \t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n    \t\t\t'uniform mat4 modelViewMatrix;',\r\n    \t\t\t'uniform mat4 projectionMatrix;',\r\n    \t\t\t'uniform float rotation;',\r\n    \t\t\t'uniform vec2 scale;',\r\n    \t\t\t'uniform vec2 uvOffset;',\r\n    \t\t\t'uniform vec2 uvScale;',\r\n\r\n    \t\t\t'attribute vec2 position;',\r\n    \t\t\t'attribute vec2 uv;',\r\n\r\n    \t\t\t'varying vec2 vUV;',\r\n\r\n    \t\t\t'void main() {',\r\n\r\n    \t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n    \t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n    \t\t\t\t'vec2 rotatedPosition;',\r\n    \t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n    \t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n    \t\t\t\t'vec4 finalPosition;',\r\n\r\n    \t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n    \t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n    \t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n    \t\t\t\t'gl_Position = finalPosition;',\r\n\r\n    \t\t\t'}'\r\n\r\n    \t\t].join( '\\n' ) );\r\n\r\n    \t\tgl.shaderSource( fragmentShader, [\r\n\r\n    \t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n    \t\t\t'uniform vec3 color;',\r\n    \t\t\t'uniform sampler2D map;',\r\n    \t\t\t'uniform float opacity;',\r\n\r\n    \t\t\t'uniform int fogType;',\r\n    \t\t\t'uniform vec3 fogColor;',\r\n    \t\t\t'uniform float fogDensity;',\r\n    \t\t\t'uniform float fogNear;',\r\n    \t\t\t'uniform float fogFar;',\r\n    \t\t\t'uniform float alphaTest;',\r\n\r\n    \t\t\t'varying vec2 vUV;',\r\n\r\n    \t\t\t'void main() {',\r\n\r\n    \t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n    \t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n    \t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n    \t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n    \t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n    \t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n    \t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n    \t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n    \t\t\t\t\t'} else {',\r\n\r\n    \t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n    \t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n    \t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n    \t\t\t\t\t'}',\r\n\r\n    \t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n    \t\t\t\t'}',\r\n\r\n    \t\t\t'}'\r\n\r\n    \t\t].join( '\\n' ) );\r\n\r\n    \t\tgl.compileShader( vertexShader );\r\n    \t\tgl.compileShader( fragmentShader );\r\n\r\n    \t\tgl.attachShader( program, vertexShader );\r\n    \t\tgl.attachShader( program, fragmentShader );\r\n\r\n    \t\tgl.linkProgram( program );\r\n\r\n    \t\treturn program;\r\n\r\n    \t}\r\n\r\n    \tfunction painterSortStable( a, b ) {\r\n\r\n    \t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n    \t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n    \t\t} else if ( a.z !== b.z ) {\r\n\r\n    \t\t\treturn b.z - a.z;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\treturn b.id - a.id;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Material() {\r\n\r\n    \tObject.defineProperty( this, 'id', { value: MaterialIdCount() } );\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.name = '';\r\n    \tthis.type = 'Material';\r\n\r\n    \tthis.fog = true;\r\n    \tthis.lights = true;\r\n\r\n    \tthis.blending = NormalBlending;\r\n    \tthis.side = FrontSide;\r\n    \tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\r\n    \tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\r\n\r\n    \tthis.opacity = 1;\r\n    \tthis.transparent = false;\r\n\r\n    \tthis.blendSrc = SrcAlphaFactor;\r\n    \tthis.blendDst = OneMinusSrcAlphaFactor;\r\n    \tthis.blendEquation = AddEquation;\r\n    \tthis.blendSrcAlpha = null;\r\n    \tthis.blendDstAlpha = null;\r\n    \tthis.blendEquationAlpha = null;\r\n\r\n    \tthis.depthFunc = LessEqualDepth;\r\n    \tthis.depthTest = true;\r\n    \tthis.depthWrite = true;\r\n\r\n    \tthis.clippingPlanes = null;\r\n    \tthis.clipShadows = false;\r\n\r\n    \tthis.colorWrite = true;\r\n\r\n    \tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n    \tthis.polygonOffset = false;\r\n    \tthis.polygonOffsetFactor = 0;\r\n    \tthis.polygonOffsetUnits = 0;\r\n\r\n    \tthis.alphaTest = 0;\r\n    \tthis.premultipliedAlpha = false;\r\n\r\n    \tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n    \tthis.visible = true;\r\n\r\n    \tthis._needsUpdate = true;\r\n\r\n    }\r\n\r\n    Material.prototype = {\r\n\r\n    \tconstructor: Material,\r\n\r\n    \tisMaterial: true,\r\n\r\n    \tget needsUpdate() {\r\n\r\n    \t\treturn this._needsUpdate;\r\n\r\n    \t},\r\n\r\n    \tset needsUpdate( value ) {\r\n\r\n    \t\tif ( value === true ) this.update();\r\n    \t\tthis._needsUpdate = value;\r\n\r\n    \t},\r\n\r\n    \tsetValues: function ( values ) {\r\n\r\n    \t\tif ( values === undefined ) return;\r\n\r\n    \t\tfor ( var key in values ) {\r\n\r\n    \t\t\tvar newValue = values[ key ];\r\n\r\n    \t\t\tif ( newValue === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n    \t\t\t\tcontinue;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar currentValue = this[ key ];\r\n\r\n    \t\t\tif ( currentValue === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n    \t\t\t\tcontinue;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( (currentValue && currentValue.isColor) ) {\r\n\r\n    \t\t\t\tcurrentValue.set( newValue );\r\n\r\n    \t\t\t} else if ( (currentValue && currentValue.isVector3) && (newValue && newValue.isVector3) ) {\r\n\r\n    \t\t\t\tcurrentValue.copy( newValue );\r\n\r\n    \t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n    \t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n    \t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis[ key ] = newValue;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function ( meta ) {\r\n\r\n    \t\tvar isRoot = meta === undefined;\r\n\r\n    \t\tif ( isRoot ) {\r\n\r\n    \t\t\tmeta = {\r\n    \t\t\t\ttextures: {},\r\n    \t\t\t\timages: {}\r\n    \t\t\t};\r\n\r\n    \t\t}\r\n\r\n    \t\tvar data = {\r\n    \t\t\tmetadata: {\r\n    \t\t\t\tversion: 4.4,\r\n    \t\t\t\ttype: 'Material',\r\n    \t\t\t\tgenerator: 'Material.toJSON'\r\n    \t\t\t}\r\n    \t\t};\r\n\r\n    \t\t// standard Material serialization\r\n    \t\tdata.uuid = this.uuid;\r\n    \t\tdata.type = this.type;\r\n\r\n    \t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n    \t\tif ( (this.color && this.color.isColor) ) data.color = this.color.getHex();\r\n\r\n    \t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\r\n    \t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\r\n\r\n    \t\tif ( (this.emissive && this.emissive.isColor) ) data.emissive = this.emissive.getHex();\r\n    \t\tif ( (this.specular && this.specular.isColor) ) data.specular = this.specular.getHex();\r\n    \t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n    \t\tif ( (this.map && this.map.isTexture) ) data.map = this.map.toJSON( meta ).uuid;\r\n    \t\tif ( (this.alphaMap && this.alphaMap.isTexture) ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n    \t\tif ( (this.lightMap && this.lightMap.isTexture) ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n    \t\tif ( (this.bumpMap && this.bumpMap.isTexture) ) {\r\n\r\n    \t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n    \t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n    \t\t}\r\n    \t\tif ( (this.normalMap && this.normalMap.isTexture) ) {\r\n\r\n    \t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n    \t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n    \t\t}\r\n    \t\tif ( (this.displacementMap && this.displacementMap.isTexture) ) {\r\n\r\n    \t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n    \t\t\tdata.displacementScale = this.displacementScale;\r\n    \t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n    \t\t}\r\n    \t\tif ( (this.roughnessMap && this.roughnessMap.isTexture) ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n    \t\tif ( (this.metalnessMap && this.metalnessMap.isTexture) ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n    \t\tif ( (this.emissiveMap && this.emissiveMap.isTexture) ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n    \t\tif ( (this.specularMap && this.specularMap.isTexture) ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\r\n    \t\tif ( (this.envMap && this.envMap.isTexture) ) {\r\n\r\n    \t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n    \t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.size !== undefined ) data.size = this.size;\r\n    \t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n    \t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\r\n    \t\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\r\n    \t\tif ( this.side !== FrontSide ) data.side = this.side;\r\n    \t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\r\n\r\n    \t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n    \t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\r\n    \t\tdata.depthFunc = this.depthFunc;\r\n    \t\tdata.depthTest = this.depthTest;\r\n    \t\tdata.depthWrite = this.depthWrite;\r\n\r\n    \t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n    \t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n    \t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n    \t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n    \t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\r\n    \t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n    \t\tdata.skinning = this.skinning;\r\n    \t\tdata.morphTargets = this.morphTargets;\r\n\r\n    \t\t// TODO: Copied from Object3D.toJSON\r\n\r\n    \t\tfunction extractFromCache( cache ) {\r\n\r\n    \t\t\tvar values = [];\r\n\r\n    \t\t\tfor ( var key in cache ) {\r\n\r\n    \t\t\t\tvar data = cache[ key ];\r\n    \t\t\t\tdelete data.metadata;\r\n    \t\t\t\tvalues.push( data );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn values;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( isRoot ) {\r\n\r\n    \t\t\tvar textures = extractFromCache( meta.textures );\r\n    \t\t\tvar images = extractFromCache( meta.images );\r\n\r\n    \t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n    \t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn data;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tthis.name = source.name;\r\n\r\n    \t\tthis.fog = source.fog;\r\n    \t\tthis.lights = source.lights;\r\n\r\n    \t\tthis.blending = source.blending;\r\n    \t\tthis.side = source.side;\r\n    \t\tthis.shading = source.shading;\r\n    \t\tthis.vertexColors = source.vertexColors;\r\n\r\n    \t\tthis.opacity = source.opacity;\r\n    \t\tthis.transparent = source.transparent;\r\n\r\n    \t\tthis.blendSrc = source.blendSrc;\r\n    \t\tthis.blendDst = source.blendDst;\r\n    \t\tthis.blendEquation = source.blendEquation;\r\n    \t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n    \t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n    \t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n    \t\tthis.depthFunc = source.depthFunc;\r\n    \t\tthis.depthTest = source.depthTest;\r\n    \t\tthis.depthWrite = source.depthWrite;\r\n\r\n    \t\tthis.colorWrite = source.colorWrite;\r\n\r\n    \t\tthis.precision = source.precision;\r\n\r\n    \t\tthis.polygonOffset = source.polygonOffset;\r\n    \t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n    \t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n    \t\tthis.alphaTest = source.alphaTest;\r\n\r\n    \t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\r\n    \t\tthis.overdraw = source.overdraw;\r\n\r\n    \t\tthis.visible = source.visible;\r\n    \t\tthis.clipShadows = source.clipShadows;\r\n\r\n    \t\tvar srcPlanes = source.clippingPlanes,\r\n    \t\t\tdstPlanes = null;\r\n\r\n    \t\tif ( srcPlanes !== null ) {\r\n\r\n    \t\t\tvar n = srcPlanes.length;\r\n    \t\t\tdstPlanes = new Array( n );\r\n\r\n    \t\t\tfor ( var i = 0; i !== n; ++ i )\r\n    \t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.clippingPlanes = dstPlanes;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tupdate: function () {\r\n\r\n    \t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n    \t},\r\n\r\n    \tdispose: function () {\r\n\r\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    Object.assign( Material.prototype, EventDispatcher.prototype );\r\n\r\n    var count$1 = 0;\r\n    function MaterialIdCount() { return count$1++; };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * parameters = {\r\n     *  defines: { \"label\" : \"value\" },\r\n     *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n     *\r\n     *  fragmentShader: <string>,\r\n     *  vertexShader: <string>,\r\n     *\r\n     *  wireframe: <boolean>,\r\n     *  wireframeLinewidth: <float>,\r\n     *\r\n     *  lights: <bool>,\r\n     *\r\n     *  skinning: <bool>,\r\n     *  morphTargets: <bool>,\r\n     *  morphNormals: <bool>\r\n     * }\r\n     */\r\n\r\n    function ShaderMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'ShaderMaterial';\r\n\r\n    \tthis.defines = {};\r\n    \tthis.uniforms = {};\r\n\r\n    \tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n    \tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n    \tthis.linewidth = 1;\r\n\r\n    \tthis.wireframe = false;\r\n    \tthis.wireframeLinewidth = 1;\r\n\r\n    \tthis.fog = false; // set to use scene fog\r\n    \tthis.lights = false; // set to use scene lights\r\n    \tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n    \tthis.skinning = false; // set to use skinning attribute streams\r\n    \tthis.morphTargets = false; // set to use morph targets\r\n    \tthis.morphNormals = false; // set to use morph normals\r\n\r\n    \tthis.extensions = {\r\n    \t\tderivatives: false, // set to use derivatives\r\n    \t\tfragDepth: false, // set to use fragment depth values\r\n    \t\tdrawBuffers: false, // set to use draw buffers\r\n    \t\tshaderTextureLOD: false // set to use shader texture LOD\r\n    \t};\r\n\r\n    \t// When rendered geometry doesn't include these attributes but the material does,\r\n    \t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n    \tthis.defaultAttributeValues = {\r\n    \t\t'color': [ 1, 1, 1 ],\r\n    \t\t'uv': [ 0, 0 ],\r\n    \t\t'uv2': [ 0, 0 ]\r\n    \t};\r\n\r\n    \tthis.index0AttributeName = undefined;\r\n\r\n    \tif ( parameters !== undefined ) {\r\n\r\n    \t\tif ( parameters.attributes !== undefined ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.setValues( parameters );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    ShaderMaterial.prototype = Object.create( Material.prototype );\r\n    ShaderMaterial.prototype.constructor = ShaderMaterial;\r\n\r\n    ShaderMaterial.prototype.isShaderMaterial = true;\r\n\r\n    ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.fragmentShader = source.fragmentShader;\r\n    \tthis.vertexShader = source.vertexShader;\r\n\r\n    \tthis.uniforms = exports.UniformsUtils.clone( source.uniforms );\r\n\r\n    \tthis.defines = source.defines;\r\n\r\n    \tthis.wireframe = source.wireframe;\r\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n    \tthis.lights = source.lights;\r\n    \tthis.clipping = source.clipping;\r\n\r\n    \tthis.skinning = source.skinning;\r\n\r\n    \tthis.morphTargets = source.morphTargets;\r\n    \tthis.morphNormals = source.morphNormals;\r\n\r\n    \tthis.extensions = source.extensions;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n    \tvar data = Material.prototype.toJSON.call( this, meta );\r\n\r\n    \tdata.uniforms = this.uniforms;\r\n    \tdata.vertexShader = this.vertexShader;\r\n    \tdata.fragmentShader = this.fragmentShader;\r\n\r\n    \treturn data;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author bhouston / https://clara.io\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     *\r\n     * parameters = {\r\n     *\r\n     *  opacity: <float>,\r\n     *\r\n     *  map: new THREE.Texture( <Image> ),\r\n     *\r\n     *  alphaMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  displacementMap: new THREE.Texture( <Image> ),\r\n     *  displacementScale: <float>,\r\n     *  displacementBias: <float>,\r\n     *\r\n     *  wireframe: <boolean>,\r\n     *  wireframeLinewidth: <float>\r\n     * }\r\n     */\r\n\r\n    function MeshDepthMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'MeshDepthMaterial';\r\n\r\n    \tthis.depthPacking = BasicDepthPacking;\r\n\r\n    \tthis.skinning = false;\r\n    \tthis.morphTargets = false;\r\n\r\n    \tthis.map = null;\r\n\r\n    \tthis.alphaMap = null;\r\n\r\n    \tthis.displacementMap = null;\r\n    \tthis.displacementScale = 1;\r\n    \tthis.displacementBias = 0;\r\n\r\n    \tthis.wireframe = false;\r\n    \tthis.wireframeLinewidth = 1;\r\n\r\n    \tthis.fog = false;\r\n    \tthis.lights = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    MeshDepthMaterial.prototype = Object.create( Material.prototype );\r\n    MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\r\n\r\n    MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\r\n\r\n    MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.depthPacking = source.depthPacking;\r\n\r\n    \tthis.skinning = source.skinning;\r\n    \tthis.morphTargets = source.morphTargets;\r\n\r\n    \tthis.map = source.map;\r\n\r\n    \tthis.alphaMap = source.alphaMap;\r\n\r\n    \tthis.displacementMap = source.displacementMap;\r\n    \tthis.displacementScale = source.displacementScale;\r\n    \tthis.displacementBias = source.displacementBias;\r\n\r\n    \tthis.wireframe = source.wireframe;\r\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author bhouston / http://clara.io\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     */\r\n\r\n    function Box3( min, max ) {\r\n\r\n    \tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\r\n    \tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n    }\r\n\r\n    Box3.prototype = {\r\n\r\n    \tconstructor: Box3,\r\n\r\n    \tisBox3: true,\r\n\r\n    \tset: function ( min, max ) {\r\n\r\n    \t\tthis.min.copy( min );\r\n    \t\tthis.max.copy( max );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromArray: function ( array ) {\r\n\r\n    \t\tvar minX = + Infinity;\r\n    \t\tvar minY = + Infinity;\r\n    \t\tvar minZ = + Infinity;\r\n\r\n    \t\tvar maxX = - Infinity;\r\n    \t\tvar maxY = - Infinity;\r\n    \t\tvar maxZ = - Infinity;\r\n\r\n    \t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n    \t\t\tvar x = array[ i ];\r\n    \t\t\tvar y = array[ i + 1 ];\r\n    \t\t\tvar z = array[ i + 2 ];\r\n\r\n    \t\t\tif ( x < minX ) minX = x;\r\n    \t\t\tif ( y < minY ) minY = y;\r\n    \t\t\tif ( z < minZ ) minZ = z;\r\n\r\n    \t\t\tif ( x > maxX ) maxX = x;\r\n    \t\t\tif ( y > maxY ) maxY = y;\r\n    \t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.min.set( minX, minY, minZ );\r\n    \t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n    \t},\r\n\r\n    \tsetFromPoints: function ( points ) {\r\n\r\n    \t\tthis.makeEmpty();\r\n\r\n    \t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n    \t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromCenterAndSize: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function setFromCenterAndSize( center, size ) {\r\n\r\n    \t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n    \t\t\tthis.min.copy( center ).sub( halfSize );\r\n    \t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tsetFromObject: function () {\r\n\r\n    \t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n    \t\t// accounting for both the object's, and children's, world transforms\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function setFromObject( object ) {\r\n\r\n    \t\t\tvar scope = this;\r\n\r\n    \t\t\tobject.updateMatrixWorld( true );\r\n\r\n    \t\t\tthis.makeEmpty();\r\n\r\n    \t\t\tobject.traverse( function ( node ) {\r\n\r\n    \t\t\t\tvar geometry = node.geometry;\r\n\r\n    \t\t\t\tif ( geometry !== undefined ) {\r\n\r\n    \t\t\t\t\tif ( (geometry && geometry.isGeometry) ) {\r\n\r\n    \t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n    \t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n    \t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n    \t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t} else if ( (geometry && geometry.isBufferGeometry) ) {\r\n\r\n    \t\t\t\t\t\tvar attribute = geometry.attributes.position;\r\n\r\n    \t\t\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n    \t\t\t\t\t\t\tvar array, offset, stride;\r\n\r\n    \t\t\t\t\t\t\tif ( (attribute && attribute.isInterleavedBufferAttribute) ) {\r\n\r\n    \t\t\t\t\t\t\t\tarray = attribute.data.array;\r\n    \t\t\t\t\t\t\t\toffset = attribute.offset;\r\n    \t\t\t\t\t\t\t\tstride = attribute.data.stride;\r\n\r\n    \t\t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\t\tarray = attribute.array;\r\n    \t\t\t\t\t\t\t\toffset = 0;\r\n    \t\t\t\t\t\t\t\tstride = 3;\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\r\n\r\n    \t\t\t\t\t\t\t\tv1.fromArray( array, i );\r\n    \t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n    \t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( box ) {\r\n\r\n    \t\tthis.min.copy( box.min );\r\n    \t\tthis.max.copy( box.max );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tmakeEmpty: function () {\r\n\r\n    \t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n    \t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tisEmpty: function () {\r\n\r\n    \t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n    \t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n    \t},\r\n\r\n    \tgetCenter: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n    \t},\r\n\r\n    \tgetSize: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\r\n\r\n    \t},\r\n\r\n    \texpandByPoint: function ( point ) {\r\n\r\n    \t\tthis.min.min( point );\r\n    \t\tthis.max.max( point );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \texpandByVector: function ( vector ) {\r\n\r\n    \t\tthis.min.sub( vector );\r\n    \t\tthis.max.add( vector );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \texpandByScalar: function ( scalar ) {\r\n\r\n    \t\tthis.min.addScalar( - scalar );\r\n    \t\tthis.max.addScalar( scalar );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcontainsPoint: function ( point ) {\r\n\r\n    \t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n    \t\t\t\t point.y < this.min.y || point.y > this.max.y ||\r\n    \t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n    \t\t\treturn false;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn true;\r\n\r\n    \t},\r\n\r\n    \tcontainsBox: function ( box ) {\r\n\r\n    \t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n    \t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n    \t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n    \t\t\treturn true;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn false;\r\n\r\n    \t},\r\n\r\n    \tgetParameter: function ( point, optionalTarget ) {\r\n\r\n    \t\t// This can potentially have a divide by zero if the box\r\n    \t\t// has a size dimension of 0.\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\treturn result.set(\r\n    \t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n    \t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n    \t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n    \t\t);\r\n\r\n    \t},\r\n\r\n    \tintersectsBox: function ( box ) {\r\n\r\n    \t\t// using 6 splitting planes to rule out intersections.\r\n\r\n    \t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n    \t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\r\n    \t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n    \t\t\treturn false;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn true;\r\n\r\n    \t},\r\n\r\n    \tintersectsSphere: ( function () {\r\n\r\n    \t\tvar closestPoint;\r\n\r\n    \t\treturn function intersectsSphere( sphere ) {\r\n\r\n    \t\t\tif ( closestPoint === undefined ) closestPoint = new Vector3();\r\n\r\n    \t\t\t// Find the point on the AABB closest to the sphere center.\r\n    \t\t\tthis.clampPoint( sphere.center, closestPoint );\r\n\r\n    \t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n    \t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n    \t\t};\r\n\r\n    \t} )(),\r\n\r\n    \tintersectsPlane: function ( plane ) {\r\n\r\n    \t\t// We compute the minimum and maximum dot product values. If those values\r\n    \t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n    \t\tvar min, max;\r\n\r\n    \t\tif ( plane.normal.x > 0 ) {\r\n\r\n    \t\t\tmin = plane.normal.x * this.min.x;\r\n    \t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tmin = plane.normal.x * this.max.x;\r\n    \t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( plane.normal.y > 0 ) {\r\n\r\n    \t\t\tmin += plane.normal.y * this.min.y;\r\n    \t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tmin += plane.normal.y * this.max.y;\r\n    \t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( plane.normal.z > 0 ) {\r\n\r\n    \t\t\tmin += plane.normal.z * this.min.z;\r\n    \t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tmin += plane.normal.z * this.max.z;\r\n    \t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn ( min <= plane.constant && max >= plane.constant );\r\n\r\n    \t},\r\n\r\n    \tclampPoint: function ( point, optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n    \t},\r\n\r\n    \tdistanceToPoint: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function distanceToPoint( point ) {\r\n\r\n    \t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n    \t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tgetBoundingSphere: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function getBoundingSphere( optionalTarget ) {\r\n\r\n    \t\t\tvar result = optionalTarget || new Sphere();\r\n\r\n    \t\t\tthis.getCenter( result.center );\r\n\r\n    \t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n    \t\t\treturn result;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tintersect: function ( box ) {\r\n\r\n    \t\tthis.min.max( box.min );\r\n    \t\tthis.max.min( box.max );\r\n\r\n    \t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n    \t\tif( this.isEmpty() ) this.makeEmpty();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tunion: function ( box ) {\r\n\r\n    \t\tthis.min.min( box.min );\r\n    \t\tthis.max.max( box.max );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tapplyMatrix4: function () {\r\n\r\n    \t\tvar points = [\r\n    \t\t\tnew Vector3(),\r\n    \t\t\tnew Vector3(),\r\n    \t\t\tnew Vector3(),\r\n    \t\t\tnew Vector3(),\r\n    \t\t\tnew Vector3(),\r\n    \t\t\tnew Vector3(),\r\n    \t\t\tnew Vector3(),\r\n    \t\t\tnew Vector3()\r\n    \t\t];\r\n\r\n    \t\treturn function applyMatrix4( matrix ) {\r\n\r\n    \t\t\t// transform of empty box is an empty box.\r\n    \t\t\tif( this.isEmpty() ) return this;\r\n\r\n    \t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n    \t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n    \t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n    \t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n    \t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n    \t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n    \t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n    \t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n    \t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\r\n\r\n    \t\t\tthis.setFromPoints( points );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttranslate: function ( offset ) {\r\n\r\n    \t\tthis.min.add( offset );\r\n    \t\tthis.max.add( offset );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( box ) {\r\n\r\n    \t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author bhouston / http://clara.io\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Sphere( center, radius ) {\r\n\r\n    \tthis.center = ( center !== undefined ) ? center : new Vector3();\r\n    \tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n    }\r\n\r\n    Sphere.prototype = {\r\n\r\n    \tconstructor: Sphere,\r\n\r\n    \tset: function ( center, radius ) {\r\n\r\n    \t\tthis.center.copy( center );\r\n    \t\tthis.radius = radius;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromPoints: function () {\r\n\r\n    \t\tvar box = new Box3();\r\n\r\n    \t\treturn function setFromPoints( points, optionalCenter ) {\r\n\r\n    \t\t\tvar center = this.center;\r\n\r\n    \t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n    \t\t\t\tcenter.copy( optionalCenter );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tbox.setFromPoints( points ).getCenter( center );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar maxRadiusSq = 0;\r\n\r\n    \t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( sphere ) {\r\n\r\n    \t\tthis.center.copy( sphere.center );\r\n    \t\tthis.radius = sphere.radius;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tempty: function () {\r\n\r\n    \t\treturn ( this.radius <= 0 );\r\n\r\n    \t},\r\n\r\n    \tcontainsPoint: function ( point ) {\r\n\r\n    \t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n    \t},\r\n\r\n    \tdistanceToPoint: function ( point ) {\r\n\r\n    \t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n    \t},\r\n\r\n    \tintersectsSphere: function ( sphere ) {\r\n\r\n    \t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n    \t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n    \t},\r\n\r\n    \tintersectsBox: function ( box ) {\r\n\r\n    \t\treturn box.intersectsSphere( this );\r\n\r\n    \t},\r\n\r\n    \tintersectsPlane: function ( plane ) {\r\n\r\n    \t\t// We use the following equation to compute the signed distance from\r\n    \t\t// the center of the sphere to the plane.\r\n    \t\t//\r\n    \t\t// distance = q * n - d\r\n    \t\t//\r\n    \t\t// If this distance is greater than the radius of the sphere,\r\n    \t\t// then there is no intersection.\r\n\r\n    \t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\r\n\r\n    \t},\r\n\r\n    \tclampPoint: function ( point, optionalTarget ) {\r\n\r\n    \t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\tresult.copy( point );\r\n\r\n    \t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n    \t\t\tresult.sub( this.center ).normalize();\r\n    \t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result;\r\n\r\n    \t},\r\n\r\n    \tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n    \t\tvar box = optionalTarget || new Box3();\r\n\r\n    \t\tbox.set( this.center, this.center );\r\n    \t\tbox.expandByScalar( this.radius );\r\n\r\n    \t\treturn box;\r\n\r\n    \t},\r\n\r\n    \tapplyMatrix4: function ( matrix ) {\r\n\r\n    \t\tthis.center.applyMatrix4( matrix );\r\n    \t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttranslate: function ( offset ) {\r\n\r\n    \t\tthis.center.add( offset );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( sphere ) {\r\n\r\n    \t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     * @author bhouston / http://clara.io\r\n     * @author tschw\r\n     */\r\n\r\n    function Matrix3() {\r\n\r\n    \tthis.elements = new Float32Array( [\r\n\r\n    \t\t1, 0, 0,\r\n    \t\t0, 1, 0,\r\n    \t\t0, 0, 1\r\n\r\n    \t] );\r\n\r\n    \tif ( arguments.length > 0 ) {\r\n\r\n    \t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    Matrix3.prototype = {\r\n\r\n    \tconstructor: Matrix3,\r\n\r\n    \tisMatrix3: true,\r\n\r\n    \tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n    \t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n    \t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tidentity: function () {\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\t1, 0, 0,\r\n    \t\t\t0, 1, 0,\r\n    \t\t\t0, 0, 1\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( m ) {\r\n\r\n    \t\tvar me = m.elements;\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n    \t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n    \t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromMatrix4: function( m ) {\r\n\r\n    \t\tvar me = m.elements;\r\n\r\n    \t\tthis.set(\r\n\r\n    \t\t\tme[ 0 ], me[ 4 ], me[  8 ],\r\n    \t\t\tme[ 1 ], me[ 5 ], me[  9 ],\r\n    \t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n    \t\t);\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tapplyToVector3Array: function () {\r\n\r\n    \t\tvar v1;\r\n\r\n    \t\treturn function applyToVector3Array( array, offset, length ) {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n    \t\t\tif ( offset === undefined ) offset = 0;\r\n    \t\t\tif ( length === undefined ) length = array.length;\r\n\r\n    \t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n    \t\t\t\tv1.fromArray( array, j );\r\n    \t\t\t\tv1.applyMatrix3( this );\r\n    \t\t\t\tv1.toArray( array, j );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn array;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tapplyToBuffer: function () {\r\n\r\n    \t\tvar v1;\r\n\r\n    \t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\r\n    \t\t\tif ( offset === undefined ) offset = 0;\r\n    \t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n    \t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n    \t\t\t\tv1.x = buffer.getX( j );\r\n    \t\t\t\tv1.y = buffer.getY( j );\r\n    \t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n    \t\t\t\tv1.applyMatrix3( this );\r\n\r\n    \t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn buffer;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tmultiplyScalar: function ( s ) {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n    \t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n    \t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdeterminant: function () {\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n    \t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n    \t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n    \t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n    \t},\r\n\r\n    \tgetInverse: function ( matrix, throwOnDegenerate ) {\r\n\r\n    \t\tif ( (matrix && matrix.isMatrix4) ) {\r\n\r\n    \t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar me = matrix.elements,\r\n    \t\t\tte = this.elements,\r\n\r\n    \t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\r\n    \t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\r\n    \t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\r\n\r\n    \t\t\tt11 = n33 * n22 - n32 * n23,\r\n    \t\t\tt12 = n32 * n13 - n33 * n12,\r\n    \t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n    \t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n    \t\tif ( det === 0 ) {\r\n\r\n    \t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n    \t\t\tif ( throwOnDegenerate === true ) {\r\n\r\n    \t\t\t\tthrow new Error( msg );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tconsole.warn( msg );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn this.identity();\r\n    \t\t}\r\n\r\n    \t\tvar detInv = 1 / det;\r\n\r\n    \t\tte[ 0 ] = t11 * detInv;\r\n    \t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n    \t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n    \t\tte[ 3 ] = t12 * detInv;\r\n    \t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n    \t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n    \t\tte[ 6 ] = t13 * detInv;\r\n    \t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n    \t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttranspose: function () {\r\n\r\n    \t\tvar tmp, m = this.elements;\r\n\r\n    \t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n    \t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n    \t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n    \t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\r\n    \t\t\t\t\"- just use .toArray instead.\" );\r\n\r\n    \t\treturn this.toArray( array, offset );\r\n\r\n    \t},\r\n\r\n    \tgetNormalMatrix: function ( matrix4 ) {\r\n\r\n    \t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\r\n\r\n    \t},\r\n\r\n    \ttransposeIntoArray: function ( r ) {\r\n\r\n    \t\tvar m = this.elements;\r\n\r\n    \t\tr[ 0 ] = m[ 0 ];\r\n    \t\tr[ 1 ] = m[ 3 ];\r\n    \t\tr[ 2 ] = m[ 6 ];\r\n    \t\tr[ 3 ] = m[ 1 ];\r\n    \t\tr[ 4 ] = m[ 4 ];\r\n    \t\tr[ 5 ] = m[ 7 ];\r\n    \t\tr[ 6 ] = m[ 2 ];\r\n    \t\tr[ 7 ] = m[ 5 ];\r\n    \t\tr[ 8 ] = m[ 8 ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tfromArray: function ( array, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tfor( var i = 0; i < 9; i ++ ) {\r\n\r\n    \t\t\tthis.elements[ i ] = array[ i + offset ];\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoArray: function ( array, offset ) {\r\n\r\n    \t\tif ( array === undefined ) array = [];\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tvar te = this.elements;\r\n\r\n    \t\tarray[ offset ] = te[ 0 ];\r\n    \t\tarray[ offset + 1 ] = te[ 1 ];\r\n    \t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n    \t\tarray[ offset + 3 ] = te[ 3 ];\r\n    \t\tarray[ offset + 4 ] = te[ 4 ];\r\n    \t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n    \t\tarray[ offset + 6 ] = te[ 6 ];\r\n    \t\tarray[ offset + 7 ] = te[ 7 ];\r\n    \t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n    \t\treturn array;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    function Plane( normal, constant ) {\r\n\r\n    \tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\r\n    \tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n    }\r\n\r\n    Plane.prototype = {\r\n\r\n    \tconstructor: Plane,\r\n\r\n    \tset: function ( normal, constant ) {\r\n\r\n    \t\tthis.normal.copy( normal );\r\n    \t\tthis.constant = constant;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetComponents: function ( x, y, z, w ) {\r\n\r\n    \t\tthis.normal.set( x, y, z );\r\n    \t\tthis.constant = w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n    \t\tthis.normal.copy( normal );\r\n    \t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromCoplanarPoints: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n    \t\tvar v2 = new Vector3();\r\n\r\n    \t\treturn function setFromCoplanarPoints( a, b, c ) {\r\n\r\n    \t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n    \t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n    \t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( plane ) {\r\n\r\n    \t\tthis.normal.copy( plane.normal );\r\n    \t\tthis.constant = plane.constant;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tnormalize: function () {\r\n\r\n    \t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n    \t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n    \t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n    \t\tthis.constant *= inverseNormalLength;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tnegate: function () {\r\n\r\n    \t\tthis.constant *= - 1;\r\n    \t\tthis.normal.negate();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdistanceToPoint: function ( point ) {\r\n\r\n    \t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n    \t},\r\n\r\n    \tdistanceToSphere: function ( sphere ) {\r\n\r\n    \t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n    \t},\r\n\r\n    \tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n    \t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n    \t},\r\n\r\n    \torthoPoint: function ( point, optionalTarget ) {\r\n\r\n    \t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n    \t},\r\n\r\n    \tintersectLine: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function intersectLine( line, optionalTarget ) {\r\n\r\n    \t\t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\t\tvar direction = line.delta( v1 );\r\n\r\n    \t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n    \t\t\tif ( denominator === 0 ) {\r\n\r\n    \t\t\t\t// line is coplanar, return origin\r\n    \t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n    \t\t\t\t\treturn result.copy( line.start );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t// Unsure if this is the correct method to handle this case.\r\n    \t\t\t\treturn undefined;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n    \t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n    \t\t\t\treturn undefined;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tintersectsLine: function ( line ) {\r\n\r\n    \t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n    \t\tvar startSign = this.distanceToPoint( line.start );\r\n    \t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n    \t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n    \t},\r\n\r\n    \tintersectsBox: function ( box ) {\r\n\r\n    \t\treturn box.intersectsPlane( this );\r\n\r\n    \t},\r\n\r\n    \tintersectsSphere: function ( sphere ) {\r\n\r\n    \t\treturn sphere.intersectsPlane( this );\r\n\r\n    \t},\r\n\r\n    \tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n    \t},\r\n\r\n    \tapplyMatrix4: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n    \t\tvar m1 = new Matrix3();\r\n\r\n    \t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\r\n\r\n    \t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\r\n\r\n    \t\t\t// transform normal based on theory here:\r\n    \t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n    \t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n    \t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n    \t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\r\n    \t\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttranslate: function ( offset ) {\r\n\r\n    \t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( plane ) {\r\n\r\n    \t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    function Frustum( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n    \tthis.planes = [\r\n\r\n    \t\t( p0 !== undefined ) ? p0 : new Plane(),\r\n    \t\t( p1 !== undefined ) ? p1 : new Plane(),\r\n    \t\t( p2 !== undefined ) ? p2 : new Plane(),\r\n    \t\t( p3 !== undefined ) ? p3 : new Plane(),\r\n    \t\t( p4 !== undefined ) ? p4 : new Plane(),\r\n    \t\t( p5 !== undefined ) ? p5 : new Plane()\r\n\r\n    \t];\r\n\r\n    }\r\n\r\n    Frustum.prototype = {\r\n\r\n    \tconstructor: Frustum,\r\n\r\n    \tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n    \t\tvar planes = this.planes;\r\n\r\n    \t\tplanes[ 0 ].copy( p0 );\r\n    \t\tplanes[ 1 ].copy( p1 );\r\n    \t\tplanes[ 2 ].copy( p2 );\r\n    \t\tplanes[ 3 ].copy( p3 );\r\n    \t\tplanes[ 4 ].copy( p4 );\r\n    \t\tplanes[ 5 ].copy( p5 );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( frustum ) {\r\n\r\n    \t\tvar planes = this.planes;\r\n\r\n    \t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromMatrix: function ( m ) {\r\n\r\n    \t\tvar planes = this.planes;\r\n    \t\tvar me = m.elements;\r\n    \t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n    \t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n    \t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n    \t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n    \t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n    \t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n    \t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n    \t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n    \t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n    \t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tintersectsObject: function () {\r\n\r\n    \t\tvar sphere = new Sphere();\r\n\r\n    \t\treturn function intersectsObject( object ) {\r\n\r\n    \t\t\tvar geometry = object.geometry;\r\n\r\n    \t\t\tif ( geometry.boundingSphere === null )\r\n    \t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n    \t\t\tsphere.copy( geometry.boundingSphere )\r\n    \t\t\t\t.applyMatrix4( object.matrixWorld );\r\n\r\n    \t\t\treturn this.intersectsSphere( sphere );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tintersectsSprite: function () {\r\n\r\n    \t\tvar sphere = new Sphere();\r\n\r\n    \t\treturn function intersectsSprite( sprite ) {\r\n\r\n    \t\t\tsphere.center.set( 0, 0, 0 );\r\n    \t\t\tsphere.radius = 0.7071067811865476;\r\n    \t\t\tsphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n    \t\t\treturn this.intersectsSphere( sphere );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tintersectsSphere: function ( sphere ) {\r\n\r\n    \t\tvar planes = this.planes;\r\n    \t\tvar center = sphere.center;\r\n    \t\tvar negRadius = - sphere.radius;\r\n\r\n    \t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n    \t\t\tif ( distance < negRadius ) {\r\n\r\n    \t\t\t\treturn false;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn true;\r\n\r\n    \t},\r\n\r\n    \tintersectsBox: function () {\r\n\r\n    \t\tvar p1 = new Vector3(),\r\n    \t\t\tp2 = new Vector3();\r\n\r\n    \t\treturn function intersectsBox( box ) {\r\n\r\n    \t\t\tvar planes = this.planes;\r\n\r\n    \t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n    \t\t\t\tvar plane = planes[ i ];\r\n\r\n    \t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n    \t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n    \t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n    \t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n    \t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n    \t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n    \t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n    \t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n    \t\t\t\t// if both outside plane, no intersection\r\n\r\n    \t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n    \t\t\t\t\treturn false;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn true;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n\r\n    \tcontainsPoint: function ( point ) {\r\n\r\n    \t\tvar planes = this.planes;\r\n\r\n    \t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n    \t\t\t\treturn false;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn true;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    function WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\r\n\r\n    \tvar _gl = _renderer.context,\r\n    \t_state = _renderer.state,\r\n    \t_frustum = new Frustum(),\r\n    \t_projScreenMatrix = new Matrix4(),\r\n\r\n    \t_lightShadows = _lights.shadows,\r\n\r\n    \t_shadowMapSize = new Vector2(),\r\n    \t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\r\n\r\n    \t_lookTarget = new Vector3(),\r\n    \t_lightPositionWorld = new Vector3(),\r\n\r\n    \t_renderList = [],\r\n\r\n    \t_MorphingFlag = 1,\r\n    \t_SkinningFlag = 2,\r\n\r\n    \t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\r\n    \t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n    \t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\r\n\r\n    \t_materialCache = {};\r\n\r\n    \tvar cubeDirections = [\r\n    \t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\r\n    \t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\r\n    \t];\r\n\r\n    \tvar cubeUps = [\r\n    \t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\r\n    \t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\r\n    \t];\r\n\r\n    \tvar cube2DViewPorts = [\r\n    \t\tnew Vector4(), new Vector4(), new Vector4(),\r\n    \t\tnew Vector4(), new Vector4(), new Vector4()\r\n    \t];\r\n\r\n    \t// init\r\n\r\n    \tvar depthMaterialTemplate = new MeshDepthMaterial();\r\n    \tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\r\n    \tdepthMaterialTemplate.clipping = true;\r\n\r\n    \tvar distanceShader = ShaderLib[ \"distanceRGBA\" ];\r\n    \tvar distanceUniforms = exports.UniformsUtils.clone( distanceShader.uniforms );\r\n\r\n    \tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\r\n    \t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n    \t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\r\n    \t\tvar depthMaterial = depthMaterialTemplate.clone();\r\n    \t\tdepthMaterial.morphTargets = useMorphing;\r\n    \t\tdepthMaterial.skinning = useSkinning;\r\n\r\n    \t\t_depthMaterials[ i ] = depthMaterial;\r\n\r\n    \t\tvar distanceMaterial = new ShaderMaterial( {\r\n    \t\t\tdefines: {\r\n    \t\t\t\t'USE_SHADOWMAP': ''\r\n    \t\t\t},\r\n    \t\t\tuniforms: distanceUniforms,\r\n    \t\t\tvertexShader: distanceShader.vertexShader,\r\n    \t\t\tfragmentShader: distanceShader.fragmentShader,\r\n    \t\t\tmorphTargets: useMorphing,\r\n    \t\t\tskinning: useSkinning,\r\n    \t\t\tclipping: true\r\n    \t\t} );\r\n\r\n    \t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tvar scope = this;\r\n\r\n    \tthis.enabled = false;\r\n\r\n    \tthis.autoUpdate = true;\r\n    \tthis.needsUpdate = false;\r\n\r\n    \tthis.type = PCFShadowMap;\r\n\r\n    \tthis.renderReverseSided = true;\r\n    \tthis.renderSingleSided = true;\r\n\r\n    \tthis.render = function ( scene, camera ) {\r\n\r\n    \t\tif ( scope.enabled === false ) return;\r\n    \t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n    \t\tif ( _lightShadows.length === 0 ) return;\r\n\r\n    \t\t// Set GL state for depth map.\r\n    \t\t_state.clearColor( 1, 1, 1, 1 );\r\n    \t\t_state.disable( _gl.BLEND );\r\n    \t\t_state.setDepthTest( true );\r\n    \t\t_state.setScissorTest( false );\r\n\r\n    \t\t// render depth map\r\n\r\n    \t\tvar faceCount, isPointLight;\r\n\r\n    \t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvar light = _lightShadows[ i ];\r\n    \t\t\tvar shadow = light.shadow;\r\n\r\n    \t\t\tif ( shadow === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\r\n    \t\t\t\tcontinue;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar shadowCamera = shadow.camera;\r\n\r\n    \t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n    \t\t\t_shadowMapSize.min( _maxShadowMapSize );\r\n\r\n    \t\t\tif ( (light && light.isPointLight) ) {\r\n\r\n    \t\t\t\tfaceCount = 6;\r\n    \t\t\t\tisPointLight = true;\r\n\r\n    \t\t\t\tvar vpWidth = _shadowMapSize.x;\r\n    \t\t\t\tvar vpHeight = _shadowMapSize.y;\r\n\r\n    \t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n    \t\t\t\t// following orientation:\r\n    \t\t\t\t//\r\n    \t\t\t\t//  xzXZ\r\n    \t\t\t\t//   y Y\r\n    \t\t\t\t//\r\n    \t\t\t\t// X - Positive x direction\r\n    \t\t\t\t// x - Negative x direction\r\n    \t\t\t\t// Y - Positive y direction\r\n    \t\t\t\t// y - Negative y direction\r\n    \t\t\t\t// Z - Positive z direction\r\n    \t\t\t\t// z - Negative z direction\r\n\r\n    \t\t\t\t// positive X\r\n    \t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n    \t\t\t\t// negative X\r\n    \t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n    \t\t\t\t// positive Z\r\n    \t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n    \t\t\t\t// negative Z\r\n    \t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n    \t\t\t\t// positive Y\r\n    \t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n    \t\t\t\t// negative Y\r\n    \t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\r\n    \t\t\t\t_shadowMapSize.x *= 4.0;\r\n    \t\t\t\t_shadowMapSize.y *= 2.0;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tfaceCount = 1;\r\n    \t\t\t\tisPointLight = false;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( shadow.map === null ) {\r\n\r\n    \t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\r\n\r\n    \t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\r\n    \t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( (shadow && shadow.isSpotLightShadow) ) {\r\n\r\n    \t\t\t\tshadow.update( light );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar shadowMap = shadow.map;\r\n    \t\t\tvar shadowMatrix = shadow.matrix;\r\n\r\n    \t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n    \t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n    \t\t\t_renderer.setRenderTarget( shadowMap );\r\n    \t\t\t_renderer.clear();\r\n\r\n    \t\t\t// render shadow map for each cube face (if omni-directional) or\r\n    \t\t\t// run a single pass if not\r\n\r\n    \t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\r\n    \t\t\t\tif ( isPointLight ) {\r\n\r\n    \t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n    \t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n    \t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n    \t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n    \t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n    \t\t\t\t\t_state.viewport( vpDimensions );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n    \t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tshadowCamera.updateMatrixWorld();\r\n    \t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n    \t\t\t\t// compute shadow matrix\r\n\r\n    \t\t\t\tshadowMatrix.set(\r\n    \t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n    \t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n    \t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n    \t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n    \t\t\t\t);\r\n\r\n    \t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n    \t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n    \t\t\t\t// update camera matrices and frustum\r\n\r\n    \t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n    \t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n    \t\t\t\t// set object matrices & frustum culling\r\n\r\n    \t\t\t\t_renderList.length = 0;\r\n\r\n    \t\t\t\tprojectObject( scene, camera, shadowCamera );\r\n\r\n    \t\t\t\t// render shadow map\r\n    \t\t\t\t// render regular objects\r\n\r\n    \t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\t\tvar object = _renderList[ j ];\r\n    \t\t\t\t\tvar geometry = _objects.update( object );\r\n    \t\t\t\t\tvar material = object.material;\r\n\r\n    \t\t\t\t\tif ( (material && material.isMultiMaterial) ) {\r\n\r\n    \t\t\t\t\t\tvar groups = geometry.groups;\r\n    \t\t\t\t\t\tvar materials = material.materials;\r\n\r\n    \t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n    \t\t\t\t\t\t\tvar group = groups[ k ];\r\n    \t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n    \t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n    \t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\r\n    \t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\r\n    \t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// Restore GL state.\r\n    \t\tvar clearColor = _renderer.getClearColor(),\r\n    \t\tclearAlpha = _renderer.getClearAlpha();\r\n    \t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\r\n    \t\tscope.needsUpdate = false;\r\n\r\n    \t};\r\n\r\n    \tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\r\n\r\n    \t\tvar geometry = object.geometry;\r\n\r\n    \t\tvar result = null;\r\n\r\n    \t\tvar materialVariants = _depthMaterials;\r\n    \t\tvar customMaterial = object.customDepthMaterial;\r\n\r\n    \t\tif ( isPointLight ) {\r\n\r\n    \t\t\tmaterialVariants = _distanceMaterials;\r\n    \t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( ! customMaterial ) {\r\n\r\n    \t\t\tvar useMorphing = false;\r\n\r\n    \t\t\tif ( material.morphTargets ) {\r\n\r\n    \t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\r\n\r\n    \t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\r\n\r\n    \t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\r\n\r\n    \t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\r\n\r\n    \t\t\tvar variantIndex = 0;\r\n\r\n    \t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n    \t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\r\n    \t\t\tresult = materialVariants[ variantIndex ];\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tresult = customMaterial;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( _renderer.localClippingEnabled &&\r\n    \t\t\t material.clipShadows === true &&\r\n    \t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\r\n\r\n    \t\t\t// in this case we need a unique material instance reflecting the\r\n    \t\t\t// appropriate state\r\n\r\n    \t\t\tvar keyA = result.uuid, keyB = material.uuid;\r\n\r\n    \t\t\tvar materialsForVariant = _materialCache[ keyA ];\r\n\r\n    \t\t\tif ( materialsForVariant === undefined ) {\r\n\r\n    \t\t\t\tmaterialsForVariant = {};\r\n    \t\t\t\t_materialCache[ keyA ] = materialsForVariant;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\r\n\r\n    \t\t\tif ( cachedMaterial === undefined ) {\r\n\r\n    \t\t\t\tcachedMaterial = result.clone();\r\n    \t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tresult = cachedMaterial;\r\n\r\n    \t\t}\r\n\r\n    \t\tresult.visible = material.visible;\r\n    \t\tresult.wireframe = material.wireframe;\r\n\r\n    \t\tvar side = material.side;\r\n\r\n    \t\tif ( scope.renderSingleSided && side == DoubleSide ) {\r\n\r\n    \t\t\tside = FrontSide;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( scope.renderReverseSided ) {\r\n\r\n    \t\t\tif ( side === FrontSide ) side = BackSide;\r\n    \t\t\telse if ( side === BackSide ) side = FrontSide;\r\n\r\n    \t\t}\r\n\r\n    \t\tresult.side = side;\r\n\r\n    \t\tresult.clipShadows = material.clipShadows;\r\n    \t\tresult.clippingPlanes = material.clippingPlanes;\r\n\r\n    \t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n    \t\tresult.linewidth = material.linewidth;\r\n\r\n    \t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\r\n\r\n    \t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result;\r\n\r\n    \t}\r\n\r\n    \tfunction projectObject( object, camera, shadowCamera ) {\r\n\r\n    \t\tif ( object.visible === false ) return;\r\n\r\n    \t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\r\n\r\n    \t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\r\n\r\n    \t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n    \t\t\t\tvar material = object.material;\r\n\r\n    \t\t\t\tif ( material.visible === true ) {\r\n\r\n    \t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n    \t\t\t\t\t_renderList.push( object );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar children = object.children;\r\n\r\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n    \t\t\tprojectObject( children[ i ], camera, shadowCamera );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    /**\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    function Ray( origin, direction ) {\r\n\r\n    \tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\r\n    \tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\r\n\r\n    }\r\n\r\n    Ray.prototype = {\r\n\r\n    \tconstructor: Ray,\r\n\r\n    \tset: function ( origin, direction ) {\r\n\r\n    \t\tthis.origin.copy( origin );\r\n    \t\tthis.direction.copy( direction );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( ray ) {\r\n\r\n    \t\tthis.origin.copy( ray.origin );\r\n    \t\tthis.direction.copy( ray.direction );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tat: function ( t, optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n    \t},\r\n\r\n    \tlookAt: function ( v ) {\r\n\r\n    \t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \trecast: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function recast( t ) {\r\n\r\n    \t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\tresult.subVectors( point, this.origin );\r\n    \t\tvar directionDistance = result.dot( this.direction );\r\n\r\n    \t\tif ( directionDistance < 0 ) {\r\n\r\n    \t\t\treturn result.copy( this.origin );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n    \t},\r\n\r\n    \tdistanceToPoint: function ( point ) {\r\n\r\n    \t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n    \t},\r\n\r\n    \tdistanceSqToPoint: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function distanceSqToPoint( point ) {\r\n\r\n    \t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n    \t\t\t// point behind the ray\r\n\r\n    \t\t\tif ( directionDistance < 0 ) {\r\n\r\n    \t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n    \t\t\treturn v1.distanceToSquared( point );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tdistanceSqToSegment: function () {\r\n\r\n    \t\tvar segCenter = new Vector3();\r\n    \t\tvar segDir = new Vector3();\r\n    \t\tvar diff = new Vector3();\r\n\r\n    \t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n    \t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n    \t\t\t// It returns the min distance between the ray and the segment\r\n    \t\t\t// defined by v0 and v1\r\n    \t\t\t// It can also set two optional targets :\r\n    \t\t\t// - The closest point on the ray\r\n    \t\t\t// - The closest point on the segment\r\n\r\n    \t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n    \t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n    \t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n    \t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n    \t\t\tvar a01 = - this.direction.dot( segDir );\r\n    \t\t\tvar b0 = diff.dot( this.direction );\r\n    \t\t\tvar b1 = - diff.dot( segDir );\r\n    \t\t\tvar c = diff.lengthSq();\r\n    \t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n    \t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n    \t\t\tif ( det > 0 ) {\r\n\r\n    \t\t\t\t// The ray and segment are not parallel.\r\n\r\n    \t\t\t\ts0 = a01 * b1 - b0;\r\n    \t\t\t\ts1 = a01 * b0 - b1;\r\n    \t\t\t\textDet = segExtent * det;\r\n\r\n    \t\t\t\tif ( s0 >= 0 ) {\r\n\r\n    \t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n    \t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n    \t\t\t\t\t\t\t// region 0\r\n    \t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n    \t\t\t\t\t\t\tvar invDet = 1 / det;\r\n    \t\t\t\t\t\t\ts0 *= invDet;\r\n    \t\t\t\t\t\t\ts1 *= invDet;\r\n    \t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n    \t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\t// region 1\r\n\r\n    \t\t\t\t\t\t\ts1 = segExtent;\r\n    \t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n    \t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t// region 5\r\n\r\n    \t\t\t\t\t\ts1 = - segExtent;\r\n    \t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n    \t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n    \t\t\t\t\t\t// region 4\r\n\r\n    \t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n    \t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n    \t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n    \t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n    \t\t\t\t\t\t// region 3\r\n\r\n    \t\t\t\t\t\ts0 = 0;\r\n    \t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n    \t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t// region 2\r\n\r\n    \t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n    \t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n    \t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// Ray and segment are parallel.\r\n\r\n    \t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n    \t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n    \t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( optionalPointOnRay ) {\r\n\r\n    \t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( optionalPointOnSegment ) {\r\n\r\n    \t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn sqrDist;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tintersectSphere: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function intersectSphere( sphere, optionalTarget ) {\r\n\r\n    \t\t\tv1.subVectors( sphere.center, this.origin );\r\n    \t\t\tvar tca = v1.dot( this.direction );\r\n    \t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n    \t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n    \t\t\tif ( d2 > radius2 ) return null;\r\n\r\n    \t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n    \t\t\t// t0 = first intersect point - entrance on front of sphere\r\n    \t\t\tvar t0 = tca - thc;\r\n\r\n    \t\t\t// t1 = second intersect point - exit point on back of sphere\r\n    \t\t\tvar t1 = tca + thc;\r\n\r\n    \t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n    \t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n    \t\t\t// test to see if t0 is behind the ray:\r\n    \t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n    \t\t\t// in order to always return an intersect point that is in front of the ray.\r\n    \t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n    \t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n    \t\t\treturn this.at( t0, optionalTarget );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tintersectsSphere: function ( sphere ) {\r\n\r\n    \t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n    \t},\r\n\r\n    \tdistanceToPlane: function ( plane ) {\r\n\r\n    \t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n    \t\tif ( denominator === 0 ) {\r\n\r\n    \t\t\t// line is coplanar, return origin\r\n    \t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n    \t\t\t\treturn 0;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n    \t\t\treturn null;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n    \t\t// Return if the ray never intersects the plane\r\n\r\n    \t\treturn t >= 0 ? t :  null;\r\n\r\n    \t},\r\n\r\n    \tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n    \t\tvar t = this.distanceToPlane( plane );\r\n\r\n    \t\tif ( t === null ) {\r\n\r\n    \t\t\treturn null;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this.at( t, optionalTarget );\r\n\r\n    \t},\r\n\r\n\r\n\r\n    \tintersectsPlane: function ( plane ) {\r\n\r\n    \t\t// check if the ray lies on the plane first\r\n\r\n    \t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n    \t\tif ( distToPoint === 0 ) {\r\n\r\n    \t\t\treturn true;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n    \t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n    \t\t\treturn true;\r\n\r\n    \t\t}\r\n\r\n    \t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n    \t\treturn false;\r\n\r\n    \t},\r\n\r\n    \tintersectBox: function ( box, optionalTarget ) {\r\n\r\n    \t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n    \t\tvar invdirx = 1 / this.direction.x,\r\n    \t\t\tinvdiry = 1 / this.direction.y,\r\n    \t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n    \t\tvar origin = this.origin;\r\n\r\n    \t\tif ( invdirx >= 0 ) {\r\n\r\n    \t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n    \t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n    \t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( invdiry >= 0 ) {\r\n\r\n    \t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n    \t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n    \t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n    \t\t// These lines also handle the case where tmin or tmax is NaN\r\n    \t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n    \t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n    \t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n    \t\tif ( invdirz >= 0 ) {\r\n\r\n    \t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n    \t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n    \t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n    \t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n    \t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n    \t\t//return point closest to the ray (positive side)\r\n\r\n    \t\tif ( tmax < 0 ) return null;\r\n\r\n    \t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n    \t},\r\n\r\n    \tintersectsBox: ( function () {\r\n\r\n    \t\tvar v = new Vector3();\r\n\r\n    \t\treturn function intersectsBox( box ) {\r\n\r\n    \t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n    \t\t};\r\n\r\n    \t} )(),\r\n\r\n    \tintersectTriangle: function () {\r\n\r\n    \t\t// Compute the offset origin, edges, and normal.\r\n    \t\tvar diff = new Vector3();\r\n    \t\tvar edge1 = new Vector3();\r\n    \t\tvar edge2 = new Vector3();\r\n    \t\tvar normal = new Vector3();\r\n\r\n    \t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n    \t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n    \t\t\tedge1.subVectors( b, a );\r\n    \t\t\tedge2.subVectors( c, a );\r\n    \t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n    \t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n    \t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n    \t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n    \t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n    \t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n    \t\t\tvar DdN = this.direction.dot( normal );\r\n    \t\t\tvar sign;\r\n\r\n    \t\t\tif ( DdN > 0 ) {\r\n\r\n    \t\t\t\tif ( backfaceCulling ) return null;\r\n    \t\t\t\tsign = 1;\r\n\r\n    \t\t\t} else if ( DdN < 0 ) {\r\n\r\n    \t\t\t\tsign = - 1;\r\n    \t\t\t\tDdN = - DdN;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\treturn null;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tdiff.subVectors( this.origin, a );\r\n    \t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n    \t\t\t// b1 < 0, no intersection\r\n    \t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n    \t\t\t\treturn null;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n    \t\t\t// b2 < 0, no intersection\r\n    \t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n    \t\t\t\treturn null;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// b1+b2 > 1, no intersection\r\n    \t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n    \t\t\t\treturn null;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// Line intersects triangle, check if ray does.\r\n    \t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n    \t\t\t// t < 0, no intersection\r\n    \t\t\tif ( QdN < 0 ) {\r\n\r\n    \t\t\t\treturn null;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// Ray intersects triangle.\r\n    \t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tapplyMatrix4: function ( matrix4 ) {\r\n\r\n    \t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n    \t\tthis.origin.applyMatrix4( matrix4 );\r\n    \t\tthis.direction.sub( this.origin );\r\n    \t\tthis.direction.normalize();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( ray ) {\r\n\r\n    \t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    function Euler( x, y, z, order ) {\r\n\r\n    \tthis._x = x || 0;\r\n    \tthis._y = y || 0;\r\n    \tthis._z = z || 0;\r\n    \tthis._order = order || Euler.DefaultOrder;\r\n\r\n    }\r\n\r\n    Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\n    Euler.DefaultOrder = 'XYZ';\r\n\r\n    Euler.prototype = {\r\n\r\n    \tconstructor: Euler,\r\n\r\n    \tisEuler: true,\r\n\r\n    \tget x () {\r\n\r\n    \t\treturn this._x;\r\n\r\n    \t},\r\n\r\n    \tset x ( value ) {\r\n\r\n    \t\tthis._x = value;\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t},\r\n\r\n    \tget y () {\r\n\r\n    \t\treturn this._y;\r\n\r\n    \t},\r\n\r\n    \tset y ( value ) {\r\n\r\n    \t\tthis._y = value;\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t},\r\n\r\n    \tget z () {\r\n\r\n    \t\treturn this._z;\r\n\r\n    \t},\r\n\r\n    \tset z ( value ) {\r\n\r\n    \t\tthis._z = value;\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t},\r\n\r\n    \tget order () {\r\n\r\n    \t\treturn this._order;\r\n\r\n    \t},\r\n\r\n    \tset order ( value ) {\r\n\r\n    \t\tthis._order = value;\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t},\r\n\r\n    \tset: function ( x, y, z, order ) {\r\n\r\n    \t\tthis._x = x;\r\n    \t\tthis._y = y;\r\n    \t\tthis._z = z;\r\n    \t\tthis._order = order || this._order;\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( euler ) {\r\n\r\n    \t\tthis._x = euler._x;\r\n    \t\tthis._y = euler._y;\r\n    \t\tthis._z = euler._z;\r\n    \t\tthis._order = euler._order;\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n    \t\tvar clamp = exports.Math.clamp;\r\n\r\n    \t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n    \t\tvar te = m.elements;\r\n    \t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n    \t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n    \t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n    \t\torder = order || this._order;\r\n\r\n    \t\tif ( order === 'XYZ' ) {\r\n\r\n    \t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n    \t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n    \t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n    \t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n    \t\t\t\tthis._z = 0;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( order === 'YXZ' ) {\r\n\r\n    \t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n    \t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n    \t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n    \t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n    \t\t\t\tthis._z = 0;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( order === 'ZXY' ) {\r\n\r\n    \t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n    \t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n    \t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n    \t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis._y = 0;\r\n    \t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( order === 'ZYX' ) {\r\n\r\n    \t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n    \t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n    \t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n    \t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis._x = 0;\r\n    \t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( order === 'YZX' ) {\r\n\r\n    \t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n    \t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n    \t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n    \t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis._x = 0;\r\n    \t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( order === 'XZY' ) {\r\n\r\n    \t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n    \t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n    \t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n    \t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n    \t\t\t\tthis._y = 0;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis._order = order;\r\n\r\n    \t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromQuaternion: function () {\r\n\r\n    \t\tvar matrix;\r\n\r\n    \t\treturn function setFromQuaternion( q, order, update ) {\r\n\r\n    \t\t\tif ( matrix === undefined ) matrix = new Matrix4();\r\n\r\n    \t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\r\n    \t\t\treturn this.setFromRotationMatrix( matrix, order, update );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tsetFromVector3: function ( v, order ) {\r\n\r\n    \t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n    \t},\r\n\r\n    \treorder: function () {\r\n\r\n    \t\t// WARNING: this discards revolution information -bhouston\r\n\r\n    \t\tvar q = new Quaternion();\r\n\r\n    \t\treturn function reorder( newOrder ) {\r\n\r\n    \t\t\tq.setFromEuler( this );\r\n\r\n    \t\t\treturn this.setFromQuaternion( q, newOrder );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tequals: function ( euler ) {\r\n\r\n    \t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n    \t},\r\n\r\n    \tfromArray: function ( array ) {\r\n\r\n    \t\tthis._x = array[ 0 ];\r\n    \t\tthis._y = array[ 1 ];\r\n    \t\tthis._z = array[ 2 ];\r\n    \t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n    \t\tthis.onChangeCallback();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoArray: function ( array, offset ) {\r\n\r\n    \t\tif ( array === undefined ) array = [];\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tarray[ offset ] = this._x;\r\n    \t\tarray[ offset + 1 ] = this._y;\r\n    \t\tarray[ offset + 2 ] = this._z;\r\n    \t\tarray[ offset + 3 ] = this._order;\r\n\r\n    \t\treturn array;\r\n\r\n    \t},\r\n\r\n    \ttoVector3: function ( optionalResult ) {\r\n\r\n    \t\tif ( optionalResult ) {\r\n\r\n    \t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\treturn new Vector3( this._x, this._y, this._z );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tonChange: function ( callback ) {\r\n\r\n    \t\tthis.onChangeCallback = callback;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tonChangeCallback: function () {}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Layers() {\r\n\r\n    \tthis.mask = 1;\r\n\r\n    }\r\n\r\n    Layers.prototype = {\r\n\r\n    \tconstructor: Layers,\r\n\r\n    \tset: function ( channel ) {\r\n\r\n    \t\tthis.mask = 1 << channel;\r\n\r\n    \t},\r\n\r\n    \tenable: function ( channel ) {\r\n\r\n    \t\tthis.mask |= 1 << channel;\r\n\r\n    \t},\r\n\r\n    \ttoggle: function ( channel ) {\r\n\r\n    \t\tthis.mask ^= 1 << channel;\r\n\r\n    \t},\r\n\r\n    \tdisable: function ( channel ) {\r\n\r\n    \t\tthis.mask &= ~ ( 1 << channel );\r\n\r\n    \t},\r\n\r\n    \ttest: function ( layers ) {\r\n\r\n    \t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     * @author elephantatwork / www.elephantatwork.ch\r\n     */\r\n\r\n    function Object3D() {\r\n\r\n    \tObject.defineProperty( this, 'id', { value: Object3DIdCount() } );\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.name = '';\r\n    \tthis.type = 'Object3D';\r\n\r\n    \tthis.parent = null;\r\n    \tthis.children = [];\r\n\r\n    \tthis.up = Object3D.DefaultUp.clone();\r\n\r\n    \tvar position = new Vector3();\r\n    \tvar rotation = new Euler();\r\n    \tvar quaternion = new Quaternion();\r\n    \tvar scale = new Vector3( 1, 1, 1 );\r\n\r\n    \tfunction onRotationChange() {\r\n\r\n    \t\tquaternion.setFromEuler( rotation, false );\r\n\r\n    \t}\r\n\r\n    \tfunction onQuaternionChange() {\r\n\r\n    \t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n    \t}\r\n\r\n    \trotation.onChange( onRotationChange );\r\n    \tquaternion.onChange( onQuaternionChange );\r\n\r\n    \tObject.defineProperties( this, {\r\n    \t\tposition: {\r\n    \t\t\tenumerable: true,\r\n    \t\t\tvalue: position\r\n    \t\t},\r\n    \t\trotation: {\r\n    \t\t\tenumerable: true,\r\n    \t\t\tvalue: rotation\r\n    \t\t},\r\n    \t\tquaternion: {\r\n    \t\t\tenumerable: true,\r\n    \t\t\tvalue: quaternion\r\n    \t\t},\r\n    \t\tscale: {\r\n    \t\t\tenumerable: true,\r\n    \t\t\tvalue: scale\r\n    \t\t},\r\n    \t\tmodelViewMatrix: {\r\n    \t\t\tvalue: new Matrix4()\r\n    \t\t},\r\n    \t\tnormalMatrix: {\r\n    \t\t\tvalue: new Matrix3()\r\n    \t\t}\r\n    \t} );\r\n\r\n    \tthis.matrix = new Matrix4();\r\n    \tthis.matrixWorld = new Matrix4();\r\n\r\n    \tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\r\n    \tthis.matrixWorldNeedsUpdate = false;\r\n\r\n    \tthis.layers = new Layers();\r\n    \tthis.visible = true;\r\n\r\n    \tthis.castShadow = false;\r\n    \tthis.receiveShadow = false;\r\n\r\n    \tthis.frustumCulled = true;\r\n    \tthis.renderOrder = 0;\r\n\r\n    \tthis.userData = {};\r\n\r\n    \tthis.onBeforeRender = null;\r\n\r\n    }\r\n\r\n    Object3D.DefaultUp = new Vector3( 0, 1, 0 );\r\n    Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\n    Object.assign( Object3D.prototype, EventDispatcher.prototype, {\r\n\r\n    \tisObject3D: true,\r\n\r\n    \tapplyMatrix: function ( matrix ) {\r\n\r\n    \t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n    \t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n    \t},\r\n\r\n    \tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n    \t\t// assumes axis is normalized\r\n\r\n    \t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n    \t},\r\n\r\n    \tsetRotationFromEuler: function ( euler ) {\r\n\r\n    \t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n    \t},\r\n\r\n    \tsetRotationFromMatrix: function ( m ) {\r\n\r\n    \t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n    \t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n    \t},\r\n\r\n    \tsetRotationFromQuaternion: function ( q ) {\r\n\r\n    \t\t// assumes q is normalized\r\n\r\n    \t\tthis.quaternion.copy( q );\r\n\r\n    \t},\r\n\r\n    \trotateOnAxis: function () {\r\n\r\n    \t\t// rotate object on axis in object space\r\n    \t\t// axis is assumed to be normalized\r\n\r\n    \t\tvar q1 = new Quaternion();\r\n\r\n    \t\treturn function rotateOnAxis( axis, angle ) {\r\n\r\n    \t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n    \t\t\tthis.quaternion.multiply( q1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \trotateX: function () {\r\n\r\n    \t\tvar v1 = new Vector3( 1, 0, 0 );\r\n\r\n    \t\treturn function rotateX( angle ) {\r\n\r\n    \t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \trotateY: function () {\r\n\r\n    \t\tvar v1 = new Vector3( 0, 1, 0 );\r\n\r\n    \t\treturn function rotateY( angle ) {\r\n\r\n    \t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \trotateZ: function () {\r\n\r\n    \t\tvar v1 = new Vector3( 0, 0, 1 );\r\n\r\n    \t\treturn function rotateZ( angle ) {\r\n\r\n    \t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttranslateOnAxis: function () {\r\n\r\n    \t\t// translate object by distance along axis in object space\r\n    \t\t// axis is assumed to be normalized\r\n\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function translateOnAxis( axis, distance ) {\r\n\r\n    \t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n    \t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttranslateX: function () {\r\n\r\n    \t\tvar v1 = new Vector3( 1, 0, 0 );\r\n\r\n    \t\treturn function translateX( distance ) {\r\n\r\n    \t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttranslateY: function () {\r\n\r\n    \t\tvar v1 = new Vector3( 0, 1, 0 );\r\n\r\n    \t\treturn function translateY( distance ) {\r\n\r\n    \t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttranslateZ: function () {\r\n\r\n    \t\tvar v1 = new Vector3( 0, 0, 1 );\r\n\r\n    \t\treturn function translateZ( distance ) {\r\n\r\n    \t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tlocalToWorld: function ( vector ) {\r\n\r\n    \t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n    \t},\r\n\r\n    \tworldToLocal: function () {\r\n\r\n    \t\tvar m1 = new Matrix4();\r\n\r\n    \t\treturn function worldToLocal( vector ) {\r\n\r\n    \t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tlookAt: function () {\r\n\r\n    \t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n    \t\tvar m1 = new Matrix4();\r\n\r\n    \t\treturn function lookAt( vector ) {\r\n\r\n    \t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n    \t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tadd: function ( object ) {\r\n\r\n    \t\tif ( arguments.length > 1 ) {\r\n\r\n    \t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n    \t\t\t\tthis.add( arguments[ i ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( object === this ) {\r\n\r\n    \t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n    \t\t\treturn this;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( (object && object.isObject3D) ) {\r\n\r\n    \t\t\tif ( object.parent !== null ) {\r\n\r\n    \t\t\t\tobject.parent.remove( object );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tobject.parent = this;\r\n    \t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n    \t\t\tthis.children.push( object );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tremove: function ( object ) {\r\n\r\n    \t\tif ( arguments.length > 1 ) {\r\n\r\n    \t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n    \t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar index = this.children.indexOf( object );\r\n\r\n    \t\tif ( index !== - 1 ) {\r\n\r\n    \t\t\tobject.parent = null;\r\n\r\n    \t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n    \t\t\tthis.children.splice( index, 1 );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tgetObjectById: function ( id ) {\r\n\r\n    \t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n    \t},\r\n\r\n    \tgetObjectByName: function ( name ) {\r\n\r\n    \t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n    \t},\r\n\r\n    \tgetObjectByProperty: function ( name, value ) {\r\n\r\n    \t\tif ( this[ name ] === value ) return this;\r\n\r\n    \t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar child = this.children[ i ];\r\n    \t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n    \t\t\tif ( object !== undefined ) {\r\n\r\n    \t\t\t\treturn object;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn undefined;\r\n\r\n    \t},\r\n\r\n    \tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\tthis.updateMatrixWorld( true );\r\n\r\n    \t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n    \t},\r\n\r\n    \tgetWorldQuaternion: function () {\r\n\r\n    \t\tvar position = new Vector3();\r\n    \t\tvar scale = new Vector3();\r\n\r\n    \t\treturn function getWorldQuaternion( optionalTarget ) {\r\n\r\n    \t\t\tvar result = optionalTarget || new Quaternion();\r\n\r\n    \t\t\tthis.updateMatrixWorld( true );\r\n\r\n    \t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n    \t\t\treturn result;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tgetWorldRotation: function () {\r\n\r\n    \t\tvar quaternion = new Quaternion();\r\n\r\n    \t\treturn function getWorldRotation( optionalTarget ) {\r\n\r\n    \t\t\tvar result = optionalTarget || new Euler();\r\n\r\n    \t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n    \t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tgetWorldScale: function () {\r\n\r\n    \t\tvar position = new Vector3();\r\n    \t\tvar quaternion = new Quaternion();\r\n\r\n    \t\treturn function getWorldScale( optionalTarget ) {\r\n\r\n    \t\t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\t\tthis.updateMatrixWorld( true );\r\n\r\n    \t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n    \t\t\treturn result;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tgetWorldDirection: function () {\r\n\r\n    \t\tvar quaternion = new Quaternion();\r\n\r\n    \t\treturn function getWorldDirection( optionalTarget ) {\r\n\r\n    \t\t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n    \t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \traycast: function () {},\r\n\r\n    \ttraverse: function ( callback ) {\r\n\r\n    \t\tcallback( this );\r\n\r\n    \t\tvar children = this.children;\r\n\r\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n    \t\t\tchildren[ i ].traverse( callback );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \ttraverseVisible: function ( callback ) {\r\n\r\n    \t\tif ( this.visible === false ) return;\r\n\r\n    \t\tcallback( this );\r\n\r\n    \t\tvar children = this.children;\r\n\r\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n    \t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \ttraverseAncestors: function ( callback ) {\r\n\r\n    \t\tvar parent = this.parent;\r\n\r\n    \t\tif ( parent !== null ) {\r\n\r\n    \t\t\tcallback( parent );\r\n\r\n    \t\t\tparent.traverseAncestors( callback );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tupdateMatrix: function () {\r\n\r\n    \t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n    \t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n    \t},\r\n\r\n    \tupdateMatrixWorld: function ( force ) {\r\n\r\n    \t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n    \t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n    \t\t\tif ( this.parent === null ) {\r\n\r\n    \t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n    \t\t\tforce = true;\r\n\r\n    \t\t}\r\n\r\n    \t\t// update children\r\n\r\n    \t\tvar children = this.children;\r\n\r\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n    \t\t\tchildren[ i ].updateMatrixWorld( force );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function ( meta ) {\r\n\r\n    \t\t// meta is '' when called from JSON.stringify\r\n    \t\tvar isRootObject = ( meta === undefined || meta === '' );\r\n\r\n    \t\tvar output = {};\r\n\r\n    \t\t// meta is a hash used to collect geometries, materials.\r\n    \t\t// not providing it implies that this is the root object\r\n    \t\t// being serialized.\r\n    \t\tif ( isRootObject ) {\r\n\r\n    \t\t\t// initialize meta obj\r\n    \t\t\tmeta = {\r\n    \t\t\t\tgeometries: {},\r\n    \t\t\t\tmaterials: {},\r\n    \t\t\t\ttextures: {},\r\n    \t\t\t\timages: {}\r\n    \t\t\t};\r\n\r\n    \t\t\toutput.metadata = {\r\n    \t\t\t\tversion: 4.4,\r\n    \t\t\t\ttype: 'Object',\r\n    \t\t\t\tgenerator: 'Object3D.toJSON'\r\n    \t\t\t};\r\n\r\n    \t\t}\r\n\r\n    \t\t// standard Object3D serialization\r\n\r\n    \t\tvar object = {};\r\n\r\n    \t\tobject.uuid = this.uuid;\r\n    \t\tobject.type = this.type;\r\n\r\n    \t\tif ( this.name !== '' ) object.name = this.name;\r\n    \t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n    \t\tif ( this.castShadow === true ) object.castShadow = true;\r\n    \t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n    \t\tif ( this.visible === false ) object.visible = false;\r\n\r\n    \t\tobject.matrix = this.matrix.toArray();\r\n\r\n    \t\t//\r\n\r\n    \t\tif ( this.geometry !== undefined ) {\r\n\r\n    \t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n    \t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tobject.geometry = this.geometry.uuid;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.material !== undefined ) {\r\n\r\n    \t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n    \t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tobject.material = this.material.uuid;\r\n\r\n    \t\t}\r\n\r\n    \t\t//\r\n\r\n    \t\tif ( this.children.length > 0 ) {\r\n\r\n    \t\t\tobject.children = [];\r\n\r\n    \t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n    \t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( isRootObject ) {\r\n\r\n    \t\t\tvar geometries = extractFromCache( meta.geometries );\r\n    \t\t\tvar materials = extractFromCache( meta.materials );\r\n    \t\t\tvar textures = extractFromCache( meta.textures );\r\n    \t\t\tvar images = extractFromCache( meta.images );\r\n\r\n    \t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n    \t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n    \t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n    \t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n    \t\t}\r\n\r\n    \t\toutput.object = object;\r\n\r\n    \t\treturn output;\r\n\r\n    \t\t// extract data from the cache hash\r\n    \t\t// remove metadata on each item\r\n    \t\t// and return as array\r\n    \t\tfunction extractFromCache( cache ) {\r\n\r\n    \t\t\tvar values = [];\r\n    \t\t\tfor ( var key in cache ) {\r\n\r\n    \t\t\t\tvar data = cache[ key ];\r\n    \t\t\t\tdelete data.metadata;\r\n    \t\t\t\tvalues.push( data );\r\n\r\n    \t\t\t}\r\n    \t\t\treturn values;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tclone: function ( recursive ) {\r\n\r\n    \t\treturn new this.constructor().copy( this, recursive );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source, recursive ) {\r\n\r\n    \t\tif ( recursive === undefined ) recursive = true;\r\n\r\n    \t\tthis.name = source.name;\r\n\r\n    \t\tthis.up.copy( source.up );\r\n\r\n    \t\tthis.position.copy( source.position );\r\n    \t\tthis.quaternion.copy( source.quaternion );\r\n    \t\tthis.scale.copy( source.scale );\r\n\r\n    \t\tthis.matrix.copy( source.matrix );\r\n    \t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n    \t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n    \t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n    \t\tthis.visible = source.visible;\r\n\r\n    \t\tthis.castShadow = source.castShadow;\r\n    \t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n    \t\tthis.frustumCulled = source.frustumCulled;\r\n    \t\tthis.renderOrder = source.renderOrder;\r\n\r\n    \t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n    \t\tif ( recursive === true ) {\r\n\r\n    \t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n    \t\t\t\tvar child = source.children[ i ];\r\n    \t\t\t\tthis.add( child.clone() );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    var count$2 = 0;\r\n    function Object3DIdCount() { return count$2++; };\r\n\r\n    /**\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    function Line3( start, end ) {\r\n\r\n    \tthis.start = ( start !== undefined ) ? start : new Vector3();\r\n    \tthis.end = ( end !== undefined ) ? end : new Vector3();\r\n\r\n    }\r\n\r\n    Line3.prototype = {\r\n\r\n    \tconstructor: Line3,\r\n\r\n    \tset: function ( start, end ) {\r\n\r\n    \t\tthis.start.copy( start );\r\n    \t\tthis.end.copy( end );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( line ) {\r\n\r\n    \t\tthis.start.copy( line.start );\r\n    \t\tthis.end.copy( line.end );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetCenter: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n    \t},\r\n\r\n    \tdelta: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\treturn result.subVectors( this.end, this.start );\r\n\r\n    \t},\r\n\r\n    \tdistanceSq: function () {\r\n\r\n    \t\treturn this.start.distanceToSquared( this.end );\r\n\r\n    \t},\r\n\r\n    \tdistance: function () {\r\n\r\n    \t\treturn this.start.distanceTo( this.end );\r\n\r\n    \t},\r\n\r\n    \tat: function ( t, optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n    \t},\r\n\r\n    \tclosestPointToPointParameter: function () {\r\n\r\n    \t\tvar startP = new Vector3();\r\n    \t\tvar startEnd = new Vector3();\r\n\r\n    \t\treturn function closestPointToPointParameter( point, clampToLine ) {\r\n\r\n    \t\t\tstartP.subVectors( point, this.start );\r\n    \t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n    \t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n    \t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n    \t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n    \t\t\tif ( clampToLine ) {\r\n\r\n    \t\t\t\tt = exports.Math.clamp( t, 0, 1 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn t;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n    \t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n    \t},\r\n\r\n    \tapplyMatrix4: function ( matrix ) {\r\n\r\n    \t\tthis.start.applyMatrix4( matrix );\r\n    \t\tthis.end.applyMatrix4( matrix );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tequals: function ( line ) {\r\n\r\n    \t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author bhouston / http://clara.io\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Triangle( a, b, c ) {\r\n\r\n    \tthis.a = ( a !== undefined ) ? a : new Vector3();\r\n    \tthis.b = ( b !== undefined ) ? b : new Vector3();\r\n    \tthis.c = ( c !== undefined ) ? c : new Vector3();\r\n\r\n    }\r\n\r\n    Triangle.normal = function () {\r\n\r\n    \tvar v0 = new Vector3();\r\n\r\n    \treturn function normal( a, b, c, optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\tresult.subVectors( c, b );\r\n    \t\tv0.subVectors( a, b );\r\n    \t\tresult.cross( v0 );\r\n\r\n    \t\tvar resultLengthSq = result.lengthSq();\r\n    \t\tif ( resultLengthSq > 0 ) {\r\n\r\n    \t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result.set( 0, 0, 0 );\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    // static/instance method to calculate barycentric coordinates\r\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n    Triangle.barycoordFromPoint = function () {\r\n\r\n    \tvar v0 = new Vector3();\r\n    \tvar v1 = new Vector3();\r\n    \tvar v2 = new Vector3();\r\n\r\n    \treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\r\n\r\n    \t\tv0.subVectors( c, a );\r\n    \t\tv1.subVectors( b, a );\r\n    \t\tv2.subVectors( point, a );\r\n\r\n    \t\tvar dot00 = v0.dot( v0 );\r\n    \t\tvar dot01 = v0.dot( v1 );\r\n    \t\tvar dot02 = v0.dot( v2 );\r\n    \t\tvar dot11 = v1.dot( v1 );\r\n    \t\tvar dot12 = v1.dot( v2 );\r\n\r\n    \t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\t// collinear or singular triangle\r\n    \t\tif ( denom === 0 ) {\r\n\r\n    \t\t\t// arbitrary location outside of triangle?\r\n    \t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n    \t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar invDenom = 1 / denom;\r\n    \t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n    \t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n    \t\t// barycentric coordinates must always sum to 1\r\n    \t\treturn result.set( 1 - u - v, v, u );\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    Triangle.containsPoint = function () {\r\n\r\n    \tvar v1 = new Vector3();\r\n\r\n    \treturn function containsPoint( point, a, b, c ) {\r\n\r\n    \t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n    \t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    Triangle.prototype = {\r\n\r\n    \tconstructor: Triangle,\r\n\r\n    \tset: function ( a, b, c ) {\r\n\r\n    \t\tthis.a.copy( a );\r\n    \t\tthis.b.copy( b );\r\n    \t\tthis.c.copy( c );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n    \t\tthis.a.copy( points[ i0 ] );\r\n    \t\tthis.b.copy( points[ i1 ] );\r\n    \t\tthis.c.copy( points[ i2 ] );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( triangle ) {\r\n\r\n    \t\tthis.a.copy( triangle.a );\r\n    \t\tthis.b.copy( triangle.b );\r\n    \t\tthis.c.copy( triangle.c );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tarea: function () {\r\n\r\n    \t\tvar v0 = new Vector3();\r\n    \t\tvar v1 = new Vector3();\r\n\r\n    \t\treturn function area() {\r\n\r\n    \t\t\tv0.subVectors( this.c, this.b );\r\n    \t\t\tv1.subVectors( this.a, this.b );\r\n\r\n    \t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tmidpoint: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n    \t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n    \t},\r\n\r\n    \tnormal: function ( optionalTarget ) {\r\n\r\n    \t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n    \t},\r\n\r\n    \tplane: function ( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Plane();\r\n\r\n    \t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n    \t},\r\n\r\n    \tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n    \t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n    \t},\r\n\r\n    \tcontainsPoint: function ( point ) {\r\n\r\n    \t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n    \t},\r\n\r\n    \tclosestPointToPoint: function () {\r\n\r\n    \t\tvar plane, edgeList, projectedPoint, closestPoint;\r\n\r\n    \t\treturn function closestPointToPoint( point, optionalTarget ) {\r\n\r\n    \t\t\tif ( plane === undefined ) {\r\n\r\n    \t\t\t\tplane = new Plane();\r\n    \t\t\t\tedgeList = [ new Line3(), new Line3(), new Line3() ];\r\n    \t\t\t\tprojectedPoint = new Vector3();\r\n    \t\t\t\tclosestPoint = new Vector3();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar result = optionalTarget || new Vector3();\r\n    \t\t\tvar minDistance = Infinity;\r\n\r\n    \t\t\t// project the point onto the plane of the triangle\r\n\r\n    \t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\r\n    \t\t\tplane.projectPoint( point, projectedPoint );\r\n\r\n    \t\t\t// check if the projection lies within the triangle\r\n\r\n    \t\t\tif( this.containsPoint( projectedPoint ) === true ) {\r\n\r\n    \t\t\t\t// if so, this is the closest point\r\n\r\n    \t\t\t\tresult.copy( projectedPoint );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\r\n\r\n    \t\t\t\tedgeList[ 0 ].set( this.a, this.b );\r\n    \t\t\t\tedgeList[ 1 ].set( this.b, this.c );\r\n    \t\t\t\tedgeList[ 2 ].set( this.c, this.a );\r\n\r\n    \t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\r\n\r\n    \t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\r\n\r\n    \t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\r\n\r\n    \t\t\t\t\tif( distance < minDistance ) {\r\n\r\n    \t\t\t\t\t\tminDistance = distance;\r\n\r\n    \t\t\t\t\t\tresult.copy( closestPoint );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn result;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tequals: function ( triangle ) {\r\n\r\n    \t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Face3( a, b, c, normal, color, materialIndex ) {\r\n\r\n    \tthis.a = a;\r\n    \tthis.b = b;\r\n    \tthis.c = c;\r\n\r\n    \tthis.normal = (normal && normal.isVector3) ? normal : new Vector3();\r\n    \tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n    \tthis.color = (color && color.isColor) ? color : new Color();\r\n    \tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n    \tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n    }\r\n\r\n    Face3.prototype = {\r\n\r\n    \tconstructor: Face3,\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tthis.a = source.a;\r\n    \t\tthis.b = source.b;\r\n    \t\tthis.c = source.c;\r\n\r\n    \t\tthis.normal.copy( source.normal );\r\n    \t\tthis.color.copy( source.color );\r\n\r\n    \t\tthis.materialIndex = source.materialIndex;\r\n\r\n    \t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n    \t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n    \t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * parameters = {\r\n     *  color: <hex>,\r\n     *  opacity: <float>,\r\n     *  map: new THREE.Texture( <Image> ),\r\n     *\r\n     *  aoMap: new THREE.Texture( <Image> ),\r\n     *  aoMapIntensity: <float>\r\n     *\r\n     *  specularMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  alphaMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n     *  combine: THREE.Multiply,\r\n     *  reflectivity: <float>,\r\n     *  refractionRatio: <float>,\r\n     *\r\n     *  shading: THREE.SmoothShading,\r\n     *  depthTest: <bool>,\r\n     *  depthWrite: <bool>,\r\n     *\r\n     *  wireframe: <boolean>,\r\n     *  wireframeLinewidth: <float>,\r\n     *\r\n     *  skinning: <bool>,\r\n     *  morphTargets: <bool>\r\n     * }\r\n     */\r\n\r\n    function MeshBasicMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'MeshBasicMaterial';\r\n\r\n    \tthis.color = new Color( 0xffffff ); // emissive\r\n\r\n    \tthis.map = null;\r\n\r\n    \tthis.aoMap = null;\r\n    \tthis.aoMapIntensity = 1.0;\r\n\r\n    \tthis.specularMap = null;\r\n\r\n    \tthis.alphaMap = null;\r\n\r\n    \tthis.envMap = null;\r\n    \tthis.combine = MultiplyOperation;\r\n    \tthis.reflectivity = 1;\r\n    \tthis.refractionRatio = 0.98;\r\n\r\n    \tthis.wireframe = false;\r\n    \tthis.wireframeLinewidth = 1;\r\n    \tthis.wireframeLinecap = 'round';\r\n    \tthis.wireframeLinejoin = 'round';\r\n\r\n    \tthis.skinning = false;\r\n    \tthis.morphTargets = false;\r\n\r\n    \tthis.lights = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    MeshBasicMaterial.prototype = Object.create( Material.prototype );\r\n    MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\r\n\r\n    MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\r\n\r\n    MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.color.copy( source.color );\r\n\r\n    \tthis.map = source.map;\r\n\r\n    \tthis.aoMap = source.aoMap;\r\n    \tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n    \tthis.specularMap = source.specularMap;\r\n\r\n    \tthis.alphaMap = source.alphaMap;\r\n\r\n    \tthis.envMap = source.envMap;\r\n    \tthis.combine = source.combine;\r\n    \tthis.reflectivity = source.reflectivity;\r\n    \tthis.refractionRatio = source.refractionRatio;\r\n\r\n    \tthis.wireframe = source.wireframe;\r\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n    \tthis.wireframeLinecap = source.wireframeLinecap;\r\n    \tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n    \tthis.skinning = source.skinning;\r\n    \tthis.morphTargets = source.morphTargets;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function BufferAttribute( array, itemSize, normalized ) {\r\n\r\n    \tif ( Array.isArray( array ) ) {\r\n\r\n    \t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\r\n\r\n    \t}\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.array = array;\r\n    \tthis.itemSize = itemSize;\r\n    \tthis.count = array !== undefined ? array.length / itemSize : 0;\r\n    \tthis.normalized = normalized === true;\r\n\r\n    \tthis.dynamic = false;\r\n    \tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n    \tthis.version = 0;\r\n\r\n    }\r\n\r\n    BufferAttribute.prototype = {\r\n\r\n    \tconstructor: BufferAttribute,\r\n\r\n    \tisBufferAttribute: true,\r\n\r\n    \tset needsUpdate( value ) {\r\n\r\n    \t\tif ( value === true ) this.version ++;\r\n\r\n    \t},\r\n\r\n    \tsetDynamic: function ( value ) {\r\n\r\n    \t\tthis.dynamic = value;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tthis.array = new source.array.constructor( source.array );\r\n    \t\tthis.itemSize = source.itemSize;\r\n    \t\tthis.count = source.count;\r\n    \t\tthis.normalized = source.normalized;\r\n\r\n    \t\tthis.dynamic = source.dynamic;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n    \t\tindex1 *= this.itemSize;\r\n    \t\tindex2 *= attribute.itemSize;\r\n\r\n    \t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n    \t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyArray: function ( array ) {\r\n\r\n    \t\tthis.array.set( array );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyColorsArray: function ( colors ) {\r\n\r\n    \t\tvar array = this.array, offset = 0;\r\n\r\n    \t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar color = colors[ i ];\r\n\r\n    \t\t\tif ( color === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n    \t\t\t\tcolor = new Color();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tarray[ offset ++ ] = color.r;\r\n    \t\t\tarray[ offset ++ ] = color.g;\r\n    \t\t\tarray[ offset ++ ] = color.b;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyIndicesArray: function ( indices ) {\r\n\r\n    \t\tvar array = this.array, offset = 0;\r\n\r\n    \t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar index = indices[ i ];\r\n\r\n    \t\t\tarray[ offset ++ ] = index.a;\r\n    \t\t\tarray[ offset ++ ] = index.b;\r\n    \t\t\tarray[ offset ++ ] = index.c;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyVector2sArray: function ( vectors ) {\r\n\r\n    \t\tvar array = this.array, offset = 0;\r\n\r\n    \t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar vector = vectors[ i ];\r\n\r\n    \t\t\tif ( vector === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n    \t\t\t\tvector = new Vector2();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tarray[ offset ++ ] = vector.x;\r\n    \t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyVector3sArray: function ( vectors ) {\r\n\r\n    \t\tvar array = this.array, offset = 0;\r\n\r\n    \t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar vector = vectors[ i ];\r\n\r\n    \t\t\tif ( vector === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n    \t\t\t\tvector = new Vector3();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tarray[ offset ++ ] = vector.x;\r\n    \t\t\tarray[ offset ++ ] = vector.y;\r\n    \t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyVector4sArray: function ( vectors ) {\r\n\r\n    \t\tvar array = this.array, offset = 0;\r\n\r\n    \t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar vector = vectors[ i ];\r\n\r\n    \t\t\tif ( vector === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n    \t\t\t\tvector = new Vector4();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tarray[ offset ++ ] = vector.x;\r\n    \t\t\tarray[ offset ++ ] = vector.y;\r\n    \t\t\tarray[ offset ++ ] = vector.z;\r\n    \t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tset: function ( value, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tthis.array.set( value, offset );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetX: function ( index ) {\r\n\r\n    \t\treturn this.array[ index * this.itemSize ];\r\n\r\n    \t},\r\n\r\n    \tsetX: function ( index, x ) {\r\n\r\n    \t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetY: function ( index ) {\r\n\r\n    \t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n    \t},\r\n\r\n    \tsetY: function ( index, y ) {\r\n\r\n    \t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetZ: function ( index ) {\r\n\r\n    \t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n    \t},\r\n\r\n    \tsetZ: function ( index, z ) {\r\n\r\n    \t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetW: function ( index ) {\r\n\r\n    \t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n    \t},\r\n\r\n    \tsetW: function ( index, w ) {\r\n\r\n    \t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetXY: function ( index, x, y ) {\r\n\r\n    \t\tindex *= this.itemSize;\r\n\r\n    \t\tthis.array[ index + 0 ] = x;\r\n    \t\tthis.array[ index + 1 ] = y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetXYZ: function ( index, x, y, z ) {\r\n\r\n    \t\tindex *= this.itemSize;\r\n\r\n    \t\tthis.array[ index + 0 ] = x;\r\n    \t\tthis.array[ index + 1 ] = y;\r\n    \t\tthis.array[ index + 2 ] = z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n    \t\tindex *= this.itemSize;\r\n\r\n    \t\tthis.array[ index + 0 ] = x;\r\n    \t\tthis.array[ index + 1 ] = y;\r\n    \t\tthis.array[ index + 2 ] = z;\r\n    \t\tthis.array[ index + 3 ] = w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    //\r\n\r\n    function Int8Attribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n    }\r\n\r\n    function Uint8Attribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n    }\r\n\r\n    function Uint8ClampedAttribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n    }\r\n\r\n    function Int16Attribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n    }\r\n\r\n    function Uint16Attribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n    }\r\n\r\n    function Int32Attribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n    }\r\n\r\n    function Uint32Attribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n    }\r\n\r\n    function Float32Attribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n    }\r\n\r\n    function Float64Attribute( array, itemSize ) {\r\n\r\n    \treturn new BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n    }\r\n\r\n    // Deprecated\r\n\r\n    function DynamicBufferAttribute( array, itemSize ) {\r\n\r\n    \tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n    \treturn new BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n    }\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author kile / http://kile.stravaganza.org/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    function Geometry() {\r\n\r\n    \tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.name = '';\r\n    \tthis.type = 'Geometry';\r\n\r\n    \tthis.vertices = [];\r\n    \tthis.colors = [];\r\n    \tthis.faces = [];\r\n    \tthis.faceVertexUvs = [ [] ];\r\n\r\n    \tthis.morphTargets = [];\r\n    \tthis.morphNormals = [];\r\n\r\n    \tthis.skinWeights = [];\r\n    \tthis.skinIndices = [];\r\n\r\n    \tthis.lineDistances = [];\r\n\r\n    \tthis.boundingBox = null;\r\n    \tthis.boundingSphere = null;\r\n\r\n    \t// update flags\r\n\r\n    \tthis.elementsNeedUpdate = false;\r\n    \tthis.verticesNeedUpdate = false;\r\n    \tthis.uvsNeedUpdate = false;\r\n    \tthis.normalsNeedUpdate = false;\r\n    \tthis.colorsNeedUpdate = false;\r\n    \tthis.lineDistancesNeedUpdate = false;\r\n    \tthis.groupsNeedUpdate = false;\r\n\r\n    }\r\n\r\n    Object.assign( Geometry.prototype, EventDispatcher.prototype, {\r\n\r\n    \tisGeometry: true,\r\n\r\n    \tapplyMatrix: function ( matrix ) {\r\n\r\n    \t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n    \t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvar vertex = this.vertices[ i ];\r\n    \t\t\tvertex.applyMatrix4( matrix );\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvar face = this.faces[ i ];\r\n    \t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n    \t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.boundingBox !== null ) {\r\n\r\n    \t\t\tthis.computeBoundingBox();\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.boundingSphere !== null ) {\r\n\r\n    \t\t\tthis.computeBoundingSphere();\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.verticesNeedUpdate = true;\r\n    \t\tthis.normalsNeedUpdate = true;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \trotateX: function () {\r\n\r\n    \t\t// rotate geometry around world x-axis\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function rotateX( angle ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeRotationX( angle );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \trotateY: function () {\r\n\r\n    \t\t// rotate geometry around world y-axis\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function rotateY( angle ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeRotationY( angle );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \trotateZ: function () {\r\n\r\n    \t\t// rotate geometry around world z-axis\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function rotateZ( angle ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeRotationZ( angle );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttranslate: function () {\r\n\r\n    \t\t// translate geometry\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function translate( x, y, z ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeTranslation( x, y, z );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tscale: function () {\r\n\r\n    \t\t// scale geometry\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function scale( x, y, z ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeScale( x, y, z );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tlookAt: function () {\r\n\r\n    \t\tvar obj;\r\n\r\n    \t\treturn function lookAt( vector ) {\r\n\r\n    \t\t\tif ( obj === undefined ) obj = new Object3D();\r\n\r\n    \t\t\tobj.lookAt( vector );\r\n\r\n    \t\t\tobj.updateMatrix();\r\n\r\n    \t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tfromBufferGeometry: function ( geometry ) {\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n    \t\tvar attributes = geometry.attributes;\r\n\r\n    \t\tvar positions = attributes.position.array;\r\n    \t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n    \t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n    \t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n    \t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n    \t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n    \t\tvar tempNormals = [];\r\n    \t\tvar tempUVs = [];\r\n    \t\tvar tempUVs2 = [];\r\n\r\n    \t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\r\n    \t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\r\n\r\n    \t\t\tif ( normals !== undefined ) {\r\n\r\n    \t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( colors !== undefined ) {\r\n\r\n    \t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( uvs !== undefined ) {\r\n\r\n    \t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( uvs2 !== undefined ) {\r\n\r\n    \t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction addFace( a, b, c, materialIndex ) {\r\n\r\n    \t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n    \t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n    \t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\r\n\r\n    \t\t\tscope.faces.push( face );\r\n\r\n    \t\t\tif ( uvs !== undefined ) {\r\n\r\n    \t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( uvs2 !== undefined ) {\r\n\r\n    \t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( indices !== undefined ) {\r\n\r\n    \t\t\tvar groups = geometry.groups;\r\n\r\n    \t\t\tif ( groups.length > 0 ) {\r\n\r\n    \t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n    \t\t\t\t\tvar group = groups[ i ];\r\n\r\n    \t\t\t\t\tvar start = group.start;\r\n    \t\t\t\t\tvar count = group.count;\r\n\r\n    \t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n    \t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n    \t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\r\n\r\n    \t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.computeFaceNormals();\r\n\r\n    \t\tif ( geometry.boundingBox !== null ) {\r\n\r\n    \t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n    \t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcenter: function () {\r\n\r\n    \t\tthis.computeBoundingBox();\r\n\r\n    \t\tvar offset = this.boundingBox.getCenter().negate();\r\n\r\n    \t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n    \t\treturn offset;\r\n\r\n    \t},\r\n\r\n    \tnormalize: function () {\r\n\r\n    \t\tthis.computeBoundingSphere();\r\n\r\n    \t\tvar center = this.boundingSphere.center;\r\n    \t\tvar radius = this.boundingSphere.radius;\r\n\r\n    \t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n    \t\tvar matrix = new Matrix4();\r\n    \t\tmatrix.set(\r\n    \t\t\ts, 0, 0, - s * center.x,\r\n    \t\t\t0, s, 0, - s * center.y,\r\n    \t\t\t0, 0, s, - s * center.z,\r\n    \t\t\t0, 0, 0, 1\r\n    \t\t);\r\n\r\n    \t\tthis.applyMatrix( matrix );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcomputeFaceNormals: function () {\r\n\r\n    \t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n    \t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\tvar face = this.faces[ f ];\r\n\r\n    \t\t\tvar vA = this.vertices[ face.a ];\r\n    \t\t\tvar vB = this.vertices[ face.b ];\r\n    \t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n    \t\t\tcb.subVectors( vC, vB );\r\n    \t\t\tab.subVectors( vA, vB );\r\n    \t\t\tcb.cross( ab );\r\n\r\n    \t\t\tcb.normalize();\r\n\r\n    \t\t\tface.normal.copy( cb );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n    \t\tif ( areaWeighted === undefined ) areaWeighted = true;\r\n\r\n    \t\tvar v, vl, f, fl, face, vertices;\r\n\r\n    \t\tvertices = new Array( this.vertices.length );\r\n\r\n    \t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n    \t\t\tvertices[ v ] = new Vector3();\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( areaWeighted ) {\r\n\r\n    \t\t\t// vertex normals weighted by triangle areas\r\n    \t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n    \t\t\tvar vA, vB, vC;\r\n    \t\t\tvar cb = new Vector3(), ab = new Vector3();\r\n\r\n    \t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\t\tface = this.faces[ f ];\r\n\r\n    \t\t\t\tvA = this.vertices[ face.a ];\r\n    \t\t\t\tvB = this.vertices[ face.b ];\r\n    \t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n    \t\t\t\tcb.subVectors( vC, vB );\r\n    \t\t\t\tab.subVectors( vA, vB );\r\n    \t\t\t\tcb.cross( ab );\r\n\r\n    \t\t\t\tvertices[ face.a ].add( cb );\r\n    \t\t\t\tvertices[ face.b ].add( cb );\r\n    \t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\t\tface = this.faces[ f ];\r\n\r\n    \t\t\t\tvertices[ face.a ].add( face.normal );\r\n    \t\t\t\tvertices[ face.b ].add( face.normal );\r\n    \t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n    \t\t\tvertices[ v ].normalize();\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\tface = this.faces[ f ];\r\n\r\n    \t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n    \t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n    \t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n    \t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n    \t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n    \t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n    \t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.faces.length > 0 ) {\r\n\r\n    \t\t\tthis.normalsNeedUpdate = true;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tcomputeMorphNormals: function () {\r\n\r\n    \t\tvar i, il, f, fl, face;\r\n\r\n    \t\t// save original normals\r\n    \t\t// - create temp variables on first access\r\n    \t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n    \t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\tface = this.faces[ f ];\r\n\r\n    \t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n    \t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n    \t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n    \t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n    \t\tvar tmpGeo = new Geometry();\r\n    \t\ttmpGeo.faces = this.faces;\r\n\r\n    \t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n    \t\t\t// create on first access\r\n\r\n    \t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n    \t\t\t\tthis.morphNormals[ i ] = {};\r\n    \t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n    \t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n    \t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n    \t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n    \t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n    \t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\t\t\tfaceNormal = new Vector3();\r\n    \t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\r\n\r\n    \t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n    \t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n    \t\t\t// set vertices to morph target\r\n\r\n    \t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n    \t\t\t// compute morph normals\r\n\r\n    \t\t\ttmpGeo.computeFaceNormals();\r\n    \t\t\ttmpGeo.computeVertexNormals();\r\n\r\n    \t\t\t// store morph normals\r\n\r\n    \t\t\tvar faceNormal, vertexNormals;\r\n\r\n    \t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\t\tface = this.faces[ f ];\r\n\r\n    \t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n    \t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n    \t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n    \t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n    \t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n    \t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// restore original normals\r\n\r\n    \t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\tface = this.faces[ f ];\r\n\r\n    \t\t\tface.normal = face.__originalFaceNormal;\r\n    \t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tcomputeTangents: function () {\r\n\r\n    \t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n    \t},\r\n\r\n    \tcomputeLineDistances: function () {\r\n\r\n    \t\tvar d = 0;\r\n    \t\tvar vertices = this.vertices;\r\n\r\n    \t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n    \t\t\tif ( i > 0 ) {\r\n\r\n    \t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.lineDistances[ i ] = d;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tcomputeBoundingBox: function () {\r\n\r\n    \t\tif ( this.boundingBox === null ) {\r\n\r\n    \t\t\tthis.boundingBox = new Box3();\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n    \t},\r\n\r\n    \tcomputeBoundingSphere: function () {\r\n\r\n    \t\tif ( this.boundingSphere === null ) {\r\n\r\n    \t\t\tthis.boundingSphere = new Sphere();\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n    \t},\r\n\r\n    \tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n    \t\tif ( (geometry && geometry.isGeometry) === false ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar normalMatrix,\r\n    \t\tvertexOffset = this.vertices.length,\r\n    \t\tvertices1 = this.vertices,\r\n    \t\tvertices2 = geometry.vertices,\r\n    \t\tfaces1 = this.faces,\r\n    \t\tfaces2 = geometry.faces,\r\n    \t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n    \t\tuvs2 = geometry.faceVertexUvs[ 0 ],\r\n    \t\tcolors1 = this.colors,\r\n    \t\tcolors2 = geometry.colors;\r\n\r\n    \t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n    \t\tif ( matrix !== undefined ) {\r\n\r\n    \t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n    \t\t}\r\n\r\n    \t\t// vertices\r\n\r\n    \t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvar vertex = vertices2[ i ];\r\n\r\n    \t\t\tvar vertexCopy = vertex.clone();\r\n\r\n    \t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n    \t\t\tvertices1.push( vertexCopy );\r\n\r\n    \t\t}\r\n\r\n    \t\t// colors\r\n\r\n    \t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\r\n\r\n    \t\t\tcolors1.push( colors2[ i ].clone() );\r\n\r\n    \t\t}\r\n\r\n    \t\t// faces\r\n\r\n    \t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n    \t\t\tfaceVertexNormals = face.vertexNormals,\r\n    \t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n    \t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n    \t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n    \t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n    \t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n    \t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n    \t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfaceCopy.color.copy( face.color );\r\n\r\n    \t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\tcolor = faceVertexColors[ j ];\r\n    \t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n    \t\t\tfaces1.push( faceCopy );\r\n\r\n    \t\t}\r\n\r\n    \t\t// uvs\r\n\r\n    \t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n    \t\t\tif ( uv === undefined ) {\r\n\r\n    \t\t\t\tcontinue;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tuvs1.push( uvCopy );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tmergeMesh: function ( mesh ) {\r\n\r\n    \t\tif ( (mesh && mesh.isMesh) === false ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n    \t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n    \t},\r\n\r\n    \t/*\r\n    \t * Checks for duplicate vertices with hashmap.\r\n    \t * Duplicated vertices are removed\r\n    \t * and faces' vertices are updated.\r\n    \t */\r\n\r\n    \tmergeVertices: function () {\r\n\r\n    \t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n    \t\tvar unique = [], changes = [];\r\n\r\n    \t\tvar v, key;\r\n    \t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n    \t\tvar precision = Math.pow( 10, precisionPoints );\r\n    \t\tvar i, il, face;\r\n    \t\tvar indices, j, jl;\r\n\r\n    \t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n    \t\t\tv = this.vertices[ i ];\r\n    \t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n    \t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n    \t\t\t\tverticesMap[ key ] = i;\r\n    \t\t\t\tunique.push( this.vertices[ i ] );\r\n    \t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n    \t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n\r\n    \t\t// if faces are completely degenerate after merging vertices, we\r\n    \t\t// have to remove them from the geometry.\r\n    \t\tvar faceIndicesToRemove = [];\r\n\r\n    \t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n    \t\t\tface = this.faces[ i ];\r\n\r\n    \t\t\tface.a = changes[ face.a ];\r\n    \t\t\tface.b = changes[ face.b ];\r\n    \t\t\tface.c = changes[ face.c ];\r\n\r\n    \t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n    \t\t\tvar dupIndex = - 1;\r\n\r\n    \t\t\t// if any duplicate vertices are found in a Face3\r\n    \t\t\t// we have to remove the face as nothing can be saved\r\n    \t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n    \t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n    \t\t\t\t\tdupIndex = n;\r\n    \t\t\t\t\tfaceIndicesToRemove.push( i );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n    \t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n    \t\t\tthis.faces.splice( idx, 1 );\r\n\r\n    \t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// Use unique set of vertices\r\n\r\n    \t\tvar diff = this.vertices.length - unique.length;\r\n    \t\tthis.vertices = unique;\r\n    \t\treturn diff;\r\n\r\n    \t},\r\n\r\n    \tsortFacesByMaterialIndex: function () {\r\n\r\n    \t\tvar faces = this.faces;\r\n    \t\tvar length = faces.length;\r\n\r\n    \t\t// tag faces\r\n\r\n    \t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n    \t\t\tfaces[ i ]._id = i;\r\n\r\n    \t\t}\r\n\r\n    \t\t// sort faces\r\n\r\n    \t\tfunction materialIndexSort( a, b ) {\r\n\r\n    \t\t\treturn a.materialIndex - b.materialIndex;\r\n\r\n    \t\t}\r\n\r\n    \t\tfaces.sort( materialIndexSort );\r\n\r\n    \t\t// sort uvs\r\n\r\n    \t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n    \t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\r\n    \t\tvar newUvs1, newUvs2;\r\n\r\n    \t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n    \t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\r\n    \t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n    \t\t\tvar id = faces[ i ]._id;\r\n\r\n    \t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n    \t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n    \t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function () {\r\n\r\n    \t\tvar data = {\r\n    \t\t\tmetadata: {\r\n    \t\t\t\tversion: 4.4,\r\n    \t\t\t\ttype: 'Geometry',\r\n    \t\t\t\tgenerator: 'Geometry.toJSON'\r\n    \t\t\t}\r\n    \t\t};\r\n\r\n    \t\t// standard Geometry serialization\r\n\r\n    \t\tdata.uuid = this.uuid;\r\n    \t\tdata.type = this.type;\r\n    \t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n    \t\tif ( this.parameters !== undefined ) {\r\n\r\n    \t\t\tvar parameters = this.parameters;\r\n\r\n    \t\t\tfor ( var key in parameters ) {\r\n\r\n    \t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn data;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar vertices = [];\r\n\r\n    \t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n    \t\t\tvar vertex = this.vertices[ i ];\r\n    \t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar faces = [];\r\n    \t\tvar normals = [];\r\n    \t\tvar normalsHash = {};\r\n    \t\tvar colors = [];\r\n    \t\tvar colorsHash = {};\r\n    \t\tvar uvs = [];\r\n    \t\tvar uvsHash = {};\r\n\r\n    \t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n    \t\t\tvar face = this.faces[ i ];\r\n\r\n    \t\t\tvar hasMaterial = true;\r\n    \t\t\tvar hasFaceUv = false; // deprecated\r\n    \t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n    \t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n    \t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n    \t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n    \t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n    \t\t\tvar faceType = 0;\r\n\r\n    \t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\r\n    \t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n    \t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n    \t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n    \t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n    \t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n    \t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n    \t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n    \t\t\tfaces.push( faceType );\r\n    \t\t\tfaces.push( face.a, face.b, face.c );\r\n    \t\t\tfaces.push( face.materialIndex );\r\n\r\n    \t\t\tif ( hasFaceVertexUv ) {\r\n\r\n    \t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n    \t\t\t\tfaces.push(\r\n    \t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n    \t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n    \t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n    \t\t\t\t);\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( hasFaceNormal ) {\r\n\r\n    \t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n    \t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n    \t\t\t\tfaces.push(\r\n    \t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n    \t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n    \t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n    \t\t\t\t);\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( hasFaceColor ) {\r\n\r\n    \t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( hasFaceVertexColor ) {\r\n\r\n    \t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n    \t\t\t\tfaces.push(\r\n    \t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n    \t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n    \t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n    \t\t\t\t);\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction setBit( value, position, enabled ) {\r\n\r\n    \t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction getNormalIndex( normal ) {\r\n\r\n    \t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n    \t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n    \t\t\t\treturn normalsHash[ hash ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n    \t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n    \t\t\treturn normalsHash[ hash ];\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction getColorIndex( color ) {\r\n\r\n    \t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n    \t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n    \t\t\t\treturn colorsHash[ hash ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tcolorsHash[ hash ] = colors.length;\r\n    \t\t\tcolors.push( color.getHex() );\r\n\r\n    \t\t\treturn colorsHash[ hash ];\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction getUvIndex( uv ) {\r\n\r\n    \t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n    \t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n    \t\t\t\treturn uvsHash[ hash ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n    \t\t\tuvs.push( uv.x, uv.y );\r\n\r\n    \t\t\treturn uvsHash[ hash ];\r\n\r\n    \t\t}\r\n\r\n    \t\tdata.data = {};\r\n\r\n    \t\tdata.data.vertices = vertices;\r\n    \t\tdata.data.normals = normals;\r\n    \t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n    \t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n    \t\tdata.data.faces = faces;\r\n\r\n    \t\treturn data;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\t/*\r\n    \t\t// Handle primitives\r\n\r\n    \t\tvar parameters = this.parameters;\r\n\r\n    \t\tif ( parameters !== undefined ) {\r\n\r\n    \t\t\tvar values = [];\r\n\r\n    \t\t\tfor ( var key in parameters ) {\r\n\r\n    \t\t\t\tvalues.push( parameters[ key ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n    \t\t\tthis.constructor.apply( geometry, values );\r\n    \t\t\treturn geometry;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n    \t\t*/\r\n\r\n    \t\treturn new Geometry().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tthis.vertices = [];\r\n    \t\tthis.faces = [];\r\n    \t\tthis.faceVertexUvs = [ [] ];\r\n    \t\tthis.colors = [];\r\n\r\n    \t\tvar vertices = source.vertices;\r\n\r\n    \t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n    \t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar colors = source.colors;\r\n\r\n    \t\tfor ( var i = 0, il = colors.length; i < il; i ++ ) {\r\n\r\n    \t\t\tthis.colors.push( colors[ i ].clone() );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar faces = source.faces;\r\n\r\n    \t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n    \t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n    \t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n    \t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n    \t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n    \t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n    \t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdispose: function () {\r\n\r\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    var count$3 = 0;\r\n    function GeometryIdCount() { return count$3++; };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function DirectGeometry() {\r\n\r\n    \tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.name = '';\r\n    \tthis.type = 'DirectGeometry';\r\n\r\n    \tthis.indices = [];\r\n    \tthis.vertices = [];\r\n    \tthis.normals = [];\r\n    \tthis.colors = [];\r\n    \tthis.uvs = [];\r\n    \tthis.uvs2 = [];\r\n\r\n    \tthis.groups = [];\r\n\r\n    \tthis.morphTargets = {};\r\n\r\n    \tthis.skinWeights = [];\r\n    \tthis.skinIndices = [];\r\n\r\n    \t// this.lineDistances = [];\r\n\r\n    \tthis.boundingBox = null;\r\n    \tthis.boundingSphere = null;\r\n\r\n    \t// update flags\r\n\r\n    \tthis.verticesNeedUpdate = false;\r\n    \tthis.normalsNeedUpdate = false;\r\n    \tthis.colorsNeedUpdate = false;\r\n    \tthis.uvsNeedUpdate = false;\r\n    \tthis.groupsNeedUpdate = false;\r\n\r\n    }\r\n\r\n    Object.assign( DirectGeometry.prototype, EventDispatcher.prototype, {\r\n\r\n    \tcomputeBoundingBox: Geometry.prototype.computeBoundingBox,\r\n    \tcomputeBoundingSphere: Geometry.prototype.computeBoundingSphere,\r\n\r\n    \tcomputeFaceNormals: function () {\r\n\r\n    \t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n    \t},\r\n\r\n    \tcomputeVertexNormals: function () {\r\n\r\n    \t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n    \t},\r\n\r\n    \tcomputeGroups: function ( geometry ) {\r\n\r\n    \t\tvar group;\r\n    \t\tvar groups = [];\r\n    \t\tvar materialIndex;\r\n\r\n    \t\tvar faces = geometry.faces;\r\n\r\n    \t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n    \t\t\tvar face = faces[ i ];\r\n\r\n    \t\t\t// materials\r\n\r\n    \t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n    \t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n    \t\t\t\tif ( group !== undefined ) {\r\n\r\n    \t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n    \t\t\t\t\tgroups.push( group );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tgroup = {\r\n    \t\t\t\t\tstart: i * 3,\r\n    \t\t\t\t\tmaterialIndex: materialIndex\r\n    \t\t\t\t};\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( group !== undefined ) {\r\n\r\n    \t\t\tgroup.count = ( i * 3 ) - group.start;\r\n    \t\t\tgroups.push( group );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.groups = groups;\r\n\r\n    \t},\r\n\r\n    \tfromGeometry: function ( geometry ) {\r\n\r\n    \t\tvar faces = geometry.faces;\r\n    \t\tvar vertices = geometry.vertices;\r\n    \t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n    \t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n    \t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n    \t\t// morphs\r\n\r\n    \t\tvar morphTargets = geometry.morphTargets;\r\n    \t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n    \t\tvar morphTargetsPosition;\r\n\r\n    \t\tif ( morphTargetsLength > 0 ) {\r\n\r\n    \t\t\tmorphTargetsPosition = [];\r\n\r\n    \t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n    \t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar morphNormals = geometry.morphNormals;\r\n    \t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n    \t\tvar morphTargetsNormal;\r\n\r\n    \t\tif ( morphNormalsLength > 0 ) {\r\n\r\n    \t\t\tmorphTargetsNormal = [];\r\n\r\n    \t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n    \t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n    \t\t}\r\n\r\n    \t\t// skins\r\n\r\n    \t\tvar skinIndices = geometry.skinIndices;\r\n    \t\tvar skinWeights = geometry.skinWeights;\r\n\r\n    \t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n    \t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n    \t\t//\r\n\r\n    \t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n    \t\t\tvar face = faces[ i ];\r\n\r\n    \t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n    \t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n    \t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n    \t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tvar normal = face.normal;\r\n\r\n    \t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar vertexColors = face.vertexColors;\r\n\r\n    \t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n    \t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tvar color = face.color;\r\n\r\n    \t\t\t\tthis.colors.push( color, color, color );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n    \t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n    \t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n    \t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n    \t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n    \t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n    \t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n    \t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n    \t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// morphs\r\n\r\n    \t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n    \t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n    \t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n    \t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n    \t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// skins\r\n\r\n    \t\t\tif ( hasSkinIndices ) {\r\n\r\n    \t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( hasSkinWeights ) {\r\n\r\n    \t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.computeGroups( geometry );\r\n\r\n    \t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n    \t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n    \t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n    \t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n    \t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdispose: function () {\r\n\r\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function BufferGeometry() {\r\n\r\n    \tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.name = '';\r\n    \tthis.type = 'BufferGeometry';\r\n\r\n    \tthis.index = null;\r\n    \tthis.attributes = {};\r\n\r\n    \tthis.morphAttributes = {};\r\n\r\n    \tthis.groups = [];\r\n\r\n    \tthis.boundingBox = null;\r\n    \tthis.boundingSphere = null;\r\n\r\n    \tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n    }\r\n\r\n    Object.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\r\n\r\n    \tisBufferGeometry: true,\r\n\r\n    \tgetIndex: function () {\r\n\r\n    \t\treturn this.index;\r\n\r\n    \t},\r\n\r\n    \tsetIndex: function ( index ) {\r\n\r\n    \t\tthis.index = index;\r\n\r\n    \t},\r\n\r\n    \taddAttribute: function ( name, attribute ) {\r\n\r\n    \t\tif ( (attribute && attribute.isBufferAttribute) === false && (attribute && attribute.isInterleavedBufferAttribute) === false ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n    \t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( name === 'index' ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n    \t\t\tthis.setIndex( attribute );\r\n\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.attributes[ name ] = attribute;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetAttribute: function ( name ) {\r\n\r\n    \t\treturn this.attributes[ name ];\r\n\r\n    \t},\r\n\r\n    \tremoveAttribute: function ( name ) {\r\n\r\n    \t\tdelete this.attributes[ name ];\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddGroup: function ( start, count, materialIndex ) {\r\n\r\n    \t\tthis.groups.push( {\r\n\r\n    \t\t\tstart: start,\r\n    \t\t\tcount: count,\r\n    \t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n    \t\t} );\r\n\r\n    \t},\r\n\r\n    \tclearGroups: function () {\r\n\r\n    \t\tthis.groups = [];\r\n\r\n    \t},\r\n\r\n    \tsetDrawRange: function ( start, count ) {\r\n\r\n    \t\tthis.drawRange.start = start;\r\n    \t\tthis.drawRange.count = count;\r\n\r\n    \t},\r\n\r\n    \tapplyMatrix: function ( matrix ) {\r\n\r\n    \t\tvar position = this.attributes.position;\r\n\r\n    \t\tif ( position !== undefined ) {\r\n\r\n    \t\t\tmatrix.applyToVector3Array( position.array );\r\n    \t\t\tposition.needsUpdate = true;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar normal = this.attributes.normal;\r\n\r\n    \t\tif ( normal !== undefined ) {\r\n\r\n    \t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\r\n\r\n    \t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n    \t\t\tnormal.needsUpdate = true;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.boundingBox !== null ) {\r\n\r\n    \t\t\tthis.computeBoundingBox();\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.boundingSphere !== null ) {\r\n\r\n    \t\t\tthis.computeBoundingSphere();\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \trotateX: function () {\r\n\r\n    \t\t// rotate geometry around world x-axis\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function rotateX( angle ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeRotationX( angle );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \trotateY: function () {\r\n\r\n    \t\t// rotate geometry around world y-axis\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function rotateY( angle ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeRotationY( angle );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \trotateZ: function () {\r\n\r\n    \t\t// rotate geometry around world z-axis\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function rotateZ( angle ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeRotationZ( angle );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttranslate: function () {\r\n\r\n    \t\t// translate geometry\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function translate( x, y, z ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeTranslation( x, y, z );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tscale: function () {\r\n\r\n    \t\t// scale geometry\r\n\r\n    \t\tvar m1;\r\n\r\n    \t\treturn function scale( x, y, z ) {\r\n\r\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\r\n\r\n    \t\t\tm1.makeScale( x, y, z );\r\n\r\n    \t\t\tthis.applyMatrix( m1 );\r\n\r\n    \t\t\treturn this;\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tlookAt: function () {\r\n\r\n    \t\tvar obj;\r\n\r\n    \t\treturn function lookAt( vector ) {\r\n\r\n    \t\t\tif ( obj === undefined ) obj = new Object3D();\r\n\r\n    \t\t\tobj.lookAt( vector );\r\n\r\n    \t\t\tobj.updateMatrix();\r\n\r\n    \t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tcenter: function () {\r\n\r\n    \t\tthis.computeBoundingBox();\r\n\r\n    \t\tvar offset = this.boundingBox.getCenter().negate();\r\n\r\n    \t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n    \t\treturn offset;\r\n\r\n    \t},\r\n\r\n    \tsetFromObject: function ( object ) {\r\n\r\n    \t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n    \t\tvar geometry = object.geometry;\r\n\r\n    \t\tif ( (object && object.isPoints) || (object && object.isLine) ) {\r\n\r\n    \t\t\tvar positions = new Float32Attribute( geometry.vertices.length * 3, 3 );\r\n    \t\t\tvar colors = new Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n    \t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n    \t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n    \t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n    \t\t\t\tvar lineDistances = new Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n    \t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n    \t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n    \t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( (object && object.isMesh) ) {\r\n\r\n    \t\t\tif ( (geometry && geometry.isGeometry) ) {\r\n\r\n    \t\t\t\tthis.fromGeometry( geometry );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tupdateFromObject: function ( object ) {\r\n\r\n    \t\tvar geometry = object.geometry;\r\n\r\n    \t\tif ( (object && object.isMesh) ) {\r\n\r\n    \t\t\tvar direct = geometry.__directGeometry;\r\n\r\n    \t\t\tif ( geometry.elementsNeedUpdate === true ) {\r\n\r\n    \t\t\t\tdirect = undefined;\r\n    \t\t\t\tgeometry.elementsNeedUpdate = false;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( direct === undefined ) {\r\n\r\n    \t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n    \t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n    \t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n    \t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n    \t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n    \t\t\tgeometry.verticesNeedUpdate = false;\r\n    \t\t\tgeometry.normalsNeedUpdate = false;\r\n    \t\t\tgeometry.colorsNeedUpdate = false;\r\n    \t\t\tgeometry.uvsNeedUpdate = false;\r\n    \t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n    \t\t\tgeometry = direct;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar attribute;\r\n\r\n    \t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n    \t\t\tattribute = this.attributes.position;\r\n\r\n    \t\t\tif ( attribute !== undefined ) {\r\n\r\n    \t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n    \t\t\t\tattribute.needsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n    \t\t\tattribute = this.attributes.normal;\r\n\r\n    \t\t\tif ( attribute !== undefined ) {\r\n\r\n    \t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n    \t\t\t\tattribute.needsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n    \t\t\tattribute = this.attributes.color;\r\n\r\n    \t\t\tif ( attribute !== undefined ) {\r\n\r\n    \t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n    \t\t\t\tattribute.needsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.uvsNeedUpdate ) {\r\n\r\n    \t\t\tattribute = this.attributes.uv;\r\n\r\n    \t\t\tif ( attribute !== undefined ) {\r\n\r\n    \t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n    \t\t\t\tattribute.needsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry.uvsNeedUpdate = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n    \t\t\tattribute = this.attributes.lineDistance;\r\n\r\n    \t\t\tif ( attribute !== undefined ) {\r\n\r\n    \t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n    \t\t\t\tattribute.needsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n    \t\t\tgeometry.computeGroups( object.geometry );\r\n    \t\t\tthis.groups = geometry.groups;\r\n\r\n    \t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tfromGeometry: function ( geometry ) {\r\n\r\n    \t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\r\n\r\n    \t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n    \t},\r\n\r\n    \tfromDirectGeometry: function ( geometry ) {\r\n\r\n    \t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n    \t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n    \t\tif ( geometry.normals.length > 0 ) {\r\n\r\n    \t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n    \t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.colors.length > 0 ) {\r\n\r\n    \t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n    \t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n    \t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n    \t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n    \t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n    \t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.indices.length > 0 ) {\r\n\r\n    \t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n    \t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n    \t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n    \t\t}\r\n\r\n    \t\t// groups\r\n\r\n    \t\tthis.groups = geometry.groups;\r\n\r\n    \t\t// morphs\r\n\r\n    \t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n    \t\t\tvar array = [];\r\n    \t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n    \t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n    \t\t\t\tvar attribute = new Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n    \t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n    \t\t}\r\n\r\n    \t\t// skinning\r\n\r\n    \t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n    \t\t\tvar skinIndices = new Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n    \t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n    \t\t\tvar skinWeights = new Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n    \t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n    \t\t}\r\n\r\n    \t\t//\r\n\r\n    \t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n    \t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry.boundingBox !== null ) {\r\n\r\n    \t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcomputeBoundingBox: function () {\r\n\r\n    \t\tif ( this.boundingBox === null ) {\r\n\r\n    \t\t\tthis.boundingBox = new Box3();\r\n\r\n    \t\t}\r\n\r\n    \t\tvar positions = this.attributes.position.array;\r\n\r\n    \t\tif ( positions !== undefined ) {\r\n\r\n    \t\t\tthis.boundingBox.setFromArray( positions );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.boundingBox.makeEmpty();\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tcomputeBoundingSphere: function () {\r\n\r\n    \t\tvar box = new Box3();\r\n    \t\tvar vector = new Vector3();\r\n\r\n    \t\treturn function computeBoundingSphere() {\r\n\r\n    \t\t\tif ( this.boundingSphere === null ) {\r\n\r\n    \t\t\t\tthis.boundingSphere = new Sphere();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar positions = this.attributes.position;\r\n\r\n    \t\t\tif ( positions ) {\r\n\r\n    \t\t\t\tvar array = positions.array;\r\n    \t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n    \t\t\t\tbox.setFromArray( array );\r\n    \t\t\t\tbox.getCenter( center );\r\n\r\n    \t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n    \t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n    \t\t\t\tvar maxRadiusSq = 0;\r\n\r\n    \t\t\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\r\n\r\n    \t\t\t\t\tvector.fromArray( array, i );\r\n    \t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n    \t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n    \t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \tcomputeFaceNormals: function () {\r\n\r\n    \t\t// backwards compatibility\r\n\r\n    \t},\r\n\r\n    \tcomputeVertexNormals: function () {\r\n\r\n    \t\tvar index = this.index;\r\n    \t\tvar attributes = this.attributes;\r\n    \t\tvar groups = this.groups;\r\n\r\n    \t\tif ( attributes.position ) {\r\n\r\n    \t\t\tvar positions = attributes.position.array;\r\n\r\n    \t\t\tif ( attributes.normal === undefined ) {\r\n\r\n    \t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// reset existing normals to zero\r\n\r\n    \t\t\t\tvar array = attributes.normal.array;\r\n\r\n    \t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\t\tarray[ i ] = 0;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar normals = attributes.normal.array;\r\n\r\n    \t\t\tvar vA, vB, vC,\r\n\r\n    \t\t\tpA = new Vector3(),\r\n    \t\t\tpB = new Vector3(),\r\n    \t\t\tpC = new Vector3(),\r\n\r\n    \t\t\tcb = new Vector3(),\r\n    \t\t\tab = new Vector3();\r\n\r\n    \t\t\t// indexed elements\r\n\r\n    \t\t\tif ( index ) {\r\n\r\n    \t\t\t\tvar indices = index.array;\r\n\r\n    \t\t\t\tif ( groups.length === 0 ) {\r\n\r\n    \t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n    \t\t\t\t\tvar group = groups[ j ];\r\n\r\n    \t\t\t\t\tvar start = group.start;\r\n    \t\t\t\t\tvar count = group.count;\r\n\r\n    \t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n    \t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n    \t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n    \t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n    \t\t\t\t\t\tpA.fromArray( positions, vA );\r\n    \t\t\t\t\t\tpB.fromArray( positions, vB );\r\n    \t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n    \t\t\t\t\t\tcb.subVectors( pC, pB );\r\n    \t\t\t\t\t\tab.subVectors( pA, pB );\r\n    \t\t\t\t\t\tcb.cross( ab );\r\n\r\n    \t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n    \t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n    \t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n    \t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n    \t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n    \t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n    \t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n    \t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n    \t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n    \t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n    \t\t\t\t\tpA.fromArray( positions, i );\r\n    \t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n    \t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n    \t\t\t\t\tcb.subVectors( pC, pB );\r\n    \t\t\t\t\tab.subVectors( pA, pB );\r\n    \t\t\t\t\tcb.cross( ab );\r\n\r\n    \t\t\t\t\tnormals[ i ] = cb.x;\r\n    \t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n    \t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n    \t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n    \t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n    \t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n    \t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n    \t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n    \t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.normalizeNormals();\r\n\r\n    \t\t\tattributes.normal.needsUpdate = true;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tmerge: function ( geometry, offset ) {\r\n\r\n    \t\tif ( (geometry && geometry.isBufferGeometry) === false ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tvar attributes = this.attributes;\r\n\r\n    \t\tfor ( var key in attributes ) {\r\n\r\n    \t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n    \t\t\tvar attribute1 = attributes[ key ];\r\n    \t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n    \t\t\tvar attribute2 = geometry.attributes[ key ];\r\n    \t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n    \t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n    \t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n    \t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tnormalizeNormals: function () {\r\n\r\n    \t\tvar normals = this.attributes.normal.array;\r\n\r\n    \t\tvar x, y, z, n;\r\n\r\n    \t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n    \t\t\tx = normals[ i ];\r\n    \t\t\ty = normals[ i + 1 ];\r\n    \t\t\tz = normals[ i + 2 ];\r\n\r\n    \t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n    \t\t\tnormals[ i ] *= n;\r\n    \t\t\tnormals[ i + 1 ] *= n;\r\n    \t\t\tnormals[ i + 2 ] *= n;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \ttoNonIndexed: function () {\r\n\r\n    \t\tif ( this.index === null ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\r\n    \t\t\treturn this;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar geometry2 = new BufferGeometry();\r\n\r\n    \t\tvar indices = this.index.array;\r\n    \t\tvar attributes = this.attributes;\r\n\r\n    \t\tfor ( var name in attributes ) {\r\n\r\n    \t\t\tvar attribute = attributes[ name ];\r\n\r\n    \t\t\tvar array = attribute.array;\r\n    \t\t\tvar itemSize = attribute.itemSize;\r\n\r\n    \t\t\tvar array2 = new array.constructor( indices.length * itemSize );\r\n\r\n    \t\t\tvar index = 0, index2 = 0;\r\n\r\n    \t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n    \t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\r\n\r\n    \t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn geometry2;\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function () {\r\n\r\n    \t\tvar data = {\r\n    \t\t\tmetadata: {\r\n    \t\t\t\tversion: 4.4,\r\n    \t\t\t\ttype: 'BufferGeometry',\r\n    \t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n    \t\t\t}\r\n    \t\t};\r\n\r\n    \t\t// standard BufferGeometry serialization\r\n\r\n    \t\tdata.uuid = this.uuid;\r\n    \t\tdata.type = this.type;\r\n    \t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n    \t\tif ( this.parameters !== undefined ) {\r\n\r\n    \t\t\tvar parameters = this.parameters;\r\n\r\n    \t\t\tfor ( var key in parameters ) {\r\n\r\n    \t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn data;\r\n\r\n    \t\t}\r\n\r\n    \t\tdata.data = { attributes: {} };\r\n\r\n    \t\tvar index = this.index;\r\n\r\n    \t\tif ( index !== null ) {\r\n\r\n    \t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n    \t\t\tdata.data.index = {\r\n    \t\t\t\ttype: index.array.constructor.name,\r\n    \t\t\t\tarray: array\r\n    \t\t\t};\r\n\r\n    \t\t}\r\n\r\n    \t\tvar attributes = this.attributes;\r\n\r\n    \t\tfor ( var key in attributes ) {\r\n\r\n    \t\t\tvar attribute = attributes[ key ];\r\n\r\n    \t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n    \t\t\tdata.data.attributes[ key ] = {\r\n    \t\t\t\titemSize: attribute.itemSize,\r\n    \t\t\t\ttype: attribute.array.constructor.name,\r\n    \t\t\t\tarray: array,\r\n    \t\t\t\tnormalized: attribute.normalized\r\n    \t\t\t};\r\n\r\n    \t\t}\r\n\r\n    \t\tvar groups = this.groups;\r\n\r\n    \t\tif ( groups.length > 0 ) {\r\n\r\n    \t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar boundingSphere = this.boundingSphere;\r\n\r\n    \t\tif ( boundingSphere !== null ) {\r\n\r\n    \t\t\tdata.data.boundingSphere = {\r\n    \t\t\t\tcenter: boundingSphere.center.toArray(),\r\n    \t\t\t\tradius: boundingSphere.radius\r\n    \t\t\t};\r\n\r\n    \t\t}\r\n\r\n    \t\treturn data;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\t/*\r\n    \t\t// Handle primitives\r\n\r\n    \t\tvar parameters = this.parameters;\r\n\r\n    \t\tif ( parameters !== undefined ) {\r\n\r\n    \t\t\tvar values = [];\r\n\r\n    \t\t\tfor ( var key in parameters ) {\r\n\r\n    \t\t\t\tvalues.push( parameters[ key ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n    \t\t\tthis.constructor.apply( geometry, values );\r\n    \t\t\treturn geometry;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n    \t\t*/\r\n\r\n    \t\treturn new BufferGeometry().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tvar index = source.index;\r\n\r\n    \t\tif ( index !== null ) {\r\n\r\n    \t\t\tthis.setIndex( index.clone() );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar attributes = source.attributes;\r\n\r\n    \t\tfor ( var name in attributes ) {\r\n\r\n    \t\t\tvar attribute = attributes[ name ];\r\n    \t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar groups = source.groups;\r\n\r\n    \t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar group = groups[ i ];\r\n    \t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdispose: function () {\r\n\r\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    BufferGeometry.MaxIndex = 65535;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author jonobr1 / http://jonobr1.com/\r\n     */\r\n\r\n    function Mesh( geometry, material ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Mesh';\r\n\r\n    \tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n    \tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n    \tthis.drawMode = TrianglesDrawMode;\r\n\r\n    \tthis.updateMorphTargets();\r\n\r\n    }\r\n\r\n    Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: Mesh,\r\n\r\n    \tisMesh: true,\r\n\r\n    \tsetDrawMode: function ( value ) {\r\n\r\n    \t\tthis.drawMode = value;\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tObject3D.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.drawMode = source.drawMode;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tupdateMorphTargets: function () {\r\n\r\n    \t\tvar morphTargets = this.geometry.morphTargets;\r\n\r\n    \t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\r\n\r\n    \t\t\tthis.morphTargetInfluences = [];\r\n    \t\t\tthis.morphTargetDictionary = {};\r\n\r\n    \t\t\tfor ( var m = 0, ml = morphTargets.length; m < ml; m ++ ) {\r\n\r\n    \t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n    \t\t\t\tthis.morphTargetDictionary[ morphTargets[ m ].name ] = m;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \traycast: ( function () {\r\n\r\n    \t\tvar inverseMatrix = new Matrix4();\r\n    \t\tvar ray = new Ray();\r\n    \t\tvar sphere = new Sphere();\r\n\r\n    \t\tvar vA = new Vector3();\r\n    \t\tvar vB = new Vector3();\r\n    \t\tvar vC = new Vector3();\r\n\r\n    \t\tvar tempA = new Vector3();\r\n    \t\tvar tempB = new Vector3();\r\n    \t\tvar tempC = new Vector3();\r\n\r\n    \t\tvar uvA = new Vector2();\r\n    \t\tvar uvB = new Vector2();\r\n    \t\tvar uvC = new Vector2();\r\n\r\n    \t\tvar barycoord = new Vector3();\r\n\r\n    \t\tvar intersectionPoint = new Vector3();\r\n    \t\tvar intersectionPointWorld = new Vector3();\r\n\r\n    \t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n    \t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n    \t\t\tuv1.multiplyScalar( barycoord.x );\r\n    \t\t\tuv2.multiplyScalar( barycoord.y );\r\n    \t\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n    \t\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n    \t\t\treturn uv1.clone();\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n    \t\t\tvar intersect;\r\n    \t\t\tvar material = object.material;\r\n\r\n    \t\t\tif ( material.side === BackSide ) {\r\n\r\n    \t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( intersect === null ) return null;\r\n\r\n    \t\t\tintersectionPointWorld.copy( point );\r\n    \t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n    \t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n    \t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n    \t\t\treturn {\r\n    \t\t\t\tdistance: distance,\r\n    \t\t\t\tpoint: intersectionPointWorld.clone(),\r\n    \t\t\t\tobject: object\r\n    \t\t\t};\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\r\n\r\n    \t\t\tvA.fromArray( positions, a * 3 );\r\n    \t\t\tvB.fromArray( positions, b * 3 );\r\n    \t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n    \t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n    \t\t\tif ( intersection ) {\r\n\r\n    \t\t\t\tif ( uvs ) {\r\n\r\n    \t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n    \t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n    \t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\r\n    \t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\r\n    \t\t\t\tintersection.faceIndex = a;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn intersection;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn function raycast( raycaster, intersects ) {\r\n\r\n    \t\t\tvar geometry = this.geometry;\r\n    \t\t\tvar material = this.material;\r\n    \t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n    \t\t\tif ( material === undefined ) return;\r\n\r\n    \t\t\t// Checking boundingSphere distance to ray\r\n\r\n    \t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n    \t\t\tsphere.copy( geometry.boundingSphere );\r\n    \t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n    \t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n    \t\t\t//\r\n\r\n    \t\t\tinverseMatrix.getInverse( matrixWorld );\r\n    \t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n    \t\t\t// Check boundingBox before continuing\r\n\r\n    \t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n    \t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar uvs, intersection;\r\n\r\n    \t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\r\n\r\n    \t\t\t\tvar a, b, c;\r\n    \t\t\t\tvar index = geometry.index;\r\n    \t\t\t\tvar attributes = geometry.attributes;\r\n    \t\t\t\tvar positions = attributes.position.array;\r\n\r\n    \t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n    \t\t\t\t\tuvs = attributes.uv.array;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( index !== null ) {\r\n\r\n    \t\t\t\t\tvar indices = index.array;\r\n\r\n    \t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n    \t\t\t\t\t\ta = indices[ i ];\r\n    \t\t\t\t\t\tb = indices[ i + 1 ];\r\n    \t\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n    \t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n    \t\t\t\t\t\tif ( intersection ) {\r\n\r\n    \t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\r\n    \t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n\r\n    \t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n    \t\t\t\t\t\ta = i / 3;\r\n    \t\t\t\t\t\tb = a + 1;\r\n    \t\t\t\t\t\tc = a + 2;\r\n\r\n    \t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n    \t\t\t\t\t\tif ( intersection ) {\r\n\r\n    \t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\r\n    \t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( (geometry && geometry.isGeometry) ) {\r\n\r\n    \t\t\t\tvar fvA, fvB, fvC;\r\n    \t\t\t\tvar isFaceMaterial = (material && material.isMultiMaterial);\r\n    \t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n    \t\t\t\tvar vertices = geometry.vertices;\r\n    \t\t\t\tvar faces = geometry.faces;\r\n    \t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n    \t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\r\n    \t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n    \t\t\t\t\tvar face = faces[ f ];\r\n    \t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n    \t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n    \t\t\t\t\tfvA = vertices[ face.a ];\r\n    \t\t\t\t\tfvB = vertices[ face.b ];\r\n    \t\t\t\t\tfvC = vertices[ face.c ];\r\n\r\n    \t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n    \t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n    \t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n    \t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n    \t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n    \t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n    \t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n    \t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n    \t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n    \t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n    \t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n    \t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n    \t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\tvA.add( fvA );\r\n    \t\t\t\t\t\tvB.add( fvB );\r\n    \t\t\t\t\t\tvC.add( fvC );\r\n\r\n    \t\t\t\t\t\tfvA = vA;\r\n    \t\t\t\t\t\tfvB = vB;\r\n    \t\t\t\t\t\tfvC = vC;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\r\n    \t\t\t\t\tif ( intersection ) {\r\n\r\n    \t\t\t\t\t\tif ( uvs ) {\r\n\r\n    \t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n    \t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n    \t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n    \t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\r\n    \t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\tintersection.face = face;\r\n    \t\t\t\t\t\tintersection.faceIndex = f;\r\n    \t\t\t\t\t\tintersects.push( intersection );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}() ),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author Mugen87 / https://github.com/Mugen87\r\n     */\r\n\r\n    function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'BoxBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\twidth: width,\r\n    \t\theight: height,\r\n    \t\tdepth: depth,\r\n    \t\twidthSegments: widthSegments,\r\n    \t\theightSegments: heightSegments,\r\n    \t\tdepthSegments: depthSegments\r\n    \t};\r\n\r\n    \tvar scope = this;\r\n\r\n    \t// segments\r\n    \twidthSegments = Math.floor( widthSegments ) || 1;\r\n    \theightSegments = Math.floor( heightSegments ) || 1;\r\n    \tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\r\n    \t// these are used to calculate buffer length\r\n    \tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\r\n    \tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\r\n\r\n    \t// buffers\r\n    \tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n    \tvar vertices = new Float32Array( vertexCount * 3 );\r\n    \tvar normals = new Float32Array( vertexCount * 3 );\r\n    \tvar uvs = new Float32Array( vertexCount * 2 );\r\n\r\n    \t// offset variables\r\n    \tvar vertexBufferOffset = 0;\r\n    \tvar uvBufferOffset = 0;\r\n    \tvar indexBufferOffset = 0;\r\n    \tvar numberOfVertices = 0;\r\n\r\n    \t// group variables\r\n    \tvar groupStart = 0;\r\n\r\n    \t// build each side of the box geometry\r\n    \tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\r\n    \tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\r\n    \tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\r\n    \tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\r\n    \tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\r\n    \tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\r\n\r\n    \t// build geometry\r\n    \tthis.setIndex( new BufferAttribute( indices, 1 ) );\r\n    \tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\r\n    \tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\r\n    \tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\r\n\r\n    \t// helper functions\r\n\r\n    \tfunction calculateVertexCount( w, h, d ) {\r\n\r\n    \t\tvar vertices = 0;\r\n\r\n    \t\t// calculate the amount of vertices for each side (plane)\r\n    \t\tvertices += (w + 1) * (h + 1) * 2; // xy\r\n    \t\tvertices += (w + 1) * (d + 1) * 2; // xz\r\n    \t\tvertices += (d + 1) * (h + 1) * 2; // zy\r\n\r\n    \t\treturn vertices;\r\n\r\n    \t}\r\n\r\n    \tfunction calculateIndexCount( w, h, d ) {\r\n\r\n    \t\tvar index = 0;\r\n\r\n    \t\t// calculate the amount of squares for each side\r\n    \t\tindex += w * h * 2; // xy\r\n    \t\tindex += w * d * 2; // xz\r\n    \t\tindex += d * h * 2; // zy\r\n\r\n    \t\treturn index * 6; // two triangles per square => six vertices per square\r\n\r\n    \t}\r\n\r\n    \tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n    \t\tvar segmentWidth\t= width / gridX;\r\n    \t\tvar segmentHeight = height / gridY;\r\n\r\n    \t\tvar widthHalf = width / 2;\r\n    \t\tvar heightHalf = height / 2;\r\n    \t\tvar depthHalf = depth / 2;\r\n\r\n    \t\tvar gridX1 = gridX + 1;\r\n    \t\tvar gridY1 = gridY + 1;\r\n\r\n    \t\tvar vertexCounter = 0;\r\n    \t\tvar groupCount = 0;\r\n\r\n    \t\tvar vector = new Vector3();\r\n\r\n    \t\t// generate vertices, normals and uvs\r\n\r\n    \t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n    \t\t\tvar y = iy * segmentHeight - heightHalf;\r\n\r\n    \t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n    \t\t\t\tvar x = ix * segmentWidth - widthHalf;\r\n\r\n    \t\t\t\t// set values to correct vector component\r\n    \t\t\t\tvector[ u ] = x * udir;\r\n    \t\t\t\tvector[ v ] = y * vdir;\r\n    \t\t\t\tvector[ w ] = depthHalf;\r\n\r\n    \t\t\t\t// now apply vector to vertex buffer\r\n    \t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\r\n    \t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\r\n    \t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\r\n\r\n    \t\t\t\t// set values to correct vector component\r\n    \t\t\t\tvector[ u ] = 0;\r\n    \t\t\t\tvector[ v ] = 0;\r\n    \t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n    \t\t\t\t// now apply vector to normal buffer\r\n    \t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\r\n    \t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\r\n    \t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\r\n\r\n    \t\t\t\t// uvs\r\n    \t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\r\n    \t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\r\n\r\n    \t\t\t\t// update offsets and counters\r\n    \t\t\t\tvertexBufferOffset += 3;\r\n    \t\t\t\tuvBufferOffset += 2;\r\n    \t\t\t\tvertexCounter += 1;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// 1. you need three indices to draw a single face\r\n    \t\t// 2. a single segment consists of two faces\r\n    \t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n    \t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n    \t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n    \t\t\t\t// indices\r\n    \t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\r\n    \t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n    \t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n    \t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n    \t\t\t\t// face one\r\n    \t\t\t\tindices[ indexBufferOffset ] = a;\r\n    \t\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n    \t\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\r\n    \t\t\t\t// face two\r\n    \t\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n    \t\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n    \t\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\r\n    \t\t\t\t// update offsets and counters\r\n    \t\t\t\tindexBufferOffset += 6;\r\n    \t\t\t\tgroupCount += 6;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// add a group to the geometry. this will ensure multi material support\r\n    \t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n    \t\t// calculate new start value for groups\r\n    \t\tgroupStart += groupCount;\r\n\r\n    \t\t// update total number of vertices\r\n    \t\tnumberOfVertices += vertexCounter;\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    BoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n     */\r\n\r\n    function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'PlaneBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\twidth: width,\r\n    \t\theight: height,\r\n    \t\twidthSegments: widthSegments,\r\n    \t\theightSegments: heightSegments\r\n    \t};\r\n\r\n    \tvar width_half = width / 2;\r\n    \tvar height_half = height / 2;\r\n\r\n    \tvar gridX = Math.floor( widthSegments ) || 1;\r\n    \tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n    \tvar gridX1 = gridX + 1;\r\n    \tvar gridY1 = gridY + 1;\r\n\r\n    \tvar segment_width = width / gridX;\r\n    \tvar segment_height = height / gridY;\r\n\r\n    \tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n    \tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n    \tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n    \tvar offset = 0;\r\n    \tvar offset2 = 0;\r\n\r\n    \tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n    \t\tvar y = iy * segment_height - height_half;\r\n\r\n    \t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n    \t\t\tvar x = ix * segment_width - width_half;\r\n\r\n    \t\t\tvertices[ offset ] = x;\r\n    \t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n    \t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n    \t\t\tuvs[ offset2 ] = ix / gridX;\r\n    \t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n    \t\t\toffset += 3;\r\n    \t\t\toffset2 += 2;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \toffset = 0;\r\n\r\n    \tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n    \tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n    \t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n    \t\t\tvar a = ix + gridX1 * iy;\r\n    \t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n    \t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n    \t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n    \t\t\tindices[ offset ] = a;\r\n    \t\t\tindices[ offset + 1 ] = b;\r\n    \t\t\tindices[ offset + 2 ] = d;\r\n\r\n    \t\t\tindices[ offset + 3 ] = b;\r\n    \t\t\tindices[ offset + 4 ] = c;\r\n    \t\t\tindices[ offset + 5 ] = d;\r\n\r\n    \t\t\toffset += 6;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tthis.setIndex( new BufferAttribute( indices, 1 ) );\r\n    \tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\r\n    \tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\r\n    \tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\r\n\r\n    }\r\n\r\n    PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n    */\r\n\r\n    function Camera() {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Camera';\r\n\r\n    \tthis.matrixWorldInverse = new Matrix4();\r\n    \tthis.projectionMatrix = new Matrix4();\r\n\r\n    }\r\n\r\n    Camera.prototype = Object.create( Object3D.prototype );\r\n    Camera.prototype.constructor = Camera;\r\n\r\n    Camera.prototype.isCamera = true;\r\n\r\n    Camera.prototype.getWorldDirection = function () {\r\n\r\n    \tvar quaternion = new Quaternion();\r\n\r\n    \treturn function getWorldDirection( optionalTarget ) {\r\n\r\n    \t\tvar result = optionalTarget || new Vector3();\r\n\r\n    \t\tthis.getWorldQuaternion( quaternion );\r\n\r\n    \t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    Camera.prototype.lookAt = function () {\r\n\r\n    \t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n    \tvar m1 = new Matrix4();\r\n\r\n    \treturn function lookAt( vector ) {\r\n\r\n    \t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n    \t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    Camera.prototype.clone = function () {\r\n\r\n    \treturn new this.constructor().copy( this );\r\n\r\n    };\r\n\r\n    Camera.prototype.copy = function ( source ) {\r\n\r\n    \tObject3D.prototype.copy.call( this, source );\r\n\r\n    \tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n    \tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author greggman / http://games.greggman.com/\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     * @author tschw\r\n     */\r\n\r\n    function PerspectiveCamera( fov, aspect, near, far ) {\r\n\r\n    \tCamera.call( this );\r\n\r\n    \tthis.type = 'PerspectiveCamera';\r\n\r\n    \tthis.fov = fov !== undefined ? fov : 50;\r\n    \tthis.zoom = 1;\r\n\r\n    \tthis.near = near !== undefined ? near : 0.1;\r\n    \tthis.far = far !== undefined ? far : 2000;\r\n    \tthis.focus = 10;\r\n\r\n    \tthis.aspect = aspect !== undefined ? aspect : 1;\r\n    \tthis.view = null;\r\n\r\n    \tthis.filmGauge = 35;\t// width of the film (default in millimeters)\r\n    \tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n\r\n    \tthis.updateProjectionMatrix();\r\n\r\n    }\r\n\r\n    PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\r\n\r\n    \tconstructor: PerspectiveCamera,\r\n\r\n    \tisPerspectiveCamera: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tCamera.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.fov = source.fov;\r\n    \t\tthis.zoom = source.zoom;\r\n\r\n    \t\tthis.near = source.near;\r\n    \t\tthis.far = source.far;\r\n    \t\tthis.focus = source.focus;\r\n\r\n    \t\tthis.aspect = source.aspect;\r\n    \t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n    \t\tthis.filmGauge = source.filmGauge;\r\n    \t\tthis.filmOffset = source.filmOffset;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t/**\r\n    \t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n    \t *\r\n    \t * The default film gauge is 35, so that the focal length can be specified for\r\n    \t * a 35mm (full frame) camera.\r\n    \t *\r\n    \t * Values for focal length and film gauge must have the same unit.\r\n    \t */\r\n    \tsetFocalLength: function ( focalLength ) {\r\n\r\n    \t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\r\n    \t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n    \t\tthis.fov = exports.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n    \t\tthis.updateProjectionMatrix();\r\n\r\n    \t},\r\n\r\n    \t/**\r\n    \t * Calculates the focal length from the current .fov and .filmGauge.\r\n    \t */\r\n    \tgetFocalLength: function () {\r\n\r\n    \t\tvar vExtentSlope = Math.tan( exports.Math.DEG2RAD * 0.5 * this.fov );\r\n\r\n    \t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n    \t},\r\n\r\n    \tgetEffectiveFOV: function () {\r\n\r\n    \t\treturn exports.Math.RAD2DEG * 2 * Math.atan(\r\n    \t\t\t\tMath.tan( exports.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n    \t},\r\n\r\n    \tgetFilmWidth: function () {\r\n\r\n    \t\t// film not completely covered in portrait format (aspect < 1)\r\n    \t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n    \t},\r\n\r\n    \tgetFilmHeight: function () {\r\n\r\n    \t\t// film not completely covered in landscape format (aspect > 1)\r\n    \t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n    \t},\r\n\r\n    \t/**\r\n    \t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n    \t * multi-monitor/multi-machine setups.\r\n    \t *\r\n    \t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n    \t * the monitors are in grid like this\r\n    \t *\r\n    \t *   +---+---+---+\r\n    \t *   | A | B | C |\r\n    \t *   +---+---+---+\r\n    \t *   | D | E | F |\r\n    \t *   +---+---+---+\r\n    \t *\r\n    \t * then for each monitor you would call it like this\r\n    \t *\r\n    \t *   var w = 1920;\r\n    \t *   var h = 1080;\r\n    \t *   var fullWidth = w * 3;\r\n    \t *   var fullHeight = h * 2;\r\n    \t *\r\n    \t *   --A--\r\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n    \t *   --B--\r\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n    \t *   --C--\r\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n    \t *   --D--\r\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n    \t *   --E--\r\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n    \t *   --F--\r\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n    \t *\r\n    \t *   Note there is no reason monitors have to be the same size or in a grid.\r\n    \t */\r\n    \tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n    \t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n    \t\tthis.view = {\r\n    \t\t\tfullWidth: fullWidth,\r\n    \t\t\tfullHeight: fullHeight,\r\n    \t\t\toffsetX: x,\r\n    \t\t\toffsetY: y,\r\n    \t\t\twidth: width,\r\n    \t\t\theight: height\r\n    \t\t};\r\n\r\n    \t\tthis.updateProjectionMatrix();\r\n\r\n    \t},\r\n\r\n    \tclearViewOffset: function() {\r\n\r\n    \t\tthis.view = null;\r\n    \t\tthis.updateProjectionMatrix();\r\n\r\n    \t},\r\n\r\n    \tupdateProjectionMatrix: function () {\r\n\r\n    \t\tvar near = this.near,\r\n    \t\t\ttop = near * Math.tan(\r\n    \t\t\t\t\texports.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\r\n    \t\t\theight = 2 * top,\r\n    \t\t\twidth = this.aspect * height,\r\n    \t\t\tleft = - 0.5 * width,\r\n    \t\t\tview = this.view;\r\n\r\n    \t\tif ( view !== null ) {\r\n\r\n    \t\t\tvar fullWidth = view.fullWidth,\r\n    \t\t\t\tfullHeight = view.fullHeight;\r\n\r\n    \t\t\tleft += view.offsetX * width / fullWidth;\r\n    \t\t\ttop -= view.offsetY * height / fullHeight;\r\n    \t\t\twidth *= view.width / fullWidth;\r\n    \t\t\theight *= view.height / fullHeight;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar skew = this.filmOffset;\r\n    \t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n    \t\tthis.projectionMatrix.makeFrustum(\r\n    \t\t\t\tleft, left + width, top - height, top, near, this.far );\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function ( meta ) {\r\n\r\n    \t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n    \t\tdata.object.fov = this.fov;\r\n    \t\tdata.object.zoom = this.zoom;\r\n\r\n    \t\tdata.object.near = this.near;\r\n    \t\tdata.object.far = this.far;\r\n    \t\tdata.object.focus = this.focus;\r\n\r\n    \t\tdata.object.aspect = this.aspect;\r\n\r\n    \t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n    \t\tdata.object.filmGauge = this.filmGauge;\r\n    \t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n    \t\treturn data;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author arose / http://github.com/arose\r\n     */\r\n\r\n    function OrthographicCamera( left, right, top, bottom, near, far ) {\r\n\r\n    \tCamera.call( this );\r\n\r\n    \tthis.type = 'OrthographicCamera';\r\n\r\n    \tthis.zoom = 1;\r\n    \tthis.view = null;\r\n\r\n    \tthis.left = left;\r\n    \tthis.right = right;\r\n    \tthis.top = top;\r\n    \tthis.bottom = bottom;\r\n\r\n    \tthis.near = ( near !== undefined ) ? near : 0.1;\r\n    \tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n    \tthis.updateProjectionMatrix();\r\n\r\n    }\r\n\r\n    OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\r\n\r\n    \tconstructor: OrthographicCamera,\r\n\r\n    \tisOrthographicCamera: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tCamera.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.left = source.left;\r\n    \t\tthis.right = source.right;\r\n    \t\tthis.top = source.top;\r\n    \t\tthis.bottom = source.bottom;\r\n    \t\tthis.near = source.near;\r\n    \t\tthis.far = source.far;\r\n\r\n    \t\tthis.zoom = source.zoom;\r\n    \t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n    \t\tthis.view = {\r\n    \t\t\tfullWidth: fullWidth,\r\n    \t\t\tfullHeight: fullHeight,\r\n    \t\t\toffsetX: x,\r\n    \t\t\toffsetY: y,\r\n    \t\t\twidth: width,\r\n    \t\t\theight: height\r\n    \t\t};\r\n\r\n    \t\tthis.updateProjectionMatrix();\r\n\r\n    \t},\r\n\r\n    \tclearViewOffset: function() {\r\n\r\n    \t\tthis.view = null;\r\n    \t\tthis.updateProjectionMatrix();\r\n\r\n    \t},\r\n\r\n    \tupdateProjectionMatrix: function () {\r\n\r\n    \t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n    \t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n    \t\tvar cx = ( this.right + this.left ) / 2;\r\n    \t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n    \t\tvar left = cx - dx;\r\n    \t\tvar right = cx + dx;\r\n    \t\tvar top = cy + dy;\r\n    \t\tvar bottom = cy - dy;\r\n\r\n    \t\tif ( this.view !== null ) {\r\n\r\n    \t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\r\n    \t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\r\n    \t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\r\n    \t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\r\n\r\n    \t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\r\n    \t\t\tright = left + scaleW * ( this.view.width / zoomW );\r\n    \t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\r\n    \t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function ( meta ) {\r\n\r\n    \t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n    \t\tdata.object.zoom = this.zoom;\r\n    \t\tdata.object.left = this.left;\r\n    \t\tdata.object.right = this.right;\r\n    \t\tdata.object.top = this.top;\r\n    \t\tdata.object.bottom = this.bottom;\r\n    \t\tdata.object.near = this.near;\r\n    \t\tdata.object.far = this.far;\r\n\r\n    \t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n    \t\treturn data;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\r\n\r\n    \tvar mode;\r\n\r\n    \tfunction setMode( value ) {\r\n\r\n    \t\tmode = value;\r\n\r\n    \t}\r\n\r\n    \tvar type, size;\r\n\r\n    \tfunction setIndex( index ) {\r\n\r\n    \t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n    \t\t\ttype = gl.UNSIGNED_INT;\r\n    \t\t\tsize = 4;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\ttype = gl.UNSIGNED_SHORT;\r\n    \t\t\tsize = 2;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction render( start, count ) {\r\n\r\n    \t\tgl.drawElements( mode, count, type, start * size );\r\n\r\n    \t\tinfoRender.calls ++;\r\n    \t\tinfoRender.vertices += count;\r\n\r\n    \t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\r\n\r\n    \t}\r\n\r\n    \tfunction renderInstances( geometry, start, count ) {\r\n\r\n    \t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n    \t\tif ( extension === null ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\r\n\r\n    \t\tinfoRender.calls ++;\r\n    \t\tinfoRender.vertices += count * geometry.maxInstancedCount;\r\n\r\n    \t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\r\n    \t}\r\n\r\n    \treturn {\r\n\r\n    \t\tsetMode: setMode,\r\n    \t\tsetIndex: setIndex,\r\n    \t\trender: render,\r\n    \t\trenderInstances: renderInstances\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function WebGLBufferRenderer( gl, extensions, infoRender ) {\r\n\r\n    \tvar mode;\r\n\r\n    \tfunction setMode( value ) {\r\n\r\n    \t\tmode = value;\r\n\r\n    \t}\r\n\r\n    \tfunction render( start, count ) {\r\n\r\n    \t\tgl.drawArrays( mode, start, count );\r\n\r\n    \t\tinfoRender.calls ++;\r\n    \t\tinfoRender.vertices += count;\r\n\r\n    \t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\r\n\r\n    \t}\r\n\r\n    \tfunction renderInstances( geometry ) {\r\n\r\n    \t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n    \t\tif ( extension === null ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar position = geometry.attributes.position;\r\n\r\n    \t\tvar count = 0;\r\n\r\n    \t\tif ( (position && position.isInterleavedBufferAttribute) ) {\r\n\r\n    \t\t\tcount = position.data.count;\r\n\r\n    \t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tcount = position.count;\r\n\r\n    \t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\r\n    \t\t}\r\n\r\n    \t\tinfoRender.calls ++;\r\n    \t\tinfoRender.vertices += count * geometry.maxInstancedCount;\r\n\r\n    \t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\r\n    \t}\r\n\r\n    \treturn {\r\n    \t\tsetMode: setMode,\r\n    \t\trender: render,\r\n    \t\trenderInstances: renderInstances\r\n    \t};\r\n\r\n    }\r\n\r\n    function WebGLLights() {\r\n\r\n    \tvar lights = {};\r\n\r\n    \treturn {\r\n\r\n    \t\tget: function ( light ) {\r\n\r\n    \t\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n    \t\t\t\treturn lights[ light.id ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar uniforms;\r\n\r\n    \t\t\tswitch ( light.type ) {\r\n\r\n    \t\t\t\tcase 'DirectionalLight':\r\n    \t\t\t\t\tuniforms = {\r\n    \t\t\t\t\t\tdirection: new Vector3(),\r\n    \t\t\t\t\t\tcolor: new Color(),\r\n\r\n    \t\t\t\t\t\tshadow: false,\r\n    \t\t\t\t\t\tshadowBias: 0,\r\n    \t\t\t\t\t\tshadowRadius: 1,\r\n    \t\t\t\t\t\tshadowMapSize: new Vector2()\r\n    \t\t\t\t\t};\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'SpotLight':\r\n    \t\t\t\t\tuniforms = {\r\n    \t\t\t\t\t\tposition: new Vector3(),\r\n    \t\t\t\t\t\tdirection: new Vector3(),\r\n    \t\t\t\t\t\tcolor: new Color(),\r\n    \t\t\t\t\t\tdistance: 0,\r\n    \t\t\t\t\t\tconeCos: 0,\r\n    \t\t\t\t\t\tpenumbraCos: 0,\r\n    \t\t\t\t\t\tdecay: 0,\r\n\r\n    \t\t\t\t\t\tshadow: false,\r\n    \t\t\t\t\t\tshadowBias: 0,\r\n    \t\t\t\t\t\tshadowRadius: 1,\r\n    \t\t\t\t\t\tshadowMapSize: new Vector2()\r\n    \t\t\t\t\t};\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'PointLight':\r\n    \t\t\t\t\tuniforms = {\r\n    \t\t\t\t\t\tposition: new Vector3(),\r\n    \t\t\t\t\t\tcolor: new Color(),\r\n    \t\t\t\t\t\tdistance: 0,\r\n    \t\t\t\t\t\tdecay: 0,\r\n\r\n    \t\t\t\t\t\tshadow: false,\r\n    \t\t\t\t\t\tshadowBias: 0,\r\n    \t\t\t\t\t\tshadowRadius: 1,\r\n    \t\t\t\t\t\tshadowMapSize: new Vector2()\r\n    \t\t\t\t\t};\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'HemisphereLight':\r\n    \t\t\t\t\tuniforms = {\r\n    \t\t\t\t\t\tdirection: new Vector3(),\r\n    \t\t\t\t\t\tskyColor: new Color(),\r\n    \t\t\t\t\t\tgroundColor: new Color()\r\n    \t\t\t\t\t};\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tlights[ light.id ] = uniforms;\r\n\r\n    \t\t\treturn uniforms;\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function addLineNumbers( string ) {\r\n\r\n    \tvar lines = string.split( '\\n' );\r\n\r\n    \tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n    \t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n    \t}\r\n\r\n    \treturn lines.join( '\\n' );\r\n\r\n    }\r\n\r\n    function WebGLShader( gl, type, string ) {\r\n\r\n    \tvar shader = gl.createShader( type );\r\n\r\n    \tgl.shaderSource( shader, string );\r\n    \tgl.compileShader( shader );\r\n\r\n    \tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n    \t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n    \t}\r\n\r\n    \tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n    \t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n    \t}\r\n\r\n    \t// --enable-privileged-webgl-extension\r\n    \t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n    \treturn shader;\r\n\r\n    }\r\n\r\n    var programIdCount = 0;\r\n\r\n    function getEncodingComponents( encoding ) {\r\n\r\n    \tswitch ( encoding ) {\r\n\r\n    \t\tcase LinearEncoding:\r\n    \t\t\treturn [ 'Linear','( value )' ];\r\n    \t\tcase sRGBEncoding:\r\n    \t\t\treturn [ 'sRGB','( value )' ];\r\n    \t\tcase RGBEEncoding:\r\n    \t\t\treturn [ 'RGBE','( value )' ];\r\n    \t\tcase RGBM7Encoding:\r\n    \t\t\treturn [ 'RGBM','( value, 7.0 )' ];\r\n    \t\tcase RGBM16Encoding:\r\n    \t\t\treturn [ 'RGBM','( value, 16.0 )' ];\r\n    \t\tcase RGBDEncoding:\r\n    \t\t\treturn [ 'RGBD','( value, 256.0 )' ];\r\n    \t\tcase GammaEncoding:\r\n    \t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\r\n    \t\tdefault:\r\n    \t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    function getTexelDecodingFunction( functionName, encoding ) {\r\n\r\n    \tvar components = getEncodingComponents( encoding );\r\n    \treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\r\n\r\n    }\r\n\r\n    function getTexelEncodingFunction( functionName, encoding ) {\r\n\r\n    \tvar components = getEncodingComponents( encoding );\r\n    \treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\r\n\r\n    }\r\n\r\n    function getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n    \tvar toneMappingName;\r\n\r\n    \tswitch ( toneMapping ) {\r\n\r\n    \t\tcase LinearToneMapping:\r\n    \t\t\ttoneMappingName = \"Linear\";\r\n    \t\t\tbreak;\r\n\r\n    \t\tcase ReinhardToneMapping:\r\n    \t\t\ttoneMappingName = \"Reinhard\";\r\n    \t\t\tbreak;\r\n\r\n    \t\tcase Uncharted2ToneMapping:\r\n    \t\t\ttoneMappingName = \"Uncharted2\";\r\n    \t\t\tbreak;\r\n\r\n    \t\tcase CineonToneMapping:\r\n    \t\t\ttoneMappingName = \"OptimizedCineon\";\r\n    \t\t\tbreak;\r\n\r\n    \t\tdefault:\r\n    \t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\r\n\r\n    \t}\r\n\r\n    \treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\r\n\r\n    }\r\n\r\n    function generateExtensions( extensions, parameters, rendererExtensions ) {\r\n\r\n    \textensions = extensions || {};\r\n\r\n    \tvar chunks = [\r\n    \t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n    \t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n    \t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n    \t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\r\n    \t];\r\n\r\n    \treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n    }\r\n\r\n    function generateDefines( defines ) {\r\n\r\n    \tvar chunks = [];\r\n\r\n    \tfor ( var name in defines ) {\r\n\r\n    \t\tvar value = defines[ name ];\r\n\r\n    \t\tif ( value === false ) continue;\r\n\r\n    \t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n    \t}\r\n\r\n    \treturn chunks.join( '\\n' );\r\n\r\n    }\r\n\r\n    function fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n    \tvar attributes = {};\r\n\r\n    \tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n    \tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n    \t\tvar info = gl.getActiveAttrib( program, i );\r\n    \t\tvar name = info.name;\r\n\r\n    \t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n    \t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n    \t}\r\n\r\n    \treturn attributes;\r\n\r\n    }\r\n\r\n    function filterEmptyLine( string ) {\r\n\r\n    \treturn string !== '';\r\n\r\n    }\r\n\r\n    function replaceLightNums( string, parameters ) {\r\n\r\n    \treturn string\r\n    \t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n    \t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n    \t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n    \t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\r\n\r\n    }\r\n\r\n    function parseIncludes( string ) {\r\n\r\n    \tvar pattern = /#include +<([\\w\\d.]+)>/g;\r\n\r\n    \tfunction replace( match, include ) {\r\n\r\n    \t\tvar replace = ShaderChunk[ include ];\r\n\r\n    \t\tif ( replace === undefined ) {\r\n\r\n    \t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn parseIncludes( replace );\r\n\r\n    \t}\r\n\r\n    \treturn string.replace( pattern, replace );\r\n\r\n    }\r\n\r\n    function unrollLoops( string ) {\r\n\r\n    \tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\r\n    \tfunction replace( match, start, end, snippet ) {\r\n\r\n    \t\tvar unroll = '';\r\n\r\n    \t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n    \t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn unroll;\r\n\r\n    \t}\r\n\r\n    \treturn string.replace( pattern, replace );\r\n\r\n    }\r\n\r\n    function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n    \tvar gl = renderer.context;\r\n\r\n    \tvar extensions = material.extensions;\r\n    \tvar defines = material.defines;\r\n\r\n    \tvar vertexShader = material.__webglShader.vertexShader;\r\n    \tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n    \tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n    \tif ( parameters.shadowMapType === PCFShadowMap ) {\r\n\r\n    \t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n    \t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\r\n\r\n    \t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n    \t}\r\n\r\n    \tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n    \tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n    \tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n    \tif ( parameters.envMap ) {\r\n\r\n    \t\tswitch ( material.envMap.mapping ) {\r\n\r\n    \t\t\tcase CubeReflectionMapping:\r\n    \t\t\tcase CubeRefractionMapping:\r\n    \t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\tcase CubeUVReflectionMapping:\r\n    \t\t\tcase CubeUVRefractionMapping:\r\n    \t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\tcase EquirectangularReflectionMapping:\r\n    \t\t\tcase EquirectangularRefractionMapping:\r\n    \t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\tcase SphericalReflectionMapping:\r\n    \t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t}\r\n\r\n    \t\tswitch ( material.envMap.mapping ) {\r\n\r\n    \t\t\tcase CubeRefractionMapping:\r\n    \t\t\tcase EquirectangularRefractionMapping:\r\n    \t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t}\r\n\r\n    \t\tswitch ( material.combine ) {\r\n\r\n    \t\t\tcase MultiplyOperation:\r\n    \t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\tcase MixOperation:\r\n    \t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\tcase AddOperation:\r\n    \t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n    \t// console.log( 'building new program ' );\r\n\r\n    \t//\r\n\r\n    \tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\r\n\r\n    \tvar customDefines = generateDefines( defines );\r\n\r\n    \t//\r\n\r\n    \tvar program = gl.createProgram();\r\n\r\n    \tvar prefixVertex, prefixFragment;\r\n\r\n    \tif ( material.isRawShaderMaterial ) {\r\n\r\n    \t\tprefixVertex = [\r\n\r\n    \t\t\tcustomDefines,\r\n\r\n    \t\t\t'\\n'\r\n\r\n    \t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n    \t\tprefixFragment = [\r\n\r\n    \t\t\tcustomExtensions,\r\n    \t\t\tcustomDefines,\r\n\r\n    \t\t\t'\\n'\r\n\r\n    \t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n    \t} else {\r\n\r\n    \t\tprefixVertex = [\r\n\r\n    \t\t\t'precision ' + parameters.precision + ' float;',\r\n    \t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n    \t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n    \t\t\tcustomDefines,\r\n\r\n    \t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n    \t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n    \t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n    \t\t\tparameters.map ? '#define USE_MAP' : '',\r\n    \t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n    \t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n    \t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n    \t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n    \t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n    \t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n    \t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n    \t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n    \t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n    \t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n    \t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n    \t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n    \t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n    \t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n    \t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n    \t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n    \t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n    \t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n    \t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n    \t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n    \t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\r\n\r\n    \t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n    \t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n    \t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n    \t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n    \t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n    \t\t\t'uniform mat4 modelMatrix;',\r\n    \t\t\t'uniform mat4 modelViewMatrix;',\r\n    \t\t\t'uniform mat4 projectionMatrix;',\r\n    \t\t\t'uniform mat4 viewMatrix;',\r\n    \t\t\t'uniform mat3 normalMatrix;',\r\n    \t\t\t'uniform vec3 cameraPosition;',\r\n\r\n    \t\t\t'attribute vec3 position;',\r\n    \t\t\t'attribute vec3 normal;',\r\n    \t\t\t'attribute vec2 uv;',\r\n\r\n    \t\t\t'#ifdef USE_COLOR',\r\n\r\n    \t\t\t'\tattribute vec3 color;',\r\n\r\n    \t\t\t'#endif',\r\n\r\n    \t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n    \t\t\t'\tattribute vec3 morphTarget0;',\r\n    \t\t\t'\tattribute vec3 morphTarget1;',\r\n    \t\t\t'\tattribute vec3 morphTarget2;',\r\n    \t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n    \t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n    \t\t\t'\t\tattribute vec3 morphNormal0;',\r\n    \t\t\t'\t\tattribute vec3 morphNormal1;',\r\n    \t\t\t'\t\tattribute vec3 morphNormal2;',\r\n    \t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n    \t\t\t'\t#else',\r\n\r\n    \t\t\t'\t\tattribute vec3 morphTarget4;',\r\n    \t\t\t'\t\tattribute vec3 morphTarget5;',\r\n    \t\t\t'\t\tattribute vec3 morphTarget6;',\r\n    \t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n    \t\t\t'\t#endif',\r\n\r\n    \t\t\t'#endif',\r\n\r\n    \t\t\t'#ifdef USE_SKINNING',\r\n\r\n    \t\t\t'\tattribute vec4 skinIndex;',\r\n    \t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n    \t\t\t'#endif',\r\n\r\n    \t\t\t'\\n'\r\n\r\n    \t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n    \t\tprefixFragment = [\r\n\r\n    \t\t\tcustomExtensions,\r\n\r\n    \t\t\t'precision ' + parameters.precision + ' float;',\r\n    \t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n    \t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n    \t\t\tcustomDefines,\r\n\r\n    \t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n    \t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n    \t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n    \t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n    \t\t\tparameters.map ? '#define USE_MAP' : '',\r\n    \t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n    \t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n    \t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n    \t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n    \t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n    \t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n    \t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n    \t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n    \t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n    \t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n    \t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n    \t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n    \t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n    \t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n    \t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n    \t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n    \t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n    \t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\r\n\r\n    \t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n    \t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n    \t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\r\n\r\n    \t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\r\n\r\n    \t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n    \t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n    \t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\r\n\r\n    \t\t\t'uniform mat4 viewMatrix;',\r\n    \t\t\t'uniform vec3 cameraPosition;',\r\n\r\n    \t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\r\n    \t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\r\n    \t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\r\n\r\n    \t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\r\n    \t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\r\n    \t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\r\n    \t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\r\n    \t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\r\n\r\n    \t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\r\n\r\n    \t\t\t'\\n'\r\n\r\n    \t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n    \t}\r\n\r\n    \tvertexShader = parseIncludes( vertexShader, parameters );\r\n    \tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\r\n    \tfragmentShader = parseIncludes( fragmentShader, parameters );\r\n    \tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\r\n    \tif ( ! material.isShaderMaterial ) {\r\n\r\n    \t\tvertexShader = unrollLoops( vertexShader );\r\n    \t\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n    \t}\r\n\r\n    \tvar vertexGlsl = prefixVertex + vertexShader;\r\n    \tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n    \t// console.log( '*VERTEX*', vertexGlsl );\r\n    \t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n    \tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n    \tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n    \tgl.attachShader( program, glVertexShader );\r\n    \tgl.attachShader( program, glFragmentShader );\r\n\r\n    \t// Force a particular attribute to index 0.\r\n\r\n    \tif ( material.index0AttributeName !== undefined ) {\r\n\r\n    \t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n    \t} else if ( parameters.morphTargets === true ) {\r\n\r\n    \t\t// programs with morphTargets displace position out of attribute 0\r\n    \t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n    \t}\r\n\r\n    \tgl.linkProgram( program );\r\n\r\n    \tvar programLog = gl.getProgramInfoLog( program );\r\n    \tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n    \tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n    \tvar runnable = true;\r\n    \tvar haveDiagnostics = true;\r\n\r\n    \t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n    \t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n    \tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n    \t\trunnable = false;\r\n\r\n    \t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n    \t} else if ( programLog !== '' ) {\r\n\r\n    \t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n    \t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n    \t\thaveDiagnostics = false;\r\n\r\n    \t}\r\n\r\n    \tif ( haveDiagnostics ) {\r\n\r\n    \t\tthis.diagnostics = {\r\n\r\n    \t\t\trunnable: runnable,\r\n    \t\t\tmaterial: material,\r\n\r\n    \t\t\tprogramLog: programLog,\r\n\r\n    \t\t\tvertexShader: {\r\n\r\n    \t\t\t\tlog: vertexLog,\r\n    \t\t\t\tprefix: prefixVertex\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfragmentShader: {\r\n\r\n    \t\t\t\tlog: fragmentLog,\r\n    \t\t\t\tprefix: prefixFragment\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}\r\n\r\n    \t// clean up\r\n\r\n    \tgl.deleteShader( glVertexShader );\r\n    \tgl.deleteShader( glFragmentShader );\r\n\r\n    \t// set up caching for uniform locations\r\n\r\n    \tvar cachedUniforms;\r\n\r\n    \tthis.getUniforms = function() {\r\n\r\n    \t\tif ( cachedUniforms === undefined ) {\r\n\r\n    \t\t\tcachedUniforms =\r\n    \t\t\t\t\tnew WebGLUniforms( gl, program, renderer );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn cachedUniforms;\r\n\r\n    \t};\r\n\r\n    \t// set up caching for attribute locations\r\n\r\n    \tvar cachedAttributes;\r\n\r\n    \tthis.getAttributes = function() {\r\n\r\n    \t\tif ( cachedAttributes === undefined ) {\r\n\r\n    \t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn cachedAttributes;\r\n\r\n    \t};\r\n\r\n    \t// free resource\r\n\r\n    \tthis.destroy = function() {\r\n\r\n    \t\tgl.deleteProgram( program );\r\n    \t\tthis.program = undefined;\r\n\r\n    \t};\r\n\r\n    \t// DEPRECATED\r\n\r\n    \tObject.defineProperties( this, {\r\n\r\n    \t\tuniforms: {\r\n    \t\t\tget: function() {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n    \t\t\t\treturn this.getUniforms();\r\n\r\n    \t\t\t}\r\n    \t\t},\r\n\r\n    \t\tattributes: {\r\n    \t\t\tget: function() {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n    \t\t\t\treturn this.getAttributes();\r\n\r\n    \t\t\t}\r\n    \t\t}\r\n\r\n    \t} );\r\n\r\n\r\n    \t//\r\n\r\n    \tthis.id = programIdCount ++;\r\n    \tthis.code = code;\r\n    \tthis.usedTimes = 1;\r\n    \tthis.program = program;\r\n    \tthis.vertexShader = glVertexShader;\r\n    \tthis.fragmentShader = glFragmentShader;\r\n\r\n    \treturn this;\r\n\r\n    }\r\n\r\n    function WebGLPrograms( renderer, capabilities ) {\r\n\r\n    \tvar programs = [];\r\n\r\n    \tvar shaderIDs = {\r\n    \t\tMeshDepthMaterial: 'depth',\r\n    \t\tMeshNormalMaterial: 'normal',\r\n    \t\tMeshBasicMaterial: 'basic',\r\n    \t\tMeshLambertMaterial: 'lambert',\r\n    \t\tMeshPhongMaterial: 'phong',\r\n    \t\tMeshStandardMaterial: 'physical',\r\n    \t\tMeshPhysicalMaterial: 'physical',\r\n    \t\tLineBasicMaterial: 'basic',\r\n    \t\tLineDashedMaterial: 'dashed',\r\n    \t\tPointsMaterial: 'points'\r\n    \t};\r\n\r\n    \tvar parameterNames = [\r\n    \t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\r\n    \t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\r\n    \t\t\"roughnessMap\", \"metalnessMap\",\r\n    \t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n    \t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n    \t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n    \t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\r\n    \t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\r\n    \t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\r\n    \t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"\r\n    \t];\r\n\r\n\r\n    \tfunction allocateBones( object ) {\r\n\r\n    \t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n    \t\t\treturn 1024;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// default for when object is not specified\r\n    \t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n    \t\t\t//\r\n    \t\t\t//  - leave some extra space for other uniforms\r\n    \t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n    \t\t\t//    (up to 54 should be safe)\r\n\r\n    \t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n    \t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n    \t\t\tvar maxBones = nVertexMatrices;\r\n\r\n    \t\t\tif ( object !== undefined && (object && object.isSkinnedMesh) ) {\r\n\r\n    \t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n    \t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n    \t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn maxBones;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\r\n\r\n    \t\tvar encoding;\r\n\r\n    \t\tif ( ! map ) {\r\n\r\n    \t\t\tencoding = LinearEncoding;\r\n\r\n    \t\t} else if ( (map && map.isTexture) ) {\r\n\r\n    \t\t\tencoding = map.encoding;\r\n\r\n    \t\t} else if ( (map && map.isWebGLRenderTarget) ) {\r\n\r\n    \t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\r\n    \t\t\tencoding = map.texture.encoding;\r\n\r\n    \t\t}\r\n\r\n    \t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\r\n    \t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\r\n\r\n    \t\t\tencoding = GammaEncoding;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn encoding;\r\n\r\n    \t}\r\n\r\n    \tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\r\n\r\n    \t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n    \t\t// heuristics to create shader parameters according to lights in the scene\r\n    \t\t// (not to blow over maxLights budget)\r\n\r\n    \t\tvar maxBones = allocateBones( object );\r\n    \t\tvar precision = renderer.getPrecision();\r\n\r\n    \t\tif ( material.precision !== null ) {\r\n\r\n    \t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n    \t\t\tif ( precision !== material.precision ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\r\n\r\n    \t\tvar parameters = {\r\n\r\n    \t\t\tshaderID: shaderID,\r\n\r\n    \t\t\tprecision: precision,\r\n    \t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n    \t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\r\n    \t\t\tmap: !! material.map,\r\n    \t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\r\n    \t\t\tenvMap: !! material.envMap,\r\n    \t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n    \t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\r\n    \t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\r\n    \t\t\tlightMap: !! material.lightMap,\r\n    \t\t\taoMap: !! material.aoMap,\r\n    \t\t\temissiveMap: !! material.emissiveMap,\r\n    \t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\r\n    \t\t\tbumpMap: !! material.bumpMap,\r\n    \t\t\tnormalMap: !! material.normalMap,\r\n    \t\t\tdisplacementMap: !! material.displacementMap,\r\n    \t\t\troughnessMap: !! material.roughnessMap,\r\n    \t\t\tmetalnessMap: !! material.metalnessMap,\r\n    \t\t\tspecularMap: !! material.specularMap,\r\n    \t\t\talphaMap: !! material.alphaMap,\r\n\r\n    \t\t\tcombine: material.combine,\r\n\r\n    \t\t\tvertexColors: material.vertexColors,\r\n\r\n    \t\t\tfog: !! fog,\r\n    \t\t\tuseFog: material.fog,\r\n    \t\t\tfogExp: (fog && fog.isFogExp2),\r\n\r\n    \t\t\tflatShading: material.shading === FlatShading,\r\n\r\n    \t\t\tsizeAttenuation: material.sizeAttenuation,\r\n    \t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n    \t\t\tskinning: material.skinning,\r\n    \t\t\tmaxBones: maxBones,\r\n    \t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n    \t\t\tmorphTargets: material.morphTargets,\r\n    \t\t\tmorphNormals: material.morphNormals,\r\n    \t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n    \t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n    \t\t\tnumDirLights: lights.directional.length,\r\n    \t\t\tnumPointLights: lights.point.length,\r\n    \t\t\tnumSpotLights: lights.spot.length,\r\n    \t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n    \t\t\tnumClippingPlanes: nClipPlanes,\r\n\r\n    \t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\r\n    \t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n    \t\t\ttoneMapping: renderer.toneMapping,\r\n    \t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\r\n    \t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n    \t\t\talphaTest: material.alphaTest,\r\n    \t\t\tdoubleSided: material.side === DoubleSide,\r\n    \t\t\tflipSided: material.side === BackSide,\r\n\r\n    \t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\r\n\r\n    \t\t};\r\n\r\n    \t\treturn parameters;\r\n\r\n    \t};\r\n\r\n    \tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n    \t\tvar array = [];\r\n\r\n    \t\tif ( parameters.shaderID ) {\r\n\r\n    \t\t\tarray.push( parameters.shaderID );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tarray.push( material.fragmentShader );\r\n    \t\t\tarray.push( material.vertexShader );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.defines !== undefined ) {\r\n\r\n    \t\t\tfor ( var name in material.defines ) {\r\n\r\n    \t\t\t\tarray.push( name );\r\n    \t\t\t\tarray.push( material.defines[ name ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n    \t\t\tarray.push( parameters[ parameterNames[ i ] ] );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn array.join();\r\n\r\n    \t};\r\n\r\n    \tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n    \t\tvar program;\r\n\r\n    \t\t// Check if code has been already compiled\r\n    \t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n    \t\t\tvar programInfo = programs[ p ];\r\n\r\n    \t\t\tif ( programInfo.code === code ) {\r\n\r\n    \t\t\t\tprogram = programInfo;\r\n    \t\t\t\t++ program.usedTimes;\r\n\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( program === undefined ) {\r\n\r\n    \t\t\tprogram = new WebGLProgram( renderer, code, material, parameters );\r\n    \t\t\tprograms.push( program );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn program;\r\n\r\n    \t};\r\n\r\n    \tthis.releaseProgram = function( program ) {\r\n\r\n    \t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n    \t\t\t// Remove from unordered set\r\n    \t\t\tvar i = programs.indexOf( program );\r\n    \t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n    \t\t\tprograms.pop();\r\n\r\n    \t\t\t// Free WebGL resources\r\n    \t\t\tprogram.destroy();\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    \t// Exposed for resource monitoring & error feedback via renderer.info:\r\n    \tthis.programs = programs;\r\n\r\n    }\r\n\r\n    function WebGLGeometries( gl, properties, info ) {\r\n\r\n    \tvar geometries = {};\r\n\r\n    \tfunction onGeometryDispose( event ) {\r\n\r\n    \t\tvar geometry = event.target;\r\n    \t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n    \t\tif ( buffergeometry.index !== null ) {\r\n\r\n    \t\t\tdeleteAttribute( buffergeometry.index );\r\n\r\n    \t\t}\r\n\r\n    \t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n    \t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n    \t\tdelete geometries[ geometry.id ];\r\n\r\n    \t\t// TODO\r\n\r\n    \t\tvar property = properties.get( geometry );\r\n\r\n    \t\tif ( property.wireframe ) {\r\n\r\n    \t\t\tdeleteAttribute( property.wireframe );\r\n\r\n    \t\t}\r\n\r\n    \t\tproperties.delete( geometry );\r\n\r\n    \t\tvar bufferproperty = properties.get( buffergeometry );\r\n\r\n    \t\tif ( bufferproperty.wireframe ) {\r\n\r\n    \t\t\tdeleteAttribute( bufferproperty.wireframe );\r\n\r\n    \t\t}\r\n\r\n    \t\tproperties.delete( buffergeometry );\r\n\r\n    \t\t//\r\n\r\n    \t\tinfo.memory.geometries --;\r\n\r\n    \t}\r\n\r\n    \tfunction getAttributeBuffer( attribute ) {\r\n\r\n    \t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n    \t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n    \t}\r\n\r\n    \tfunction deleteAttribute( attribute ) {\r\n\r\n    \t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n    \t\tif ( buffer !== undefined ) {\r\n\r\n    \t\t\tgl.deleteBuffer( buffer );\r\n    \t\t\tremoveAttributeBuffer( attribute );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction deleteAttributes( attributes ) {\r\n\r\n    \t\tfor ( var name in attributes ) {\r\n\r\n    \t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction removeAttributeBuffer( attribute ) {\r\n\r\n    \t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n    \t\t\tproperties.delete( attribute.data );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tproperties.delete( attribute );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \treturn {\r\n\r\n    \t\tget: function ( object ) {\r\n\r\n    \t\t\tvar geometry = object.geometry;\r\n\r\n    \t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n    \t\t\t\treturn geometries[ geometry.id ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n    \t\t\tvar buffergeometry;\r\n\r\n    \t\t\tif ( geometry.isBufferGeometry ) {\r\n\r\n    \t\t\t\tbuffergeometry = geometry;\r\n\r\n    \t\t\t} else if ( geometry.isGeometry ) {\r\n\r\n    \t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n    \t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n    \t\t\tinfo.memory.geometries ++;\r\n\r\n    \t\t\treturn buffergeometry;\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    function WebGLObjects( gl, properties, info ) {\r\n\r\n    \tvar geometries = new WebGLGeometries( gl, properties, info );\r\n\r\n    \t//\r\n\r\n    \tfunction update( object ) {\r\n\r\n    \t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n    \t\tvar geometry = geometries.get( object );\r\n\r\n    \t\tif ( object.geometry.isGeometry ) {\r\n\r\n    \t\t\tgeometry.updateFromObject( object );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar index = geometry.index;\r\n    \t\tvar attributes = geometry.attributes;\r\n\r\n    \t\tif ( index !== null ) {\r\n\r\n    \t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var name in attributes ) {\r\n\r\n    \t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n    \t\t}\r\n\r\n    \t\t// morph targets\r\n\r\n    \t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n    \t\tfor ( var name in morphAttributes ) {\r\n\r\n    \t\t\tvar array = morphAttributes[ name ];\r\n\r\n    \t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn geometry;\r\n\r\n    \t}\r\n\r\n    \tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n    \t\tvar data = ( attribute.isInterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n    \t\tvar attributeProperties = properties.get( data );\r\n\r\n    \t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n    \t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n    \t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n    \t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n    \t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n    \t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n    \t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n    \t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n    \t\tattributeProperties.version = data.version;\r\n\r\n    \t}\r\n\r\n    \tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n    \t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n    \t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n    \t\t\t// Not using update ranges\r\n\r\n    \t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n    \t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n    \t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n    \t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n    \t\t}\r\n\r\n    \t\tattributeProperties.version = data.version;\r\n\r\n    \t}\r\n\r\n    \tfunction getAttributeBuffer( attribute ) {\r\n\r\n    \t\tif ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n    \t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n    \t}\r\n\r\n    \tfunction getWireframeAttribute( geometry ) {\r\n\r\n    \t\tvar property = properties.get( geometry );\r\n\r\n    \t\tif ( property.wireframe !== undefined ) {\r\n\r\n    \t\t\treturn property.wireframe;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar indices = [];\r\n\r\n    \t\tvar index = geometry.index;\r\n    \t\tvar attributes = geometry.attributes;\r\n    \t\tvar position = attributes.position;\r\n\r\n    \t\t// console.time( 'wireframe' );\r\n\r\n    \t\tif ( index !== null ) {\r\n\r\n    \t\t\tvar edges = {};\r\n    \t\t\tvar array = index.array;\r\n\r\n    \t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n    \t\t\t\tvar a = array[ i + 0 ];\r\n    \t\t\t\tvar b = array[ i + 1 ];\r\n    \t\t\t\tvar c = array[ i + 2 ];\r\n\r\n    \t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tvar array = attributes.position.array;\r\n\r\n    \t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n    \t\t\t\tvar a = i + 0;\r\n    \t\t\t\tvar b = i + 1;\r\n    \t\t\t\tvar c = i + 2;\r\n\r\n    \t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// console.timeEnd( 'wireframe' );\r\n\r\n    \t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n    \t\tvar attribute = new BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n    \t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n    \t\tproperty.wireframe = attribute;\r\n\r\n    \t\treturn attribute;\r\n\r\n    \t}\r\n\r\n    \treturn {\r\n\r\n    \t\tgetAttributeBuffer: getAttributeBuffer,\r\n    \t\tgetWireframeAttribute: getWireframeAttribute,\r\n\r\n    \t\tupdate: update\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    function WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\r\n\r\n    \tvar _infoMemory = info.memory;\r\n    \tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\r\n\r\n    \t//\r\n\r\n    \tfunction clampToMaxSize( image, maxSize ) {\r\n\r\n    \t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n    \t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n    \t\t\t// premultiplied alpha.\r\n\r\n    \t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n    \t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n    \t\t\tcanvas.width = Math.floor( image.width * scale );\r\n    \t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n    \t\t\tvar context = canvas.getContext( '2d' );\r\n    \t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n    \t\t\treturn canvas;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn image;\r\n\r\n    \t}\r\n\r\n    \tfunction isPowerOfTwo( image ) {\r\n\r\n    \t\treturn exports.Math.isPowerOfTwo( image.width ) && exports.Math.isPowerOfTwo( image.height );\r\n\r\n    \t}\r\n\r\n    \tfunction makePowerOfTwo( image ) {\r\n\r\n    \t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\r\n\r\n    \t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n    \t\t\tcanvas.width = exports.Math.nearestPowerOfTwo( image.width );\r\n    \t\t\tcanvas.height = exports.Math.nearestPowerOfTwo( image.height );\r\n\r\n    \t\t\tvar context = canvas.getContext( '2d' );\r\n    \t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\r\n\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n    \t\t\treturn canvas;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn image;\r\n\r\n    \t}\r\n\r\n    \tfunction textureNeedsPowerOfTwo( texture ) {\r\n\r\n    \t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) return true;\r\n    \t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) return true;\r\n\r\n    \t\treturn false;\r\n\r\n    \t}\r\n\r\n    \t// Fallback filters for non-power-of-2 textures\r\n\r\n    \tfunction filterFallback( f ) {\r\n\r\n    \t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\r\n\r\n    \t\t\treturn _gl.NEAREST;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn _gl.LINEAR;\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tfunction onTextureDispose( event ) {\r\n\r\n    \t\tvar texture = event.target;\r\n\r\n    \t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n    \t\tdeallocateTexture( texture );\r\n\r\n    \t\t_infoMemory.textures --;\r\n\r\n\r\n    \t}\r\n\r\n    \tfunction onRenderTargetDispose( event ) {\r\n\r\n    \t\tvar renderTarget = event.target;\r\n\r\n    \t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n    \t\tdeallocateRenderTarget( renderTarget );\r\n\r\n    \t\t_infoMemory.textures --;\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tfunction deallocateTexture( texture ) {\r\n\r\n    \t\tvar textureProperties = properties.get( texture );\r\n\r\n    \t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n    \t\t\t// cube texture\r\n\r\n    \t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// 2D texture\r\n\r\n    \t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n    \t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n    \t\t}\r\n\r\n    \t\t// remove all webgl properties\r\n    \t\tproperties.delete( texture );\r\n\r\n    \t}\r\n\r\n    \tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n    \t\tvar renderTargetProperties = properties.get( renderTarget );\r\n    \t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n    \t\tif ( ! renderTarget ) return;\r\n\r\n    \t\tif ( textureProperties.__webglTexture !== undefined ) {\r\n\r\n    \t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( renderTarget.depthTexture ) {\r\n\r\n    \t\t\trenderTarget.depthTexture.dispose();\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( (renderTarget && renderTarget.isWebGLRenderTargetCube) ) {\r\n\r\n    \t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n    \t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n    \t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\r\n    \t\t}\r\n\r\n    \t\tproperties.delete( renderTarget.texture );\r\n    \t\tproperties.delete( renderTarget );\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n\r\n\r\n    \tfunction setTexture2D( texture, slot ) {\r\n\r\n    \t\tvar textureProperties = properties.get( texture );\r\n\r\n    \t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n    \t\t\tvar image = texture.image;\r\n\r\n    \t\t\tif ( image === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\r\n    \t\t\t} else if ( image.complete === false ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n    \t\t\t\treturn;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n    \t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n    \t}\r\n\r\n    \tfunction setTextureCube( texture, slot ) {\r\n\r\n    \t\tvar textureProperties = properties.get( texture );\r\n\r\n    \t\tif ( texture.image.length === 6 ) {\r\n\r\n    \t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n    \t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n    \t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n    \t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n    \t\t\t\t\t_infoMemory.textures ++;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n    \t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n    \t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n    \t\t\t\tvar isCompressed = (texture && texture.isCompressedTexture);\r\n    \t\t\t\tvar isDataTexture = (texture.image[ 0 ] && texture.image[ 0 ].isDataTexture);\r\n\r\n    \t\t\t\tvar cubeImage = [];\r\n\r\n    \t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\r\n\r\n    \t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tvar image = cubeImage[ 0 ],\r\n    \t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\r\n    \t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n    \t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n    \t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\r\n\r\n    \t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n    \t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n    \t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n    \t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n    \t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n    \t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\r\n\r\n    \t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n    \t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n    \t\t\t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\r\n\r\n    \t\t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\r\n\r\n    \t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n    \t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n    \t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction setTextureCubeDynamic( texture, slot ) {\r\n\r\n    \t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n    \t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n    \t}\r\n\r\n    \tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\r\n\r\n    \t\tvar extension;\r\n\r\n    \t\tif ( isPowerOfTwoImage ) {\r\n\r\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n    \t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n    \t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n    \t\tif ( extension ) {\r\n\r\n    \t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n    \t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n    \t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n    \t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\r\n    \t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n    \t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n    \t\t\ttextureProperties.__webglInit = true;\r\n\r\n    \t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n    \t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n    \t\t\t_infoMemory.textures ++;\r\n\r\n    \t\t}\r\n\r\n    \t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n    \t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n    \t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n    \t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n    \t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n    \t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n    \t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\r\n\r\n    \t\t\timage = makePowerOfTwo( image );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\r\n    \t\tglFormat = paramThreeToGL( texture.format ),\r\n    \t\tglType = paramThreeToGL( texture.type );\r\n\r\n    \t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\r\n\r\n    \t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n    \t\tif ( (texture && texture.isDepthTexture) ) {\r\n\r\n    \t\t\t// populate depth texture with dummy data\r\n\r\n    \t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\r\n\r\n    \t\t\tif ( texture.type === FloatType ) {\r\n\r\n    \t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\r\n    \t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\r\n    \t\t\t} else if ( _isWebGL2 ) {\r\n\r\n    \t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\r\n    \t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\r\n    \t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\r\n    \t\t\tif ( texture.format === DepthStencilFormat ) {\r\n\r\n    \t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n\r\n    \t\t} else if ( (texture && texture.isDataTexture) ) {\r\n\r\n    \t\t\t// use manually created mipmaps if available\r\n    \t\t\t// if there are no manual mipmaps\r\n    \t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n    \t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n    \t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\t\tmipmap = mipmaps[ i ];\r\n    \t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\ttexture.generateMipmaps = false;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( (texture && texture.isCompressedTexture) ) {\r\n\r\n    \t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n    \t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\r\n\r\n    \t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n    \t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// regular Texture (image, video, canvas)\r\n\r\n    \t\t\t// use manually created mipmaps if available\r\n    \t\t\t// if there are no manual mipmaps\r\n    \t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n    \t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n    \t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\t\tmipmap = mipmaps[ i ];\r\n    \t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\ttexture.generateMipmaps = false;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n    \t\ttextureProperties.__version = texture.version;\r\n\r\n    \t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n    \t}\r\n\r\n    \t// Render targets\r\n\r\n    \t// Setup storage for target texture and bind it to correct framebuffer\r\n    \tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\r\n\r\n    \t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\r\n    \t\tvar glType = paramThreeToGL( renderTarget.texture.type );\r\n    \t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n    \t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n    \t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n    \t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n    \t}\r\n\r\n    \t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n    \tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\r\n\r\n    \t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n    \t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n    \t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n    \t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n    \t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n    \t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n    \t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// FIXME: We don't support !depth !stencil\r\n    \t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n    \t\t}\r\n\r\n    \t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n    \t}\r\n\r\n    \t// Setup resources for a Depth Texture for a FBO (needs an extension)\r\n    \tfunction setupDepthTexture( framebuffer, renderTarget ) {\r\n\r\n    \t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\r\n    \t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\r\n\r\n    \t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n    \t\tif ( !( (renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture) ) ) {\r\n\r\n    \t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\r\n\r\n    \t\t}\r\n\r\n    \t\t// upload an empty depth texture with framebuffer size\r\n    \t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\r\n    \t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\r\n    \t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n    \t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n    \t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n    \t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n    \t\t}\r\n\r\n    \t\tsetTexture2D( renderTarget.depthTexture, 0 );\r\n\r\n    \t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\r\n\r\n    \t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\r\n\r\n    \t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n    \t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\r\n\r\n    \t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthrow new Error('Unknown depthTexture format')\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// Setup GL resources for a non-texture depth buffer\r\n    \tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n    \t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n    \t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\r\n\r\n    \t\tif ( renderTarget.depthTexture ) {\r\n\r\n    \t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\r\n\r\n    \t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tif ( isCube ) {\r\n\r\n    \t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n    \t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n    \t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n    \t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n    \t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n    \t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n    \t}\r\n\r\n    \t// Set up GL resources for the render target\r\n    \tfunction setupRenderTarget( renderTarget ) {\r\n\r\n    \t\tvar renderTargetProperties = properties.get( renderTarget );\r\n    \t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n    \t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n    \t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n    \t\t_infoMemory.textures ++;\r\n\r\n    \t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\r\n    \t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\r\n\r\n    \t\t// Setup framebuffer\r\n\r\n    \t\tif ( isCube ) {\r\n\r\n    \t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n    \t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n    \t\t}\r\n\r\n    \t\t// Setup color buffer\r\n\r\n    \t\tif ( isCube ) {\r\n\r\n    \t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n    \t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\r\n    \t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n    \t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n    \t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n    \t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n    \t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\r\n\r\n    \t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n    \t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n    \t\t}\r\n\r\n    \t\t// Setup depth and stencil buffers\r\n\r\n    \t\tif ( renderTarget.depthBuffer ) {\r\n\r\n    \t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n    \t\tvar texture = renderTarget.texture;\r\n\r\n    \t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\r\n    \t\t\t\ttexture.minFilter !== NearestFilter &&\r\n    \t\t\t\ttexture.minFilter !== LinearFilter ) {\r\n\r\n    \t\t\tvar target = (renderTarget && renderTarget.isWebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n    \t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\r\n\r\n    \t\t\tstate.bindTexture( target, webglTexture );\r\n    \t\t\t_gl.generateMipmap( target );\r\n    \t\t\tstate.bindTexture( target, null );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tthis.setTexture2D = setTexture2D;\r\n    \tthis.setTextureCube = setTextureCube;\r\n    \tthis.setTextureCubeDynamic = setTextureCubeDynamic;\r\n    \tthis.setupRenderTarget = setupRenderTarget;\r\n    \tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\r\n\r\n    }\r\n\r\n    /**\r\n     * @author fordacious / fordacious.github.io\r\n     */\r\n\r\n    function WebGLProperties() {\r\n\r\n    \tvar properties = {};\r\n\r\n    \treturn {\r\n\r\n    \t\tget: function ( object ) {\r\n\r\n    \t\t\tvar uuid = object.uuid;\r\n    \t\t\tvar map = properties[ uuid ];\r\n\r\n    \t\t\tif ( map === undefined ) {\r\n\r\n    \t\t\t\tmap = {};\r\n    \t\t\t\tproperties[ uuid ] = map;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn map;\r\n\r\n    \t\t},\r\n\r\n    \t\tdelete: function ( object ) {\r\n\r\n    \t\t\tdelete properties[ object.uuid ];\r\n\r\n    \t\t},\r\n\r\n    \t\tclear: function () {\r\n\r\n    \t\t\tproperties = {};\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    function WebGLState( gl, extensions, paramThreeToGL ) {\r\n\r\n    \tfunction ColorBuffer() {\r\n\r\n    \t\tvar locked = false;\r\n\r\n    \t\tvar color = new Vector4();\r\n    \t\tvar currentColorMask = null;\r\n    \t\tvar currentColorClear = new Vector4();\r\n\r\n    \t\treturn {\r\n\r\n    \t\t\tsetMask: function ( colorMask ) {\r\n\r\n    \t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\r\n\r\n    \t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n    \t\t\t\t\tcurrentColorMask = colorMask;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetLocked: function ( lock ) {\r\n\r\n    \t\t\t\tlocked = lock;\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetClear: function ( r, g, b, a ) {\r\n\r\n    \t\t\t\tcolor.set( r, g, b, a );\r\n\r\n    \t\t\t\tif ( currentColorClear.equals( color ) === false ) {\r\n\r\n    \t\t\t\t\tgl.clearColor( r, g, b, a );\r\n    \t\t\t\t\tcurrentColorClear.copy( color );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\treset: function () {\r\n\r\n    \t\t\t\tlocked = false;\r\n\r\n    \t\t\t\tcurrentColorMask = null;\r\n    \t\t\t\tcurrentColorClear.set( 0, 0, 0, 1 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}\r\n\r\n    \tfunction DepthBuffer() {\r\n\r\n    \t\tvar locked = false;\r\n\r\n    \t\tvar currentDepthMask = null;\r\n    \t\tvar currentDepthFunc = null;\r\n    \t\tvar currentDepthClear = null;\r\n\r\n    \t\treturn {\r\n\r\n    \t\t\tsetTest: function ( depthTest ) {\r\n\r\n    \t\t\t\tif ( depthTest ) {\r\n\r\n    \t\t\t\t\tenable( gl.DEPTH_TEST );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tdisable( gl.DEPTH_TEST );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetMask: function ( depthMask ) {\r\n\r\n    \t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\r\n\r\n    \t\t\t\t\tgl.depthMask( depthMask );\r\n    \t\t\t\t\tcurrentDepthMask = depthMask;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetFunc: function ( depthFunc ) {\r\n\r\n    \t\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n    \t\t\t\t\tif ( depthFunc ) {\r\n\r\n    \t\t\t\t\t\tswitch ( depthFunc ) {\r\n\r\n    \t\t\t\t\t\t\tcase NeverDepth:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase AlwaysDepth:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase LessDepth:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase LessEqualDepth:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase EqualDepth:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase GreaterEqualDepth:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase GreaterDepth:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase NotEqualDepth:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tdefault:\r\n\r\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetLocked: function ( lock ) {\r\n\r\n    \t\t\t\tlocked = lock;\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetClear: function ( depth ) {\r\n\r\n    \t\t\t\tif ( currentDepthClear !== depth ) {\r\n\r\n    \t\t\t\t\tgl.clearDepth( depth );\r\n    \t\t\t\t\tcurrentDepthClear = depth;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\treset: function () {\r\n\r\n    \t\t\t\tlocked = false;\r\n\r\n    \t\t\t\tcurrentDepthMask = null;\r\n    \t\t\t\tcurrentDepthFunc = null;\r\n    \t\t\t\tcurrentDepthClear = null;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}\r\n\r\n    \tfunction StencilBuffer() {\r\n\r\n    \t\tvar locked = false;\r\n\r\n    \t\tvar currentStencilMask = null;\r\n    \t\tvar currentStencilFunc = null;\r\n    \t\tvar currentStencilRef = null;\r\n    \t\tvar currentStencilFuncMask = null;\r\n    \t\tvar currentStencilFail  = null;\r\n    \t\tvar currentStencilZFail = null;\r\n    \t\tvar currentStencilZPass = null;\r\n    \t\tvar currentStencilClear = null;\r\n\r\n    \t\treturn {\r\n\r\n    \t\t\tsetTest: function ( stencilTest ) {\r\n\r\n    \t\t\t\tif ( stencilTest ) {\r\n\r\n    \t\t\t\t\tenable( gl.STENCIL_TEST );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tdisable( gl.STENCIL_TEST );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetMask: function ( stencilMask ) {\r\n\r\n    \t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\r\n\r\n    \t\t\t\t\tgl.stencilMask( stencilMask );\r\n    \t\t\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n    \t\t\t\tif ( currentStencilFunc !== stencilFunc ||\r\n    \t\t\t\t     currentStencilRef \t!== stencilRef \t||\r\n    \t\t\t\t     currentStencilFuncMask !== stencilMask ) {\r\n\r\n    \t\t\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\r\n\r\n    \t\t\t\t\tcurrentStencilFunc = stencilFunc;\r\n    \t\t\t\t\tcurrentStencilRef  = stencilRef;\r\n    \t\t\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n    \t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\r\n    \t\t\t\t     currentStencilZFail !== stencilZFail ||\r\n    \t\t\t\t     currentStencilZPass !== stencilZPass ) {\r\n\r\n    \t\t\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\r\n\r\n    \t\t\t\t\tcurrentStencilFail  = stencilFail;\r\n    \t\t\t\t\tcurrentStencilZFail = stencilZFail;\r\n    \t\t\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetLocked: function ( lock ) {\r\n\r\n    \t\t\t\tlocked = lock;\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tsetClear: function ( stencil ) {\r\n\r\n    \t\t\t\tif ( currentStencilClear !== stencil ) {\r\n\r\n    \t\t\t\t\tgl.clearStencil( stencil );\r\n    \t\t\t\t\tcurrentStencilClear = stencil;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\treset: function () {\r\n\r\n    \t\t\t\tlocked = false;\r\n\r\n    \t\t\t\tcurrentStencilMask = null;\r\n    \t\t\t\tcurrentStencilFunc = null;\r\n    \t\t\t\tcurrentStencilRef = null;\r\n    \t\t\t\tcurrentStencilFuncMask = null;\r\n    \t\t\t\tcurrentStencilFail = null;\r\n    \t\t\t\tcurrentStencilZFail = null;\r\n    \t\t\t\tcurrentStencilZPass = null;\r\n    \t\t\t\tcurrentStencilClear = null;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tvar colorBuffer = new ColorBuffer();\r\n    \tvar depthBuffer = new DepthBuffer();\r\n    \tvar stencilBuffer = new StencilBuffer();\r\n\r\n    \tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n    \tvar newAttributes = new Uint8Array( maxVertexAttributes );\r\n    \tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\r\n    \tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\r\n\r\n    \tvar capabilities = {};\r\n\r\n    \tvar compressedTextureFormats = null;\r\n\r\n    \tvar currentBlending = null;\r\n    \tvar currentBlendEquation = null;\r\n    \tvar currentBlendSrc = null;\r\n    \tvar currentBlendDst = null;\r\n    \tvar currentBlendEquationAlpha = null;\r\n    \tvar currentBlendSrcAlpha = null;\r\n    \tvar currentBlendDstAlpha = null;\r\n    \tvar currentPremultipledAlpha = false;\r\n\r\n    \tvar currentFlipSided = null;\r\n    \tvar currentCullFace = null;\r\n\r\n    \tvar currentLineWidth = null;\r\n\r\n    \tvar currentPolygonOffsetFactor = null;\r\n    \tvar currentPolygonOffsetUnits = null;\r\n\r\n    \tvar currentScissorTest = null;\r\n\r\n    \tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n    \tvar currentTextureSlot = null;\r\n    \tvar currentBoundTextures = {};\r\n\r\n    \tvar currentScissor = new Vector4();\r\n    \tvar currentViewport = new Vector4();\r\n\r\n    \tfunction createTexture( type, target, count ) {\r\n\r\n    \t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\r\n    \t\tvar texture = gl.createTexture();\r\n\r\n    \t\tgl.bindTexture( type, texture );\r\n    \t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n    \t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\r\n    \t\tfor ( var i = 0; i < count; i ++ ) {\r\n\r\n    \t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn texture;\r\n\r\n    \t}\r\n\r\n    \tvar emptyTextures = {};\r\n    \temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\r\n    \temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\r\n\r\n    \t//\r\n\r\n    \tfunction init() {\r\n\r\n    \t\tclearColor( 0, 0, 0, 1 );\r\n    \t\tclearDepth( 1 );\r\n    \t\tclearStencil( 0 );\r\n\r\n    \t\tenable( gl.DEPTH_TEST );\r\n    \t\tsetDepthFunc( LessEqualDepth );\r\n\r\n    \t\tsetFlipSided( false );\r\n    \t\tsetCullFace( CullFaceBack );\r\n    \t\tenable( gl.CULL_FACE );\r\n\r\n    \t\tenable( gl.BLEND );\r\n    \t\tsetBlending( NormalBlending );\r\n\r\n    \t}\r\n\r\n    \tfunction initAttributes() {\r\n\r\n    \t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n    \t\t\tnewAttributes[ i ] = 0;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction enableAttribute( attribute ) {\r\n\r\n    \t\tnewAttributes[ attribute ] = 1;\r\n\r\n    \t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n    \t\t\tgl.enableVertexAttribArray( attribute );\r\n    \t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( attributeDivisors[ attribute ] !== 0 ) {\r\n\r\n    \t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n    \t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\r\n    \t\t\tattributeDivisors[ attribute ] = 0;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction enableAttributeAndDivisor( attribute, meshPerAttribute, extension ) {\r\n\r\n    \t\tnewAttributes[ attribute ] = 1;\r\n\r\n    \t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n    \t\t\tgl.enableVertexAttribArray( attribute );\r\n    \t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n    \t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\r\n    \t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction disableUnusedAttributes() {\r\n\r\n    \t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\r\n\r\n    \t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n    \t\t\t\tgl.disableVertexAttribArray( i );\r\n    \t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction enable( id ) {\r\n\r\n    \t\tif ( capabilities[ id ] !== true ) {\r\n\r\n    \t\t\tgl.enable( id );\r\n    \t\t\tcapabilities[ id ] = true;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction disable( id ) {\r\n\r\n    \t\tif ( capabilities[ id ] !== false ) {\r\n\r\n    \t\t\tgl.disable( id );\r\n    \t\t\tcapabilities[ id ] = false;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction getCompressedTextureFormats() {\r\n\r\n    \t\tif ( compressedTextureFormats === null ) {\r\n\r\n    \t\t\tcompressedTextureFormats = [];\r\n\r\n    \t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n    \t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\r\n    \t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\r\n\r\n    \t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n    \t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n    \t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn compressedTextureFormats;\r\n\r\n    \t}\r\n\r\n    \tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n\r\n    \t\tif ( blending !== NoBlending ) {\r\n\r\n    \t\t\tenable( gl.BLEND );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tdisable( gl.BLEND );\r\n    \t\t\tcurrentBlending = blending; // no blending, that is\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n    \t\t\tif ( blending === AdditiveBlending ) {\r\n\r\n    \t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n    \t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n    \t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( blending === SubtractiveBlending ) {\r\n\r\n    \t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n    \t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n    \t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( blending === MultiplyBlending ) {\r\n\r\n    \t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n    \t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n    \t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n    \t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n    \t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tcurrentBlending = blending;\r\n    \t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( blending === CustomBlending ) {\r\n\r\n    \t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n    \t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n    \t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n    \t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n    \t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n    \t\t\t\tcurrentBlendEquation = blendEquation;\r\n    \t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n    \t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n    \t\t\t\tcurrentBlendSrc = blendSrc;\r\n    \t\t\t\tcurrentBlendDst = blendDst;\r\n    \t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n    \t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tcurrentBlendEquation = null;\r\n    \t\t\tcurrentBlendSrc = null;\r\n    \t\t\tcurrentBlendDst = null;\r\n    \t\t\tcurrentBlendEquationAlpha = null;\r\n    \t\t\tcurrentBlendSrcAlpha = null;\r\n    \t\t\tcurrentBlendDstAlpha = null;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// TODO Deprecate\r\n\r\n    \tfunction setColorWrite( colorWrite ) {\r\n\r\n    \t\tcolorBuffer.setMask( colorWrite );\r\n\r\n    \t}\r\n\r\n    \tfunction setDepthTest( depthTest ) {\r\n\r\n    \t\tdepthBuffer.setTest( depthTest );\r\n\r\n    \t}\r\n\r\n    \tfunction setDepthWrite( depthWrite ) {\r\n\r\n    \t\tdepthBuffer.setMask( depthWrite );\r\n\r\n    \t}\r\n\r\n    \tfunction setDepthFunc( depthFunc ) {\r\n\r\n    \t\tdepthBuffer.setFunc( depthFunc );\r\n\r\n    \t}\r\n\r\n    \tfunction setStencilTest( stencilTest ) {\r\n\r\n    \t\tstencilBuffer.setTest( stencilTest );\r\n\r\n    \t}\r\n\r\n    \tfunction setStencilWrite( stencilWrite ) {\r\n\r\n    \t\tstencilBuffer.setMask( stencilWrite );\r\n\r\n    \t}\r\n\r\n    \tfunction setStencilFunc( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n    \t\tstencilBuffer.setFunc( stencilFunc, stencilRef, stencilMask );\r\n\r\n    \t}\r\n\r\n    \tfunction setStencilOp( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n    \t\tstencilBuffer.setOp( stencilFail, stencilZFail, stencilZPass );\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tfunction setFlipSided( flipSided ) {\r\n\r\n    \t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n    \t\t\tif ( flipSided ) {\r\n\r\n    \t\t\t\tgl.frontFace( gl.CW );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tcurrentFlipSided = flipSided;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction setCullFace( cullFace ) {\r\n\r\n    \t\tif ( cullFace !== CullFaceNone ) {\r\n\r\n    \t\t\tenable( gl.CULL_FACE );\r\n\r\n    \t\t\tif ( cullFace !== currentCullFace ) {\r\n\r\n    \t\t\t\tif ( cullFace === CullFaceBack ) {\r\n\r\n    \t\t\t\t\tgl.cullFace( gl.BACK );\r\n\r\n    \t\t\t\t} else if ( cullFace === CullFaceFront ) {\r\n\r\n    \t\t\t\t\tgl.cullFace( gl.FRONT );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tdisable( gl.CULL_FACE );\r\n\r\n    \t\t}\r\n\r\n    \t\tcurrentCullFace = cullFace;\r\n\r\n    \t}\r\n\r\n    \tfunction setLineWidth( width ) {\r\n\r\n    \t\tif ( width !== currentLineWidth ) {\r\n\r\n    \t\t\tgl.lineWidth( width );\r\n\r\n    \t\t\tcurrentLineWidth = width;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction setPolygonOffset( polygonOffset, factor, units ) {\r\n\r\n    \t\tif ( polygonOffset ) {\r\n\r\n    \t\t\tenable( gl.POLYGON_OFFSET_FILL );\r\n\r\n    \t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n\r\n    \t\t\t\tgl.polygonOffset( factor, units );\r\n\r\n    \t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n    \t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tdisable( gl.POLYGON_OFFSET_FILL );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction getScissorTest() {\r\n\r\n    \t\treturn currentScissorTest;\r\n\r\n    \t}\r\n\r\n    \tfunction setScissorTest( scissorTest ) {\r\n\r\n    \t\tcurrentScissorTest = scissorTest;\r\n\r\n    \t\tif ( scissorTest ) {\r\n\r\n    \t\t\tenable( gl.SCISSOR_TEST );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tdisable( gl.SCISSOR_TEST );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// texture\r\n\r\n    \tfunction activeTexture( webglSlot ) {\r\n\r\n    \t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n    \t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n    \t\t\tgl.activeTexture( webglSlot );\r\n    \t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction bindTexture( webglType, webglTexture ) {\r\n\r\n    \t\tif ( currentTextureSlot === null ) {\r\n\r\n    \t\t\tactiveTexture();\r\n\r\n    \t\t}\r\n\r\n    \t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n    \t\tif ( boundTexture === undefined ) {\r\n\r\n    \t\t\tboundTexture = { type: undefined, texture: undefined };\r\n    \t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n    \t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n\r\n    \t\t\tboundTexture.type = webglType;\r\n    \t\t\tboundTexture.texture = webglTexture;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction compressedTexImage2D() {\r\n\r\n    \t\ttry {\r\n\r\n    \t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n    \t\t} catch ( error ) {\r\n\r\n    \t\t\tconsole.error( error );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction texImage2D() {\r\n\r\n    \t\ttry {\r\n\r\n    \t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n    \t\t} catch ( error ) {\r\n\r\n    \t\t\tconsole.error( error );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// TODO Deprecate\r\n\r\n    \tfunction clearColor( r, g, b, a ) {\r\n\r\n    \t\tcolorBuffer.setClear( r, g, b, a );\r\n\r\n    \t}\r\n\r\n    \tfunction clearDepth( depth ) {\r\n\r\n    \t\tdepthBuffer.setClear( depth );\r\n\r\n    \t}\r\n\r\n    \tfunction clearStencil( stencil ) {\r\n\r\n    \t\tstencilBuffer.setClear( stencil );\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tfunction scissor( scissor ) {\r\n\r\n    \t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n    \t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n    \t\t\tcurrentScissor.copy( scissor );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction viewport( viewport ) {\r\n\r\n    \t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n    \t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n    \t\t\tcurrentViewport.copy( viewport );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tfunction reset() {\r\n\r\n    \t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n    \t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n    \t\t\t\tgl.disableVertexAttribArray( i );\r\n    \t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tcapabilities = {};\r\n\r\n    \t\tcompressedTextureFormats = null;\r\n\r\n    \t\tcurrentTextureSlot = null;\r\n    \t\tcurrentBoundTextures = {};\r\n\r\n    \t\tcurrentBlending = null;\r\n\r\n    \t\tcurrentFlipSided = null;\r\n    \t\tcurrentCullFace = null;\r\n\r\n    \t\tcolorBuffer.reset();\r\n    \t\tdepthBuffer.reset();\r\n    \t\tstencilBuffer.reset();\r\n\r\n    \t}\r\n\r\n    \treturn {\r\n\r\n    \t\tbuffers: {\r\n    \t\t\tcolor: colorBuffer,\r\n    \t\t\tdepth: depthBuffer,\r\n    \t\t\tstencil: stencilBuffer\r\n    \t\t},\r\n\r\n    \t\tinit: init,\r\n    \t\tinitAttributes: initAttributes,\r\n    \t\tenableAttribute: enableAttribute,\r\n    \t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\r\n    \t\tdisableUnusedAttributes: disableUnusedAttributes,\r\n    \t\tenable: enable,\r\n    \t\tdisable: disable,\r\n    \t\tgetCompressedTextureFormats: getCompressedTextureFormats,\r\n\r\n    \t\tsetBlending: setBlending,\r\n\r\n    \t\tsetColorWrite: setColorWrite,\r\n    \t\tsetDepthTest: setDepthTest,\r\n    \t\tsetDepthWrite: setDepthWrite,\r\n    \t\tsetDepthFunc: setDepthFunc,\r\n    \t\tsetStencilTest: setStencilTest,\r\n    \t\tsetStencilWrite: setStencilWrite,\r\n    \t\tsetStencilFunc: setStencilFunc,\r\n    \t\tsetStencilOp: setStencilOp,\r\n\r\n    \t\tsetFlipSided: setFlipSided,\r\n    \t\tsetCullFace: setCullFace,\r\n\r\n    \t\tsetLineWidth: setLineWidth,\r\n    \t\tsetPolygonOffset: setPolygonOffset,\r\n\r\n    \t\tgetScissorTest: getScissorTest,\r\n    \t\tsetScissorTest: setScissorTest,\r\n\r\n    \t\tactiveTexture: activeTexture,\r\n    \t\tbindTexture: bindTexture,\r\n    \t\tcompressedTexImage2D: compressedTexImage2D,\r\n    \t\ttexImage2D: texImage2D,\r\n\r\n    \t\tclearColor: clearColor,\r\n    \t\tclearDepth: clearDepth,\r\n    \t\tclearStencil: clearStencil,\r\n\r\n    \t\tscissor: scissor,\r\n    \t\tviewport: viewport,\r\n\r\n    \t\treset: reset\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function WebGLCapabilities( gl, extensions, parameters ) {\r\n\r\n    \tvar maxAnisotropy;\r\n\r\n    \tfunction getMaxAnisotropy() {\r\n\r\n    \t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\r\n\r\n    \t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n    \t\tif ( extension !== null ) {\r\n\r\n    \t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tmaxAnisotropy = 0;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn maxAnisotropy;\r\n\r\n    \t}\r\n\r\n    \tfunction getMaxPrecision( precision ) {\r\n\r\n    \t\tif ( precision === 'highp' ) {\r\n\r\n    \t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n    \t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n    \t\t\t\treturn 'highp';\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tprecision = 'mediump';\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( precision === 'mediump' ) {\r\n\r\n    \t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n    \t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n    \t\t\t\treturn 'mediump';\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn 'lowp';\r\n\r\n    \t}\r\n\r\n    \tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n    \tvar maxPrecision = getMaxPrecision( precision );\r\n\r\n    \tif ( maxPrecision !== precision ) {\r\n\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\r\n    \t\tprecision = maxPrecision;\r\n\r\n    \t}\r\n\r\n    \tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\r\n\r\n    \tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n    \tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n    \tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n    \tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n    \tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n    \tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n    \tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n    \tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n    \tvar vertexTextures = maxVertexTextures > 0;\r\n    \tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n    \tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\r\n\r\n    \treturn {\r\n\r\n    \t\tgetMaxAnisotropy: getMaxAnisotropy,\r\n    \t\tgetMaxPrecision: getMaxPrecision,\r\n\r\n    \t\tprecision: precision,\r\n    \t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\r\n\r\n    \t\tmaxTextures: maxTextures,\r\n    \t\tmaxVertexTextures: maxVertexTextures,\r\n    \t\tmaxTextureSize: maxTextureSize,\r\n    \t\tmaxCubemapSize: maxCubemapSize,\r\n\r\n    \t\tmaxAttributes: maxAttributes,\r\n    \t\tmaxVertexUniforms: maxVertexUniforms,\r\n    \t\tmaxVaryings: maxVaryings,\r\n    \t\tmaxFragmentUniforms: maxFragmentUniforms,\r\n\r\n    \t\tvertexTextures: vertexTextures,\r\n    \t\tfloatFragmentTextures: floatFragmentTextures,\r\n    \t\tfloatVertexTextures: floatVertexTextures\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function WebGLExtensions( gl ) {\r\n\r\n    \tvar extensions = {};\r\n\r\n    \treturn {\r\n\r\n    \t\tget: function ( name ) {\r\n\r\n    \t\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n    \t\t\t\treturn extensions[ name ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar extension;\r\n\r\n    \t\t\tswitch ( name ) {\r\n\r\n    \t\t\t\tcase 'WEBGL_depth_texture':\r\n    \t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n    \t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n    \t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n    \t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'WEBGL_compressed_texture_etc1':\r\n    \t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tdefault:\r\n    \t\t\t\t\textension = gl.getExtension( name );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( extension === null ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\textensions[ name ] = extension;\r\n\r\n    \t\t\treturn extension;\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    function WebGLClipping() {\r\n\r\n    \tvar scope = this,\r\n\r\n    \t\tglobalState = null,\r\n    \t\tnumGlobalPlanes = 0,\r\n    \t\tlocalClippingEnabled = false,\r\n    \t\trenderingShadows = false,\r\n\r\n    \t\tplane = new Plane(),\r\n    \t\tviewNormalMatrix = new Matrix3(),\r\n\r\n    \t\tuniform = { value: null, needsUpdate: false };\r\n\r\n    \tthis.uniform = uniform;\r\n    \tthis.numPlanes = 0;\r\n\r\n    \tthis.init = function( planes, enableLocalClipping, camera ) {\r\n\r\n    \t\tvar enabled =\r\n    \t\t\tplanes.length !== 0 ||\r\n    \t\t\tenableLocalClipping ||\r\n    \t\t\t// enable state of previous frame - the clipping code has to\r\n    \t\t\t// run another frame in order to reset the state:\r\n    \t\t\tnumGlobalPlanes !== 0 ||\r\n    \t\t\tlocalClippingEnabled;\r\n\r\n    \t\tlocalClippingEnabled = enableLocalClipping;\r\n\r\n    \t\tglobalState = projectPlanes( planes, camera, 0 );\r\n    \t\tnumGlobalPlanes = planes.length;\r\n\r\n    \t\treturn enabled;\r\n\r\n    \t};\r\n\r\n    \tthis.beginShadows = function() {\r\n\r\n    \t\trenderingShadows = true;\r\n    \t\tprojectPlanes( null );\r\n\r\n    \t};\r\n\r\n    \tthis.endShadows = function() {\r\n\r\n    \t\trenderingShadows = false;\r\n    \t\tresetGlobalState();\r\n\r\n    \t};\r\n\r\n    \tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\r\n\r\n    \t\tif ( ! localClippingEnabled ||\r\n    \t\t\t\tplanes === null || planes.length === 0 ||\r\n    \t\t\t\trenderingShadows && ! clipShadows ) {\r\n    \t\t\t// there's no local clipping\r\n\r\n    \t\t\tif ( renderingShadows ) {\r\n    \t\t\t\t// there's no global clipping\r\n\r\n    \t\t\t\tprojectPlanes( null );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tresetGlobalState();\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n    \t\t\t\tlGlobal = nGlobal * 4,\r\n\r\n    \t\t\t\tdstArray = cache.clippingState || null;\r\n\r\n    \t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n    \t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\r\n\r\n    \t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\r\n\r\n    \t\t\t\tdstArray[ i ] = globalState[ i ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tcache.clippingState = dstArray;\r\n    \t\t\tthis.numPlanes += nGlobal;\r\n\r\n    \t\t}\r\n\r\n\r\n    \t};\r\n\r\n    \tfunction resetGlobalState() {\r\n\r\n    \t\tif ( uniform.value !== globalState ) {\r\n\r\n    \t\t\tuniform.value = globalState;\r\n    \t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\r\n    \t\t}\r\n\r\n    \t\tscope.numPlanes = numGlobalPlanes;\r\n\r\n    \t}\r\n\r\n    \tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n\r\n    \t\tvar nPlanes = planes !== null ? planes.length : 0,\r\n    \t\t\tdstArray = null;\r\n\r\n    \t\tif ( nPlanes !== 0 ) {\r\n\r\n    \t\t\tdstArray = uniform.value;\r\n\r\n    \t\t\tif ( skipTransform !== true || dstArray === null ) {\r\n\r\n    \t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\r\n    \t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\r\n    \t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\r\n\r\n    \t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\r\n\r\n    \t\t\t\t\tdstArray = new Float32Array( flatSize );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tfor ( var i = 0, i4 = dstOffset;\r\n    \t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\r\n\r\n    \t\t\t\t\tplane.copy( planes[ i ] ).\r\n    \t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\r\n\r\n    \t\t\t\t\tplane.normal.toArray( dstArray, i4 );\r\n    \t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tuniform.value = dstArray;\r\n    \t\t\tuniform.needsUpdate = true;\r\n\r\n    \t\t}\r\n\r\n    \t\tscope.numPlanes = nPlanes;\r\n    \t\treturn dstArray;\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    /**\r\n     * @author supereggbert / http://www.paulbrunt.co.uk/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author szimek / https://github.com/szimek/\r\n     * @author tschw\r\n     */\r\n\r\n    function WebGLRenderer( parameters ) {\r\n\r\n    \tconsole.log( 'THREE.WebGLRenderer', REVISION );\r\n\r\n    \tparameters = parameters || {};\r\n\r\n    \tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\r\n    \t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n    \t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n    \t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n    \t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n    \t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n    \t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n    \t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\r\n\r\n    \tvar lights = [];\r\n\r\n    \tvar opaqueObjects = [];\r\n    \tvar opaqueObjectsLastIndex = - 1;\r\n    \tvar transparentObjects = [];\r\n    \tvar transparentObjectsLastIndex = - 1;\r\n\r\n    \tvar morphInfluences = new Float32Array( 8 );\r\n\r\n    \tvar sprites = [];\r\n    \tvar lensFlares = [];\r\n\r\n    \t// public properties\r\n\r\n    \tthis.domElement = _canvas;\r\n    \tthis.context = null;\r\n\r\n    \t// clearing\r\n\r\n    \tthis.autoClear = true;\r\n    \tthis.autoClearColor = true;\r\n    \tthis.autoClearDepth = true;\r\n    \tthis.autoClearStencil = true;\r\n\r\n    \t// scene graph\r\n\r\n    \tthis.sortObjects = true;\r\n\r\n    \t// user-defined clipping\r\n\r\n    \tthis.clippingPlanes = [];\r\n    \tthis.localClippingEnabled = false;\r\n\r\n    \t// physically based shading\r\n\r\n    \tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n    \tthis.gammaInput = false;\r\n    \tthis.gammaOutput = false;\r\n\r\n    \t// physical lights\r\n\r\n    \tthis.physicallyCorrectLights = false;\r\n\r\n    \t// tone mapping\r\n\r\n    \tthis.toneMapping = LinearToneMapping;\r\n    \tthis.toneMappingExposure = 1.0;\r\n    \tthis.toneMappingWhitePoint = 1.0;\r\n\r\n    \t// morphs\r\n\r\n    \tthis.maxMorphTargets = 8;\r\n    \tthis.maxMorphNormals = 4;\r\n\r\n    \t// internal properties\r\n\r\n    \tvar _this = this,\r\n\r\n    \t// internal state cache\r\n\r\n    \t_currentProgram = null,\r\n    \t_currentRenderTarget = null,\r\n    \t_currentFramebuffer = null,\r\n    \t_currentMaterialId = - 1,\r\n    \t_currentGeometryProgram = '',\r\n    \t_currentCamera = null,\r\n\r\n    \t_currentScissor = new Vector4(),\r\n    \t_currentScissorTest = null,\r\n\r\n    \t_currentViewport = new Vector4(),\r\n\r\n    \t//\r\n\r\n    \t_usedTextureUnits = 0,\r\n\r\n    \t//\r\n\r\n    \t_clearColor = new Color( 0x000000 ),\r\n    \t_clearAlpha = 0,\r\n\r\n    \t_width = _canvas.width,\r\n    \t_height = _canvas.height,\r\n\r\n    \t_pixelRatio = 1,\r\n\r\n    \t_scissor = new Vector4( 0, 0, _width, _height ),\r\n    \t_scissorTest = false,\r\n\r\n    \t_viewport = new Vector4( 0, 0, _width, _height ),\r\n\r\n    \t// frustum\r\n\r\n    \t_frustum = new Frustum(),\r\n\r\n    \t// clipping\r\n\r\n    \t_clipping = new WebGLClipping(),\r\n    \t_clippingEnabled = false,\r\n    \t_localClippingEnabled = false,\r\n\r\n    \t_sphere = new Sphere(),\r\n\r\n    \t// camera matrices cache\r\n\r\n    \t_projScreenMatrix = new Matrix4(),\r\n\r\n    \t_vector3 = new Vector3(),\r\n\r\n    \t// light arrays cache\r\n\r\n    \t_lights = {\r\n\r\n    \t\thash: '',\r\n\r\n    \t\tambient: [ 0, 0, 0 ],\r\n    \t\tdirectional: [],\r\n    \t\tdirectionalShadowMap: [],\r\n    \t\tdirectionalShadowMatrix: [],\r\n    \t\tspot: [],\r\n    \t\tspotShadowMap: [],\r\n    \t\tspotShadowMatrix: [],\r\n    \t\tpoint: [],\r\n    \t\tpointShadowMap: [],\r\n    \t\tpointShadowMatrix: [],\r\n    \t\themi: [],\r\n\r\n    \t\tshadows: []\r\n\r\n    \t},\r\n\r\n    \t// info\r\n\r\n    \t_infoRender = {\r\n\r\n    \t\tcalls: 0,\r\n    \t\tvertices: 0,\r\n    \t\tfaces: 0,\r\n    \t\tpoints: 0\r\n\r\n    \t};\r\n\r\n    \tthis.info = {\r\n\r\n    \t\trender: _infoRender,\r\n    \t\tmemory: {\r\n\r\n    \t\t\tgeometries: 0,\r\n    \t\t\ttextures: 0\r\n\r\n    \t\t},\r\n    \t\tprograms: null\r\n\r\n    \t};\r\n\r\n\r\n    \t// initialize\r\n\r\n    \tvar _gl;\r\n\r\n    \ttry {\r\n\r\n    \t\tvar attributes = {\r\n    \t\t\talpha: _alpha,\r\n    \t\t\tdepth: _depth,\r\n    \t\t\tstencil: _stencil,\r\n    \t\t\tantialias: _antialias,\r\n    \t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n    \t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n    \t\t};\r\n\r\n    \t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n    \t\tif ( _gl === null ) {\r\n\r\n    \t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n    \t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n    \t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n    \t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n    \t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n\r\n    \t\t\t};\r\n\r\n    \t\t}\r\n\r\n    \t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n    \t} catch ( error ) {\r\n\r\n    \t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n    \t}\r\n\r\n    \tvar extensions = new WebGLExtensions( _gl );\r\n\r\n    \textensions.get( 'WEBGL_depth_texture' );\r\n    \textensions.get( 'OES_texture_float' );\r\n    \textensions.get( 'OES_texture_float_linear' );\r\n    \textensions.get( 'OES_texture_half_float' );\r\n    \textensions.get( 'OES_texture_half_float_linear' );\r\n    \textensions.get( 'OES_standard_derivatives' );\r\n    \textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n    \tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n    \t\tBufferGeometry.MaxIndex = 4294967296;\r\n\r\n    \t}\r\n\r\n    \tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n    \tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\r\n    \tvar properties = new WebGLProperties();\r\n    \tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\r\n    \tvar objects = new WebGLObjects( _gl, properties, this.info );\r\n    \tvar programCache = new WebGLPrograms( this, capabilities );\r\n    \tvar lightCache = new WebGLLights();\r\n\r\n    \tthis.info.programs = programCache.programs;\r\n\r\n    \tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n    \tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n    \t//\r\n\r\n    \tvar backgroundCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\r\n    \tvar backgroundCamera2 = new PerspectiveCamera();\r\n    \tvar backgroundPlaneMesh = new Mesh(\r\n    \t\tnew PlaneBufferGeometry( 2, 2 ),\r\n    \t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\r\n    \t);\r\n    \tvar backgroundBoxShader = ShaderLib[ 'cube' ];\r\n    \tvar backgroundBoxMesh = new Mesh(\r\n    \t\tnew BoxBufferGeometry( 5, 5, 5 ),\r\n    \t\tnew ShaderMaterial( {\r\n    \t\t\tuniforms: backgroundBoxShader.uniforms,\r\n    \t\t\tvertexShader: backgroundBoxShader.vertexShader,\r\n    \t\t\tfragmentShader: backgroundBoxShader.fragmentShader,\r\n    \t\t\tside: BackSide,\r\n    \t\t\tdepthTest: false,\r\n    \t\t\tdepthWrite: false,\r\n    \t\t\tfog: false\r\n    \t\t} )\r\n    \t);\r\n\r\n    \t//\r\n\r\n    \tfunction getTargetPixelRatio() {\r\n\r\n    \t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n    \t}\r\n\r\n    \tfunction glClearColor( r, g, b, a ) {\r\n\r\n    \t\tif ( _premultipliedAlpha === true ) {\r\n\r\n    \t\t\tr *= a; g *= a; b *= a;\r\n\r\n    \t\t}\r\n\r\n    \t\tstate.clearColor( r, g, b, a );\r\n\r\n    \t}\r\n\r\n    \tfunction setDefaultGLState() {\r\n\r\n    \t\tstate.init();\r\n\r\n    \t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n    \t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n    \t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n    \t}\r\n\r\n    \tfunction resetGLState() {\r\n\r\n    \t\t_currentProgram = null;\r\n    \t\t_currentCamera = null;\r\n\r\n    \t\t_currentGeometryProgram = '';\r\n    \t\t_currentMaterialId = - 1;\r\n\r\n    \t\tstate.reset();\r\n\r\n    \t}\r\n\r\n    \tsetDefaultGLState();\r\n\r\n    \tthis.context = _gl;\r\n    \tthis.capabilities = capabilities;\r\n    \tthis.extensions = extensions;\r\n    \tthis.properties = properties;\r\n    \tthis.state = state;\r\n\r\n    \t// shadow map\r\n\r\n    \tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\r\n\r\n    \tthis.shadowMap = shadowMap;\r\n\r\n\r\n    \t// Plugins\r\n\r\n    \tvar spritePlugin = new SpritePlugin( this, sprites );\r\n    \tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\r\n\r\n    \t// API\r\n\r\n    \tthis.getContext = function () {\r\n\r\n    \t\treturn _gl;\r\n\r\n    \t};\r\n\r\n    \tthis.getContextAttributes = function () {\r\n\r\n    \t\treturn _gl.getContextAttributes();\r\n\r\n    \t};\r\n\r\n    \tthis.forceContextLoss = function () {\r\n\r\n    \t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n    \t};\r\n\r\n    \tthis.getMaxAnisotropy = function () {\r\n\r\n    \t\treturn capabilities.getMaxAnisotropy();\r\n\r\n    \t};\r\n\r\n    \tthis.getPrecision = function () {\r\n\r\n    \t\treturn capabilities.precision;\r\n\r\n    \t};\r\n\r\n    \tthis.getPixelRatio = function () {\r\n\r\n    \t\treturn _pixelRatio;\r\n\r\n    \t};\r\n\r\n    \tthis.setPixelRatio = function ( value ) {\r\n\r\n    \t\tif ( value === undefined ) return;\r\n\r\n    \t\t_pixelRatio = value;\r\n\r\n    \t\tthis.setSize( _viewport.z, _viewport.w, false );\r\n\r\n    \t};\r\n\r\n    \tthis.getSize = function () {\r\n\r\n    \t\treturn {\r\n    \t\t\twidth: _width,\r\n    \t\t\theight: _height\r\n    \t\t};\r\n\r\n    \t};\r\n\r\n    \tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n    \t\t_width = width;\r\n    \t\t_height = height;\r\n\r\n    \t\t_canvas.width = width * _pixelRatio;\r\n    \t\t_canvas.height = height * _pixelRatio;\r\n\r\n    \t\tif ( updateStyle !== false ) {\r\n\r\n    \t\t\t_canvas.style.width = width + 'px';\r\n    \t\t\t_canvas.style.height = height + 'px';\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.setViewport( 0, 0, width, height );\r\n\r\n    \t};\r\n\r\n    \tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n    \t\tstate.viewport( _viewport.set( x, y, width, height ) );\r\n\r\n    \t};\r\n\r\n    \tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n    \t\tstate.scissor( _scissor.set( x, y, width, height ) );\r\n\r\n    \t};\r\n\r\n    \tthis.setScissorTest = function ( boolean ) {\r\n\r\n    \t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n    \t};\r\n\r\n    \t// Clearing\r\n\r\n    \tthis.getClearColor = function () {\r\n\r\n    \t\treturn _clearColor;\r\n\r\n    \t};\r\n\r\n    \tthis.setClearColor = function ( color, alpha ) {\r\n\r\n    \t\t_clearColor.set( color );\r\n\r\n    \t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n    \t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n    \t};\r\n\r\n    \tthis.getClearAlpha = function () {\r\n\r\n    \t\treturn _clearAlpha;\r\n\r\n    \t};\r\n\r\n    \tthis.setClearAlpha = function ( alpha ) {\r\n\r\n    \t\t_clearAlpha = alpha;\r\n\r\n    \t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n    \t};\r\n\r\n    \tthis.clear = function ( color, depth, stencil ) {\r\n\r\n    \t\tvar bits = 0;\r\n\r\n    \t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n    \t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n    \t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n    \t\t_gl.clear( bits );\r\n\r\n    \t};\r\n\r\n    \tthis.clearColor = function () {\r\n\r\n    \t\tthis.clear( true, false, false );\r\n\r\n    \t};\r\n\r\n    \tthis.clearDepth = function () {\r\n\r\n    \t\tthis.clear( false, true, false );\r\n\r\n    \t};\r\n\r\n    \tthis.clearStencil = function () {\r\n\r\n    \t\tthis.clear( false, false, true );\r\n\r\n    \t};\r\n\r\n    \tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n    \t\tthis.setRenderTarget( renderTarget );\r\n    \t\tthis.clear( color, depth, stencil );\r\n\r\n    \t};\r\n\r\n    \t// Reset\r\n\r\n    \tthis.resetGLState = resetGLState;\r\n\r\n    \tthis.dispose = function() {\r\n\r\n    \t\ttransparentObjects = [];\r\n    \t\ttransparentObjectsLastIndex = -1;\r\n    \t\topaqueObjects = [];\r\n    \t\topaqueObjectsLastIndex = -1;\r\n\r\n    \t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n    \t};\r\n\r\n    \t// Events\r\n\r\n    \tfunction onContextLost( event ) {\r\n\r\n    \t\tevent.preventDefault();\r\n\r\n    \t\tresetGLState();\r\n    \t\tsetDefaultGLState();\r\n\r\n    \t\tproperties.clear();\r\n\r\n    \t}\r\n\r\n    \tfunction onMaterialDispose( event ) {\r\n\r\n    \t\tvar material = event.target;\r\n\r\n    \t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n    \t\tdeallocateMaterial( material );\r\n\r\n    \t}\r\n\r\n    \t// Buffer deallocation\r\n\r\n    \tfunction deallocateMaterial( material ) {\r\n\r\n    \t\treleaseMaterialProgramReference( material );\r\n\r\n    \t\tproperties.delete( material );\r\n\r\n    \t}\r\n\r\n\r\n    \tfunction releaseMaterialProgramReference( material ) {\r\n\r\n    \t\tvar programInfo = properties.get( material ).program;\r\n\r\n    \t\tmaterial.program = undefined;\r\n\r\n    \t\tif ( programInfo !== undefined ) {\r\n\r\n    \t\t\tprogramCache.releaseProgram( programInfo );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// Buffer rendering\r\n\r\n    \tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n    \t\tstate.initAttributes();\r\n\r\n    \t\tvar buffers = properties.get( object );\r\n\r\n    \t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n    \t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n    \t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n    \t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n    \t\tvar attributes = program.getAttributes();\r\n\r\n    \t\tif ( object.hasPositions ) {\r\n\r\n    \t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n    \t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n    \t\t\tstate.enableAttribute( attributes.position );\r\n    \t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( object.hasNormals ) {\r\n\r\n    \t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n    \t\t\tif ( ! material.isMeshPhongMaterial &&\r\n    \t\t\t     ! material.isMeshStandardMaterial &&\r\n    \t\t\t       material.shading === FlatShading ) {\r\n\r\n    \t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n    \t\t\t\t\tvar array = object.normalArray;\r\n\r\n    \t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n    \t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n    \t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n    \t\t\t\t\tarray[ i + 0 ] = nx;\r\n    \t\t\t\t\tarray[ i + 1 ] = ny;\r\n    \t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n    \t\t\t\t\tarray[ i + 3 ] = nx;\r\n    \t\t\t\t\tarray[ i + 4 ] = ny;\r\n    \t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n    \t\t\t\t\tarray[ i + 6 ] = nx;\r\n    \t\t\t\t\tarray[ i + 7 ] = ny;\r\n    \t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n    \t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n    \t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( object.hasUvs && material.map ) {\r\n\r\n    \t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n    \t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n    \t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n    \t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\r\n\r\n    \t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n    \t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n    \t\t\tstate.enableAttribute( attributes.color );\r\n\r\n    \t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n    \t\t}\r\n\r\n    \t\tstate.disableUnusedAttributes();\r\n\r\n    \t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n    \t\tobject.count = 0;\r\n\r\n    \t};\r\n\r\n    \tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\r\n\r\n    \t\tsetMaterial( material );\r\n\r\n    \t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n    \t\tvar updateBuffers = false;\r\n    \t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n    \t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n    \t\t\t_currentGeometryProgram = geometryProgram;\r\n    \t\t\tupdateBuffers = true;\r\n\r\n    \t\t}\r\n\r\n    \t\t// morph targets\r\n\r\n    \t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n    \t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n    \t\t\tvar activeInfluences = [];\r\n\r\n    \t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n    \t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tactiveInfluences.sort( absNumericalSort );\r\n\r\n    \t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n    \t\t\t\tactiveInfluences.length = 8;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n    \t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar influence = activeInfluences[ i ];\r\n    \t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n    \t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n    \t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n    \t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n    \t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n    \t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\tmorphInfluences[ i ] = 0.0;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tprogram.getUniforms().setValue(\r\n    \t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\r\n\r\n    \t\t\tupdateBuffers = true;\r\n\r\n    \t\t}\r\n\r\n    \t\t//\r\n\r\n    \t\tvar index = geometry.index;\r\n    \t\tvar position = geometry.attributes.position;\r\n    \t\tvar rangeFactor = 1;\r\n\r\n    \t\tif ( material.wireframe === true ) {\r\n\r\n    \t\t\tindex = objects.getWireframeAttribute( geometry );\r\n    \t\t\trangeFactor = 2;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar renderer;\r\n\r\n    \t\tif ( index !== null ) {\r\n\r\n    \t\t\trenderer = indexedBufferRenderer;\r\n    \t\t\trenderer.setIndex( index );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\trenderer = bufferRenderer;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( updateBuffers ) {\r\n\r\n    \t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n    \t\t\tif ( index !== null ) {\r\n\r\n    \t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t//\r\n\r\n    \t\tvar dataCount = 0;\r\n\r\n    \t\tif ( index !== null ) {\r\n\r\n    \t\t\tdataCount = index.count;\r\n\r\n    \t\t} else if ( position !== undefined ) {\r\n\r\n    \t\t\tdataCount = position.count;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\r\n    \t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\r\n\r\n    \t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\r\n    \t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\r\n\r\n    \t\tvar drawStart = Math.max( rangeStart, groupStart );\r\n    \t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\r\n    \t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\r\n    \t\tif ( drawCount === 0 ) return;\r\n\r\n    \t\t//\r\n\r\n    \t\tif ( object.isMesh ) {\r\n\r\n    \t\t\tif ( material.wireframe === true ) {\r\n\r\n    \t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n    \t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tswitch ( object.drawMode ) {\r\n\r\n    \t\t\t\t\tcase TrianglesDrawMode:\r\n    \t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase TriangleStripDrawMode:\r\n    \t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase TriangleFanDrawMode:\r\n    \t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n\r\n    \t\t} else if ( object.isLine ) {\r\n\r\n    \t\t\tvar lineWidth = material.linewidth;\r\n\r\n    \t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n    \t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n    \t\t\tif ( object.isLineSegments ) {\r\n\r\n    \t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( object.isPoints ) {\r\n\r\n    \t\t\trenderer.setMode( _gl.POINTS );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\r\n\r\n    \t\t\tif ( geometry.maxInstancedCount > 0 ) {\r\n\r\n    \t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\trenderer.render( drawStart, drawCount );\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    \tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n    \t\tvar extension;\r\n\r\n    \t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\r\n\r\n    \t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n    \t\t\tif ( extension === null ) {\r\n\r\n    \t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n    \t\t\t\treturn;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n    \t\tstate.initAttributes();\r\n\r\n    \t\tvar geometryAttributes = geometry.attributes;\r\n\r\n    \t\tvar programAttributes = program.getAttributes();\r\n\r\n    \t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n    \t\tfor ( var name in programAttributes ) {\r\n\r\n    \t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n    \t\t\tif ( programAttribute >= 0 ) {\r\n\r\n    \t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n    \t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n    \t\t\t\t\tvar type = _gl.FLOAT;\r\n    \t\t\t\t\tvar array = geometryAttribute.array;\r\n    \t\t\t\t\tvar normalized = geometryAttribute.normalized;\r\n\r\n    \t\t\t\t\tif ( array instanceof Float32Array ) {\r\n\r\n    \t\t\t\t\t\ttype = _gl.FLOAT;\r\n\r\n    \t\t\t\t\t} else if ( array instanceof Float64Array ) {\r\n\r\n    \t\t\t\t\t\tconsole.warn( \"Unsupported data buffer format: Float64Array\" );\r\n\r\n    \t\t\t\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n    \t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\r\n    \t\t\t\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n    \t\t\t\t\t\ttype = _gl.SHORT;\r\n\r\n    \t\t\t\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n    \t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\r\n    \t\t\t\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n    \t\t\t\t\t\ttype = _gl.INT;\r\n\r\n    \t\t\t\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n    \t\t\t\t\t\ttype = _gl.BYTE;\r\n\r\n    \t\t\t\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n    \t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n    \t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n    \t\t\t\t\tif ( geometryAttribute && geometryAttribute.isInterleavedBufferAttribute ) {\r\n\r\n    \t\t\t\t\t\tvar data = geometryAttribute.data;\r\n    \t\t\t\t\t\tvar stride = data.stride;\r\n    \t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n    \t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\r\n\r\n    \t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\r\n\r\n    \t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n    \t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n    \t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tif ( geometryAttribute && geometryAttribute.isInstancedBufferAttribute ) {\r\n\r\n    \t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\r\n\r\n    \t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n    \t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n    \t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n    \t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n    \t\t\t\t\tif ( value !== undefined ) {\r\n\r\n    \t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n    \t\t\t\t\t\t\tcase 2:\r\n    \t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase 3:\r\n    \t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tcase 4:\r\n    \t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n    \t\t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t\tdefault:\r\n    \t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tstate.disableUnusedAttributes();\r\n\r\n    \t}\r\n\r\n    \t// Sorting\r\n\r\n    \tfunction absNumericalSort( a, b ) {\r\n\r\n    \t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\r\n\r\n    \t}\r\n\r\n    \tfunction painterSortStable( a, b ) {\r\n\r\n    \t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n    \t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n    \t\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\r\n\r\n    \t\t\treturn a.material.program.id - b.material.program.id;\r\n\r\n    \t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n    \t\t\treturn a.material.id - b.material.id;\r\n\r\n    \t\t} else if ( a.z !== b.z ) {\r\n\r\n    \t\t\treturn a.z - b.z;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\treturn a.id - b.id;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction reversePainterSortStable( a, b ) {\r\n\r\n    \t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n    \t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n    \t\t} if ( a.z !== b.z ) {\r\n\r\n    \t\t\treturn b.z - a.z;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\treturn a.id - b.id;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// Rendering\r\n\r\n    \tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n    \t\tif ( camera !== undefined && camera.isCamera !== true ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar fog = scene.fog;\r\n\r\n    \t\t// reset caching for this frame\r\n\r\n    \t\t_currentGeometryProgram = '';\r\n    \t\t_currentMaterialId = - 1;\r\n    \t\t_currentCamera = null;\r\n\r\n    \t\t// update scene graph\r\n\r\n    \t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n    \t\t// update camera matrices and frustum\r\n\r\n    \t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n    \t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n    \t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n    \t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n    \t\tlights.length = 0;\r\n\r\n    \t\topaqueObjectsLastIndex = - 1;\r\n    \t\ttransparentObjectsLastIndex = - 1;\r\n\r\n    \t\tsprites.length = 0;\r\n    \t\tlensFlares.length = 0;\r\n\r\n    \t\t_localClippingEnabled = this.localClippingEnabled;\r\n    \t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\r\n\r\n    \t\tprojectObject( scene, camera );\r\n\r\n    \t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n    \t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n    \t\tif ( _this.sortObjects === true ) {\r\n\r\n    \t\t\topaqueObjects.sort( painterSortStable );\r\n    \t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n    \t\t}\r\n\r\n    \t\t//\r\n\r\n    \t\tif ( _clippingEnabled ) _clipping.beginShadows();\r\n\r\n    \t\tsetupShadows( lights );\r\n\r\n    \t\tshadowMap.render( scene, camera );\r\n\r\n    \t\tsetupLights( lights, camera );\r\n\r\n    \t\tif ( _clippingEnabled ) _clipping.endShadows();\r\n\r\n    \t\t//\r\n\r\n    \t\t_infoRender.calls = 0;\r\n    \t\t_infoRender.vertices = 0;\r\n    \t\t_infoRender.faces = 0;\r\n    \t\t_infoRender.points = 0;\r\n\r\n    \t\tif ( renderTarget === undefined ) {\r\n\r\n    \t\t\trenderTarget = null;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.setRenderTarget( renderTarget );\r\n\r\n    \t\t//\r\n\r\n    \t\tvar background = scene.background;\r\n\r\n    \t\tif ( background === null ) {\r\n\r\n    \t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n    \t\t} else if ( background && background.isColor ) {\r\n\r\n    \t\t\tglClearColor( background.r, background.g, background.b, 1 );\r\n    \t\t\tforceClear = true;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.autoClear || forceClear ) {\r\n\r\n    \t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( background && background.isCubeTexture ) {\r\n\r\n    \t\t\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\r\n\r\n    \t\t\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\r\n    \t\t\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\r\n\r\n    \t\t\tbackgroundBoxMesh.material.uniforms[ \"tCube\" ].value = background;\r\n    \t\t\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\r\n\r\n    \t\t\tobjects.update( backgroundBoxMesh );\r\n\r\n    \t\t\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\r\n\r\n    \t\t} else if ( background && background.isTexture ) {\r\n\r\n    \t\t\tbackgroundPlaneMesh.material.map = background;\r\n\r\n    \t\t\tobjects.update( backgroundPlaneMesh );\r\n\r\n    \t\t\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\r\n\r\n    \t\t}\r\n\r\n    \t\t//\r\n\r\n    \t\tif ( scene.overrideMaterial ) {\r\n\r\n    \t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n    \t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\r\n    \t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// opaque pass (front-to-back order)\r\n\r\n    \t\t\tstate.setBlending( NoBlending );\r\n    \t\t\trenderObjects( opaqueObjects, camera, fog );\r\n\r\n    \t\t\t// transparent pass (back-to-front order)\r\n\r\n    \t\t\trenderObjects( transparentObjects, camera, fog );\r\n\r\n    \t\t}\r\n\r\n    \t\t// custom render plugins (post pass)\r\n\r\n    \t\tspritePlugin.render( scene, camera );\r\n    \t\tlensFlarePlugin.render( scene, camera, _currentViewport );\r\n\r\n    \t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n    \t\tif ( renderTarget ) {\r\n\r\n    \t\t\ttextures.updateRenderTargetMipmap( renderTarget );\r\n\r\n    \t\t}\r\n\r\n    \t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n    \t\tstate.setDepthTest( true );\r\n    \t\tstate.setDepthWrite( true );\r\n    \t\tstate.setColorWrite( true );\r\n\r\n    \t\t// _gl.finish();\r\n\r\n    \t};\r\n\r\n    \tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n    \t\tvar array, index;\r\n\r\n    \t\t// allocate the next position in the appropriate array\r\n\r\n    \t\tif ( material.transparent ) {\r\n\r\n    \t\t\tarray = transparentObjects;\r\n    \t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tarray = opaqueObjects;\r\n    \t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n    \t\t}\r\n\r\n    \t\t// recycle existing render item or grow the array\r\n\r\n    \t\tvar renderItem = array[ index ];\r\n\r\n    \t\tif ( renderItem !== undefined ) {\r\n\r\n    \t\t\trenderItem.id = object.id;\r\n    \t\t\trenderItem.object = object;\r\n    \t\t\trenderItem.geometry = geometry;\r\n    \t\t\trenderItem.material = material;\r\n    \t\t\trenderItem.z = _vector3.z;\r\n    \t\t\trenderItem.group = group;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\trenderItem = {\r\n    \t\t\t\tid: object.id,\r\n    \t\t\t\tobject: object,\r\n    \t\t\t\tgeometry: geometry,\r\n    \t\t\t\tmaterial: material,\r\n    \t\t\t\tz: _vector3.z,\r\n    \t\t\t\tgroup: group\r\n    \t\t\t};\r\n\r\n    \t\t\t// assert( index === array.length );\r\n    \t\t\tarray.push( renderItem );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// TODO Duplicated code (Frustum)\r\n\r\n    \tfunction isObjectViewable( object ) {\r\n\r\n    \t\tvar geometry = object.geometry;\r\n\r\n    \t\tif ( geometry.boundingSphere === null )\r\n    \t\t\tgeometry.computeBoundingSphere();\r\n\r\n    \t\t_sphere.copy( geometry.boundingSphere ).\r\n    \t\t\tapplyMatrix4( object.matrixWorld );\r\n\r\n    \t\treturn isSphereViewable( _sphere );\r\n\r\n    \t}\r\n\r\n    \tfunction isSpriteViewable( sprite ) {\r\n\r\n    \t\t_sphere.center.set( 0, 0, 0 );\r\n    \t\t_sphere.radius = 0.7071067811865476;\r\n    \t\t_sphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n    \t\treturn isSphereViewable( _sphere );\r\n\r\n    \t}\r\n\r\n    \tfunction isSphereViewable( sphere ) {\r\n\r\n    \t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\r\n\r\n    \t\tvar numPlanes = _clipping.numPlanes;\r\n\r\n    \t\tif ( numPlanes === 0 ) return true;\r\n\r\n    \t\tvar planes = _this.clippingPlanes,\r\n\r\n    \t\t\tcenter = sphere.center,\r\n    \t\t\tnegRad = - sphere.radius,\r\n    \t\t\ti = 0;\r\n\r\n    \t\tdo {\r\n\r\n    \t\t\t// out when deeper than radius in the negative halfspace\r\n    \t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\r\n\r\n    \t\t} while ( ++ i !== numPlanes );\r\n\r\n    \t\treturn true;\r\n\r\n    \t}\r\n\r\n    \tfunction projectObject( object, camera ) {\r\n\r\n    \t\tif ( object.visible === false ) return;\r\n\r\n    \t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\r\n\r\n    \t\tif ( visible ) {\r\n\r\n    \t\t\tif ( object.isLight ) {\r\n\r\n    \t\t\t\tlights.push( object );\r\n\r\n    \t\t\t} else if ( object.isSprite ) {\r\n\r\n    \t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\r\n\r\n    \t\t\t\t\tsprites.push( object );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( object.isLensFlare ) {\r\n\r\n    \t\t\t\tlensFlares.push( object );\r\n\r\n    \t\t\t} else if ( object.isImmediateRenderObject ) {\r\n\r\n    \t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n    \t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n    \t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\r\n\r\n    \t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\r\n\r\n    \t\t\t\tif ( object.isSkinnedMesh ) {\r\n\r\n    \t\t\t\t\tobject.skeleton.update();\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\r\n\r\n    \t\t\t\t\tvar material = object.material;\r\n\r\n    \t\t\t\t\tif ( material.visible === true ) {\r\n\r\n    \t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n    \t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n    \t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n    \t\t\t\t\t\tif ( material.isMultiMaterial ) {\r\n\r\n    \t\t\t\t\t\t\tvar groups = geometry.groups;\r\n    \t\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n    \t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n    \t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n    \t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n    \t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n    \t\t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar children = object.children;\r\n\r\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n    \t\t\tprojectObject( children[ i ], camera );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\r\n\r\n    \t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar renderItem = renderList[ i ];\r\n\r\n    \t\t\tvar object = renderItem.object;\r\n    \t\t\tvar geometry = renderItem.geometry;\r\n    \t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n    \t\t\tvar group = renderItem.group;\r\n\r\n    \t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n    \t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n    \t\t\tif ( object.isImmediateRenderObject ) {\r\n\r\n    \t\t\t\tsetMaterial( material );\r\n\r\n    \t\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n    \t\t\t\t_currentGeometryProgram = '';\r\n\r\n    \t\t\t\tobject.render( function ( object ) {\r\n\r\n    \t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n    \t\t\t\t} );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tif ( object.onBeforeRender !== null ) object.onBeforeRender();\r\n\r\n    \t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction initMaterial( material, fog, object ) {\r\n\r\n    \t\tvar materialProperties = properties.get( material );\r\n\r\n    \t\tvar parameters = programCache.getParameters(\r\n    \t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, object );\r\n\r\n    \t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n    \t\tvar program = materialProperties.program;\r\n    \t\tvar programChange = true;\r\n\r\n    \t\tif ( program === undefined ) {\r\n\r\n    \t\t\t// new material\r\n    \t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n    \t\t} else if ( program.code !== code ) {\r\n\r\n    \t\t\t// changed glsl or parameters\r\n    \t\t\treleaseMaterialProgramReference( material );\r\n\r\n    \t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n    \t\t\t// same glsl and uniform list\r\n    \t\t\treturn;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// only rebuild uniform list\r\n    \t\t\tprogramChange = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( programChange ) {\r\n\r\n    \t\t\tif ( parameters.shaderID ) {\r\n\r\n    \t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\r\n\r\n    \t\t\t\tmaterialProperties.__webglShader = {\r\n    \t\t\t\t\tname: material.type,\r\n    \t\t\t\t\tuniforms: exports.UniformsUtils.clone( shader.uniforms ),\r\n    \t\t\t\t\tvertexShader: shader.vertexShader,\r\n    \t\t\t\t\tfragmentShader: shader.fragmentShader\r\n    \t\t\t\t};\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tmaterialProperties.__webglShader = {\r\n    \t\t\t\t\tname: material.type,\r\n    \t\t\t\t\tuniforms: material.uniforms,\r\n    \t\t\t\t\tvertexShader: material.vertexShader,\r\n    \t\t\t\t\tfragmentShader: material.fragmentShader\r\n    \t\t\t\t};\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n    \t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n    \t\t\tmaterialProperties.program = program;\r\n    \t\t\tmaterial.program = program;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar attributes = program.getAttributes();\r\n\r\n    \t\tif ( material.morphTargets ) {\r\n\r\n    \t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n    \t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n    \t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n    \t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.morphNormals ) {\r\n\r\n    \t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n    \t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n    \t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n    \t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n    \t\tif ( ! material.isShaderMaterial &&\r\n    \t\t     ! material.isRawShaderMaterial ||\r\n    \t\t       material.clipping === true ) {\r\n\r\n    \t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\r\n    \t\t\tuniforms.clippingPlanes = _clipping.uniform;\r\n\r\n    \t\t}\r\n\r\n    \t\tmaterialProperties.fog = fog;\r\n\r\n    \t\t// store the light setup it was created for\r\n\r\n    \t\tmaterialProperties.lightsHash = _lights.hash;\r\n\r\n    \t\tif ( material.lights ) {\r\n\r\n    \t\t\t// wire up the material to this renderer's lighting state\r\n\r\n    \t\t\tuniforms.ambientLightColor.value = _lights.ambient;\r\n    \t\t\tuniforms.directionalLights.value = _lights.directional;\r\n    \t\t\tuniforms.spotLights.value = _lights.spot;\r\n    \t\t\tuniforms.pointLights.value = _lights.point;\r\n    \t\t\tuniforms.hemisphereLights.value = _lights.hemi;\r\n\r\n    \t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\r\n    \t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\r\n    \t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\r\n    \t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\r\n    \t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\r\n    \t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar progUniforms = materialProperties.program.getUniforms(),\r\n    \t\t\tuniformsList =\r\n    \t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\r\n\r\n    \t\tmaterialProperties.uniformsList = uniformsList;\r\n    \t\tmaterialProperties.dynamicUniforms =\r\n    \t\t\t\tWebGLUniforms.splitDynamic( uniformsList, uniforms );\r\n\r\n    \t}\r\n\r\n    \tfunction setMaterial( material ) {\r\n\r\n    \t\tmaterial.side === DoubleSide\r\n    \t\t\t? state.disable( _gl.CULL_FACE )\r\n    \t\t\t: state.enable( _gl.CULL_FACE );\r\n\r\n    \t\tstate.setFlipSided( material.side === BackSide );\r\n\r\n    \t\tmaterial.transparent === true\r\n    \t\t\t? state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\r\n    \t\t\t: state.setBlending( NoBlending );\r\n\r\n    \t\tstate.setDepthFunc( material.depthFunc );\r\n    \t\tstate.setDepthTest( material.depthTest );\r\n    \t\tstate.setDepthWrite( material.depthWrite );\r\n    \t\tstate.setColorWrite( material.colorWrite );\r\n    \t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n    \t}\r\n\r\n    \tfunction setProgram( camera, fog, material, object ) {\r\n\r\n    \t\t_usedTextureUnits = 0;\r\n\r\n    \t\tvar materialProperties = properties.get( material );\r\n\r\n    \t\tif ( _clippingEnabled ) {\r\n\r\n    \t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\r\n\r\n    \t\t\t\tvar useCache =\r\n    \t\t\t\t\t\tcamera === _currentCamera &&\r\n    \t\t\t\t\t\tmaterial.id === _currentMaterialId;\r\n\r\n    \t\t\t\t// we might want to call this function with some ClippingGroup\r\n    \t\t\t\t// object instead of the material, once it becomes feasible\r\n    \t\t\t\t// (#8465, #8379)\r\n    \t\t\t\t_clipping.setState(\r\n    \t\t\t\t\t\tmaterial.clippingPlanes, material.clipShadows,\r\n    \t\t\t\t\t\tcamera, materialProperties, useCache );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.needsUpdate === false ) {\r\n\r\n    \t\t\tif ( materialProperties.program === undefined ) {\r\n\r\n    \t\t\t\tmaterial.needsUpdate = true;\r\n\r\n    \t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\r\n\r\n    \t\t\t\tmaterial.needsUpdate = true;\r\n\r\n    \t\t\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\r\n\r\n    \t\t\t\tmaterial.needsUpdate = true;\r\n\r\n    \t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\r\n    \t\t\t\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\r\n\r\n    \t\t\t\tmaterial.needsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.needsUpdate ) {\r\n\r\n    \t\t\tinitMaterial( material, fog, object );\r\n    \t\t\tmaterial.needsUpdate = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar refreshProgram = false;\r\n    \t\tvar refreshMaterial = false;\r\n    \t\tvar refreshLights = false;\r\n\r\n    \t\tvar program = materialProperties.program,\r\n    \t\t\tp_uniforms = program.getUniforms(),\r\n    \t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n    \t\tif ( program.id !== _currentProgram ) {\r\n\r\n    \t\t\t_gl.useProgram( program.program );\r\n    \t\t\t_currentProgram = program.id;\r\n\r\n    \t\t\trefreshProgram = true;\r\n    \t\t\trefreshMaterial = true;\r\n    \t\t\trefreshLights = true;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n    \t\t\t_currentMaterialId = material.id;\r\n\r\n    \t\t\trefreshMaterial = true;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n    \t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\r\n\r\n    \t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n    \t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\r\n    \t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n    \t\t\t}\r\n\r\n\r\n    \t\t\tif ( camera !== _currentCamera ) {\r\n\r\n    \t\t\t\t_currentCamera = camera;\r\n\r\n    \t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n    \t\t\t\t// now, in case this material supports lights - or later, when\r\n    \t\t\t\t// the next material that does gets activated:\r\n\r\n    \t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n    \t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// load material specific uniforms\r\n    \t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n    \t\t\tif ( material.isShaderMaterial ||\r\n    \t\t\t     material.isMeshPhongMaterial ||\r\n    \t\t\t     material.isMeshStandardMaterial ||\r\n    \t\t\t     material.envMap ) {\r\n\r\n    \t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n    \t\t\t\tif ( uCamPos !== undefined ) {\r\n\r\n    \t\t\t\t\tuCamPos.setValue( _gl,\r\n    \t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( material.isMeshPhongMaterial ||\r\n    \t\t\t     material.isMeshLambertMaterial ||\r\n    \t\t\t     material.isMeshBasicMaterial ||\r\n    \t\t\t     material.isMeshStandardMaterial ||\r\n    \t\t\t     material.isShaderMaterial ||\r\n    \t\t\t     material.skinning ) {\r\n\r\n    \t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\r\n    \t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\r\n\r\n    \t\t}\r\n\r\n    \t\t// skinning uniforms must be set even if material didn't change\r\n    \t\t// auto-setting of texture unit for bone texture must go before other textures\r\n    \t\t// not sure why, but otherwise weird things happen\r\n\r\n    \t\tif ( material.skinning ) {\r\n\r\n    \t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n    \t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n\r\n    \t\t\tvar skeleton = object.skeleton;\r\n\r\n    \t\t\tif ( skeleton ) {\r\n\r\n    \t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\r\n\r\n    \t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\r\n    \t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\r\n    \t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( refreshMaterial ) {\r\n\r\n    \t\t\tif ( material.lights ) {\r\n\r\n    \t\t\t\t// the current material requires lighting info\r\n\r\n    \t\t\t\t// note: all lighting uniforms are always set correctly\r\n    \t\t\t\t// they simply reference the renderer's state for their\r\n    \t\t\t\t// values\r\n    \t\t\t\t//\r\n    \t\t\t\t// use the current material's .needsUpdate flags to set\r\n    \t\t\t\t// the GL state when required\r\n\r\n    \t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// refresh uniforms common to several materials\r\n\r\n    \t\t\tif ( fog && material.fog ) {\r\n\r\n    \t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( material.isMeshBasicMaterial ||\r\n    \t\t\t     material.isMeshLambertMaterial ||\r\n    \t\t\t     material.isMeshPhongMaterial ||\r\n    \t\t\t     material.isMeshStandardMaterial ||\r\n    \t\t\t     material.isMeshDepthMaterial ) {\r\n\r\n    \t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// refresh single material specific uniforms\r\n\r\n    \t\t\tif ( material.isLineBasicMaterial ) {\r\n\r\n    \t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n    \t\t\t} else if ( material.isLineDashedMaterial ) {\r\n\r\n    \t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n    \t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n    \t\t\t} else if ( material.isPointsMaterial ) {\r\n\r\n    \t\t\t\trefreshUniformsPoints( m_uniforms, material );\r\n\r\n    \t\t\t} else if ( material.isMeshLambertMaterial ) {\r\n\r\n    \t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n    \t\t\t} else if ( material.isMeshPhongMaterial ) {\r\n\r\n    \t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n    \t\t\t} else if ( material.isMeshPhysicalMaterial ) {\r\n\r\n    \t\t\t\trefreshUniformsPhysical( m_uniforms, material );\r\n\r\n    \t\t\t} else if ( material.isMeshStandardMaterial ) {\r\n\r\n    \t\t\t\trefreshUniformsStandard( m_uniforms, material );\r\n\r\n    \t\t\t} else if ( material.isMeshDepthMaterial ) {\r\n\r\n    \t\t\t\tif ( material.displacementMap ) {\r\n\r\n    \t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\r\n    \t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\r\n    \t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( material.isMeshNormalMaterial ) {\r\n\r\n    \t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tWebGLUniforms.upload(\r\n    \t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\r\n\r\n    \t\t}\r\n\r\n\r\n    \t\t// common matrices\r\n\r\n    \t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\r\n    \t\tp_uniforms.set( _gl, object, 'normalMatrix' );\r\n    \t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n\r\n\r\n    \t\t// dynamic uniforms\r\n\r\n    \t\tvar dynUniforms = materialProperties.dynamicUniforms;\r\n\r\n    \t\tif ( dynUniforms !== null ) {\r\n\r\n    \t\t\tWebGLUniforms.evalDynamic( dynUniforms, m_uniforms, object, material, camera );\r\n    \t\t\tWebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn program;\r\n\r\n    \t}\r\n\r\n    \t// Uniforms (refresh uniforms objects)\r\n\r\n    \tfunction refreshUniformsCommon( uniforms, material ) {\r\n\r\n    \t\tuniforms.opacity.value = material.opacity;\r\n\r\n    \t\tuniforms.diffuse.value = material.color;\r\n\r\n    \t\tif ( material.emissive ) {\r\n\r\n    \t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n    \t\t}\r\n\r\n    \t\tuniforms.map.value = material.map;\r\n    \t\tuniforms.specularMap.value = material.specularMap;\r\n    \t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n    \t\tif ( material.aoMap ) {\r\n\r\n    \t\t\tuniforms.aoMap.value = material.aoMap;\r\n    \t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n    \t\t}\r\n\r\n    \t\t// uv repeat and offset setting priorities\r\n    \t\t// 1. color map\r\n    \t\t// 2. specular map\r\n    \t\t// 3. normal map\r\n    \t\t// 4. bump map\r\n    \t\t// 5. alpha map\r\n    \t\t// 6. emissive map\r\n\r\n    \t\tvar uvScaleMap;\r\n\r\n    \t\tif ( material.map ) {\r\n\r\n    \t\t\tuvScaleMap = material.map;\r\n\r\n    \t\t} else if ( material.specularMap ) {\r\n\r\n    \t\t\tuvScaleMap = material.specularMap;\r\n\r\n    \t\t} else if ( material.displacementMap ) {\r\n\r\n    \t\t\tuvScaleMap = material.displacementMap;\r\n\r\n    \t\t} else if ( material.normalMap ) {\r\n\r\n    \t\t\tuvScaleMap = material.normalMap;\r\n\r\n    \t\t} else if ( material.bumpMap ) {\r\n\r\n    \t\t\tuvScaleMap = material.bumpMap;\r\n\r\n    \t\t} else if ( material.roughnessMap ) {\r\n\r\n    \t\t\tuvScaleMap = material.roughnessMap;\r\n\r\n    \t\t} else if ( material.metalnessMap ) {\r\n\r\n    \t\t\tuvScaleMap = material.metalnessMap;\r\n\r\n    \t\t} else if ( material.alphaMap ) {\r\n\r\n    \t\t\tuvScaleMap = material.alphaMap;\r\n\r\n    \t\t} else if ( material.emissiveMap ) {\r\n\r\n    \t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( uvScaleMap !== undefined ) {\r\n\r\n    \t\t\t// backwards compatibility\r\n    \t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n    \t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar offset = uvScaleMap.offset;\r\n    \t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n    \t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n    \t\t}\r\n\r\n    \t\tuniforms.envMap.value = material.envMap;\r\n\r\n    \t\t// don't flip CubeTexture envMaps, flip everything else:\r\n    \t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\r\n    \t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\r\n    \t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\r\n    \t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\r\n\r\n    \t\tuniforms.reflectivity.value = material.reflectivity;\r\n    \t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n    \t}\r\n\r\n    \tfunction refreshUniformsLine( uniforms, material ) {\r\n\r\n    \t\tuniforms.diffuse.value = material.color;\r\n    \t\tuniforms.opacity.value = material.opacity;\r\n\r\n    \t}\r\n\r\n    \tfunction refreshUniformsDash( uniforms, material ) {\r\n\r\n    \t\tuniforms.dashSize.value = material.dashSize;\r\n    \t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n    \t\tuniforms.scale.value = material.scale;\r\n\r\n    \t}\r\n\r\n    \tfunction refreshUniformsPoints( uniforms, material ) {\r\n\r\n    \t\tuniforms.diffuse.value = material.color;\r\n    \t\tuniforms.opacity.value = material.opacity;\r\n    \t\tuniforms.size.value = material.size * _pixelRatio;\r\n    \t\tuniforms.scale.value = _canvas.clientHeight * 0.5;\r\n\r\n    \t\tuniforms.map.value = material.map;\r\n\r\n    \t\tif ( material.map !== null ) {\r\n\r\n    \t\t\tvar offset = material.map.offset;\r\n    \t\t\tvar repeat = material.map.repeat;\r\n\r\n    \t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction refreshUniformsFog( uniforms, fog ) {\r\n\r\n    \t\tuniforms.fogColor.value = fog.color;\r\n\r\n    \t\tif ( fog.isFog ) {\r\n\r\n    \t\t\tuniforms.fogNear.value = fog.near;\r\n    \t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n    \t\t} else if ( fog.isFogExp2 ) {\r\n\r\n    \t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction refreshUniformsLambert( uniforms, material ) {\r\n\r\n    \t\tif ( material.lightMap ) {\r\n\r\n    \t\t\tuniforms.lightMap.value = material.lightMap;\r\n    \t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.emissiveMap ) {\r\n\r\n    \t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction refreshUniformsPhong( uniforms, material ) {\r\n\r\n    \t\tuniforms.specular.value = material.specular;\r\n    \t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n    \t\tif ( material.lightMap ) {\r\n\r\n    \t\t\tuniforms.lightMap.value = material.lightMap;\r\n    \t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.emissiveMap ) {\r\n\r\n    \t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.bumpMap ) {\r\n\r\n    \t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n    \t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.normalMap ) {\r\n\r\n    \t\t\tuniforms.normalMap.value = material.normalMap;\r\n    \t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.displacementMap ) {\r\n\r\n    \t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n    \t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n    \t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction refreshUniformsStandard( uniforms, material ) {\r\n\r\n    \t\tuniforms.roughness.value = material.roughness;\r\n    \t\tuniforms.metalness.value = material.metalness;\r\n\r\n    \t\tif ( material.roughnessMap ) {\r\n\r\n    \t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.metalnessMap ) {\r\n\r\n    \t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.lightMap ) {\r\n\r\n    \t\t\tuniforms.lightMap.value = material.lightMap;\r\n    \t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.emissiveMap ) {\r\n\r\n    \t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.bumpMap ) {\r\n\r\n    \t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n    \t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.normalMap ) {\r\n\r\n    \t\t\tuniforms.normalMap.value = material.normalMap;\r\n    \t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.displacementMap ) {\r\n\r\n    \t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n    \t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n    \t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( material.envMap ) {\r\n\r\n    \t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n    \t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction refreshUniformsPhysical( uniforms, material ) {\r\n\r\n    \t\tuniforms.clearCoat.value = material.clearCoat;\r\n    \t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\r\n\r\n    \t\trefreshUniformsStandard( uniforms, material );\r\n\r\n    \t}\r\n\r\n    \t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n    \tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\r\n\r\n    \t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n    \t\tuniforms.directionalLights.needsUpdate = value;\r\n    \t\tuniforms.pointLights.needsUpdate = value;\r\n    \t\tuniforms.spotLights.needsUpdate = value;\r\n    \t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n    \t}\r\n\r\n    \t// Lighting\r\n\r\n    \tfunction setupShadows( lights ) {\r\n\r\n    \t\tvar lightShadowsLength = 0;\r\n\r\n    \t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar light = lights[ i ];\r\n\r\n    \t\t\tif ( light.castShadow ) {\r\n\r\n    \t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t_lights.shadows.length = lightShadowsLength;\r\n\r\n    \t}\r\n\r\n    \tfunction setupLights( lights, camera ) {\r\n\r\n    \t\tvar l, ll, light,\r\n    \t\tr = 0, g = 0, b = 0,\r\n    \t\tcolor,\r\n    \t\tintensity,\r\n    \t\tdistance,\r\n    \t\tshadowMap,\r\n\r\n    \t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n    \t\tdirectionalLength = 0,\r\n    \t\tpointLength = 0,\r\n    \t\tspotLength = 0,\r\n    \t\themiLength = 0;\r\n\r\n    \t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n    \t\t\tlight = lights[ l ];\r\n\r\n    \t\t\tcolor = light.color;\r\n    \t\t\tintensity = light.intensity;\r\n    \t\t\tdistance = light.distance;\r\n\r\n    \t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n\r\n    \t\t\tif ( light.isAmbientLight ) {\r\n\r\n    \t\t\t\tr += color.r * intensity;\r\n    \t\t\t\tg += color.g * intensity;\r\n    \t\t\t\tb += color.b * intensity;\r\n\r\n    \t\t\t} else if ( light.isDirectionalLight ) {\r\n\r\n    \t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n    \t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n    \t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n    \t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n    \t\t\t\tuniforms.direction.sub( _vector3 );\r\n    \t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n    \t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n    \t\t\t\tif ( light.castShadow ) {\r\n\r\n    \t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n    \t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n    \t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\r\n    \t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n    \t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\r\n\r\n    \t\t\t} else if ( light.isSpotLight ) {\r\n\r\n    \t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n    \t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n    \t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n    \t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n    \t\t\t\tuniforms.distance = distance;\r\n\r\n    \t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n    \t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n    \t\t\t\tuniforms.direction.sub( _vector3 );\r\n    \t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n    \t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n    \t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n    \t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n    \t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n    \t\t\t\tif ( light.castShadow ) {\r\n\r\n    \t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n    \t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n    \t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\r\n    \t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n    \t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\r\n\r\n    \t\t\t} else if ( light.isPointLight ) {\r\n\r\n    \t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n    \t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n    \t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n    \t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n    \t\t\t\tuniforms.distance = light.distance;\r\n    \t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n    \t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n    \t\t\t\tif ( light.castShadow ) {\r\n\r\n    \t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n    \t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n    \t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\r\n\r\n    \t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\r\n\r\n    \t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new Matrix4();\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n    \t\t\t\t// equal to inverse of the light's position\r\n    \t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\r\n    \t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\r\n\r\n    \t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\r\n\r\n    \t\t\t} else if ( light.isHemisphereLight ) {\r\n\r\n    \t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n    \t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n    \t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n    \t\t\t\tuniforms.direction.normalize();\r\n\r\n    \t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n    \t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n    \t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t_lights.ambient[ 0 ] = r;\r\n    \t\t_lights.ambient[ 1 ] = g;\r\n    \t\t_lights.ambient[ 2 ] = b;\r\n\r\n    \t\t_lights.directional.length = directionalLength;\r\n    \t\t_lights.spot.length = spotLength;\r\n    \t\t_lights.point.length = pointLength;\r\n    \t\t_lights.hemi.length = hemiLength;\r\n\r\n    \t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\r\n\r\n    \t}\r\n\r\n    \t// GL state setting\r\n\r\n    \tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n    \t\tstate.setCullFace( cullFace );\r\n    \t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\r\n\r\n    \t};\r\n\r\n    \t// Textures\r\n\r\n    \tfunction allocTextureUnit() {\r\n\r\n    \t\tvar textureUnit = _usedTextureUnits;\r\n\r\n    \t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n    \t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n    \t\t}\r\n\r\n    \t\t_usedTextureUnits += 1;\r\n\r\n    \t\treturn textureUnit;\r\n\r\n    \t}\r\n\r\n    \tthis.allocTextureUnit = allocTextureUnit;\r\n\r\n    \t// this.setTexture2D = setTexture2D;\r\n    \tthis.setTexture2D = ( function() {\r\n\r\n    \t\tvar warned = false;\r\n\r\n    \t\t// backwards compatibility: peel texture.texture\r\n    \t\treturn function setTexture2D( texture, slot ) {\r\n\r\n    \t\t\tif ( texture && texture.isWebGLRenderTarget ) {\r\n\r\n    \t\t\t\tif ( ! warned ) {\r\n\r\n    \t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\r\n    \t\t\t\t\twarned = true;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\ttexture = texture.texture;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\ttextures.setTexture2D( texture, slot );\r\n\r\n    \t\t};\r\n\r\n    \t}() );\r\n\r\n    \tthis.setTexture = ( function() {\r\n\r\n    \t\tvar warned = false;\r\n\r\n    \t\treturn function setTexture( texture, slot ) {\r\n\r\n    \t\t\tif ( ! warned ) {\r\n\r\n    \t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\r\n    \t\t\t\twarned = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\ttextures.setTexture2D( texture, slot );\r\n\r\n    \t\t};\r\n\r\n    \t}() );\r\n\r\n    \tthis.setTextureCube = ( function() {\r\n\r\n    \t\tvar warned = false;\r\n\r\n    \t\treturn function setTextureCube( texture, slot ) {\r\n\r\n    \t\t\t// backwards compatibility: peel texture.texture\r\n    \t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\r\n\r\n    \t\t\t\tif ( ! warned ) {\r\n\r\n    \t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\r\n    \t\t\t\t\twarned = true;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\ttexture = texture.texture;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\r\n    \t\t\t// TODO: unify these code paths\r\n    \t\t\tif ( ( texture && texture.isCubeTexture ) ||\r\n    \t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n    \t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n    \t\t\t\t// this function alone should take care of cube textures\r\n    \t\t\t\ttextures.setTextureCube( texture, slot );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\r\n\r\n    \t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}() );\r\n\r\n    \tthis.getCurrentRenderTarget = function() {\r\n\r\n    \t\treturn _currentRenderTarget;\r\n\r\n    \t};\r\n\r\n    \tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n    \t\t_currentRenderTarget = renderTarget;\r\n\r\n    \t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n    \t\t\ttextures.setupRenderTarget( renderTarget );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\r\n    \t\tvar framebuffer;\r\n\r\n    \t\tif ( renderTarget ) {\r\n\r\n    \t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n    \t\t\tif ( isCube ) {\r\n\r\n    \t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t_currentScissor.copy( renderTarget.scissor );\r\n    \t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n    \t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tframebuffer = null;\r\n\r\n    \t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\r\n    \t\t\t_currentScissorTest = _scissorTest;\r\n\r\n    \t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( _currentFramebuffer !== framebuffer ) {\r\n\r\n    \t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n    \t\t\t_currentFramebuffer = framebuffer;\r\n\r\n    \t\t}\r\n\r\n    \t\tstate.scissor( _currentScissor );\r\n    \t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n    \t\tstate.viewport( _currentViewport );\r\n\r\n    \t\tif ( isCube ) {\r\n\r\n    \t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n    \t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    \tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\r\n    \t\tif ( ( renderTarget && renderTarget.isWebGLRenderTarget ) === false ) {\r\n\r\n    \t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n    \t\tif ( framebuffer ) {\r\n\r\n    \t\t\tvar restore = false;\r\n\r\n    \t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n    \t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n    \t\t\t\trestore = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\ttry {\r\n\r\n    \t\t\t\tvar texture = renderTarget.texture;\r\n    \t\t\t\tvar textureFormat = texture.format;\r\n    \t\t\t\tvar textureType = texture.type;\r\n\r\n    \t\t\t\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n    \t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n    \t\t\t\t\treturn;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\r\n    \t\t\t\t     ! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\r\n    \t\t\t\t     ! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\r\n\r\n    \t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n    \t\t\t\t\treturn;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n    \t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\r\n    \t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n    \t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} finally {\r\n\r\n    \t\t\t\tif ( restore ) {\r\n\r\n    \t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    \t// Map three.js constants to WebGL constants\r\n\r\n    \tfunction paramThreeToGL( p ) {\r\n\r\n    \t\tvar extension;\r\n\r\n    \t\tif ( p === RepeatWrapping ) return _gl.REPEAT;\r\n    \t\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n    \t\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n    \t\tif ( p === NearestFilter ) return _gl.NEAREST;\r\n    \t\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n    \t\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n    \t\tif ( p === LinearFilter ) return _gl.LINEAR;\r\n    \t\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n    \t\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n    \t\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n    \t\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n    \t\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n    \t\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n    \t\tif ( p === ByteType ) return _gl.BYTE;\r\n    \t\tif ( p === ShortType ) return _gl.SHORT;\r\n    \t\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n    \t\tif ( p === IntType ) return _gl.INT;\r\n    \t\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n    \t\tif ( p === FloatType ) return _gl.FLOAT;\r\n\r\n    \t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n    \t\tif ( extension !== null ) {\r\n\r\n    \t\t\tif ( p === HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( p === AlphaFormat ) return _gl.ALPHA;\r\n    \t\tif ( p === RGBFormat ) return _gl.RGB;\r\n    \t\tif ( p === RGBAFormat ) return _gl.RGBA;\r\n    \t\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\r\n    \t\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n    \t\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\r\n    \t\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\r\n\r\n    \t\tif ( p === AddEquation ) return _gl.FUNC_ADD;\r\n    \t\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n    \t\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n    \t\tif ( p === ZeroFactor ) return _gl.ZERO;\r\n    \t\tif ( p === OneFactor ) return _gl.ONE;\r\n    \t\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\r\n    \t\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n    \t\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n    \t\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n    \t\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\r\n    \t\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n    \t\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\r\n    \t\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n    \t\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n    \t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n    \t\tif ( extension !== null ) {\r\n\r\n    \t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n    \t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n    \t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n    \t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n    \t\t}\r\n\r\n    \t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n    \t\tif ( extension !== null ) {\r\n\r\n    \t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n    \t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n    \t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n    \t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n    \t\t}\r\n\r\n    \t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\r\n    \t\tif ( extension !== null ) {\r\n\r\n    \t\t\tif ( p === RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\r\n    \t\t}\r\n\r\n    \t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n    \t\tif ( extension !== null ) {\r\n\r\n    \t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\r\n    \t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\r\n\r\n    \t\t}\r\n\r\n    \t\textension = extensions.get( 'WEBGL_depth_texture' );\r\n\r\n    \t\tif ( extension !== null ){\r\n\r\n    \t\t\tif ( p === UnsignedInt248Type ) return extension.UNSIGNED_INT_24_8_WEBGL;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn 0;\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function FogExp2 ( color, density ) {\r\n\r\n    \tthis.name = '';\r\n\r\n    \tthis.color = new Color( color );\r\n    \tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n    }\r\n\r\n    FogExp2.prototype.isFogExp2 = true;\r\n\r\n    FogExp2.prototype.clone = function () {\r\n\r\n    \treturn new FogExp2( this.color.getHex(), this.density );\r\n\r\n    };\r\n\r\n    FogExp2.prototype.toJSON = function ( meta ) {\r\n\r\n    \treturn {\r\n    \t\ttype: 'FogExp2',\r\n    \t\tcolor: this.color.getHex(),\r\n    \t\tdensity: this.density\r\n    \t};\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Fog ( color, near, far ) {\r\n\r\n    \tthis.name = '';\r\n\r\n    \tthis.color = new Color( color );\r\n\r\n    \tthis.near = ( near !== undefined ) ? near : 1;\r\n    \tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n    }\r\n\r\n    Fog.prototype.isFog = true;\r\n\r\n    Fog.prototype.clone = function () {\r\n\r\n    \treturn new Fog( this.color.getHex(), this.near, this.far );\r\n\r\n    };\r\n\r\n    Fog.prototype.toJSON = function ( meta ) {\r\n\r\n    \treturn {\r\n    \t\ttype: 'Fog',\r\n    \t\tcolor: this.color.getHex(),\r\n    \t\tnear: this.near,\r\n    \t\tfar: this.far\r\n    \t};\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Scene () {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Scene';\r\n\r\n    \tthis.background = null;\r\n    \tthis.fog = null;\r\n    \tthis.overrideMaterial = null;\r\n\r\n    \tthis.autoUpdate = true; // checked by the renderer\r\n\r\n    }\r\n\r\n    Scene.prototype = Object.create( Object3D.prototype );\r\n\r\n    Scene.prototype.constructor = Scene;\r\n\r\n    Scene.prototype.copy = function ( source, recursive ) {\r\n\r\n    \tObject3D.prototype.copy.call( this, source, recursive );\r\n\r\n    \tif ( source.background !== null ) this.background = source.background.clone();\r\n    \tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n    \tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n    \tthis.autoUpdate = source.autoUpdate;\r\n    \tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    Scene.prototype.toJSON = function ( meta ) {\r\n\r\n    \tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n    \tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\r\n    \tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\r\n\r\n    \treturn data;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function LensFlare( texture, size, distance, blending, color ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.lensFlares = [];\r\n\r\n    \tthis.positionScreen = new Vector3();\r\n    \tthis.customUpdateCallback = undefined;\r\n\r\n    \tif ( texture !== undefined ) {\r\n\r\n    \t\tthis.add( texture, size, distance, blending, color );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    LensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: LensFlare,\r\n\r\n    \tisLensFlare: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tObject3D.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.positionScreen.copy( source.positionScreen );\r\n    \t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n    \t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n    \t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tadd: function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n    \t\tif ( size === undefined ) size = - 1;\r\n    \t\tif ( distance === undefined ) distance = 0;\r\n    \t\tif ( opacity === undefined ) opacity = 1;\r\n    \t\tif ( color === undefined ) color = new Color( 0xffffff );\r\n    \t\tif ( blending === undefined ) blending = NormalBlending;\r\n\r\n    \t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n    \t\tthis.lensFlares.push( {\r\n    \t\t\ttexture: texture,\t// THREE.Texture\r\n    \t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n    \t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n    \t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n    \t\t\tscale: 1, \t\t// scale\r\n    \t\t\trotation: 0, \t\t// rotation\r\n    \t\t\topacity: opacity,\t// opacity\r\n    \t\t\tcolor: color,\t\t// color\r\n    \t\t\tblending: blending\t// blending\r\n    \t\t} );\r\n\r\n    \t},\r\n\r\n    \t/*\r\n    \t * Update lens flares update positions on all flares based on the screen position\r\n    \t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n    \t */\r\n\r\n    \tupdateLensFlares: function () {\r\n\r\n    \t\tvar f, fl = this.lensFlares.length;\r\n    \t\tvar flare;\r\n    \t\tvar vecX = - this.positionScreen.x * 2;\r\n    \t\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n    \t\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n    \t\t\tflare = this.lensFlares[ f ];\r\n\r\n    \t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n    \t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n    \t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n    \t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * parameters = {\r\n     *  color: <hex>,\r\n     *  opacity: <float>,\r\n     *  map: new THREE.Texture( <Image> ),\r\n     *\r\n     *\tuvOffset: new THREE.Vector2(),\r\n     *\tuvScale: new THREE.Vector2()\r\n     * }\r\n     */\r\n\r\n    function SpriteMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'SpriteMaterial';\r\n\r\n    \tthis.color = new Color( 0xffffff );\r\n    \tthis.map = null;\r\n\r\n    \tthis.rotation = 0;\r\n\r\n    \tthis.fog = false;\r\n    \tthis.lights = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    SpriteMaterial.prototype = Object.create( Material.prototype );\r\n    SpriteMaterial.prototype.constructor = SpriteMaterial;\r\n\r\n    SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.color.copy( source.color );\r\n    \tthis.map = source.map;\r\n\r\n    \tthis.rotation = source.rotation;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Sprite( material ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Sprite';\r\n\r\n    \tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\r\n\r\n    }\r\n\r\n    Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: Sprite,\r\n\r\n    \tisSprite: true,\r\n\r\n    \traycast: ( function () {\r\n\r\n    \t\tvar matrixPosition = new Vector3();\r\n\r\n    \t\treturn function raycast( raycaster, intersects ) {\r\n\r\n    \t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n    \t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n    \t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\r\n\r\n    \t\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n    \t\t\t\treturn;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tintersects.push( {\r\n\r\n    \t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n    \t\t\t\tpoint: this.position,\r\n    \t\t\t\tface: null,\r\n    \t\t\t\tobject: this\r\n\r\n    \t\t\t} );\r\n\r\n    \t\t};\r\n\r\n    \t}() ),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this.material ).copy( this );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function LOD() {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'LOD';\r\n\r\n    \tObject.defineProperties( this, {\r\n    \t\tlevels: {\r\n    \t\t\tenumerable: true,\r\n    \t\t\tvalue: []\r\n    \t\t}\r\n    \t} );\r\n\r\n    }\r\n\r\n\r\n    LOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: LOD,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tObject3D.prototype.copy.call( this, source, false );\r\n\r\n    \t\tvar levels = source.levels;\r\n\r\n    \t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar level = levels[ i ];\r\n\r\n    \t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \taddLevel: function ( object, distance ) {\r\n\r\n    \t\tif ( distance === undefined ) distance = 0;\r\n\r\n    \t\tdistance = Math.abs( distance );\r\n\r\n    \t\tvar levels = this.levels;\r\n\r\n    \t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n    \t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n    \t\tthis.add( object );\r\n\r\n    \t},\r\n\r\n    \tgetObjectForDistance: function ( distance ) {\r\n\r\n    \t\tvar levels = this.levels;\r\n\r\n    \t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n    \t\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn levels[ i - 1 ].object;\r\n\r\n    \t},\r\n\r\n    \traycast: ( function () {\r\n\r\n    \t\tvar matrixPosition = new Vector3();\r\n\r\n    \t\treturn function raycast( raycaster, intersects ) {\r\n\r\n    \t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n    \t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n    \t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n    \t\t};\r\n\r\n    \t}() ),\r\n\r\n    \tupdate: function () {\r\n\r\n    \t\tvar v1 = new Vector3();\r\n    \t\tvar v2 = new Vector3();\r\n\r\n    \t\treturn function update( camera ) {\r\n\r\n    \t\t\tvar levels = this.levels;\r\n\r\n    \t\t\tif ( levels.length > 1 ) {\r\n\r\n    \t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n    \t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n    \t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n    \t\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n    \t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n    \t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n    \t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n    \t\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}(),\r\n\r\n    \ttoJSON: function ( meta ) {\r\n\r\n    \t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n    \t\tdata.object.levels = [];\r\n\r\n    \t\tvar levels = this.levels;\r\n\r\n    \t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar level = levels[ i ];\r\n\r\n    \t\t\tdata.object.levels.push( {\r\n    \t\t\t\tobject: level.object.uuid,\r\n    \t\t\t\tdistance: level.distance\r\n    \t\t\t} );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn data;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n    \tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n    \tthis.image = { data: data, width: width, height: height };\r\n\r\n    \tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n    \tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n    \tthis.flipY = false;\r\n    \tthis.generateMipmaps  = false;\r\n\r\n    }\r\n\r\n    DataTexture.prototype = Object.create( Texture.prototype );\r\n    DataTexture.prototype.constructor = DataTexture;\r\n\r\n    DataTexture.prototype.isDataTexture = true;\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author michael guerrero / http://realitymeltdown.com\r\n     * @author ikerr / http://verold.com\r\n     */\r\n\r\n    function Skeleton( bones, boneInverses, useVertexTexture ) {\r\n\r\n    \tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n    \tthis.identityMatrix = new Matrix4();\r\n\r\n    \t// copy the bone array\r\n\r\n    \tbones = bones || [];\r\n\r\n    \tthis.bones = bones.slice( 0 );\r\n\r\n    \t// create a bone texture or an array of floats\r\n\r\n    \tif ( this.useVertexTexture ) {\r\n\r\n    \t\t// layout (1 matrix = 4 pixels)\r\n    \t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n    \t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n    \t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n    \t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n    \t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\r\n    \t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n    \t\tsize = exports.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n    \t\tsize = Math.max( size, 4 );\r\n\r\n    \t\tthis.boneTextureWidth = size;\r\n    \t\tthis.boneTextureHeight = size;\r\n\r\n    \t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n    \t\tthis.boneTexture = new DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, RGBAFormat, FloatType );\r\n\r\n    \t} else {\r\n\r\n    \t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n    \t}\r\n\r\n    \t// use the supplied bone inverses or calculate the inverses\r\n\r\n    \tif ( boneInverses === undefined ) {\r\n\r\n    \t\tthis.calculateInverses();\r\n\r\n    \t} else {\r\n\r\n    \t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n    \t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n    \t\t\tthis.boneInverses = [];\r\n\r\n    \t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n    \t\t\t\tthis.boneInverses.push( new Matrix4() );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    Object.assign( Skeleton.prototype, {\r\n\r\n    \tcalculateInverses: function () {\r\n\r\n    \t\tthis.boneInverses = [];\r\n\r\n    \t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n    \t\t\tvar inverse = new Matrix4();\r\n\r\n    \t\t\tif ( this.bones[ b ] ) {\r\n\r\n    \t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.boneInverses.push( inverse );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tpose: function () {\r\n\r\n    \t\tvar bone;\r\n\r\n    \t\t// recover the bind-time world matrices\r\n\r\n    \t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n    \t\t\tbone = this.bones[ b ];\r\n\r\n    \t\t\tif ( bone ) {\r\n\r\n    \t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// compute the local matrices, positions, rotations and scales\r\n\r\n    \t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n    \t\t\tbone = this.bones[ b ];\r\n\r\n    \t\t\tif ( bone ) {\r\n\r\n    \t\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\r\n\r\n    \t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n    \t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tupdate: ( function () {\r\n\r\n    \t\tvar offsetMatrix = new Matrix4();\r\n\r\n    \t\treturn function update() {\r\n\r\n    \t\t\t// flatten bone matrices to array\r\n\r\n    \t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n    \t\t\t\t// compute the offset between the current and the original transform\r\n\r\n    \t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n    \t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n    \t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( this.useVertexTexture ) {\r\n\r\n    \t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t} )(),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author ikerr / http://verold.com\r\n     */\r\n\r\n    function Bone( skin ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Bone';\r\n\r\n    \tthis.skin = skin;\r\n\r\n    }\r\n\r\n    Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: Bone,\r\n\r\n    \tisBone: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tObject3D.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.skin = source.skin;\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mikael emtinger / http://gomo.se/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author ikerr / http://verold.com\r\n     */\r\n\r\n    function SkinnedMesh( geometry, material, useVertexTexture ) {\r\n\r\n    \tMesh.call( this, geometry, material );\r\n\r\n    \tthis.type = 'SkinnedMesh';\r\n\r\n    \tthis.bindMode = \"attached\";\r\n    \tthis.bindMatrix = new Matrix4();\r\n    \tthis.bindMatrixInverse = new Matrix4();\r\n\r\n    \t// init bones\r\n\r\n    \t// TODO: remove bone creation as there is no reason (other than\r\n    \t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n    \tvar bones = [];\r\n\r\n    \tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n    \t\tvar bone, gbone;\r\n\r\n    \t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n    \t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n    \t\t\tbone = new Bone( this );\r\n    \t\t\tbones.push( bone );\r\n\r\n    \t\t\tbone.name = gbone.name;\r\n    \t\t\tbone.position.fromArray( gbone.pos );\r\n    \t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n    \t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n    \t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n    \t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\r\n    \t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\r\n\r\n    \t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tthis.add( bones[ b ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tthis.normalizeSkinWeights();\r\n\r\n    \tthis.updateMatrixWorld( true );\r\n    \tthis.bind( new Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n    }\r\n\r\n\r\n    SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\r\n\r\n    \tconstructor: SkinnedMesh,\r\n\r\n    \tisSkinnedMesh: true,\r\n\r\n    \tbind: function( skeleton, bindMatrix ) {\r\n\r\n    \t\tthis.skeleton = skeleton;\r\n\r\n    \t\tif ( bindMatrix === undefined ) {\r\n\r\n    \t\t\tthis.updateMatrixWorld( true );\r\n\r\n    \t\t\tthis.skeleton.calculateInverses();\r\n\r\n    \t\t\tbindMatrix = this.matrixWorld;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.bindMatrix.copy( bindMatrix );\r\n    \t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n    \t},\r\n\r\n    \tpose: function () {\r\n\r\n    \t\tthis.skeleton.pose();\r\n\r\n    \t},\r\n\r\n    \tnormalizeSkinWeights: function () {\r\n\r\n    \t\tif ( (this.geometry && this.geometry.isGeometry) ) {\r\n\r\n    \t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\r\n\r\n    \t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n    \t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n    \t\t\t\tif ( scale !== Infinity ) {\r\n\r\n    \t\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( (this.geometry && this.geometry.isBufferGeometry) ) {\r\n\r\n    \t\t\tvar vec = new Vector4();\r\n\r\n    \t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n    \t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\r\n\r\n    \t\t\t\tvec.x = skinWeight.getX( i );\r\n    \t\t\t\tvec.y = skinWeight.getY( i );\r\n    \t\t\t\tvec.z = skinWeight.getZ( i );\r\n    \t\t\t\tvec.w = skinWeight.getW( i );\r\n\r\n    \t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\r\n\r\n    \t\t\t\tif ( scale !== Infinity ) {\r\n\r\n    \t\t\t\t\tvec.multiplyScalar( scale );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tupdateMatrixWorld: function( force ) {\r\n\r\n    \t\tMesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n    \t\tif ( this.bindMode === \"attached\" ) {\r\n\r\n    \t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n    \t\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n    \t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tclone: function() {\r\n\r\n    \t\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * parameters = {\r\n     *  color: <hex>,\r\n     *  opacity: <float>,\r\n     *\r\n     *  linewidth: <float>,\r\n     *  linecap: \"round\",\r\n     *  linejoin: \"round\"\r\n     * }\r\n     */\r\n\r\n    function LineBasicMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'LineBasicMaterial';\r\n\r\n    \tthis.color = new Color( 0xffffff );\r\n\r\n    \tthis.linewidth = 1;\r\n    \tthis.linecap = 'round';\r\n    \tthis.linejoin = 'round';\r\n\r\n    \tthis.lights = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    LineBasicMaterial.prototype = Object.create( Material.prototype );\r\n    LineBasicMaterial.prototype.constructor = LineBasicMaterial;\r\n\r\n    LineBasicMaterial.prototype.isLineBasicMaterial = true;\r\n\r\n    LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.color.copy( source.color );\r\n\r\n    \tthis.linewidth = source.linewidth;\r\n    \tthis.linecap = source.linecap;\r\n    \tthis.linejoin = source.linejoin;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Line( geometry, material, mode ) {\r\n\r\n    \tif ( mode === 1 ) {\r\n\r\n    \t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n    \t\treturn new LineSegments( geometry, material );\r\n\r\n    \t}\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Line';\r\n\r\n    \tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n    \tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n    }\r\n\r\n    Line.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: Line,\r\n\r\n    \tisLine: true,\r\n\r\n    \traycast: ( function () {\r\n\r\n    \t\tvar inverseMatrix = new Matrix4();\r\n    \t\tvar ray = new Ray();\r\n    \t\tvar sphere = new Sphere();\r\n\r\n    \t\treturn function raycast( raycaster, intersects ) {\r\n\r\n    \t\t\tvar precision = raycaster.linePrecision;\r\n    \t\t\tvar precisionSq = precision * precision;\r\n\r\n    \t\t\tvar geometry = this.geometry;\r\n    \t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n    \t\t\t// Checking boundingSphere distance to ray\r\n\r\n    \t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n    \t\t\tsphere.copy( geometry.boundingSphere );\r\n    \t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n    \t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n    \t\t\t//\r\n\r\n    \t\t\tinverseMatrix.getInverse( matrixWorld );\r\n    \t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n    \t\t\tvar vStart = new Vector3();\r\n    \t\t\tvar vEnd = new Vector3();\r\n    \t\t\tvar interSegment = new Vector3();\r\n    \t\t\tvar interRay = new Vector3();\r\n    \t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\r\n\r\n    \t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\r\n\r\n    \t\t\t\tvar index = geometry.index;\r\n    \t\t\t\tvar attributes = geometry.attributes;\r\n    \t\t\t\tvar positions = attributes.position.array;\r\n\r\n    \t\t\t\tif ( index !== null ) {\r\n\r\n    \t\t\t\t\tvar indices = index.array;\r\n\r\n    \t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n    \t\t\t\t\t\tvar a = indices[ i ];\r\n    \t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n    \t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n    \t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n    \t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n    \t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n    \t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n    \t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n    \t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n    \t\t\t\t\t\tintersects.push( {\r\n\r\n    \t\t\t\t\t\t\tdistance: distance,\r\n    \t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n    \t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n    \t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n    \t\t\t\t\t\t\tindex: i,\r\n    \t\t\t\t\t\t\tface: null,\r\n    \t\t\t\t\t\t\tfaceIndex: null,\r\n    \t\t\t\t\t\t\tobject: this\r\n\r\n    \t\t\t\t\t\t} );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n    \t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n    \t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n    \t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n    \t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n    \t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n    \t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n    \t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n    \t\t\t\t\t\tintersects.push( {\r\n\r\n    \t\t\t\t\t\t\tdistance: distance,\r\n    \t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n    \t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n    \t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n    \t\t\t\t\t\t\tindex: i,\r\n    \t\t\t\t\t\t\tface: null,\r\n    \t\t\t\t\t\t\tfaceIndex: null,\r\n    \t\t\t\t\t\t\tobject: this\r\n\r\n    \t\t\t\t\t\t} );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( (geometry && geometry.isGeometry) ) {\r\n\r\n    \t\t\t\tvar vertices = geometry.vertices;\r\n    \t\t\t\tvar nbVertices = vertices.length;\r\n\r\n    \t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n    \t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n    \t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n    \t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n    \t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n    \t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n    \t\t\t\t\tintersects.push( {\r\n\r\n    \t\t\t\t\t\tdistance: distance,\r\n    \t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n    \t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n    \t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n    \t\t\t\t\t\tindex: i,\r\n    \t\t\t\t\t\tface: null,\r\n    \t\t\t\t\t\tfaceIndex: null,\r\n    \t\t\t\t\t\tobject: this\r\n\r\n    \t\t\t\t\t} );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}() ),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function LineSegments( geometry, material ) {\r\n\r\n    \tLine.call( this, geometry, material );\r\n\r\n    \tthis.type = 'LineSegments';\r\n\r\n    }\r\n\r\n    LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\r\n\r\n    \tconstructor: LineSegments,\r\n\r\n    \tisLineSegments: true\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * parameters = {\r\n     *  color: <hex>,\r\n     *  opacity: <float>,\r\n     *  map: new THREE.Texture( <Image> ),\r\n     *\r\n     *  size: <float>,\r\n     *  sizeAttenuation: <bool>\r\n     * }\r\n     */\r\n\r\n    function PointsMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'PointsMaterial';\r\n\r\n    \tthis.color = new Color( 0xffffff );\r\n\r\n    \tthis.map = null;\r\n\r\n    \tthis.size = 1;\r\n    \tthis.sizeAttenuation = true;\r\n\r\n    \tthis.lights = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    PointsMaterial.prototype = Object.create( Material.prototype );\r\n    PointsMaterial.prototype.constructor = PointsMaterial;\r\n\r\n    PointsMaterial.prototype.isPointsMaterial = true;\r\n\r\n    PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.color.copy( source.color );\r\n\r\n    \tthis.map = source.map;\r\n\r\n    \tthis.size = source.size;\r\n    \tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Points( geometry, material ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Points';\r\n\r\n    \tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\r\n    \tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n    }\r\n\r\n    Points.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: Points,\r\n\r\n    \tisPoints: true,\r\n\r\n    \traycast: ( function () {\r\n\r\n    \t\tvar inverseMatrix = new Matrix4();\r\n    \t\tvar ray = new Ray();\r\n    \t\tvar sphere = new Sphere();\r\n\r\n    \t\treturn function raycast( raycaster, intersects ) {\r\n\r\n    \t\t\tvar object = this;\r\n    \t\t\tvar geometry = this.geometry;\r\n    \t\t\tvar matrixWorld = this.matrixWorld;\r\n    \t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n    \t\t\t// Checking boundingSphere distance to ray\r\n\r\n    \t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n    \t\t\tsphere.copy( geometry.boundingSphere );\r\n    \t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n    \t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n    \t\t\t//\r\n\r\n    \t\t\tinverseMatrix.getInverse( matrixWorld );\r\n    \t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n    \t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n    \t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n    \t\t\tvar position = new Vector3();\r\n\r\n    \t\t\tfunction testPoint( point, index ) {\r\n\r\n    \t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n    \t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n    \t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n    \t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n    \t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n    \t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n    \t\t\t\t\tintersects.push( {\r\n\r\n    \t\t\t\t\t\tdistance: distance,\r\n    \t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n    \t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n    \t\t\t\t\t\tindex: index,\r\n    \t\t\t\t\t\tface: null,\r\n    \t\t\t\t\t\tobject: object\r\n\r\n    \t\t\t\t\t} );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\r\n\r\n    \t\t\t\tvar index = geometry.index;\r\n    \t\t\t\tvar attributes = geometry.attributes;\r\n    \t\t\t\tvar positions = attributes.position.array;\r\n\r\n    \t\t\t\tif ( index !== null ) {\r\n\r\n    \t\t\t\t\tvar indices = index.array;\r\n\r\n    \t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\t\t\tvar a = indices[ i ];\r\n\r\n    \t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n    \t\t\t\t\t\ttestPoint( position, a );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n    \t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n    \t\t\t\t\t\ttestPoint( position, i );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tvar vertices = geometry.vertices;\r\n\r\n    \t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t}() ),\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Group() {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Group';\r\n\r\n    }\r\n\r\n    Group.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: Group\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n    \tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n    \tthis.generateMipmaps = false;\r\n\r\n    \tvar scope = this;\r\n\r\n    \tfunction update() {\r\n\r\n    \t\trequestAnimationFrame( update );\r\n\r\n    \t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n\r\n    \t\t\tscope.needsUpdate = true;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tupdate();\r\n\r\n    }\r\n\r\n    VideoTexture.prototype = Object.create( Texture.prototype );\r\n    VideoTexture.prototype.constructor = VideoTexture;\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n    \tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n    \tthis.image = { width: width, height: height };\r\n    \tthis.mipmaps = mipmaps;\r\n\r\n    \t// no flipping for cube textures\r\n    \t// (also flipping doesn't work for compressed textures )\r\n\r\n    \tthis.flipY = false;\r\n\r\n    \t// can't generate mipmaps for compressed textures\r\n    \t// mips must be embedded in DDS files\r\n\r\n    \tthis.generateMipmaps = false;\r\n\r\n    }\r\n\r\n    CompressedTexture.prototype = Object.create( Texture.prototype );\r\n    CompressedTexture.prototype.constructor = CompressedTexture;\r\n\r\n    CompressedTexture.prototype.isCompressedTexture = true;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n    \tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n    \tthis.needsUpdate = true;\r\n\r\n    }\r\n\r\n    CanvasTexture.prototype = Object.create( Texture.prototype );\r\n    CanvasTexture.prototype.constructor = CanvasTexture;\r\n\r\n    /**\r\n     * @author Matt DesLauriers / @mattdesl\r\n     * @author atix / arthursilber.de\r\n     */\r\n\r\n    function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\r\n\r\n    \tformat = format !== undefined ? format : DepthFormat;\r\n\r\n    \tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\r\n\r\n    \t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\r\n\r\n    \t}\r\n\r\n    \tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n    \tthis.image = { width: width, height: height };\r\n\r\n    \tthis.type = type !== undefined ? type : UnsignedShortType;\r\n\r\n    \tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\r\n    \tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\r\n\r\n    \tthis.flipY = false;\r\n    \tthis.generateMipmaps\t= false;\r\n\r\n    }\r\n\r\n    DepthTexture.prototype = Object.create( Texture.prototype );\r\n    DepthTexture.prototype.constructor = DepthTexture;\r\n    DepthTexture.prototype.isDepthTexture = true;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function WireframeGeometry( geometry ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tvar edge = [ 0, 0 ], hash = {};\r\n\r\n    \tfunction sortFunction( a, b ) {\r\n\r\n    \t\treturn a - b;\r\n\r\n    \t}\r\n\r\n    \tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n    \tif ( (geometry && geometry.isGeometry) ) {\r\n\r\n    \t\tvar vertices = geometry.vertices;\r\n    \t\tvar faces = geometry.faces;\r\n    \t\tvar numEdges = 0;\r\n\r\n    \t\t// allocate maximal size\r\n    \t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n    \t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar face = faces[ i ];\r\n\r\n    \t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n    \t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n    \t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n    \t\t\t\tedge.sort( sortFunction );\r\n\r\n    \t\t\t\tvar key = edge.toString();\r\n\r\n    \t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n    \t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n    \t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n    \t\t\t\t\thash[ key ] = true;\r\n    \t\t\t\t\tnumEdges ++;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n    \t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n    \t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n    \t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n    \t\t\t\tvar index = 6 * i + 3 * j;\r\n    \t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n    \t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n    \t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\r\n\r\n    \t} else if ( (geometry && geometry.isBufferGeometry) ) {\r\n\r\n    \t\tif ( geometry.index !== null ) {\r\n\r\n    \t\t\t// Indexed BufferGeometry\r\n\r\n    \t\t\tvar indices = geometry.index.array;\r\n    \t\t\tvar vertices = geometry.attributes.position;\r\n    \t\t\tvar groups = geometry.groups;\r\n    \t\t\tvar numEdges = 0;\r\n\r\n    \t\t\tif ( groups.length === 0 ) {\r\n\r\n    \t\t\t\tgeometry.addGroup( 0, indices.length );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// allocate maximal size\r\n    \t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n    \t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n    \t\t\t\tvar group = groups[ o ];\r\n\r\n    \t\t\t\tvar start = group.start;\r\n    \t\t\t\tvar count = group.count;\r\n\r\n    \t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n    \t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n    \t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n    \t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n    \t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n    \t\t\t\t\t\tvar key = edge.toString();\r\n\r\n    \t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n    \t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n    \t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n    \t\t\t\t\t\t\thash[ key ] = true;\r\n    \t\t\t\t\t\t\tnumEdges ++;\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n    \t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n    \t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n    \t\t\t\t\tvar index = 6 * i + 3 * j;\r\n    \t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n    \t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n    \t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n    \t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// non-indexed BufferGeometry\r\n\r\n    \t\t\tvar vertices = geometry.attributes.position.array;\r\n    \t\t\tvar numEdges = vertices.length / 3;\r\n    \t\t\tvar numTris = numEdges / 3;\r\n\r\n    \t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n    \t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n    \t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n    \t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n    \t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n    \t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n    \t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n    \t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n    \t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n    \t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n    \t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n    \t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    WireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    WireframeGeometry.prototype.constructor = WireframeGeometry;\r\n\r\n    /**\r\n     * @author zz85 / https://github.com/zz85\r\n     * Parametric Surfaces Geometry\r\n     * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n     *\r\n     * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n     *\r\n     */\r\n\r\n    function ParametricGeometry( func, slices, stacks ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'ParametricGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tfunc: func,\r\n    \t\tslices: slices,\r\n    \t\tstacks: stacks\r\n    \t};\r\n\r\n    \tvar verts = this.vertices;\r\n    \tvar faces = this.faces;\r\n    \tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n    \tvar i, j, p;\r\n    \tvar u, v;\r\n\r\n    \tvar sliceCount = slices + 1;\r\n\r\n    \tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n    \t\tv = i / stacks;\r\n\r\n    \t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n    \t\t\tu = j / slices;\r\n\r\n    \t\t\tp = func( u, v );\r\n    \t\t\tverts.push( p );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tvar a, b, c, d;\r\n    \tvar uva, uvb, uvc, uvd;\r\n\r\n    \tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n    \t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n    \t\t\ta = i * sliceCount + j;\r\n    \t\t\tb = i * sliceCount + j + 1;\r\n    \t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n    \t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n    \t\t\tuva = new Vector2( j / slices, i / stacks );\r\n    \t\t\tuvb = new Vector2( ( j + 1 ) / slices, i / stacks );\r\n    \t\t\tuvc = new Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n    \t\t\tuvd = new Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n    \t\t\tfaces.push( new Face3( a, b, d ) );\r\n    \t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n    \t\t\tfaces.push( new Face3( b, c, d ) );\r\n    \t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// console.log(this);\r\n\r\n    \t// magic bullet\r\n    \t// var diff = this.mergeVertices();\r\n    \t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n    \tthis.computeFaceNormals();\r\n    \tthis.computeVertexNormals();\r\n\r\n    }\r\n\r\n    ParametricGeometry.prototype = Object.create( Geometry.prototype );\r\n    ParametricGeometry.prototype.constructor = ParametricGeometry;\r\n\r\n    /**\r\n     * @author clockworkgeek / https://github.com/clockworkgeek\r\n     * @author timothypratley / https://github.com/timothypratley\r\n     * @author WestLangley / http://github.com/WestLangley\r\n    */\r\n\r\n    function PolyhedronGeometry( vertices, indices, radius, detail ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'PolyhedronGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tvertices: vertices,\r\n    \t\tindices: indices,\r\n    \t\tradius: radius,\r\n    \t\tdetail: detail\r\n    \t};\r\n\r\n    \tradius = radius || 1;\r\n    \tdetail = detail || 0;\r\n\r\n    \tvar that = this;\r\n\r\n    \tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n    \t\tprepare( new Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n    \t}\r\n\r\n    \tvar p = this.vertices;\r\n\r\n    \tvar faces = [];\r\n\r\n    \tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n    \t\tvar v1 = p[ indices[ i ] ];\r\n    \t\tvar v2 = p[ indices[ i + 1 ] ];\r\n    \t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n    \t\tfaces[ j ] = new Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\r\n    \t}\r\n\r\n    \tvar centroid = new Vector3();\r\n\r\n    \tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n    \t\tsubdivide( faces[ i ], detail );\r\n\r\n    \t}\r\n\r\n\r\n    \t// Handle case when face straddles the seam\r\n\r\n    \tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n    \t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n    \t\tvar x0 = uvs[ 0 ].x;\r\n    \t\tvar x1 = uvs[ 1 ].x;\r\n    \t\tvar x2 = uvs[ 2 ].x;\r\n\r\n    \t\tvar max = Math.max( x0, x1, x2 );\r\n    \t\tvar min = Math.min( x0, x1, x2 );\r\n\r\n    \t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n    \t\t\t// 0.9 is somewhat arbitrary\r\n\r\n    \t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n    \t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n    \t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n\r\n    \t// Apply radius\r\n\r\n    \tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n    \t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n    \t}\r\n\r\n\r\n    \t// Merge vertices\r\n\r\n    \tthis.mergeVertices();\r\n\r\n    \tthis.computeFaceNormals();\r\n\r\n    \tthis.boundingSphere = new Sphere( new Vector3(), radius );\r\n\r\n\r\n    \t// Project vector onto sphere's surface\r\n\r\n    \tfunction prepare( vector ) {\r\n\r\n    \t\tvar vertex = vector.normalize().clone();\r\n    \t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n    \t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n    \t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n    \t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n    \t\tvertex.uv = new Vector2( u, 1 - v );\r\n\r\n    \t\treturn vertex;\r\n\r\n    \t}\r\n\r\n\r\n    \t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n    \tfunction make( v1, v2, v3 ) {\r\n\r\n    \t\tvar face = new Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n    \t\tthat.faces.push( face );\r\n\r\n    \t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n    \t\tvar azi = azimuth( centroid );\r\n\r\n    \t\tthat.faceVertexUvs[ 0 ].push( [\r\n    \t\t\tcorrectUV( v1.uv, v1, azi ),\r\n    \t\t\tcorrectUV( v2.uv, v2, azi ),\r\n    \t\t\tcorrectUV( v3.uv, v3, azi )\r\n    \t\t] );\r\n\r\n    \t}\r\n\r\n\r\n    \t// Analytically subdivide a face to the required detail level.\r\n\r\n    \tfunction subdivide( face, detail ) {\r\n\r\n    \t\tvar cols = Math.pow( 2, detail );\r\n    \t\tvar a = prepare( that.vertices[ face.a ] );\r\n    \t\tvar b = prepare( that.vertices[ face.b ] );\r\n    \t\tvar c = prepare( that.vertices[ face.c ] );\r\n    \t\tvar v = [];\r\n\r\n    \t\t// Construct all of the vertices for this subdivision.\r\n\r\n    \t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n    \t\t\tv[ i ] = [];\r\n\r\n    \t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n    \t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n    \t\t\tvar rows = cols - i;\r\n\r\n    \t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n    \t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n    \t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// Construct all of the faces.\r\n\r\n    \t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n    \t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n    \t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n    \t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n    \t\t\t\t\tmake(\r\n    \t\t\t\t\t\tv[ i ][ k + 1 ],\r\n    \t\t\t\t\t\tv[ i + 1 ][ k ],\r\n    \t\t\t\t\t\tv[ i ][ k ]\r\n    \t\t\t\t\t);\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tmake(\r\n    \t\t\t\t\t\tv[ i ][ k + 1 ],\r\n    \t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n    \t\t\t\t\t\tv[ i + 1 ][ k ]\r\n    \t\t\t\t\t);\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n\r\n    \t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n    \tfunction azimuth( vector ) {\r\n\r\n    \t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n    \t}\r\n\r\n\r\n    \t// Angle above the XZ plane.\r\n\r\n    \tfunction inclination( vector ) {\r\n\r\n    \t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n    \t}\r\n\r\n\r\n    \t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n    \tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n    \t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new Vector2( uv.x - 1, uv.y );\r\n    \t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n    \t\treturn uv.clone();\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    PolyhedronGeometry.prototype = Object.create( Geometry.prototype );\r\n    PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\r\n\r\n    /**\r\n     * @author timothypratley / https://github.com/timothypratley\r\n     */\r\n\r\n    function TetrahedronGeometry( radius, detail ) {\r\n\r\n    \tvar vertices = [\r\n    \t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n    \t];\r\n\r\n    \tvar indices = [\r\n    \t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n    \t];\r\n\r\n    \tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n    \tthis.type = 'TetrahedronGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\tdetail: detail\r\n    \t};\r\n\r\n    }\r\n\r\n    TetrahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\r\n    TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\r\n\r\n    /**\r\n     * @author timothypratley / https://github.com/timothypratley\r\n     */\r\n\r\n    function OctahedronGeometry( radius, detail ) {\r\n\r\n    \tvar vertices = [\r\n    \t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n    \t];\r\n\r\n    \tvar indices = [\r\n    \t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n    \t];\r\n\r\n    \tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n    \tthis.type = 'OctahedronGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\tdetail: detail\r\n    \t};\r\n\r\n    }\r\n\r\n    OctahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\r\n    OctahedronGeometry.prototype.constructor = OctahedronGeometry;\r\n\r\n    /**\r\n     * @author timothypratley / https://github.com/timothypratley\r\n     */\r\n\r\n    function IcosahedronGeometry( radius, detail ) {\r\n\r\n    \tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n    \tvar vertices = [\r\n    \t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n    \t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n    \t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n    \t];\r\n\r\n    \tvar indices = [\r\n    \t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n    \t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n    \t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n    \t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n    \t];\r\n\r\n    \tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n    \tthis.type = 'IcosahedronGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\tdetail: detail\r\n    \t};\r\n\r\n    }\r\n\r\n    IcosahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\r\n    IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\r\n\r\n    /**\r\n     * @author Abe Pazos / https://hamoid.com\r\n     */\r\n\r\n    function DodecahedronGeometry( radius, detail ) {\r\n\r\n    \tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n    \tvar r = 1 / t;\r\n\r\n    \tvar vertices = [\r\n\r\n    \t\t// (±1, ±1, ±1)\r\n    \t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n    \t\t- 1,  1, - 1,    - 1,  1,  1,\r\n    \t\t 1, - 1, - 1,     1, - 1,  1,\r\n    \t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n    \t\t// (0, ±1/φ, ±φ)\r\n    \t\t 0, - r, - t,     0, - r,  t,\r\n    \t\t 0,  r, - t,     0,  r,  t,\r\n\r\n    \t\t// (±1/φ, ±φ, 0)\r\n    \t\t- r, - t,  0,    - r,  t,  0,\r\n    \t\t r, - t,  0,     r,  t,  0,\r\n\r\n    \t\t// (±φ, 0, ±1/φ)\r\n    \t\t- t,  0, - r,     t,  0, - r,\r\n    \t\t- t,  0,  r,     t,  0,  r\r\n    \t];\r\n\r\n    \tvar indices = [\r\n    \t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n    \t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n    \t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n    \t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n    \t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n    \t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n    \t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n    \t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n    \t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n    \t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n    \t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n    \t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n    \t];\r\n\r\n    \tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n    \tthis.type = 'DodecahedronGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\tdetail: detail\r\n    \t};\r\n\r\n    }\r\n\r\n    DodecahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\r\n    DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\r\n\r\n    /**\r\n     * @author WestLangley / https://github.com/WestLangley\r\n     * @author zz85 / https://github.com/zz85\r\n     * @author miningold / https://github.com/miningold\r\n     * @author jonobr1 / https://github.com/jonobr1\r\n     *\r\n     * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n     *\r\n     * Creates a tube which extrudes along a 3d spline\r\n     *\r\n     * Uses parallel transport frames as described in\r\n     * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n     */\r\n\r\n    function TubeGeometry( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'TubeGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tpath: path,\r\n    \t\tsegments: segments,\r\n    \t\tradius: radius,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\tclosed: closed,\r\n    \t\ttaper: taper\r\n    \t};\r\n\r\n    \tsegments = segments || 64;\r\n    \tradius = radius || 1;\r\n    \tradialSegments = radialSegments || 8;\r\n    \tclosed = closed || false;\r\n    \ttaper = taper || TubeGeometry.NoTaper;\r\n\r\n    \tvar grid = [];\r\n\r\n    \tvar scope = this,\r\n\r\n    \t\ttangent,\r\n    \t\tnormal,\r\n    \t\tbinormal,\r\n\r\n    \t\tnumpoints = segments + 1,\r\n\r\n    \t\tu, v, r,\r\n\r\n    \t\tcx, cy,\r\n    \t\tpos, pos2 = new Vector3(),\r\n    \t\ti, j,\r\n    \t\tip, jp,\r\n    \t\ta, b, c, d,\r\n    \t\tuva, uvb, uvc, uvd;\r\n\r\n    \tvar frames = new TubeGeometry.FrenetFrames( path, segments, closed ),\r\n    \t\ttangents = frames.tangents,\r\n    \t\tnormals = frames.normals,\r\n    \t\tbinormals = frames.binormals;\r\n\r\n    \t// proxy internals\r\n    \tthis.tangents = tangents;\r\n    \tthis.normals = normals;\r\n    \tthis.binormals = binormals;\r\n\r\n    \tfunction vert( x, y, z ) {\r\n\r\n    \t\treturn scope.vertices.push( new Vector3( x, y, z ) ) - 1;\r\n\r\n    \t}\r\n\r\n    \t// construct the grid\r\n\r\n    \tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n    \t\tgrid[ i ] = [];\r\n\r\n    \t\tu = i / ( numpoints - 1 );\r\n\r\n    \t\tpos = path.getPointAt( u );\r\n\r\n    \t\ttangent = tangents[ i ];\r\n    \t\tnormal = normals[ i ];\r\n    \t\tbinormal = binormals[ i ];\r\n\r\n    \t\tr = radius * taper( u );\r\n\r\n    \t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n    \t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n    \t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n    \t\t\tcy = r * Math.sin( v );\r\n\r\n    \t\t\tpos2.copy( pos );\r\n    \t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n    \t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n    \t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n    \t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n\r\n    \t// construct the mesh\r\n\r\n    \tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n    \t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n    \t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n    \t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n    \t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n    \t\t\tb = grid[ ip ][ j ];\r\n    \t\t\tc = grid[ ip ][ jp ];\r\n    \t\t\td = grid[ i ][ jp ];\r\n\r\n    \t\t\tuva = new Vector2( i / segments, j / radialSegments );\r\n    \t\t\tuvb = new Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n    \t\t\tuvc = new Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n    \t\t\tuvd = new Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n    \t\t\tthis.faces.push( new Face3( a, b, d ) );\r\n    \t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n    \t\t\tthis.faces.push( new Face3( b, c, d ) );\r\n    \t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tthis.computeFaceNormals();\r\n    \tthis.computeVertexNormals();\r\n\r\n    }\r\n\r\n    TubeGeometry.prototype = Object.create( Geometry.prototype );\r\n    TubeGeometry.prototype.constructor = TubeGeometry;\r\n\r\n    TubeGeometry.NoTaper = function ( u ) {\r\n\r\n    \treturn 1;\r\n\r\n    };\r\n\r\n    TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n    \treturn Math.sin( Math.PI * u );\r\n\r\n    };\r\n\r\n    // For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n    TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n    \tvar\tnormal = new Vector3(),\r\n\r\n    \t\ttangents = [],\r\n    \t\tnormals = [],\r\n    \t\tbinormals = [],\r\n\r\n    \t\tvec = new Vector3(),\r\n    \t\tmat = new Matrix4(),\r\n\r\n    \t\tnumpoints = segments + 1,\r\n    \t\ttheta,\r\n    \t\tsmallest,\r\n\r\n    \t\ttx, ty, tz,\r\n    \t\ti, u;\r\n\r\n\r\n    \t// expose internals\r\n    \tthis.tangents = tangents;\r\n    \tthis.normals = normals;\r\n    \tthis.binormals = binormals;\r\n\r\n    \t// compute the tangent vectors for each segment on the path\r\n\r\n    \tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n    \t\tu = i / ( numpoints - 1 );\r\n\r\n    \t\ttangents[ i ] = path.getTangentAt( u );\r\n    \t\ttangents[ i ].normalize();\r\n\r\n    \t}\r\n\r\n    \tinitialNormal3();\r\n\r\n    \t/*\r\n    \tfunction initialNormal1(lastBinormal) {\r\n    \t\t// fixed start binormal. Has dangers of 0 vectors\r\n    \t\tnormals[ 0 ] = new THREE.Vector3();\r\n    \t\tbinormals[ 0 ] = new THREE.Vector3();\r\n    \t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n    \t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n    \t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n    \t}\r\n\r\n    \tfunction initialNormal2() {\r\n\r\n    \t\t// This uses the Frenet-Serret formula for deriving binormal\r\n    \t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n    \t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n    \t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n    \t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n    \t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n    \t}\r\n    \t*/\r\n\r\n    \tfunction initialNormal3() {\r\n\r\n    \t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n    \t\t// and in the direction of the smallest tangent xyz component\r\n\r\n    \t\tnormals[ 0 ] = new Vector3();\r\n    \t\tbinormals[ 0 ] = new Vector3();\r\n    \t\tsmallest = Number.MAX_VALUE;\r\n    \t\ttx = Math.abs( tangents[ 0 ].x );\r\n    \t\tty = Math.abs( tangents[ 0 ].y );\r\n    \t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n    \t\tif ( tx <= smallest ) {\r\n\r\n    \t\t\tsmallest = tx;\r\n    \t\t\tnormal.set( 1, 0, 0 );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( ty <= smallest ) {\r\n\r\n    \t\t\tsmallest = ty;\r\n    \t\t\tnormal.set( 0, 1, 0 );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( tz <= smallest ) {\r\n\r\n    \t\t\tnormal.set( 0, 0, 1 );\r\n\r\n    \t\t}\r\n\r\n    \t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n    \t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n    \t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n    \t}\r\n\r\n\r\n    \t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n    \tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n    \t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n    \t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n    \t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n    \t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n    \t\t\tvec.normalize();\r\n\r\n    \t\t\ttheta = Math.acos( exports.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n    \t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n    \t}\r\n\r\n\r\n    \t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n    \tif ( closed ) {\r\n\r\n    \t\ttheta = Math.acos( exports.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n    \t\ttheta /= ( numpoints - 1 );\r\n\r\n    \t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n    \t\t\ttheta = - theta;\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n    \t\t\t// twist a little...\r\n    \t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n    \t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author Mugen87 / https://github.com/Mugen87\r\n     *\r\n     * see: http://www.blackpawn.com/texts/pqtorus/\r\n     */\r\n    function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'TorusKnotBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\ttube: tube,\r\n    \t\ttubularSegments: tubularSegments,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\tp: p,\r\n    \t\tq: q\r\n    \t};\r\n\r\n    \tradius = radius || 100;\r\n    \ttube = tube || 40;\r\n    \ttubularSegments = Math.floor( tubularSegments ) || 64;\r\n    \tradialSegments = Math.floor( radialSegments ) || 8;\r\n    \tp = p || 2;\r\n    \tq = q || 3;\r\n\r\n    \t// used to calculate buffer length\r\n    \tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n    \tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\r\n    \t// buffers\r\n    \tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n    \tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n    \t// helper variables\r\n    \tvar i, j, index = 0, indexOffset = 0;\r\n\r\n    \tvar vertex = new Vector3();\r\n    \tvar normal = new Vector3();\r\n    \tvar uv = new Vector2();\r\n\r\n    \tvar P1 = new Vector3();\r\n    \tvar P2 = new Vector3();\r\n\r\n    \tvar B = new Vector3();\r\n    \tvar T = new Vector3();\r\n    \tvar N = new Vector3();\r\n\r\n    \t// generate vertices, normals and uvs\r\n\r\n    \tfor ( i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n    \t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\r\n    \t\tvar u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n    \t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n    \t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n    \t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n    \t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n    \t\t// calculate orthonormal basis\r\n\r\n    \t\tT.subVectors( P2, P1 );\r\n    \t\tN.addVectors( P2, P1 );\r\n    \t\tB.crossVectors( T, N );\r\n    \t\tN.crossVectors( B, T );\r\n\r\n    \t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n    \t\tB.normalize();\r\n    \t\tN.normalize();\r\n\r\n    \t\tfor ( j = 0; j <= radialSegments; ++ j ) {\r\n\r\n    \t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n    \t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n    \t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n    \t\t\tvar cx = - tube * Math.cos( v );\r\n    \t\t\tvar cy = tube * Math.sin( v );\r\n\r\n    \t\t\t// now calculate the final vertex position.\r\n    \t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n    \t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n    \t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n    \t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n    \t\t\t// vertex\r\n    \t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n    \t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n    \t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n    \t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\r\n    \t\t\t// uv\r\n    \t\t\tuv.x = i / tubularSegments;\r\n    \t\t\tuv.y = j / radialSegments;\r\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n    \t\t\t// increase index\r\n    \t\t\tindex ++;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// generate indices\r\n\r\n    \tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n    \t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n    \t\t\t// indices\r\n    \t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n    \t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n    \t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n    \t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n    \t\t\t// face one\r\n    \t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n    \t\t\t// face two\r\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// build geometry\r\n\r\n    \tthis.setIndex( indices );\r\n    \tthis.addAttribute( 'position', vertices );\r\n    \tthis.addAttribute( 'normal', normals );\r\n    \tthis.addAttribute( 'uv', uvs );\r\n\r\n    \t// this function calculates the current position on the torus curve\r\n\r\n    \tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n    \t\tvar cu = Math.cos( u );\r\n    \t\tvar su = Math.sin( u );\r\n    \t\tvar quOverP = q / p * u;\r\n    \t\tvar cs = Math.cos( quOverP );\r\n\r\n    \t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n    \t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n    \t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\r\n\r\n    /**\r\n     * @author oosmoxiecode\r\n     */\r\n\r\n    function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'TorusKnotGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\ttube: tube,\r\n    \t\ttubularSegments: tubularSegments,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\tp: p,\r\n    \t\tq: q\r\n    \t};\r\n\r\n    \tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\r\n\r\n    \tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\r\n    \tthis.mergeVertices();\r\n\r\n    }\r\n\r\n    TorusKnotGeometry.prototype = Object.create( Geometry.prototype );\r\n    TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\r\n\r\n    /**\r\n     * @author Mugen87 / https://github.com/Mugen87\r\n     */\r\n\r\n    function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'TorusBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\ttube: tube,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\ttubularSegments: tubularSegments,\r\n    \t\tarc: arc\r\n    \t};\r\n\r\n    \tradius = radius || 100;\r\n    \ttube = tube || 40;\r\n    \tradialSegments = Math.floor( radialSegments ) || 8;\r\n    \ttubularSegments = Math.floor( tubularSegments ) || 6;\r\n    \tarc = arc || Math.PI * 2;\r\n\r\n    \t// used to calculate buffer length\r\n    \tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n    \tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\r\n    \t// buffers\r\n    \tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n    \tvar vertices = new Float32Array( vertexCount * 3 );\r\n    \tvar normals = new Float32Array( vertexCount * 3 );\r\n    \tvar uvs = new Float32Array( vertexCount * 2 );\r\n\r\n    \t// offset variables\r\n    \tvar vertexBufferOffset = 0;\r\n    \tvar uvBufferOffset = 0;\r\n    \tvar indexBufferOffset = 0;\r\n\r\n    \t// helper variables\r\n    \tvar center = new Vector3();\r\n    \tvar vertex = new Vector3();\r\n    \tvar normal = new Vector3();\r\n\r\n    \tvar j, i;\r\n\r\n    \t// generate vertices, normals and uvs\r\n\r\n    \tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n    \t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n    \t\t\tvar u = i / tubularSegments * arc;\r\n    \t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n    \t\t\t// vertex\r\n    \t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n    \t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n    \t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n    \t\t\tvertices[ vertexBufferOffset ] = vertex.x;\r\n    \t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\r\n    \t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\r\n\r\n    \t\t\t// this vector is used to calculate the normal\r\n    \t\t\tcenter.x = radius * Math.cos( u );\r\n    \t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n    \t\t\t// normal\r\n    \t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n    \t\t\tnormals[ vertexBufferOffset ] = normal.x;\r\n    \t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\r\n    \t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\r\n\r\n    \t\t\t// uv\r\n    \t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\r\n    \t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\r\n\r\n    \t\t\t// update offsets\r\n    \t\t\tvertexBufferOffset += 3;\r\n    \t\t\tuvBufferOffset += 2;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// generate indices\r\n\r\n    \tfor ( j = 1; j <= radialSegments; j ++ ) {\r\n\r\n    \t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n    \t\t\t// indices\r\n    \t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n    \t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n    \t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n    \t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n    \t\t\t// face one\r\n    \t\t\tindices[ indexBufferOffset ] = a;\r\n    \t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n    \t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\r\n    \t\t\t// face two\r\n    \t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n    \t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n    \t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\r\n    \t\t\t// update offset\r\n    \t\t\tindexBufferOffset += 6;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// build geometry\r\n    \tthis.setIndex( new BufferAttribute( indices, 1 ) );\r\n    \tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\r\n    \tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\r\n    \tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\r\n\r\n    }\r\n\r\n    TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\r\n\r\n    /**\r\n     * @author oosmoxiecode\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n     */\r\n\r\n    function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'TorusGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\ttube: tube,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\ttubularSegments: tubularSegments,\r\n    \t\tarc: arc\r\n    \t};\r\n\r\n    \tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\r\n\r\n    }\r\n\r\n    TorusGeometry.prototype = Object.create( Geometry.prototype );\r\n    TorusGeometry.prototype.constructor = TorusGeometry;\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     */\r\n\r\n    exports.ShapeUtils = {\r\n\r\n    \t// calculate area of the contour polygon\r\n\r\n    \tarea: function ( contour ) {\r\n\r\n    \t\tvar n = contour.length;\r\n    \t\tvar a = 0.0;\r\n\r\n    \t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n    \t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn a * 0.5;\r\n\r\n    \t},\r\n\r\n    \ttriangulate: ( function () {\r\n\r\n    \t\t/**\r\n    \t\t * This code is a quick port of code written in C++ which was submitted to\r\n    \t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n    \t\t * See original code and more information here:\r\n    \t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n    \t\t *\r\n    \t\t * ported to actionscript by Zevan Rosser\r\n    \t\t * www.actionsnippet.com\r\n    \t\t *\r\n    \t\t * ported to javascript by Joshua Koo\r\n    \t\t * http://www.lab4games.net/zz85/blog\r\n    \t\t *\r\n    \t\t */\r\n\r\n    \t\tfunction snip( contour, u, v, w, n, verts ) {\r\n\r\n    \t\t\tvar p;\r\n    \t\t\tvar ax, ay, bx, by;\r\n    \t\t\tvar cx, cy, px, py;\r\n\r\n    \t\t\tax = contour[ verts[ u ] ].x;\r\n    \t\t\tay = contour[ verts[ u ] ].y;\r\n\r\n    \t\t\tbx = contour[ verts[ v ] ].x;\r\n    \t\t\tby = contour[ verts[ v ] ].y;\r\n\r\n    \t\t\tcx = contour[ verts[ w ] ].x;\r\n    \t\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n    \t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n    \t\t\tvar aX, aY, bX, bY, cX, cY;\r\n    \t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n    \t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n    \t\t\taX = cx - bx;  aY = cy - by;\r\n    \t\t\tbX = ax - cx;  bY = ay - cy;\r\n    \t\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n    \t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n    \t\t\t\tpx = contour[ verts[ p ] ].x;\r\n    \t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n    \t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n    \t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n    \t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n    \t\t\t\tapx = px - ax;  apy = py - ay;\r\n    \t\t\t\tbpx = px - bx;  bpy = py - by;\r\n    \t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n    \t\t\t\t// see if p is inside triangle abc\r\n\r\n    \t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n    \t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n    \t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n    \t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn true;\r\n\r\n    \t\t}\r\n\r\n    \t\t// takes in an contour array and returns\r\n\r\n    \t\treturn function triangulate( contour, indices ) {\r\n\r\n    \t\t\tvar n = contour.length;\r\n\r\n    \t\t\tif ( n < 3 ) return null;\r\n\r\n    \t\t\tvar result = [],\r\n    \t\t\t\tverts = [],\r\n    \t\t\t\tvertIndices = [];\r\n\r\n    \t\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n    \t\t\tvar u, v, w;\r\n\r\n    \t\t\tif ( exports.ShapeUtils.area( contour ) > 0.0 ) {\r\n\r\n    \t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar nv = n;\r\n\r\n    \t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n    \t\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n    \t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n    \t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n    \t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n    \t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n    \t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n    \t\t\t\t\t//return null;\r\n    \t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n    \t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\r\n\r\n    \t\t\t\t\tif ( indices ) return vertIndices;\r\n    \t\t\t\t\treturn result;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n    \t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n    \t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n    \t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n    \t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n    \t\t\t\t\tvar a, b, c, s, t;\r\n\r\n    \t\t\t\t\t/* true names of the vertices */\r\n\r\n    \t\t\t\t\ta = verts[ u ];\r\n    \t\t\t\t\tb = verts[ v ];\r\n    \t\t\t\t\tc = verts[ w ];\r\n\r\n    \t\t\t\t\t/* output Triangle */\r\n\r\n    \t\t\t\t\tresult.push( [ contour[ a ],\r\n    \t\t\t\t\t\tcontour[ b ],\r\n    \t\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n    \t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n    \t\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n    \t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n    \t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tnv --;\r\n\r\n    \t\t\t\t\t/* reset error detection counter */\r\n\r\n    \t\t\t\t\tcount = 2 * nv;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( indices ) return vertIndices;\r\n    \t\t\treturn result;\r\n\r\n    \t\t}\r\n\r\n    \t} )(),\r\n\r\n    \ttriangulateShape: function ( contour, holes ) {\r\n\r\n    \t\tfunction removeDupEndPts(points) {\r\n\r\n    \t\t\tvar l = points.length;\r\n\r\n    \t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n    \t\t\t\tpoints.pop();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tremoveDupEndPts( contour );\r\n    \t\tholes.forEach( removeDupEndPts );\r\n\r\n    \t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n    \t\t\t// inOtherPt needs to be collinear to the inSegment\r\n    \t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n    \t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n    \t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n    \t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n    \t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n    \t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n    \t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n    \t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n    \t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n    \t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n    \t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\r\n\r\n    \t\t\t\t// not parallel\r\n\r\n    \t\t\t\tvar perpSeg2;\r\n    \t\t\t\tif ( limit > 0 ) {\r\n\r\n    \t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n    \t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n    \t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n    \t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n    \t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t// i.e. to reduce rounding errors\r\n    \t\t\t\t// intersection at endpoint of segment#1?\r\n    \t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n    \t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n    \t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n    \t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n    \t\t\t\t}\r\n    \t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n    \t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n    \t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n    \t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n    \t\t\t\t}\r\n    \t\t\t\t// intersection at endpoint of segment#2?\r\n    \t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n    \t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n    \t\t\t\t// return real intersection point\r\n    \t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n    \t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n    \t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// parallel or collinear\r\n    \t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n    \t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n    \t\t\t\t// they are collinear or degenerate\r\n    \t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n    \t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n    \t\t\t\t// both segments are points\r\n    \t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n    \t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n    \t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n    \t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n    \t\t\t\t}\r\n    \t\t\t\t// segment#1  is a single point\r\n    \t\t\t\tif ( seg1Pt ) {\r\n\r\n    \t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n    \t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n    \t\t\t\t}\r\n    \t\t\t\t// segment#2  is a single point\r\n    \t\t\t\tif ( seg2Pt ) {\r\n\r\n    \t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n    \t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t// they are collinear segments, which might overlap\r\n    \t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n    \t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n    \t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n    \t\t\t\t\t// the segments are NOT on a vertical line\r\n    \t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n    \t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n    \t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n    \t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n    \t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n    \t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n    \t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\t// the segments are on a vertical line\r\n    \t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n    \t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n    \t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n    \t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n    \t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n    \t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n    \t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n    \t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n    \t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n    \t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n    \t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n    \t\t\t\t\t\treturn [ seg2min ];\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n    \t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n    \t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n    \t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n    \t\t\t\t\t\treturn [ seg1min ];\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n    \t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n    \t\t\t// The order of legs is important\r\n\r\n    \t\t\t// translation of all points, so that Vertex is at (0,0)\r\n    \t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n    \t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n    \t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n    \t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n    \t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n    \t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n    \t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\r\n\r\n    \t\t\t\t// angle != 180 deg.\r\n\r\n    \t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n    \t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n    \t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n    \t\t\t\t\t// main angle < 180 deg.\r\n    \t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\t// main angle > 180 deg.\r\n    \t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// angle == 180 deg.\r\n    \t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n    \t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n\r\n    \t\tfunction removeHoles( contour, holes ) {\r\n\r\n    \t\t\tvar shape = contour.concat(); // work on this shape\r\n    \t\t\tvar hole;\r\n\r\n    \t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n    \t\t\t\t// Check if hole point lies within angle around shape point\r\n    \t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n    \t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n    \t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n    \t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n    \t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n    \t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n    \t\t\t\tif ( ! insideAngle ) {\r\n\r\n    \t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n    \t\t\t\t\treturn\tfalse;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t// Check if shape point lies within angle around hole point\r\n    \t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n    \t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n    \t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n    \t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n    \t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n    \t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n    \t\t\t\tif ( ! insideAngle ) {\r\n\r\n    \t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n    \t\t\t\t\treturn\tfalse;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\treturn\ttrue;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n    \t\t\t\t// checks for intersections with shape edges\r\n    \t\t\t\tvar sIdx, nextIdx, intersection;\r\n    \t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n    \t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n    \t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n    \t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\treturn\tfalse;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar indepHoles = [];\r\n\r\n    \t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n    \t\t\t\t// checks for intersections with hole edges\r\n    \t\t\t\tvar ihIdx, chkHole,\r\n    \t\t\t\t\thIdx, nextIdx, intersection;\r\n    \t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n    \t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n    \t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n    \t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n    \t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n    \t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n    \t\t\t\treturn\tfalse;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar holeIndex, shapeIndex,\r\n    \t\t\t\tshapePt, holePt,\r\n    \t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n    \t\t\t\ttmpShape1, tmpShape2,\r\n    \t\t\t\ttmpHole1, tmpHole2;\r\n\r\n    \t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n    \t\t\t\tindepHoles.push( h );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar minShapeIndex = 0;\r\n    \t\t\tvar counter = indepHoles.length * 2;\r\n    \t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n    \t\t\t\tcounter --;\r\n    \t\t\t\tif ( counter < 0 ) {\r\n\r\n    \t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t// search for shape-vertex and hole-vertex,\r\n    \t\t\t\t// which can be connected without intersections\r\n    \t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n    \t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n    \t\t\t\t\tholeIndex\t= - 1;\r\n\r\n    \t\t\t\t\t// search for hole which can be reached without intersections\r\n    \t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n    \t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n    \t\t\t\t\t\t// prevent multiple checks\r\n    \t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n    \t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n    \t\t\t\t\t\thole = holes[ holeIdx ];\r\n    \t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n    \t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n    \t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n    \t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n    \t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n    \t\t\t\t\t\t\tholeIndex = h2;\r\n    \t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n    \t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n    \t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n    \t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n    \t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n    \t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n    \t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n    \t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n    \t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n    \t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t}\r\n    \t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n    \t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n    \t\t}\r\n\r\n\r\n    \t\tvar i, il, f, face,\r\n    \t\t\tkey, index,\r\n    \t\t\tallPointsMap = {};\r\n\r\n    \t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n    \t\tvar allpoints = contour.concat();\r\n\r\n    \t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n    \t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n    \t\t}\r\n\r\n    \t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n    \t\t// prepare all points map\r\n\r\n    \t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n    \t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n    \t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tallPointsMap[ key ] = i;\r\n\r\n    \t\t}\r\n\r\n    \t\t// remove holes by cutting paths to holes and adding them to the shape\r\n    \t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n    \t\tvar triangles = exports.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n    \t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n    \t\t// check all face vertices against all points map\r\n\r\n    \t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n    \t\t\tface = triangles[ i ];\r\n\r\n    \t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n    \t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n    \t\t\t\tindex = allPointsMap[ key ];\r\n\r\n    \t\t\t\tif ( index !== undefined ) {\r\n\r\n    \t\t\t\t\tface[ f ] = index;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn triangles.concat();\r\n\r\n    \t},\r\n\r\n    \tisClockWise: function ( pts ) {\r\n\r\n    \t\treturn exports.ShapeUtils.area( pts ) < 0;\r\n\r\n    \t},\r\n\r\n    \t// Bezier Curves formulas obtained from\r\n    \t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n    \t// Quad Bezier Functions\r\n\r\n    \tb2: ( function () {\r\n\r\n    \t\tfunction b2p0( t, p ) {\r\n\r\n    \t\t\tvar k = 1 - t;\r\n    \t\t\treturn k * k * p;\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction b2p1( t, p ) {\r\n\r\n    \t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction b2p2( t, p ) {\r\n\r\n    \t\t\treturn t * t * p;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn function b2( t, p0, p1, p2 ) {\r\n\r\n    \t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\r\n\r\n    \t\t};\r\n\r\n    \t} )(),\r\n\r\n    \t// Cubic Bezier Functions\r\n\r\n    \tb3: ( function () {\r\n\r\n    \t\tfunction b3p0( t, p ) {\r\n\r\n    \t\t\tvar k = 1 - t;\r\n    \t\t\treturn k * k * k * p;\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction b3p1( t, p ) {\r\n\r\n    \t\t\tvar k = 1 - t;\r\n    \t\t\treturn 3 * k * k * t * p;\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction b3p2( t, p ) {\r\n\r\n    \t\t\tvar k = 1 - t;\r\n    \t\t\treturn 3 * k * t * t * p;\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction b3p3( t, p ) {\r\n\r\n    \t\t\treturn t * t * t * p;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn function b3( t, p0, p1, p2, p3 ) {\r\n\r\n    \t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\r\n\r\n    \t\t};\r\n\r\n    \t} )()\r\n\r\n    };\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     *\r\n     * Creates extruded geometry from a path shape.\r\n     *\r\n     * parameters = {\r\n     *\r\n     *  curveSegments: <int>, // number of points on the curves\r\n     *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n     *  amount: <int>, // Depth to extrude the shape\r\n     *\r\n     *  bevelEnabled: <bool>, // turn on bevel\r\n     *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n     *  bevelSize: <float>, // how far from shape outline is bevel\r\n     *  bevelSegments: <int>, // number of bevel layers\r\n     *\r\n     *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n     *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n     *\r\n     *  uvGenerator: <Object> // object that provides UV generator functions\r\n     *\r\n     * }\r\n     **/\r\n\r\n    function ExtrudeGeometry( shapes, options ) {\r\n\r\n    \tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n    \t\tshapes = [];\r\n    \t\treturn;\r\n\r\n    \t}\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'ExtrudeGeometry';\r\n\r\n    \tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n    \tthis.addShapeList( shapes, options );\r\n\r\n    \tthis.computeFaceNormals();\r\n\r\n    \t// can't really use automatic vertex normals\r\n    \t// as then front and back sides get smoothed too\r\n    \t// should do separate smoothing just for sides\r\n\r\n    \t//this.computeVertexNormals();\r\n\r\n    \t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n    }\r\n\r\n    ExtrudeGeometry.prototype = Object.create( Geometry.prototype );\r\n    ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\r\n\r\n    ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n    \tvar sl = shapes.length;\r\n\r\n    \tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n    \t\tvar shape = shapes[ s ];\r\n    \t\tthis.addShape( shape, options );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n    \tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n    \tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n    \tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n    \tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n    \tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n    \tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n    \tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n    \tvar extrudePath = options.extrudePath;\r\n    \tvar extrudePts, extrudeByPath = false;\r\n\r\n    \t// Use default WorldUVGenerator if no UV generators are specified.\r\n    \tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\r\n\r\n    \tvar splineTube, binormal, normal, position2;\r\n    \tif ( extrudePath ) {\r\n\r\n    \t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n    \t\textrudeByPath = true;\r\n    \t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n    \t\t// SETUP TNB variables\r\n\r\n    \t\t// Reuse TNB from TubeGeomtry for now.\r\n    \t\t// TODO1 - have a .isClosed in spline?\r\n\r\n    \t\tsplineTube = options.frames !== undefined ? options.frames : new TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n    \t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n    \t\tbinormal = new Vector3();\r\n    \t\tnormal = new Vector3();\r\n    \t\tposition2 = new Vector3();\r\n\r\n    \t}\r\n\r\n    \t// Safeguards if bevels are not enabled\r\n\r\n    \tif ( ! bevelEnabled ) {\r\n\r\n    \t\tbevelSegments = 0;\r\n    \t\tbevelThickness = 0;\r\n    \t\tbevelSize = 0;\r\n\r\n    \t}\r\n\r\n    \t// Variables initialization\r\n\r\n    \tvar ahole, h, hl; // looping of holes\r\n    \tvar scope = this;\r\n\r\n    \tvar shapesOffset = this.vertices.length;\r\n\r\n    \tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n    \tvar vertices = shapePoints.shape;\r\n    \tvar holes = shapePoints.holes;\r\n\r\n    \tvar reverse = ! exports.ShapeUtils.isClockWise( vertices );\r\n\r\n    \tif ( reverse ) {\r\n\r\n    \t\tvertices = vertices.reverse();\r\n\r\n    \t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n    \t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n    \t\t\tahole = holes[ h ];\r\n\r\n    \t\t\tif ( exports.ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n    \t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n    \t}\r\n\r\n\r\n    \tvar faces = exports.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n    \t/* Vertices */\r\n\r\n    \tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n    \tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n    \t\tahole = holes[ h ];\r\n\r\n    \t\tvertices = vertices.concat( ahole );\r\n\r\n    \t}\r\n\r\n\r\n    \tfunction scalePt2( pt, vec, size ) {\r\n\r\n    \t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n    \t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n    \t}\r\n\r\n    \tvar b, bs, t, z,\r\n    \t\tvert, vlen = vertices.length,\r\n    \t\tface, flen = faces.length;\r\n\r\n\r\n    \t// Find directions for point movement\r\n\r\n\r\n    \tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n    \t\t// computes for inPt the corresponding point inPt' on a new contour\r\n    \t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n    \t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n    \t\t//\r\n    \t\t// inPt' is the intersection of the two lines parallel to the two\r\n    \t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n    \t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n    \t\t// good reading for geometry algorithms (here: line-line intersection)\r\n    \t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n    \t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n    \t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n    \t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n    \t\t// check for collinear edges\r\n    \t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n    \t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n    \t\t\t// not collinear\r\n\r\n    \t\t\t// length of vectors for normalizing\r\n\r\n    \t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n    \t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n    \t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n    \t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n    \t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n    \t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n    \t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n    \t\t\t// scaling factor for v_prev to intersection point\r\n\r\n    \t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n    \t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n    \t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n    \t\t\t// vector from inPt to intersection point\r\n\r\n    \t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n    \t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n    \t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n    \t\t\t//  but prevent crazy spikes\r\n    \t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n    \t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n    \t\t\t\treturn\tnew Vector2( v_trans_x, v_trans_y );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// handle special case of collinear edges\r\n\r\n    \t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n    \t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n    \t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n    \t\t\t\t\tdirection_eq = true;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n    \t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n    \t\t\t\t\t\tdirection_eq = true;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n    \t\t\t\t\t\tdirection_eq = true;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( direction_eq ) {\r\n\r\n    \t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n    \t\t\t\tv_trans_x = - v_prev_y;\r\n    \t\t\t\tv_trans_y =  v_prev_x;\r\n    \t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n    \t\t\t\tv_trans_x = v_prev_x;\r\n    \t\t\t\tv_trans_y = v_prev_y;\r\n    \t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn\tnew Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n    \t}\r\n\r\n\r\n    \tvar contourMovements = [];\r\n\r\n    \tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n    \t\tif ( j === il ) j = 0;\r\n    \t\tif ( k === il ) k = 0;\r\n\r\n    \t\t//  (j)---(i)---(k)\r\n    \t\t// console.log('i,j,k', i, j , k)\r\n\r\n    \t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n    \t}\r\n\r\n    \tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n    \tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n    \t\tahole = holes[ h ];\r\n\r\n    \t\toneHoleMovements = [];\r\n\r\n    \t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n    \t\t\tif ( j === il ) j = 0;\r\n    \t\t\tif ( k === il ) k = 0;\r\n\r\n    \t\t\t//  (j)---(i)---(k)\r\n    \t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n    \t\t}\r\n\r\n    \t\tholesMovements.push( oneHoleMovements );\r\n    \t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n    \t}\r\n\r\n\r\n    \t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n    \tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n    \t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n    \t\tt = b / bevelSegments;\r\n    \t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\r\n    \t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\r\n\r\n    \t\t// contract shape\r\n\r\n    \t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n    \t\t\tv( vert.x, vert.y,  - z );\r\n\r\n    \t\t}\r\n\r\n    \t\t// expand holes\r\n\r\n    \t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n    \t\t\tahole = holes[ h ];\r\n    \t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n    \t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n    \t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tbs = bevelSize;\r\n\r\n    \t// Back facing vertices\r\n\r\n    \tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n    \t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n    \t\tif ( ! extrudeByPath ) {\r\n\r\n    \t\t\tv( vert.x, vert.y, 0 );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n    \t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n    \t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n    \t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n    \t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// Add stepped vertices...\r\n    \t// Including front facing vertices\r\n\r\n    \tvar s;\r\n\r\n    \tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n    \t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n    \t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n    \t\t\tif ( ! extrudeByPath ) {\r\n\r\n    \t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n    \t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n    \t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n    \t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n    \t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n\r\n    \t// Add bevel segments planes\r\n\r\n    \t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n    \tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n    \t\tt = b / bevelSegments;\r\n    \t\tz = bevelThickness * Math.cos ( t * Math.PI / 2 );\r\n    \t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\r\n\r\n    \t\t// contract shape\r\n\r\n    \t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n    \t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n    \t\t}\r\n\r\n    \t\t// expand holes\r\n\r\n    \t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n    \t\t\tahole = holes[ h ];\r\n    \t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n    \t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n    \t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n    \t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t/* Faces */\r\n\r\n    \t// Top and bottom faces\r\n\r\n    \tbuildLidFaces();\r\n\r\n    \t// Sides faces\r\n\r\n    \tbuildSideFaces();\r\n\r\n\r\n    \t/////  Internal functions\r\n\r\n    \tfunction buildLidFaces() {\r\n\r\n    \t\tif ( bevelEnabled ) {\r\n\r\n    \t\t\tvar layer = 0; // steps + 1\r\n    \t\t\tvar offset = vlen * layer;\r\n\r\n    \t\t\t// Bottom faces\r\n\r\n    \t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n    \t\t\t\tface = faces[ i ];\r\n    \t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tlayer = steps + bevelSegments * 2;\r\n    \t\t\toffset = vlen * layer;\r\n\r\n    \t\t\t// Top faces\r\n\r\n    \t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n    \t\t\t\tface = faces[ i ];\r\n    \t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// Bottom faces\r\n\r\n    \t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n    \t\t\t\tface = faces[ i ];\r\n    \t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// Top faces\r\n\r\n    \t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n    \t\t\t\tface = faces[ i ];\r\n    \t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// Create faces for the z-sides of the shape\r\n\r\n    \tfunction buildSideFaces() {\r\n\r\n    \t\tvar layeroffset = 0;\r\n    \t\tsidewalls( contour, layeroffset );\r\n    \t\tlayeroffset += contour.length;\r\n\r\n    \t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n    \t\t\tahole = holes[ h ];\r\n    \t\t\tsidewalls( ahole, layeroffset );\r\n\r\n    \t\t\t//, true\r\n    \t\t\tlayeroffset += ahole.length;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfunction sidewalls( contour, layeroffset ) {\r\n\r\n    \t\tvar j, k;\r\n    \t\ti = contour.length;\r\n\r\n    \t\twhile ( -- i >= 0 ) {\r\n\r\n    \t\t\tj = i;\r\n    \t\t\tk = i - 1;\r\n    \t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n    \t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n    \t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n    \t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n    \t\t\t\tvar slen1 = vlen * s;\r\n    \t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n    \t\t\t\tvar a = layeroffset + j + slen1,\r\n    \t\t\t\t\tb = layeroffset + k + slen1,\r\n    \t\t\t\t\tc = layeroffset + k + slen2,\r\n    \t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n    \t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n\r\n    \tfunction v( x, y, z ) {\r\n\r\n    \t\tscope.vertices.push( new Vector3( x, y, z ) );\r\n\r\n    \t}\r\n\r\n    \tfunction f3( a, b, c ) {\r\n\r\n    \t\ta += shapesOffset;\r\n    \t\tb += shapesOffset;\r\n    \t\tc += shapesOffset;\r\n\r\n    \t\tscope.faces.push( new Face3( a, b, c, null, null, 0 ) );\r\n\r\n    \t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n    \t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n    \t}\r\n\r\n    \tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n    \t\ta += shapesOffset;\r\n    \t\tb += shapesOffset;\r\n    \t\tc += shapesOffset;\r\n    \t\td += shapesOffset;\r\n\r\n    \t\tscope.faces.push( new Face3( a, b, d, null, null, 1 ) );\r\n    \t\tscope.faces.push( new Face3( b, c, d, null, null, 1 ) );\r\n\r\n    \t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n    \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n    \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n    \tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n    \t\tvar vertices = geometry.vertices;\r\n\r\n    \t\tvar a = vertices[ indexA ];\r\n    \t\tvar b = vertices[ indexB ];\r\n    \t\tvar c = vertices[ indexC ];\r\n\r\n    \t\treturn [\r\n    \t\t\tnew Vector2( a.x, a.y ),\r\n    \t\t\tnew Vector2( b.x, b.y ),\r\n    \t\t\tnew Vector2( c.x, c.y )\r\n    \t\t];\r\n\r\n    \t},\r\n\r\n    \tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n    \t\tvar vertices = geometry.vertices;\r\n\r\n    \t\tvar a = vertices[ indexA ];\r\n    \t\tvar b = vertices[ indexB ];\r\n    \t\tvar c = vertices[ indexC ];\r\n    \t\tvar d = vertices[ indexD ];\r\n\r\n    \t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n    \t\t\treturn [\r\n    \t\t\t\tnew Vector2( a.x, 1 - a.z ),\r\n    \t\t\t\tnew Vector2( b.x, 1 - b.z ),\r\n    \t\t\t\tnew Vector2( c.x, 1 - c.z ),\r\n    \t\t\t\tnew Vector2( d.x, 1 - d.z )\r\n    \t\t\t];\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\treturn [\r\n    \t\t\t\tnew Vector2( a.y, 1 - a.z ),\r\n    \t\t\t\tnew Vector2( b.y, 1 - b.z ),\r\n    \t\t\t\tnew Vector2( c.y, 1 - c.z ),\r\n    \t\t\t\tnew Vector2( d.y, 1 - d.z )\r\n    \t\t\t];\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n    };\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * Text = 3D Text\r\n     *\r\n     * parameters = {\r\n     *  font: <THREE.Font>, // font\r\n     *\r\n     *  size: <float>, // size of the text\r\n     *  height: <float>, // thickness to extrude text\r\n     *  curveSegments: <int>, // number of points on the curves\r\n     *\r\n     *  bevelEnabled: <bool>, // turn on bevel\r\n     *  bevelThickness: <float>, // how deep into text bevel goes\r\n     *  bevelSize: <float> // how far from text outline is bevel\r\n     * }\r\n     */\r\n\r\n    function TextGeometry( text, parameters ) {\r\n\r\n    \tparameters = parameters || {};\r\n\r\n    \tvar font = parameters.font;\r\n\r\n    \tif ( (font && font.isFont) === false ) {\r\n\r\n    \t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\r\n    \t\treturn new Geometry();\r\n\r\n    \t}\r\n\r\n    \tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\r\n\r\n    \t// translate parameters to ExtrudeGeometry API\r\n\r\n    \tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n    \t// defaults\r\n\r\n    \tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n    \tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n    \tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n    \tExtrudeGeometry.call( this, shapes, parameters );\r\n\r\n    \tthis.type = 'TextGeometry';\r\n\r\n    }\r\n\r\n    TextGeometry.prototype = Object.create( ExtrudeGeometry.prototype );\r\n    TextGeometry.prototype.constructor = TextGeometry;\r\n\r\n    /**\r\n     * @author benaadams / https://twitter.com/ben_a_adams\r\n     * based on THREE.SphereGeometry\r\n     */\r\n\r\n    function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'SphereBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\twidthSegments: widthSegments,\r\n    \t\theightSegments: heightSegments,\r\n    \t\tphiStart: phiStart,\r\n    \t\tphiLength: phiLength,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    \tradius = radius || 50;\r\n\r\n    \twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n    \theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n    \tphiStart = phiStart !== undefined ? phiStart : 0;\r\n    \tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n    \tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n    \tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n    \tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n    \tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n    \tvar positions = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n    \tvar index = 0, vertices = [], normal = new Vector3();\r\n\r\n    \tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n    \t\tvar verticesRow = [];\r\n\r\n    \t\tvar v = y / heightSegments;\r\n\r\n    \t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n    \t\t\tvar u = x / widthSegments;\r\n\r\n    \t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n    \t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n    \t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n    \t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n    \t\t\tpositions.setXYZ( index, px, py, pz );\r\n    \t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n    \t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n    \t\t\tverticesRow.push( index );\r\n\r\n    \t\t\tindex ++;\r\n\r\n    \t\t}\r\n\r\n    \t\tvertices.push( verticesRow );\r\n\r\n    \t}\r\n\r\n    \tvar indices = [];\r\n\r\n    \tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n    \t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n    \t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n    \t\t\tvar v2 = vertices[ y ][ x ];\r\n    \t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n    \t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n    \t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n    \t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tthis.setIndex( new ( positions.count > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\r\n    \tthis.addAttribute( 'position', positions );\r\n    \tthis.addAttribute( 'normal', normals );\r\n    \tthis.addAttribute( 'uv', uvs );\r\n\r\n    \tthis.boundingSphere = new Sphere( new Vector3(), radius );\r\n\r\n    }\r\n\r\n    SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'SphereGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\twidthSegments: widthSegments,\r\n    \t\theightSegments: heightSegments,\r\n    \t\tphiStart: phiStart,\r\n    \t\tphiLength: phiLength,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    \tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n    }\r\n\r\n    SphereGeometry.prototype = Object.create( Geometry.prototype );\r\n    SphereGeometry.prototype.constructor = SphereGeometry;\r\n\r\n    /**\r\n     * @author Mugen87 / https://github.com/Mugen87\r\n     */\r\n\r\n    function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'RingBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tinnerRadius: innerRadius,\r\n    \t\touterRadius: outerRadius,\r\n    \t\tthetaSegments: thetaSegments,\r\n    \t\tphiSegments: phiSegments,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    \tinnerRadius = innerRadius || 20;\r\n    \touterRadius = outerRadius || 50;\r\n\r\n    \tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n    \tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n    \tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n    \tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\r\n\r\n    \t// these are used to calculate buffer length\r\n    \tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\r\n    \tvar indexCount = thetaSegments * phiSegments * 2 * 3;\r\n\r\n    \t// buffers\r\n    \tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n    \tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n    \t// some helper variables\r\n    \tvar index = 0, indexOffset = 0, segment;\r\n    \tvar radius = innerRadius;\r\n    \tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n    \tvar vertex = new Vector3();\r\n    \tvar uv = new Vector2();\r\n    \tvar j, i;\r\n\r\n    \t// generate vertices, normals and uvs\r\n\r\n    \t// values are generate from the inside of the ring to the outside\r\n\r\n    \tfor ( j = 0; j <= phiSegments; j ++ ) {\r\n\r\n    \t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n    \t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n    \t\t\t// vertex\r\n    \t\t\tvertex.x = radius * Math.cos( segment );\r\n    \t\t\tvertex.y = radius * Math.sin( segment );\r\n    \t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n    \t\t\t// normal\r\n    \t\t\tnormals.setXYZ( index, 0, 0, 1 );\r\n\r\n    \t\t\t// uv\r\n    \t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n    \t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n    \t\t\t// increase index\r\n    \t\t\tindex++;\r\n\r\n    \t\t}\r\n\r\n    \t\t// increase the radius for next row of vertices\r\n    \t\tradius += radiusStep;\r\n\r\n    \t}\r\n\r\n    \t// generate indices\r\n\r\n    \tfor ( j = 0; j < phiSegments; j ++ ) {\r\n\r\n    \t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n    \t\tfor ( i = 0; i < thetaSegments; i ++ ) {\r\n\r\n    \t\t\tsegment = i + thetaSegmentLevel;\r\n\r\n    \t\t\t// indices\r\n    \t\t\tvar a = segment;\r\n    \t\t\tvar b = segment + thetaSegments + 1;\r\n    \t\t\tvar c = segment + thetaSegments + 2;\r\n    \t\t\tvar d = segment + 1;\r\n\r\n    \t\t\t// face one\r\n    \t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\r\n    \t\t\t// face two\r\n    \t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// build geometry\r\n\r\n    \tthis.setIndex( indices );\r\n    \tthis.addAttribute( 'position', vertices );\r\n    \tthis.addAttribute( 'normal', normals );\r\n    \tthis.addAttribute( 'uv', uvs );\r\n\r\n    }\r\n\r\n    RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    RingBufferGeometry.prototype.constructor = RingBufferGeometry;\r\n\r\n    /**\r\n     * @author Kaleb Murphy\r\n     */\r\n\r\n    function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'RingGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tinnerRadius: innerRadius,\r\n    \t\touterRadius: outerRadius,\r\n    \t\tthetaSegments: thetaSegments,\r\n    \t\tphiSegments: phiSegments,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    \tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\r\n\r\n    }\r\n\r\n    RingGeometry.prototype = Object.create( Geometry.prototype );\r\n    RingGeometry.prototype.constructor = RingGeometry;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n     */\r\n\r\n    function PlaneGeometry( width, height, widthSegments, heightSegments ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'PlaneGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\twidth: width,\r\n    \t\theight: height,\r\n    \t\twidthSegments: widthSegments,\r\n    \t\theightSegments: heightSegments\r\n    \t};\r\n\r\n    \tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n    }\r\n\r\n    PlaneGeometry.prototype = Object.create( Geometry.prototype );\r\n    PlaneGeometry.prototype.constructor = PlaneGeometry;\r\n\r\n    /**\r\n     * @author Mugen87 / https://github.com/Mugen87\r\n     */\r\n\r\n     // points - to create a closed torus, one must use a set of points\r\n     //    like so: [ a, b, c, d, a ], see first is the same as last.\r\n     // segments - the number of circumference segments to create\r\n     // phiStart - the starting radian\r\n     // phiLength - the radian (0 to 2PI) range of the lathed section\r\n     //    2PI is a closed lathe, less than 2PI is a portion.\r\n\r\n    function LatheBufferGeometry( points, segments, phiStart, phiLength ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'LatheBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tpoints: points,\r\n    \t\tsegments: segments,\r\n    \t\tphiStart: phiStart,\r\n    \t\tphiLength: phiLength\r\n    \t};\r\n\r\n    \tsegments = Math.floor( segments ) || 12;\r\n    \tphiStart = phiStart || 0;\r\n    \tphiLength = phiLength || Math.PI * 2;\r\n\r\n    \t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n    \tphiLength = exports.Math.clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n    \t// these are used to calculate buffer length\r\n    \tvar vertexCount = ( segments + 1 ) * points.length;\r\n    \tvar indexCount = segments * points.length * 2 * 3;\r\n\r\n    \t// buffers\r\n    \tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n    \tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n    \t// helper variables\r\n    \tvar index = 0, indexOffset = 0, base;\r\n    \tvar inverseSegments = 1.0 / segments;\r\n    \tvar vertex = new Vector3();\r\n    \tvar uv = new Vector2();\r\n    \tvar i, j;\r\n\r\n    \t// generate vertices and uvs\r\n\r\n    \tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n    \t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n    \t\tvar sin = Math.sin( phi );\r\n    \t\tvar cos = Math.cos( phi );\r\n\r\n    \t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n    \t\t\t// vertex\r\n    \t\t\tvertex.x = points[ j ].x * sin;\r\n    \t\t\tvertex.y = points[ j ].y;\r\n    \t\t\tvertex.z = points[ j ].x * cos;\r\n    \t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n    \t\t\t// uv\r\n    \t\t\tuv.x = i / segments;\r\n    \t\t\tuv.y = j / ( points.length - 1 );\r\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n    \t\t\t// increase index\r\n    \t\t\tindex ++;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// generate indices\r\n\r\n    \tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n    \t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n    \t\t\tbase = j + i * points.length;\r\n\r\n    \t\t\t// indices\r\n    \t\t\tvar a = base;\r\n    \t\t\tvar b = base + points.length;\r\n    \t\t\tvar c = base + points.length + 1;\r\n    \t\t\tvar d = base + 1;\r\n\r\n    \t\t\t// face one\r\n    \t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n    \t\t\t// face two\r\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \t// build geometry\r\n\r\n    \tthis.setIndex( indices );\r\n    \tthis.addAttribute( 'position', vertices );\r\n    \tthis.addAttribute( 'uv', uvs );\r\n\r\n    \t// generate normals\r\n\r\n    \tthis.computeVertexNormals();\r\n\r\n    \t// if the geometry is closed, we need to average the normals along the seam.\r\n    \t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n    \tif( phiLength === Math.PI * 2 ) {\r\n\r\n    \t\tvar normals = this.attributes.normal.array;\r\n    \t\tvar n1 = new Vector3();\r\n    \t\tvar n2 = new Vector3();\r\n    \t\tvar n = new Vector3();\r\n\r\n    \t\t// this is the buffer offset for the last line of vertices\r\n    \t\tbase = segments * points.length * 3;\r\n\r\n    \t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\r\n\r\n    \t\t\t// select the normal of the vertex in the first line\r\n    \t\t\tn1.x = normals[ j + 0 ];\r\n    \t\t\tn1.y = normals[ j + 1 ];\r\n    \t\t\tn1.z = normals[ j + 2 ];\r\n\r\n    \t\t\t// select the normal of the vertex in the last line\r\n    \t\t\tn2.x = normals[ base + j + 0 ];\r\n    \t\t\tn2.y = normals[ base + j + 1 ];\r\n    \t\t\tn2.z = normals[ base + j + 2 ];\r\n\r\n    \t\t\t// average normals\r\n    \t\t\tn.addVectors( n1, n2 ).normalize();\r\n\r\n    \t\t\t// assign the new values to both normals\r\n    \t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\r\n    \t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\r\n    \t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\r\n\r\n    \t\t} // next row\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\r\n\r\n    /**\r\n     * @author astrodud / http://astrodud.isgreat.org/\r\n     * @author zz85 / https://github.com/zz85\r\n     * @author bhouston / http://clara.io\r\n     */\r\n\r\n    // points - to create a closed torus, one must use a set of points\r\n    //    like so: [ a, b, c, d, a ], see first is the same as last.\r\n    // segments - the number of circumference segments to create\r\n    // phiStart - the starting radian\r\n    // phiLength - the radian (0 to 2PI) range of the lathed section\r\n    //    2PI is a closed lathe, less than 2PI is a portion.\r\n\r\n    function LatheGeometry( points, segments, phiStart, phiLength ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'LatheGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tpoints: points,\r\n    \t\tsegments: segments,\r\n    \t\tphiStart: phiStart,\r\n    \t\tphiLength: phiLength\r\n    \t};\r\n\r\n    \tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\r\n    \tthis.mergeVertices();\r\n\r\n    }\r\n\r\n    LatheGeometry.prototype = Object.create( Geometry.prototype );\r\n    LatheGeometry.prototype.constructor = LatheGeometry;\r\n\r\n    /**\r\n     * @author jonobr1 / http://jonobr1.com\r\n     *\r\n     * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n     * ExtrudeGeometry.\r\n     *\r\n     * parameters = {\r\n     *\r\n     *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n     *\r\n     *\tmaterial: <int> // material index for front and back faces\r\n     *\tuvGenerator: <Object> // object that provides UV generator functions\r\n     *\r\n     * }\r\n     **/\r\n\r\n    function ShapeGeometry( shapes, options ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'ShapeGeometry';\r\n\r\n    \tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n    \tthis.addShapeList( shapes, options );\r\n\r\n    \tthis.computeFaceNormals();\r\n\r\n    }\r\n\r\n    ShapeGeometry.prototype = Object.create( Geometry.prototype );\r\n    ShapeGeometry.prototype.constructor = ShapeGeometry;\r\n\r\n    /**\r\n     * Add an array of shapes to THREE.ShapeGeometry.\r\n     */\r\n    ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n    \tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n    \t\tthis.addShape( shapes[ i ], options );\r\n\r\n    \t}\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n     */\r\n    ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n    \tif ( options === undefined ) options = {};\r\n    \tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n    \tvar material = options.material;\r\n    \tvar uvgen = options.UVGenerator === undefined ? ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n    \t//\r\n\r\n    \tvar i, l, hole;\r\n\r\n    \tvar shapesOffset = this.vertices.length;\r\n    \tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n    \tvar vertices = shapePoints.shape;\r\n    \tvar holes = shapePoints.holes;\r\n\r\n    \tvar reverse = ! exports.ShapeUtils.isClockWise( vertices );\r\n\r\n    \tif ( reverse ) {\r\n\r\n    \t\tvertices = vertices.reverse();\r\n\r\n    \t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n    \t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n    \t\t\thole = holes[ i ];\r\n\r\n    \t\t\tif ( exports.ShapeUtils.isClockWise( hole ) ) {\r\n\r\n    \t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treverse = false;\r\n\r\n    \t}\r\n\r\n    \tvar faces = exports.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n    \t// Vertices\r\n\r\n    \tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n    \t\thole = holes[ i ];\r\n    \t\tvertices = vertices.concat( hole );\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tvar vert, vlen = vertices.length;\r\n    \tvar face, flen = faces.length;\r\n\r\n    \tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n    \t\tvert = vertices[ i ];\r\n\r\n    \t\tthis.vertices.push( new Vector3( vert.x, vert.y, 0 ) );\r\n\r\n    \t}\r\n\r\n    \tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n    \t\tface = faces[ i ];\r\n\r\n    \t\tvar a = face[ 0 ] + shapesOffset;\r\n    \t\tvar b = face[ 1 ] + shapesOffset;\r\n    \t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n    \t\tthis.faces.push( new Face3( a, b, c, null, null, material ) );\r\n    \t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     */\r\n\r\n    function EdgesGeometry( geometry, thresholdAngle ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n    \tvar thresholdDot = Math.cos( exports.Math.DEG2RAD * thresholdAngle );\r\n\r\n    \tvar edge = [ 0, 0 ], hash = {};\r\n\r\n    \tfunction sortFunction( a, b ) {\r\n\r\n    \t\treturn a - b;\r\n\r\n    \t}\r\n\r\n    \tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n    \tvar geometry2;\r\n\r\n    \tif ( (geometry && geometry.isBufferGeometry) ) {\r\n\r\n    \t\tgeometry2 = new Geometry();\r\n    \t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n    \t} else {\r\n\r\n    \t\tgeometry2 = geometry.clone();\r\n\r\n    \t}\r\n\r\n    \tgeometry2.mergeVertices();\r\n    \tgeometry2.computeFaceNormals();\r\n\r\n    \tvar vertices = geometry2.vertices;\r\n    \tvar faces = geometry2.faces;\r\n\r\n    \tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n    \t\tvar face = faces[ i ];\r\n\r\n    \t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n    \t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n    \t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n    \t\t\tedge.sort( sortFunction );\r\n\r\n    \t\t\tvar key = edge.toString();\r\n\r\n    \t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n    \t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\thash[ key ].face2 = i;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tvar coords = [];\r\n\r\n    \tfor ( var key in hash ) {\r\n\r\n    \t\tvar h = hash[ key ];\r\n\r\n    \t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n    \t\t\tvar vertex = vertices[ h.vert1 ];\r\n    \t\t\tcoords.push( vertex.x );\r\n    \t\t\tcoords.push( vertex.y );\r\n    \t\t\tcoords.push( vertex.z );\r\n\r\n    \t\t\tvertex = vertices[ h.vert2 ];\r\n    \t\t\tcoords.push( vertex.x );\r\n    \t\t\tcoords.push( vertex.y );\r\n    \t\t\tcoords.push( vertex.z );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tthis.addAttribute( 'position', new BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n    }\r\n\r\n    EdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    EdgesGeometry.prototype.constructor = EdgesGeometry;\r\n\r\n    /**\r\n     * @author Mugen87 / https://github.com/Mugen87\r\n     */\r\n\r\n    function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'CylinderBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradiusTop: radiusTop,\r\n    \t\tradiusBottom: radiusBottom,\r\n    \t\theight: height,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\theightSegments: heightSegments,\r\n    \t\topenEnded: openEnded,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    \tvar scope = this;\r\n\r\n    \tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n    \tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n    \theight = height !== undefined ? height : 100;\r\n\r\n    \tradialSegments = Math.floor( radialSegments ) || 8;\r\n    \theightSegments = Math.floor( heightSegments ) || 1;\r\n\r\n    \topenEnded = openEnded !== undefined ? openEnded : false;\r\n    \tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\r\n    \tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\r\n\r\n    \t// used to calculate buffer length\r\n\r\n    \tvar nbCap = 0;\r\n\r\n    \tif ( openEnded === false ) {\r\n\r\n    \t\tif ( radiusTop > 0 ) nbCap ++;\r\n    \t\tif ( radiusBottom > 0 ) nbCap ++;\r\n\r\n    \t}\r\n\r\n    \tvar vertexCount = calculateVertexCount();\r\n    \tvar indexCount = calculateIndexCount();\r\n\r\n    \t// buffers\r\n\r\n    \tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\r\n    \tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n    \t// helper variables\r\n\r\n    \tvar index = 0,\r\n    \t    indexOffset = 0,\r\n    \t    indexArray = [],\r\n    \t    halfHeight = height / 2;\r\n\r\n    \t// group variables\r\n    \tvar groupStart = 0;\r\n\r\n    \t// generate geometry\r\n\r\n    \tgenerateTorso();\r\n\r\n    \tif ( openEnded === false ) {\r\n\r\n    \t\tif ( radiusTop > 0 ) generateCap( true );\r\n    \t\tif ( radiusBottom > 0 ) generateCap( false );\r\n\r\n    \t}\r\n\r\n    \t// build geometry\r\n\r\n    \tthis.setIndex( indices );\r\n    \tthis.addAttribute( 'position', vertices );\r\n    \tthis.addAttribute( 'normal', normals );\r\n    \tthis.addAttribute( 'uv', uvs );\r\n\r\n    \t// helper functions\r\n\r\n    \tfunction calculateVertexCount() {\r\n\r\n    \t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\r\n\r\n    \t\tif ( openEnded === false ) {\r\n\r\n    \t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn count;\r\n\r\n    \t}\r\n\r\n    \tfunction calculateIndexCount() {\r\n\r\n    \t\tvar count = radialSegments * heightSegments * 2 * 3;\r\n\r\n    \t\tif ( openEnded === false ) {\r\n\r\n    \t\t\tcount += radialSegments * nbCap * 3;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn count;\r\n\r\n    \t}\r\n\r\n    \tfunction generateTorso() {\r\n\r\n    \t\tvar x, y;\r\n    \t\tvar normal = new Vector3();\r\n    \t\tvar vertex = new Vector3();\r\n\r\n    \t\tvar groupCount = 0;\r\n\r\n    \t\t// this will be used to calculate the normal\r\n    \t\tvar slope = ( radiusBottom - radiusTop ) / height;\r\n\r\n    \t\t// generate vertices, normals and uvs\r\n\r\n    \t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n    \t\t\tvar indexRow = [];\r\n\r\n    \t\t\tvar v = y / heightSegments;\r\n\r\n    \t\t\t// calculate the radius of the current row\r\n    \t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n    \t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n    \t\t\t\tvar u = x / radialSegments;\r\n\r\n    \t\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n    \t\t\t\tvar sinTheta = Math.sin( theta );\r\n    \t\t\t\tvar cosTheta = Math.cos( theta );\r\n\r\n    \t\t\t\t// vertex\r\n    \t\t\t\tvertex.x = radius * sinTheta;\r\n    \t\t\t\tvertex.y = - v * height + halfHeight;\r\n    \t\t\t\tvertex.z = radius * cosTheta;\r\n    \t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n    \t\t\t\t// normal\r\n    \t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\r\n    \t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\r\n    \t\t\t\t// uv\r\n    \t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n    \t\t\t\t// save index of vertex in respective row\r\n    \t\t\t\tindexRow.push( index );\r\n\r\n    \t\t\t\t// increase index\r\n    \t\t\t\tindex ++;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// now save vertices of the row in our index array\r\n    \t\t\tindexArray.push( indexRow );\r\n\r\n    \t\t}\r\n\r\n    \t\t// generate indices\r\n\r\n    \t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n    \t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n    \t\t\t\t// we use the index array to access the correct indices\r\n    \t\t\t\tvar i1 = indexArray[ y ][ x ];\r\n    \t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\r\n    \t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\r\n    \t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\r\n\r\n    \t\t\t\t// face one\r\n    \t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\r\n    \t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\r\n    \t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\r\n\r\n    \t\t\t\t// face two\r\n    \t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\r\n    \t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\r\n    \t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\r\n\r\n    \t\t\t\t// update counters\r\n    \t\t\t\tgroupCount += 6;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// add a group to the geometry. this will ensure multi material support\r\n    \t\tscope.addGroup( groupStart, groupCount, 0 );\r\n\r\n    \t\t// calculate new start value for groups\r\n    \t\tgroupStart += groupCount;\r\n\r\n    \t}\r\n\r\n    \tfunction generateCap( top ) {\r\n\r\n    \t\tvar x, centerIndexStart, centerIndexEnd;\r\n\r\n    \t\tvar uv = new Vector2();\r\n    \t\tvar vertex = new Vector3();\r\n\r\n    \t\tvar groupCount = 0;\r\n\r\n    \t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\r\n    \t\tvar sign = ( top === true ) ? 1 : - 1;\r\n\r\n    \t\t// save the index of the first center vertex\r\n    \t\tcenterIndexStart = index;\r\n\r\n    \t\t// first we generate the center vertex data of the cap.\r\n    \t\t// because the geometry needs one set of uvs per face,\r\n    \t\t// we must generate a center vertex per face/segment\r\n\r\n    \t\tfor ( x = 1; x <= radialSegments; x ++ ) {\r\n\r\n    \t\t\t// vertex\r\n    \t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\r\n\r\n    \t\t\t// normal\r\n    \t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\r\n    \t\t\t// uv\r\n    \t\t\tuv.x = 0.5;\r\n    \t\t\tuv.y = 0.5;\r\n\r\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n    \t\t\t// increase index\r\n    \t\t\tindex ++;\r\n\r\n    \t\t}\r\n\r\n    \t\t// save the index of the last center vertex\r\n    \t\tcenterIndexEnd = index;\r\n\r\n    \t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n    \t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n    \t\t\tvar u = x / radialSegments;\r\n    \t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n    \t\t\tvar cosTheta = Math.cos( theta );\r\n    \t\t\tvar sinTheta = Math.sin( theta );\r\n\r\n    \t\t\t// vertex\r\n    \t\t\tvertex.x = radius * sinTheta;\r\n    \t\t\tvertex.y = halfHeight * sign;\r\n    \t\t\tvertex.z = radius * cosTheta;\r\n    \t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n    \t\t\t// normal\r\n    \t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\r\n    \t\t\t// uv\r\n    \t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\r\n    \t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n    \t\t\t// increase index\r\n    \t\t\tindex ++;\r\n\r\n    \t\t}\r\n\r\n    \t\t// generate indices\r\n\r\n    \t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n    \t\t\tvar c = centerIndexStart + x;\r\n    \t\t\tvar i = centerIndexEnd + x;\r\n\r\n    \t\t\tif ( top === true ) {\r\n\r\n    \t\t\t\t// face top\r\n    \t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\r\n    \t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\r\n    \t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// face bottom\r\n    \t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\r\n    \t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\r\n    \t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// update counters\r\n    \t\t\tgroupCount += 3;\r\n\r\n    \t\t}\r\n\r\n    \t\t// add a group to the geometry. this will ensure multi material support\r\n    \t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n\r\n    \t\t// calculate new start value for groups\r\n    \t\tgroupStart += groupCount;\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'CylinderGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradiusTop: radiusTop,\r\n    \t\tradiusBottom: radiusBottom,\r\n    \t\theight: height,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\theightSegments: heightSegments,\r\n    \t\topenEnded: openEnded,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    \tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\r\n    \tthis.mergeVertices();\r\n\r\n    }\r\n\r\n    CylinderGeometry.prototype = Object.create( Geometry.prototype );\r\n    CylinderGeometry.prototype.constructor = CylinderGeometry;\r\n\r\n    /**\r\n     * @author abelnation / http://github.com/abelnation\r\n     */\r\n\r\n    function ConeGeometry(\r\n    \tradius, height,\r\n    \tradialSegments, heightSegments,\r\n    \topenEnded, thetaStart, thetaLength ) {\r\n\r\n    \tCylinderGeometry.call( this,\r\n    \t\t0, radius, height,\r\n    \t\tradialSegments, heightSegments,\r\n    \t\topenEnded, thetaStart, thetaLength );\r\n\r\n    \tthis.type = 'ConeGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\theight: height,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\theightSegments: heightSegments,\r\n    \t\topenEnded: openEnded,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    }\r\n\r\n    ConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\r\n    ConeGeometry.prototype.constructor = ConeGeometry;\r\n\r\n    /*\r\n     * @author: abelnation / http://github.com/abelnation\r\n     */\r\n\r\n    function ConeBufferGeometry(\r\n    \tradius, height,\r\n    \tradialSegments, heightSegments,\r\n    \topenEnded, thetaStart, thetaLength ) {\r\n\r\n    \tCylinderBufferGeometry.call( this,\r\n    \t\t0, radius, height,\r\n    \t\tradialSegments, heightSegments,\r\n    \t\topenEnded, thetaStart, thetaLength );\r\n\r\n    \tthis.type = 'ConeBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\theight: height,\r\n    \t\tradialSegments: radialSegments,\r\n    \t\theightSegments: heightSegments,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    }\r\n\r\n    ConeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\r\n\r\n    /**\r\n     * @author benaadams / https://twitter.com/ben_a_adams\r\n     */\r\n\r\n    function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'CircleBufferGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\tsegments: segments,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    \tradius = radius || 50;\r\n    \tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n    \tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n    \tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n    \tvar vertices = segments + 2;\r\n\r\n    \tvar positions = new Float32Array( vertices * 3 );\r\n    \tvar normals = new Float32Array( vertices * 3 );\r\n    \tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n    \t// center data is already zero, but need to set a few extras\r\n    \tnormals[ 2 ] = 1.0;\r\n    \tuvs[ 0 ] = 0.5;\r\n    \tuvs[ 1 ] = 0.5;\r\n\r\n    \tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n    \t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n    \t\tpositions[ i ] = radius * Math.cos( segment );\r\n    \t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n    \t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n    \t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n    \t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n    \t}\r\n\r\n    \tvar indices = [];\r\n\r\n    \tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n    \t\tindices.push( i, i + 1, 0 );\r\n\r\n    \t}\r\n\r\n    \tthis.setIndex( new BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n    \tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n    \tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\r\n    \tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\r\n\r\n    \tthis.boundingSphere = new Sphere( new Vector3(), radius );\r\n\r\n    }\r\n\r\n    CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\r\n\r\n    /**\r\n     * @author hughes\r\n     */\r\n\r\n    function CircleGeometry( radius, segments, thetaStart, thetaLength ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'CircleGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\tradius: radius,\r\n    \t\tsegments: segments,\r\n    \t\tthetaStart: thetaStart,\r\n    \t\tthetaLength: thetaLength\r\n    \t};\r\n\r\n    \tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\r\n    }\r\n\r\n    CircleGeometry.prototype = Object.create( Geometry.prototype );\r\n    CircleGeometry.prototype.constructor = CircleGeometry;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n     */\r\n\r\n    function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n    \tGeometry.call( this );\r\n\r\n    \tthis.type = 'BoxGeometry';\r\n\r\n    \tthis.parameters = {\r\n    \t\twidth: width,\r\n    \t\theight: height,\r\n    \t\tdepth: depth,\r\n    \t\twidthSegments: widthSegments,\r\n    \t\theightSegments: heightSegments,\r\n    \t\tdepthSegments: depthSegments\r\n    \t};\r\n\r\n    \tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\r\n    \tthis.mergeVertices();\r\n\r\n    }\r\n\r\n    BoxGeometry.prototype = Object.create( Geometry.prototype );\r\n    BoxGeometry.prototype.constructor = BoxGeometry;\r\n\r\n\r\n\r\n    var Geometries = Object.freeze({\r\n    \tWireframeGeometry: WireframeGeometry,\r\n    \tParametricGeometry: ParametricGeometry,\r\n    \tTetrahedronGeometry: TetrahedronGeometry,\r\n    \tOctahedronGeometry: OctahedronGeometry,\r\n    \tIcosahedronGeometry: IcosahedronGeometry,\r\n    \tDodecahedronGeometry: DodecahedronGeometry,\r\n    \tPolyhedronGeometry: PolyhedronGeometry,\r\n    \tTubeGeometry: TubeGeometry,\r\n    \tTorusKnotGeometry: TorusKnotGeometry,\r\n    \tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\r\n    \tTorusGeometry: TorusGeometry,\r\n    \tTorusBufferGeometry: TorusBufferGeometry,\r\n    \tTextGeometry: TextGeometry,\r\n    \tSphereBufferGeometry: SphereBufferGeometry,\r\n    \tSphereGeometry: SphereGeometry,\r\n    \tRingGeometry: RingGeometry,\r\n    \tRingBufferGeometry: RingBufferGeometry,\r\n    \tPlaneBufferGeometry: PlaneBufferGeometry,\r\n    \tPlaneGeometry: PlaneGeometry,\r\n    \tLatheGeometry: LatheGeometry,\r\n    \tLatheBufferGeometry: LatheBufferGeometry,\r\n    \tShapeGeometry: ShapeGeometry,\r\n    \tExtrudeGeometry: ExtrudeGeometry,\r\n    \tEdgesGeometry: EdgesGeometry,\r\n    \tConeGeometry: ConeGeometry,\r\n    \tConeBufferGeometry: ConeBufferGeometry,\r\n    \tCylinderGeometry: CylinderGeometry,\r\n    \tCylinderBufferGeometry: CylinderBufferGeometry,\r\n    \tCircleBufferGeometry: CircleBufferGeometry,\r\n    \tCircleGeometry: CircleGeometry,\r\n    \tBoxBufferGeometry: BoxBufferGeometry,\r\n    \tBoxGeometry: BoxGeometry\r\n    });\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function ShadowMaterial() {\r\n\r\n    \tShaderMaterial.call( this, {\r\n    \t\tuniforms: exports.UniformsUtils.merge( [\r\n    \t\t\tUniformsLib[ \"lights\" ],\r\n    \t\t\t{\r\n    \t\t\t\topacity: { value: 1.0 }\r\n    \t\t\t}\r\n    \t\t] ),\r\n    \t\tvertexShader: ShaderChunk[ 'shadow_vert' ],\r\n    \t\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\r\n    \t} );\r\n\r\n    \tthis.lights = true;\r\n    \tthis.transparent = true;\r\n\r\n    \tObject.defineProperties( this, {\r\n    \t\topacity: {\r\n    \t\t\tenumerable: true,\r\n    \t\t\tget: function () {\r\n    \t\t\t\treturn this.uniforms.opacity.value;\r\n    \t\t\t},\r\n    \t\t\tset: function ( value ) {\r\n    \t\t\t\tthis.uniforms.opacity.value = value;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t} );\r\n\r\n    }\r\n\r\n    ShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\r\n    ShadowMaterial.prototype.constructor = ShadowMaterial;\r\n\r\n    ShadowMaterial.prototype.isShadowMaterial = true;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function RawShaderMaterial( parameters ) {\r\n\r\n    \tShaderMaterial.call( this, parameters );\r\n\r\n    \tthis.type = 'RawShaderMaterial';\r\n\r\n    }\r\n\r\n    RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\r\n    RawShaderMaterial.prototype.constructor = RawShaderMaterial;\r\n\r\n    RawShaderMaterial.prototype.isRawShaderMaterial = true;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function MultiMaterial( materials ) {\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.type = 'MultiMaterial';\r\n\r\n    \tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n    \tthis.visible = true;\r\n\r\n    }\r\n\r\n    MultiMaterial.prototype = {\r\n\r\n    \tconstructor: MultiMaterial,\r\n\r\n    \tisMultiMaterial: true,\r\n\r\n    \ttoJSON: function ( meta ) {\r\n\r\n    \t\tvar output = {\r\n    \t\t\tmetadata: {\r\n    \t\t\t\tversion: 4.2,\r\n    \t\t\t\ttype: 'material',\r\n    \t\t\t\tgenerator: 'MaterialExporter'\r\n    \t\t\t},\r\n    \t\t\tuuid: this.uuid,\r\n    \t\t\ttype: this.type,\r\n    \t\t\tmaterials: []\r\n    \t\t};\r\n\r\n    \t\tvar materials = this.materials;\r\n\r\n    \t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar material = materials[ i ].toJSON( meta );\r\n    \t\t\tdelete material.metadata;\r\n\r\n    \t\t\toutput.materials.push( material );\r\n\r\n    \t\t}\r\n\r\n    \t\toutput.visible = this.visible;\r\n\r\n    \t\treturn output;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\tvar material = new this.constructor();\r\n\r\n    \t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n    \t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n    \t\t}\r\n\r\n    \t\tmaterial.visible = this.visible;\r\n\r\n    \t\treturn material;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     *\r\n     * parameters = {\r\n     *  color: <hex>,\r\n     *  roughness: <float>,\r\n     *  metalness: <float>,\r\n     *  opacity: <float>,\r\n     *\r\n     *  map: new THREE.Texture( <Image> ),\r\n     *\r\n     *  lightMap: new THREE.Texture( <Image> ),\r\n     *  lightMapIntensity: <float>\r\n     *\r\n     *  aoMap: new THREE.Texture( <Image> ),\r\n     *  aoMapIntensity: <float>\r\n     *\r\n     *  emissive: <hex>,\r\n     *  emissiveIntensity: <float>\r\n     *  emissiveMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  bumpMap: new THREE.Texture( <Image> ),\r\n     *  bumpScale: <float>,\r\n     *\r\n     *  normalMap: new THREE.Texture( <Image> ),\r\n     *  normalScale: <Vector2>,\r\n     *\r\n     *  displacementMap: new THREE.Texture( <Image> ),\r\n     *  displacementScale: <float>,\r\n     *  displacementBias: <float>,\r\n     *\r\n     *  roughnessMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  metalnessMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  alphaMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n     *  envMapIntensity: <float>\r\n     *\r\n     *  refractionRatio: <float>,\r\n     *\r\n     *  wireframe: <boolean>,\r\n     *  wireframeLinewidth: <float>,\r\n     *\r\n     *  skinning: <bool>,\r\n     *  morphTargets: <bool>,\r\n     *  morphNormals: <bool>\r\n     * }\r\n     */\r\n\r\n    function MeshStandardMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.defines = { 'STANDARD': '' };\r\n\r\n    \tthis.type = 'MeshStandardMaterial';\r\n\r\n    \tthis.color = new Color( 0xffffff ); // diffuse\r\n    \tthis.roughness = 0.5;\r\n    \tthis.metalness = 0.5;\r\n\r\n    \tthis.map = null;\r\n\r\n    \tthis.lightMap = null;\r\n    \tthis.lightMapIntensity = 1.0;\r\n\r\n    \tthis.aoMap = null;\r\n    \tthis.aoMapIntensity = 1.0;\r\n\r\n    \tthis.emissive = new Color( 0x000000 );\r\n    \tthis.emissiveIntensity = 1.0;\r\n    \tthis.emissiveMap = null;\r\n\r\n    \tthis.bumpMap = null;\r\n    \tthis.bumpScale = 1;\r\n\r\n    \tthis.normalMap = null;\r\n    \tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n    \tthis.displacementMap = null;\r\n    \tthis.displacementScale = 1;\r\n    \tthis.displacementBias = 0;\r\n\r\n    \tthis.roughnessMap = null;\r\n\r\n    \tthis.metalnessMap = null;\r\n\r\n    \tthis.alphaMap = null;\r\n\r\n    \tthis.envMap = null;\r\n    \tthis.envMapIntensity = 1.0;\r\n\r\n    \tthis.refractionRatio = 0.98;\r\n\r\n    \tthis.wireframe = false;\r\n    \tthis.wireframeLinewidth = 1;\r\n    \tthis.wireframeLinecap = 'round';\r\n    \tthis.wireframeLinejoin = 'round';\r\n\r\n    \tthis.skinning = false;\r\n    \tthis.morphTargets = false;\r\n    \tthis.morphNormals = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    MeshStandardMaterial.prototype = Object.create( Material.prototype );\r\n    MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\r\n\r\n    MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\r\n\r\n    MeshStandardMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.defines = { 'STANDARD': '' };\r\n\r\n    \tthis.color.copy( source.color );\r\n    \tthis.roughness = source.roughness;\r\n    \tthis.metalness = source.metalness;\r\n\r\n    \tthis.map = source.map;\r\n\r\n    \tthis.lightMap = source.lightMap;\r\n    \tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n    \tthis.aoMap = source.aoMap;\r\n    \tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n    \tthis.emissive.copy( source.emissive );\r\n    \tthis.emissiveMap = source.emissiveMap;\r\n    \tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n    \tthis.bumpMap = source.bumpMap;\r\n    \tthis.bumpScale = source.bumpScale;\r\n\r\n    \tthis.normalMap = source.normalMap;\r\n    \tthis.normalScale.copy( source.normalScale );\r\n\r\n    \tthis.displacementMap = source.displacementMap;\r\n    \tthis.displacementScale = source.displacementScale;\r\n    \tthis.displacementBias = source.displacementBias;\r\n\r\n    \tthis.roughnessMap = source.roughnessMap;\r\n\r\n    \tthis.metalnessMap = source.metalnessMap;\r\n\r\n    \tthis.alphaMap = source.alphaMap;\r\n\r\n    \tthis.envMap = source.envMap;\r\n    \tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n    \tthis.refractionRatio = source.refractionRatio;\r\n\r\n    \tthis.wireframe = source.wireframe;\r\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n    \tthis.wireframeLinecap = source.wireframeLinecap;\r\n    \tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n    \tthis.skinning = source.skinning;\r\n    \tthis.morphTargets = source.morphTargets;\r\n    \tthis.morphNormals = source.morphNormals;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     *\r\n     * parameters = {\r\n     *  reflectivity: <float>\r\n     * }\r\n     */\r\n\r\n    function MeshPhysicalMaterial( parameters ) {\r\n\r\n    \tMeshStandardMaterial.call( this );\r\n\r\n    \tthis.defines = { 'PHYSICAL': '' };\r\n\r\n    \tthis.type = 'MeshPhysicalMaterial';\r\n\r\n    \tthis.reflectivity = 0.5; // maps to F0 = 0.04\r\n\r\n    \tthis.clearCoat = 0.0;\r\n    \tthis.clearCoatRoughness = 0.0;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\r\n    MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\r\n\r\n    MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\r\n\r\n    MeshPhysicalMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMeshStandardMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.defines = { 'PHYSICAL': '' };\r\n\r\n    \tthis.reflectivity = source.reflectivity;\r\n\r\n    \tthis.clearCoat = source.clearCoat;\r\n    \tthis.clearCoatRoughness = source.clearCoatRoughness;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * parameters = {\r\n     *  color: <hex>,\r\n     *  specular: <hex>,\r\n     *  shininess: <float>,\r\n     *  opacity: <float>,\r\n     *\r\n     *  map: new THREE.Texture( <Image> ),\r\n     *\r\n     *  lightMap: new THREE.Texture( <Image> ),\r\n     *  lightMapIntensity: <float>\r\n     *\r\n     *  aoMap: new THREE.Texture( <Image> ),\r\n     *  aoMapIntensity: <float>\r\n     *\r\n     *  emissive: <hex>,\r\n     *  emissiveIntensity: <float>\r\n     *  emissiveMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  bumpMap: new THREE.Texture( <Image> ),\r\n     *  bumpScale: <float>,\r\n     *\r\n     *  normalMap: new THREE.Texture( <Image> ),\r\n     *  normalScale: <Vector2>,\r\n     *\r\n     *  displacementMap: new THREE.Texture( <Image> ),\r\n     *  displacementScale: <float>,\r\n     *  displacementBias: <float>,\r\n     *\r\n     *  specularMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  alphaMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n     *  combine: THREE.Multiply,\r\n     *  reflectivity: <float>,\r\n     *  refractionRatio: <float>,\r\n     *\r\n     *  wireframe: <boolean>,\r\n     *  wireframeLinewidth: <float>,\r\n     *\r\n     *  skinning: <bool>,\r\n     *  morphTargets: <bool>,\r\n     *  morphNormals: <bool>\r\n     * }\r\n     */\r\n\r\n    function MeshPhongMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'MeshPhongMaterial';\r\n\r\n    \tthis.color = new Color( 0xffffff ); // diffuse\r\n    \tthis.specular = new Color( 0x111111 );\r\n    \tthis.shininess = 30;\r\n\r\n    \tthis.map = null;\r\n\r\n    \tthis.lightMap = null;\r\n    \tthis.lightMapIntensity = 1.0;\r\n\r\n    \tthis.aoMap = null;\r\n    \tthis.aoMapIntensity = 1.0;\r\n\r\n    \tthis.emissive = new Color( 0x000000 );\r\n    \tthis.emissiveIntensity = 1.0;\r\n    \tthis.emissiveMap = null;\r\n\r\n    \tthis.bumpMap = null;\r\n    \tthis.bumpScale = 1;\r\n\r\n    \tthis.normalMap = null;\r\n    \tthis.normalScale = new Vector2( 1, 1 );\r\n\r\n    \tthis.displacementMap = null;\r\n    \tthis.displacementScale = 1;\r\n    \tthis.displacementBias = 0;\r\n\r\n    \tthis.specularMap = null;\r\n\r\n    \tthis.alphaMap = null;\r\n\r\n    \tthis.envMap = null;\r\n    \tthis.combine = MultiplyOperation;\r\n    \tthis.reflectivity = 1;\r\n    \tthis.refractionRatio = 0.98;\r\n\r\n    \tthis.wireframe = false;\r\n    \tthis.wireframeLinewidth = 1;\r\n    \tthis.wireframeLinecap = 'round';\r\n    \tthis.wireframeLinejoin = 'round';\r\n\r\n    \tthis.skinning = false;\r\n    \tthis.morphTargets = false;\r\n    \tthis.morphNormals = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    MeshPhongMaterial.prototype = Object.create( Material.prototype );\r\n    MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\r\n\r\n    MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\r\n\r\n    MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.color.copy( source.color );\r\n    \tthis.specular.copy( source.specular );\r\n    \tthis.shininess = source.shininess;\r\n\r\n    \tthis.map = source.map;\r\n\r\n    \tthis.lightMap = source.lightMap;\r\n    \tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n    \tthis.aoMap = source.aoMap;\r\n    \tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n    \tthis.emissive.copy( source.emissive );\r\n    \tthis.emissiveMap = source.emissiveMap;\r\n    \tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n    \tthis.bumpMap = source.bumpMap;\r\n    \tthis.bumpScale = source.bumpScale;\r\n\r\n    \tthis.normalMap = source.normalMap;\r\n    \tthis.normalScale.copy( source.normalScale );\r\n\r\n    \tthis.displacementMap = source.displacementMap;\r\n    \tthis.displacementScale = source.displacementScale;\r\n    \tthis.displacementBias = source.displacementBias;\r\n\r\n    \tthis.specularMap = source.specularMap;\r\n\r\n    \tthis.alphaMap = source.alphaMap;\r\n\r\n    \tthis.envMap = source.envMap;\r\n    \tthis.combine = source.combine;\r\n    \tthis.reflectivity = source.reflectivity;\r\n    \tthis.refractionRatio = source.refractionRatio;\r\n\r\n    \tthis.wireframe = source.wireframe;\r\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n    \tthis.wireframeLinecap = source.wireframeLinecap;\r\n    \tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n    \tthis.skinning = source.skinning;\r\n    \tthis.morphTargets = source.morphTargets;\r\n    \tthis.morphNormals = source.morphNormals;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     *\r\n     * parameters = {\r\n     *  opacity: <float>,\r\n     *\r\n     *  wireframe: <boolean>,\r\n     *  wireframeLinewidth: <float>\r\n     * }\r\n     */\r\n\r\n    function MeshNormalMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this, parameters );\r\n\r\n    \tthis.type = 'MeshNormalMaterial';\r\n\r\n    \tthis.wireframe = false;\r\n    \tthis.wireframeLinewidth = 1;\r\n\r\n    \tthis.fog = false;\r\n    \tthis.lights = false;\r\n    \tthis.morphTargets = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    MeshNormalMaterial.prototype = Object.create( Material.prototype );\r\n    MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\r\n\r\n    MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\r\n\r\n    MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.wireframe = source.wireframe;\r\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * parameters = {\r\n     *  color: <hex>,\r\n     *  opacity: <float>,\r\n     *\r\n     *  map: new THREE.Texture( <Image> ),\r\n     *\r\n     *  lightMap: new THREE.Texture( <Image> ),\r\n     *  lightMapIntensity: <float>\r\n     *\r\n     *  aoMap: new THREE.Texture( <Image> ),\r\n     *  aoMapIntensity: <float>\r\n     *\r\n     *  emissive: <hex>,\r\n     *  emissiveIntensity: <float>\r\n     *  emissiveMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  specularMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  alphaMap: new THREE.Texture( <Image> ),\r\n     *\r\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n     *  combine: THREE.Multiply,\r\n     *  reflectivity: <float>,\r\n     *  refractionRatio: <float>,\r\n     *\r\n     *  wireframe: <boolean>,\r\n     *  wireframeLinewidth: <float>,\r\n     *\r\n     *  skinning: <bool>,\r\n     *  morphTargets: <bool>,\r\n     *  morphNormals: <bool>\r\n     * }\r\n     */\r\n\r\n    function MeshLambertMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'MeshLambertMaterial';\r\n\r\n    \tthis.color = new Color( 0xffffff ); // diffuse\r\n\r\n    \tthis.map = null;\r\n\r\n    \tthis.lightMap = null;\r\n    \tthis.lightMapIntensity = 1.0;\r\n\r\n    \tthis.aoMap = null;\r\n    \tthis.aoMapIntensity = 1.0;\r\n\r\n    \tthis.emissive = new Color( 0x000000 );\r\n    \tthis.emissiveIntensity = 1.0;\r\n    \tthis.emissiveMap = null;\r\n\r\n    \tthis.specularMap = null;\r\n\r\n    \tthis.alphaMap = null;\r\n\r\n    \tthis.envMap = null;\r\n    \tthis.combine = MultiplyOperation;\r\n    \tthis.reflectivity = 1;\r\n    \tthis.refractionRatio = 0.98;\r\n\r\n    \tthis.wireframe = false;\r\n    \tthis.wireframeLinewidth = 1;\r\n    \tthis.wireframeLinecap = 'round';\r\n    \tthis.wireframeLinejoin = 'round';\r\n\r\n    \tthis.skinning = false;\r\n    \tthis.morphTargets = false;\r\n    \tthis.morphNormals = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    MeshLambertMaterial.prototype = Object.create( Material.prototype );\r\n    MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\r\n\r\n    MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\r\n\r\n    MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.color.copy( source.color );\r\n\r\n    \tthis.map = source.map;\r\n\r\n    \tthis.lightMap = source.lightMap;\r\n    \tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n    \tthis.aoMap = source.aoMap;\r\n    \tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n    \tthis.emissive.copy( source.emissive );\r\n    \tthis.emissiveMap = source.emissiveMap;\r\n    \tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n    \tthis.specularMap = source.specularMap;\r\n\r\n    \tthis.alphaMap = source.alphaMap;\r\n\r\n    \tthis.envMap = source.envMap;\r\n    \tthis.combine = source.combine;\r\n    \tthis.reflectivity = source.reflectivity;\r\n    \tthis.refractionRatio = source.refractionRatio;\r\n\r\n    \tthis.wireframe = source.wireframe;\r\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n    \tthis.wireframeLinecap = source.wireframeLinecap;\r\n    \tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n    \tthis.skinning = source.skinning;\r\n    \tthis.morphTargets = source.morphTargets;\r\n    \tthis.morphNormals = source.morphNormals;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     * parameters = {\r\n     *  color: <hex>,\r\n     *  opacity: <float>,\r\n     *\r\n     *  linewidth: <float>,\r\n     *\r\n     *  scale: <float>,\r\n     *  dashSize: <float>,\r\n     *  gapSize: <float>\r\n     * }\r\n     */\r\n\r\n    function LineDashedMaterial( parameters ) {\r\n\r\n    \tMaterial.call( this );\r\n\r\n    \tthis.type = 'LineDashedMaterial';\r\n\r\n    \tthis.color = new Color( 0xffffff );\r\n\r\n    \tthis.linewidth = 1;\r\n\r\n    \tthis.scale = 1;\r\n    \tthis.dashSize = 3;\r\n    \tthis.gapSize = 1;\r\n\r\n    \tthis.lights = false;\r\n\r\n    \tthis.setValues( parameters );\r\n\r\n    }\r\n\r\n    LineDashedMaterial.prototype = Object.create( Material.prototype );\r\n    LineDashedMaterial.prototype.constructor = LineDashedMaterial;\r\n\r\n    LineDashedMaterial.prototype.isLineDashedMaterial = true;\r\n\r\n    LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n    \tMaterial.prototype.copy.call( this, source );\r\n\r\n    \tthis.color.copy( source.color );\r\n\r\n    \tthis.linewidth = source.linewidth;\r\n\r\n    \tthis.scale = source.scale;\r\n    \tthis.dashSize = source.dashSize;\r\n    \tthis.gapSize = source.gapSize;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n\r\n\r\n    var Materials = Object.freeze({\r\n    \tShadowMaterial: ShadowMaterial,\r\n    \tSpriteMaterial: SpriteMaterial,\r\n    \tRawShaderMaterial: RawShaderMaterial,\r\n    \tShaderMaterial: ShaderMaterial,\r\n    \tPointsMaterial: PointsMaterial,\r\n    \tMultiMaterial: MultiMaterial,\r\n    \tMeshPhysicalMaterial: MeshPhysicalMaterial,\r\n    \tMeshStandardMaterial: MeshStandardMaterial,\r\n    \tMeshPhongMaterial: MeshPhongMaterial,\r\n    \tMeshNormalMaterial: MeshNormalMaterial,\r\n    \tMeshLambertMaterial: MeshLambertMaterial,\r\n    \tMeshDepthMaterial: MeshDepthMaterial,\r\n    \tMeshBasicMaterial: MeshBasicMaterial,\r\n    \tLineDashedMaterial: LineDashedMaterial,\r\n    \tLineBasicMaterial: LineBasicMaterial,\r\n    \tMaterial: Material\r\n    });\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    exports.Cache = {\r\n\r\n    \tenabled: false,\r\n\r\n    \tfiles: {},\r\n\r\n    \tadd: function ( key, file ) {\r\n\r\n    \t\tif ( this.enabled === false ) return;\r\n\r\n    \t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n    \t\tthis.files[ key ] = file;\r\n\r\n    \t},\r\n\r\n    \tget: function ( key ) {\r\n\r\n    \t\tif ( this.enabled === false ) return;\r\n\r\n    \t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n    \t\treturn this.files[ key ];\r\n\r\n    \t},\r\n\r\n    \tremove: function ( key ) {\r\n\r\n    \t\tdelete this.files[ key ];\r\n\r\n    \t},\r\n\r\n    \tclear: function () {\r\n\r\n    \t\tthis.files = {};\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function LoadingManager( onLoad, onProgress, onError ) {\r\n\r\n    \tvar scope = this;\r\n\r\n    \tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n    \tthis.onStart = undefined;\r\n    \tthis.onLoad = onLoad;\r\n    \tthis.onProgress = onProgress;\r\n    \tthis.onError = onError;\r\n\r\n    \tthis.itemStart = function ( url ) {\r\n\r\n    \t\titemsTotal ++;\r\n\r\n    \t\tif ( isLoading === false ) {\r\n\r\n    \t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n    \t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tisLoading = true;\r\n\r\n    \t};\r\n\r\n    \tthis.itemEnd = function ( url ) {\r\n\r\n    \t\titemsLoaded ++;\r\n\r\n    \t\tif ( scope.onProgress !== undefined ) {\r\n\r\n    \t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n    \t\t\tisLoading = false;\r\n\r\n    \t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n    \t\t\t\tscope.onLoad();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    \tthis.itemError = function ( url ) {\r\n\r\n    \t\tif ( scope.onError !== undefined ) {\r\n\r\n    \t\t\tscope.onError( url );\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    exports.DefaultLoadingManager = new LoadingManager();\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function XHRLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    }\r\n\r\n    Object.assign( XHRLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar cached = exports.Cache.get( url );\r\n\r\n    \t\tif ( cached !== undefined ) {\r\n\r\n    \t\t\tscope.manager.itemStart( url );\r\n\r\n    \t\t\tsetTimeout( function () {\r\n\r\n    \t\t\t\tif ( onLoad ) onLoad( cached );\r\n\r\n    \t\t\t\tscope.manager.itemEnd( url );\r\n\r\n    \t\t\t}, 0 );\r\n\r\n    \t\t\treturn cached;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar request = new XMLHttpRequest();\r\n    \t\trequest.open( 'GET', url, true );\r\n\r\n    \t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n    \t\t\tvar response = event.target.response;\r\n\r\n    \t\t\texports.Cache.add( url, response );\r\n\r\n    \t\t\tif ( this.status === 200 ) {\r\n\r\n    \t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n    \t\t\t\tscope.manager.itemEnd( url );\r\n\r\n    \t\t\t} else if ( this.status === 0 ) {\r\n\r\n    \t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n    \t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\r\n\r\n    \t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n    \t\t\t\tscope.manager.itemEnd( url );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tif ( onError ) onError( event );\r\n\r\n    \t\t\t\tscope.manager.itemError( url );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}, false );\r\n\r\n    \t\tif ( onProgress !== undefined ) {\r\n\r\n    \t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n    \t\t\t\tonProgress( event );\r\n\r\n    \t\t\t}, false );\r\n\r\n    \t\t}\r\n\r\n    \t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n    \t\t\tif ( onError ) onError( event );\r\n\r\n    \t\t\tscope.manager.itemError( url );\r\n\r\n    \t\t}, false );\r\n\r\n    \t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n    \t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n    \t\tif ( request.overrideMimeType ) request.overrideMimeType( 'text/plain' );\r\n\r\n    \t\trequest.send( null );\r\n\r\n    \t\tscope.manager.itemStart( url );\r\n\r\n    \t\treturn request;\r\n\r\n    \t},\r\n\r\n    \tsetPath: function ( value ) {\r\n\r\n    \t\tthis.path = value;\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetResponseType: function ( value ) {\r\n\r\n    \t\tthis.responseType = value;\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetWithCredentials: function ( value ) {\r\n\r\n    \t\tthis.withCredentials = value;\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     *\r\n     * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n     */\r\n\r\n    function CompressedTextureLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    \t// override in sub classes\r\n    \tthis._parser = null;\r\n\r\n    }\r\n\r\n    Object.assign( CompressedTextureLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar images = [];\r\n\r\n    \t\tvar texture = new CompressedTexture();\r\n    \t\ttexture.image = images;\r\n\r\n    \t\tvar loader = new XHRLoader( this.manager );\r\n    \t\tloader.setPath( this.path );\r\n    \t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n    \t\tfunction loadTexture( i ) {\r\n\r\n    \t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n    \t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n    \t\t\t\timages[ i ] = {\r\n    \t\t\t\t\twidth: texDatas.width,\r\n    \t\t\t\t\theight: texDatas.height,\r\n    \t\t\t\t\tformat: texDatas.format,\r\n    \t\t\t\t\tmipmaps: texDatas.mipmaps\r\n    \t\t\t\t};\r\n\r\n    \t\t\t\tloaded += 1;\r\n\r\n    \t\t\t\tif ( loaded === 6 ) {\r\n\r\n    \t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n    \t\t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n    \t\t\t\t\ttexture.format = texDatas.format;\r\n    \t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n    \t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}, onProgress, onError );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( Array.isArray( url ) ) {\r\n\r\n    \t\t\tvar loaded = 0;\r\n\r\n    \t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n    \t\t\t\tloadTexture( i );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n    \t\t\tloader.load( url, function ( buffer ) {\r\n\r\n    \t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n    \t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n    \t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n    \t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n    \t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n    \t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n    \t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n    \t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n    \t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\ttexture.image.width = texDatas.width;\r\n    \t\t\t\t\ttexture.image.height = texDatas.height;\r\n    \t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n    \t\t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\ttexture.format = texDatas.format;\r\n    \t\t\t\ttexture.needsUpdate = true;\r\n\r\n    \t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n    \t\t\t}, onProgress, onError );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn texture;\r\n\r\n    \t},\r\n\r\n    \tsetPath: function ( value ) {\r\n\r\n    \t\tthis.path = value;\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author Nikos M. / https://github.com/foo123/\r\n     *\r\n     * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n     */\r\n\r\n    var DataTextureLoader = BinaryTextureLoader;\r\n    function BinaryTextureLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    \t// override in sub classes\r\n    \tthis._parser = null;\r\n\r\n    }\r\n\r\n    Object.assign( BinaryTextureLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar texture = new DataTexture();\r\n\r\n    \t\tvar loader = new XHRLoader( this.manager );\r\n    \t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n    \t\tloader.load( url, function ( buffer ) {\r\n\r\n    \t\t\tvar texData = scope._parser( buffer );\r\n\r\n    \t\t\tif ( ! texData ) return;\r\n\r\n    \t\t\tif ( undefined !== texData.image ) {\r\n\r\n    \t\t\t\ttexture.image = texData.image;\r\n\r\n    \t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n    \t\t\t\ttexture.image.width = texData.width;\r\n    \t\t\t\ttexture.image.height = texData.height;\r\n    \t\t\t\ttexture.image.data = texData.data;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\r\n    \t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\r\n\r\n    \t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\r\n    \t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\r\n\r\n    \t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n    \t\t\tif ( undefined !== texData.format ) {\r\n\r\n    \t\t\t\ttexture.format = texData.format;\r\n\r\n    \t\t\t}\r\n    \t\t\tif ( undefined !== texData.type ) {\r\n\r\n    \t\t\t\ttexture.type = texData.type;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n    \t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n    \t\t\t\ttexture.minFilter = LinearFilter;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\ttexture.needsUpdate = true;\r\n\r\n    \t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n    \t\t}, onProgress, onError );\r\n\r\n\r\n    \t\treturn texture;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function ImageLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    }\r\n\r\n    Object.assign( ImageLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\r\n    \t\timage.onload = function () {\r\n\r\n    \t\t\timage.onload = null;\r\n\r\n    \t\t\tURL.revokeObjectURL( image.src );\r\n\r\n    \t\t\tif ( onLoad ) onLoad( image );\r\n\r\n    \t\t\tscope.manager.itemEnd( url );\r\n\r\n    \t\t};\r\n\r\n    \t\tif ( url.indexOf( 'data:' ) === 0 ) {\r\n\r\n    \t\t\timage.src = url;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tvar loader = new XHRLoader();\r\n    \t\t\tloader.setPath( this.path );\r\n    \t\t\tloader.setResponseType( 'blob' );\r\n    \t\t\tloader.setWithCredentials( this.withCredentials );\r\n    \t\t\tloader.load( url, function ( blob ) {\r\n\r\n    \t\t\t\timage.src = URL.createObjectURL( blob );\r\n\r\n    \t\t\t}, onProgress, onError );\r\n\r\n    \t\t}\r\n\r\n    \t\tscope.manager.itemStart( url );\r\n\r\n    \t\treturn image;\r\n\r\n    \t},\r\n\r\n    \tsetCrossOrigin: function ( value ) {\r\n\r\n    \t\tthis.crossOrigin = value;\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetWithCredentials: function ( value ) {\r\n\r\n    \t\tthis.withCredentials = value;\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetPath: function ( value ) {\r\n\r\n    \t\tthis.path = value;\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function CubeTextureLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    }\r\n\r\n    Object.assign( CubeTextureLoader.prototype, {\r\n\r\n    \tload: function ( urls, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar texture = new CubeTexture();\r\n\r\n    \t\tvar loader = new ImageLoader( this.manager );\r\n    \t\tloader.setCrossOrigin( this.crossOrigin );\r\n    \t\tloader.setPath( this.path );\r\n\r\n    \t\tvar loaded = 0;\r\n\r\n    \t\tfunction loadTexture( i ) {\r\n\r\n    \t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n    \t\t\t\ttexture.images[ i ] = image;\r\n\r\n    \t\t\t\tloaded ++;\r\n\r\n    \t\t\t\tif ( loaded === 6 ) {\r\n\r\n    \t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n    \t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}, undefined, onError );\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\r\n    \t\t\tloadTexture( i );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn texture;\r\n\r\n    \t},\r\n\r\n    \tsetCrossOrigin: function ( value ) {\r\n\r\n    \t\tthis.crossOrigin = value;\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetPath: function ( value ) {\r\n\r\n    \t\tthis.path = value;\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function TextureLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    }\r\n\r\n    Object.assign( TextureLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar texture = new Texture();\r\n\r\n    \t\tvar loader = new ImageLoader( this.manager );\r\n    \t\tloader.setCrossOrigin( this.crossOrigin );\r\n    \t\tloader.setWithCredentials( this.withCredentials );\r\n    \t\tloader.setPath( this.path );\r\n    \t\tloader.load( url, function ( image ) {\r\n\r\n    \t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\r\n    \t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\r\n\r\n    \t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\r\n    \t\t\ttexture.image = image;\r\n    \t\t\ttexture.needsUpdate = true;\r\n\r\n    \t\t\tif ( onLoad !== undefined ) {\r\n\r\n    \t\t\t\tonLoad( texture );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}, onProgress, onError );\r\n\r\n    \t\treturn texture;\r\n\r\n    \t},\r\n\r\n    \tsetCrossOrigin: function ( value ) {\r\n\r\n    \t\tthis.crossOrigin = value;\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetWithCredentials: function ( value ) {\r\n\r\n    \t\tthis.withCredentials = value;\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetPath: function ( value ) {\r\n\r\n    \t\tthis.path = value;\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Light( color, intensity ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Light';\r\n\r\n    \tthis.color = new Color( color );\r\n    \tthis.intensity = intensity !== undefined ? intensity : 1;\r\n\r\n    \tthis.receiveShadow = undefined;\r\n\r\n    }\r\n\r\n    Light.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: Light,\r\n\r\n    \tisLight: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tObject3D.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.color.copy( source.color );\r\n    \t\tthis.intensity = source.intensity;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function ( meta ) {\r\n\r\n    \t\tvar data = Object3D.prototype.toJSON.call( this, meta );\r\n\r\n    \t\tdata.object.color = this.color.getHex();\r\n    \t\tdata.object.intensity = this.intensity;\r\n\r\n    \t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n    \t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n    \t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n    \t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n    \t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n    \t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\r\n\r\n    \t\treturn data;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function HemisphereLight( skyColor, groundColor, intensity ) {\r\n\r\n    \tLight.call( this, skyColor, intensity );\r\n\r\n    \tthis.type = 'HemisphereLight';\r\n\r\n    \tthis.castShadow = undefined;\r\n\r\n    \tthis.position.copy( Object3D.DefaultUp );\r\n    \tthis.updateMatrix();\r\n\r\n    \tthis.groundColor = new Color( groundColor );\r\n\r\n    }\r\n\r\n    HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n    \tconstructor: HemisphereLight,\r\n\r\n    \tisHemisphereLight: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tLight.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.groundColor.copy( source.groundColor );\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function LightShadow( camera ) {\r\n\r\n    \tthis.camera = camera;\r\n\r\n    \tthis.bias = 0;\r\n    \tthis.radius = 1;\r\n\r\n    \tthis.mapSize = new Vector2( 512, 512 );\r\n\r\n    \tthis.map = null;\r\n    \tthis.matrix = new Matrix4();\r\n\r\n    }\r\n\r\n    Object.assign( LightShadow.prototype, {\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tthis.camera = source.camera.clone();\r\n\r\n    \t\tthis.bias = source.bias;\r\n    \t\tthis.radius = source.radius;\r\n\r\n    \t\tthis.mapSize.copy( source.mapSize );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function () {\r\n\r\n    \t\tvar object = {};\r\n\r\n    \t\tif ( this.bias !== 0 ) object.bias = this.bias;\r\n    \t\tif ( this.radius !== 1 ) object.radius = this.radius;\r\n    \t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\r\n\r\n    \t\tobject.camera = this.camera.toJSON( false ).object;\r\n    \t\tdelete object.camera.matrix;\r\n\r\n    \t\treturn object;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function SpotLightShadow() {\r\n\r\n    \tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n    }\r\n\r\n    SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\r\n\r\n    \tconstructor: SpotLightShadow,\r\n\r\n    \tisSpotLightShadow: true,\r\n\r\n    \tupdate: function ( light ) {\r\n\r\n    \t\tvar fov = exports.Math.RAD2DEG * 2 * light.angle;\r\n    \t\tvar aspect = this.mapSize.width / this.mapSize.height;\r\n    \t\tvar far = light.distance || 500;\r\n\r\n    \t\tvar camera = this.camera;\r\n\r\n    \t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n    \t\t\tcamera.fov = fov;\r\n    \t\t\tcamera.aspect = aspect;\r\n    \t\t\tcamera.far = far;\r\n    \t\t\tcamera.updateProjectionMatrix();\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function SpotLight( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n    \tLight.call( this, color, intensity );\r\n\r\n    \tthis.type = 'SpotLight';\r\n\r\n    \tthis.position.copy( Object3D.DefaultUp );\r\n    \tthis.updateMatrix();\r\n\r\n    \tthis.target = new Object3D();\r\n\r\n    \tObject.defineProperty( this, 'power', {\r\n    \t\tget: function () {\r\n    \t\t\t// intensity = power per solid angle.\r\n    \t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n    \t\t\treturn this.intensity * Math.PI;\r\n    \t\t},\r\n    \t\tset: function ( power ) {\r\n    \t\t\t// intensity = power per solid angle.\r\n    \t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n    \t\t\tthis.intensity = power / Math.PI;\r\n    \t\t}\r\n    \t} );\r\n\r\n    \tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n    \tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n    \tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\r\n    \tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n    \tthis.shadow = new SpotLightShadow();\r\n\r\n    }\r\n\r\n    SpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n    \tconstructor: SpotLight,\r\n\r\n    \tisSpotLight: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tLight.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.distance = source.distance;\r\n    \t\tthis.angle = source.angle;\r\n    \t\tthis.penumbra = source.penumbra;\r\n    \t\tthis.decay = source.decay;\r\n\r\n    \t\tthis.target = source.target.clone();\r\n\r\n    \t\tthis.shadow = source.shadow.clone();\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n\r\n    function PointLight( color, intensity, distance, decay ) {\r\n\r\n    \tLight.call( this, color, intensity );\r\n\r\n    \tthis.type = 'PointLight';\r\n\r\n    \tObject.defineProperty( this, 'power', {\r\n    \t\tget: function () {\r\n    \t\t\t// intensity = power per solid angle.\r\n    \t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n    \t\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n    \t\t},\r\n    \t\tset: function ( power ) {\r\n    \t\t\t// intensity = power per solid angle.\r\n    \t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n    \t\t\tthis.intensity = power / ( 4 * Math.PI );\r\n    \t\t}\r\n    \t} );\r\n\r\n    \tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n    \tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n    \tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n    }\r\n\r\n    PointLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n    \tconstructor: PointLight,\r\n\r\n    \tisPointLight: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tLight.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.distance = source.distance;\r\n    \t\tthis.decay = source.decay;\r\n\r\n    \t\tthis.shadow = source.shadow.clone();\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function DirectionalLightShadow( light ) {\r\n\r\n    \tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n    }\r\n\r\n    DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\r\n\r\n    \tconstructor: DirectionalLightShadow\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function DirectionalLight( color, intensity ) {\r\n\r\n    \tLight.call( this, color, intensity );\r\n\r\n    \tthis.type = 'DirectionalLight';\r\n\r\n    \tthis.position.copy( Object3D.DefaultUp );\r\n    \tthis.updateMatrix();\r\n\r\n    \tthis.target = new Object3D();\r\n\r\n    \tthis.shadow = new DirectionalLightShadow();\r\n\r\n    }\r\n\r\n    DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n    \tconstructor: DirectionalLight,\r\n\r\n    \tisDirectionalLight: true,\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tLight.prototype.copy.call( this, source );\r\n\r\n    \t\tthis.target = source.target.clone();\r\n\r\n    \t\tthis.shadow = source.shadow.clone();\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function AmbientLight( color, intensity ) {\r\n\r\n    \tLight.call( this, color, intensity );\r\n\r\n    \tthis.type = 'AmbientLight';\r\n\r\n    \tthis.castShadow = undefined;\r\n\r\n    }\r\n\r\n    AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\r\n\r\n    \tconstructor: AmbientLight,\r\n\r\n    \tisAmbientLight: true,\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author tschw\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     */\r\n\r\n    exports.AnimationUtils = {\r\n\r\n    \t// same as Array.prototype.slice, but also works on typed arrays\r\n    \tarraySlice: function( array, from, to ) {\r\n\r\n    \t\tif ( exports.AnimationUtils.isTypedArray( array ) ) {\r\n\r\n    \t\t\treturn new array.constructor( array.subarray( from, to ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn array.slice( from, to );\r\n\r\n    \t},\r\n\r\n    \t// converts an array to a specific type\r\n    \tconvertArray: function( array, type, forceClone ) {\r\n\r\n    \t\tif ( ! array || // let 'undefined' and 'null' pass\r\n    \t\t\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n    \t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n    \t\t\treturn new type( array ); // create typed array\r\n\r\n    \t\t}\r\n\r\n    \t\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n    \t},\r\n\r\n    \tisTypedArray: function( object ) {\r\n\r\n    \t\treturn ArrayBuffer.isView( object ) &&\r\n    \t\t\t\t! ( object instanceof DataView );\r\n\r\n    \t},\r\n\r\n    \t// returns an array by which times and values can be sorted\r\n    \tgetKeyframeOrder: function( times ) {\r\n\r\n    \t\tfunction compareTime( i, j ) {\r\n\r\n    \t\t\treturn times[ i ] - times[ j ];\r\n\r\n    \t\t}\r\n\r\n    \t\tvar n = times.length;\r\n    \t\tvar result = new Array( n );\r\n    \t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n    \t\tresult.sort( compareTime );\r\n\r\n    \t\treturn result;\r\n\r\n    \t},\r\n\r\n    \t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n    \tsortedArray: function( values, stride, order ) {\r\n\r\n    \t\tvar nValues = values.length;\r\n    \t\tvar result = new values.constructor( nValues );\r\n\r\n    \t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n    \t\t\tvar srcOffset = order[ i ] * stride;\r\n\r\n    \t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n    \t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result;\r\n\r\n    \t},\r\n\r\n    \t// function for parsing AOS keyframe formats\r\n    \tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n    \t\tvar i = 1, key = jsonKeys[ 0 ];\r\n\r\n    \t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n    \t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( key === undefined ) return; // no data\r\n\r\n    \t\tvar value = key[ valuePropertyName ];\r\n    \t\tif ( value === undefined ) return; // no data\r\n\r\n    \t\tif ( Array.isArray( value ) ) {\r\n\r\n    \t\t\tdo {\r\n\r\n    \t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n    \t\t\t\tif ( value !== undefined ) {\r\n\r\n    \t\t\t\t\ttimes.push( key.time );\r\n    \t\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n    \t\t\t} while ( key !== undefined );\r\n\r\n    \t\t} else if ( value.toArray !== undefined ) {\r\n    \t\t\t// ...assume THREE.Math-ish\r\n\r\n    \t\t\tdo {\r\n\r\n    \t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n    \t\t\t\tif ( value !== undefined ) {\r\n\r\n    \t\t\t\t\ttimes.push( key.time );\r\n    \t\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n    \t\t\t} while ( key !== undefined );\r\n\r\n    \t\t} else {\r\n    \t\t\t// otherwise push as-is\r\n\r\n    \t\t\tdo {\r\n\r\n    \t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n    \t\t\t\tif ( value !== undefined ) {\r\n\r\n    \t\t\t\t\ttimes.push( key.time );\r\n    \t\t\t\t\tvalues.push( value );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n    \t\t\t} while ( key !== undefined );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * Abstract base class of interpolants over parametric samples.\r\n     *\r\n     * The parameter domain is one dimensional, typically the time or a path\r\n     * along a curve defined by the data.\r\n     *\r\n     * The sample values can have any dimensionality and derived classes may\r\n     * apply special interpretations to the data.\r\n     *\r\n     * This class provides the interval seek in a Template Method, deferring\r\n     * the actual interpolation to derived classes.\r\n     *\r\n     * Time complexity is O(1) for linear access crossing at most two points\r\n     * and O(log N) for random access, where N is the number of positions.\r\n     *\r\n     * References:\r\n     *\r\n     * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n     *\r\n     * @author tschw\r\n     */\r\n\r\n    function Interpolant(\r\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n    \tthis.parameterPositions = parameterPositions;\r\n    \tthis._cachedIndex = 0;\r\n\r\n    \tthis.resultBuffer = resultBuffer !== undefined ?\r\n    \t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n    \tthis.sampleValues = sampleValues;\r\n    \tthis.valueSize = sampleSize;\r\n\r\n    }\r\n\r\n    Interpolant.prototype = {\r\n\r\n    \tconstructor: Interpolant,\r\n\r\n    \tevaluate: function( t ) {\r\n\r\n    \t\tvar pp = this.parameterPositions,\r\n    \t\t\ti1 = this._cachedIndex,\r\n\r\n    \t\t\tt1 = pp[   i1   ],\r\n    \t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n    \t\tvalidate_interval: {\r\n\r\n    \t\t\tseek: {\r\n\r\n    \t\t\t\tvar right;\r\n\r\n    \t\t\t\tlinear_scan: {\r\n    //- See http://jsperf.com/comparison-to-undefined/3\r\n    //- slower code:\r\n    //-\r\n    //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n    \t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n    \t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\r\n\r\n    \t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n    \t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n    \t\t\t\t\t\t\t\t// after end\r\n\r\n    \t\t\t\t\t\t\t\ti1 = pp.length;\r\n    \t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n    \t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n    \t\t\t\t\t\t\tt0 = t1;\r\n    \t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n    \t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n    \t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n    \t\t\t\t\t\t\t\tbreak seek;\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t// prepare binary search on the right side of the index\r\n    \t\t\t\t\t\tright = pp.length;\r\n    \t\t\t\t\t\tbreak linear_scan;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    //- slower code:\r\n    //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n    \t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n    \t\t\t\t\t\t// looping?\r\n\r\n    \t\t\t\t\t\tvar t1global = pp[ 1 ];\r\n\r\n    \t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n    \t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n    \t\t\t\t\t\t\tt0 = t1global;\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t// linear reverse scan\r\n\r\n    \t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\r\n\r\n    \t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n    \t\t\t\t\t\t\t\t// before start\r\n\r\n    \t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n    \t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n    \t\t\t\t\t\t\tt1 = t0;\r\n    \t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n    \t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n    \t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n    \t\t\t\t\t\t\t\tbreak seek;\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t// prepare binary search on the left side of the index\r\n    \t\t\t\t\t\tright = i1;\r\n    \t\t\t\t\t\ti1 = 0;\r\n    \t\t\t\t\t\tbreak linear_scan;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\t// the interval is valid\r\n\r\n    \t\t\t\t\tbreak validate_interval;\r\n\r\n    \t\t\t\t} // linear scan\r\n\r\n    \t\t\t\t// binary search\r\n\r\n    \t\t\t\twhile ( i1 < right ) {\r\n\r\n    \t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\r\n\r\n    \t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n    \t\t\t\t\t\tright = mid;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\ti1 = mid + 1;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tt1 = pp[   i1   ];\r\n    \t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n    \t\t\t\t// check boundary cases, again\r\n\r\n    \t\t\t\tif ( t0 === undefined ) {\r\n\r\n    \t\t\t\t\tthis._cachedIndex = 0;\r\n    \t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( t1 === undefined ) {\r\n\r\n    \t\t\t\t\ti1 = pp.length;\r\n    \t\t\t\t\tthis._cachedIndex = i1;\r\n    \t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} // seek\r\n\r\n    \t\t\tthis._cachedIndex = i1;\r\n\r\n    \t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n    \t\t} // validate_interval\r\n\r\n    \t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n    \t},\r\n\r\n    \tsettings: null, // optional, subclass-specific settings structure\r\n    \t// Note: The indirection allows central control of many interpolants.\r\n\r\n    \t// --- Protected interface\r\n\r\n    \tDefaultSettings_: {},\r\n\r\n    \tgetSettings_: function() {\r\n\r\n    \t\treturn this.settings || this.DefaultSettings_;\r\n\r\n    \t},\r\n\r\n    \tcopySampleValue_: function( index ) {\r\n\r\n    \t\t// copies a sample value to the result buffer\r\n\r\n    \t\tvar result = this.resultBuffer,\r\n    \t\t\tvalues = this.sampleValues,\r\n    \t\t\tstride = this.valueSize,\r\n    \t\t\toffset = index * stride;\r\n\r\n    \t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n    \t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result;\r\n\r\n    \t},\r\n\r\n    \t// Template methods for derived classes:\r\n\r\n    \tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n    \t\tthrow new Error( \"call to abstract method\" );\r\n    \t\t// implementations shall return this.resultBuffer\r\n\r\n    \t},\r\n\r\n    \tintervalChanged_: function( i1, t0, t1 ) {\r\n\r\n    \t\t// empty\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    Object.assign( Interpolant.prototype, {\r\n\r\n    \tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\r\n    \t\tInterpolant.prototype.copySampleValue_,\r\n\r\n    \tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\r\n    \t\tInterpolant.prototype.copySampleValue_\r\n\r\n    } );\r\n\r\n    /**\r\n     * Fast and simple cubic spline interpolant.\r\n     *\r\n     * It was derived from a Hermitian construction setting the first derivative\r\n     * at each sample position to the linear slope between neighboring positions\r\n     * over their parameter interval.\r\n     *\r\n     * @author tschw\r\n     */\r\n\r\n    function CubicInterpolant(\r\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n    \tInterpolant.call(\r\n    \t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n    \tthis._weightPrev = -0;\r\n    \tthis._offsetPrev = -0;\r\n    \tthis._weightNext = -0;\r\n    \tthis._offsetNext = -0;\r\n\r\n    }\r\n\r\n    CubicInterpolant.prototype =\r\n    \t\tObject.assign( Object.create( Interpolant.prototype ), {\r\n\r\n    \tconstructor: CubicInterpolant,\r\n\r\n    \tDefaultSettings_: {\r\n\r\n    \t\tendingStart: \tZeroCurvatureEnding,\r\n    \t\tendingEnd:\t\tZeroCurvatureEnding\r\n\r\n    \t},\r\n\r\n    \tintervalChanged_: function( i1, t0, t1 ) {\r\n\r\n    \t\tvar pp = this.parameterPositions,\r\n    \t\t\tiPrev = i1 - 2,\r\n    \t\t\tiNext = i1 + 1,\r\n\r\n    \t\t\ttPrev = pp[ iPrev ],\r\n    \t\t\ttNext = pp[ iNext ];\r\n\r\n    \t\tif ( tPrev === undefined ) {\r\n\r\n    \t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n    \t\t\t\tcase ZeroSlopeEnding:\r\n\r\n    \t\t\t\t\t// f'(t0) = 0\r\n    \t\t\t\t\tiPrev = i1;\r\n    \t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase WrapAroundEnding:\r\n\r\n    \t\t\t\t\t// use the other end of the curve\r\n    \t\t\t\t\tiPrev = pp.length - 2;\r\n    \t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n    \t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n    \t\t\t\t\tiPrev = i1;\r\n    \t\t\t\t\ttPrev = t1;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( tNext === undefined ) {\r\n\r\n    \t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n    \t\t\t\tcase ZeroSlopeEnding:\r\n\r\n    \t\t\t\t\t// f'(tN) = 0\r\n    \t\t\t\t\tiNext = i1;\r\n    \t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase WrapAroundEnding:\r\n\r\n    \t\t\t\t\t// use the other end of the curve\r\n    \t\t\t\t\tiNext = 1;\r\n    \t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n    \t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n    \t\t\t\t\tiNext = i1 - 1;\r\n    \t\t\t\t\ttNext = t0;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar halfDt = ( t1 - t0 ) * 0.5,\r\n    \t\t\tstride = this.valueSize;\r\n\r\n    \t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n    \t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n    \t\tthis._offsetPrev = iPrev * stride;\r\n    \t\tthis._offsetNext = iNext * stride;\r\n\r\n    \t},\r\n\r\n    \tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n    \t\tvar result = this.resultBuffer,\r\n    \t\t\tvalues = this.sampleValues,\r\n    \t\t\tstride = this.valueSize,\r\n\r\n    \t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n    \t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n    \t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n    \t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n    \t\t\tpp = p * p,\r\n    \t\t\tppp = pp * p;\r\n\r\n    \t\t// evaluate polynomials\r\n\r\n    \t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\r\n    \t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\r\n    \t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\r\n    \t\tvar sN =       wN   * ppp   -           wN      * pp;\r\n\r\n    \t\t// combine data linearly\r\n\r\n    \t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n    \t\t\tresult[ i ] =\r\n    \t\t\t\t\tsP * values[ oP + i ] +\r\n    \t\t\t\t\ts0 * values[ o0 + i ] +\r\n    \t\t\t\t\ts1 * values[ o1 + i ] +\r\n    \t\t\t\t\tsN * values[ oN + i ];\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author tschw\r\n     */\r\n\r\n    function LinearInterpolant(\r\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n    \tInterpolant.call(\r\n    \t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n    }\r\n\r\n    LinearInterpolant.prototype =\r\n    \t\tObject.assign( Object.create( Interpolant.prototype ), {\r\n\r\n    \tconstructor: LinearInterpolant,\r\n\r\n    \tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n    \t\tvar result = this.resultBuffer,\r\n    \t\t\tvalues = this.sampleValues,\r\n    \t\t\tstride = this.valueSize,\r\n\r\n    \t\t\toffset1 = i1 * stride,\r\n    \t\t\toffset0 = offset1 - stride,\r\n\r\n    \t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n    \t\t\tweight0 = 1 - weight1;\r\n\r\n    \t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n    \t\t\tresult[ i ] =\r\n    \t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n    \t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * Interpolant that evaluates to the sample value at the position preceeding\r\n     * the parameter.\r\n     *\r\n     * @author tschw\r\n     */\r\n\r\n    function DiscreteInterpolant(\r\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n    \tInterpolant.call(\r\n    \t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n    }\r\n\r\n    DiscreteInterpolant.prototype =\r\n    \t\tObject.assign( Object.create( Interpolant.prototype ), {\r\n\r\n    \tconstructor: DiscreteInterpolant,\r\n\r\n    \tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n    \t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    var KeyframeTrackPrototype;\r\n\r\n    KeyframeTrackPrototype = {\r\n\r\n    \tTimeBufferType: Float32Array,\r\n    \tValueBufferType: Float32Array,\r\n\r\n    \tDefaultInterpolation: InterpolateLinear,\r\n\r\n    \tInterpolantFactoryMethodDiscrete: function( result ) {\r\n\r\n    \t\treturn new DiscreteInterpolant(\r\n    \t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n    \t},\r\n\r\n    \tInterpolantFactoryMethodLinear: function( result ) {\r\n\r\n    \t\treturn new LinearInterpolant(\r\n    \t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n    \t},\r\n\r\n    \tInterpolantFactoryMethodSmooth: function( result ) {\r\n\r\n    \t\treturn new CubicInterpolant(\r\n    \t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n    \t},\r\n\r\n    \tsetInterpolation: function( interpolation ) {\r\n\r\n    \t\tvar factoryMethod;\r\n\r\n    \t\tswitch ( interpolation ) {\r\n\r\n    \t\t\tcase InterpolateDiscrete:\r\n\r\n    \t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\tcase InterpolateLinear:\r\n\r\n    \t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\tcase InterpolateSmooth:\r\n\r\n    \t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( factoryMethod === undefined ) {\r\n\r\n    \t\t\tvar message = \"unsupported interpolation for \" +\r\n    \t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\r\n\r\n    \t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n    \t\t\t\t// fall back to default, unless the default itself is messed up\r\n    \t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n    \t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tconsole.warn( message );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.createInterpolant = factoryMethod;\r\n\r\n    \t},\r\n\r\n    \tgetInterpolation: function() {\r\n\r\n    \t\tswitch ( this.createInterpolant ) {\r\n\r\n    \t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n    \t\t\t\treturn InterpolateDiscrete;\r\n\r\n    \t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n    \t\t\t\treturn InterpolateLinear;\r\n\r\n    \t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n    \t\t\t\treturn InterpolateSmooth;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tgetValueSize: function() {\r\n\r\n    \t\treturn this.values.length / this.times.length;\r\n\r\n    \t},\r\n\r\n    \t// move all keyframes either forwards or backwards in time\r\n    \tshift: function( timeOffset ) {\r\n\r\n    \t\tif( timeOffset !== 0.0 ) {\r\n\r\n    \t\t\tvar times = this.times;\r\n\r\n    \t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n    \tscale: function( timeScale ) {\r\n\r\n    \t\tif( timeScale !== 1.0 ) {\r\n\r\n    \t\t\tvar times = this.times;\r\n\r\n    \t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n    \t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n    \ttrim: function( startTime, endTime ) {\r\n\r\n    \t\tvar times = this.times,\r\n    \t\t\tnKeys = times.length,\r\n    \t\t\tfrom = 0,\r\n    \t\t\tto = nKeys - 1;\r\n\r\n    \t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\r\n    \t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\r\n\r\n    \t\t++ to; // inclusive -> exclusive bound\r\n\r\n    \t\tif( from !== 0 || to !== nKeys ) {\r\n\r\n    \t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n    \t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\r\n\r\n    \t\t\tvar stride = this.getValueSize();\r\n    \t\t\tthis.times = exports.AnimationUtils.arraySlice( times, from, to );\r\n    \t\t\tthis.values = exports.AnimationUtils.\r\n    \t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n    \tvalidate: function() {\r\n\r\n    \t\tvar valid = true;\r\n\r\n    \t\tvar valueSize = this.getValueSize();\r\n    \t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n    \t\t\tconsole.error( \"invalid value size in track\", this );\r\n    \t\t\tvalid = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar times = this.times,\r\n    \t\t\tvalues = this.values,\r\n\r\n    \t\t\tnKeys = times.length;\r\n\r\n    \t\tif( nKeys === 0 ) {\r\n\r\n    \t\t\tconsole.error( \"track is empty\", this );\r\n    \t\t\tvalid = false;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar prevTime = null;\r\n\r\n    \t\tfor( var i = 0; i !== nKeys; i ++ ) {\r\n\r\n    \t\t\tvar currTime = times[ i ];\r\n\r\n    \t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n    \t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\r\n    \t\t\t\tvalid = false;\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif( prevTime !== null && prevTime > currTime ) {\r\n\r\n    \t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\r\n    \t\t\t\tvalid = false;\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tprevTime = currTime;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( values !== undefined ) {\r\n\r\n    \t\t\tif ( exports.AnimationUtils.isTypedArray( values ) ) {\r\n\r\n    \t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\t\tvar value = values[ i ];\r\n\r\n    \t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n    \t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\r\n    \t\t\t\t\t\tvalid = false;\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn valid;\r\n\r\n    \t},\r\n\r\n    \t// removes equivalent sequential keys as common in morph target sequences\r\n    \t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n    \toptimize: function() {\r\n\r\n    \t\tvar times = this.times,\r\n    \t\t\tvalues = this.values,\r\n    \t\t\tstride = this.getValueSize(),\r\n\r\n    \t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\r\n\r\n    \t\t\twriteIndex = 1,\r\n    \t\t\tlastIndex = times.length - 1;\r\n\r\n    \t\tfor( var i = 1; i < lastIndex; ++ i ) {\r\n\r\n    \t\t\tvar keep = false;\r\n\r\n    \t\t\tvar time = times[ i ];\r\n    \t\t\tvar timeNext = times[ i + 1 ];\r\n\r\n    \t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n    \t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\r\n\r\n    \t\t\t\tif ( ! smoothInterpolation ) {\r\n\r\n    \t\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\r\n    \t\t\t\t\tvar offset = i * stride,\r\n    \t\t\t\t\t\toffsetP = offset - stride,\r\n    \t\t\t\t\t\toffsetN = offset + stride;\r\n\r\n    \t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n    \t\t\t\t\t\tvar value = values[ offset + j ];\r\n\r\n    \t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n    \t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n    \t\t\t\t\t\t\tkeep = true;\r\n    \t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else keep = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// in-place compaction\r\n\r\n    \t\t\tif ( keep ) {\r\n\r\n    \t\t\t\tif ( i !== writeIndex ) {\r\n\r\n    \t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n    \t\t\t\t\tvar readOffset = i * stride,\r\n    \t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n    \t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\r\n\r\n    \t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t++ writeIndex;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// flush last keyframe (compaction looks ahead)\r\n\r\n    \t\tif ( lastIndex > 0 ) {\r\n\r\n    \t\t\ttimes[ writeIndex ] = times[ lastIndex ];\r\n\r\n    \t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\r\n\r\n    \t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n    \t\t\t++ writeIndex;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( writeIndex !== times.length ) {\r\n\r\n    \t\t\tthis.times = exports.AnimationUtils.arraySlice( times, 0, writeIndex );\r\n    \t\t\tthis.values = exports.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    function KeyframeTrackConstructor( name, times, values, interpolation ) {\r\n\r\n    \tif( name === undefined ) throw new Error( \"track name is undefined\" );\r\n\r\n    \tif( times === undefined || times.length === 0 ) {\r\n\r\n    \t\tthrow new Error( \"no keyframes in track named \" + name );\r\n\r\n    \t}\r\n\r\n    \tthis.name = name;\r\n\r\n    \tthis.times = exports.AnimationUtils.convertArray( times, this.TimeBufferType );\r\n    \tthis.values = exports.AnimationUtils.convertArray( values, this.ValueBufferType );\r\n\r\n    \tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n    \tthis.validate();\r\n    \tthis.optimize();\r\n\r\n    }\r\n\r\n    /**\r\n     *\r\n     * A Track of vectored keyframe values.\r\n     *\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function VectorKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\r\n\r\n    }\r\n\r\n    VectorKeyframeTrack.prototype =\r\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\r\n\r\n    \tconstructor: VectorKeyframeTrack,\r\n\r\n    \tValueTypeName: 'vector'\r\n\r\n    \t// ValueBufferType is inherited\r\n\r\n    \t// DefaultInterpolation is inherited\r\n\r\n    } );\r\n\r\n    /**\r\n     * Spherical linear unit quaternion interpolant.\r\n     *\r\n     * @author tschw\r\n     */\r\n\r\n    function QuaternionLinearInterpolant(\r\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n    \tInterpolant.call(\r\n    \t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n    }\r\n\r\n    QuaternionLinearInterpolant.prototype =\r\n    \t\tObject.assign( Object.create( Interpolant.prototype ), {\r\n\r\n    \tconstructor: QuaternionLinearInterpolant,\r\n\r\n    \tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n    \t\tvar result = this.resultBuffer,\r\n    \t\t\tvalues = this.sampleValues,\r\n    \t\t\tstride = this.valueSize,\r\n\r\n    \t\t\toffset = i1 * stride,\r\n\r\n    \t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n    \t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n    \t\t\tQuaternion.slerpFlat( result, 0,\r\n    \t\t\t\t\tvalues, offset - stride, values, offset, alpha );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn result;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * A Track of quaternion keyframe values.\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function QuaternionKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\r\n\r\n    }\r\n\r\n    QuaternionKeyframeTrack.prototype =\r\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\r\n\r\n    \tconstructor: QuaternionKeyframeTrack,\r\n\r\n    \tValueTypeName: 'quaternion',\r\n\r\n    \t// ValueBufferType is inherited\r\n\r\n    \tDefaultInterpolation: InterpolateLinear,\r\n\r\n    \tInterpolantFactoryMethodLinear: function( result ) {\r\n\r\n    \t\treturn new QuaternionLinearInterpolant(\r\n    \t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n    \t},\r\n\r\n    \tInterpolantFactoryMethodSmooth: undefined // not yet implemented\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * A Track of numeric keyframe values.\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function NumberKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\r\n\r\n    }\r\n\r\n    NumberKeyframeTrack.prototype =\r\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\r\n\r\n    \tconstructor: NumberKeyframeTrack,\r\n\r\n    \tValueTypeName: 'number',\r\n\r\n    \t// ValueBufferType is inherited\r\n\r\n    \t// DefaultInterpolation is inherited\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * A Track that interpolates Strings\r\n     *\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function StringKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\r\n\r\n    }\r\n\r\n    StringKeyframeTrack.prototype =\r\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\r\n\r\n    \tconstructor: StringKeyframeTrack,\r\n\r\n    \tValueTypeName: 'string',\r\n    \tValueBufferType: Array,\r\n\r\n    \tDefaultInterpolation: InterpolateDiscrete,\r\n\r\n    \tInterpolantFactoryMethodLinear: undefined,\r\n\r\n    \tInterpolantFactoryMethodSmooth: undefined\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * A Track of Boolean keyframe values.\r\n     *\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function BooleanKeyframeTrack( name, times, values ) {\r\n\r\n    \tKeyframeTrackConstructor.call( this, name, times, values );\r\n\r\n    }\r\n\r\n    BooleanKeyframeTrack.prototype =\r\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\r\n\r\n    \tconstructor: BooleanKeyframeTrack,\r\n\r\n    \tValueTypeName: 'bool',\r\n    \tValueBufferType: Array,\r\n\r\n    \tDefaultInterpolation: InterpolateDiscrete,\r\n\r\n    \tInterpolantFactoryMethodLinear: undefined,\r\n    \tInterpolantFactoryMethodSmooth: undefined\r\n\r\n    \t// Note: Actually this track could have a optimized / compressed\r\n    \t// representation of a single value and a custom interpolant that\r\n    \t// computes \"firstValue ^ isOdd( index )\".\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * A Track of keyframe values that represent color.\r\n     *\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function ColorKeyframeTrack( name, times, values, interpolation ) {\r\n\r\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\r\n\r\n    }\r\n\r\n    ColorKeyframeTrack.prototype =\r\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\r\n\r\n    \tconstructor: ColorKeyframeTrack,\r\n\r\n    \tValueTypeName: 'color'\r\n\r\n    \t// ValueBufferType is inherited\r\n\r\n    \t// DefaultInterpolation is inherited\r\n\r\n\r\n    \t// Note: Very basic implementation and nothing special yet.\r\n    \t// However, this is the place for color space parameterization.\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * A timed sequence of keyframes for a specific property.\r\n     *\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function KeyframeTrack( name, times, values, interpolation ) {\r\n\r\n    \tKeyframeTrackConstructor.apply( this, arguments );\r\n\r\n    }\r\n\r\n    KeyframeTrack.prototype = KeyframeTrackPrototype;\r\n    KeyframeTrackPrototype.constructor = KeyframeTrack;\r\n\r\n    // Static methods:\r\n\r\n    Object.assign( KeyframeTrack, {\r\n\r\n    \t// Serialization (in static context, because of constructor invocation\r\n    \t// and automatic invocation of .toJSON):\r\n\r\n    \tparse: function( json ) {\r\n\r\n    \t\tif( json.type === undefined ) {\r\n\r\n    \t\t\tthrow new Error( \"track type undefined, can not parse\" );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\r\n\r\n    \t\tif ( json.times === undefined ) {\r\n\r\n    \t\t\tvar times = [], values = [];\r\n\r\n    \t\t\texports.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n\r\n    \t\t\tjson.times = times;\r\n    \t\t\tjson.values = values;\r\n\r\n    \t\t}\r\n\r\n    \t\t// derived classes can define a static parse method\r\n    \t\tif ( trackType.parse !== undefined ) {\r\n\r\n    \t\t\treturn trackType.parse( json );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// by default, we asssume a constructor compatible with the base\r\n    \t\t\treturn new trackType(\r\n    \t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \ttoJSON: function( track ) {\r\n\r\n    \t\tvar trackType = track.constructor;\r\n\r\n    \t\tvar json;\r\n\r\n    \t\t// derived classes can define a static toJSON method\r\n    \t\tif ( trackType.toJSON !== undefined ) {\r\n\r\n    \t\t\tjson = trackType.toJSON( track );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// by default, we assume the data can be serialized as-is\r\n    \t\t\tjson = {\r\n\r\n    \t\t\t\t'name': track.name,\r\n    \t\t\t\t'times': exports.AnimationUtils.convertArray( track.times, Array ),\r\n    \t\t\t\t'values': exports.AnimationUtils.convertArray( track.values, Array )\r\n\r\n    \t\t\t};\r\n\r\n    \t\t\tvar interpolation = track.getInterpolation();\r\n\r\n    \t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n    \t\t\t\tjson.interpolation = interpolation;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n    \t\treturn json;\r\n\r\n    \t},\r\n\r\n    \t_getTrackTypeForValueTypeName: function( typeName ) {\r\n\r\n    \t\tswitch( typeName.toLowerCase() ) {\r\n\r\n    \t\t\tcase \"scalar\":\r\n    \t\t\tcase \"double\":\r\n    \t\t\tcase \"float\":\r\n    \t\t\tcase \"number\":\r\n    \t\t\tcase \"integer\":\r\n\r\n    \t\t\t\treturn NumberKeyframeTrack;\r\n\r\n    \t\t\tcase \"vector\":\r\n    \t\t\tcase \"vector2\":\r\n    \t\t\tcase \"vector3\":\r\n    \t\t\tcase \"vector4\":\r\n\r\n    \t\t\t\treturn VectorKeyframeTrack;\r\n\r\n    \t\t\tcase \"color\":\r\n\r\n    \t\t\t\treturn ColorKeyframeTrack;\r\n\r\n    \t\t\tcase \"quaternion\":\r\n\r\n    \t\t\t\treturn QuaternionKeyframeTrack;\r\n\r\n    \t\t\tcase \"bool\":\r\n    \t\t\tcase \"boolean\":\r\n\r\n    \t\t\t\treturn BooleanKeyframeTrack;\r\n\r\n    \t\t\tcase \"string\":\r\n\r\n    \t\t\t\treturn StringKeyframeTrack;\r\n\r\n    \t\t}\r\n\r\n    \t\tthrow new Error( \"Unsupported typeName: \" + typeName );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * Reusable set of Tracks that represent an animation.\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     */\r\n\r\n    function AnimationClip( name, duration, tracks ) {\r\n\r\n    \tthis.name = name;\r\n    \tthis.tracks = tracks;\r\n    \tthis.duration = ( duration !== undefined ) ? duration : -1;\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \t// this means it should figure out its duration by scanning the tracks\r\n    \tif ( this.duration < 0 ) {\r\n\r\n    \t\tthis.resetDuration();\r\n\r\n    \t}\r\n\r\n    \tthis.optimize();\r\n\r\n    }\r\n\r\n    AnimationClip.prototype = {\r\n\r\n    \tconstructor: AnimationClip,\r\n\r\n    \tresetDuration: function() {\r\n\r\n    \t\tvar tracks = this.tracks,\r\n    \t\t\tduration = 0;\r\n\r\n    \t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tvar track = this.tracks[ i ];\r\n\r\n    \t\t\tduration = Math.max(\r\n    \t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.duration = duration;\r\n\r\n    \t},\r\n\r\n    \ttrim: function() {\r\n\r\n    \t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n    \t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \toptimize: function() {\r\n\r\n    \t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n    \t\t\tthis.tracks[ i ].optimize();\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    // Static methods:\r\n\r\n    Object.assign( AnimationClip, {\r\n\r\n    \tparse: function( json ) {\r\n\r\n    \t\tvar tracks = [],\r\n    \t\t\tjsonTracks = json.tracks,\r\n    \t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n    \t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n    \t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn new AnimationClip( json.name, json.duration, tracks );\r\n\r\n    \t},\r\n\r\n\r\n    \ttoJSON: function( clip ) {\r\n\r\n    \t\tvar tracks = [],\r\n    \t\t\tclipTracks = clip.tracks;\r\n\r\n    \t\tvar json = {\r\n\r\n    \t\t\t'name': clip.name,\r\n    \t\t\t'duration': clip.duration,\r\n    \t\t\t'tracks': tracks\r\n\r\n    \t\t};\r\n\r\n    \t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n    \t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn json;\r\n\r\n    \t},\r\n\r\n\r\n    \tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\r\n\r\n    \t\tvar numMorphTargets = morphTargetSequence.length;\r\n    \t\tvar tracks = [];\r\n\r\n    \t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n    \t\t\tvar times = [];\r\n    \t\t\tvar values = [];\r\n\r\n    \t\t\ttimes.push(\r\n    \t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n    \t\t\t\t\ti,\r\n    \t\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n    \t\t\tvalues.push( 0, 1, 0 );\r\n\r\n    \t\t\tvar order = exports.AnimationUtils.getKeyframeOrder( times );\r\n    \t\t\ttimes = exports.AnimationUtils.sortedArray( times, 1, order );\r\n    \t\t\tvalues = exports.AnimationUtils.sortedArray( values, 1, order );\r\n\r\n    \t\t\t// if there is a key at the first frame, duplicate it as the\r\n    \t\t\t// last frame as well for perfect loop.\r\n    \t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\r\n\r\n    \t\t\t\ttimes.push( numMorphTargets );\r\n    \t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\ttracks.push(\r\n    \t\t\t\t\tnew NumberKeyframeTrack(\r\n    \t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n    \t\t\t\t\t\ttimes, values\r\n    \t\t\t\t\t).scale( 1.0 / fps ) );\r\n    \t\t}\r\n\r\n    \t\treturn new AnimationClip( name, -1, tracks );\r\n\r\n    \t},\r\n\r\n    \tfindByName: function( objectOrClipArray, name ) {\r\n\r\n    \t\tvar clipArray = objectOrClipArray;\r\n\r\n    \t\tif ( ! Array.isArray( objectOrClipArray ) ) {\r\n\r\n    \t\t\tvar o = objectOrClipArray;\r\n    \t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\r\n    \t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n    \t\t\t\treturn clipArray[ i ];\r\n\r\n    \t\t\t}\r\n    \t\t}\r\n\r\n    \t\treturn null;\r\n\r\n    \t},\r\n\r\n    \tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\r\n\r\n    \t\tvar animationToMorphTargets = {};\r\n\r\n    \t\t// tested with https://regex101.com/ on trick sequences\r\n    \t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n    \t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n    \t\t// sort morph target names into animation groups based\r\n    \t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n    \t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n    \t\t\tvar morphTarget = morphTargets[ i ];\r\n    \t\t\tvar parts = morphTarget.name.match( pattern );\r\n\r\n    \t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n    \t\t\t\tvar name = parts[ 1 ];\r\n\r\n    \t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n    \t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n    \t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar clips = [];\r\n\r\n    \t\tfor ( var name in animationToMorphTargets ) {\r\n\r\n    \t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn clips;\r\n\r\n    \t},\r\n\r\n    \t// parse the animation.hierarchy format\r\n    \tparseAnimation: function( animation, bones ) {\r\n\r\n    \t\tif ( ! animation ) {\r\n\r\n    \t\t\tconsole.error( \"  no animation in JSONLoader data\" );\r\n    \t\t\treturn null;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar addNonemptyTrack = function(\r\n    \t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n    \t\t\t// only return track if there are actually keys.\r\n    \t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n    \t\t\t\tvar times = [];\r\n    \t\t\t\tvar values = [];\r\n\r\n    \t\t\t\texports.AnimationUtils.flattenJSON(\r\n    \t\t\t\t\t\tanimationKeys, times, values, propertyName );\r\n\r\n    \t\t\t\t// empty keys are filtered out, so check again\r\n    \t\t\t\tif ( times.length !== 0 ) {\r\n\r\n    \t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t\tvar tracks = [];\r\n\r\n    \t\tvar clipName = animation.name || 'default';\r\n    \t\t// automatic length determination in AnimationClip.\r\n    \t\tvar duration = animation.length || -1;\r\n    \t\tvar fps = animation.fps || 30;\r\n\r\n    \t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\r\n    \t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n    \t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n    \t\t\t// skip empty tracks\r\n    \t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n\r\n    \t\t\t// process morph targets in a way exactly compatible\r\n    \t\t\t// with AnimationHandler.init( animation )\r\n    \t\t\tif ( animationKeys[0].morphTargets ) {\r\n\r\n    \t\t\t\t// figure out all morph targets used in this track\r\n    \t\t\t\tvar morphTargetNames = {};\r\n    \t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n    \t\t\t\t\tif ( animationKeys[k].morphTargets ) {\r\n\r\n    \t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\r\n    \t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\t// create a track for each morph target with all zero\r\n    \t\t\t\t// morphTargetInfluences except for the keys in which\r\n    \t\t\t\t// the morphTarget is named.\r\n    \t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\r\n    \t\t\t\t\tvar times = [];\r\n    \t\t\t\t\tvar values = [];\r\n\r\n    \t\t\t\t\tfor ( var m = 0;\r\n    \t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\r\n\r\n    \t\t\t\t\t\tvar animationKey = animationKeys[k];\r\n\r\n    \t\t\t\t\t\ttimes.push( animationKey.time );\r\n    \t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\ttracks.push( new NumberKeyframeTrack(\r\n    \t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\r\n    \t\t\t} else {\r\n    \t\t\t\t// ...assume skeletal animation\r\n\r\n    \t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n    \t\t\t\taddNonemptyTrack(\r\n    \t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\r\n    \t\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n    \t\t\t\taddNonemptyTrack(\r\n    \t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\r\n    \t\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n    \t\t\t\taddNonemptyTrack(\r\n    \t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\r\n    \t\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( tracks.length === 0 ) {\r\n\r\n    \t\t\treturn null;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar clip = new AnimationClip( clipName, duration, tracks );\r\n\r\n    \t\treturn clip;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function MaterialLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n    \tthis.textures = {};\r\n\r\n    }\r\n\r\n    Object.assign( MaterialLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar loader = new XHRLoader( scope.manager );\r\n    \t\tloader.load( url, function ( text ) {\r\n\r\n    \t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n    \t\t}, onProgress, onError );\r\n\r\n    \t},\r\n\r\n    \tsetTextures: function ( value ) {\r\n\r\n    \t\tthis.textures = value;\r\n\r\n    \t},\r\n\r\n    \tparse: function ( json ) {\r\n\r\n    \t\tvar textures = this.textures;\r\n\r\n    \t\tfunction getTexture( name ) {\r\n\r\n    \t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn textures[ name ];\r\n\r\n    \t\t}\r\n\r\n    \t\tvar material = new Materials[ json.type ]();\r\n\r\n    \t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n    \t\tif ( json.name !== undefined ) material.name = json.name;\r\n    \t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n    \t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n    \t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n    \t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n    \t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n    \t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n    \t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n    \t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n    \t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n    \t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n    \t\tif ( json.fog !== undefined ) material.fog = json.fog;\r\n    \t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n    \t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n    \t\tif ( json.side !== undefined ) material.side = json.side;\r\n    \t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n    \t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n    \t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n    \t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n    \t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n    \t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n    \t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n    \t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n    \t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\r\n    \t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\r\n    \t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\r\n    \t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\r\n\r\n    \t\t// for PointsMaterial\r\n\r\n    \t\tif ( json.size !== undefined ) material.size = json.size;\r\n    \t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n    \t\t// maps\r\n\r\n    \t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\r\n\r\n    \t\tif ( json.alphaMap !== undefined ) {\r\n\r\n    \t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\r\n    \t\t\tmaterial.transparent = true;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\r\n    \t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n    \t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\r\n    \t\tif ( json.normalScale !== undefined ) {\r\n\r\n    \t\t\tvar normalScale = json.normalScale;\r\n\r\n    \t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n    \t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n    \t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\r\n    \t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n    \t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n    \t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\r\n    \t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\r\n\r\n    \t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\r\n    \t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n    \t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\r\n\r\n    \t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\r\n\r\n    \t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\r\n\r\n    \t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\r\n    \t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n    \t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\r\n    \t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n    \t\t// MultiMaterial\r\n\r\n    \t\tif ( json.materials !== undefined ) {\r\n\r\n    \t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn material;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function BufferGeometryLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    }\r\n\r\n    Object.assign( BufferGeometryLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar loader = new XHRLoader( scope.manager );\r\n    \t\tloader.load( url, function ( text ) {\r\n\r\n    \t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n    \t\t}, onProgress, onError );\r\n\r\n    \t},\r\n\r\n    \tparse: function ( json ) {\r\n\r\n    \t\tvar geometry = new BufferGeometry();\r\n\r\n    \t\tvar index = json.data.index;\r\n\r\n    \t\tvar TYPED_ARRAYS = {\r\n    \t\t\t'Int8Array': Int8Array,\r\n    \t\t\t'Uint8Array': Uint8Array,\r\n    \t\t\t'Uint8ClampedArray': Uint8ClampedArray,\r\n    \t\t\t'Int16Array': Int16Array,\r\n    \t\t\t'Uint16Array': Uint16Array,\r\n    \t\t\t'Int32Array': Int32Array,\r\n    \t\t\t'Uint32Array': Uint32Array,\r\n    \t\t\t'Float32Array': Float32Array,\r\n    \t\t\t'Float64Array': Float64Array\r\n    \t\t};\r\n\r\n    \t\tif ( index !== undefined ) {\r\n\r\n    \t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\r\n    \t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar attributes = json.data.attributes;\r\n\r\n    \t\tfor ( var key in attributes ) {\r\n\r\n    \t\t\tvar attribute = attributes[ key ];\r\n    \t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\r\n    \t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n    \t\tif ( groups !== undefined ) {\r\n\r\n    \t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\tvar group = groups[ i ];\r\n\r\n    \t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n    \t\tif ( boundingSphere !== undefined ) {\r\n\r\n    \t\t\tvar center = new Vector3();\r\n\r\n    \t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n    \t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn geometry;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Loader() {\r\n\r\n    \tthis.onLoadStart = function () {};\r\n    \tthis.onLoadProgress = function () {};\r\n    \tthis.onLoadComplete = function () {};\r\n\r\n    }\r\n\r\n    Loader.prototype = {\r\n\r\n    \tconstructor: Loader,\r\n\r\n    \tcrossOrigin: undefined,\r\n\r\n    \textractUrlBase: function ( url ) {\r\n\r\n    \t\tvar parts = url.split( '/' );\r\n\r\n    \t\tif ( parts.length === 1 ) return './';\r\n\r\n    \t\tparts.pop();\r\n\r\n    \t\treturn parts.join( '/' ) + '/';\r\n\r\n    \t},\r\n\r\n    \tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n    \t\tvar array = [];\r\n\r\n    \t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n    \t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn array;\r\n\r\n    \t},\r\n\r\n    \tcreateMaterial: ( function () {\r\n\r\n    \t\tvar color, textureLoader, materialLoader;\r\n\r\n    \t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n    \t\t\tif ( color === undefined ) color = new Color();\r\n    \t\t\tif ( textureLoader === undefined ) textureLoader = new TextureLoader();\r\n    \t\t\tif ( materialLoader === undefined ) materialLoader = new MaterialLoader();\r\n\r\n    \t\t\t// convert from old material format\r\n\r\n    \t\t\tvar textures = {};\r\n\r\n    \t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\r\n    \t\t\t\tvar fullPath = texturePath + path;\r\n    \t\t\t\tvar loader = Loader.Handlers.get( fullPath );\r\n\r\n    \t\t\t\tvar texture;\r\n\r\n    \t\t\t\tif ( loader !== null ) {\r\n\r\n    \t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n    \t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( repeat !== undefined ) {\r\n\r\n    \t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\r\n    \t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\r\n    \t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( offset !== undefined ) {\r\n\r\n    \t\t\t\t\ttexture.offset.fromArray( offset );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( wrap !== undefined ) {\r\n\r\n    \t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\r\n    \t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\r\n\r\n    \t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\r\n    \t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( anisotropy !== undefined ) {\r\n\r\n    \t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tvar uuid = exports.Math.generateUUID();\r\n\r\n    \t\t\t\ttextures[ uuid ] = texture;\r\n\r\n    \t\t\t\treturn uuid;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t//\r\n\r\n    \t\t\tvar json = {\r\n    \t\t\t\tuuid: exports.Math.generateUUID(),\r\n    \t\t\t\ttype: 'MeshLambertMaterial'\r\n    \t\t\t};\r\n\r\n    \t\t\tfor ( var name in m ) {\r\n\r\n    \t\t\t\tvar value = m[ name ];\r\n\r\n    \t\t\t\tswitch ( name ) {\r\n    \t\t\t\t\tcase 'DbgColor':\r\n    \t\t\t\t\tcase 'DbgIndex':\r\n    \t\t\t\t\tcase 'opticalDensity':\r\n    \t\t\t\t\tcase 'illumination':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'DbgName':\r\n    \t\t\t\t\t\tjson.name = value;\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'blending':\r\n    \t\t\t\t\t\tjson.blending = BlendingMode[ value ];\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'colorAmbient':\r\n    \t\t\t\t\tcase 'mapAmbient':\r\n    \t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'colorDiffuse':\r\n    \t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'colorSpecular':\r\n    \t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'colorEmissive':\r\n    \t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'specularCoef':\r\n    \t\t\t\t\t\tjson.shininess = value;\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'shading':\r\n    \t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n    \t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n    \t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapDiffuse':\r\n    \t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapDiffuseRepeat':\r\n    \t\t\t\t\tcase 'mapDiffuseOffset':\r\n    \t\t\t\t\tcase 'mapDiffuseWrap':\r\n    \t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapEmissive':\r\n    \t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapEmissiveRepeat':\r\n    \t\t\t\t\tcase 'mapEmissiveOffset':\r\n    \t\t\t\t\tcase 'mapEmissiveWrap':\r\n    \t\t\t\t\tcase 'mapEmissiveAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapLight':\r\n    \t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapLightRepeat':\r\n    \t\t\t\t\tcase 'mapLightOffset':\r\n    \t\t\t\t\tcase 'mapLightWrap':\r\n    \t\t\t\t\tcase 'mapLightAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapAO':\r\n    \t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapAORepeat':\r\n    \t\t\t\t\tcase 'mapAOOffset':\r\n    \t\t\t\t\tcase 'mapAOWrap':\r\n    \t\t\t\t\tcase 'mapAOAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapBump':\r\n    \t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapBumpScale':\r\n    \t\t\t\t\t\tjson.bumpScale = value;\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapBumpRepeat':\r\n    \t\t\t\t\tcase 'mapBumpOffset':\r\n    \t\t\t\t\tcase 'mapBumpWrap':\r\n    \t\t\t\t\tcase 'mapBumpAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapNormal':\r\n    \t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapNormalFactor':\r\n    \t\t\t\t\t\tjson.normalScale = [ value, value ];\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapNormalRepeat':\r\n    \t\t\t\t\tcase 'mapNormalOffset':\r\n    \t\t\t\t\tcase 'mapNormalWrap':\r\n    \t\t\t\t\tcase 'mapNormalAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapSpecular':\r\n    \t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapSpecularRepeat':\r\n    \t\t\t\t\tcase 'mapSpecularOffset':\r\n    \t\t\t\t\tcase 'mapSpecularWrap':\r\n    \t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapMetalness':\r\n    \t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapMetalnessRepeat':\r\n    \t\t\t\t\tcase 'mapMetalnessOffset':\r\n    \t\t\t\t\tcase 'mapMetalnessWrap':\r\n    \t\t\t\t\tcase 'mapMetalnessAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapRoughness':\r\n    \t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapRoughnessRepeat':\r\n    \t\t\t\t\tcase 'mapRoughnessOffset':\r\n    \t\t\t\t\tcase 'mapRoughnessWrap':\r\n    \t\t\t\t\tcase 'mapRoughnessAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapAlpha':\r\n    \t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'mapAlphaRepeat':\r\n    \t\t\t\t\tcase 'mapAlphaOffset':\r\n    \t\t\t\t\tcase 'mapAlphaWrap':\r\n    \t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'flipSided':\r\n    \t\t\t\t\t\tjson.side = BackSide;\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'doubleSided':\r\n    \t\t\t\t\t\tjson.side = DoubleSide;\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'transparency':\r\n    \t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\r\n    \t\t\t\t\t\tjson.opacity = value;\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'depthTest':\r\n    \t\t\t\t\tcase 'depthWrite':\r\n    \t\t\t\t\tcase 'colorWrite':\r\n    \t\t\t\t\tcase 'opacity':\r\n    \t\t\t\t\tcase 'reflectivity':\r\n    \t\t\t\t\tcase 'transparent':\r\n    \t\t\t\t\tcase 'visible':\r\n    \t\t\t\t\tcase 'wireframe':\r\n    \t\t\t\t\t\tjson[ name ] = value;\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tcase 'vertexColors':\r\n    \t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\r\n    \t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t\tdefault:\r\n    \t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\r\n    \t\t\t\t\t\tbreak;\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\r\n    \t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\r\n    \t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\r\n    \t\t\tmaterialLoader.setTextures( textures );\r\n\r\n    \t\t\treturn materialLoader.parse( json );\r\n\r\n    \t\t};\r\n\r\n    \t} )()\r\n\r\n    };\r\n\r\n    Loader.Handlers = {\r\n\r\n    \thandlers: [],\r\n\r\n    \tadd: function ( regex, loader ) {\r\n\r\n    \t\tthis.handlers.push( regex, loader );\r\n\r\n    \t},\r\n\r\n    \tget: function ( file ) {\r\n\r\n    \t\tvar handlers = this.handlers;\r\n\r\n    \t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n    \t\t\tvar regex = handlers[ i ];\r\n    \t\t\tvar loader  = handlers[ i + 1 ];\r\n\r\n    \t\t\tif ( regex.test( file ) ) {\r\n\r\n    \t\t\t\treturn loader;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn null;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function JSONLoader( manager ) {\r\n\r\n    \tif ( typeof manager === 'boolean' ) {\r\n\r\n    \t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n    \t\tmanager = undefined;\r\n\r\n    \t}\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    \tthis.withCredentials = false;\r\n\r\n    }\r\n\r\n    Object.assign( JSONLoader.prototype, {\r\n\r\n    \tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\r\n\r\n    \t\tvar loader = new XHRLoader( this.manager );\r\n    \t\tloader.setWithCredentials( this.withCredentials );\r\n    \t\tloader.load( url, function ( text ) {\r\n\r\n    \t\t\tvar json = JSON.parse( text );\r\n    \t\t\tvar metadata = json.metadata;\r\n\r\n    \t\t\tif ( metadata !== undefined ) {\r\n\r\n    \t\t\t\tvar type = metadata.type;\r\n\r\n    \t\t\t\tif ( type !== undefined ) {\r\n\r\n    \t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\r\n\r\n    \t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n    \t\t\t\t\t\treturn;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\r\n\r\n    \t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n    \t\t\t\t\t\treturn;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar object = scope.parse( json, texturePath );\r\n    \t\t\tonLoad( object.geometry, object.materials );\r\n\r\n    \t\t}, onProgress, onError );\r\n\r\n    \t},\r\n\r\n    \tsetTexturePath: function ( value ) {\r\n\r\n    \t\tthis.texturePath = value;\r\n\r\n    \t},\r\n\r\n    \tparse: function ( json, texturePath ) {\r\n\r\n    \t\tvar geometry = new Geometry(),\r\n    \t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n    \t\tparseModel( scale );\r\n\r\n    \t\tparseSkin();\r\n    \t\tparseMorphing( scale );\r\n    \t\tparseAnimations();\r\n\r\n    \t\tgeometry.computeFaceNormals();\r\n    \t\tgeometry.computeBoundingSphere();\r\n\r\n    \t\tfunction parseModel( scale ) {\r\n\r\n    \t\t\tfunction isBitSet( value, position ) {\r\n\r\n    \t\t\t\treturn value & ( 1 << position );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar i, j, fi,\r\n\r\n    \t\t\toffset, zLength,\r\n\r\n    \t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n    \t\t\ttype,\r\n    \t\t\tisQuad,\r\n    \t\t\thasMaterial,\r\n    \t\t\thasFaceVertexUv,\r\n    \t\t\thasFaceNormal, hasFaceVertexNormal,\r\n    \t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n    \t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n    \t\t\tuvLayer, uv, u, v,\r\n\r\n    \t\t\tfaces = json.faces,\r\n    \t\t\tvertices = json.vertices,\r\n    \t\t\tnormals = json.normals,\r\n    \t\t\tcolors = json.colors,\r\n\r\n    \t\t\tnUvLayers = 0;\r\n\r\n    \t\t\tif ( json.uvs !== undefined ) {\r\n\r\n    \t\t\t\t// disregard empty arrays\r\n\r\n    \t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n    \t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n    \t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\toffset = 0;\r\n    \t\t\tzLength = vertices.length;\r\n\r\n    \t\t\twhile ( offset < zLength ) {\r\n\r\n    \t\t\t\tvertex = new Vector3();\r\n\r\n    \t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n    \t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n    \t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n    \t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\toffset = 0;\r\n    \t\t\tzLength = faces.length;\r\n\r\n    \t\t\twhile ( offset < zLength ) {\r\n\r\n    \t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n    \t\t\t\tisQuad              = isBitSet( type, 0 );\r\n    \t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n    \t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n    \t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n    \t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n    \t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n    \t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n    \t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n    \t\t\t\tif ( isQuad ) {\r\n\r\n    \t\t\t\t\tfaceA = new Face3();\r\n    \t\t\t\t\tfaceA.a = faces[ offset ];\r\n    \t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n    \t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n    \t\t\t\t\tfaceB = new Face3();\r\n    \t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n    \t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n    \t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n    \t\t\t\t\toffset += 4;\r\n\r\n    \t\t\t\t\tif ( hasMaterial ) {\r\n\r\n    \t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n    \t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n    \t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n    \t\t\t\t\tfi = geometry.faces.length;\r\n\r\n    \t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n    \t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n    \t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n    \t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n    \t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n    \t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n    \t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n    \t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n    \t\t\t\t\t\t\t\tuv = new Vector2( u, v );\r\n\r\n    \t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n    \t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n    \t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n    \t\t\t\t\t\tfaceA.normal.set(\r\n    \t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n    \t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n    \t\t\t\t\t\t\tnormals[ normalIndex ]\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n    \t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n    \t\t\t\t\t\t\tnormal = new Vector3(\r\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n    \t\t\t\t\t\t\t);\r\n\r\n\r\n    \t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n    \t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n\r\n    \t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n    \t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n    \t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n    \t\t\t\t\t\tfaceA.color.setHex( hex );\r\n    \t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n    \t\t\t\t\t}\r\n\r\n\r\n    \t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n    \t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n    \t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n    \t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\r\n    \t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tgeometry.faces.push( faceA );\r\n    \t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tface = new Face3();\r\n    \t\t\t\t\tface.a = faces[ offset ++ ];\r\n    \t\t\t\t\tface.b = faces[ offset ++ ];\r\n    \t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n    \t\t\t\t\tif ( hasMaterial ) {\r\n\r\n    \t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n    \t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n    \t\t\t\t\tfi = geometry.faces.length;\r\n\r\n    \t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n    \t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n    \t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n    \t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n    \t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n    \t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n    \t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n    \t\t\t\t\t\t\t\tuv = new Vector2( u, v );\r\n\r\n    \t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n    \t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n    \t\t\t\t\t\tface.normal.set(\r\n    \t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n    \t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n    \t\t\t\t\t\t\tnormals[ normalIndex ]\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n    \t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n    \t\t\t\t\t\t\tnormal = new Vector3(\r\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n    \t\t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n\r\n    \t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n    \t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n    \t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n    \t\t\t\t\t}\r\n\r\n\r\n    \t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n    \t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n    \t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n    \t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tgeometry.faces.push( face );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction parseSkin() {\r\n\r\n    \t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n    \t\t\tif ( json.skinWeights ) {\r\n\r\n    \t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n    \t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n    \t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n    \t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n    \t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n    \t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( json.skinIndices ) {\r\n\r\n    \t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n    \t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n    \t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n    \t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n    \t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n    \t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tgeometry.bones = json.bones;\r\n\r\n    \t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n    \t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n    \t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction parseMorphing( scale ) {\r\n\r\n    \t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n    \t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n    \t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n    \t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n    \t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n    \t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\r\n    \t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n    \t\t\t\t\t\tvar vertex = new Vector3();\r\n    \t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n    \t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n    \t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n    \t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\r\n    \t\t\t\tvar faces = geometry.faces;\r\n    \t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\r\n    \t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction parseAnimations() {\r\n\r\n    \t\t\tvar outputAnimations = [];\r\n\r\n    \t\t\t// parse old style Bone/Hierarchy animations\r\n    \t\t\tvar animations = [];\r\n\r\n    \t\t\tif ( json.animation !== undefined ) {\r\n\r\n    \t\t\t\tanimations.push( json.animation );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( json.animations !== undefined ) {\r\n\r\n    \t\t\t\tif ( json.animations.length ) {\r\n\r\n    \t\t\t\t\tanimations = animations.concat( json.animations );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\tanimations.push( json.animations );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\r\n    \t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\r\n    \t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// parse implicit morph animations\r\n    \t\t\tif ( geometry.morphTargets ) {\r\n\r\n    \t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n    \t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n    \t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n    \t\t\treturn { geometry: geometry };\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n    \t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function ObjectLoader ( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n    \tthis.texturePath = '';\r\n\r\n    }\r\n\r\n    Object.assign( ObjectLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tif ( this.texturePath === '' ) {\r\n\r\n    \t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n    \t\t}\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar loader = new XHRLoader( scope.manager );\r\n    \t\tloader.load( url, function ( text ) {\r\n\r\n    \t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n    \t\t}, onProgress, onError );\r\n\r\n    \t},\r\n\r\n    \tsetTexturePath: function ( value ) {\r\n\r\n    \t\tthis.texturePath = value;\r\n\r\n    \t},\r\n\r\n    \tsetCrossOrigin: function ( value ) {\r\n\r\n    \t\tthis.crossOrigin = value;\r\n\r\n    \t},\r\n\r\n    \tparse: function ( json, onLoad ) {\r\n\r\n    \t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n    \t\tvar images = this.parseImages( json.images, function () {\r\n\r\n    \t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n    \t\t} );\r\n\r\n    \t\tvar textures  = this.parseTextures( json.textures, images );\r\n    \t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\r\n    \t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n    \t\tif ( json.animations ) {\r\n\r\n    \t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n    \t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn object;\r\n\r\n    \t},\r\n\r\n    \tparseGeometries: function ( json ) {\r\n\r\n    \t\tvar geometries = {};\r\n\r\n    \t\tif ( json !== undefined ) {\r\n\r\n    \t\t\tvar geometryLoader = new JSONLoader();\r\n    \t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\r\n\r\n    \t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar geometry;\r\n    \t\t\t\tvar data = json[ i ];\r\n\r\n    \t\t\t\tswitch ( data.type ) {\r\n\r\n    \t\t\t\t\tcase 'PlaneGeometry':\r\n    \t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.width,\r\n    \t\t\t\t\t\t\tdata.height,\r\n    \t\t\t\t\t\t\tdata.widthSegments,\r\n    \t\t\t\t\t\t\tdata.heightSegments\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'BoxGeometry':\r\n    \t\t\t\t\tcase 'BoxBufferGeometry':\r\n    \t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.width,\r\n    \t\t\t\t\t\t\tdata.height,\r\n    \t\t\t\t\t\t\tdata.depth,\r\n    \t\t\t\t\t\t\tdata.widthSegments,\r\n    \t\t\t\t\t\t\tdata.heightSegments,\r\n    \t\t\t\t\t\t\tdata.depthSegments\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'CircleGeometry':\r\n    \t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.radius,\r\n    \t\t\t\t\t\t\tdata.segments,\r\n    \t\t\t\t\t\t\tdata.thetaStart,\r\n    \t\t\t\t\t\t\tdata.thetaLength\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'CylinderGeometry':\r\n    \t\t\t\t\tcase 'CylinderBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.radiusTop,\r\n    \t\t\t\t\t\t\tdata.radiusBottom,\r\n    \t\t\t\t\t\t\tdata.height,\r\n    \t\t\t\t\t\t\tdata.radialSegments,\r\n    \t\t\t\t\t\t\tdata.heightSegments,\r\n    \t\t\t\t\t\t\tdata.openEnded,\r\n    \t\t\t\t\t\t\tdata.thetaStart,\r\n    \t\t\t\t\t\t\tdata.thetaLength\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'ConeGeometry':\r\n    \t\t\t\t\tcase 'ConeBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.radius,\r\n    \t\t\t\t\t\t\tdata.height,\r\n    \t\t\t\t\t\t\tdata.radialSegments,\r\n    \t\t\t\t\t\t\tdata.heightSegments,\r\n    \t\t\t\t\t\t\tdata.openEnded,\r\n    \t\t\t\t\t\t\tdata.thetaStart,\r\n    \t\t\t\t\t\t\tdata.thetaLength\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'SphereGeometry':\r\n    \t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.radius,\r\n    \t\t\t\t\t\t\tdata.widthSegments,\r\n    \t\t\t\t\t\t\tdata.heightSegments,\r\n    \t\t\t\t\t\t\tdata.phiStart,\r\n    \t\t\t\t\t\t\tdata.phiLength,\r\n    \t\t\t\t\t\t\tdata.thetaStart,\r\n    \t\t\t\t\t\t\tdata.thetaLength\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'DodecahedronGeometry':\r\n    \t\t\t\t\tcase 'IcosahedronGeometry':\r\n    \t\t\t\t\tcase 'OctahedronGeometry':\r\n    \t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.radius,\r\n    \t\t\t\t\t\t\tdata.detail\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'RingGeometry':\r\n    \t\t\t\t\tcase 'RingBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.innerRadius,\r\n    \t\t\t\t\t\t\tdata.outerRadius,\r\n    \t\t\t\t\t\t\tdata.thetaSegments,\r\n    \t\t\t\t\t\t\tdata.phiSegments,\r\n    \t\t\t\t\t\t\tdata.thetaStart,\r\n    \t\t\t\t\t\t\tdata.thetaLength\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'TorusGeometry':\r\n    \t\t\t\t\tcase 'TorusBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.radius,\r\n    \t\t\t\t\t\t\tdata.tube,\r\n    \t\t\t\t\t\t\tdata.radialSegments,\r\n    \t\t\t\t\t\t\tdata.tubularSegments,\r\n    \t\t\t\t\t\t\tdata.arc\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'TorusKnotGeometry':\r\n    \t\t\t\t\tcase 'TorusKnotBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.radius,\r\n    \t\t\t\t\t\t\tdata.tube,\r\n    \t\t\t\t\t\t\tdata.tubularSegments,\r\n    \t\t\t\t\t\t\tdata.radialSegments,\r\n    \t\t\t\t\t\t\tdata.p,\r\n    \t\t\t\t\t\t\tdata.q\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'LatheGeometry':\r\n    \t\t\t\t\tcase 'LatheBufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\r\n    \t\t\t\t\t\t\tdata.points,\r\n    \t\t\t\t\t\t\tdata.segments,\r\n    \t\t\t\t\t\t\tdata.phiStart,\r\n    \t\t\t\t\t\t\tdata.phiLength\r\n    \t\t\t\t\t\t);\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'BufferGeometry':\r\n\r\n    \t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tcase 'Geometry':\r\n\r\n    \t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\tdefault:\r\n\r\n    \t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n    \t\t\t\t\t\tcontinue;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n    \t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n    \t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn geometries;\r\n\r\n    \t},\r\n\r\n    \tparseMaterials: function ( json, textures ) {\r\n\r\n    \t\tvar materials = {};\r\n\r\n    \t\tif ( json !== undefined ) {\r\n\r\n    \t\t\tvar loader = new MaterialLoader();\r\n    \t\t\tloader.setTextures( textures );\r\n\r\n    \t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar material = loader.parse( json[ i ] );\r\n    \t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn materials;\r\n\r\n    \t},\r\n\r\n    \tparseAnimations: function ( json ) {\r\n\r\n    \t\tvar animations = [];\r\n\r\n    \t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n    \t\t\tvar clip = AnimationClip.parse( json[ i ] );\r\n\r\n    \t\t\tanimations.push( clip );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn animations;\r\n\r\n    \t},\r\n\r\n    \tparseImages: function ( json, onLoad ) {\r\n\r\n    \t\tvar scope = this;\r\n    \t\tvar images = {};\r\n\r\n    \t\tfunction loadImage( url ) {\r\n\r\n    \t\t\tscope.manager.itemStart( url );\r\n\r\n    \t\t\treturn loader.load( url, function () {\r\n\r\n    \t\t\t\tscope.manager.itemEnd( url );\r\n\r\n    \t\t\t}, undefined, function () {\r\n\r\n    \t\t\t\tscope.manager.itemError( url );\r\n\r\n    \t\t\t} );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n    \t\t\tvar manager = new LoadingManager( onLoad );\r\n\r\n    \t\t\tvar loader = new ImageLoader( manager );\r\n    \t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n    \t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar image = json[ i ];\r\n    \t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n    \t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn images;\r\n\r\n    \t},\r\n\r\n    \tparseTextures: function ( json, images ) {\r\n\r\n    \t\tfunction parseConstant( value, type ) {\r\n\r\n    \t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n    \t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n    \t\t\treturn type[ value ];\r\n\r\n    \t\t}\r\n\r\n    \t\tvar textures = {};\r\n\r\n    \t\tif ( json !== undefined ) {\r\n\r\n    \t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar data = json[ i ];\r\n\r\n    \t\t\t\tif ( data.image === undefined ) {\r\n\r\n    \t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n    \t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tvar texture = new Texture( images[ data.image ] );\r\n    \t\t\t\ttexture.needsUpdate = true;\r\n\r\n    \t\t\t\ttexture.uuid = data.uuid;\r\n\r\n    \t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\r\n    \t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TextureMapping );\r\n\r\n    \t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\r\n    \t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\r\n    \t\t\t\tif ( data.wrap !== undefined ) {\r\n\r\n    \t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TextureWrapping );\r\n    \t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TextureWrapping );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TextureFilter );\r\n    \t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TextureFilter );\r\n    \t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\r\n    \t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\r\n\r\n    \t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\treturn textures;\r\n\r\n    \t},\r\n\r\n    \tparseObject: function () {\r\n\r\n    \t\tvar matrix = new Matrix4();\r\n\r\n    \t\treturn function parseObject( data, geometries, materials ) {\r\n\r\n    \t\t\tvar object;\r\n\r\n    \t\t\tfunction getGeometry( name ) {\r\n\r\n    \t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n    \t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\treturn geometries[ name ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfunction getMaterial( name ) {\r\n\r\n    \t\t\t\tif ( name === undefined ) return undefined;\r\n\r\n    \t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n    \t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\treturn materials[ name ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tswitch ( data.type ) {\r\n\r\n    \t\t\t\tcase 'Scene':\r\n\r\n    \t\t\t\t\tobject = new Scene();\r\n\r\n    \t\t\t\t\tif ( data.background !== undefined ) {\r\n\r\n    \t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\r\n\r\n    \t\t\t\t\t\t\tobject.background = new Color( data.background );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tif ( data.fog !== undefined ) {\r\n\r\n    \t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\r\n\r\n    \t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\r\n\r\n    \t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\r\n\r\n    \t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'PerspectiveCamera':\r\n\r\n    \t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n    \t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\r\n    \t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n    \t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n    \t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n    \t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'OrthographicCamera':\r\n\r\n    \t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'AmbientLight':\r\n\r\n    \t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'DirectionalLight':\r\n\r\n    \t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'PointLight':\r\n\r\n    \t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'SpotLight':\r\n\r\n    \t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'HemisphereLight':\r\n\r\n    \t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'Mesh':\r\n\r\n    \t\t\t\t\tvar geometry = getGeometry( data.geometry );\r\n    \t\t\t\t\tvar material = getMaterial( data.material );\r\n\r\n    \t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\r\n\r\n    \t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tobject = new Mesh( geometry, material );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'LOD':\r\n\r\n    \t\t\t\t\tobject = new LOD();\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'Line':\r\n\r\n    \t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'LineSegments':\r\n\r\n    \t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'PointCloud':\r\n    \t\t\t\tcase 'Points':\r\n\r\n    \t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'Sprite':\r\n\r\n    \t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'Group':\r\n\r\n    \t\t\t\t\tobject = new Group();\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tdefault:\r\n\r\n    \t\t\t\t\tobject = new Object3D();\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tobject.uuid = data.uuid;\r\n\r\n    \t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n    \t\t\tif ( data.matrix !== undefined ) {\r\n\r\n    \t\t\t\tmatrix.fromArray( data.matrix );\r\n    \t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n    \t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n    \t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\r\n    \t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n    \t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n    \t\t\tif ( data.shadow ) {\r\n\r\n    \t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\r\n    \t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\r\n    \t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\r\n    \t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n    \t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n    \t\t\tif ( data.children !== undefined ) {\r\n\r\n    \t\t\t\tfor ( var child in data.children ) {\r\n\r\n    \t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( data.type === 'LOD' ) {\r\n\r\n    \t\t\t\tvar levels = data.levels;\r\n\r\n    \t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n    \t\t\t\t\tvar level = levels[ l ];\r\n    \t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n    \t\t\t\t\tif ( child !== undefined ) {\r\n\r\n    \t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn object;\r\n\r\n    \t\t};\r\n\r\n    \t}()\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     * Extensible curve object\r\n     *\r\n     * Some common of Curve methods\r\n     * .getPoint(t), getTangent(t)\r\n     * .getPointAt(u), getTangentAt(u)\r\n     * .getPoints(), .getSpacedPoints()\r\n     * .getLength()\r\n     * .updateArcLengths()\r\n     *\r\n     * This following classes subclasses THREE.Curve:\r\n     *\r\n     * -- 2d classes --\r\n     * THREE.LineCurve\r\n     * THREE.QuadraticBezierCurve\r\n     * THREE.CubicBezierCurve\r\n     * THREE.SplineCurve\r\n     * THREE.ArcCurve\r\n     * THREE.EllipseCurve\r\n     *\r\n     * -- 3d classes --\r\n     * THREE.LineCurve3\r\n     * THREE.QuadraticBezierCurve3\r\n     * THREE.CubicBezierCurve3\r\n     * THREE.SplineCurve3\r\n     *\r\n     * A series of curves can be represented as a THREE.CurvePath\r\n     *\r\n     **/\r\n\r\n    /**************************************************************\r\n     *\tAbstract Curve base class\r\n     **************************************************************/\r\n\r\n    function Curve() {}\r\n\r\n    Curve.prototype = {\r\n\r\n    \tconstructor: Curve,\r\n\r\n    \t// Virtual base class method to overwrite and implement in subclasses\r\n    \t//\t- t [0 .. 1]\r\n\r\n    \tgetPoint: function ( t ) {\r\n\r\n    \t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n    \t\treturn null;\r\n\r\n    \t},\r\n\r\n    \t// Get point at relative position in curve according to arc length\r\n    \t// - u [0 .. 1]\r\n\r\n    \tgetPointAt: function ( u ) {\r\n\r\n    \t\tvar t = this.getUtoTmapping( u );\r\n    \t\treturn this.getPoint( t );\r\n\r\n    \t},\r\n\r\n    \t// Get sequence of points using getPoint( t )\r\n\r\n    \tgetPoints: function ( divisions ) {\r\n\r\n    \t\tif ( ! divisions ) divisions = 5;\r\n\r\n    \t\tvar points = [];\r\n\r\n    \t\tfor ( var d = 0; d <= divisions; d ++ ) {\r\n\r\n    \t\t\tpoints.push( this.getPoint( d / divisions ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn points;\r\n\r\n    \t},\r\n\r\n    \t// Get sequence of points using getPointAt( u )\r\n\r\n    \tgetSpacedPoints: function ( divisions ) {\r\n\r\n    \t\tif ( ! divisions ) divisions = 5;\r\n\r\n    \t\tvar points = [];\r\n\r\n    \t\tfor ( var d = 0; d <= divisions; d ++ ) {\r\n\r\n    \t\t\tpoints.push( this.getPointAt( d / divisions ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn points;\r\n\r\n    \t},\r\n\r\n    \t// Get total curve arc length\r\n\r\n    \tgetLength: function () {\r\n\r\n    \t\tvar lengths = this.getLengths();\r\n    \t\treturn lengths[ lengths.length - 1 ];\r\n\r\n    \t},\r\n\r\n    \t// Get list of cumulative segment lengths\r\n\r\n    \tgetLengths: function ( divisions ) {\r\n\r\n    \t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n    \t\tif ( this.cacheArcLengths\r\n    \t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n    \t\t\t&& ! this.needsUpdate ) {\r\n\r\n    \t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n    \t\t\treturn this.cacheArcLengths;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.needsUpdate = false;\r\n\r\n    \t\tvar cache = [];\r\n    \t\tvar current, last = this.getPoint( 0 );\r\n    \t\tvar p, sum = 0;\r\n\r\n    \t\tcache.push( 0 );\r\n\r\n    \t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n    \t\t\tcurrent = this.getPoint ( p / divisions );\r\n    \t\t\tsum += current.distanceTo( last );\r\n    \t\t\tcache.push( sum );\r\n    \t\t\tlast = current;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.cacheArcLengths = cache;\r\n\r\n    \t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n    \t},\r\n\r\n    \tupdateArcLengths: function() {\r\n\r\n    \t\tthis.needsUpdate = true;\r\n    \t\tthis.getLengths();\r\n\r\n    \t},\r\n\r\n    \t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n    \tgetUtoTmapping: function ( u, distance ) {\r\n\r\n    \t\tvar arcLengths = this.getLengths();\r\n\r\n    \t\tvar i = 0, il = arcLengths.length;\r\n\r\n    \t\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n    \t\tif ( distance ) {\r\n\r\n    \t\t\ttargetArcLength = distance;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n    \t\t}\r\n\r\n    \t\t//var time = Date.now();\r\n\r\n    \t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n    \t\tvar low = 0, high = il - 1, comparison;\r\n\r\n    \t\twhile ( low <= high ) {\r\n\r\n    \t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n    \t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n    \t\t\tif ( comparison < 0 ) {\r\n\r\n    \t\t\t\tlow = i + 1;\r\n\r\n    \t\t\t} else if ( comparison > 0 ) {\r\n\r\n    \t\t\t\thigh = i - 1;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\thigh = i;\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\t\t// DONE\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\ti = high;\r\n\r\n    \t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n    \t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n    \t\t\tvar t = i / ( il - 1 );\r\n    \t\t\treturn t;\r\n\r\n    \t\t}\r\n\r\n    \t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n    \t\tvar lengthBefore = arcLengths[ i ];\r\n    \t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n    \t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n    \t\t// determine where we are between the 'before' and 'after' points\r\n\r\n    \t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n    \t\t// add that fractional amount to t\r\n\r\n    \t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n    \t\treturn t;\r\n\r\n    \t},\r\n\r\n    \t// Returns a unit vector tangent at t\r\n    \t// In case any sub curve does not implement its tangent derivation,\r\n    \t// 2 points a small delta apart will be used to find its gradient\r\n    \t// which seems to give a reasonable approximation\r\n\r\n    \tgetTangent: function( t ) {\r\n\r\n    \t\tvar delta = 0.0001;\r\n    \t\tvar t1 = t - delta;\r\n    \t\tvar t2 = t + delta;\r\n\r\n    \t\t// Capping in case of danger\r\n\r\n    \t\tif ( t1 < 0 ) t1 = 0;\r\n    \t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n    \t\tvar pt1 = this.getPoint( t1 );\r\n    \t\tvar pt2 = this.getPoint( t2 );\r\n\r\n    \t\tvar vec = pt2.clone().sub( pt1 );\r\n    \t\treturn vec.normalize();\r\n\r\n    \t},\r\n\r\n    \tgetTangentAt: function ( u ) {\r\n\r\n    \t\tvar t = this.getUtoTmapping( u );\r\n    \t\treturn this.getTangent( t );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    // TODO: Transformation for Curves?\r\n\r\n    /**************************************************************\r\n     *\t3D Curves\r\n     **************************************************************/\r\n\r\n    // A Factory method for creating new curve subclasses\r\n\r\n    Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n    \tconstructor.prototype = Object.create( Curve.prototype );\r\n    \tconstructor.prototype.constructor = constructor;\r\n    \tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n    \treturn constructor;\r\n\r\n    };\r\n\r\n    /**************************************************************\r\n     *\tLine\r\n     **************************************************************/\r\n\r\n    function LineCurve( v1, v2 ) {\r\n\r\n    \tthis.v1 = v1;\r\n    \tthis.v2 = v2;\r\n\r\n    }\r\n\r\n    LineCurve.prototype = Object.create( Curve.prototype );\r\n    LineCurve.prototype.constructor = LineCurve;\r\n\r\n    LineCurve.prototype.isLineCurve = true;\r\n\r\n    LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n    \tif ( t === 1 ) {\r\n\r\n    \t\treturn this.v2.clone();\r\n\r\n    \t}\r\n\r\n    \tvar point = this.v2.clone().sub( this.v1 );\r\n    \tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n    \treturn point;\r\n\r\n    };\r\n\r\n    // Line curve is linear, so we can overwrite default getPointAt\r\n\r\n    LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n    \treturn this.getPoint( u );\r\n\r\n    };\r\n\r\n    LineCurve.prototype.getTangent = function( t ) {\r\n\r\n    \tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n    \treturn tangent.normalize();\r\n\r\n    };\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     *\r\n     **/\r\n\r\n    /**************************************************************\r\n     *\tCurved Path - a curve path is simply a array of connected\r\n     *  curves, but retains the api of a curve\r\n     **************************************************************/\r\n\r\n    function CurvePath() {\r\n\r\n    \tthis.curves = [];\r\n\r\n    \tthis.autoClose = false; // Automatically closes the path\r\n\r\n    }\r\n\r\n    CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\r\n\r\n    \tconstructor: CurvePath,\r\n\r\n    \tadd: function ( curve ) {\r\n\r\n    \t\tthis.curves.push( curve );\r\n\r\n    \t},\r\n\r\n    \tclosePath: function () {\r\n\r\n    \t\t// Add a line curve if start and end of lines are not connected\r\n    \t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n    \t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n    \t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n    \t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t// To get accurate point with reference to\r\n    \t// entire path distance at time t,\r\n    \t// following has to be done:\r\n\r\n    \t// 1. Length of each sub path have to be known\r\n    \t// 2. Locate and identify type of curve\r\n    \t// 3. Get t for the curve\r\n    \t// 4. Return curve.getPointAt(t')\r\n\r\n    \tgetPoint: function ( t ) {\r\n\r\n    \t\tvar d = t * this.getLength();\r\n    \t\tvar curveLengths = this.getCurveLengths();\r\n    \t\tvar i = 0;\r\n\r\n    \t\t// To think about boundaries points.\r\n\r\n    \t\twhile ( i < curveLengths.length ) {\r\n\r\n    \t\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n    \t\t\t\tvar diff = curveLengths[ i ] - d;\r\n    \t\t\t\tvar curve = this.curves[ i ];\r\n\r\n    \t\t\t\tvar segmentLength = curve.getLength();\r\n    \t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\r\n\r\n    \t\t\t\treturn curve.getPointAt( u );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\ti ++;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn null;\r\n\r\n    \t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n    \t},\r\n\r\n    \t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n    \t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n    \t// getPoint() depends on getLength\r\n\r\n    \tgetLength: function () {\r\n\r\n    \t\tvar lens = this.getCurveLengths();\r\n    \t\treturn lens[ lens.length - 1 ];\r\n\r\n    \t},\r\n\r\n    \t// cacheLengths must be recalculated.\r\n    \tupdateArcLengths: function () {\r\n\r\n    \t\tthis.needsUpdate = true;\r\n    \t\tthis.cacheLengths = null;\r\n    \t\tthis.getLengths();\r\n\r\n    \t},\r\n\r\n    \t// Compute lengths and cache them\r\n    \t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n    \tgetCurveLengths: function () {\r\n\r\n    \t\t// We use cache values if curves and cache array are same length\r\n\r\n    \t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n    \t\t\treturn this.cacheLengths;\r\n\r\n    \t\t}\r\n\r\n    \t\t// Get length of sub-curve\r\n    \t\t// Push sums into cached array\r\n\r\n    \t\tvar lengths = [], sums = 0;\r\n\r\n    \t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n    \t\t\tsums += this.curves[ i ].getLength();\r\n    \t\t\tlengths.push( sums );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.cacheLengths = lengths;\r\n\r\n    \t\treturn lengths;\r\n\r\n    \t},\r\n\r\n    \tgetSpacedPoints: function ( divisions ) {\r\n\r\n    \t\tif ( ! divisions ) divisions = 40;\r\n\r\n    \t\tvar points = [];\r\n\r\n    \t\tfor ( var i = 0; i <= divisions; i ++ ) {\r\n\r\n    \t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.autoClose ) {\r\n\r\n    \t\t\tpoints.push( points[ 0 ] );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn points;\r\n\r\n    \t},\r\n\r\n    \tgetPoints: function ( divisions ) {\r\n\r\n    \t\tdivisions = divisions || 12;\r\n\r\n    \t\tvar points = [], last;\r\n\r\n    \t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\r\n\r\n    \t\t\tvar curve = curves[ i ];\r\n    \t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\r\n    \t\t\t\t: (curve && curve.isLineCurve) ? 1\r\n    \t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\r\n    \t\t\t\t: divisions;\r\n\r\n    \t\t\tvar pts = curve.getPoints( resolution );\r\n\r\n    \t\t\tfor ( var j = 0; j < pts.length; j++ ) {\r\n\r\n    \t\t\t\tvar point = pts[ j ];\r\n\r\n    \t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\r\n\r\n    \t\t\t\tpoints.push( point );\r\n    \t\t\t\tlast = point;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\r\n\r\n    \t\t\tpoints.push( points[ 0 ] );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn points;\r\n\r\n    \t},\r\n\r\n    \t/**************************************************************\r\n    \t *\tCreate Geometries Helpers\r\n    \t **************************************************************/\r\n\r\n    \t/// Generate geometry from path points (for Line or Points objects)\r\n\r\n    \tcreatePointsGeometry: function ( divisions ) {\r\n\r\n    \t\tvar pts = this.getPoints( divisions );\r\n    \t\treturn this.createGeometry( pts );\r\n\r\n    \t},\r\n\r\n    \t// Generate geometry from equidistant sampling along the path\r\n\r\n    \tcreateSpacedPointsGeometry: function ( divisions ) {\r\n\r\n    \t\tvar pts = this.getSpacedPoints( divisions );\r\n    \t\treturn this.createGeometry( pts );\r\n\r\n    \t},\r\n\r\n    \tcreateGeometry: function ( points ) {\r\n\r\n    \t\tvar geometry = new Geometry();\r\n\r\n    \t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar point = points[ i ];\r\n    \t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn geometry;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**************************************************************\r\n     *\tEllipse curve\r\n     **************************************************************/\r\n\r\n    function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n    \tthis.aX = aX;\r\n    \tthis.aY = aY;\r\n\r\n    \tthis.xRadius = xRadius;\r\n    \tthis.yRadius = yRadius;\r\n\r\n    \tthis.aStartAngle = aStartAngle;\r\n    \tthis.aEndAngle = aEndAngle;\r\n\r\n    \tthis.aClockwise = aClockwise;\r\n\r\n    \tthis.aRotation = aRotation || 0;\r\n\r\n    }\r\n\r\n    EllipseCurve.prototype = Object.create( Curve.prototype );\r\n    EllipseCurve.prototype.constructor = EllipseCurve;\r\n\r\n    EllipseCurve.prototype.isEllipseCurve = true;\r\n\r\n    EllipseCurve.prototype.getPoint = function( t ) {\r\n\r\n    \tvar twoPi = Math.PI * 2;\r\n    \tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n    \tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\r\n\r\n    \t// ensures that deltaAngle is 0 .. 2 PI\r\n    \twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\r\n    \twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\r\n\r\n    \tif ( deltaAngle < Number.EPSILON ) {\r\n\r\n    \t\tif ( samePoints ) {\r\n\r\n    \t\t\tdeltaAngle = 0;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tdeltaAngle = twoPi;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tif ( this.aClockwise === true && ! samePoints ) {\r\n\r\n    \t\tif ( deltaAngle === twoPi ) {\r\n\r\n    \t\t\tdeltaAngle = - twoPi;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tdeltaAngle = deltaAngle - twoPi;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tvar angle = this.aStartAngle + t * deltaAngle;\r\n    \tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n    \tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n    \tif ( this.aRotation !== 0 ) {\r\n\r\n    \t\tvar cos = Math.cos( this.aRotation );\r\n    \t\tvar sin = Math.sin( this.aRotation );\r\n\r\n    \t\tvar tx = x - this.aX;\r\n    \t\tvar ty = y - this.aY;\r\n\r\n    \t\t// Rotate the point about the center of the ellipse.\r\n    \t\tx = tx * cos - ty * sin + this.aX;\r\n    \t\ty = tx * sin + ty * cos + this.aY;\r\n\r\n    \t}\r\n\r\n    \treturn new Vector2( x, y );\r\n\r\n    };\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     */\r\n\r\n    exports.CurveUtils = {\r\n\r\n    \ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n    \t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n    \t},\r\n\r\n    \t// Puay Bing, thanks for helping with this derivative!\r\n\r\n    \ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n    \t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n    \t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n    \t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n    \t\t\t3 * t * t * p3;\r\n\r\n    \t},\r\n\r\n    \ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n    \t\t// To check if my formulas are correct\r\n\r\n    \t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n    \t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n    \t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n    \t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n    \t\treturn h00 + h10 + h01 + h11;\r\n\r\n    \t},\r\n\r\n    \t// Catmull-Rom\r\n\r\n    \tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n    \t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n    \t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n    \t\tvar t2 = t * t;\r\n    \t\tvar t3 = t * t2;\r\n    \t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**************************************************************\r\n     *\tSpline curve\r\n     **************************************************************/\r\n\r\n    function SplineCurve( points /* array of Vector2 */ ) {\r\n\r\n    \tthis.points = ( points === undefined ) ? [] : points;\r\n\r\n    }\r\n\r\n    SplineCurve.prototype = Object.create( Curve.prototype );\r\n    SplineCurve.prototype.constructor = SplineCurve;\r\n\r\n    SplineCurve.prototype.isSplineCurve = true;\r\n\r\n    SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n    \tvar points = this.points;\r\n    \tvar point = ( points.length - 1 ) * t;\r\n\r\n    \tvar intPoint = Math.floor( point );\r\n    \tvar weight = point - intPoint;\r\n\r\n    \tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n    \tvar point1 = points[ intPoint ];\r\n    \tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n    \tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n    \tvar interpolate = exports.CurveUtils.interpolate;\r\n\r\n    \treturn new Vector2(\r\n    \t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n    \t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\r\n    \t);\r\n\r\n    };\r\n\r\n    /**************************************************************\r\n     *\tCubic Bezier curve\r\n     **************************************************************/\r\n\r\n    function CubicBezierCurve( v0, v1, v2, v3 ) {\r\n\r\n    \tthis.v0 = v0;\r\n    \tthis.v1 = v1;\r\n    \tthis.v2 = v2;\r\n    \tthis.v3 = v3;\r\n\r\n    }\r\n\r\n    CubicBezierCurve.prototype = Object.create( Curve.prototype );\r\n    CubicBezierCurve.prototype.constructor = CubicBezierCurve;\r\n\r\n    CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n    \tvar b3 = exports.ShapeUtils.b3;\r\n\r\n    \treturn new Vector2(\r\n    \t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n    \t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n    \t);\r\n\r\n    };\r\n\r\n    CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n    \tvar tangentCubicBezier = exports.CurveUtils.tangentCubicBezier;\r\n\r\n    \treturn new Vector2(\r\n    \t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n    \t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n    \t).normalize();\r\n\r\n    };\r\n\r\n    /**************************************************************\r\n     *\tQuadratic Bezier curve\r\n     **************************************************************/\r\n\r\n\r\n    function QuadraticBezierCurve( v0, v1, v2 ) {\r\n\r\n    \tthis.v0 = v0;\r\n    \tthis.v1 = v1;\r\n    \tthis.v2 = v2;\r\n\r\n    }\r\n\r\n    QuadraticBezierCurve.prototype = Object.create( Curve.prototype );\r\n    QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\r\n\r\n\r\n    QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n    \tvar b2 = exports.ShapeUtils.b2;\r\n\r\n    \treturn new Vector2(\r\n    \t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n    \t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\r\n    \t);\r\n\r\n    };\r\n\r\n\r\n    QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n    \tvar tangentQuadraticBezier = exports.CurveUtils.tangentQuadraticBezier;\r\n\r\n    \treturn new Vector2(\r\n    \t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\r\n    \t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\r\n    \t).normalize();\r\n\r\n    };\r\n\r\n    var PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\r\n\r\n    \tfromPoints: function ( vectors ) {\r\n\r\n    \t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n    \t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\r\n\r\n    \t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tmoveTo: function ( x, y ) {\r\n\r\n    \t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\r\n\r\n    \t},\r\n\r\n    \tlineTo: function ( x, y ) {\r\n\r\n    \t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\r\n    \t\tthis.curves.push( curve );\r\n\r\n    \t\tthis.currentPoint.set( x, y );\r\n\r\n    \t},\r\n\r\n    \tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n    \t\tvar curve = new QuadraticBezierCurve(\r\n    \t\t\tthis.currentPoint.clone(),\r\n    \t\t\tnew Vector2( aCPx, aCPy ),\r\n    \t\t\tnew Vector2( aX, aY )\r\n    \t\t);\r\n\r\n    \t\tthis.curves.push( curve );\r\n\r\n    \t\tthis.currentPoint.set( aX, aY );\r\n\r\n    \t},\r\n\r\n    \tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n    \t\tvar curve = new CubicBezierCurve(\r\n    \t\t\tthis.currentPoint.clone(),\r\n    \t\t\tnew Vector2( aCP1x, aCP1y ),\r\n    \t\t\tnew Vector2( aCP2x, aCP2y ),\r\n    \t\t\tnew Vector2( aX, aY )\r\n    \t\t);\r\n\r\n    \t\tthis.curves.push( curve );\r\n\r\n    \t\tthis.currentPoint.set( aX, aY );\r\n\r\n    \t},\r\n\r\n    \tsplineThru: function ( pts /*Array of Vector*/ ) {\r\n\r\n    \t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\r\n\r\n    \t\tvar curve = new SplineCurve( npts );\r\n    \t\tthis.curves.push( curve );\r\n\r\n    \t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\r\n\r\n    \t},\r\n\r\n    \tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n    \t\tvar x0 = this.currentPoint.x;\r\n    \t\tvar y0 = this.currentPoint.y;\r\n\r\n    \t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n    \t\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n    \t},\r\n\r\n    \tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n    \t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n    \t},\r\n\r\n    \tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n    \t\tvar x0 = this.currentPoint.x;\r\n    \t\tvar y0 = this.currentPoint.y;\r\n\r\n    \t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n    \t},\r\n\r\n    \tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n    \t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n    \t\tif ( this.curves.length > 0 ) {\r\n\r\n    \t\t\t// if a previous curve is present, attempt to join\r\n    \t\t\tvar firstPoint = curve.getPoint( 0 );\r\n\r\n    \t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\r\n\r\n    \t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.curves.push( curve );\r\n\r\n    \t\tvar lastPoint = curve.getPoint( 1 );\r\n    \t\tthis.currentPoint.copy( lastPoint );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     * Defines a 2d shape plane using paths.\r\n     **/\r\n\r\n    // STEP 1 Create a path.\r\n    // STEP 2 Turn path into shape.\r\n    // STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n    // STEP 3a - Extract points from each shape, turn to vertices\r\n    // STEP 3b - Triangulate each shape, add faces.\r\n\r\n    function Shape() {\r\n\r\n    \tPath.apply( this, arguments );\r\n\r\n    \tthis.holes = [];\r\n\r\n    }\r\n\r\n    Shape.prototype = Object.assign( Object.create( PathPrototype ), {\r\n\r\n    \tconstructor: Shape,\r\n\r\n    \tgetPointsHoles: function ( divisions ) {\r\n\r\n    \t\tvar holesPts = [];\r\n\r\n    \t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n    \t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn holesPts;\r\n\r\n    \t},\r\n\r\n    \t// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\n    \textractAllPoints: function ( divisions ) {\r\n\r\n    \t\treturn {\r\n\r\n    \t\t\tshape: this.getPoints( divisions ),\r\n    \t\t\tholes: this.getPointsHoles( divisions )\r\n\r\n    \t\t};\r\n\r\n    \t},\r\n\r\n    \textractPoints: function ( divisions ) {\r\n\r\n    \t\treturn this.extractAllPoints( divisions );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     * Creates free form 2d path using series of points, lines or curves.\r\n     *\r\n     **/\r\n\r\n    function Path( points ) {\r\n\r\n    \tCurvePath.call( this );\r\n    \tthis.currentPoint = new Vector2();\r\n\r\n    \tif ( points ) {\r\n\r\n    \t\tthis.fromPoints( points );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    Path.prototype = PathPrototype;\r\n    PathPrototype.constructor = Path;\r\n\r\n\r\n    // minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\r\n    function ShapePath() {\r\n    \tthis.subPaths = [];\r\n    \tthis.currentPath = null;\r\n    }\r\n\r\n    ShapePath.prototype = {\r\n    \tmoveTo: function ( x, y ) {\r\n    \t\tthis.currentPath = new Path();\r\n    \t\tthis.subPaths.push(this.currentPath);\r\n    \t\tthis.currentPath.moveTo( x, y );\r\n    \t},\r\n    \tlineTo: function ( x, y ) {\r\n    \t\tthis.currentPath.lineTo( x, y );\r\n    \t},\r\n    \tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n    \t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\r\n    \t},\r\n    \tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n    \t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\r\n    \t},\r\n    \tsplineThru: function ( pts ) {\r\n    \t\tthis.currentPath.splineThru( pts );\r\n    \t},\r\n\r\n    \ttoShapes: function ( isCCW, noHoles ) {\r\n\r\n    \t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n    \t\t\tvar shapes = [];\r\n\r\n    \t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n    \t\t\t\tvar tmpShape = new Shape();\r\n    \t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n    \t\t\t\tshapes.push( tmpShape );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn shapes;\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n    \t\t\tvar polyLen = inPolygon.length;\r\n\r\n    \t\t\t// inPt on polygon contour => immediate success    or\r\n    \t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n    \t\t\t//  with the horizontal line through inPt, left of inPt\r\n    \t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n    \t\t\tvar inside = false;\r\n    \t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n    \t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n    \t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n    \t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n    \t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n    \t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n    \t\t\t\t\t// not parallel\r\n    \t\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n    \t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n    \t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n    \t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n    \t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n    \t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n    \t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n    \t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n    \t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\t// parallel or collinear\r\n    \t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n    \t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n    \t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n    \t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n    \t\t\t\t\t// continue;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn\tinside;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar isClockWise = exports.ShapeUtils.isClockWise;\r\n\r\n    \t\tvar subPaths = this.subPaths;\r\n    \t\tif ( subPaths.length === 0 ) return [];\r\n\r\n    \t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n    \t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n    \t\tif ( subPaths.length === 1 ) {\r\n\r\n    \t\t\ttmpPath = subPaths[ 0 ];\r\n    \t\t\ttmpShape = new Shape();\r\n    \t\t\ttmpShape.curves = tmpPath.curves;\r\n    \t\t\tshapes.push( tmpShape );\r\n    \t\t\treturn shapes;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n    \t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n    \t\t// console.log(\"Holes first\", holesFirst);\r\n\r\n    \t\tvar betterShapeHoles = [];\r\n    \t\tvar newShapes = [];\r\n    \t\tvar newShapeHoles = [];\r\n    \t\tvar mainIdx = 0;\r\n    \t\tvar tmpPoints;\r\n\r\n    \t\tnewShapes[ mainIdx ] = undefined;\r\n    \t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n    \t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n    \t\t\ttmpPath = subPaths[ i ];\r\n    \t\t\ttmpPoints = tmpPath.getPoints();\r\n    \t\t\tsolid = isClockWise( tmpPoints );\r\n    \t\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n    \t\t\tif ( solid ) {\r\n\r\n    \t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n    \t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\r\n    \t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n    \t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n    \t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n    \t\t\t\t//console.log('cw', i);\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n    \t\t\t\t//console.log('ccw', i);\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// only Holes? -> probably all Shapes with wrong orientation\r\n    \t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n    \t\tif ( newShapes.length > 1 ) {\r\n\r\n    \t\t\tvar ambiguous = false;\r\n    \t\t\tvar toChange = [];\r\n\r\n    \t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n    \t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n    \t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\r\n    \t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n    \t\t\t\t\tvar ho = sho[ hIdx ];\r\n    \t\t\t\t\tvar hole_unassigned = true;\r\n\r\n    \t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n    \t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n    \t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n    \t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n    \t\t\t\t\t\t\t\thole_unassigned = false;\r\n    \t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n    \t\t\t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t\t\tambiguous = true;\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n    \t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n    \t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n    \t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n    \t\t\tif ( toChange.length > 0 ) {\r\n\r\n    \t\t\t\t// console.log(\"to change: \", toChange);\r\n    \t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar tmpHoles;\r\n\r\n    \t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n    \t\t\ttmpShape = newShapes[ i ].s;\r\n    \t\t\tshapes.push( tmpShape );\r\n    \t\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n    \t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t//console.log(\"shape\", shapes);\r\n\r\n    \t\treturn shapes;\r\n\r\n    \t}\r\n    }\r\n\r\n    /**\r\n     * @author zz85 / http://www.lab4games.net/zz85/blog\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Font( data ) {\r\n\r\n    \tthis.data = data;\r\n\r\n    }\r\n\r\n    Object.assign( Font.prototype, {\r\n\r\n    \tisFont: true,\r\n\r\n    \tgenerateShapes: function ( text, size, divisions ) {\r\n\r\n    \t\tfunction createPaths( text ) {\r\n\r\n    \t\t\tvar chars = String( text ).split( '' );\r\n    \t\t\tvar scale = size / data.resolution;\r\n    \t\t\tvar offset = 0;\r\n\r\n    \t\t\tvar paths = [];\r\n\r\n    \t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\r\n\r\n    \t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\r\n    \t\t\t\toffset += ret.offset;\r\n\r\n    \t\t\t\tpaths.push( ret.path );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn paths;\r\n\r\n    \t\t}\r\n\r\n    \t\tfunction createPath( c, scale, offset ) {\r\n\r\n    \t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\r\n\r\n    \t\t\tif ( ! glyph ) return;\r\n\r\n    \t\t\tvar path = new ShapePath();\r\n\r\n    \t\t\tvar pts = [], b2 = exports.ShapeUtils.b2, b3 = exports.ShapeUtils.b3;\r\n    \t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\r\n\r\n    \t\t\tif ( glyph.o ) {\r\n\r\n    \t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\r\n    \t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\r\n\r\n    \t\t\t\t\tvar action = outline[ i ++ ];\r\n\r\n    \t\t\t\t\tswitch ( action ) {\r\n\r\n    \t\t\t\t\t\tcase 'm': // moveTo\r\n\r\n    \t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n    \t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\r\n    \t\t\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n    \t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\tcase 'l': // lineTo\r\n\r\n    \t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n    \t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\r\n    \t\t\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n    \t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\tcase 'q': // quadraticCurveTo\r\n\r\n    \t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n    \t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n    \t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n    \t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\r\n    \t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n    \t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n    \t\t\t\t\t\t\tif ( laste ) {\r\n\r\n    \t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n    \t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n    \t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\r\n    \t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n    \t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\r\n    \t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\r\n\r\n    \t\t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\tcase 'b': // bezierCurveTo\r\n\r\n    \t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n    \t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n    \t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n    \t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n    \t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\r\n    \t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\r\n\r\n    \t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n    \t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n    \t\t\t\t\t\t\tif ( laste ) {\r\n\r\n    \t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n    \t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n    \t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\r\n    \t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n    \t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\r\n    \t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n    \t\t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n    \t\t}\r\n\r\n    \t\t//\r\n\r\n    \t\tif ( size === undefined ) size = 100;\r\n    \t\tif ( divisions === undefined ) divisions = 4;\r\n\r\n    \t\tvar data = this.data;\r\n\r\n    \t\tvar paths = createPaths( text );\r\n    \t\tvar shapes = [];\r\n\r\n    \t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n    \t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn shapes;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function FontLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    }\r\n\r\n    Object.assign( FontLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tvar loader = new XHRLoader( this.manager );\r\n    \t\tloader.load( url, function ( text ) {\r\n\r\n    \t\t\tvar json;\r\n\r\n    \t\t\ttry {\r\n\r\n    \t\t\t\tjson = JSON.parse( text );\r\n\r\n    \t\t\t} catch ( e ) {\r\n\r\n    \t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\r\n    \t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar font = scope.parse( json );\r\n\r\n    \t\t\tif ( onLoad ) onLoad( font );\r\n\r\n    \t\t}, onProgress, onError );\r\n\r\n    \t},\r\n\r\n    \tparse: function ( json ) {\r\n\r\n    \t\treturn new Font( json );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    var context;\r\n\r\n    function getAudioContext() {\r\n\r\n    \tif ( context === undefined ) {\r\n\r\n    \t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n    \t}\r\n\r\n    \treturn context;\r\n\r\n    }\r\n\r\n    /**\r\n     * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n     */\r\n\r\n    function AudioLoader( manager ) {\r\n\r\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\r\n\r\n    }\r\n\r\n    Object.assign( AudioLoader.prototype, {\r\n\r\n    \tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n    \t\tvar loader = new XHRLoader( this.manager );\r\n    \t\tloader.setResponseType( 'arraybuffer' );\r\n    \t\tloader.load( url, function ( buffer ) {\r\n\r\n    \t\t\tvar context = getAudioContext();\r\n\r\n    \t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\r\n\r\n    \t\t\t\tonLoad( audioBuffer );\r\n\r\n    \t\t\t} );\r\n\r\n    \t\t}, onProgress, onError );\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function StereoCamera() {\r\n\r\n    \tthis.type = 'StereoCamera';\r\n\r\n    \tthis.aspect = 1;\r\n\r\n    \tthis.eyeSep = 0.064;\r\n\r\n    \tthis.cameraL = new PerspectiveCamera();\r\n    \tthis.cameraL.layers.enable( 1 );\r\n    \tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n    \tthis.cameraR = new PerspectiveCamera();\r\n    \tthis.cameraR.layers.enable( 2 );\r\n    \tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n    }\r\n\r\n    Object.assign( StereoCamera.prototype, {\r\n\r\n    \tupdate: ( function () {\r\n\r\n    \t\tvar instance, focus, fov, aspect, near, far, zoom;\r\n\r\n    \t\tvar eyeRight = new Matrix4();\r\n    \t\tvar eyeLeft = new Matrix4();\r\n\r\n    \t\treturn function update( camera ) {\r\n\r\n    \t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\r\n    \t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\r\n    \t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom;\r\n\r\n    \t\t\tif ( needsUpdate ) {\r\n\r\n    \t\t\t\tinstance = this;\r\n    \t\t\t\tfocus = camera.focus;\r\n    \t\t\t\tfov = camera.fov;\r\n    \t\t\t\taspect = camera.aspect * this.aspect;\r\n    \t\t\t\tnear = camera.near;\r\n    \t\t\t\tfar = camera.far;\r\n    \t\t\t\tzoom = camera.zoom;\r\n\r\n    \t\t\t\t// Off-axis stereoscopic effect based on\r\n    \t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n    \t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\r\n    \t\t\t\tvar eyeSep = this.eyeSep / 2;\r\n    \t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\r\n    \t\t\t\tvar ymax = ( near * Math.tan( exports.Math.DEG2RAD * fov * 0.5 ) ) / zoom;\r\n    \t\t\t\tvar xmin, xmax;\r\n\r\n    \t\t\t\t// translate xOffset\r\n\r\n    \t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\r\n    \t\t\t\teyeRight.elements[ 12 ] = eyeSep;\r\n\r\n    \t\t\t\t// for left eye\r\n\r\n    \t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\r\n    \t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\r\n\r\n    \t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n    \t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n    \t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\r\n\r\n    \t\t\t\t// for right eye\r\n\r\n    \t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\r\n    \t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\r\n\r\n    \t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n    \t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n    \t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\r\n    \t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\r\n\r\n    \t\t};\r\n\r\n    \t} )()\r\n\r\n    } );\r\n\r\n    /**\r\n     * Camera for rendering cube maps\r\n     *\t- renders scene into axis-aligned cube\r\n     *\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function CubeCamera( near, far, cubeResolution ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'CubeCamera';\r\n\r\n    \tvar fov = 90, aspect = 1;\r\n\r\n    \tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\r\n    \tcameraPX.up.set( 0, - 1, 0 );\r\n    \tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\r\n    \tthis.add( cameraPX );\r\n\r\n    \tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\r\n    \tcameraNX.up.set( 0, - 1, 0 );\r\n    \tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\r\n    \tthis.add( cameraNX );\r\n\r\n    \tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\r\n    \tcameraPY.up.set( 0, 0, 1 );\r\n    \tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\r\n    \tthis.add( cameraPY );\r\n\r\n    \tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\r\n    \tcameraNY.up.set( 0, 0, - 1 );\r\n    \tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\r\n    \tthis.add( cameraNY );\r\n\r\n    \tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\r\n    \tcameraPZ.up.set( 0, - 1, 0 );\r\n    \tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\r\n    \tthis.add( cameraPZ );\r\n\r\n    \tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\r\n    \tcameraNZ.up.set( 0, - 1, 0 );\r\n    \tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\r\n    \tthis.add( cameraNZ );\r\n\r\n    \tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\r\n\r\n    \tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\r\n\r\n    \tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n    \t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n    \t\tvar renderTarget = this.renderTarget;\r\n    \t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n    \t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n    \t\trenderTarget.activeCubeFace = 0;\r\n    \t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n    \t\trenderTarget.activeCubeFace = 1;\r\n    \t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n    \t\trenderTarget.activeCubeFace = 2;\r\n    \t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n    \t\trenderTarget.activeCubeFace = 3;\r\n    \t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n    \t\trenderTarget.activeCubeFace = 4;\r\n    \t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n    \t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n    \t\trenderTarget.activeCubeFace = 5;\r\n    \t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n    \t\trenderer.setRenderTarget( null );\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    CubeCamera.prototype = Object.create( Object3D.prototype );\r\n    CubeCamera.prototype.constructor = CubeCamera;\r\n\r\n    function AudioListener() {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'AudioListener';\r\n\r\n    \tthis.context = getAudioContext();\r\n\r\n    \tthis.gain = this.context.createGain();\r\n    \tthis.gain.connect( this.context.destination );\r\n\r\n    \tthis.filter = null;\r\n\r\n    }\r\n\r\n    AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: AudioListener,\r\n\r\n    \tgetInput: function () {\r\n\r\n    \t\treturn this.gain;\r\n\r\n    \t},\r\n\r\n    \tremoveFilter: function ( ) {\r\n\r\n    \t\tif ( this.filter !== null ) {\r\n\r\n    \t\t\tthis.gain.disconnect( this.filter );\r\n    \t\t\tthis.filter.disconnect( this.context.destination );\r\n    \t\t\tthis.gain.connect( this.context.destination );\r\n    \t\t\tthis.filter = null;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tgetFilter: function () {\r\n\r\n    \t\treturn this.filter;\r\n\r\n    \t},\r\n\r\n    \tsetFilter: function ( value ) {\r\n\r\n    \t\tif ( this.filter !== null ) {\r\n\r\n    \t\t\tthis.gain.disconnect( this.filter );\r\n    \t\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.filter = value;\r\n    \t\tthis.gain.connect( this.filter );\r\n    \t\tthis.filter.connect( this.context.destination );\r\n\r\n    \t},\r\n\r\n    \tgetMasterVolume: function () {\r\n\r\n    \t\treturn this.gain.gain.value;\r\n\r\n    \t},\r\n\r\n    \tsetMasterVolume: function ( value ) {\r\n\r\n    \t\tthis.gain.gain.value = value;\r\n\r\n    \t},\r\n\r\n    \tupdateMatrixWorld: ( function () {\r\n\r\n    \t\tvar position = new Vector3();\r\n    \t\tvar quaternion = new Quaternion();\r\n    \t\tvar scale = new Vector3();\r\n\r\n    \t\tvar orientation = new Vector3();\r\n\r\n    \t\treturn function updateMatrixWorld( force ) {\r\n\r\n    \t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n    \t\t\tvar listener = this.context.listener;\r\n    \t\t\tvar up = this.up;\r\n\r\n    \t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n    \t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n    \t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n    \t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n    \t\t};\r\n\r\n    \t} )()\r\n\r\n    } );\r\n\r\n    function Audio( listener ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.type = 'Audio';\r\n\r\n    \tthis.context = listener.context;\r\n    \tthis.source = this.context.createBufferSource();\r\n    \tthis.source.onended = this.onEnded.bind( this );\r\n\r\n    \tthis.gain = this.context.createGain();\r\n    \tthis.gain.connect( listener.getInput() );\r\n\r\n    \tthis.autoplay = false;\r\n\r\n    \tthis.startTime = 0;\r\n    \tthis.playbackRate = 1;\r\n    \tthis.isPlaying = false;\r\n    \tthis.hasPlaybackControl = true;\r\n    \tthis.sourceType = 'empty';\r\n\r\n    \tthis.filters = [];\r\n\r\n    }\r\n\r\n    Audio.prototype = Object.assign( Object.create( Object3D.prototype ), {\r\n\r\n    \tconstructor: Audio,\r\n\r\n    \tgetOutput: function () {\r\n\r\n    \t\treturn this.gain;\r\n\r\n    \t},\r\n\r\n    \tsetNodeSource: function ( audioNode ) {\r\n\r\n    \t\tthis.hasPlaybackControl = false;\r\n    \t\tthis.sourceType = 'audioNode';\r\n    \t\tthis.source = audioNode;\r\n    \t\tthis.connect();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetBuffer: function ( audioBuffer ) {\r\n\r\n    \t\tthis.source.buffer = audioBuffer;\r\n    \t\tthis.sourceType = 'buffer';\r\n\r\n    \t\tif ( this.autoplay ) this.play();\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tplay: function () {\r\n\r\n    \t\tif ( this.isPlaying === true ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar source = this.context.createBufferSource();\r\n\r\n    \t\tsource.buffer = this.source.buffer;\r\n    \t\tsource.loop = this.source.loop;\r\n    \t\tsource.onended = this.source.onended;\r\n    \t\tsource.start( 0, this.startTime );\r\n    \t\tsource.playbackRate.value = this.playbackRate;\r\n\r\n    \t\tthis.isPlaying = true;\r\n\r\n    \t\tthis.source = source;\r\n\r\n    \t\treturn this.connect();\r\n\r\n    \t},\r\n\r\n    \tpause: function () {\r\n\r\n    \t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.source.stop();\r\n    \t\tthis.startTime = this.context.currentTime;\r\n    \t\tthis.isPlaying = false;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tstop: function () {\r\n\r\n    \t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.source.stop();\r\n    \t\tthis.startTime = 0;\r\n    \t\tthis.isPlaying = false;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tconnect: function () {\r\n\r\n    \t\tif ( this.filters.length > 0 ) {\r\n\r\n    \t\t\tthis.source.connect( this.filters[ 0 ] );\r\n\r\n    \t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.source.connect( this.getOutput() );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tdisconnect: function () {\r\n\r\n    \t\tif ( this.filters.length > 0 ) {\r\n\r\n    \t\t\tthis.source.disconnect( this.filters[ 0 ] );\r\n\r\n    \t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetFilters: function () {\r\n\r\n    \t\treturn this.filters;\r\n\r\n    \t},\r\n\r\n    \tsetFilters: function ( value ) {\r\n\r\n    \t\tif ( ! value ) value = [];\r\n\r\n    \t\tif ( this.isPlaying === true ) {\r\n\r\n    \t\t\tthis.disconnect();\r\n    \t\t\tthis.filters = value;\r\n    \t\t\tthis.connect();\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.filters = value;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetFilter: function () {\r\n\r\n    \t\treturn this.getFilters()[ 0 ];\r\n\r\n    \t},\r\n\r\n    \tsetFilter: function ( filter ) {\r\n\r\n    \t\treturn this.setFilters( filter ? [ filter ] : [] );\r\n\r\n    \t},\r\n\r\n    \tsetPlaybackRate: function ( value ) {\r\n\r\n    \t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.playbackRate = value;\r\n\r\n    \t\tif ( this.isPlaying === true ) {\r\n\r\n    \t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetPlaybackRate: function () {\r\n\r\n    \t\treturn this.playbackRate;\r\n\r\n    \t},\r\n\r\n    \tonEnded: function () {\r\n\r\n    \t\tthis.isPlaying = false;\r\n\r\n    \t},\r\n\r\n    \tgetLoop: function () {\r\n\r\n    \t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n    \t\t\treturn false;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this.source.loop;\r\n\r\n    \t},\r\n\r\n    \tsetLoop: function ( value ) {\r\n\r\n    \t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.source.loop = value;\r\n\r\n    \t},\r\n\r\n    \tgetVolume: function () {\r\n\r\n    \t\treturn this.gain.gain.value;\r\n\r\n    \t},\r\n\r\n\r\n    \tsetVolume: function ( value ) {\r\n\r\n    \t\tthis.gain.gain.value = value;\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    function PositionalAudio( listener ) {\r\n\r\n    \tAudio.call( this, listener );\r\n\r\n    \tthis.panner = this.context.createPanner();\r\n    \tthis.panner.connect( this.gain );\r\n\r\n    }\r\n\r\n    PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\r\n\r\n    \tconstructor: PositionalAudio,\r\n\r\n    \tgetOutput: function () {\r\n\r\n    \t\treturn this.panner;\r\n\r\n    \t},\r\n\r\n    \tgetRefDistance: function () {\r\n\r\n    \t\treturn this.panner.refDistance;\r\n\r\n    \t},\r\n\r\n    \tsetRefDistance: function ( value ) {\r\n\r\n    \t\tthis.panner.refDistance = value;\r\n\r\n    \t},\r\n\r\n    \tgetRolloffFactor: function () {\r\n\r\n    \t\treturn this.panner.rolloffFactor;\r\n\r\n    \t},\r\n\r\n    \tsetRolloffFactor: function ( value ) {\r\n\r\n    \t\tthis.panner.rolloffFactor = value;\r\n\r\n    \t},\r\n\r\n    \tgetDistanceModel: function () {\r\n\r\n    \t\treturn this.panner.distanceModel;\r\n\r\n    \t},\r\n\r\n    \tsetDistanceModel: function ( value ) {\r\n\r\n    \t\tthis.panner.distanceModel = value;\r\n\r\n    \t},\r\n\r\n    \tgetMaxDistance: function () {\r\n\r\n    \t\treturn this.panner.maxDistance;\r\n\r\n    \t},\r\n\r\n    \tsetMaxDistance: function ( value ) {\r\n\r\n    \t\tthis.panner.maxDistance = value;\r\n\r\n    \t},\r\n\r\n    \tupdateMatrixWorld: ( function () {\r\n\r\n    \t\tvar position = new Vector3();\r\n\r\n    \t\treturn function updateMatrixWorld( force ) {\r\n\r\n    \t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n    \t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n    \t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n    \t\t};\r\n\r\n    \t} )()\r\n\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function AudioAnalyser( audio, fftSize ) {\r\n\r\n    \tthis.analyser = audio.context.createAnalyser();\r\n    \tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\r\n\r\n    \tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n    \taudio.getOutput().connect( this.analyser );\r\n\r\n    }\r\n\r\n    Object.assign( AudioAnalyser.prototype, {\r\n\r\n    \tgetFrequencyData: function () {\r\n\r\n    \t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n    \t\treturn this.data;\r\n\r\n    \t},\r\n\r\n    \tgetAverageFrequency: function () {\r\n\r\n    \t\tvar value = 0, data = this.getFrequencyData();\r\n\r\n    \t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n    \t\t\tvalue += data[ i ];\r\n\r\n    \t\t}\r\n\r\n    \t\treturn value / data.length;\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    /**\r\n     *\r\n     * Buffered scene graph property that allows weighted accumulation.\r\n     *\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function PropertyMixer( binding, typeName, valueSize ) {\r\n\r\n    \tthis.binding = binding;\r\n    \tthis.valueSize = valueSize;\r\n\r\n    \tvar bufferType = Float64Array,\r\n    \t\tmixFunction;\r\n\r\n    \tswitch ( typeName ) {\r\n\r\n    \t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\r\n\r\n    \t\tcase 'string':\r\n    \t\tcase 'bool':\r\n\r\n    \t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\r\n\r\n    \t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\r\n\r\n    \t}\r\n\r\n    \tthis.buffer = new bufferType( valueSize * 4 );\r\n    \t// layout: [ incoming | accu0 | accu1 | orig ]\r\n    \t//\r\n    \t// interpolators can use .buffer as their .result\r\n    \t// the data then goes to 'incoming'\r\n    \t//\r\n    \t// 'accu0' and 'accu1' are used frame-interleaved for\r\n    \t// the cumulative result and are compared to detect\r\n    \t// changes\r\n    \t//\r\n    \t// 'orig' stores the original state of the property\r\n\r\n    \tthis._mixBufferRegion = mixFunction;\r\n\r\n    \tthis.cumulativeWeight = 0;\r\n\r\n    \tthis.useCount = 0;\r\n    \tthis.referenceCount = 0;\r\n\r\n    }\r\n\r\n    PropertyMixer.prototype = {\r\n\r\n    \tconstructor: PropertyMixer,\r\n\r\n    \t// accumulate data in the 'incoming' region into 'accu<i>'\r\n    \taccumulate: function( accuIndex, weight ) {\r\n\r\n    \t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n    \t\t// the weight and shouldn't have made the call in the first place\r\n\r\n    \t\tvar buffer = this.buffer,\r\n    \t\t\tstride = this.valueSize,\r\n    \t\t\toffset = accuIndex * stride + stride,\r\n\r\n    \t\t\tcurrentWeight = this.cumulativeWeight;\r\n\r\n    \t\tif ( currentWeight === 0 ) {\r\n\r\n    \t\t\t// accuN := incoming * weight\r\n\r\n    \t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n    \t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tcurrentWeight = weight;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// accuN := accuN + incoming * weight\r\n\r\n    \t\t\tcurrentWeight += weight;\r\n    \t\t\tvar mix = weight / currentWeight;\r\n    \t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.cumulativeWeight = currentWeight;\r\n\r\n    \t},\r\n\r\n    \t// apply the state of 'accu<i>' to the binding when accus differ\r\n    \tapply: function( accuIndex ) {\r\n\r\n    \t\tvar stride = this.valueSize,\r\n    \t\t\tbuffer = this.buffer,\r\n    \t\t\toffset = accuIndex * stride + stride,\r\n\r\n    \t\t\tweight = this.cumulativeWeight,\r\n\r\n    \t\t\tbinding = this.binding;\r\n\r\n    \t\tthis.cumulativeWeight = 0;\r\n\r\n    \t\tif ( weight < 1 ) {\r\n\r\n    \t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n    \t\t\tvar originalValueOffset = stride * 3;\r\n\r\n    \t\t\tthis._mixBufferRegion(\r\n    \t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n    \t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n    \t\t\t\t// value has changed -> update scene graph\r\n\r\n    \t\t\t\tbinding.setValue( buffer, offset );\r\n    \t\t\t\tbreak;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t// remember the state of the bound property and copy it to both accus\r\n    \tsaveOriginalState: function() {\r\n\r\n    \t\tvar binding = this.binding;\r\n\r\n    \t\tvar buffer = this.buffer,\r\n    \t\t\tstride = this.valueSize,\r\n\r\n    \t\t\toriginalValueOffset = stride * 3;\r\n\r\n    \t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n    \t\t// accu[0..1] := orig -- initially detect changes against the original\r\n    \t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n    \t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.cumulativeWeight = 0;\r\n\r\n    \t},\r\n\r\n    \t// apply the state previously taken via 'saveOriginalState' to the binding\r\n    \trestoreOriginalState: function() {\r\n\r\n    \t\tvar originalValueOffset = this.valueSize * 3;\r\n    \t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n    \t},\r\n\r\n\r\n    \t// mix functions\r\n\r\n    \t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n    \t\tif ( t >= 0.5 ) {\r\n\r\n    \t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n    \t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n    \t\tQuaternion.slerpFlat( buffer, dstOffset,\r\n    \t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\r\n\r\n    \t},\r\n\r\n    \t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n    \t\tvar s = 1 - t;\r\n\r\n    \t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n    \t\t\tvar j = dstOffset + i;\r\n\r\n    \t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * A reference to a real property in the scene graph.\r\n     *\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function PropertyBinding( rootNode, path, parsedPath ) {\r\n\r\n    \tthis.path = path;\r\n    \tthis.parsedPath = parsedPath ||\r\n    \t\t\tPropertyBinding.parseTrackName( path );\r\n\r\n    \tthis.node = PropertyBinding.findNode(\r\n    \t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\r\n\r\n    \tthis.rootNode = rootNode;\r\n\r\n    }\r\n\r\n    PropertyBinding.prototype = {\r\n\r\n    \tconstructor: PropertyBinding,\r\n\r\n    \tgetValue: function getValue_unbound( targetArray, offset ) {\r\n\r\n    \t\tthis.bind();\r\n    \t\tthis.getValue( targetArray, offset );\r\n\r\n    \t\t// Note: This class uses a State pattern on a per-method basis:\r\n    \t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n    \t\t// prototype version of these methods with one that represents\r\n    \t\t// the bound state. When the property is not found, the methods\r\n    \t\t// become no-ops.\r\n\r\n    \t},\r\n\r\n    \tsetValue: function getValue_unbound( sourceArray, offset ) {\r\n\r\n    \t\tthis.bind();\r\n    \t\tthis.setValue( sourceArray, offset );\r\n\r\n    \t},\r\n\r\n    \t// create getter / setter pair for a property in the scene graph\r\n    \tbind: function() {\r\n\r\n    \t\tvar targetObject = this.node,\r\n    \t\t\tparsedPath = this.parsedPath,\r\n\r\n    \t\t\tobjectName = parsedPath.objectName,\r\n    \t\t\tpropertyName = parsedPath.propertyName,\r\n    \t\t\tpropertyIndex = parsedPath.propertyIndex;\r\n\r\n    \t\tif ( ! targetObject ) {\r\n\r\n    \t\t\ttargetObject = PropertyBinding.findNode(\r\n    \t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n\r\n    \t\t\tthis.node = targetObject;\r\n\r\n    \t\t}\r\n\r\n    \t\t// set fail state so we can just 'return' on error\r\n    \t\tthis.getValue = this._getValue_unavailable;\r\n    \t\tthis.setValue = this._setValue_unavailable;\r\n\r\n     \t\t// ensure there is a value node\r\n    \t\tif ( ! targetObject ) {\r\n\r\n    \t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( objectName ) {\r\n\r\n    \t\t\tvar objectIndex = parsedPath.objectIndex;\r\n\r\n    \t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n    \t\t\tswitch ( objectName ) {\r\n\r\n    \t\t\t\tcase 'materials':\r\n\r\n    \t\t\t\t\tif ( ! targetObject.material ) {\r\n\r\n    \t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\r\n    \t\t\t\t\t\treturn;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tif ( ! targetObject.material.materials ) {\r\n\r\n    \t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\r\n    \t\t\t\t\t\treturn;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tcase 'bones':\r\n\r\n    \t\t\t\t\tif ( ! targetObject.skeleton ) {\r\n\r\n    \t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\r\n    \t\t\t\t\t\treturn;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n    \t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n    \t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n    \t\t\t\t\t// support resolving morphTarget names into indices.\r\n    \t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\r\n    \t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\r\n\r\n    \t\t\t\t\t\t\tobjectIndex = i;\r\n    \t\t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t\t}\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tbreak;\r\n\r\n    \t\t\t\tdefault:\r\n\r\n    \t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n    \t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\r\n    \t\t\t\t\t\treturn;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n    \t\t\t}\r\n\r\n\r\n    \t\t\tif ( objectIndex !== undefined ) {\r\n\r\n    \t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\r\n\r\n    \t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\r\n    \t\t\t\t\treturn;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// resolve property\r\n    \t\tvar nodeProperty = targetObject[ propertyName ];\r\n\r\n    \t\tif ( nodeProperty === undefined ) {\r\n\r\n    \t\t\tvar nodeName = parsedPath.nodeName;\r\n\r\n    \t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\r\n    \t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\r\n    \t\t\treturn;\r\n\r\n    \t\t}\r\n\r\n    \t\t// determine versioning scheme\r\n    \t\tvar versioning = this.Versioning.None;\r\n\r\n    \t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n    \t\t\tversioning = this.Versioning.NeedsUpdate;\r\n    \t\t\tthis.targetObject = targetObject;\r\n\r\n    \t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n    \t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n    \t\t\tthis.targetObject = targetObject;\r\n\r\n    \t\t}\r\n\r\n    \t\t// determine how the property gets bound\r\n    \t\tvar bindingType = this.BindingType.Direct;\r\n\r\n    \t\tif ( propertyIndex !== undefined ) {\r\n    \t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n    \t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\r\n    \t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n    \t\t\t\t// support resolving morphTarget names into indices.\r\n    \t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n    \t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\r\n    \t\t\t\t\treturn;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\r\n    \t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\r\n    \t\t\t\t\treturn;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\r\n    \t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\r\n\r\n    \t\t\t\t\t\tpropertyIndex = i;\r\n    \t\t\t\t\t\tbreak;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n    \t\t\tthis.resolvedProperty = nodeProperty;\r\n    \t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n    \t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n    \t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n    \t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n    \t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n    \t\t} else if ( nodeProperty.length !== undefined ) {\r\n\r\n    \t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n    \t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.propertyName = propertyName;\r\n\r\n    \t\t}\r\n\r\n    \t\t// select getter / setter\r\n    \t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n    \t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n    \t},\r\n\r\n    \tunbind: function() {\r\n\r\n    \t\tthis.node = null;\r\n\r\n    \t\t// back to the prototype version of getValue / setValue\r\n    \t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n    \t\tthis.getValue = this._getValue_unbound;\r\n    \t\tthis.setValue = this._setValue_unbound;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    Object.assign( PropertyBinding.prototype, { // prototype, continued\r\n\r\n    \t// these are used to \"bind\" a nonexistent property\r\n    \t_getValue_unavailable: function() {},\r\n    \t_setValue_unavailable: function() {},\r\n\r\n    \t// initial state of these methods that calls 'bind'\r\n    \t_getValue_unbound: PropertyBinding.prototype.getValue,\r\n    \t_setValue_unbound: PropertyBinding.prototype.setValue,\r\n\r\n    \tBindingType: {\r\n    \t\tDirect: 0,\r\n    \t\tEntireArray: 1,\r\n    \t\tArrayElement: 2,\r\n    \t\tHasFromToArray: 3\r\n    \t},\r\n\r\n    \tVersioning: {\r\n    \t\tNone: 0,\r\n    \t\tNeedsUpdate: 1,\r\n    \t\tMatrixWorldNeedsUpdate: 2\r\n    \t},\r\n\r\n    \tGetterByBindingType: [\r\n\r\n    \t\tfunction getValue_direct( buffer, offset ) {\r\n\r\n    \t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\r\n\r\n    \t\t},\r\n\r\n    \t\tfunction getValue_array( buffer, offset ) {\r\n\r\n    \t\t\tvar source = this.resolvedProperty;\r\n\r\n    \t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n    \t\t\t}\r\n\r\n    \t\t},\r\n\r\n    \t\tfunction getValue_arrayElement( buffer, offset ) {\r\n\r\n    \t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n    \t\t},\r\n\r\n    \t\tfunction getValue_toArray( buffer, offset ) {\r\n\r\n    \t\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n    \t\t}\r\n\r\n    \t],\r\n\r\n    \tSetterByBindingTypeAndVersioning: [\r\n\r\n    \t\t[\r\n    \t\t\t// Direct\r\n\r\n    \t\t\tfunction setValue_direct( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n    \t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n    \t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t], [\r\n\r\n    \t\t\t// EntireArray\r\n\r\n    \t\t\tfunction setValue_array( buffer, offset ) {\r\n\r\n    \t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n    \t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n    \t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n    \t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n    \t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n    \t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t], [\r\n\r\n    \t\t\t// ArrayElement\r\n\r\n    \t\t\tfunction setValue_arrayElement( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n    \t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n    \t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t], [\r\n\r\n    \t\t\t// HasToFromArray\r\n\r\n    \t\t\tfunction setValue_fromArray( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n    \t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n    \t\t\t},\r\n\r\n    \t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n    \t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n    \t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t]\r\n\r\n    \t]\r\n\r\n    } );\r\n\r\n    PropertyBinding.Composite =\r\n    \t\tfunction( targetGroup, path, optionalParsedPath ) {\r\n\r\n    \tvar parsedPath = optionalParsedPath ||\r\n    \t\t\tPropertyBinding.parseTrackName( path );\r\n\r\n    \tthis._targetGroup = targetGroup;\r\n    \tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n    };\r\n\r\n    PropertyBinding.Composite.prototype = {\r\n\r\n    \tconstructor: PropertyBinding.Composite,\r\n\r\n    \tgetValue: function( array, offset ) {\r\n\r\n    \t\tthis.bind(); // bind all binding\r\n\r\n    \t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\r\n    \t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n    \t\t// and only call .getValue on the first\r\n    \t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n    \t},\r\n\r\n    \tsetValue: function( array, offset ) {\r\n\r\n    \t\tvar bindings = this._bindings;\r\n\r\n    \t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n    \t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tbind: function() {\r\n\r\n    \t\tvar bindings = this._bindings;\r\n\r\n    \t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n    \t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tbindings[ i ].bind();\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tunbind: function() {\r\n\r\n    \t\tvar bindings = this._bindings;\r\n\r\n    \t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n    \t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tbindings[ i ].unbind();\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    PropertyBinding.create = function( root, path, parsedPath ) {\r\n\r\n    \tif ( ! ( (root && root.isAnimationObjectGroup) ) ) {\r\n\r\n    \t\treturn new PropertyBinding( root, path, parsedPath );\r\n\r\n    \t} else {\r\n\r\n    \t\treturn new PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    PropertyBinding.parseTrackName = function( trackName ) {\r\n\r\n    \t// matches strings in the form of:\r\n    \t//    nodeName.property\r\n    \t//    nodeName.property[accessor]\r\n    \t//    nodeName.material.property[accessor]\r\n    \t//    uuid.property[accessor]\r\n    \t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\r\n    \t//    parentName/nodeName.property\r\n    \t//    parentName/parentName/nodeName.property[index]\r\n    \t//    .bone[Armature.DEF_cog].position\r\n    \t//    scene:helium_balloon_model:helium_balloon_model.position\r\n    \t// created and tested via https://regex101.com/#javascript\r\n\r\n    \tvar re = /^((?:\\w+[\\/:])*)(\\w+)?(?:\\.(\\w+)(?:\\[(.+)\\])?)?\\.(\\w+)(?:\\[(.+)\\])?$/;\r\n    \tvar matches = re.exec( trackName );\r\n\r\n    \tif ( ! matches ) {\r\n\r\n    \t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\r\n\r\n    \t}\r\n\r\n    \tvar results = {\r\n    \t\t// directoryName: matches[ 1 ], // (tschw) currently unused\r\n    \t\tnodeName: matches[ 2 ], \t// allowed to be null, specified root node.\r\n    \t\tobjectName: matches[ 3 ],\r\n    \t\tobjectIndex: matches[ 4 ],\r\n    \t\tpropertyName: matches[ 5 ],\r\n    \t\tpropertyIndex: matches[ 6 ]\t// allowed to be null, specifies that the whole property is set.\r\n    \t};\r\n\r\n    \tif ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\r\n    \t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\r\n\r\n    \t}\r\n\r\n    \treturn results;\r\n\r\n    };\r\n\r\n    PropertyBinding.findNode = function( root, nodeName ) {\r\n\r\n    \tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n    \t\treturn root;\r\n\r\n    \t}\r\n\r\n    \t// search into skeleton bones.\r\n    \tif ( root.skeleton ) {\r\n\r\n    \t\tvar searchSkeleton = function( skeleton ) {\r\n\r\n    \t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\r\n\r\n    \t\t\t\tvar bone = skeleton.bones[ i ];\r\n\r\n    \t\t\t\tif ( bone.name === nodeName ) {\r\n\r\n    \t\t\t\t\treturn bone;\r\n\r\n    \t\t\t\t}\r\n    \t\t\t}\r\n\r\n    \t\t\treturn null;\r\n\r\n    \t\t};\r\n\r\n    \t\tvar bone = searchSkeleton( root.skeleton );\r\n\r\n    \t\tif ( bone ) {\r\n\r\n    \t\t\treturn bone;\r\n\r\n    \t\t}\r\n    \t}\r\n\r\n    \t// search into node subtree.\r\n    \tif ( root.children ) {\r\n\r\n    \t\tvar searchNodeSubtree = function( children ) {\r\n\r\n    \t\t\tfor( var i = 0; i < children.length; i ++ ) {\r\n\r\n    \t\t\t\tvar childNode = children[ i ];\r\n\r\n    \t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n    \t\t\t\t\treturn childNode;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\r\n    \t\t\t\tif ( result ) return result;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\treturn null;\r\n\r\n    \t\t};\r\n\r\n    \t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\r\n    \t\tif ( subTreeNode ) {\r\n\r\n    \t\t\treturn subTreeNode;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \treturn null;\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * A group of objects that receives a shared animation state.\r\n     *\r\n     * Usage:\r\n     *\r\n     * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n     * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n     *\r\n     * \t-\tInstead pass this object as 'root'.\r\n     *\r\n     * \t-\tYou can also add and remove objects later when the mixer\r\n     * \t\tis running.\r\n     *\r\n     * Note:\r\n     *\r\n     *  \tObjects of this class appear as one object to the mixer,\r\n     *  \tso cache control of the individual objects must be done\r\n     *  \ton the group.\r\n     *\r\n     * Limitation:\r\n     *\r\n     * \t- \tThe animated properties must be compatible among the\r\n     * \t\tall objects in the group.\r\n     *\r\n     *  -\tA single property can either be controlled through a\r\n     *  \ttarget group or directly, but not both.\r\n     *\r\n     * @author tschw\r\n     */\r\n\r\n    function AnimationObjectGroup( var_args ) {\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \t// cached objects followed by the active ones\r\n    \tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n    \tthis.nCachedObjects_ = 0;\t\t\t// threshold\r\n    \t// note: read by PropertyBinding.Composite\r\n\r\n    \tvar indices = {};\r\n    \tthis._indicesByUUID = indices;\t\t// for bookkeeping\r\n\r\n    \tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n    \t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n    \t}\r\n\r\n    \tthis._paths = [];\t\t\t\t\t// inside: string\r\n    \tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\r\n    \tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\r\n    \tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\r\n\r\n    \tvar scope = this;\r\n\r\n    \tthis.stats = {\r\n\r\n    \t\tobjects: {\r\n    \t\t\tget total() { return scope._objects.length; },\r\n    \t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\r\n    \t\t},\r\n\r\n    \t\tget bindingsPerObject() { return scope._bindings.length; }\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    AnimationObjectGroup.prototype = {\r\n\r\n    \tconstructor: AnimationObjectGroup,\r\n\r\n    \tisAnimationObjectGroup: true,\r\n\r\n    \tadd: function( var_args ) {\r\n\r\n    \t\tvar objects = this._objects,\r\n    \t\t\tnObjects = objects.length,\r\n    \t\t\tnCachedObjects = this.nCachedObjects_,\r\n    \t\t\tindicesByUUID = this._indicesByUUID,\r\n    \t\t\tpaths = this._paths,\r\n    \t\t\tparsedPaths = this._parsedPaths,\r\n    \t\t\tbindings = this._bindings,\r\n    \t\t\tnBindings = bindings.length;\r\n\r\n    \t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tvar object = arguments[ i ],\r\n    \t\t\t\tuuid = object.uuid,\r\n    \t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n    \t\t\tif ( index === undefined ) {\r\n\r\n    \t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n    \t\t\t\tindex = nObjects ++;\r\n    \t\t\t\tindicesByUUID[ uuid ] = index;\r\n    \t\t\t\tobjects.push( object );\r\n\r\n    \t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n    \t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n    \t\t\t\t\tbindings[ j ].push(\r\n    \t\t\t\t\t\t\tnew PropertyBinding(\r\n    \t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n    \t\t\t\tvar knownObject = objects[ index ];\r\n\r\n    \t\t\t\t// move existing object to the ACTIVE region\r\n\r\n    \t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n    \t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n    \t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n    \t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n    \t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n    \t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n    \t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n    \t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n    \t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n    \t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n    \t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n    \t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n    \t\t\t\t\tif ( binding === undefined ) {\r\n\r\n    \t\t\t\t\t\t// since we do not bother to create new bindings\r\n    \t\t\t\t\t\t// for objects that are cached, the binding may\r\n    \t\t\t\t\t\t// or may not exist\r\n\r\n    \t\t\t\t\t\tbinding = new PropertyBinding(\r\n    \t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t} else if ( objects[ index ] !== knownObject) {\r\n\r\n    \t\t\t\tconsole.error( \"Different objects with the same UUID \" +\r\n    \t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\r\n    \t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\r\n\r\n    \t\t\t} // else the object is already where we want it to be\r\n\r\n    \t\t} // for arguments\r\n\r\n    \t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n    \t},\r\n\r\n    \tremove: function( var_args ) {\r\n\r\n    \t\tvar objects = this._objects,\r\n    \t\t\tnCachedObjects = this.nCachedObjects_,\r\n    \t\t\tindicesByUUID = this._indicesByUUID,\r\n    \t\t\tbindings = this._bindings,\r\n    \t\t\tnBindings = bindings.length;\r\n\r\n    \t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tvar object = arguments[ i ],\r\n    \t\t\t\tuuid = object.uuid,\r\n    \t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n    \t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n    \t\t\t\t// move existing object into the CACHED region\r\n\r\n    \t\t\t\tvar lastCachedIndex = nCachedObjects ++,\r\n    \t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n    \t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n    \t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n    \t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n    \t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n    \t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n    \t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n    \t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n    \t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n    \t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n    \t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n    \t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} // for arguments\r\n\r\n    \t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n    \t},\r\n\r\n    \t// remove & forget\r\n    \tuncache: function( var_args ) {\r\n\r\n    \t\tvar objects = this._objects,\r\n    \t\t\tnObjects = objects.length,\r\n    \t\t\tnCachedObjects = this.nCachedObjects_,\r\n    \t\t\tindicesByUUID = this._indicesByUUID,\r\n    \t\t\tbindings = this._bindings,\r\n    \t\t\tnBindings = bindings.length;\r\n\r\n    \t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tvar object = arguments[ i ],\r\n    \t\t\t\tuuid = object.uuid,\r\n    \t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n    \t\t\tif ( index !== undefined ) {\r\n\r\n    \t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n    \t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n    \t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n    \t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n    \t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n    \t\t\t\t\t\tlastIndex = -- nObjects,\r\n    \t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n    \t\t\t\t\t// last cached object takes this object's place\r\n    \t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n    \t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n    \t\t\t\t\t// last object goes to the activated slot and pop\r\n    \t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n    \t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n    \t\t\t\t\tobjects.pop();\r\n\r\n    \t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n    \t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n    \t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n    \t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n    \t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n    \t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n    \t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n    \t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n    \t\t\t\t\tvar lastIndex = -- nObjects,\r\n    \t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n    \t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n    \t\t\t\t\tobjects[ index ] = lastObject;\r\n    \t\t\t\t\tobjects.pop();\r\n\r\n    \t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n    \t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n    \t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\r\n\r\n    \t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n    \t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t} // cached or active\r\n\r\n    \t\t\t} // if object is known\r\n\r\n    \t\t} // for arguments\r\n\r\n    \t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n    \t},\r\n\r\n    \t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n    \tsubscribe_: function( path, parsedPath ) {\r\n    \t\t// returns an array of bindings for the given path that is changed\r\n    \t\t// according to the contained objects in the group\r\n\r\n    \t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n    \t\t\tindex = indicesByPath[ path ],\r\n    \t\t\tbindings = this._bindings;\r\n\r\n    \t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n    \t\tvar paths = this._paths,\r\n    \t\t\tparsedPaths = this._parsedPaths,\r\n    \t\t\tobjects = this._objects,\r\n    \t\t\tnObjects = objects.length,\r\n    \t\t\tnCachedObjects = this.nCachedObjects_,\r\n    \t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n    \t\tindex = bindings.length;\r\n\r\n    \t\tindicesByPath[ path ] = index;\r\n\r\n    \t\tpaths.push( path );\r\n    \t\tparsedPaths.push( parsedPath );\r\n    \t\tbindings.push( bindingsForPath );\r\n\r\n    \t\tfor ( var i = nCachedObjects,\r\n    \t\t\t\tn = objects.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tvar object = objects[ i ];\r\n\r\n    \t\t\tbindingsForPath[ i ] =\r\n    \t\t\t\t\tnew PropertyBinding( object, path, parsedPath );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn bindingsForPath;\r\n\r\n    \t},\r\n\r\n    \tunsubscribe_: function( path ) {\r\n    \t\t// tells the group to forget about a property path and no longer\r\n    \t\t// update the array previously obtained with 'subscribe_'\r\n\r\n    \t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n    \t\t\tindex = indicesByPath[ path ];\r\n\r\n    \t\tif ( index !== undefined ) {\r\n\r\n    \t\t\tvar paths = this._paths,\r\n    \t\t\t\tparsedPaths = this._parsedPaths,\r\n    \t\t\t\tbindings = this._bindings,\r\n    \t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n    \t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n    \t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n    \t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n    \t\t\tbindings[ index ] = lastBindings;\r\n    \t\t\tbindings.pop();\r\n\r\n    \t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n    \t\t\tparsedPaths.pop();\r\n\r\n    \t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n    \t\t\tpaths.pop();\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Action provided by AnimationMixer for scheduling clip playback on specific\r\n     * objects.\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     *\r\n     */\r\n\r\n    function AnimationAction( mixer, clip, localRoot ) {\r\n\r\n    \tthis._mixer = mixer;\r\n    \tthis._clip = clip;\r\n    \tthis._localRoot = localRoot || null;\r\n\r\n    \tvar tracks = clip.tracks,\r\n    \t\tnTracks = tracks.length,\r\n    \t\tinterpolants = new Array( nTracks );\r\n\r\n    \tvar interpolantSettings = {\r\n    \t\t\tendingStart: \tZeroCurvatureEnding,\r\n    \t\t\tendingEnd:\t\tZeroCurvatureEnding\r\n    \t};\r\n\r\n    \tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n    \t\tvar interpolant = tracks[ i ].createInterpolant( null );\r\n    \t\tinterpolants[ i ] = interpolant;\r\n    \t\tinterpolant.settings = interpolantSettings;\r\n\r\n    \t}\r\n\r\n    \tthis._interpolantSettings = interpolantSettings;\r\n\r\n    \tthis._interpolants = interpolants;\t// bound by the mixer\r\n\r\n    \t// inside: PropertyMixer (managed by the mixer)\r\n    \tthis._propertyBindings = new Array( nTracks );\r\n\r\n    \tthis._cacheIndex = null;\t\t\t// for the memory manager\r\n    \tthis._byClipCacheIndex = null;\t\t// for the memory manager\r\n\r\n    \tthis._timeScaleInterpolant = null;\r\n    \tthis._weightInterpolant = null;\r\n\r\n    \tthis.loop = LoopRepeat;\r\n    \tthis._loopCount = -1;\r\n\r\n    \t// global mixer time when the action is to be started\r\n    \t// it's set back to 'null' upon start of the action\r\n    \tthis._startTime = null;\r\n\r\n    \t// scaled local time of the action\r\n    \t// gets clamped or wrapped to 0..clip.duration according to loop\r\n    \tthis.time = 0;\r\n\r\n    \tthis.timeScale = 1;\r\n    \tthis._effectiveTimeScale = 1;\r\n\r\n    \tthis.weight = 1;\r\n    \tthis._effectiveWeight = 1;\r\n\r\n    \tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\r\n\r\n    \tthis.paused = false;\t\t\t\t// false -> zero effective time scale\r\n    \tthis.enabled = true;\t\t\t\t// true -> zero effective weight\r\n\r\n    \tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\r\n\r\n    \tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\r\n    \tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\r\n\r\n    };\r\n\r\n    AnimationAction.prototype = {\r\n\r\n    \tconstructor: AnimationAction,\r\n\r\n    \t// State & Scheduling\r\n\r\n    \tplay: function() {\r\n\r\n    \t\tthis._mixer._activateAction( this );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tstop: function() {\r\n\r\n    \t\tthis._mixer._deactivateAction( this );\r\n\r\n    \t\treturn this.reset();\r\n\r\n    \t},\r\n\r\n    \treset: function() {\r\n\r\n    \t\tthis.paused = false;\r\n    \t\tthis.enabled = true;\r\n\r\n    \t\tthis.time = 0;\t\t\t// restart clip\r\n    \t\tthis._loopCount = -1;\t// forget previous loops\r\n    \t\tthis._startTime = null;\t// forget scheduling\r\n\r\n    \t\treturn this.stopFading().stopWarping();\r\n\r\n    \t},\r\n\r\n    \tisRunning: function() {\r\n\r\n    \t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n    \t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\r\n\r\n    \t},\r\n\r\n    \t// return true when play has been called\r\n    \tisScheduled: function() {\r\n\r\n    \t\treturn this._mixer._isActiveAction( this );\r\n\r\n    \t},\r\n\r\n    \tstartAt: function( time ) {\r\n\r\n    \t\tthis._startTime = time;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetLoop: function( mode, repetitions ) {\r\n\r\n    \t\tthis.loop = mode;\r\n    \t\tthis.repetitions = repetitions;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// Weight\r\n\r\n    \t// set the weight stopping any scheduled fading\r\n    \t// although .enabled = false yields an effective weight of zero, this\r\n    \t// method does *not* change .enabled, because it would be confusing\r\n    \tsetEffectiveWeight: function( weight ) {\r\n\r\n    \t\tthis.weight = weight;\r\n\r\n    \t\t// note: same logic as when updated at runtime\r\n    \t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n    \t\treturn this.stopFading();\r\n\r\n    \t},\r\n\r\n    \t// return the weight considering fading and .enabled\r\n    \tgetEffectiveWeight: function() {\r\n\r\n    \t\treturn this._effectiveWeight;\r\n\r\n    \t},\r\n\r\n    \tfadeIn: function( duration ) {\r\n\r\n    \t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n    \t},\r\n\r\n    \tfadeOut: function( duration ) {\r\n\r\n    \t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n    \t},\r\n\r\n    \tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\r\n\r\n    \t\tfadeOutAction.fadeOut( duration );\r\n    \t\tthis.fadeIn( duration );\r\n\r\n    \t\tif( warp ) {\r\n\r\n    \t\t\tvar fadeInDuration = this._clip.duration,\r\n    \t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n    \t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n    \t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n    \t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n    \t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcrossFadeTo: function( fadeInAction, duration, warp ) {\r\n\r\n    \t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n    \t},\r\n\r\n    \tstopFading: function() {\r\n\r\n    \t\tvar weightInterpolant = this._weightInterpolant;\r\n\r\n    \t\tif ( weightInterpolant !== null ) {\r\n\r\n    \t\t\tthis._weightInterpolant = null;\r\n    \t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// Time Scale Control\r\n\r\n    \t// set the weight stopping any scheduled warping\r\n    \t// although .paused = true yields an effective time scale of zero, this\r\n    \t// method does *not* change .paused, because it would be confusing\r\n    \tsetEffectiveTimeScale: function( timeScale ) {\r\n\r\n    \t\tthis.timeScale = timeScale;\r\n    \t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\r\n\r\n    \t\treturn this.stopWarping();\r\n\r\n    \t},\r\n\r\n    \t// return the time scale considering warping and .paused\r\n    \tgetEffectiveTimeScale: function() {\r\n\r\n    \t\treturn this._effectiveTimeScale;\r\n\r\n    \t},\r\n\r\n    \tsetDuration: function( duration ) {\r\n\r\n    \t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n    \t\treturn this.stopWarping();\r\n\r\n    \t},\r\n\r\n    \tsyncWith: function( action ) {\r\n\r\n    \t\tthis.time = action.time;\r\n    \t\tthis.timeScale = action.timeScale;\r\n\r\n    \t\treturn this.stopWarping();\r\n\r\n    \t},\r\n\r\n    \thalt: function( duration ) {\r\n\r\n    \t\treturn this.warp( this._effectiveTimeScale, 0, duration );\r\n\r\n    \t},\r\n\r\n    \twarp: function( startTimeScale, endTimeScale, duration ) {\r\n\r\n    \t\tvar mixer = this._mixer, now = mixer.time,\r\n    \t\t\tinterpolant = this._timeScaleInterpolant,\r\n\r\n    \t\t\ttimeScale = this.timeScale;\r\n\r\n    \t\tif ( interpolant === null ) {\r\n\r\n    \t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n    \t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar times = interpolant.parameterPositions,\r\n    \t\t\tvalues = interpolant.sampleValues;\r\n\r\n    \t\ttimes[ 0 ] = now;\r\n    \t\ttimes[ 1 ] = now + duration;\r\n\r\n    \t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n    \t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tstopWarping: function() {\r\n\r\n    \t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n    \t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n    \t\t\tthis._timeScaleInterpolant = null;\r\n    \t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// Object Accessors\r\n\r\n    \tgetMixer: function() {\r\n\r\n    \t\treturn this._mixer;\r\n\r\n    \t},\r\n\r\n    \tgetClip: function() {\r\n\r\n    \t\treturn this._clip;\r\n\r\n    \t},\r\n\r\n    \tgetRoot: function() {\r\n\r\n    \t\treturn this._localRoot || this._mixer._root;\r\n\r\n    \t},\r\n\r\n    \t// Interna\r\n\r\n    \t_update: function( time, deltaTime, timeDirection, accuIndex ) {\r\n    \t\t// called by the mixer\r\n\r\n    \t\tvar startTime = this._startTime;\r\n\r\n    \t\tif ( startTime !== null ) {\r\n\r\n    \t\t\t// check for scheduled start of action\r\n\r\n    \t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\r\n    \t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n    \t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// start\r\n\r\n    \t\t\tthis._startTime = null; // unschedule\r\n    \t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n    \t\t}\r\n\r\n    \t\t// apply time scale and advance time\r\n\r\n    \t\tdeltaTime *= this._updateTimeScale( time );\r\n    \t\tvar clipTime = this._updateTime( deltaTime );\r\n\r\n    \t\t// note: _updateTime may disable the action resulting in\r\n    \t\t// an effective weight of 0\r\n\r\n    \t\tvar weight = this._updateWeight( time );\r\n\r\n    \t\tif ( weight > 0 ) {\r\n\r\n    \t\t\tvar interpolants = this._interpolants;\r\n    \t\t\tvar propertyMixers = this._propertyBindings;\r\n\r\n    \t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n    \t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n    \t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t_updateWeight: function( time ) {\r\n\r\n    \t\tvar weight = 0;\r\n\r\n    \t\tif ( this.enabled ) {\r\n\r\n    \t\t\tweight = this.weight;\r\n    \t\t\tvar interpolant = this._weightInterpolant;\r\n\r\n    \t\t\tif ( interpolant !== null ) {\r\n\r\n    \t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n    \t\t\t\tweight *= interpolantValue;\r\n\r\n    \t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n    \t\t\t\t\tthis.stopFading();\r\n\r\n    \t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n    \t\t\t\t\t\t// faded out, disable\r\n    \t\t\t\t\t\tthis.enabled = false;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tthis._effectiveWeight = weight;\r\n    \t\treturn weight;\r\n\r\n    \t},\r\n\r\n    \t_updateTimeScale: function( time ) {\r\n\r\n    \t\tvar timeScale = 0;\r\n\r\n    \t\tif ( ! this.paused ) {\r\n\r\n    \t\t\ttimeScale = this.timeScale;\r\n\r\n    \t\t\tvar interpolant = this._timeScaleInterpolant;\r\n\r\n    \t\t\tif ( interpolant !== null ) {\r\n\r\n    \t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n    \t\t\t\ttimeScale *= interpolantValue;\r\n\r\n    \t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n    \t\t\t\t\tthis.stopWarping();\r\n\r\n    \t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n    \t\t\t\t\t\t// motion has halted, pause\r\n    \t\t\t\t\t\tthis.paused = true;\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\t// warp done - apply final time scale\r\n    \t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tthis._effectiveTimeScale = timeScale;\r\n    \t\treturn timeScale;\r\n\r\n    \t},\r\n\r\n    \t_updateTime: function( deltaTime ) {\r\n\r\n    \t\tvar time = this.time + deltaTime;\r\n\r\n    \t\tif ( deltaTime === 0 ) return time;\r\n\r\n    \t\tvar duration = this._clip.duration,\r\n\r\n    \t\t\tloop = this.loop,\r\n    \t\t\tloopCount = this._loopCount;\r\n\r\n    \t\tif ( loop === LoopOnce ) {\r\n\r\n    \t\t\tif ( loopCount === -1 ) {\r\n    \t\t\t\t// just started\r\n\r\n    \t\t\t\tthis.loopCount = 0;\r\n    \t\t\t\tthis._setEndings( true, true, false );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\thandle_stop: {\r\n\r\n    \t\t\t\tif ( time >= duration ) {\r\n\r\n    \t\t\t\t\ttime = duration;\r\n\r\n    \t\t\t\t} else if ( time < 0 ) {\r\n\r\n    \t\t\t\t\ttime = 0;\r\n\r\n    \t\t\t\t} else break handle_stop;\r\n\r\n    \t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n    \t\t\t\telse this.enabled = false;\r\n\r\n    \t\t\t\tthis._mixer.dispatchEvent( {\r\n    \t\t\t\t\ttype: 'finished', action: this,\r\n    \t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\r\n    \t\t\t\t} );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else { // repetitive Repeat or PingPong\r\n\r\n    \t\t\tvar pingPong = ( loop === LoopPingPong );\r\n\r\n    \t\t\tif ( loopCount === -1 ) {\r\n    \t\t\t\t// just started\r\n\r\n    \t\t\t\tif ( deltaTime >= 0 ) {\r\n\r\n    \t\t\t\t\tloopCount = 0;\r\n\r\n    \t\t\t\t\tthis._setEndings(\r\n    \t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\r\n\r\n    \t\t\t\t} else {\r\n\r\n    \t\t\t\t\t// when looping in reverse direction, the initial\r\n    \t\t\t\t\t// transition through zero counts as a repetition,\r\n    \t\t\t\t\t// so leave loopCount at -1\r\n\r\n    \t\t\t\t\tthis._setEndings(\r\n    \t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( time >= duration || time < 0 ) {\r\n    \t\t\t\t// wrap around\r\n\r\n    \t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\r\n    \t\t\t\ttime -= duration * loopDelta;\r\n\r\n    \t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n    \t\t\t\tvar pending = this.repetitions - loopCount;\r\n\r\n    \t\t\t\tif ( pending < 0 ) {\r\n    \t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\r\n    \t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n    \t\t\t\t\telse this.enabled = false;\r\n\r\n    \t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n    \t\t\t\t\tthis._mixer.dispatchEvent( {\r\n    \t\t\t\t\t\ttype: 'finished', action: this,\r\n    \t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\r\n    \t\t\t\t\t} );\r\n\r\n    \t\t\t\t} else {\r\n    \t\t\t\t\t// keep running\r\n\r\n    \t\t\t\t\tif ( pending === 0 ) {\r\n    \t\t\t\t\t\t// entering the last round\r\n\r\n    \t\t\t\t\t\tvar atStart = deltaTime < 0;\r\n    \t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n    \t\t\t\t\t} else {\r\n\r\n    \t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n    \t\t\t\t\tthis._mixer.dispatchEvent( {\r\n    \t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n    \t\t\t\t\t} );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n    \t\t\t\t// invert time for the \"pong round\"\r\n\r\n    \t\t\t\tthis.time = time;\r\n    \t\t\t\treturn duration - time;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.time = time;\r\n    \t\treturn time;\r\n\r\n    \t},\r\n\r\n    \t_setEndings: function( atStart, atEnd, pingPong ) {\r\n\r\n    \t\tvar settings = this._interpolantSettings;\r\n\r\n    \t\tif ( pingPong ) {\r\n\r\n    \t\t\tsettings.endingStart \t= ZeroSlopeEnding;\r\n    \t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n    \t\t\tif ( atStart ) {\r\n\r\n    \t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\r\n    \t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tsettings.endingStart = WrapAroundEnding;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( atEnd ) {\r\n\r\n    \t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\r\n    \t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t_scheduleFading: function( duration, weightNow, weightThen ) {\r\n\r\n    \t\tvar mixer = this._mixer, now = mixer.time,\r\n    \t\t\tinterpolant = this._weightInterpolant;\r\n\r\n    \t\tif ( interpolant === null ) {\r\n\r\n    \t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n    \t\t\tthis._weightInterpolant = interpolant;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar times = interpolant.parameterPositions,\r\n    \t\t\tvalues = interpolant.sampleValues;\r\n\r\n    \t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\r\n    \t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     *\r\n     * Player for AnimationClips.\r\n     *\r\n     *\r\n     * @author Ben Houston / http://clara.io/\r\n     * @author David Sarno / http://lighthaus.us/\r\n     * @author tschw\r\n     */\r\n\r\n    function AnimationMixer( root ) {\r\n\r\n    \tthis._root = root;\r\n    \tthis._initMemoryManager();\r\n    \tthis._accuIndex = 0;\r\n\r\n    \tthis.time = 0;\r\n\r\n    \tthis.timeScale = 1.0;\r\n\r\n    }\r\n\r\n    Object.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\r\n\r\n    \t// return an action for a clip optionally using a custom root target\r\n    \t// object (this method allocates a lot of dynamic memory in case a\r\n    \t// previously unknown clip/root combination is specified)\r\n    \tclipAction: function( clip, optionalRoot ) {\r\n\r\n    \t\tvar root = optionalRoot || this._root,\r\n    \t\t\trootUuid = root.uuid,\r\n\r\n    \t\t\tclipObject = typeof clip === 'string' ?\r\n    \t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n    \t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\r\n\r\n    \t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\r\n    \t\t\tprototypeAction = null;\r\n\r\n    \t\tif ( actionsForClip !== undefined ) {\r\n\r\n    \t\t\tvar existingAction =\r\n    \t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\r\n\r\n    \t\t\tif ( existingAction !== undefined ) {\r\n\r\n    \t\t\t\treturn existingAction;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\t// we know the clip, so we don't have to parse all\r\n    \t\t\t// the bindings again but can just copy\r\n    \t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n    \t\t\t// also, take the clip from the prototype action\r\n    \t\t\tif ( clipObject === null )\r\n    \t\t\t\tclipObject = prototypeAction._clip;\r\n\r\n    \t\t}\r\n\r\n    \t\t// clip must be known when specified via string\r\n    \t\tif ( clipObject === null ) return null;\r\n\r\n    \t\t// allocate all resources required to run it\r\n    \t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\r\n\r\n    \t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n    \t\t// and make the action known to the memory manager\r\n    \t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\r\n\r\n    \t\treturn newAction;\r\n\r\n    \t},\r\n\r\n    \t// get an existing action\r\n    \texistingAction: function( clip, optionalRoot ) {\r\n\r\n    \t\tvar root = optionalRoot || this._root,\r\n    \t\t\trootUuid = root.uuid,\r\n\r\n    \t\t\tclipObject = typeof clip === 'string' ?\r\n    \t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\r\n\r\n    \t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\r\n    \t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n    \t\tif ( actionsForClip !== undefined ) {\r\n\r\n    \t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn null;\r\n\r\n    \t},\r\n\r\n    \t// deactivates all previously scheduled actions\r\n    \tstopAllAction: function() {\r\n\r\n    \t\tvar actions = this._actions,\r\n    \t\t\tnActions = this._nActiveActions,\r\n    \t\t\tbindings = this._bindings,\r\n    \t\t\tnBindings = this._nActiveBindings;\r\n\r\n    \t\tthis._nActiveActions = 0;\r\n    \t\tthis._nActiveBindings = 0;\r\n\r\n    \t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n    \t\t\tactions[ i ].reset();\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n    \t\t\tbindings[ i ].useCount = 0;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// advance the time and update apply the animation\r\n    \tupdate: function( deltaTime ) {\r\n\r\n    \t\tdeltaTime *= this.timeScale;\r\n\r\n    \t\tvar actions = this._actions,\r\n    \t\t\tnActions = this._nActiveActions,\r\n\r\n    \t\t\ttime = this.time += deltaTime,\r\n    \t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n    \t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n    \t\t// run active actions\r\n\r\n    \t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n    \t\t\tvar action = actions[ i ];\r\n\r\n    \t\t\tif ( action.enabled ) {\r\n\r\n    \t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// update scene graph\r\n\r\n    \t\tvar bindings = this._bindings,\r\n    \t\t\tnBindings = this._nActiveBindings;\r\n\r\n    \t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n    \t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// return this mixer's root target object\r\n    \tgetRoot: function() {\r\n\r\n    \t\treturn this._root;\r\n\r\n    \t},\r\n\r\n    \t// free all resources specific to a particular clip\r\n    \tuncacheClip: function( clip ) {\r\n\r\n    \t\tvar actions = this._actions,\r\n    \t\t\tclipUuid = clip.uuid,\r\n    \t\t\tactionsByClip = this._actionsByClip,\r\n    \t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n    \t\tif ( actionsForClip !== undefined ) {\r\n\r\n    \t\t\t// note: just calling _removeInactiveAction would mess up the\r\n    \t\t\t// iteration state and also require updating the state we can\r\n    \t\t\t// just throw away\r\n\r\n    \t\t\tvar actionsToRemove = actionsForClip.knownActions;\r\n\r\n    \t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\tvar action = actionsToRemove[ i ];\r\n\r\n    \t\t\t\tthis._deactivateAction( action );\r\n\r\n    \t\t\t\tvar cacheIndex = action._cacheIndex,\r\n    \t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n    \t\t\t\taction._cacheIndex = null;\r\n    \t\t\t\taction._byClipCacheIndex = null;\r\n\r\n    \t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n    \t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n    \t\t\t\tactions.pop();\r\n\r\n    \t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t// free all resources specific to a particular root target object\r\n    \tuncacheRoot: function( root ) {\r\n\r\n    \t\tvar rootUuid = root.uuid,\r\n    \t\t\tactionsByClip = this._actionsByClip;\r\n\r\n    \t\tfor ( var clipUuid in actionsByClip ) {\r\n\r\n    \t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n    \t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n    \t\t\tif ( action !== undefined ) {\r\n\r\n    \t\t\t\tthis._deactivateAction( action );\r\n    \t\t\t\tthis._removeInactiveAction( action );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n    \t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n    \t\tif ( bindingByName !== undefined ) {\r\n\r\n    \t\t\tfor ( var trackName in bindingByName ) {\r\n\r\n    \t\t\t\tvar binding = bindingByName[ trackName ];\r\n    \t\t\t\tbinding.restoreOriginalState();\r\n    \t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t// remove a targeted clip from the cache\r\n    \tuncacheAction: function( clip, optionalRoot ) {\r\n\r\n    \t\tvar action = this.existingAction( clip, optionalRoot );\r\n\r\n    \t\tif ( action !== null ) {\r\n\r\n    \t\t\tthis._deactivateAction( action );\r\n    \t\t\tthis._removeInactiveAction( action );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    } );\r\n\r\n    // Implementation details:\r\n\r\n    Object.assign( AnimationMixer.prototype, {\r\n\r\n    \t_bindAction: function( action, prototypeAction ) {\r\n\r\n    \t\tvar root = action._localRoot || this._root,\r\n    \t\t\ttracks = action._clip.tracks,\r\n    \t\t\tnTracks = tracks.length,\r\n    \t\t\tbindings = action._propertyBindings,\r\n    \t\t\tinterpolants = action._interpolants,\r\n    \t\t\trootUuid = root.uuid,\r\n    \t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n    \t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n    \t\tif ( bindingsByName === undefined ) {\r\n\r\n    \t\t\tbindingsByName = {};\r\n    \t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n    \t\t\tvar track = tracks[ i ],\r\n    \t\t\t\ttrackName = track.name,\r\n    \t\t\t\tbinding = bindingsByName[ trackName ];\r\n\r\n    \t\t\tif ( binding !== undefined ) {\r\n\r\n    \t\t\t\tbindings[ i ] = binding;\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\tbinding = bindings[ i ];\r\n\r\n    \t\t\t\tif ( binding !== undefined ) {\r\n\r\n    \t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n    \t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n    \t\t\t\t\t\t++ binding.referenceCount;\r\n    \t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n    \t\t\t\t\t}\r\n\r\n    \t\t\t\t\tcontinue;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tvar path = prototypeAction && prototypeAction.\r\n    \t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n    \t\t\t\tbinding = new PropertyMixer(\r\n    \t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\r\n    \t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n    \t\t\t\t++ binding.referenceCount;\r\n    \t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n    \t\t\t\tbindings[ i ] = binding;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t_activateAction: function( action ) {\r\n\r\n    \t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n    \t\t\tif ( action._cacheIndex === null ) {\r\n\r\n    \t\t\t\t// this action has been forgotten by the cache, but the user\r\n    \t\t\t\t// appears to be still using it -> rebind\r\n\r\n    \t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\r\n    \t\t\t\t\tclipUuid = action._clip.uuid,\r\n    \t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n    \t\t\t\tthis._bindAction( action,\r\n    \t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n    \t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar bindings = action._propertyBindings;\r\n\r\n    \t\t\t// increment reference counts / sort out state\r\n    \t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\tvar binding = bindings[ i ];\r\n\r\n    \t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n    \t\t\t\t\tthis._lendBinding( binding );\r\n    \t\t\t\t\tbinding.saveOriginalState();\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis._lendAction( action );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t_deactivateAction: function( action ) {\r\n\r\n    \t\tif ( this._isActiveAction( action ) ) {\r\n\r\n    \t\t\tvar bindings = action._propertyBindings;\r\n\r\n    \t\t\t// decrement reference counts / sort out state\r\n    \t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n    \t\t\t\tvar binding = bindings[ i ];\r\n\r\n    \t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n    \t\t\t\t\tbinding.restoreOriginalState();\r\n    \t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tthis._takeBackAction( action );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t// Memory manager\r\n\r\n    \t_initMemoryManager: function() {\r\n\r\n    \t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n    \t\tthis._nActiveActions = 0;\r\n\r\n    \t\tthis._actionsByClip = {};\r\n    \t\t// inside:\r\n    \t\t// {\r\n    \t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\r\n    \t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\r\n    \t\t// }\r\n\r\n\r\n    \t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n    \t\tthis._nActiveBindings = 0;\r\n\r\n    \t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n    \t\tthis._controlInterpolants = []; // same game as above\r\n    \t\tthis._nActiveControlInterpolants = 0;\r\n\r\n    \t\tvar scope = this;\r\n\r\n    \t\tthis.stats = {\r\n\r\n    \t\t\tactions: {\r\n    \t\t\t\tget total() { return scope._actions.length; },\r\n    \t\t\t\tget inUse() { return scope._nActiveActions; }\r\n    \t\t\t},\r\n    \t\t\tbindings: {\r\n    \t\t\t\tget total() { return scope._bindings.length; },\r\n    \t\t\t\tget inUse() { return scope._nActiveBindings; }\r\n    \t\t\t},\r\n    \t\t\tcontrolInterpolants: {\r\n    \t\t\t\tget total() { return scope._controlInterpolants.length; },\r\n    \t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\r\n    \t\t\t}\r\n\r\n    \t\t};\r\n\r\n    \t},\r\n\r\n    \t// Memory management for AnimationAction objects\r\n\r\n    \t_isActiveAction: function( action ) {\r\n\r\n    \t\tvar index = action._cacheIndex;\r\n    \t\treturn index !== null && index < this._nActiveActions;\r\n\r\n    \t},\r\n\r\n    \t_addInactiveAction: function( action, clipUuid, rootUuid ) {\r\n\r\n    \t\tvar actions = this._actions,\r\n    \t\t\tactionsByClip = this._actionsByClip,\r\n    \t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n    \t\tif ( actionsForClip === undefined ) {\r\n\r\n    \t\t\tactionsForClip = {\r\n\r\n    \t\t\t\tknownActions: [ action ],\r\n    \t\t\t\tactionByRoot: {}\r\n\r\n    \t\t\t};\r\n\r\n    \t\t\taction._byClipCacheIndex = 0;\r\n\r\n    \t\t\tactionsByClip[ clipUuid ] = actionsForClip;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tvar knownActions = actionsForClip.knownActions;\r\n\r\n    \t\t\taction._byClipCacheIndex = knownActions.length;\r\n    \t\t\tknownActions.push( action );\r\n\r\n    \t\t}\r\n\r\n    \t\taction._cacheIndex = actions.length;\r\n    \t\tactions.push( action );\r\n\r\n    \t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n    \t},\r\n\r\n    \t_removeInactiveAction: function( action ) {\r\n\r\n    \t\tvar actions = this._actions,\r\n    \t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n    \t\t\tcacheIndex = action._cacheIndex;\r\n\r\n    \t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n    \t\tactions[ cacheIndex ] = lastInactiveAction;\r\n    \t\tactions.pop();\r\n\r\n    \t\taction._cacheIndex = null;\r\n\r\n\r\n    \t\tvar clipUuid = action._clip.uuid,\r\n    \t\t\tactionsByClip = this._actionsByClip,\r\n    \t\t\tactionsForClip = actionsByClip[ clipUuid ],\r\n    \t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n    \t\t\tlastKnownAction =\r\n    \t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n    \t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n    \t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n    \t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n    \t\tknownActionsForClip.pop();\r\n\r\n    \t\taction._byClipCacheIndex = null;\r\n\r\n\r\n    \t\tvar actionByRoot = actionsForClip.actionByRoot,\r\n    \t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\r\n\r\n    \t\tdelete actionByRoot[ rootUuid ];\r\n\r\n    \t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n    \t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n    \t\t}\r\n\r\n    \t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n    \t},\r\n\r\n    \t_removeInactiveBindingsForAction: function( action ) {\r\n\r\n    \t\tvar bindings = action._propertyBindings;\r\n    \t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n    \t\t\tvar binding = bindings[ i ];\r\n\r\n    \t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n    \t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t_lendAction: function( action ) {\r\n\r\n    \t\t// [ active actions |  inactive actions  ]\r\n    \t\t// [  active actions >| inactive actions ]\r\n    \t\t//                 s        a\r\n    \t\t//                  <-swap->\r\n    \t\t//                 a        s\r\n\r\n    \t\tvar actions = this._actions,\r\n    \t\t\tprevIndex = action._cacheIndex,\r\n\r\n    \t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n    \t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n    \t\taction._cacheIndex = lastActiveIndex;\r\n    \t\tactions[ lastActiveIndex ] = action;\r\n\r\n    \t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n    \t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n    \t},\r\n\r\n    \t_takeBackAction: function( action ) {\r\n\r\n    \t\t// [  active actions  | inactive actions ]\r\n    \t\t// [ active actions |< inactive actions  ]\r\n    \t\t//        a        s\r\n    \t\t//         <-swap->\r\n    \t\t//        s        a\r\n\r\n    \t\tvar actions = this._actions,\r\n    \t\t\tprevIndex = action._cacheIndex,\r\n\r\n    \t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n    \t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n    \t\taction._cacheIndex = firstInactiveIndex;\r\n    \t\tactions[ firstInactiveIndex ] = action;\r\n\r\n    \t\tlastActiveAction._cacheIndex = prevIndex;\r\n    \t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n    \t},\r\n\r\n    \t// Memory management for PropertyMixer objects\r\n\r\n    \t_addInactiveBinding: function( binding, rootUuid, trackName ) {\r\n\r\n    \t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n    \t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n    \t\t\tbindings = this._bindings;\r\n\r\n    \t\tif ( bindingByName === undefined ) {\r\n\r\n    \t\t\tbindingByName = {};\r\n    \t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n    \t\t}\r\n\r\n    \t\tbindingByName[ trackName ] = binding;\r\n\r\n    \t\tbinding._cacheIndex = bindings.length;\r\n    \t\tbindings.push( binding );\r\n\r\n    \t},\r\n\r\n    \t_removeInactiveBinding: function( binding ) {\r\n\r\n    \t\tvar bindings = this._bindings,\r\n    \t\t\tpropBinding = binding.binding,\r\n    \t\t\trootUuid = propBinding.rootNode.uuid,\r\n    \t\t\ttrackName = propBinding.path,\r\n    \t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n    \t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n    \t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n    \t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n    \t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n    \t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n    \t\tbindings.pop();\r\n\r\n    \t\tdelete bindingByName[ trackName ];\r\n\r\n    \t\tremove_empty_map: {\r\n\r\n    \t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\r\n\r\n    \t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \t_lendBinding: function( binding ) {\r\n\r\n    \t\tvar bindings = this._bindings,\r\n    \t\t\tprevIndex = binding._cacheIndex,\r\n\r\n    \t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n    \t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n    \t\tbinding._cacheIndex = lastActiveIndex;\r\n    \t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n    \t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n    \t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n    \t},\r\n\r\n    \t_takeBackBinding: function( binding ) {\r\n\r\n    \t\tvar bindings = this._bindings,\r\n    \t\t\tprevIndex = binding._cacheIndex,\r\n\r\n    \t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n    \t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n    \t\tbinding._cacheIndex = firstInactiveIndex;\r\n    \t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n    \t\tlastActiveBinding._cacheIndex = prevIndex;\r\n    \t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n    \t},\r\n\r\n\r\n    \t// Memory management of Interpolants for weight and time scale\r\n\r\n    \t_lendControlInterpolant: function() {\r\n\r\n    \t\tvar interpolants = this._controlInterpolants,\r\n    \t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\r\n    \t\t\tinterpolant = interpolants[ lastActiveIndex ];\r\n\r\n    \t\tif ( interpolant === undefined ) {\r\n\r\n    \t\t\tinterpolant = new LinearInterpolant(\r\n    \t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n    \t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\r\n\r\n    \t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n    \t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn interpolant;\r\n\r\n    \t},\r\n\r\n    \t_takeBackControlInterpolant: function( interpolant ) {\r\n\r\n    \t\tvar interpolants = this._controlInterpolants,\r\n    \t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n    \t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n    \t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n    \t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n    \t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n    \t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n    \t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n    \t},\r\n\r\n    \t_controlInterpolantsResultBuffer: new Float32Array( 1 )\r\n\r\n    } );\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function Uniform( value ) {\r\n\r\n    \tif ( typeof value === 'string' ) {\r\n\r\n    \t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\r\n    \t\tvalue = arguments[ 1 ];\r\n\r\n    \t}\r\n\r\n    \tthis.value = value;\r\n\r\n    \tthis.dynamic = false;\r\n\r\n    }\r\n\r\n    Uniform.prototype = {\r\n\r\n    \tconstructor: Uniform,\r\n\r\n    \tonUpdate: function ( callback ) {\r\n\r\n    \t\tthis.dynamic = true;\r\n    \t\tthis.onUpdateCallback = callback;\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author benaadams / https://twitter.com/ben_a_adams\r\n     */\r\n\r\n    function InstancedBufferGeometry() {\r\n\r\n    \tBufferGeometry.call( this );\r\n\r\n    \tthis.type = 'InstancedBufferGeometry';\r\n    \tthis.maxInstancedCount = undefined;\r\n\r\n    }\r\n\r\n    InstancedBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\r\n    InstancedBufferGeometry.prototype.constructor = InstancedBufferGeometry;\r\n\r\n    InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\r\n\r\n    InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n    \tthis.groups.push( {\r\n\r\n    \t\tstart: start,\r\n    \t\tcount: count,\r\n    \t\tinstances: instances\r\n\r\n    \t} );\r\n\r\n    };\r\n\r\n    InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n    \tvar index = source.index;\r\n\r\n    \tif ( index !== null ) {\r\n\r\n    \t\tthis.setIndex( index.clone() );\r\n\r\n    \t}\r\n\r\n    \tvar attributes = source.attributes;\r\n\r\n    \tfor ( var name in attributes ) {\r\n\r\n    \t\tvar attribute = attributes[ name ];\r\n    \t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n    \t}\r\n\r\n    \tvar groups = source.groups;\r\n\r\n    \tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n    \t\tvar group = groups[ i ];\r\n    \t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n    \t}\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author benaadams / https://twitter.com/ben_a_adams\r\n     */\r\n\r\n    function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.data = interleavedBuffer;\r\n    \tthis.itemSize = itemSize;\r\n    \tthis.offset = offset;\r\n\r\n    \tthis.normalized = normalized === true;\r\n\r\n    }\r\n\r\n\r\n    InterleavedBufferAttribute.prototype = {\r\n\r\n    \tconstructor: InterleavedBufferAttribute,\r\n\r\n    \tisInterleavedBufferAttribute: true,\r\n\r\n    \tget count() {\r\n\r\n    \t\treturn this.data.count;\r\n\r\n    \t},\r\n\r\n    \tget array() {\r\n\r\n    \t\treturn this.data.array;\r\n\r\n    \t},\r\n\r\n    \tsetX: function ( index, x ) {\r\n\r\n    \t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetY: function ( index, y ) {\r\n\r\n    \t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetZ: function ( index, z ) {\r\n\r\n    \t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetW: function ( index, w ) {\r\n\r\n    \t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tgetX: function ( index ) {\r\n\r\n    \t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n    \t},\r\n\r\n    \tgetY: function ( index ) {\r\n\r\n    \t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n    \t},\r\n\r\n    \tgetZ: function ( index ) {\r\n\r\n    \t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n    \t},\r\n\r\n    \tgetW: function ( index ) {\r\n\r\n    \t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n    \t},\r\n\r\n    \tsetXY: function ( index, x, y ) {\r\n\r\n    \t\tindex = index * this.data.stride + this.offset;\r\n\r\n    \t\tthis.data.array[ index + 0 ] = x;\r\n    \t\tthis.data.array[ index + 1 ] = y;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetXYZ: function ( index, x, y, z ) {\r\n\r\n    \t\tindex = index * this.data.stride + this.offset;\r\n\r\n    \t\tthis.data.array[ index + 0 ] = x;\r\n    \t\tthis.data.array[ index + 1 ] = y;\r\n    \t\tthis.data.array[ index + 2 ] = z;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n    \t\tindex = index * this.data.stride + this.offset;\r\n\r\n    \t\tthis.data.array[ index + 0 ] = x;\r\n    \t\tthis.data.array[ index + 1 ] = y;\r\n    \t\tthis.data.array[ index + 2 ] = z;\r\n    \t\tthis.data.array[ index + 3 ] = w;\r\n\r\n    \t\treturn this;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author benaadams / https://twitter.com/ben_a_adams\r\n     */\r\n\r\n    function InterleavedBuffer( array, stride ) {\r\n\r\n    \tthis.uuid = exports.Math.generateUUID();\r\n\r\n    \tthis.array = array;\r\n    \tthis.stride = stride;\r\n    \tthis.count = array !== undefined ? array.length / stride : 0;\r\n\r\n    \tthis.dynamic = false;\r\n    \tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n    \tthis.version = 0;\r\n\r\n    }\r\n\r\n    InterleavedBuffer.prototype = {\r\n\r\n    \tconstructor: InterleavedBuffer,\r\n\r\n    \tisInterleavedBuffer: true,\r\n\r\n    \tset needsUpdate( value ) {\r\n\r\n    \t\tif ( value === true ) this.version ++;\r\n\r\n    \t},\r\n\r\n    \tsetDynamic: function ( value ) {\r\n\r\n    \t\tthis.dynamic = value;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( source ) {\r\n\r\n    \t\tthis.array = new source.array.constructor( source.array );\r\n    \t\tthis.count = source.count;\r\n    \t\tthis.stride = source.stride;\r\n    \t\tthis.dynamic = source.dynamic;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n    \t\tindex1 *= this.stride;\r\n    \t\tindex2 *= attribute.stride;\r\n\r\n    \t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n    \t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tset: function ( value, offset ) {\r\n\r\n    \t\tif ( offset === undefined ) offset = 0;\r\n\r\n    \t\tthis.array.set( value, offset );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author benaadams / https://twitter.com/ben_a_adams\r\n     */\r\n\r\n    function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\r\n\r\n    \tInterleavedBuffer.call( this, array, stride );\r\n\r\n    \tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n    }\r\n\r\n    InstancedInterleavedBuffer.prototype = Object.create( InterleavedBuffer.prototype );\r\n    InstancedInterleavedBuffer.prototype.constructor = InstancedInterleavedBuffer;\r\n\r\n    InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\r\n\r\n    InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n    \tInterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n    \tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author benaadams / https://twitter.com/ben_a_adams\r\n     */\r\n\r\n    function InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\r\n\r\n    \tBufferAttribute.call( this, array, itemSize );\r\n\r\n    \tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n    }\r\n\r\n    InstancedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\r\n    InstancedBufferAttribute.prototype.constructor = InstancedBufferAttribute;\r\n\r\n    InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\r\n\r\n    InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n    \tBufferAttribute.prototype.copy.call( this, source );\r\n\r\n    \tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n    \treturn this;\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author bhouston / http://clara.io/\r\n     * @author stephomi / http://stephaneginier.com/\r\n     */\r\n\r\n    function Raycaster( origin, direction, near, far ) {\r\n\r\n    \tthis.ray = new Ray( origin, direction );\r\n    \t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n    \tthis.near = near || 0;\r\n    \tthis.far = far || Infinity;\r\n\r\n    \tthis.params = {\r\n    \t\tMesh: {},\r\n    \t\tLine: {},\r\n    \t\tLOD: {},\r\n    \t\tPoints: { threshold: 1 },\r\n    \t\tSprite: {}\r\n    \t};\r\n\r\n    \tObject.defineProperties( this.params, {\r\n    \t\tPointCloud: {\r\n    \t\t\tget: function () {\r\n    \t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n    \t\t\t\treturn this.Points;\r\n    \t\t\t}\r\n    \t\t}\r\n    \t} );\r\n\r\n    }\r\n\r\n    function ascSort( a, b ) {\r\n\r\n    \treturn a.distance - b.distance;\r\n\r\n    }\r\n\r\n    function intersectObject( object, raycaster, intersects, recursive ) {\r\n\r\n    \tif ( object.visible === false ) return;\r\n\r\n    \tobject.raycast( raycaster, intersects );\r\n\r\n    \tif ( recursive === true ) {\r\n\r\n    \t\tvar children = object.children;\r\n\r\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n    \t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    //\r\n\r\n    Raycaster.prototype = {\r\n\r\n    \tconstructor: Raycaster,\r\n\r\n    \tlinePrecision: 1,\r\n\r\n    \tset: function ( origin, direction ) {\r\n\r\n    \t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n    \t\tthis.ray.set( origin, direction );\r\n\r\n    \t},\r\n\r\n    \tsetFromCamera: function ( coords, camera ) {\r\n\r\n    \t\tif ( (camera && camera.isPerspectiveCamera) ) {\r\n\r\n    \t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n    \t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n    \t\t} else if ( (camera && camera.isOrthographicCamera) ) {\r\n\r\n    \t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\r\n    \t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n    \t\t}\r\n\r\n    \t},\r\n\r\n    \tintersectObject: function ( object, recursive ) {\r\n\r\n    \t\tvar intersects = [];\r\n\r\n    \t\tintersectObject( object, this, intersects, recursive );\r\n\r\n    \t\tintersects.sort( ascSort );\r\n\r\n    \t\treturn intersects;\r\n\r\n    \t},\r\n\r\n    \tintersectObjects: function ( objects, recursive ) {\r\n\r\n    \t\tvar intersects = [];\r\n\r\n    \t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n    \t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n    \t\t\treturn intersects;\r\n\r\n    \t\t}\r\n\r\n    \t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n    \t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n    \t\t}\r\n\r\n    \t\tintersects.sort( ascSort );\r\n\r\n    \t\treturn intersects;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Clock( autoStart ) {\r\n\r\n    \tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n    \tthis.startTime = 0;\r\n    \tthis.oldTime = 0;\r\n    \tthis.elapsedTime = 0;\r\n\r\n    \tthis.running = false;\r\n\r\n    }\r\n\r\n    Clock.prototype = {\r\n\r\n    \tconstructor: Clock,\r\n\r\n    \tstart: function () {\r\n\r\n    \t\tthis.startTime = ( performance || Date ).now();\r\n\r\n    \t\tthis.oldTime = this.startTime;\r\n    \t\tthis.running = true;\r\n\r\n    \t},\r\n\r\n    \tstop: function () {\r\n\r\n    \t\tthis.getElapsedTime();\r\n    \t\tthis.running = false;\r\n\r\n    \t},\r\n\r\n    \tgetElapsedTime: function () {\r\n\r\n    \t\tthis.getDelta();\r\n    \t\treturn this.elapsedTime;\r\n\r\n    \t},\r\n\r\n    \tgetDelta: function () {\r\n\r\n    \t\tvar diff = 0;\r\n\r\n    \t\tif ( this.autoStart && ! this.running ) {\r\n\r\n    \t\t\tthis.start();\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( this.running ) {\r\n\r\n    \t\t\tvar newTime = ( performance || Date ).now();\r\n\r\n    \t\t\tdiff = ( newTime - this.oldTime ) / 1000;\r\n    \t\t\tthis.oldTime = newTime;\r\n\r\n    \t\t\tthis.elapsedTime += diff;\r\n\r\n    \t\t}\r\n\r\n    \t\treturn diff;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * Spline from Tween.js, slightly optimized (and trashed)\r\n     * http://sole.github.com/tween.js/examples/05_spline.html\r\n     *\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function Spline( points ) {\r\n\r\n    \tthis.points = points;\r\n\r\n    \tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n    \tpoint, intPoint, weight, w2, w3,\r\n    \tpa, pb, pc, pd;\r\n\r\n    \tthis.initFromArray = function ( a ) {\r\n\r\n    \t\tthis.points = [];\r\n\r\n    \t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n    \t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    \tthis.getPoint = function ( k ) {\r\n\r\n    \t\tpoint = ( this.points.length - 1 ) * k;\r\n    \t\tintPoint = Math.floor( point );\r\n    \t\tweight = point - intPoint;\r\n\r\n    \t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n    \t\tc[ 1 ] = intPoint;\r\n    \t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n    \t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n    \t\tpa = this.points[ c[ 0 ] ];\r\n    \t\tpb = this.points[ c[ 1 ] ];\r\n    \t\tpc = this.points[ c[ 2 ] ];\r\n    \t\tpd = this.points[ c[ 3 ] ];\r\n\r\n    \t\tw2 = weight * weight;\r\n    \t\tw3 = weight * w2;\r\n\r\n    \t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n    \t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n    \t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n    \t\treturn v3;\r\n\r\n    \t};\r\n\r\n    \tthis.getControlPointsArray = function () {\r\n\r\n    \t\tvar i, p, l = this.points.length,\r\n    \t\t\tcoords = [];\r\n\r\n    \t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n    \t\t\tp = this.points[ i ];\r\n    \t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n    \t\t}\r\n\r\n    \t\treturn coords;\r\n\r\n    \t};\r\n\r\n    \t// approximate length by summing linear segments\r\n\r\n    \tthis.getLength = function ( nSubDivisions ) {\r\n\r\n    \t\tvar i, index, nSamples, position,\r\n    \t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n    \t\t\toldPosition = new Vector3(),\r\n    \t\t\ttmpVec = new Vector3(),\r\n    \t\t\tchunkLengths = [],\r\n    \t\t\ttotalLength = 0;\r\n\r\n    \t\t// first point has 0 length\r\n\r\n    \t\tchunkLengths[ 0 ] = 0;\r\n\r\n    \t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n    \t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n    \t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n    \t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n    \t\t\tindex = i / nSamples;\r\n\r\n    \t\t\tposition = this.getPoint( index );\r\n    \t\t\ttmpVec.copy( position );\r\n\r\n    \t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n    \t\t\toldPosition.copy( position );\r\n\r\n    \t\t\tpoint = ( this.points.length - 1 ) * index;\r\n    \t\t\tintPoint = Math.floor( point );\r\n\r\n    \t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n    \t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n    \t\t\t\toldIntPoint = intPoint;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\t// last point ends with total length\r\n\r\n    \t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n    \t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n    \t};\r\n\r\n    \tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n    \t\tvar i, j,\r\n    \t\t\tindex, indexCurrent, indexNext,\r\n    \t\t\trealDistance,\r\n    \t\t\tsampling, position,\r\n    \t\t\tnewpoints = [],\r\n    \t\t\ttmpVec = new Vector3(),\r\n    \t\t\tsl = this.getLength();\r\n\r\n    \t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n    \t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n    \t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n    \t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n    \t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n    \t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n    \t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n    \t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n    \t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n    \t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n    \t\t\t\tposition = this.getPoint( index );\r\n    \t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n    \t\t}\r\n\r\n    \t\tthis.points = newpoints;\r\n\r\n    \t};\r\n\r\n    \t// Catmull-Rom\r\n\r\n    \tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n    \t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n    \t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n    \t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    /**\r\n     * @author bhouston / http://clara.io\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     *\r\n     * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n     *\r\n     * The poles (phi) are at the positive and negative y axis.\r\n     * The equator starts at positive z.\r\n     */\r\n\r\n    function Spherical( radius, phi, theta ) {\r\n\r\n    \tthis.radius = ( radius !== undefined ) ? radius : 1.0;\r\n    \tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\r\n    \tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\r\n\r\n    \treturn this;\r\n\r\n    }\r\n\r\n    Spherical.prototype = {\r\n\r\n    \tconstructor: Spherical,\r\n\r\n    \tset: function ( radius, phi, theta ) {\r\n\r\n    \t\tthis.radius = radius;\r\n    \t\tthis.phi = phi;\r\n    \t\tthis.theta = theta;\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tclone: function () {\r\n\r\n    \t\treturn new this.constructor().copy( this );\r\n\r\n    \t},\r\n\r\n    \tcopy: function ( other ) {\r\n\r\n    \t\tthis.radius.copy( other.radius );\r\n    \t\tthis.phi.copy( other.phi );\r\n    \t\tthis.theta.copy( other.theta );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \t// restrict phi to be betwee EPS and PI-EPS\r\n    \tmakeSafe: function() {\r\n\r\n    \t\tvar EPS = 0.000001;\r\n    \t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    \tsetFromVector3: function( vec3 ) {\r\n\r\n    \t\tthis.radius = vec3.length();\r\n\r\n    \t\tif ( this.radius === 0 ) {\r\n\r\n    \t\t\tthis.theta = 0;\r\n    \t\t\tthis.phi = 0;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\r\n    \t\t\tthis.phi = Math.acos( exports.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\r\n\r\n    \t\t}\r\n\r\n    \t\treturn this;\r\n\r\n    \t},\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function MorphBlendMesh( geometry, material ) {\r\n\r\n    \tMesh.call( this, geometry, material );\r\n\r\n    \tthis.animationsMap = {};\r\n    \tthis.animationsList = [];\r\n\r\n    \t// prepare default animation\r\n    \t// (all frames played together in 1 second)\r\n\r\n    \tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n    \tvar name = \"__default\";\r\n\r\n    \tvar startFrame = 0;\r\n    \tvar endFrame = numFrames - 1;\r\n\r\n    \tvar fps = numFrames / 1;\r\n\r\n    \tthis.createAnimation( name, startFrame, endFrame, fps );\r\n    \tthis.setAnimationWeight( name, 1 );\r\n\r\n    }\r\n\r\n    MorphBlendMesh.prototype = Object.create( Mesh.prototype );\r\n    MorphBlendMesh.prototype.constructor = MorphBlendMesh;\r\n\r\n    MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n    \tvar animation = {\r\n\r\n    \t\tstart: start,\r\n    \t\tend: end,\r\n\r\n    \t\tlength: end - start + 1,\r\n\r\n    \t\tfps: fps,\r\n    \t\tduration: ( end - start ) / fps,\r\n\r\n    \t\tlastFrame: 0,\r\n    \t\tcurrentFrame: 0,\r\n\r\n    \t\tactive: false,\r\n\r\n    \t\ttime: 0,\r\n    \t\tdirection: 1,\r\n    \t\tweight: 1,\r\n\r\n    \t\tdirectionBackwards: false,\r\n    \t\tmirroredLoop: false\r\n\r\n    \t};\r\n\r\n    \tthis.animationsMap[ name ] = animation;\r\n    \tthis.animationsList.push( animation );\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n    \tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n    \tvar firstAnimation, frameRanges = {};\r\n\r\n    \tvar geometry = this.geometry;\r\n\r\n    \tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n    \t\tvar morph = geometry.morphTargets[ i ];\r\n    \t\tvar chunks = morph.name.match( pattern );\r\n\r\n    \t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n    \t\t\tvar name = chunks[ 1 ];\r\n\r\n    \t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n    \t\t\tvar range = frameRanges[ name ];\r\n\r\n    \t\t\tif ( i < range.start ) range.start = i;\r\n    \t\t\tif ( i > range.end ) range.end = i;\r\n\r\n    \t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfor ( var name in frameRanges ) {\r\n\r\n    \t\tvar range = frameRanges[ name ];\r\n    \t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n    \t}\r\n\r\n    \tthis.firstAnimation = firstAnimation;\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.direction = 1;\r\n    \t\tanimation.directionBackwards = false;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.direction = - 1;\r\n    \t\tanimation.directionBackwards = true;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.fps = fps;\r\n    \t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.duration = duration;\r\n    \t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.weight = weight;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.time = time;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n    \tvar time = 0;\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\ttime = animation.time;\r\n\r\n    \t}\r\n\r\n    \treturn time;\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n    \tvar duration = - 1;\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tduration = animation.duration;\r\n\r\n    \t}\r\n\r\n    \treturn duration;\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.time = 0;\r\n    \t\tanimation.active = true;\r\n\r\n    \t} else {\r\n\r\n    \t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.active = false;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n    \tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n    \t\tvar animation = this.animationsList[ i ];\r\n\r\n    \t\tif ( ! animation.active ) continue;\r\n\r\n    \t\tvar frameTime = animation.duration / animation.length;\r\n\r\n    \t\tanimation.time += animation.direction * delta;\r\n\r\n    \t\tif ( animation.mirroredLoop ) {\r\n\r\n    \t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n    \t\t\t\tanimation.direction *= - 1;\r\n\r\n    \t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n    \t\t\t\t\tanimation.time = animation.duration;\r\n    \t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( animation.time < 0 ) {\r\n\r\n    \t\t\t\t\tanimation.time = 0;\r\n    \t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n    \t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar keyframe = animation.start + exports.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n    \t\tvar weight = animation.weight;\r\n\r\n    \t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n    \t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n    \t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n    \t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n    \t\t\tanimation.lastFrame = animation.currentFrame;\r\n    \t\t\tanimation.currentFrame = keyframe;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n    \t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n    \t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n    \t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n    \t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function ImmediateRenderObject( material ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.material = material;\r\n    \tthis.render = function ( renderCallback ) {};\r\n\r\n    }\r\n\r\n    ImmediateRenderObject.prototype = Object.create( Object3D.prototype );\r\n    ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\r\n\r\n    ImmediateRenderObject.prototype.isImmediateRenderObject = true;\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n    */\r\n\r\n    function VertexNormalsHelper( object, size, hex, linewidth ) {\r\n\r\n    \tthis.object = object;\r\n\r\n    \tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n    \tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n    \tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n    \t//\r\n\r\n    \tvar nNormals = 0;\r\n\r\n    \tvar objGeometry = this.object.geometry;\r\n\r\n    \tif ( (objGeometry && objGeometry.isGeometry) ) {\r\n\r\n    \t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n    \t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\r\n\r\n    \t\tnNormals = objGeometry.attributes.normal.count;\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tvar geometry = new BufferGeometry();\r\n\r\n    \tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n    \tgeometry.addAttribute( 'position', positions );\r\n\r\n    \tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n    \t//\r\n\r\n    \tthis.matrixAutoUpdate = false;\r\n\r\n    \tthis.update();\r\n\r\n    }\r\n\r\n    VertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\r\n    VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\r\n\r\n    VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n    \tvar v1 = new Vector3();\r\n    \tvar v2 = new Vector3();\r\n    \tvar normalMatrix = new Matrix3();\r\n\r\n    \treturn function update() {\r\n\r\n    \t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n    \t\tthis.object.updateMatrixWorld( true );\r\n\r\n    \t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n    \t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n    \t\tvar position = this.geometry.attributes.position;\r\n\r\n    \t\t//\r\n\r\n    \t\tvar objGeometry = this.object.geometry;\r\n\r\n    \t\tif ( (objGeometry && objGeometry.isGeometry) ) {\r\n\r\n    \t\t\tvar vertices = objGeometry.vertices;\r\n\r\n    \t\t\tvar faces = objGeometry.faces;\r\n\r\n    \t\t\tvar idx = 0;\r\n\r\n    \t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n    \t\t\t\tvar face = faces[ i ];\r\n\r\n    \t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n    \t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n    \t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n    \t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n    \t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n    \t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n    \t\t\t\t\tidx = idx + 1;\r\n\r\n    \t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n    \t\t\t\t\tidx = idx + 1;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\r\n\r\n    \t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n    \t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n    \t\t\tvar idx = 0;\r\n\r\n    \t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n    \t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n    \t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n    \t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n    \t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n    \t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n    \t\t\t\tidx = idx + 1;\r\n\r\n    \t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n    \t\t\t\tidx = idx + 1;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t\tposition.needsUpdate = true;\r\n\r\n    \t\treturn this;\r\n\r\n    \t};\r\n\r\n    }() );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n    */\r\n\r\n    function SpotLightHelper( light ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.light = light;\r\n    \tthis.light.updateMatrixWorld();\r\n\r\n    \tthis.matrix = light.matrixWorld;\r\n    \tthis.matrixAutoUpdate = false;\r\n\r\n    \tvar geometry = new BufferGeometry();\r\n\r\n    \tvar positions = [\r\n    \t\t0, 0, 0,   0,   0,   1,\r\n    \t\t0, 0, 0,   1,   0,   1,\r\n    \t\t0, 0, 0, - 1,   0,   1,\r\n    \t\t0, 0, 0,   0,   1,   1,\r\n    \t\t0, 0, 0,   0, - 1,   1\r\n    \t];\r\n\r\n    \tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n\r\n    \t\tvar p1 = ( i / l ) * Math.PI * 2;\r\n    \t\tvar p2 = ( j / l ) * Math.PI * 2;\r\n\r\n    \t\tpositions.push(\r\n    \t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\r\n    \t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\r\n    \t\t);\r\n\r\n    \t}\r\n\r\n    \tgeometry.addAttribute( 'position', new Float32Attribute( positions, 3 ) );\r\n\r\n    \tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n    \tthis.cone = new LineSegments( geometry, material );\r\n    \tthis.add( this.cone );\r\n\r\n    \tthis.update();\r\n\r\n    }\r\n\r\n    SpotLightHelper.prototype = Object.create( Object3D.prototype );\r\n    SpotLightHelper.prototype.constructor = SpotLightHelper;\r\n\r\n    SpotLightHelper.prototype.dispose = function () {\r\n\r\n    \tthis.cone.geometry.dispose();\r\n    \tthis.cone.material.dispose();\r\n\r\n    };\r\n\r\n    SpotLightHelper.prototype.update = function () {\r\n\r\n    \tvar vector = new Vector3();\r\n    \tvar vector2 = new Vector3();\r\n\r\n    \treturn function update() {\r\n\r\n    \t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\r\n    \t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n    \t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n    \t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n    \t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n    \t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n    \t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    /**\r\n     * @author Sean Griffin / http://twitter.com/sgrif\r\n     * @author Michael Guerrero / http://realitymeltdown.com\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author ikerr / http://verold.com\r\n     */\r\n\r\n    function SkeletonHelper( object ) {\r\n\r\n    \tthis.bones = this.getBoneList( object );\r\n\r\n    \tvar geometry = new Geometry();\r\n\r\n    \tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n    \t\tvar bone = this.bones[ i ];\r\n\r\n    \t\tif ( (bone.parent && bone.parent.isBone) ) {\r\n\r\n    \t\t\tgeometry.vertices.push( new Vector3() );\r\n    \t\t\tgeometry.vertices.push( new Vector3() );\r\n    \t\t\tgeometry.colors.push( new Color( 0, 0, 1 ) );\r\n    \t\t\tgeometry.colors.push( new Color( 0, 1, 0 ) );\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tgeometry.dynamic = true;\r\n\r\n    \tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n    \tLineSegments.call( this, geometry, material );\r\n\r\n    \tthis.root = object;\r\n\r\n    \tthis.matrix = object.matrixWorld;\r\n    \tthis.matrixAutoUpdate = false;\r\n\r\n    \tthis.update();\r\n\r\n    }\r\n\r\n\r\n    SkeletonHelper.prototype = Object.create( LineSegments.prototype );\r\n    SkeletonHelper.prototype.constructor = SkeletonHelper;\r\n\r\n    SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n    \tvar boneList = [];\r\n\r\n    \tif ( (object && object.isBone) ) {\r\n\r\n    \t\tboneList.push( object );\r\n\r\n    \t}\r\n\r\n    \tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n    \t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n    \t}\r\n\r\n    \treturn boneList;\r\n\r\n    };\r\n\r\n    SkeletonHelper.prototype.update = function () {\r\n\r\n    \tvar geometry = this.geometry;\r\n\r\n    \tvar matrixWorldInv = new Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n    \tvar boneMatrix = new Matrix4();\r\n\r\n    \tvar j = 0;\r\n\r\n    \tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n    \t\tvar bone = this.bones[ i ];\r\n\r\n    \t\tif ( (bone.parent && bone.parent.isBone) ) {\r\n\r\n    \t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n    \t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n    \t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n    \t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n    \t\t\tj += 2;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tgeometry.verticesNeedUpdate = true;\r\n\r\n    \tgeometry.computeBoundingSphere();\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function PointLightHelper( light, sphereSize ) {\r\n\r\n    \tthis.light = light;\r\n    \tthis.light.updateMatrixWorld();\r\n\r\n    \tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\r\n    \tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\r\n    \tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    \tMesh.call( this, geometry, material );\r\n\r\n    \tthis.matrix = this.light.matrixWorld;\r\n    \tthis.matrixAutoUpdate = false;\r\n\r\n    \t/*\r\n    \tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n    \tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n    \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n    \tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n    \tvar d = light.distance;\r\n\r\n    \tif ( d === 0.0 ) {\r\n\r\n    \t\tthis.lightDistance.visible = false;\r\n\r\n    \t} else {\r\n\r\n    \t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n    \t}\r\n\r\n    \tthis.add( this.lightDistance );\r\n    \t*/\r\n\r\n    }\r\n\r\n    PointLightHelper.prototype = Object.create( Mesh.prototype );\r\n    PointLightHelper.prototype.constructor = PointLightHelper;\r\n\r\n    PointLightHelper.prototype.dispose = function () {\r\n\r\n    \tthis.geometry.dispose();\r\n    \tthis.material.dispose();\r\n\r\n    };\r\n\r\n    PointLightHelper.prototype.update = function () {\r\n\r\n    \tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    \t/*\r\n    \tvar d = this.light.distance;\r\n\r\n    \tif ( d === 0.0 ) {\r\n\r\n    \t\tthis.lightDistance.visible = false;\r\n\r\n    \t} else {\r\n\r\n    \t\tthis.lightDistance.visible = true;\r\n    \t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n    \t}\r\n    \t*/\r\n\r\n    };\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function HemisphereLightHelper( light, sphereSize ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.light = light;\r\n    \tthis.light.updateMatrixWorld();\r\n\r\n    \tthis.matrix = light.matrixWorld;\r\n    \tthis.matrixAutoUpdate = false;\r\n\r\n    \tthis.colors = [ new Color(), new Color() ];\r\n\r\n    \tvar geometry = new SphereGeometry( sphereSize, 4, 2 );\r\n    \tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n    \tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n    \t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n    \t}\r\n\r\n    \tvar material = new MeshBasicMaterial( { vertexColors: FaceColors, wireframe: true } );\r\n\r\n    \tthis.lightSphere = new Mesh( geometry, material );\r\n    \tthis.add( this.lightSphere );\r\n\r\n    \tthis.update();\r\n\r\n    }\r\n\r\n    HemisphereLightHelper.prototype = Object.create( Object3D.prototype );\r\n    HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\r\n\r\n    HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n    \tthis.lightSphere.geometry.dispose();\r\n    \tthis.lightSphere.material.dispose();\r\n\r\n    };\r\n\r\n    HemisphereLightHelper.prototype.update = function () {\r\n\r\n    \tvar vector = new Vector3();\r\n\r\n    \treturn function update() {\r\n\r\n    \t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n    \t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n    \t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n    \t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function GridHelper( size, divisions, color1, color2 ) {\r\n\r\n    \tdivisions = divisions || 1;\r\n    \tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\r\n    \tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n    \tvar center = divisions / 2;\r\n    \tvar step = ( size * 2 ) / divisions;\r\n    \tvar vertices = [], colors = [];\r\n\r\n    \tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\r\n\r\n    \t\tvertices.push( - size, 0, k, size, 0, k );\r\n    \t\tvertices.push( k, 0, - size, k, 0, size );\r\n\r\n    \t\tvar color = i === center ? color1 : color2;\r\n\r\n    \t\tcolor.toArray( colors, j ); j += 3;\r\n    \t\tcolor.toArray( colors, j ); j += 3;\r\n    \t\tcolor.toArray( colors, j ); j += 3;\r\n    \t\tcolor.toArray( colors, j ); j += 3;\r\n\r\n    \t}\r\n\r\n    \tvar geometry = new BufferGeometry();\r\n    \tgeometry.addAttribute( 'position', new Float32Attribute( vertices, 3 ) );\r\n    \tgeometry.addAttribute( 'color', new Float32Attribute( colors, 3 ) );\r\n\r\n    \tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n    \tLineSegments.call( this, geometry, material );\r\n\r\n    }\r\n\r\n    GridHelper.prototype = Object.create( LineSegments.prototype );\r\n    GridHelper.prototype.constructor = GridHelper;\r\n\r\n    GridHelper.prototype.setColors = function () {\r\n\r\n    \tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n    */\r\n\r\n    function FaceNormalsHelper( object, size, hex, linewidth ) {\r\n\r\n    \t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n    \tthis.object = object;\r\n\r\n    \tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n    \tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n    \tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n    \t//\r\n\r\n    \tvar nNormals = 0;\r\n\r\n    \tvar objGeometry = this.object.geometry;\r\n\r\n    \tif ( (objGeometry && objGeometry.isGeometry) ) {\r\n\r\n    \t\tnNormals = objGeometry.faces.length;\r\n\r\n    \t} else {\r\n\r\n    \t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n    \t}\r\n\r\n    \t//\r\n\r\n    \tvar geometry = new BufferGeometry();\r\n\r\n    \tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n    \tgeometry.addAttribute( 'position', positions );\r\n\r\n    \tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n    \t//\r\n\r\n    \tthis.matrixAutoUpdate = false;\r\n    \tthis.update();\r\n\r\n    }\r\n\r\n    FaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\r\n    FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\r\n\r\n    FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n    \tvar v1 = new Vector3();\r\n    \tvar v2 = new Vector3();\r\n    \tvar normalMatrix = new Matrix3();\r\n\r\n    \treturn function update() {\r\n\r\n    \t\tthis.object.updateMatrixWorld( true );\r\n\r\n    \t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n    \t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n    \t\tvar position = this.geometry.attributes.position;\r\n\r\n    \t\t//\r\n\r\n    \t\tvar objGeometry = this.object.geometry;\r\n\r\n    \t\tvar vertices = objGeometry.vertices;\r\n\r\n    \t\tvar faces = objGeometry.faces;\r\n\r\n    \t\tvar idx = 0;\r\n\r\n    \t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n    \t\t\tvar face = faces[ i ];\r\n\r\n    \t\t\tvar normal = face.normal;\r\n\r\n    \t\t\tv1.copy( vertices[ face.a ] )\r\n    \t\t\t\t.add( vertices[ face.b ] )\r\n    \t\t\t\t.add( vertices[ face.c ] )\r\n    \t\t\t\t.divideScalar( 3 )\r\n    \t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n    \t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n    \t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n    \t\t\tidx = idx + 1;\r\n\r\n    \t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n    \t\t\tidx = idx + 1;\r\n\r\n    \t\t}\r\n\r\n    \t\tposition.needsUpdate = true;\r\n\r\n    \t\treturn this;\r\n\r\n    \t};\r\n\r\n    }() );\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     */\r\n\r\n    function DirectionalLightHelper( light, size ) {\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tthis.light = light;\r\n    \tthis.light.updateMatrixWorld();\r\n\r\n    \tthis.matrix = light.matrixWorld;\r\n    \tthis.matrixAutoUpdate = false;\r\n\r\n    \tif ( size === undefined ) size = 1;\r\n\r\n    \tvar geometry = new BufferGeometry();\r\n    \tgeometry.addAttribute( 'position', new Float32Attribute( [\r\n    \t\t- size,   size, 0,\r\n    \t\t  size,   size, 0,\r\n    \t\t  size, - size, 0,\r\n    \t\t- size, - size, 0,\r\n    \t\t- size,   size, 0\r\n    \t], 3 ) );\r\n\r\n    \tvar material = new LineBasicMaterial( { fog: false } );\r\n\r\n    \tthis.add( new Line( geometry, material ) );\r\n\r\n    \tgeometry = new BufferGeometry();\r\n    \tgeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n\r\n    \tthis.add( new Line( geometry, material ));\r\n\r\n    \tthis.update();\r\n\r\n    }\r\n\r\n    DirectionalLightHelper.prototype = Object.create( Object3D.prototype );\r\n    DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\r\n\r\n    DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n    \tvar lightPlane = this.children[ 0 ];\r\n    \tvar targetLine = this.children[ 1 ];\r\n\r\n    \tlightPlane.geometry.dispose();\r\n    \tlightPlane.material.dispose();\r\n    \ttargetLine.geometry.dispose();\r\n    \ttargetLine.material.dispose();\r\n\r\n    };\r\n\r\n    DirectionalLightHelper.prototype.update = function () {\r\n\r\n    \tvar v1 = new Vector3();\r\n    \tvar v2 = new Vector3();\r\n    \tvar v3 = new Vector3();\r\n\r\n    \treturn function update() {\r\n\r\n    \t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n    \t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n    \t\tv3.subVectors( v2, v1 );\r\n\r\n    \t\tvar lightPlane = this.children[ 0 ];\r\n    \t\tvar targetLine = this.children[ 1 ];\r\n\r\n    \t\tlightPlane.lookAt( v3 );\r\n    \t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n    \t\ttargetLine.lookAt( v3 );\r\n    \t\ttargetLine.scale.z = v3.length();\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     *\r\n     *\t- shows frustum, line of sight and up of the camera\r\n     *\t- suitable for fast updates\r\n     * \t- based on frustum visualization in lightgl.js shadowmap example\r\n     *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n     */\r\n\r\n    function CameraHelper( camera ) {\r\n\r\n    \tvar geometry = new Geometry();\r\n    \tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\r\n\r\n    \tvar pointMap = {};\r\n\r\n    \t// colors\r\n\r\n    \tvar hexFrustum = 0xffaa00;\r\n    \tvar hexCone = 0xff0000;\r\n    \tvar hexUp = 0x00aaff;\r\n    \tvar hexTarget = 0xffffff;\r\n    \tvar hexCross = 0x333333;\r\n\r\n    \t// near\r\n\r\n    \taddLine( \"n1\", \"n2\", hexFrustum );\r\n    \taddLine( \"n2\", \"n4\", hexFrustum );\r\n    \taddLine( \"n4\", \"n3\", hexFrustum );\r\n    \taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n    \t// far\r\n\r\n    \taddLine( \"f1\", \"f2\", hexFrustum );\r\n    \taddLine( \"f2\", \"f4\", hexFrustum );\r\n    \taddLine( \"f4\", \"f3\", hexFrustum );\r\n    \taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n    \t// sides\r\n\r\n    \taddLine( \"n1\", \"f1\", hexFrustum );\r\n    \taddLine( \"n2\", \"f2\", hexFrustum );\r\n    \taddLine( \"n3\", \"f3\", hexFrustum );\r\n    \taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n    \t// cone\r\n\r\n    \taddLine( \"p\", \"n1\", hexCone );\r\n    \taddLine( \"p\", \"n2\", hexCone );\r\n    \taddLine( \"p\", \"n3\", hexCone );\r\n    \taddLine( \"p\", \"n4\", hexCone );\r\n\r\n    \t// up\r\n\r\n    \taddLine( \"u1\", \"u2\", hexUp );\r\n    \taddLine( \"u2\", \"u3\", hexUp );\r\n    \taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n    \t// target\r\n\r\n    \taddLine( \"c\", \"t\", hexTarget );\r\n    \taddLine( \"p\", \"c\", hexCross );\r\n\r\n    \t// cross\r\n\r\n    \taddLine( \"cn1\", \"cn2\", hexCross );\r\n    \taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n    \taddLine( \"cf1\", \"cf2\", hexCross );\r\n    \taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n    \tfunction addLine( a, b, hex ) {\r\n\r\n    \t\taddPoint( a, hex );\r\n    \t\taddPoint( b, hex );\r\n\r\n    \t}\r\n\r\n    \tfunction addPoint( id, hex ) {\r\n\r\n    \t\tgeometry.vertices.push( new Vector3() );\r\n    \t\tgeometry.colors.push( new Color( hex ) );\r\n\r\n    \t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n    \t\t\tpointMap[ id ] = [];\r\n\r\n    \t\t}\r\n\r\n    \t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n    \t}\r\n\r\n    \tLineSegments.call( this, geometry, material );\r\n\r\n    \tthis.camera = camera;\r\n    \tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\r\n\r\n    \tthis.matrix = camera.matrixWorld;\r\n    \tthis.matrixAutoUpdate = false;\r\n\r\n    \tthis.pointMap = pointMap;\r\n\r\n    \tthis.update();\r\n\r\n    }\r\n\r\n    CameraHelper.prototype = Object.create( LineSegments.prototype );\r\n    CameraHelper.prototype.constructor = CameraHelper;\r\n\r\n    CameraHelper.prototype.update = function () {\r\n\r\n    \tvar geometry, pointMap;\r\n\r\n    \tvar vector = new Vector3();\r\n    \tvar camera = new Camera();\r\n\r\n    \tfunction setPoint( point, x, y, z ) {\r\n\r\n    \t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n    \t\tvar points = pointMap[ point ];\r\n\r\n    \t\tif ( points !== undefined ) {\r\n\r\n    \t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n    \t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \treturn function update() {\r\n\r\n    \t\tgeometry = this.geometry;\r\n    \t\tpointMap = this.pointMap;\r\n\r\n    \t\tvar w = 1, h = 1;\r\n\r\n    \t\t// we need just camera projection matrix\r\n    \t\t// world matrix must be identity\r\n\r\n    \t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n    \t\t// center / target\r\n\r\n    \t\tsetPoint( \"c\", 0, 0, - 1 );\r\n    \t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n    \t\t// near\r\n\r\n    \t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n    \t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n    \t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n    \t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n    \t\t// far\r\n\r\n    \t\tsetPoint( \"f1\", - w, - h, 1 );\r\n    \t\tsetPoint( \"f2\",   w, - h, 1 );\r\n    \t\tsetPoint( \"f3\", - w,   h, 1 );\r\n    \t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n    \t\t// up\r\n\r\n    \t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n    \t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n    \t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n    \t\t// cross\r\n\r\n    \t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n    \t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n    \t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n    \t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n    \t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n    \t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n    \t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n    \t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n    \t\tgeometry.verticesNeedUpdate = true;\r\n\r\n    \t};\r\n\r\n    }();\r\n\r\n    /**\r\n     * @author WestLangley / http://github.com/WestLangley\r\n     */\r\n\r\n    // a helper to show the world-axis-aligned bounding box for an object\r\n\r\n    function BoundingBoxHelper( object, hex ) {\r\n\r\n    \tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n    \tthis.object = object;\r\n\r\n    \tthis.box = new Box3();\r\n\r\n    \tMesh.call( this, new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n    }\r\n\r\n    BoundingBoxHelper.prototype = Object.create( Mesh.prototype );\r\n    BoundingBoxHelper.prototype.constructor = BoundingBoxHelper;\r\n\r\n    BoundingBoxHelper.prototype.update = function () {\r\n\r\n    \tthis.box.setFromObject( this.object );\r\n\r\n    \tthis.box.size( this.scale );\r\n\r\n    \tthis.box.getCenter( this.position );\r\n\r\n    };\r\n\r\n    /**\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function BoxHelper( object, color ) {\r\n\r\n    \tif ( color === undefined ) color = 0xffff00;\r\n\r\n    \tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n    \tvar positions = new Float32Array( 8 * 3 );\r\n\r\n    \tvar geometry = new BufferGeometry();\r\n    \tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\r\n    \tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\r\n\r\n    \tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\r\n\r\n    \tif ( object !== undefined ) {\r\n\r\n    \t\tthis.update( object );\r\n\r\n    \t}\r\n\r\n    }\r\n\r\n    BoxHelper.prototype = Object.create( LineSegments.prototype );\r\n    BoxHelper.prototype.constructor = BoxHelper;\r\n\r\n    BoxHelper.prototype.update = ( function () {\r\n\r\n    \tvar box = new Box3();\r\n\r\n    \treturn function update( object ) {\r\n\r\n    \t\tif ( (object && object.isBox3) ) {\r\n\r\n    \t\t\tbox.copy( object );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tbox.setFromObject( object );\r\n\r\n    \t\t}\r\n\r\n    \t\tif ( box.isEmpty() ) return;\r\n\r\n    \t\tvar min = box.min;\r\n    \t\tvar max = box.max;\r\n\r\n    \t\t/*\r\n    \t\t  5____4\r\n    \t\t1/___0/|\r\n    \t\t| 6__|_7\r\n    \t\t2/___3/\r\n\r\n    \t\t0: max.x, max.y, max.z\r\n    \t\t1: min.x, max.y, max.z\r\n    \t\t2: min.x, min.y, max.z\r\n    \t\t3: max.x, min.y, max.z\r\n    \t\t4: max.x, max.y, min.z\r\n    \t\t5: min.x, max.y, min.z\r\n    \t\t6: min.x, min.y, min.z\r\n    \t\t7: max.x, min.y, min.z\r\n    \t\t*/\r\n\r\n    \t\tvar position = this.geometry.attributes.position;\r\n    \t\tvar array = position.array;\r\n\r\n    \t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n    \t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n    \t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n    \t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n    \t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n    \t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n    \t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n    \t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n    \t\tposition.needsUpdate = true;\r\n\r\n    \t\tthis.geometry.computeBoundingSphere();\r\n\r\n    \t};\r\n\r\n    } )();\r\n\r\n    var lineGeometry = new BufferGeometry();\r\n    lineGeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n\r\n    var coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\r\n    coneGeometry.translate( 0, - 0.5, 0 );\r\n\r\n    function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n    \t// dir is assumed to be normalized\r\n\r\n    \tObject3D.call( this );\r\n\r\n    \tif ( color === undefined ) color = 0xffff00;\r\n    \tif ( length === undefined ) length = 1;\r\n    \tif ( headLength === undefined ) headLength = 0.2 * length;\r\n    \tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n    \tthis.position.copy( origin );\r\n\r\n    \tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\r\n    \tthis.line.matrixAutoUpdate = false;\r\n    \tthis.add( this.line );\r\n\r\n    \tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\r\n    \tthis.cone.matrixAutoUpdate = false;\r\n    \tthis.add( this.cone );\r\n\r\n    \tthis.setDirection( dir );\r\n    \tthis.setLength( length, headLength, headWidth );\r\n\r\n    }\r\n\r\n    ArrowHelper.prototype = Object.create( Object3D.prototype );\r\n    ArrowHelper.prototype.constructor = ArrowHelper;\r\n\r\n    ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n    \tvar axis = new Vector3();\r\n    \tvar radians;\r\n\r\n    \treturn function setDirection( dir ) {\r\n\r\n    \t\t// dir is assumed to be normalized\r\n\r\n    \t\tif ( dir.y > 0.99999 ) {\r\n\r\n    \t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n    \t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n    \t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n    \t\t\tradians = Math.acos( dir.y );\r\n\r\n    \t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n    \t\t}\r\n\r\n    \t};\r\n\r\n    }() );\r\n\r\n    ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n    \tif ( headLength === undefined ) headLength = 0.2 * length;\r\n    \tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n    \tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\r\n    \tthis.line.updateMatrix();\r\n\r\n    \tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n    \tthis.cone.position.y = length;\r\n    \tthis.cone.updateMatrix();\r\n\r\n    };\r\n\r\n    ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n    \tthis.line.material.color.copy( color );\r\n    \tthis.cone.material.color.copy( color );\r\n\r\n    };\r\n\r\n    /**\r\n     * @author sroucheray / http://sroucheray.org/\r\n     * @author mrdoob / http://mrdoob.com/\r\n     */\r\n\r\n    function AxisHelper( size ) {\r\n\r\n    \tsize = size || 1;\r\n\r\n    \tvar vertices = new Float32Array( [\r\n    \t\t0, 0, 0,  size, 0, 0,\r\n    \t\t0, 0, 0,  0, size, 0,\r\n    \t\t0, 0, 0,  0, 0, size\r\n    \t] );\r\n\r\n    \tvar colors = new Float32Array( [\r\n    \t\t1, 0, 0,  1, 0.6, 0,\r\n    \t\t0, 1, 0,  0.6, 1, 0,\r\n    \t\t0, 0, 1,  0, 0.6, 1\r\n    \t] );\r\n\r\n    \tvar geometry = new BufferGeometry();\r\n    \tgeometry.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\r\n    \tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\r\n\r\n    \tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\r\n\r\n    \tLineSegments.call( this, geometry, material );\r\n\r\n    }\r\n\r\n    AxisHelper.prototype = Object.create( LineSegments.prototype );\r\n    AxisHelper.prototype.constructor = AxisHelper;\r\n\r\n    /**\r\n     * @author zz85 https://github.com/zz85\r\n     *\r\n     * Centripetal CatmullRom Curve - which is useful for avoiding\r\n     * cusps and self-intersections in non-uniform catmull rom curves.\r\n     * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n     *\r\n     * curve.type accepts centripetal(default), chordal and catmullrom\r\n     * curve.tension is used for catmullrom which defaults to 0.5\r\n     */\r\n\r\n    exports.CatmullRomCurve3 = ( function() {\r\n\r\n    \tvar\r\n    \t\ttmp = new Vector3(),\r\n    \t\tpx = new CubicPoly(),\r\n    \t\tpy = new CubicPoly(),\r\n    \t\tpz = new CubicPoly();\r\n\r\n    \t/*\r\n    \tBased on an optimized c++ solution in\r\n    \t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n    \t - http://ideone.com/NoEbVM\r\n\r\n    \tThis CubicPoly class could be used for reusing some variables and calculations,\r\n    \tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n    \twhich can be placed in CurveUtils.\r\n    \t*/\r\n\r\n    \tfunction CubicPoly() {\r\n\r\n    \t}\r\n\r\n    \t/*\r\n    \t * Compute coefficients for a cubic polynomial\r\n    \t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n    \t * such that\r\n    \t *   p(0) = x0, p(1) = x1\r\n    \t *  and\r\n    \t *   p'(0) = t0, p'(1) = t1.\r\n    \t */\r\n    \tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n    \t\tthis.c0 = x0;\r\n    \t\tthis.c1 = t0;\r\n    \t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n    \t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n    \t};\r\n\r\n    \tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n    \t\t// compute tangents when parameterized in [t1,t2]\r\n    \t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n    \t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n    \t\t// rescale tangents for parametrization in [0,1]\r\n    \t\tt1 *= dt1;\r\n    \t\tt2 *= dt1;\r\n\r\n    \t\t// initCubicPoly\r\n    \t\tthis.init( x1, x2, t1, t2 );\r\n\r\n    \t};\r\n\r\n    \t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n    \tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n    \t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n    \t};\r\n\r\n    \tCubicPoly.prototype.calc = function( t ) {\r\n\r\n    \t\tvar t2 = t * t;\r\n    \t\tvar t3 = t2 * t;\r\n    \t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n    \t};\r\n\r\n    \t// Subclass Three.js curve\r\n    \treturn Curve.create(\r\n\r\n    \t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n    \t\t\tthis.points = p || [];\r\n    \t\t\tthis.closed = false;\r\n\r\n    \t\t},\r\n\r\n    \t\tfunction ( t ) {\r\n\r\n    \t\t\tvar points = this.points,\r\n    \t\t\t\tpoint, intPoint, weight, l;\r\n\r\n    \t\t\tl = points.length;\r\n\r\n    \t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n    \t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n    \t\t\tintPoint = Math.floor( point );\r\n    \t\t\tweight = point - intPoint;\r\n\r\n    \t\t\tif ( this.closed ) {\r\n\r\n    \t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n    \t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n    \t\t\t\tintPoint = l - 2;\r\n    \t\t\t\tweight = 1;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar p0, p1, p2, p3; // 4 points\r\n\r\n    \t\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n    \t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// extrapolate first point\r\n    \t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n    \t\t\t\tp0 = tmp;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tp1 = points[ intPoint % l ];\r\n    \t\t\tp2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n    \t\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n    \t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n    \t\t\t} else {\r\n\r\n    \t\t\t\t// extrapolate last point\r\n    \t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n    \t\t\t\tp3 = tmp;\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n    \t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n    \t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n    \t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n    \t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n    \t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n    \t\t\t\t// safety check for repeated points\r\n    \t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n    \t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n    \t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n    \t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n    \t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n    \t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n    \t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n    \t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n    \t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n    \t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n    \t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n    \t\t\t}\r\n\r\n    \t\t\tvar v = new Vector3(\r\n    \t\t\t\tpx.calc( weight ),\r\n    \t\t\t\tpy.calc( weight ),\r\n    \t\t\t\tpz.calc( weight )\r\n    \t\t\t);\r\n\r\n    \t\t\treturn v;\r\n\r\n    \t\t}\r\n\r\n    \t);\r\n\r\n    } )();\r\n\r\n    /**************************************************************\r\n     *\tClosed Spline 3D curve\r\n     **************************************************************/\r\n\r\n\r\n    function ClosedSplineCurve3( points ) {\r\n\r\n    \tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\r\n\r\n    \texports.CatmullRomCurve3.call( this, points );\r\n    \tthis.type = 'catmullrom';\r\n    \tthis.closed = true;\r\n\r\n    }\r\n\r\n    ClosedSplineCurve3.prototype = Object.create( exports.CatmullRomCurve3.prototype );\r\n\r\n    /**************************************************************\r\n     *\tSpline 3D curve\r\n     **************************************************************/\r\n\r\n\r\n    var SplineCurve3 = Curve.create(\r\n\r\n    \tfunction ( points /* array of Vector3 */ ) {\r\n\r\n    \t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n    \t\tthis.points = ( points === undefined ) ? [] : points;\r\n\r\n    \t},\r\n\r\n    \tfunction ( t ) {\r\n\r\n    \t\tvar points = this.points;\r\n    \t\tvar point = ( points.length - 1 ) * t;\r\n\r\n    \t\tvar intPoint = Math.floor( point );\r\n    \t\tvar weight = point - intPoint;\r\n\r\n    \t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n    \t\tvar point1 = points[ intPoint ];\r\n    \t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n    \t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n    \t\tvar interpolate = exports.CurveUtils.interpolate;\r\n\r\n    \t\treturn new Vector3(\r\n    \t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n    \t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n    \t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n    \t\t);\r\n\r\n    \t}\r\n\r\n    );\r\n\r\n    /**************************************************************\r\n     *\tCubic Bezier 3D curve\r\n     **************************************************************/\r\n\r\n    exports.CubicBezierCurve3 = Curve.create(\r\n\r\n    \tfunction ( v0, v1, v2, v3 ) {\r\n\r\n    \t\tthis.v0 = v0;\r\n    \t\tthis.v1 = v1;\r\n    \t\tthis.v2 = v2;\r\n    \t\tthis.v3 = v3;\r\n\r\n    \t},\r\n\r\n    \tfunction ( t ) {\r\n\r\n    \t\tvar b3 = exports.ShapeUtils.b3;\r\n\r\n    \t\treturn new Vector3(\r\n    \t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n    \t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\r\n    \t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\r\n    \t\t);\r\n\r\n    \t}\r\n\r\n    );\r\n\r\n    /**************************************************************\r\n     *\tQuadratic Bezier 3D curve\r\n     **************************************************************/\r\n\r\n    exports.QuadraticBezierCurve3 = Curve.create(\r\n\r\n    \tfunction ( v0, v1, v2 ) {\r\n\r\n    \t\tthis.v0 = v0;\r\n    \t\tthis.v1 = v1;\r\n    \t\tthis.v2 = v2;\r\n\r\n    \t},\r\n\r\n    \tfunction ( t ) {\r\n\r\n    \t\tvar b2 = exports.ShapeUtils.b2;\t\t\r\n\r\n    \t\treturn new Vector3(\r\n    \t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n    \t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\r\n    \t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\r\n    \t\t);\r\n\r\n    \t}\r\n\r\n    );\r\n\r\n    /**************************************************************\r\n     *\tLine3D\r\n     **************************************************************/\r\n\r\n    exports.LineCurve3 = Curve.create(\r\n\r\n    \tfunction ( v1, v2 ) {\r\n\r\n    \t\tthis.v1 = v1;\r\n    \t\tthis.v2 = v2;\r\n\r\n    \t},\r\n\r\n    \tfunction ( t ) {\r\n\r\n    \t\tif ( t === 1 ) {\r\n\r\n    \t\t\treturn this.v2.clone();\r\n\r\n    \t\t}\r\n\r\n    \t\tvar vector = new Vector3();\r\n\r\n    \t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n    \t\tvector.multiplyScalar( t );\r\n    \t\tvector.add( this.v1 );\r\n\r\n    \t\treturn vector;\r\n\r\n    \t}\r\n\r\n    );\r\n\r\n    /**************************************************************\r\n     *\tArc curve\r\n     **************************************************************/\r\n\r\n    function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n    \tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n    }\r\n\r\n    ArcCurve.prototype = Object.create( EllipseCurve.prototype );\r\n    ArcCurve.prototype.constructor = ArcCurve;\r\n\r\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    exports.SceneUtils = {\r\n\r\n    \tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n    \t\tvar group = new Group();\r\n\r\n    \t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n    \t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\r\n\r\n    \t\t}\r\n\r\n    \t\treturn group;\r\n\r\n    \t},\r\n\r\n    \tdetach: function ( child, parent, scene ) {\r\n\r\n    \t\tchild.applyMatrix( parent.matrixWorld );\r\n    \t\tparent.remove( child );\r\n    \t\tscene.add( child );\r\n\r\n    \t},\r\n\r\n    \tattach: function ( child, scene, parent ) {\r\n\r\n    \t\tvar matrixWorldInverse = new Matrix4();\r\n    \t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n    \t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n    \t\tscene.remove( child );\r\n    \t\tparent.add( child );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    function Face4 ( a, b, c, d, normal, color, materialIndex ) {\r\n    \tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n    \treturn new Face3( a, b, c, normal, color, materialIndex );\r\n    }\r\n\r\n    var LineStrip = 0;\r\n\r\n    var LinePieces = 1;\r\n\r\n    function PointCloud ( geometry, material ) {\r\n    \tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n    \treturn new Points( geometry, material );\r\n    }\r\n\r\n    function ParticleSystem ( geometry, material ) {\r\n    \tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n    \treturn new Points( geometry, material );\r\n    }\r\n\r\n    function PointCloudMaterial ( parameters ) {\r\n    \tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n    \treturn new PointsMaterial( parameters );\r\n    }\r\n\r\n    function ParticleBasicMaterial ( parameters ) {\r\n    \tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n    \treturn new PointsMaterial( parameters );\r\n    }\r\n\r\n    function ParticleSystemMaterial ( parameters ) {\r\n    \tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n    \treturn new PointsMaterial( parameters );\r\n    }\r\n\r\n    function Vertex ( x, y, z ) {\r\n    \tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n    \treturn new Vector3( x, y, z );\r\n    }\r\n\r\n    //\r\n\r\n    function EdgesHelper( object, hex ) {\r\n    \tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\r\n    \treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n    }\r\n\r\n    function WireframeHelper( object, hex ) {\r\n    \tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\r\n    \treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\r\n    }\r\n\r\n    //\r\n\r\n    Object.assign( Box2.prototype, {\r\n    \tcenter: function ( optionalTarget ) {\r\n    \t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\r\n    \t\treturn this.getCenter( optionalTarget );\r\n    \t},\r\n    \tempty: function () {\r\n    \t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n    \t\treturn this.isEmpty();\r\n    \t},\r\n    \tisIntersectionBox: function ( box ) {\r\n    \t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n    \t\treturn this.intersectsBox( box );\r\n    \t},\r\n    \tsize: function ( optionalTarget ) {\r\n    \t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\r\n    \t\treturn this.getSize( optionalTarget );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Box3.prototype, {\r\n    \tcenter: function ( optionalTarget ) {\r\n    \t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\r\n    \t\treturn this.getCenter( optionalTarget );\r\n    \t},\r\n    \tempty: function () {\r\n    \t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n    \t\treturn this.isEmpty();\r\n    \t},\r\n    \tisIntersectionBox: function ( box ) {\r\n    \t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n    \t\treturn this.intersectsBox( box );\r\n    \t},\r\n    \tisIntersectionSphere: function ( sphere ) {\r\n    \t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n    \t\treturn this.intersectsSphere( sphere );\r\n    \t},\r\n    \tsize: function ( optionalTarget ) {\r\n    \t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\r\n    \t\treturn this.getSize( optionalTarget );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Line3.prototype, {\r\n    \tcenter: function ( optionalTarget ) {\r\n    \t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\r\n    \t\treturn this.getCenter( optionalTarget );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Matrix3.prototype, {\r\n    \tmultiplyVector3: function ( vector ) {\r\n    \t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n    \t\treturn vector.applyMatrix3( this );\r\n    \t},\r\n    \tmultiplyVector3Array: function ( a ) {\r\n    \t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n    \t\treturn this.applyToVector3Array( a );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Matrix4.prototype, {\r\n    \textractPosition: function ( m ) {\r\n    \t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n    \t\treturn this.copyPosition( m );\r\n    \t},\r\n    \tsetRotationFromQuaternion: function ( q ) {\r\n    \t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n    \t\treturn this.makeRotationFromQuaternion( q );\r\n    \t},\r\n    \tmultiplyVector3: function ( vector ) {\r\n    \t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n    \t\treturn vector.applyProjection( this );\r\n    \t},\r\n    \tmultiplyVector4: function ( vector ) {\r\n    \t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n    \t\treturn vector.applyMatrix4( this );\r\n    \t},\r\n    \tmultiplyVector3Array: function ( a ) {\r\n    \t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n    \t\treturn this.applyToVector3Array( a );\r\n    \t},\r\n    \trotateAxis: function ( v ) {\r\n    \t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n    \t\tv.transformDirection( this );\r\n    \t},\r\n    \tcrossVector: function ( vector ) {\r\n    \t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n    \t\treturn vector.applyMatrix4( this );\r\n    \t},\r\n    \ttranslate: function ( v ) {\r\n    \t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n    \t},\r\n    \trotateX: function ( angle ) {\r\n    \t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n    \t},\r\n    \trotateY: function ( angle ) {\r\n    \t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n    \t},\r\n    \trotateZ: function ( angle ) {\r\n    \t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n    \t},\r\n    \trotateByAxis: function ( axis, angle ) {\r\n    \t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Plane.prototype, {\r\n    \tisIntersectionLine: function ( line ) {\r\n    \t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n    \t\treturn this.intersectsLine( line );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Quaternion.prototype, {\r\n    \tmultiplyVector3: function ( vector ) {\r\n    \t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n    \t\treturn vector.applyQuaternion( this );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Ray.prototype, {\r\n    \tisIntersectionBox: function ( box ) {\r\n    \t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n    \t\treturn this.intersectsBox( box );\r\n    \t},\r\n    \tisIntersectionPlane: function ( plane ) {\r\n    \t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n    \t\treturn this.intersectsPlane( plane );\r\n    \t},\r\n    \tisIntersectionSphere: function ( sphere ) {\r\n    \t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n    \t\treturn this.intersectsSphere( sphere );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Shape.prototype, {\r\n    \textrude: function ( options ) {\r\n    \t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\r\n    \t\treturn new ExtrudeGeometry( this, options );\r\n    \t},\r\n    \tmakeGeometry: function ( options ) {\r\n    \t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\r\n    \t\treturn new ShapeGeometry( this, options );\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( Vector3.prototype, {\r\n    \tsetEulerFromRotationMatrix: function () {\r\n    \t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n    \t},\r\n    \tsetEulerFromQuaternion: function () {\r\n    \t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n    \t},\r\n    \tgetPositionFromMatrix: function ( m ) {\r\n    \t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n    \t\treturn this.setFromMatrixPosition( m );\r\n    \t},\r\n    \tgetScaleFromMatrix: function ( m ) {\r\n    \t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n    \t\treturn this.setFromMatrixScale( m );\r\n    \t},\r\n    \tgetColumnFromMatrix: function ( index, matrix ) {\r\n    \t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n    \t\treturn this.setFromMatrixColumn( matrix, index );\r\n    \t}\r\n    } );\r\n\r\n    //\r\n\r\n    Object.assign( Object3D.prototype, {\r\n    \tgetChildByName: function ( name ) {\r\n    \t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n    \t\treturn this.getObjectByName( name );\r\n    \t},\r\n    \trenderDepth: function ( value ) {\r\n    \t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n    \t},\r\n    \ttranslate: function ( distance, axis ) {\r\n    \t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n    \t\treturn this.translateOnAxis( axis, distance );\r\n    \t}\r\n    } );\r\n\r\n    Object.defineProperties( Object3D.prototype, {\r\n    \teulerOrder: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n    \t\t\treturn this.rotation.order;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n    \t\t\tthis.rotation.order = value;\r\n    \t\t}\r\n    \t},\r\n    \tuseQuaternion: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    Object.defineProperties( LOD.prototype, {\r\n    \tobjects: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n    \t\t\treturn this.levels;\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    //\r\n\r\n    PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\r\n\r\n    \tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\r\n    \t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\r\n\r\n    \tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\r\n    \tthis.setFocalLength( focalLength );\r\n\r\n    };\r\n\r\n    //\r\n\r\n    Object.defineProperties( Light.prototype, {\r\n    \tonlyShadow: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n    \t\t}\r\n    \t},\r\n    \tshadowCameraFov: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n    \t\t\tthis.shadow.camera.fov = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowCameraLeft: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n    \t\t\tthis.shadow.camera.left = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowCameraRight: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n    \t\t\tthis.shadow.camera.right = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowCameraTop: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n    \t\t\tthis.shadow.camera.top = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowCameraBottom: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n    \t\t\tthis.shadow.camera.bottom = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowCameraNear: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n    \t\t\tthis.shadow.camera.near = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowCameraFar: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n    \t\t\tthis.shadow.camera.far = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowCameraVisible: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n    \t\t}\r\n    \t},\r\n    \tshadowBias: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n    \t\t\tthis.shadow.bias = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowDarkness: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n    \t\t}\r\n    \t},\r\n    \tshadowMapWidth: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n    \t\t\tthis.shadow.mapSize.width = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowMapHeight: {\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n    \t\t\tthis.shadow.mapSize.height = value;\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    //\r\n\r\n    Object.defineProperties( BufferAttribute.prototype, {\r\n    \tlength: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n    \t\t\treturn this.array.length;\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( BufferGeometry.prototype, {\r\n    \taddIndex: function ( index ) {\r\n    \t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n    \t\tthis.setIndex( index );\r\n    \t},\r\n    \taddDrawCall: function ( start, count, indexOffset ) {\r\n    \t\tif ( indexOffset !== undefined ) {\r\n    \t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n    \t\t}\r\n    \t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n    \t\tthis.addGroup( start, count );\r\n    \t},\r\n    \tclearDrawCalls: function () {\r\n    \t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n    \t\tthis.clearGroups();\r\n    \t},\r\n    \tcomputeTangents: function () {\r\n    \t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n    \t},\r\n    \tcomputeOffsets: function () {\r\n    \t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n    \t}\r\n    } );\r\n\r\n    Object.defineProperties( BufferGeometry.prototype, {\r\n    \tdrawcalls: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n    \t\t\treturn this.groups;\r\n    \t\t}\r\n    \t},\r\n    \toffsets: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n    \t\t\treturn this.groups;\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    //\r\n\r\n    Object.defineProperties( Material.prototype, {\r\n    \twrapAround: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n    \t\t}\r\n    \t},\r\n    \twrapRGB: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n    \t\t\treturn new Color();\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    Object.defineProperties( MeshPhongMaterial.prototype, {\r\n    \tmetal: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\r\n    \t\t\treturn false;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    Object.defineProperties( ShaderMaterial.prototype, {\r\n    \tderivatives: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n    \t\t\treturn this.extensions.derivatives;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n    \t\t\tthis.extensions.derivatives = value;\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    //\r\n\r\n    EventDispatcher.prototype = Object.assign( Object.create( {\r\n\r\n    \t// Note: Extra base ensures these properties are not 'assign'ed.\r\n\r\n    \tconstructor: EventDispatcher,\r\n\r\n    \tapply: function ( target ) {\r\n\r\n    \t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\r\n    \t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\r\n\r\n    \t\tObject.assign( target, this );\r\n\r\n    \t}\r\n\r\n    } ), EventDispatcher.prototype );\r\n\r\n    //\r\n\r\n    Object.assign( WebGLRenderer.prototype, {\r\n    \tsupportsFloatTextures: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n    \t\treturn this.extensions.get( 'OES_texture_float' );\r\n    \t},\r\n    \tsupportsHalfFloatTextures: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n    \t\treturn this.extensions.get( 'OES_texture_half_float' );\r\n    \t},\r\n    \tsupportsStandardDerivatives: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n    \t\treturn this.extensions.get( 'OES_standard_derivatives' );\r\n    \t},\r\n    \tsupportsCompressedTextureS3TC: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n    \t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n    \t},\r\n    \tsupportsCompressedTexturePVRTC: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n    \t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n    \t},\r\n    \tsupportsBlendMinMax: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n    \t\treturn this.extensions.get( 'EXT_blend_minmax' );\r\n    \t},\r\n    \tsupportsVertexTextures: function () {\r\n    \t\treturn this.capabilities.vertexTextures;\r\n    \t},\r\n    \tsupportsInstancedArrays: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n    \t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\r\n    \t},\r\n    \tenableScissorTest: function ( boolean ) {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n    \t\tthis.setScissorTest( boolean );\r\n    \t},\r\n    \tinitMaterial: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n    \t},\r\n    \taddPrePlugin: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n    \t},\r\n    \taddPostPlugin: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n    \t},\r\n    \tupdateShadowMap: function () {\r\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n    \t}\r\n    } );\r\n\r\n    Object.defineProperties( WebGLRenderer.prototype, {\r\n    \tshadowMapEnabled: {\r\n    \t\tget: function () {\r\n    \t\t\treturn this.shadowMap.enabled;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n    \t\t\tthis.shadowMap.enabled = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowMapType: {\r\n    \t\tget: function () {\r\n    \t\t\treturn this.shadowMap.type;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n    \t\t\tthis.shadowMap.type = value;\r\n    \t\t}\r\n    \t},\r\n    \tshadowMapCullFace: {\r\n    \t\tget: function () {\r\n    \t\t\treturn this.shadowMap.cullFace;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n    \t\t\tthis.shadowMap.cullFace = value;\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    Object.defineProperties( WebGLShadowMap.prototype, {\r\n    \tcullFace: {\r\n    \t\tget: function () {\r\n    \t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\r\n    \t\t},\r\n    \t\tset: function ( cullFace ) {\r\n    \t\t\tvar value = ( cullFace !== CullFaceBack );\r\n    \t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\r\n    \t\t\tthis.renderReverseSided = value;\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    //\r\n\r\n    Object.defineProperties( WebGLRenderTarget.prototype, {\r\n    \twrapS: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n    \t\t\treturn this.texture.wrapS;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n    \t\t\tthis.texture.wrapS = value;\r\n    \t\t}\r\n    \t},\r\n    \twrapT: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n    \t\t\treturn this.texture.wrapT;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n    \t\t\tthis.texture.wrapT = value;\r\n    \t\t}\r\n    \t},\r\n    \tmagFilter: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n    \t\t\treturn this.texture.magFilter;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n    \t\t\tthis.texture.magFilter = value;\r\n    \t\t}\r\n    \t},\r\n    \tminFilter: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n    \t\t\treturn this.texture.minFilter;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n    \t\t\tthis.texture.minFilter = value;\r\n    \t\t}\r\n    \t},\r\n    \tanisotropy: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n    \t\t\treturn this.texture.anisotropy;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n    \t\t\tthis.texture.anisotropy = value;\r\n    \t\t}\r\n    \t},\r\n    \toffset: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n    \t\t\treturn this.texture.offset;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n    \t\t\tthis.texture.offset = value;\r\n    \t\t}\r\n    \t},\r\n    \trepeat: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n    \t\t\treturn this.texture.repeat;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n    \t\t\tthis.texture.repeat = value;\r\n    \t\t}\r\n    \t},\r\n    \tformat: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n    \t\t\treturn this.texture.format;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n    \t\t\tthis.texture.format = value;\r\n    \t\t}\r\n    \t},\r\n    \ttype: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n    \t\t\treturn this.texture.type;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n    \t\t\tthis.texture.type = value;\r\n    \t\t}\r\n    \t},\r\n    \tgenerateMipmaps: {\r\n    \t\tget: function () {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n    \t\t\treturn this.texture.generateMipmaps;\r\n    \t\t},\r\n    \t\tset: function ( value ) {\r\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n    \t\t\tthis.texture.generateMipmaps = value;\r\n    \t\t}\r\n    \t}\r\n    } );\r\n\r\n    //\r\n\r\n    Object.assign( Audio.prototype, {\r\n    \tload: function ( file ) {\r\n    \t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\r\n    \t\tvar scope = this;\r\n    \t\tvar audioLoader = new AudioLoader();\r\n    \t\taudioLoader.load( file, function ( buffer ) {\r\n    \t\t\tscope.setBuffer( buffer );\r\n    \t\t} );\r\n    \t\treturn this;\r\n    \t}\r\n    } );\r\n\r\n    Object.assign( AudioAnalyser.prototype, {\r\n    \tgetData: function ( file ) {\r\n    \t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\r\n    \t\treturn this.getFrequencyData();\r\n    \t}\r\n    } );\r\n\r\n    //\r\n\r\n    var GeometryUtils = {\r\n\r\n    \tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n    \t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n    \t\tvar matrix;\r\n\r\n    \t\tif ( geometry2.isMesh ) {\r\n\r\n    \t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n    \t\t\tmatrix = geometry2.matrix;\r\n    \t\t\tgeometry2 = geometry2.geometry;\r\n\r\n    \t\t}\r\n\r\n    \t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n    \t},\r\n\r\n    \tcenter: function ( geometry ) {\r\n\r\n    \t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n    \t\treturn geometry.center();\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    var ImageUtils = {\r\n\r\n    \tcrossOrigin: undefined,\r\n\r\n    \tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n    \t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n\r\n    \t\tvar loader = new TextureLoader();\r\n    \t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n    \t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\r\n    \t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n    \t\treturn texture;\r\n\r\n    \t},\r\n\r\n    \tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\r\n\r\n    \t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\r\n    \t\tvar loader = new CubeTextureLoader();\r\n    \t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n    \t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\r\n    \t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n    \t\treturn texture;\r\n\r\n    \t},\r\n\r\n    \tloadCompressedTexture: function () {\r\n\r\n    \t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n    \t},\r\n\r\n    \tloadCompressedTextureCube: function () {\r\n\r\n    \t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    //\r\n\r\n    function Projector () {\r\n\r\n    \tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n    \tthis.projectVector = function ( vector, camera ) {\r\n\r\n    \t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n    \t\tvector.project( camera );\r\n\r\n    \t};\r\n\r\n    \tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n    \t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n    \t\tvector.unproject( camera );\r\n\r\n    \t};\r\n\r\n    \tthis.pickingRay = function ( vector, camera ) {\r\n\r\n    \t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n    \t};\r\n\r\n    }\r\n\r\n    //\r\n\r\n    function CanvasRenderer () {\r\n\r\n    \tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n    \tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\r\n    \tthis.clear = function () {};\r\n    \tthis.render = function () {};\r\n    \tthis.setClearColor = function () {};\r\n    \tthis.setSize = function () {};\r\n\r\n    }\r\n\r\n    Object.defineProperty( exports, 'AudioContext', {\r\n    \tget: function () {\r\n    \t\treturn exports.getAudioContext();\r\n    \t}\r\n    });\r\n\r\n    exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\r\n    exports.WebGLRenderTarget = WebGLRenderTarget;\r\n    exports.WebGLRenderer = WebGLRenderer;\r\n    exports.ShaderLib = ShaderLib;\r\n    exports.UniformsLib = UniformsLib;\r\n    exports.ShaderChunk = ShaderChunk;\r\n    exports.FogExp2 = FogExp2;\r\n    exports.Fog = Fog;\r\n    exports.Scene = Scene;\r\n    exports.LensFlare = LensFlare;\r\n    exports.Sprite = Sprite;\r\n    exports.LOD = LOD;\r\n    exports.SkinnedMesh = SkinnedMesh;\r\n    exports.Skeleton = Skeleton;\r\n    exports.Bone = Bone;\r\n    exports.Mesh = Mesh;\r\n    exports.LineSegments = LineSegments;\r\n    exports.Line = Line;\r\n    exports.Points = Points;\r\n    exports.Group = Group;\r\n    exports.VideoTexture = VideoTexture;\r\n    exports.DataTexture = DataTexture;\r\n    exports.CompressedTexture = CompressedTexture;\r\n    exports.CubeTexture = CubeTexture;\r\n    exports.CanvasTexture = CanvasTexture;\r\n    exports.DepthTexture = DepthTexture;\r\n    exports.TextureIdCount = TextureIdCount;\r\n    exports.Texture = Texture;\r\n    exports.MaterialIdCount = MaterialIdCount;\r\n    exports.CompressedTextureLoader = CompressedTextureLoader;\r\n    exports.BinaryTextureLoader = BinaryTextureLoader;\r\n    exports.DataTextureLoader = DataTextureLoader;\r\n    exports.CubeTextureLoader = CubeTextureLoader;\r\n    exports.TextureLoader = TextureLoader;\r\n    exports.ObjectLoader = ObjectLoader;\r\n    exports.MaterialLoader = MaterialLoader;\r\n    exports.BufferGeometryLoader = BufferGeometryLoader;\r\n    exports.LoadingManager = LoadingManager;\r\n    exports.JSONLoader = JSONLoader;\r\n    exports.ImageLoader = ImageLoader;\r\n    exports.FontLoader = FontLoader;\r\n    exports.XHRLoader = XHRLoader;\r\n    exports.Loader = Loader;\r\n    exports.AudioLoader = AudioLoader;\r\n    exports.SpotLightShadow = SpotLightShadow;\r\n    exports.SpotLight = SpotLight;\r\n    exports.PointLight = PointLight;\r\n    exports.HemisphereLight = HemisphereLight;\r\n    exports.DirectionalLightShadow = DirectionalLightShadow;\r\n    exports.DirectionalLight = DirectionalLight;\r\n    exports.AmbientLight = AmbientLight;\r\n    exports.LightShadow = LightShadow;\r\n    exports.Light = Light;\r\n    exports.StereoCamera = StereoCamera;\r\n    exports.PerspectiveCamera = PerspectiveCamera;\r\n    exports.OrthographicCamera = OrthographicCamera;\r\n    exports.CubeCamera = CubeCamera;\r\n    exports.Camera = Camera;\r\n    exports.AudioListener = AudioListener;\r\n    exports.PositionalAudio = PositionalAudio;\r\n    exports.getAudioContext = getAudioContext;\r\n    exports.AudioAnalyser = AudioAnalyser;\r\n    exports.Audio = Audio;\r\n    exports.VectorKeyframeTrack = VectorKeyframeTrack;\r\n    exports.StringKeyframeTrack = StringKeyframeTrack;\r\n    exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\r\n    exports.NumberKeyframeTrack = NumberKeyframeTrack;\r\n    exports.ColorKeyframeTrack = ColorKeyframeTrack;\r\n    exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\r\n    exports.PropertyMixer = PropertyMixer;\r\n    exports.PropertyBinding = PropertyBinding;\r\n    exports.KeyframeTrack = KeyframeTrack;\r\n    exports.AnimationObjectGroup = AnimationObjectGroup;\r\n    exports.AnimationMixer = AnimationMixer;\r\n    exports.AnimationClip = AnimationClip;\r\n    exports.Uniform = Uniform;\r\n    exports.InstancedBufferGeometry = InstancedBufferGeometry;\r\n    exports.BufferGeometry = BufferGeometry;\r\n    exports.GeometryIdCount = GeometryIdCount;\r\n    exports.Geometry = Geometry;\r\n    exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\r\n    exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\r\n    exports.InterleavedBuffer = InterleavedBuffer;\r\n    exports.InstancedBufferAttribute = InstancedBufferAttribute;\r\n    exports.DynamicBufferAttribute = DynamicBufferAttribute;\r\n    exports.Float64Attribute = Float64Attribute;\r\n    exports.Float32Attribute = Float32Attribute;\r\n    exports.Uint32Attribute = Uint32Attribute;\r\n    exports.Int32Attribute = Int32Attribute;\r\n    exports.Uint16Attribute = Uint16Attribute;\r\n    exports.Int16Attribute = Int16Attribute;\r\n    exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\r\n    exports.Uint8Attribute = Uint8Attribute;\r\n    exports.Int8Attribute = Int8Attribute;\r\n    exports.BufferAttribute = BufferAttribute;\r\n    exports.Face3 = Face3;\r\n    exports.Object3DIdCount = Object3DIdCount;\r\n    exports.Object3D = Object3D;\r\n    exports.Raycaster = Raycaster;\r\n    exports.Layers = Layers;\r\n    exports.EventDispatcher = EventDispatcher;\r\n    exports.Clock = Clock;\r\n    exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\r\n    exports.LinearInterpolant = LinearInterpolant;\r\n    exports.DiscreteInterpolant = DiscreteInterpolant;\r\n    exports.CubicInterpolant = CubicInterpolant;\r\n    exports.Interpolant = Interpolant;\r\n    exports.Triangle = Triangle;\r\n    exports.Spline = Spline;\r\n    exports.Spherical = Spherical;\r\n    exports.Plane = Plane;\r\n    exports.Frustum = Frustum;\r\n    exports.Sphere = Sphere;\r\n    exports.Ray = Ray;\r\n    exports.Matrix4 = Matrix4;\r\n    exports.Matrix3 = Matrix3;\r\n    exports.Box3 = Box3;\r\n    exports.Box2 = Box2;\r\n    exports.Line3 = Line3;\r\n    exports.Euler = Euler;\r\n    exports.Vector4 = Vector4;\r\n    exports.Vector3 = Vector3;\r\n    exports.Vector2 = Vector2;\r\n    exports.Quaternion = Quaternion;\r\n    exports.Color = Color;\r\n    exports.MorphBlendMesh = MorphBlendMesh;\r\n    exports.ImmediateRenderObject = ImmediateRenderObject;\r\n    exports.VertexNormalsHelper = VertexNormalsHelper;\r\n    exports.SpotLightHelper = SpotLightHelper;\r\n    exports.SkeletonHelper = SkeletonHelper;\r\n    exports.PointLightHelper = PointLightHelper;\r\n    exports.HemisphereLightHelper = HemisphereLightHelper;\r\n    exports.GridHelper = GridHelper;\r\n    exports.FaceNormalsHelper = FaceNormalsHelper;\r\n    exports.DirectionalLightHelper = DirectionalLightHelper;\r\n    exports.CameraHelper = CameraHelper;\r\n    exports.BoundingBoxHelper = BoundingBoxHelper;\r\n    exports.BoxHelper = BoxHelper;\r\n    exports.ArrowHelper = ArrowHelper;\r\n    exports.AxisHelper = AxisHelper;\r\n    exports.ClosedSplineCurve3 = ClosedSplineCurve3;\r\n    exports.SplineCurve3 = SplineCurve3;\r\n    exports.ArcCurve = ArcCurve;\r\n    exports.EllipseCurve = EllipseCurve;\r\n    exports.SplineCurve = SplineCurve;\r\n    exports.CubicBezierCurve = CubicBezierCurve;\r\n    exports.QuadraticBezierCurve = QuadraticBezierCurve;\r\n    exports.LineCurve = LineCurve;\r\n    exports.Shape = Shape;\r\n    exports.ShapePath = ShapePath;\r\n    exports.Path = Path;\r\n    exports.Font = Font;\r\n    exports.CurvePath = CurvePath;\r\n    exports.Curve = Curve;\r\n    exports.WireframeGeometry = WireframeGeometry;\r\n    exports.ParametricGeometry = ParametricGeometry;\r\n    exports.TetrahedronGeometry = TetrahedronGeometry;\r\n    exports.OctahedronGeometry = OctahedronGeometry;\r\n    exports.IcosahedronGeometry = IcosahedronGeometry;\r\n    exports.DodecahedronGeometry = DodecahedronGeometry;\r\n    exports.PolyhedronGeometry = PolyhedronGeometry;\r\n    exports.TubeGeometry = TubeGeometry;\r\n    exports.TorusKnotGeometry = TorusKnotGeometry;\r\n    exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\r\n    exports.TorusGeometry = TorusGeometry;\r\n    exports.TorusBufferGeometry = TorusBufferGeometry;\r\n    exports.TextGeometry = TextGeometry;\r\n    exports.SphereBufferGeometry = SphereBufferGeometry;\r\n    exports.SphereGeometry = SphereGeometry;\r\n    exports.RingGeometry = RingGeometry;\r\n    exports.RingBufferGeometry = RingBufferGeometry;\r\n    exports.PlaneBufferGeometry = PlaneBufferGeometry;\r\n    exports.PlaneGeometry = PlaneGeometry;\r\n    exports.LatheGeometry = LatheGeometry;\r\n    exports.LatheBufferGeometry = LatheBufferGeometry;\r\n    exports.ShapeGeometry = ShapeGeometry;\r\n    exports.ExtrudeGeometry = ExtrudeGeometry;\r\n    exports.EdgesGeometry = EdgesGeometry;\r\n    exports.ConeGeometry = ConeGeometry;\r\n    exports.ConeBufferGeometry = ConeBufferGeometry;\r\n    exports.CylinderGeometry = CylinderGeometry;\r\n    exports.CylinderBufferGeometry = CylinderBufferGeometry;\r\n    exports.CircleBufferGeometry = CircleBufferGeometry;\r\n    exports.CircleGeometry = CircleGeometry;\r\n    exports.BoxBufferGeometry = BoxBufferGeometry;\r\n    exports.BoxGeometry = BoxGeometry;\r\n    exports.ShadowMaterial = ShadowMaterial;\r\n    exports.SpriteMaterial = SpriteMaterial;\r\n    exports.RawShaderMaterial = RawShaderMaterial;\r\n    exports.ShaderMaterial = ShaderMaterial;\r\n    exports.PointsMaterial = PointsMaterial;\r\n    exports.MultiMaterial = MultiMaterial;\r\n    exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\r\n    exports.MeshStandardMaterial = MeshStandardMaterial;\r\n    exports.MeshPhongMaterial = MeshPhongMaterial;\r\n    exports.MeshNormalMaterial = MeshNormalMaterial;\r\n    exports.MeshLambertMaterial = MeshLambertMaterial;\r\n    exports.MeshDepthMaterial = MeshDepthMaterial;\r\n    exports.MeshBasicMaterial = MeshBasicMaterial;\r\n    exports.LineDashedMaterial = LineDashedMaterial;\r\n    exports.LineBasicMaterial = LineBasicMaterial;\r\n    exports.Material = Material;\r\n    exports.REVISION = REVISION;\r\n    exports.MOUSE = MOUSE;\r\n    exports.CullFaceNone = CullFaceNone;\r\n    exports.CullFaceBack = CullFaceBack;\r\n    exports.CullFaceFront = CullFaceFront;\r\n    exports.CullFaceFrontBack = CullFaceFrontBack;\r\n    exports.FrontFaceDirectionCW = FrontFaceDirectionCW;\r\n    exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\r\n    exports.BasicShadowMap = BasicShadowMap;\r\n    exports.PCFShadowMap = PCFShadowMap;\r\n    exports.PCFSoftShadowMap = PCFSoftShadowMap;\r\n    exports.FrontSide = FrontSide;\r\n    exports.BackSide = BackSide;\r\n    exports.DoubleSide = DoubleSide;\r\n    exports.FlatShading = FlatShading;\r\n    exports.SmoothShading = SmoothShading;\r\n    exports.NoColors = NoColors;\r\n    exports.FaceColors = FaceColors;\r\n    exports.VertexColors = VertexColors;\r\n    exports.NoBlending = NoBlending;\r\n    exports.NormalBlending = NormalBlending;\r\n    exports.AdditiveBlending = AdditiveBlending;\r\n    exports.SubtractiveBlending = SubtractiveBlending;\r\n    exports.MultiplyBlending = MultiplyBlending;\r\n    exports.CustomBlending = CustomBlending;\r\n    exports.BlendingMode = BlendingMode;\r\n    exports.AddEquation = AddEquation;\r\n    exports.SubtractEquation = SubtractEquation;\r\n    exports.ReverseSubtractEquation = ReverseSubtractEquation;\r\n    exports.MinEquation = MinEquation;\r\n    exports.MaxEquation = MaxEquation;\r\n    exports.ZeroFactor = ZeroFactor;\r\n    exports.OneFactor = OneFactor;\r\n    exports.SrcColorFactor = SrcColorFactor;\r\n    exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\r\n    exports.SrcAlphaFactor = SrcAlphaFactor;\r\n    exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\r\n    exports.DstAlphaFactor = DstAlphaFactor;\r\n    exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\r\n    exports.DstColorFactor = DstColorFactor;\r\n    exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\r\n    exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\r\n    exports.NeverDepth = NeverDepth;\r\n    exports.AlwaysDepth = AlwaysDepth;\r\n    exports.LessDepth = LessDepth;\r\n    exports.LessEqualDepth = LessEqualDepth;\r\n    exports.EqualDepth = EqualDepth;\r\n    exports.GreaterEqualDepth = GreaterEqualDepth;\r\n    exports.GreaterDepth = GreaterDepth;\r\n    exports.NotEqualDepth = NotEqualDepth;\r\n    exports.MultiplyOperation = MultiplyOperation;\r\n    exports.MixOperation = MixOperation;\r\n    exports.AddOperation = AddOperation;\r\n    exports.NoToneMapping = NoToneMapping;\r\n    exports.LinearToneMapping = LinearToneMapping;\r\n    exports.ReinhardToneMapping = ReinhardToneMapping;\r\n    exports.Uncharted2ToneMapping = Uncharted2ToneMapping;\r\n    exports.CineonToneMapping = CineonToneMapping;\r\n    exports.UVMapping = UVMapping;\r\n    exports.CubeReflectionMapping = CubeReflectionMapping;\r\n    exports.CubeRefractionMapping = CubeRefractionMapping;\r\n    exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\r\n    exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\r\n    exports.SphericalReflectionMapping = SphericalReflectionMapping;\r\n    exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\r\n    exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\r\n    exports.TextureMapping = TextureMapping;\r\n    exports.RepeatWrapping = RepeatWrapping;\r\n    exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\r\n    exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\r\n    exports.TextureWrapping = TextureWrapping;\r\n    exports.NearestFilter = NearestFilter;\r\n    exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\r\n    exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\r\n    exports.LinearFilter = LinearFilter;\r\n    exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\r\n    exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\r\n    exports.TextureFilter = TextureFilter;\r\n    exports.UnsignedByteType = UnsignedByteType;\r\n    exports.ByteType = ByteType;\r\n    exports.ShortType = ShortType;\r\n    exports.UnsignedShortType = UnsignedShortType;\r\n    exports.IntType = IntType;\r\n    exports.UnsignedIntType = UnsignedIntType;\r\n    exports.FloatType = FloatType;\r\n    exports.HalfFloatType = HalfFloatType;\r\n    exports.UnsignedShort4444Type = UnsignedShort4444Type;\r\n    exports.UnsignedShort5551Type = UnsignedShort5551Type;\r\n    exports.UnsignedShort565Type = UnsignedShort565Type;\r\n    exports.UnsignedInt248Type = UnsignedInt248Type;\r\n    exports.AlphaFormat = AlphaFormat;\r\n    exports.RGBFormat = RGBFormat;\r\n    exports.RGBAFormat = RGBAFormat;\r\n    exports.LuminanceFormat = LuminanceFormat;\r\n    exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\r\n    exports.RGBEFormat = RGBEFormat;\r\n    exports.DepthFormat = DepthFormat;\r\n    exports.DepthStencilFormat = DepthStencilFormat;\r\n    exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\r\n    exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\r\n    exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\r\n    exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\r\n    exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\r\n    exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\r\n    exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\r\n    exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\r\n    exports.RGB_ETC1_Format = RGB_ETC1_Format;\r\n    exports.LoopOnce = LoopOnce;\r\n    exports.LoopRepeat = LoopRepeat;\r\n    exports.LoopPingPong = LoopPingPong;\r\n    exports.InterpolateDiscrete = InterpolateDiscrete;\r\n    exports.InterpolateLinear = InterpolateLinear;\r\n    exports.InterpolateSmooth = InterpolateSmooth;\r\n    exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\r\n    exports.ZeroSlopeEnding = ZeroSlopeEnding;\r\n    exports.WrapAroundEnding = WrapAroundEnding;\r\n    exports.TrianglesDrawMode = TrianglesDrawMode;\r\n    exports.TriangleStripDrawMode = TriangleStripDrawMode;\r\n    exports.TriangleFanDrawMode = TriangleFanDrawMode;\r\n    exports.LinearEncoding = LinearEncoding;\r\n    exports.sRGBEncoding = sRGBEncoding;\r\n    exports.GammaEncoding = GammaEncoding;\r\n    exports.RGBEEncoding = RGBEEncoding;\r\n    exports.LogLuvEncoding = LogLuvEncoding;\r\n    exports.RGBM7Encoding = RGBM7Encoding;\r\n    exports.RGBM16Encoding = RGBM16Encoding;\r\n    exports.RGBDEncoding = RGBDEncoding;\r\n    exports.BasicDepthPacking = BasicDepthPacking;\r\n    exports.RGBADepthPacking = RGBADepthPacking;\r\n    exports.CubeGeometry = BoxGeometry;\r\n    exports.Face4 = Face4;\r\n    exports.LineStrip = LineStrip;\r\n    exports.LinePieces = LinePieces;\r\n    exports.MeshFaceMaterial = MultiMaterial;\r\n    exports.PointCloud = PointCloud;\r\n    exports.Particle = Sprite;\r\n    exports.ParticleSystem = ParticleSystem;\r\n    exports.PointCloudMaterial = PointCloudMaterial;\r\n    exports.ParticleBasicMaterial = ParticleBasicMaterial;\r\n    exports.ParticleSystemMaterial = ParticleSystemMaterial;\r\n    exports.Vertex = Vertex;\r\n    exports.EdgesHelper = EdgesHelper;\r\n    exports.WireframeHelper = WireframeHelper;\r\n    exports.GeometryUtils = GeometryUtils;\r\n    exports.ImageUtils = ImageUtils;\r\n    exports.Projector = Projector;\r\n    exports.CanvasRenderer = CanvasRenderer;\r\n\r\n    Object.defineProperty(exports, '__esModule', { value: true });\r\n\r\n})));\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('3js0').factory('utilFactory', UtilityFactoryFunction);\r\n\r\n    /** @ngInject */\r\n    function UtilityFactoryFunction($window) {\r\n        var svc = this;\r\n\r\n        var three = $window.THREE;\r\n\r\n        svc.getRandomDecimal = function (min, max) {\r\n            return (Math.random() * (min - max) + max);\r\n        };\r\n\r\n        svc.getRandomVector = function (min, max) {\r\n            return new three.Vector3(\r\n                svc.getRandomDecimal(min, max),\r\n                svc.getRandomDecimal(min, max),\r\n                svc.getRandomDecimal(min, max)\r\n            );\r\n        };\r\n\r\n        svc.getRandomInt = function (min, max) {\r\n            min = Math.ceil(min);\r\n            max = Math.floor(max);\r\n            return Math.floor(Math.random() * (max - min)) + min;\r\n        };\r\n\r\n        svc.resetLimits = function (shapeObj, xLimit, yLimit, zLimit) {\r\n            if (shapeObj.shape.position.x >= xLimit || shapeObj.shape.position.x <= (-1 * xLimit)) {\r\n                shapeObj.locationVelocity.x *= -1;\r\n            }\r\n            if (shapeObj.shape.position.y >= yLimit || shapeObj.shape.position.y <= (-1 * yLimit)) {\r\n                shapeObj.locationVelocity.y *= -1;\r\n            }\r\n            if (shapeObj.shape.position.z >= -1.0 || shapeObj.shape.position.z <= (-4 * zLimit)) {\r\n                shapeObj.locationVelocity.z *= -1;\r\n            }\r\n        };\r\n        \r\n        return svc;\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('3js0').factory('threeDApiFactory', threeDApi);\r\n\r\n    /** @ngInject */\r\n    function threeDApi($window, $document, $log, shapesFactory) {\r\n        var svc = this;\r\n\r\n        if ($window.THREE) {\r\n\r\n            var three = $window.THREE;\r\n            var _near = 1;\r\n            var _far = 500;\r\n\r\n            svc.initRenderer = function (canvas, width, height) {\r\n                svc.renderer = new three.WebGLRenderer({\r\n                    canvas: canvas\r\n                });\r\n                //svc.renderer.setPixelRatio($window.devicePixelRatio);\r\n                svc.renderer.setSize(width, height);\r\n            };\r\n\r\n            svc.handleResizeEvent = function (width, height) {\r\n                svc.renderer.setSize(width, height);\r\n                svc.camera.aspect = width / height;\r\n                svc.camera.updateProjectionMatrix();\r\n            };\r\n\r\n            svc.detectObjectIntersection = function (xPos, yPos) {\r\n                svc.raycaster.setFromCamera({\r\n                    x: xPos,\r\n                    y: yPos\r\n                }, svc.camera);\r\n                return svc.raycaster.intersectObjects(svc.scene.children);\r\n            };\r\n\r\n            svc.setUpScene = function (width, height) {\r\n                // scene\r\n                svc.scene = new three.Scene();\r\n\r\n                // lights\r\n                var dirLight = new three.DirectionalLight(0xffffff, 1);\r\n                dirLight.position.set(10, 10, 50).normalize();\r\n                svc.scene.add(dirLight);\r\n\r\n                var ambLight = new three.AmbientLight(0x404040);\r\n                svc.scene.add(ambLight);\r\n\r\n                // camera\r\n                svc.camera = new three.PerspectiveCamera(45, width / height, _near, _far);\r\n                svc.camera.position.z = 3;\r\n\r\n                // raycaster\r\n                svc.raycaster = new three.Raycaster();\r\n                svc.raycaster.near = _near;\r\n                svc.raycaster.far = _far;\r\n            };\r\n\r\n            svc.addShapes = function (shapeObjs) {\r\n                angular.forEach(shapeObjs, function (shapeObj) {\r\n                    svc.scene.add(shapeObj.shape);\r\n                });\r\n            };\r\n            \r\n            svc.removeAllShapes = function(shapeObjs) {\r\n                angular.forEach(shapeObjs, function (shapeObj) {\r\n                    svc.scene.remove(shapeObj.shape);\r\n                });\r\n            };\r\n\r\n            // register callback for event from main shapes class\r\n            shapesFactory.removeShapeCallback = function (shape) {\r\n                svc.scene.remove(shape);\r\n            };\r\n\r\n            svc.loadTextures = function () {\r\n                svc.textures = [];\r\n                var images = [\r\n                        'assets/images/wood_crate.jpg',\r\n                        'assets/images/wood_crate2.jpg',\r\n                        'assets/images/steel_crate.jpg',\r\n                        'assets/images/steel_crate2.jpg',\r\n                        'assets/images/bark.jpg',\r\n                        'assets/images/stone.jpg',\r\n                        'assets/images/grass.jpg',\r\n                        'assets/images/lava.jpg',\r\n                        'assets/images/moon.jpg'];\r\n                var loader = new three.TextureLoader();\r\n                angular.forEach(images, function (image) {\r\n                    loader.load(image, function (texture) {\r\n                        var material = new three.MeshPhongMaterial({\r\n                            map: texture\r\n                        });\r\n                        svc.textures.push(material);\r\n                    }, function ( /*xhr*/ ) {\r\n                        //$log.log((xhr.loaded / xhr.total * 100).toFixed(2) + '% loaded');\r\n                    }, function (xhr) {\r\n                        $log.error('texture load failed: ' + xhr);\r\n                    });\r\n                });\r\n                return loader;\r\n            }\r\n\r\n            svc.render = function () {\r\n                requestAnimationFrame(svc.render);\r\n                shapesFactory.updatePos();\r\n                svc.renderer.render(svc.scene, svc.camera);\r\n            };\r\n        }\r\n\r\n        return svc;\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('3js0').factory('shapesFactory', ShapesFactoryFunction);\r\n\r\n    /** @ngInject */\r\n    function ShapesFactoryFunction($window, utilFactory, gameFactory) {\r\n        var svc = this;\r\n\r\n        var three = $window.THREE;\r\n\r\n        var shapeObjs = [];\r\n        svc.removeShapeCallback;\r\n\r\n        svc.getShape = function (shapeName, id, textureMaterial) {\r\n            var geometry;\r\n            switch (shapeName) {\r\n\r\n            case 'cube':\r\n                geometry = new three.BoxGeometry(0.5, 0.5, 0.5);\r\n                break;\r\n\r\n            case 'sphere':\r\n                geometry = new three.SphereGeometry(0.25, 32, 24);\r\n                break;\r\n\r\n            case 'torus':\r\n                geometry = new three.TorusGeometry(0.25, 0.1, 32, 24);\r\n                break;\r\n\r\n            case 'cone':\r\n                geometry = new three.ConeGeometry(0.3, 0.5, 24);\r\n                break;\r\n            }\r\n\r\n            geometry.name = shapeName + id;\r\n\r\n            var targetShape = new three.Mesh(geometry, textureMaterial);\r\n            var startPosition = utilFactory.getRandomVector(-1.5, 1.5);\r\n            if (startPosition.z < 0) {\r\n                startPosition.z = 0;\r\n            }\r\n            targetShape.position.x = startPosition.x;\r\n            targetShape.position.y = startPosition.y;\r\n            targetShape.position.z = startPosition.z;\r\n            //targetShape.castShadow = true;\r\n\r\n            return {\r\n                shape: targetShape,\r\n                rotation: utilFactory.getRandomVector(0.01, 0.025),\r\n                locationVelocity: utilFactory.getRandomVector(-0.025, 0.025)\r\n            };\r\n        };\r\n\r\n        svc.buildShapes = function (count, textures) {\r\n            shapeObjs = []; // clear existing shapes\r\n            for (var i = 0; i < count; i++) {\r\n                var rndTextureIndex = utilFactory.getRandomInt(0, textures.length);\r\n                var material = textures[rndTextureIndex].clone();\r\n                switch (utilFactory.getRandomInt(0, 4)) {\r\n                case 0:\r\n                    shapeObjs.push(svc.getShape('cube', i, material));\r\n                    break;\r\n                case 1:\r\n                    shapeObjs.push(svc.getShape('sphere', i, material));\r\n                    break;\r\n                case 2:\r\n                    shapeObjs.push(svc.getShape('torus', i, material));\r\n                    break;\r\n                case 3:\r\n                    shapeObjs.push(svc.getShape('cone', i, material));\r\n                    break;\r\n                }\r\n            }\r\n            return shapeObjs;\r\n        };\r\n\r\n        svc.clearShapes = function () {\r\n            shapeObjs = [];\r\n        };\r\n\r\n        svc.get = function () {\r\n            return shapeObjs;\r\n        };\r\n\r\n        var removeShape = function (shape) {\r\n            var inx = shapeObjs.indexOf(shape);\r\n            if (inx != -1) {\r\n                shapeObjs.splice(inx, 1);\r\n            }\r\n            if (shapeObjs.length == 0) {\r\n                gameFactory.endLevel();\r\n            }\r\n        };\r\n\r\n        svc.updatePos = function () {\r\n            angular.forEach(shapeObjs, function (shapeObj) {\r\n                if (!shapeObj.hit) {\r\n                    shapeObj.shape.material.color = new three.Color(0xffffff);\r\n                    shapeObj.shape.rotation.x += shapeObj.rotation.x;\r\n                    shapeObj.shape.rotation.y += shapeObj.rotation.y;\r\n                    shapeObj.shape.rotation.z += shapeObj.rotation.z;\r\n                    shapeObj.shape.position.x += shapeObj.locationVelocity.x;\r\n                    shapeObj.shape.position.y += shapeObj.locationVelocity.y;\r\n                    shapeObj.shape.position.z += shapeObj.locationVelocity.z;\r\n                    utilFactory.resetLimits(shapeObj, 1.5, 1.5);\r\n                } else {\r\n                    shapeObj.shape.scale.x += 0.09;\r\n                    shapeObj.shape.scale.y += 0.09;\r\n                    shapeObj.shape.scale.z += 0.09;\r\n                    shapeObj.shape.material.color.r -= 0.02;\r\n                    shapeObj.shape.material.color.g -= 0.02;\r\n                    shapeObj.shape.material.color.b -= 0.02;\r\n                    if (shapeObj.shape.material.color.r < 0.0) {\r\n                        // registered in threeDApiFactory\r\n                        if (svc.removeShapeCallback) {\r\n                            // score\r\n                            gameFactory.updateScore();\r\n                            // remove from scene\r\n                            svc.removeShapeCallback(shapeObj.shape);\r\n                            // remove from list\r\n                            removeShape(shapeObj);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        };\r\n\r\n        svc.updateShapeProps = function (intersects) {\r\n            if (intersects.length > 0) {\r\n                var targetShape = shapeObjs.find(function (shape) {\r\n                    return shape.shape.geometry.name == intersects[0].object.geometry.name;\r\n                });\r\n                if (targetShape) {\r\n                    targetShape.hit = true;\r\n                }\r\n            }\r\n        };\r\n\r\n        return svc;\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('3js0').factory('gameFactory', GameFactoryFunction);\r\n\r\n    /** @ngInject */\r\n    function GameFactoryFunction() {\r\n        var svc = this;\r\n\r\n        svc.scoreChangeCallback;\r\n\r\n        svc.isScoring = false;\r\n        svc.score = 0;\r\n        svc.level = 0;\r\n\r\n        svc.timemark = {}; // new Date();\r\n\r\n        svc.startLevel = function () {\r\n            svc.timemark = new Date();\r\n            svc.isScoring = true;\r\n            svc.level++;\r\n        };\r\n\r\n        svc.updateScore = function () {\r\n            var timeDiff = Math.abs(svc.timemark.getTime() - new Date().getTime());\r\n            // more points for shorter time since previous score\r\n            svc.score += Math.round((1 / timeDiff) * 1000000);\r\n            if (svc.scoreChangeCallback) {\r\n                svc.scoreChangeCallback();\r\n            }\r\n            svc.timemark = new Date();\r\n        };\r\n        \r\n        svc.endLevel = function() {\r\n            svc.isScoring = false;\r\n        };\r\n\r\n        return svc;\r\n    }\r\n\r\n})();\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('3js0')\r\n    .run(runBlock);\r\n\r\n  /** @ngInject */\r\n  function runBlock(/*$log*/) {\r\n\r\n    //$log.debug('runBlock end');\r\n  }\r\n\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('3js0')\r\n})();\r\n\n(function() {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('3js0')\r\n    .config(config);\r\n\r\n  /** @ngInject */\r\n  function config($logProvider) {\r\n    // Enable log\r\n    $logProvider.debugEnabled(true);\r\n  }\r\n\r\n})();\r\n\nangular.module(\"3js0\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/gameContainer/gameContainer.html\",\"<div id=game-container ngsf-fullscreen class=game-panel md-whiteframe=3><div layout=row layout-padding><span flex></span><score></score></div><three-canvas parent-size=$ctrl.size game-level=$ctrl.gameFactory.level></three-canvas><div><md-button class=md-primary ngsf-toggle-fullscreen show-if-fullscreen-enabled><span show-if-fullscreen=false>enter fullscreen</span> <span show-if-fullscreen=true>exit fullscreen</span></md-button></div><div layout-padding ng-if=!$ctrl.gameFactory.isScoring layout=column layout-aligh=\\\"center center\\\" class=start-button-container><h1 ng-show=\\\"$ctrl.gameFactory.level > 0\\\" class=level-complete>Level {{$ctrl.gameFactory.level}} Cleared!</h1><md-button class=\\\"md-primary md-raised\\\" ng-click=$ctrl.startLevel()><span ng-hide=\\\"$ctrl.gameFactory.level > 0\\\">Start a new Game!</span> <span ng-show=\\\"$ctrl.gameFactory.level > 0\\\">Start Next Level</span></md-button></div></div>\");\n$templateCache.put(\"app/components/links/links.html\",\"<md-button hide-xs ng-repeat=\\\"link in $ctrl.linkData\\\" href={{link.href}} target=_blank>{{link.label}}</md-button><span hide-gt-xs ng-repeat=\\\"link in $ctrl.linkData\\\"><a href={{link.href}} target=_blank>{{link.label}}</a> </span>\");\n$templateCache.put(\"app/components/score/score.html\",\"Points:<ng-text-roll target=$ctrl.score config=$ctrl.textRollConfig></ng-text-roll>\");\n$templateCache.put(\"app/components/threeCanvas/threeCanvas.html\",\"<div id=canvas-container><canvas width={{$ctrl.width}} height={{$ctrl.height}} ng-click=$ctrl.handleClick($event)></canvas></div>\");}]);"],"sourceRoot":"/source/"}