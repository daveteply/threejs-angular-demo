{"version":3,"sources":["scripts/app.js"],"names":["angular","module","component","templateUrl","controller","$window","$scope","$element","threeDApiFactory","shapesFactory","ctrl","this","WIDTH_SCALE","HEIGHT_SCALE","handleResizeEvent","setCanvasDimensions","width","height","$apply","w","element","bind","innerHeight","innerWidth","$onInit","initRenderer","children","setUpScene","buildShapes","addShapes","shapeObjs","render","MainController","global","factory","exports","define","amd","THREE","EventDispatcher","Vector2","x","y","Texture","image","mapping","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","encoding","Object","defineProperty","value","TextureIdCount","uuid","Math","generateUUID","name","sourceFile","undefined","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","ClampToEdgeWrapping","LinearFilter","LinearMipMapLinearFilter","RGBAFormat","UnsignedByteType","offset","repeat","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","LinearEncoding","version","onUpdate","count","Vector4","z","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","call","activeCubeFace","activeMipMapLevel","Quaternion","_x","_y","_z","_w","Vector3","Matrix4","elements","Float32Array","arguments","length","console","error","CubeTexture","images","CubeReflectionMapping","UniformContainer","seq","map","flatten","array","nBlocks","blockSize","firstElem","n","r","arrayCacheF32","toArray","i","allocTexUnits","renderer","arrayCacheI32","Int32Array","allocTextureUnit","setValue1f","gl","v","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","g","b","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","emptyTexture","setValueT6","setTextureCube","emptyCubeTexture","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","addUniform","container","uniformObject","push","parseUniform","path","pathLength","RePathPart","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","Color","set","setRGB","Box2","min","max","Infinity","LensFlarePlugin","flares","init","vertices","faces","Uint16Array","vertexBuffer","createBuffer","elementBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","tempTexture","createTexture","occlusionTexture","state","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","shader","vertexShader","join","fragmentShader","createProgram","attributes","vertex","getAttribLocation","uv","uniforms","renderType","occlusionMap","opacity","color","scale","rotation","screenPosition","createShader","FRAGMENT_SHADER","VERTEX_SHADER","prefix","getPrecision","shaderSource","compileShader","attachShader","linkProgram","context","scene","camera","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","disable","CULL_FACE","setDepthWrite","l","flare","matrixWorld","applyMatrix4","matrixWorldInverse","applyProjection","projectionMatrix","copy","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","j","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","resetGLState","SpritePlugin","sprites","position","uvOffset","uvScale","modelViewMatrix","fogType","fogDensity","fogNear","fogFar","fogColor","alphaTest","canvas","document","createElementNS","getContext","fillStyle","fillRect","needsUpdate","painterSortStable","a","renderOrder","spritePosition","spriteRotation","spriteScale","oldFogType","sceneFogType","fog","isFog","near","far","isFogExp2","density","multiplyMatrices","sort","material","visible","decompose","setDepthTest","depthTest","depthWrite","Material","MaterialIdCount","lights","NormalBlending","side","FrontSide","shading","SmoothShading","vertexColors","NoColors","transparent","SrcAlphaFactor","OneMinusSrcAlphaFactor","AddEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","LessEqualDepth","clippingPlanes","clipShadows","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","count$1","ShaderMaterial","parameters","defines","linewidth","wireframe","wireframeLinewidth","clipping","skinning","morphTargets","morphNormals","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","uv2","index0AttributeName","setValues","MeshDepthMaterial","depthPacking","BasicDepthPacking","alphaMap","displacementMap","displacementScale","displacementBias","Box3","Sphere","center","radius","Matrix3","Plane","normal","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","WebGLShadowMap","_renderer","_lights","_objects","capabilities","getDepthMaterial","object","isPointLight","lightPositionWorld","geometry","result","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","isBufferGeometry","morphAttributes","isGeometry","useSkinning","isSkinnedMesh","variantIndex","_MorphingFlag","_SkinningFlag","localClippingEnabled","keyA","keyB","materialsForVariant","_materialCache","cachedMaterial","clone","scope","renderSingleSided","DoubleSide","renderReverseSided","BackSide","lightPos","projectObject","shadowCamera","layers","mask","isMesh","isLine","isPoints","castShadow","frustumCulled","_frustum","intersectsObject","_renderList","_gl","_state","_projScreenMatrix","_lightShadows","shadows","_shadowMapSize","_maxShadowMapSize","maxTextureSize","_lookTarget","_lightPositionWorld","_NumberOfMaterialVariants","Array","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","RGBADepthPacking","distanceShader","ShaderLib","distanceUniforms","UniformsUtils","depthMaterial","distanceMaterial","USE_SHADOWMAP","enabled","autoUpdate","PCFShadowMap","clearColor","setScissorTest","faceCount","il","light","shadow","mapSize","vpWidth","vpHeight","pars","NearestFilter","updateProjectionMatrix","isSpotLightShadow","update","shadowMap","shadowMatrix","matrix","setFromMatrixPosition","setRenderTarget","clear","face","add","up","lookAt","vpDimensions","target","updateMatrixWorld","getInverse","multiply","setFromMatrix","isMultiMaterial","groups","materials","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","warn","getClearColor","clearAlpha","getClearAlpha","setClearColor","Ray","origin","direction","Euler","order","_order","DefaultOrder","Layers","Object3D","onRotationChange","quaternion","setFromEuler","onQuaternionChange","setFromQuaternion","Object3DIdCount","parent","DefaultUp","onChange","defineProperties","enumerable","normalMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","userData","onBeforeRender","count$2","Line3","start","end","Triangle","c","Face3","isVector3","vertexNormals","isArray","isColor","MeshBasicMaterial","aoMap","aoMapIntensity","specularMap","envMap","combine","MultiplyOperation","reflectivity","refractionRatio","wireframeLinecap","wireframeLinejoin","BufferAttribute","itemSize","normalized","TypeError","dynamic","updateRange","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Int32Attribute","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","setDynamic","Geometry","GeometryIdCount","colors","faceVertexUvs","skinWeights","skinIndices","lineDistances","boundingBox","boundingSphere","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","count$3","DirectGeometry","indices","normals","uvs","uvs2","BufferGeometry","index","drawRange","Mesh","random","drawMode","TrianglesDrawMode","updateMorphTargets","BoxBufferGeometry","depth","widthSegments","heightSegments","depthSegments","calculateVertexCount","h","d","calculateIndexCount","buildPlane","u","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","vector","iy","ix","vertexBufferOffset","uvBufferOffset","numberOfVertices","indexBufferOffset","addGroup","groupStart","floor","vertexCount","indexCount","setIndex","addAttribute","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","OrthographicCamera","left","right","top","bottom","WebGLIndexedBufferRenderer","infoRender","setMode","mode","get","UNSIGNED_INT","calls","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","isInterleavedBufferAttribute","data","drawArraysInstancedANGLE","WebGLLights","shadowBias","shadowRadius","shadowMapSize","distance","coneCos","penumbraCos","decay","skyColor","groundColor","addLineNumbers","string","lines","split","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getEncodingComponents","sRGBEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","GammaEncoding","Error","getTexelDecodingFunction","functionName","components","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","generateExtensions","rendererExtensions","chunks","envMapCubeUV","bumpMap","normalMap","flatShading","logarithmicDepthBuffer","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","replace","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","ShaderChunk","pattern","unrollLoops","snippet","unroll","parseInt","WebGLProgram","code","__webglShader","shadowMapTypeDefine","shadowMapType","PCFSoftShadowMap","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","CubeRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","MixOperation","AddOperation","prefixVertex","prefixFragment","gammaFactorDefine","gammaFactor","customExtensions","customDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","lightMap","emissiveMap","roughnessMap","metalnessMap","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","sizeAttenuation","useFog","fogExp","physicallyCorrectLights","NoToneMapping","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","isShaderMaterial","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","log","deleteShader","cachedUniforms","getUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","programIdCount","usedTimes","WebGLPrograms","allocateBones","floatVertexTextures","skeleton","nVertexUniforms","maxVertexUniforms","nVertexMatrices","bones","getTextureEncodingFromMap","gammaOverrideLinear","isTexture","isWebGLRenderTarget","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","parameterNames","getParameters","nClipPlanes","shaderID","getMaxPrecision","currentRenderTarget","getCurrentRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","FlatShading","maxMorphTargets","maxMorphNormals","directional","point","spot","hemi","getProgramCode","acquireProgram","p","pl","programInfo","releaseProgram","indexOf","pop","WebGLGeometries","properties","onGeometryDispose","event","buffergeometry","geometries","deleteAttribute","deleteAttributes","removeEventListener","property","bufferproperty","memory","getAttributeBuffer","attribute","__webglBuffer","buffer","deleteBuffer","removeAttributeBuffer","addEventListener","_bufferGeometry","setFromObject","WebGLObjects","updateFromObject","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","DYNAMIC_DRAW","bufferSubData","BYTES_PER_ELEMENT","subarray","getWireframeAttribute","TypeArray","WebGLTextures","paramThreeToGL","clampToMaxSize","maxSize","drawImage","isPowerOfTwo","makePowerOfTwo","HTMLImageElement","HTMLCanvasElement","nearestPowerOfTwo","textureNeedsPowerOfTwo","filterFallback","f","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LINEAR","onTextureDispose","deallocateTexture","_infoMemory","textures","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","dispose","isWebGLRenderTargetCube","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","slot","__version","complete","uploadTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","isDataTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","glType","setTextureParameters","mipmap","RGBFormat","getCompressedTextureFormats","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","generateMipmap","setTextureCubeDynamic","textureType","FloatType","HalfFloatType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","_isWebGL2","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DepthStencilFormat","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","DepthFormat","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGL2RenderingContext","WebGLProperties","delete","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","setClear","equals","reset","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthMask","setFunc","NeverDepth","NEVER","AlwaysDepth","ALWAYS","LessDepth","LESS","LEQUAL","EqualDepth","EQUAL","GreaterEqualDepth","GEQUAL","GreaterDepth","GREATER","NotEqualDepth","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","setDepthFunc","setFlipSided","setCullFace","CullFaceBack","newAttributes","enabledAttributes","enableVertexAttribArray","attributeDivisors","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","compressedTextureFormats","formats","getParameter","COMPRESSED_TEXTURE_FORMATS","NoBlending","currentBlending","currentPremultipledAlpha","AdditiveBlending","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","SubtractiveBlending","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","MultiplyBlending","SRC_COLOR","CustomBlending","currentBlendEquation","currentBlendEquationAlpha","currentBlendSrc","currentBlendDst","currentBlendSrcAlpha","currentBlendDstAlpha","setColorWrite","colorBuffer","setStencilTest","setStencilWrite","stencilWrite","setStencilFunc","setStencilOp","currentFlipSided","frontFace","CW","CCW","cullFace","CullFaceNone","currentCullFace","BACK","CullFaceFront","FRONT","FRONT_AND_BACK","setLineWidth","currentLineWidth","lineWidth","setPolygonOffset","factor","POLYGON_OFFSET_FILL","currentPolygonOffsetFactor","currentPolygonOffsetUnits","getScissorTest","currentScissorTest","SCISSOR_TEST","webglSlot","maxTextures","currentTextureSlot","webglType","boundTexture","currentBoundTextures","emptyTextures","apply","currentScissor","currentViewport","maxVertexAttributes","MAX_VERTEX_ATTRIBS","MAX_TEXTURE_IMAGE_UNITS","buffers","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","WebGLExtensions","getExtension","WebGLClipping","resetGlobalState","uniform","globalState","numGlobalPlanes","numPlanes","projectPlanes","dstOffset","skipTransform","nPlanes","dstArray","flatSize","viewMatrix","viewNormalMatrix","getNormalMatrix","i4","plane","renderingShadows","enableLocalClipping","beginShadows","endShadows","setState","cache","fromCache","nGlobal","lGlobal","clippingState","WebGLRenderer","getTargetPixelRatio","_currentRenderTarget","_pixelRatio","glClearColor","_premultipliedAlpha","setDefaultGLState","_currentScissor","_scissor","multiplyScalar","_currentViewport","_viewport","_clearColor","_clearAlpha","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","onContextLost","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","programCache","setupVertexAttributes","startIndex","isInstancedBufferGeometry","geometryAttributes","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","SHORT","INT","BYTE","objects","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","absNumericalSort","abs","reversePainterSortStable","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","isObjectViewable","computeBoundingSphere","_sphere","isSphereViewable","isSpriteViewable","sphere","intersectsSphere","_clipping","_this","negRad","distanceToPoint","isLight","isSprite","isLensFlare","isImmediateRenderObject","sortObjects","renderObjects","renderList","overrideMaterial","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","programChange","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","hash","ambientLightColor","ambient","directionalLights","spotLights","pointLights","hemisphereLights","directionalShadowMap","directionalShadowMatrix","spotShadowMap","spotShadowMatrix","pointShadowMap","pointShadowMatrix","progUniforms","uniformsList","seqWithValue","dynamicUniforms","splitDynamic","_usedTextureUnits","_clippingEnabled","_localClippingEnabled","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","LN2","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","isMeshBasicMaterial","setOptional","markUniformsLightsNeedsUpdate","refreshUniformsFog","isMeshDepthMaterial","refreshUniformsCommon","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshNormalMaterial","upload","dynUniforms","evalDynamic","diffuse","emissive","emissiveIntensity","uvScaleMap","offsetRepeat","flipEnvMap","isCubeTexture","dashSize","totalSize","gapSize","_canvas","clientHeight","lightMapIntensity","specular","shininess","bumpScale","normalScale","roughness","metalness","envMapIntensity","clearCoat","clearCoatRoughness","setupShadows","lightShadowsLength","setupLights","ll","intensity","directionalLength","pointLength","spotLength","hemiLength","isAmbientLight","isDirectionalLight","lightCache","sub","transformDirection","bias","isSpotLight","cos","angle","penumbra","negate","identity","setPosition","isHemisphereLight","normalize","textureUnit","RepeatWrapping","REPEAT","MirroredRepeatWrapping","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LinearMipMapNearestFilter","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UnsignedShort4444Type","UNSIGNED_SHORT_4_4_4_4","UnsignedShort5551Type","UNSIGNED_SHORT_5_5_5_1","UnsignedShort565Type","UNSIGNED_SHORT_5_6_5","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","HALF_FLOAT_OES","AlphaFormat","ALPHA","LuminanceFormat","LUMINANCE","LuminanceAlphaFormat","LUMINANCE_ALPHA","SubtractEquation","FUNC_SUBTRACT","ReverseSubtractEquation","FUNC_REVERSE_SUBTRACT","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","DstAlphaFactor","DST_ALPHA","OneMinusDstAlphaFactor","ONE_MINUS_DST_ALPHA","DstColorFactor","DST_COLOR","OneMinusDstColorFactor","ONE_MINUS_DST_COLOR","SrcAlphaSaturateFactor","SRC_ALPHA_SATURATE","RGB_S3TC_DXT1_Format","COMPRESSED_RGB_S3TC_DXT1_EXT","RGBA_S3TC_DXT1_Format","COMPRESSED_RGBA_S3TC_DXT1_EXT","RGBA_S3TC_DXT3_Format","COMPRESSED_RGBA_S3TC_DXT3_EXT","RGBA_S3TC_DXT5_Format","COMPRESSED_RGBA_S3TC_DXT5_EXT","RGB_PVRTC_4BPPV1_Format","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","RGB_PVRTC_2BPPV1_Format","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","RGBA_PVRTC_4BPPV1_Format","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","RGBA_PVRTC_2BPPV1_Format","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","RGB_ETC1_Format","COMPRESSED_RGB_ETC1_WEBGL","MinEquation","MIN_EXT","MaxEquation","MAX_EXT","UnsignedInt248Type","UNSIGNED_INT_24_8_WEBGL","REVISION","_context","_alpha","alpha","_depth","_stencil","_antialias","antialias","_preserveDrawingBuffer","preserveDrawingBuffer","morphInfluences","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMappingExposure","toneMappingWhitePoint","_currentFramebuffer","_currentScissorTest","_width","_height","_scissorTest","_infoRender","points","rangeMin","rangeMax","MaxIndex","bufferRenderer","indexedBufferRenderer","backgroundCamera","backgroundCamera2","backgroundPlaneMesh","backgroundBoxShader","backgroundBoxMesh","spritePlugin","lensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","style","setViewport","setScissor","boolean","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","normalArray","nx","ny","nz","uvArray","colorArray","updateBuffers","geometryProgram","morphTargetInfluences","activeInfluences","influence","removeAttribute","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TriangleStripDrawMode","TRIANGLE_STRIP","TriangleFanDrawMode","TRIANGLE_FAN","isLineSegments","LINE_STRIP","POINTS","forceClear","isCamera","background","extractRotation","setFaceCulling","frontFaceDirection","FrontFaceDirectionCW","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","DataTexture","Skeleton","boneInverses","identityMatrix","slice","sqrt","nextPowerOfTwo","ceil","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","Bone","skin","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","bone","gbone","fromArray","pos","rotq","scl","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","Points","Group","VideoTexture","video","requestAnimationFrame","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","DepthTexture","WireframeGeometry","sortFunction","edge","keys","numEdges","edges","key","toString","coords","o","ol","index2","getX","getY","getZ","numTris","index1","ParametricGeometry","func","slices","stacks","verts","sliceCount","uva","uvb","uvc","uvd","computeFaceNormals","computeVertexNormals","PolyhedronGeometry","detail","prepare","that","azimuth","PI","inclination","make","v1","v2","v3","centroid","divideScalar","azi","correctUV","subdivide","cols","pow","aj","lerp","bj","rows","atan2","x0","x1","x2","mergeVertices","TetrahedronGeometry","OctahedronGeometry","IcosahedronGeometry","t","DodecahedronGeometry","TubeGeometry","segments","radialSegments","closed","taper","vert","NoTaper","tangent","binormal","cx","cy","ip","jp","grid","numpoints","pos2","frames","FrenetFrames","tangents","binormals","getPointAt","sin","TorusKnotBufferGeometry","tube","tubularSegments","q","calculatePositionOnCurve","cu","su","quOverP","cs","indexOffset","P1","P2","B","T","N","subVectors","addVectors","crossVectors","setXYZ","setXY","setX","TorusKnotGeometry","heightScale","fromBufferGeometry","TorusBufferGeometry","arc","TorusGeometry","ExtrudeGeometry","shapes","addShapeList","TextGeometry","text","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereBufferGeometry","phiStart","phiLength","thetaStart","thetaLength","thetaEnd","positions","verticesRow","px","py","pz","v4","SphereGeometry","RingBufferGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","segment","radiusStep","thetaSegmentLevel","RingGeometry","PlaneGeometry","LatheBufferGeometry","clamp","base","inverseSegments","phi","n1","n2","LatheGeometry","ShapeGeometry","EdgesGeometry","thresholdAngle","geometry2","thresholdDot","DEG2RAD","vert1","vert2","face1","face2","dot","CylinderBufferGeometry","radiusTop","radiusBottom","openEnded","nbCap","generateTorso","slope","indexRow","theta","sinTheta","cosTheta","halfHeight","indexArray","i1","i2","i3","generateCap","centerIndexStart","centerIndexEnd","sign","CylinderGeometry","ConeGeometry","ConeBufferGeometry","CircleBufferGeometry","s","ii","CircleGeometry","BoxGeometry","ShadowMaterial","merge","UniformsLib","RawShaderMaterial","MultiMaterial","STANDARD","PHYSICAL","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","onStart","itemStart","url","itemEnd","itemError","XHRLoader","manager","DefaultLoadingManager","CompressedTextureLoader","_parser","BinaryTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","updateMatrix","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","constructor","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","times","values","interpolation","AnimationUtils","convertArray","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","duration","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","withCredentials","ObjectLoader","texturePath","Curve","LineCurve","CurvePath","curves","autoClose","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","SplineCurve","CubicBezierCurve","v0","QuadraticBezierCurve","Shape","Path","holes","currentPoint","fromPoints","ShapePath","subPaths","currentPath","Font","FontLoader","getAudioContext","window","AudioContext","webkitAudioContext","AudioLoader","StereoCamera","eyeSep","cameraL","cameraR","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCubeMap","AudioListener","gain","createGain","connect","destination","Audio","listener","source","createBufferSource","onended","onEnded","getInput","autoplay","startTime","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","binding","typeName","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","AnimationObjectGroup","var_args","prototype","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindings","_bindingsIndicesByPath","stats","[object Object]","total","inUse","bindingsPerObject","AnimationAction","mixer","clip","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","endingStart","ZeroCurvatureEnding","endingEnd","interpolant","createInterpolant","settings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","LoopRepeat","_loopCount","_startTime","time","timeScale","_effectiveTimeScale","weight","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","root","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","ray","params","threshold","PointCloud","ascSort","intersectObject","raycaster","intersects","recursive","raycast","Clock","autoStart","oldTime","elapsedTime","running","Spline","interpolate","t2","t3","intPoint","w2","w3","pa","pb","pc","pd","initFromArray","getPoint","getControlPointsArray","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","distanceTo","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Spherical","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","fps","createAnimation","setAnimationWeight","ImmediateRenderObject","renderCallback","VertexNormalsHelper","hex","nNormals","objGeometry","SpotLightHelper","cone","SkeletonHelper","getBoneList","isBone","VertexColors","PointLightHelper","sphereSize","HemisphereLightHelper","rotateX","FaceColors","lightSphere","GridHelper","divisions","color1","color2","step","FaceNormalsHelper","DirectionalLightHelper","CameraHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","BoundingBoxHelper","box","BoxHelper","ArrowHelper","dir","headLength","headWidth","line","lineGeometry","coneGeometry","setDirection","setLength","AxisHelper","ClosedSplineCurve3","CatmullRomCurve3","ArcCurve","aRadius","Face4","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","EdgesHelper","WireframeHelper","Projector","projectVector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","Number","EPSILON","Function","assign","output","nextKey","hasOwnProperty","_listeners","listeners","hasEventListener","listenerArray","splice","dispatchEvent","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceFrontBack","FrontFaceDirectionCCW","BasicShadowMap","BlendingMode","UVMapping","TextureMapping","TextureWrapping","TextureFilter","RGBEFormat","LoopOnce","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroSlopeEnding","WrapAroundEnding","LogLuvEncoding","RAD2DEG","chars","rnd","euclideanModulo","m","mapLinear","a1","a2","b1","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","round","isVector2","setScalar","scalar","setY","setComponent","getComponent","addScalar","addScaledVector","subScalar","isFinite","divide","clampScalar","minVal","maxVal","clampLength","roundToZero","lengthSq","lengthManhattan","distanceToSquared","dx","dy","distanceToManhattan","lerpVectors","fromAttribute","rotateAround","toJSON","meta","getDataURL","toDataURL","metadata","generator","wrap","transformUv","isVector4","setZ","setW","e","setAxisAngleFromQuaternion","acos","setAxisAngleFromRotationMatrix","epsilon","epsilon2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","create","onChangeCallback","euler","isEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","EPS","vFrom","vTo","inverse","conjugate","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","qb","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","callback","qa","qm","slerpFlat","dst","src0","srcOffset0","src1","srcOffset1","y0","z0","w0","y1","z1","w1","sqrSin","len","tDir","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","qx","qy","qz","qw","iz","iw","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setFromSpherical","sinPhiRadius","setFromMatrixColumn","setFromMatrixScale","sx","sy","sz","temp","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","copyPosition","me","extractBasis","xAxis","yAxis","zAxis","makeBasis","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","applyToVector3Array","applyToBuffer","determinant","transpose","tmp","flattenToArrayOffset","getPosition","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","invSX","invSY","invSZ","makeFrustum","makePerspective","ymax","tan","ymin","xmin","xmax","makeOrthographic","onUpdateCallback","merged","uniforms_src","uniforms_dst","parameter_src","isMatrix3","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_flip","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","setHex","setStyle","setHSL","hue2rgb","handleAlpha","parseFloat","charAt","ColorKeywords","copyGammaToLinear","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","addColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","basic","lambert","phong","standard","dashed","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","physical","setFromPoints","makeEmpty","expandByPoint","setFromCenterAndSize","halfSize","isEmpty","getCenter","expandByVector","expandByScalar","containsBox","intersectsBox","clampPoint","clampedPoint","intersect","union","translate","isMaterial","newValue","currentValue","extractFromCache","isRoot","srcPlanes","dstPlanes","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","traverse","closestPoint","intersectsPlane","getBoundingSphere","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","setFromMatrix4","matrix4","transposeIntoArray","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsSprite","negRadius","d1","d2","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","RotationOrders","asin","setFromVector3","reorder","newOrder","toVector3","optionalResult","channel","toggle","test","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getObjectById","getObjectByProperty","getObjectByName","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","force","isRootObject","JSON","stringify","parse","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","triangle","area","midpoint","edgeList","projectedPoint","minDistance","isBufferAttribute","copyAt","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXYZW","computeBoundingBox","obj","addFace","tempNormals","tempUVs","tempUVs2","cb","ab","fl","vA","vB","vC","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","dupIndex","idx","sortFacesByMaterialIndex","materialIndexSort","_id","newUvs1","newUvs2","setBit","getNormalIndex","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","getIndex","getAttribute","clearGroups","setDrawRange","direct","__directGeometry","lineDistance","fromDirectGeometry","isNaN","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","array2","setDrawMode","morphTargetDictionary","ml","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","uvA","uvB","uvC","faceIndex","inverseMatrix","tempA","tempB","tempC","fvA","fvB","fvC","isFaceMaterial","faceMaterial","tl","targets","uvs_f","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","isOrthographicCamera","zoomW","zoomH","scaleW","scaleH","vecX","vecY","wantedRotation","matrixPosition","guessSizeSq","level","addLevel","getObjectForDistance","pose","offsetMatrix","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","tz","mat","getTangentAt","ShapeUtils","contour","triangulate","snip","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","shape","prevShapeIdx","nextShapeIdx","insideAngle","hole","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","intersectsHoleEdge","ihIdx","chkHole","hIdx","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","concat","failedCuts","hl","minShapeIndex","counter","h2","forEach","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","addShape","scalePt2","pt","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","buildLidFaces","layer","vlen","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","position2","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","getSpacedPoints","shapePoints","extractPoints","reverse","bs","contourMovements","oneHoleMovements","holesMovements","verticesMovements","indexA","indexB","indexC","indexD","Geometries","freeze","isShadowMaterial","Materials","Cache","files","file","load","cached","setTimeout","request","XMLHttpRequest","open","response","status","responseType","overrideMimeType","send","setPath","setResponseType","setWithCredentials","loadTexture","loader","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","onload","URL","revokeObjectURL","src","blob","createObjectURL","setCrossOrigin","crossOrigin","urls","isJPEG","search","arraySlice","from","to","isTypedArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","DefaultSettings_","getSettings_","copySampleValue_","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","KeyframeTrackPrototype","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","ValueTypeName","getInterpolation","shift","timeOffset","trim","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","json","trackType","_getTrackTypeForValueTypeName","track","toLowerCase","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","TYPED_ARRAYS","typedArray","drawcalls","offsets","extractUrlBase","initMaterials","createMaterial","textureLoader","materialLoader","fullPath","Handlers","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","handlers","regex","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","loadImage","parseConstant","getGeometry","getMaterial","isInteger","getUtoTmapping","getPoints","lengths","getLengths","cacheArcLengths","current","last","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getPointFunc","isLineCurve","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","createPointsGeometry","createGeometry","createSpacedPointsGeometry","twoPi","deltaAngle","samePoints","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","point0","point1","point2","point3","PathPrototype","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","getPointsHoles","holesPts","extractAllPoints","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","createPaths","String","paths","ret","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","action","ha","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","eyeSepOnProjection","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","orientation","setOrientation","setNodeSource","audioNode","setBuffer","play","pause","stop","currentTime","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetArray","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","dest","Composite","targetGroup","optionalParsedPath","_targetGroup","subscribe_","firstValidIndex","bindings","isAnimationObjectGroup","re","matches","results","searchSkeleton","searchNodeSubtree","childNode","subTreeNode","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","now","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_update","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","_nActiveBindings","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingsByRoot","_bindingsByRootAndName","bindingByName","_removeInactiveBinding","uncacheAction","bindingsByName","_addInactiveBinding","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","instances","isInterleavedBuffer","setFromCamera","intersectObjects","performance","Date","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","objPos","objNorm","vector2","coneLength","coneWidth","boneList","matrixWorldInv","boneMatrix","setColors","lightPlane","targetLine","setPoint","setColor","CubicPoly","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","SplineCurve3","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","SceneUtils","createMultiMaterialObject","detach","attach","LineStrip","LinePieces","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","extrude","makeGeometry","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CubeGeometry","MeshFaceMaterial","Particle","UtilityFactoryFunction","svc","getRandomDecimal","resetLimits","shapeObj","xLimit","yLimit","zLimit","locationVelocity","ShapesFactoryFunction","utilFactory","three","MIN","MAX","getDefaultMaterial","getRandomVector","getCube","getTorus","getSphere","getCone","updatePos","$inject","threeDApi","$document","dirLight","ambLight","runBlock","run","config","$logProvider","debugEnabled","$templateCache","put"],"mappings":"CAAA,WACE,YAEAA,SACGC,OAAO,cAIZ,WAEI,YAEAD,SAAQC,OAAO,QAAQC,UAAU,eAC7BC,YAAa,uCACbC,YAAA,UAAA,SAAA,WAAA,mBAAA,gBAAY,SAAUC,EAASC,EAAQC,EAAUC,EAAkBC,GAC/D,GAAIC,GAAOC,KACPC,EAAc,GACdC,EAAe,EAEnBH,GAAKI,kBAAoB,WACrBJ,EAAKK,sBACLP,EAAiBM,kBAAkBJ,EAAKM,MAAON,EAAKO,QACpDX,EAAOY,SAGX,IAAIC,GAAInB,QAAQoB,QAAQf,EACxBc,GAAEE,KAAK,SAAUX,EAAKI,mBAEtBJ,EAAKK,oBAAsB,WACvBL,EAAKO,OAASE,EAAE,GAAGG,YAAcT,EACjCH,EAAKM,MAAQG,EAAE,GAAGI,WAAaX,GAGnCF,EAAKc,QAAU,WAEXd,EAAKK,sBACLP,EAAiBiB,aAAalB,EAASmB,WAAW,GAAIhB,EAAKM,MAAON,EAAKO,QACvET,EAAiBmB,WAAWjB,EAAKM,MAAON,EAAKO,QAG7CR,EAAcmB,cACdpB,EAAiBqB,UAAUpB,EAAcqB,WAGzCtB,EAAiBuB,iBAOjC,WACI,YAOA,SAASC,MALThC,QACKC,OAAO,QACPG,WAAW,iBAAkB4B,MAWrC,SAAUC,EAAQC,GACI,gBAAZC,UAA0C,mBAAXlC,QAAyBiC,EAAQC,SACrD,kBAAXC,SAAyBA,OAAOC,IAAMD,QAAQ,WAAYF,GAChEA,EAASD,EAAOK,MAAQL,EAAOK,YAClC3B,KAAA,SAAiBwB,GAAW,YA4F1B,SAASI,MAsaT,QAASC,GAASC,EAAGC,GAEpB/B,KAAK8B,EAAIA,GAAK,EACd9B,KAAK+B,EAAIA,GAAK,EA8df,QAASC,GAASC,EAAOC,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,EAAYC,GAE/FC,OAAOC,eAAgB5C,KAAM,MAAQ6C,MAAOC,MAE5C9C,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKkD,KAAO,GACZlD,KAAKmD,WAAa,GAElBnD,KAAKiC,MAAkBmB,SAAVnB,EAAsBA,EAAQD,EAAQqB,cACnDrD,KAAKsD,WAELtD,KAAKkC,QAAsBkB,SAAZlB,EAAwBA,EAAUF,EAAQuB,gBAEzDvD,KAAKmC,MAAkBiB,SAAVjB,EAAsBA,EAAQqB,GAC3CxD,KAAKoC,MAAkBgB,SAAVhB,EAAsBA,EAAQoB,GAE3CxD,KAAKqC,UAA0Be,SAAdf,EAA0BA,EAAYoB,GACvDzD,KAAKsC,UAA0Bc,SAAdd,EAA0BA,EAAYoB,GAEvD1D,KAAKyC,WAA4BW,SAAfX,EAA2BA,EAAa,EAE1DzC,KAAKuC,OAAoBa,SAAXb,EAAuBA,EAASoB,GAC9C3D,KAAKwC,KAAgBY,SAATZ,EAAqBA,EAAOoB,GAExC5D,KAAK6D,OAAS,GAAIhC,GAAS,EAAG,GAC9B7B,KAAK8D,OAAS,GAAIjC,GAAS,EAAG,GAE9B7B,KAAK+D,iBAAkB,EACvB/D,KAAKgE,kBAAmB,EACxBhE,KAAKiE,OAAQ,EACbjE,KAAKkE,gBAAkB,EAOvBlE,KAAK0C,SAAwBU,SAAbV,EAAyBA,EAAYyB,GAErDnE,KAAKoE,QAAU,EACfpE,KAAKqE,SAAW,KA4OjB,QAASvB,KAAmB,MAAOwB,MAUnC,QAASC,GAASzC,EAAGC,EAAGyC,EAAGhE,GAE1BR,KAAK8B,EAAIA,GAAK,EACd9B,KAAK+B,EAAIA,GAAK,EACd/B,KAAKwE,EAAIA,GAAK,EACdxE,KAAKQ,EAAY4C,SAAN5C,EAAoBA,EAAI,EAknBpC,QAASiE,GAAmBpE,EAAOC,EAAQoE,GAE1C1E,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKK,MAAQA,EACbL,KAAKM,OAASA,EAEdN,KAAK2E,QAAU,GAAIJ,GAAS,EAAG,EAAGlE,EAAOC,GACzCN,KAAK4E,aAAc,EAEnB5E,KAAK6E,SAAW,GAAIN,GAAS,EAAG,EAAGlE,EAAOC,GAE1CoE,EAAUA,MAEiBtB,SAAtBsB,EAAQpC,YAA0BoC,EAAQpC,UAAYmB,IAE3DzD,KAAK8E,QAAU,GAAI9C,GAASoB,OAAWA,OAAWsB,EAAQvC,MAAOuC,EAAQtC,MAAOsC,EAAQrC,UAAWqC,EAAQpC,UAAWoC,EAAQnC,OAAQmC,EAAQlC,KAAMkC,EAAQjC,WAAYiC,EAAQhC,UAEhL1C,KAAK+E,YAAsC3B,SAAxBsB,EAAQK,YAA4BL,EAAQK,aAAc,EAC7E/E,KAAKgF,cAA0C5B,SAA1BsB,EAAQM,cAA8BN,EAAQM,eAAgB,EACnFhF,KAAKiF,aAAwC7B,SAAzBsB,EAAQO,aAA6BP,EAAQO,aAAe,KA2DjF,QAASC,GAAuB7E,EAAOC,EAAQoE,GAE9CD,EAAkBU,KAAMnF,KAAMK,EAAOC,EAAQoE,GAE7C1E,KAAKoF,eAAiB,EACtBpF,KAAKqF,kBAAoB,EAgB1B,QAASC,GAAYxD,EAAGC,EAAGyC,EAAGhE,GAE7BR,KAAKuF,GAAKzD,GAAK,EACf9B,KAAKwF,GAAKzD,GAAK,EACf/B,KAAKyF,GAAKjB,GAAK,EACfxE,KAAK0F,GAAatC,SAAN5C,EAAoBA,EAAI,EAukBrC,QAASmF,GAAS7D,EAAGC,EAAGyC,GAEvBxE,KAAK8B,EAAIA,GAAK,EACd9B,KAAK+B,EAAIA,GAAK,EACd/B,KAAKwE,EAAIA,GAAK,EA2vBf,QAASoB,KAER5F,KAAK6F,SAAW,GAAIC,eAEnB,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,IAILC,UAAUC,OAAS,GAEvBC,QAAQC,MAAO,iFA87BjB,QAASC,GAAaC,EAAQlE,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,EAAYC,GAEpG0D,EAAoBhD,SAAXgD,EAAuBA,KAChClE,EAAsBkB,SAAZlB,EAAwBA,EAAUmE,GAE5CrE,EAAQmD,KAAMnF,KAAMoG,EAAQlE,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,EAAYC,GAEnG1C,KAAKiE,OAAQ,EA8Bd,QAASqC,KAERtG,KAAKuG,OACLvG,KAAKwG,OAaN,QAASC,GAASC,EAAOC,EAASC,GAEjC,GAAIC,GAAYH,EAAO,EAEvB,IAAkB,GAAbG,GAAkBA,EAAY,EAAI,MAAOH,EAI9C,IAAII,GAAIH,EAAUC,EACjBG,EAAIC,GAAeF,EASpB,IAPW1D,SAAN2D,IAEJA,EAAI,GAAIjB,cAAcgB,GACtBE,GAAeF,GAAMC,GAIL,IAAZJ,EAAgB,CAEpBE,EAAUI,QAASF,EAAG,EAEtB,KAAM,GAAIG,GAAI,EAAGrD,EAAS,EAAGqD,IAAMP,IAAYO,EAE9CrD,GAAU+C,EACVF,EAAOQ,GAAID,QAASF,EAAGlD,GAMzB,MAAOkD,GAMR,QAASI,GAAeC,EAAUN,GAEjC,GAAIC,GAAIM,GAAeP,EAEZ1D,UAAN2D,IAEJA,EAAI,GAAIO,YAAYR,GACpBO,GAAeP,GAAMC,EAItB,KAAM,GAAIG,GAAI,EAAGA,IAAMJ,IAAMI,EAC5BH,EAAGG,GAAME,EAASG,kBAEnB,OAAOR,GAWR,QAASS,GAAYC,EAAIC,GAAMD,EAAGE,UAAW3H,KAAK4H,KAAMF,GACxD,QAASG,GAAYJ,EAAIC,GAAMD,EAAGK,UAAW9H,KAAK4H,KAAMF,GAIxD,QAASK,GAAaN,EAAIC,GAEZtE,SAARsE,EAAE5F,EAAkB2F,EAAGO,WAAYhI,KAAK4H,KAAMF,GAC9CD,EAAGQ,UAAWjI,KAAK4H,KAAMF,EAAE5F,EAAG4F,EAAE3F,GAItC,QAASmG,GAAaT,EAAIC,GAEZtE,SAARsE,EAAE5F,EACN2F,EAAGU,UAAWnI,KAAK4H,KAAMF,EAAE5F,EAAG4F,EAAE3F,EAAG2F,EAAElD,GACpBpB,SAARsE,EAAEX,EACXU,EAAGU,UAAWnI,KAAK4H,KAAMF,EAAEX,EAAGW,EAAEU,EAAGV,EAAEW,GAErCZ,EAAGa,WAAYtI,KAAK4H,KAAMF,GAI5B,QAASa,GAAad,EAAIC,GAEZtE,SAARsE,EAAE5F,EAAkB2F,EAAGe,WAAYxI,KAAK4H,KAAMF,GAC9CD,EAAGgB,UAAWzI,KAAK4H,KAAMF,EAAE5F,EAAG4F,EAAE3F,EAAG2F,EAAElD,EAAGkD,EAAElH,GAMhD,QAASkI,GAAajB,EAAIC,GAEzBD,EAAGkB,iBAAkB3I,KAAK4H,MAAM,EAAOF,EAAE7B,UAAY6B,GAItD,QAASkB,GAAanB,EAAIC,GAEzBD,EAAGoB,iBAAkB7I,KAAK4H,MAAM,EAAOF,EAAE7B,UAAY6B,GAItD,QAASoB,GAAarB,EAAIC,GAEzBD,EAAGsB,iBAAkB/I,KAAK4H,MAAM,EAAOF,EAAE7B,UAAY6B,GAMtD,QAASsB,GAAYvB,EAAIC,EAAGN,GAE3B,GAAI6B,GAAO7B,EAASG,kBACpBE,GAAGK,UAAW9H,KAAK4H,KAAMqB,GACzB7B,EAAS8B,aAAcxB,GAAKyB,GAAcF,GAI3C,QAASG,GAAY3B,EAAIC,EAAGN,GAE3B,GAAI6B,GAAO7B,EAASG,kBACpBE,GAAGK,UAAW9H,KAAK4H,KAAMqB,GACzB7B,EAASiC,eAAgB3B,GAAK4B,GAAkBL,GAMjD,QAASM,GAAa9B,EAAIC,GAAMD,EAAG+B,WAAYxJ,KAAK4H,KAAMF,GAC1D,QAAS+B,GAAahC,EAAIC,GAAMD,EAAGiC,WAAY1J,KAAK4H,KAAMF,GAC1D,QAASiC,GAAalC,EAAIC,GAAMD,EAAGmC,WAAY5J,KAAK4H,KAAMF,GAI1D,QAASmC,GAAmBrH,GAE3B,OAASA,GAER,IAAK,MAAQ,MAAOgF,EACpB,KAAK,OAAQ,MAAOO,EACpB,KAAK,OAAQ,MAAOG,EACpB,KAAK,OAAQ,MAAOK,EAEpB,KAAK,OAAQ,MAAOG,EACpB,KAAK,OAAQ,MAAOE,EACpB,KAAK,OAAQ,MAAOE,EAEpB,KAAK,OAAQ,MAAOE,EACpB,KAAK,OAAQ,MAAOI,EAEpB,KAAK,MAAQ,IAAK,OAAQ,MAAOvB,EACjC,KAAK,OAAQ,IAAK,OAAQ,MAAO0B,EACjC,KAAK,OAAQ,IAAK,OAAQ,MAAOE,EACjC,KAAK,OAAQ,IAAK,OAAQ,MAAOE,IAQnC,QAASG,GAAarC,EAAIC,GAAMD,EAAGsC,WAAY/J,KAAK4H,KAAMF,GAC1D,QAASsC,GAAavC,EAAIC,GAAMD,EAAGwC,WAAYjK,KAAK4H,KAAMF,GAI1D,QAASwC,GAAazC,EAAIC,GAEzBD,EAAGO,WAAYhI,KAAK4H,KAAMnB,EAASiB,EAAG1H,KAAKmK,KAAM,IAIlD,QAASC,GAAa3C,EAAIC,GAEzBD,EAAGa,WAAYtI,KAAK4H,KAAMnB,EAASiB,EAAG1H,KAAKmK,KAAM,IAIlD,QAASE,GAAa5C,EAAIC,GAEzBD,EAAGe,WAAYxI,KAAK4H,KAAMnB,EAASiB,EAAG1H,KAAKmK,KAAM,IAMlD,QAASG,GAAa7C,EAAIC,GAEzBD,EAAGkB,iBAAkB3I,KAAK4H,MAAM,EAAOnB,EAASiB,EAAG1H,KAAKmK,KAAM,IAI/D,QAASI,GAAa9C,EAAIC,GAEzBD,EAAGoB,iBAAkB7I,KAAK4H,MAAM,EAAOnB,EAASiB,EAAG1H,KAAKmK,KAAM,IAI/D,QAASK,GAAa/C,EAAIC,GAEzBD,EAAGsB,iBAAkB/I,KAAK4H,MAAM,EAAOnB,EAASiB,EAAG1H,KAAKmK,KAAM,KAM/D,QAASM,GAAahD,EAAIC,EAAGN,GAE5B,GAAIN,GAAIY,EAAE1B,OACT0E,EAAQvD,EAAeC,EAAUN,EAElCW,GAAGwC,WAAYjK,KAAK4H,KAAM8C,EAE1B,KAAM,GAAIxD,GAAI,EAAGA,IAAMJ,IAAMI,EAE5BE,EAAS8B,aAAcxB,EAAGR,IAAOiC,GAAcuB,EAAOxD,IAMxD,QAASyD,GAAalD,EAAIC,EAAGN,GAE5B,GAAIN,GAAIY,EAAE1B,OACT0E,EAAQvD,EAAeC,EAAUN,EAElCW,GAAGwC,WAAYjK,KAAK4H,KAAM8C,EAE1B,KAAM,GAAIxD,GAAI,EAAGA,IAAMJ,IAAMI,EAE5BE,EAASiC,eAAgB3B,EAAGR,IAAOoC,GAAkBoB,EAAOxD,IAQ9D,QAAS0D,GAAoBpI,GAE5B,OAASA,GAER,IAAK,MAAQ,MAAOsH,EACpB,KAAK,OAAQ,MAAOI,EACpB,KAAK,OAAQ,MAAOE,EACpB,KAAK,OAAQ,MAAOC,EAEpB,KAAK,OAAQ,MAAOC,EACpB,KAAK,OAAQ,MAAOC,EACpB,KAAK,OAAQ,MAAOC,EAEpB,KAAK,OAAQ,MAAOC,EACpB,KAAK,OAAQ,MAAOE,EAEpB,KAAK,MAAQ,IAAK,OAAQ,MAAOX,EACjC,KAAK,OAAQ,IAAK,OAAQ,MAAOT,EACjC,KAAK,OAAQ,IAAK,OAAQ,MAAOE,EACjC,KAAK,OAAQ,IAAK,OAAQ,MAAOE,IAQnC,QAASkB,GAAeC,EAAIC,EAAYnD,GAEvC5H,KAAK8K,GAAKA,EACV9K,KAAK4H,KAAOA,EACZ5H,KAAKgL,SAAWnB,EAAmBkB,EAAWvI,MAM/C,QAASyI,GAAkBH,EAAIC,EAAYnD,GAE1C5H,KAAK8K,GAAKA,EACV9K,KAAK4H,KAAOA,EACZ5H,KAAKmK,KAAOY,EAAWZ,KACvBnK,KAAKgL,SAAWJ,EAAoBG,EAAWvI,MAMhD,QAAS0I,GAAmBJ,GAE3B9K,KAAK8K,GAAKA,EAEVxE,EAAiBnB,KAAMnF,MAmCxB,QAASmL,GAAYC,EAAWC,GAE/BD,EAAU7E,IAAI+E,KAAMD,GACpBD,EAAU5E,IAAK6E,EAAcP,IAAOO,EAIrC,QAASE,GAAcR,EAAYnD,EAAMwD,GAExC,GAAII,GAAOT,EAAW7H,KACrBuI,EAAaD,EAAKxF,MAKnB,KAFA0F,GAAWC,UAAY,IAEb,CAET,GAAIC,GAAQF,GAAWG,KAAML,GAC5BM,EAAWJ,GAAWC,UAEtBb,EAAKc,EAAO,GACZG,EAA2B,MAAfH,EAAO,GACnBI,EAAYJ,EAAO,EAIpB,IAFKG,IAAYjB,EAAU,EAALA,GAEH1H,SAAd4I,GACW,MAAdA,GAAqBF,EAAW,IAAML,EAAa,CAGpDN,EAAYC,EAAyBhI,SAAd4I,EACrB,GAAInB,GAAeC,EAAIC,EAAYnD,GACnC,GAAIqD,GAAkBH,EAAIC,EAAYnD,GAExC,OAKA,GAAIpB,GAAM4E,EAAU5E,IACnByF,EAAOzF,EAAKsE,EAEC1H,UAAT6I,IAEJA,EAAO,GAAIf,GAAmBJ,GAC9BK,EAAYC,EAAWa,IAIxBb,EAAYa,GAUf,QAASC,GAAezE,EAAI0E,EAAS/E,GAEpCd,EAAiBnB,KAAMnF,MAEvBA,KAAKoH,SAAWA,CAIhB,KAAM,GAFFN,GAAIW,EAAG2E,oBAAqBD,EAAS1E,EAAG4E,iBAElCnF,EAAI,EAAGA,IAAMJ,IAAMI,EAAI,CAEhC,GAAIoF,GAAO7E,EAAG8E,iBAAkBJ,EAASjF,GACxCsE,EAAOc,EAAKpJ,KACZ0E,EAAOH,EAAG+E,mBAAoBL,EAASX,EAExCD,GAAce,EAAM1E,EAAM5H,OAsf5B,QAASyM,GAAO1F,EAAGqB,EAAGC,GAErB,MAAWjF,UAANgF,GAAyBhF,SAANiF,EAGhBrI,KAAK0M,IAAK3F,GAIX/G,KAAK2M,OAAQ5F,EAAGqB,EAAGC,GAi4B3B,QAASuE,GAAMC,EAAKC,GAEnB9M,KAAK6M,IAAgBzJ,SAARyJ,EAAsBA,EAAM,GAAIhL,KAAWkL,EAAAA,KAAYA,EAAAA,IACpE/M,KAAK8M,IAAgB1J,SAAR0J,EAAsBA,EAAM,GAAIjL,KAAWkL,EAAAA,KAAYA,EAAAA,IA2OrE,QAASC,GAAiB5F,EAAU6F,GAUnC,QAASC,KAER,GAAIC,GAAW,GAAIrH,eAClB,GAAK,GAAM,EAAG,EACb,EAAG,GAAM,EAAG,EACZ,EAAI,EAAI,EAAG,EACZ,GAAM,EAAI,EAAG,IAGVsH,EAAQ,GAAIC,cACf,EAAG,EAAG,EACN,EAAG,EAAG,GAKPC,GAAmB7F,EAAG8F,eACtBC,EAAmB/F,EAAG8F,eAEtB9F,EAAGgG,WAAYhG,EAAGiG,aAAcJ,GAChC7F,EAAGkG,WAAYlG,EAAGiG,aAAcP,EAAU1F,EAAGmG,aAE7CnG,EAAGgG,WAAYhG,EAAGoG,qBAAsBL,GACxC/F,EAAGkG,WAAYlG,EAAGoG,qBAAsBT,EAAO3F,EAAGmG,aAIlDE,EAAmBrG,EAAGsG,gBACtBC,EAAmBvG,EAAGsG,gBAEtBE,EAAMC,YAAazG,EAAG0G,WAAYL,GAClCrG,EAAG2G,WAAY3G,EAAG0G,WAAY,EAAG1G,EAAG4G,IAAK,GAAI,GAAI,EAAG5G,EAAG4G,IAAK5G,EAAG6G,cAAe,MAC9E7G,EAAG8G,cAAe9G,EAAG0G,WAAY1G,EAAG+G,eAAgB/G,EAAGgH,eACvDhH,EAAG8G,cAAe9G,EAAG0G,WAAY1G,EAAGiH,eAAgBjH,EAAGgH,eACvDhH,EAAG8G,cAAe9G,EAAG0G,WAAY1G,EAAGkH,mBAAoBlH,EAAGmH,SAC3DnH,EAAG8G,cAAe9G,EAAG0G,WAAY1G,EAAGoH,mBAAoBpH,EAAGmH,SAE3DX,EAAMC,YAAazG,EAAG0G,WAAYH,GAClCvG,EAAG2G,WAAY3G,EAAG0G,WAAY,EAAG1G,EAAGqH,KAAM,GAAI,GAAI,EAAGrH,EAAGqH,KAAMrH,EAAG6G,cAAe,MAChF7G,EAAG8G,cAAe9G,EAAG0G,WAAY1G,EAAG+G,eAAgB/G,EAAGgH,eACvDhH,EAAG8G,cAAe9G,EAAG0G,WAAY1G,EAAGiH,eAAgBjH,EAAGgH,eACvDhH,EAAG8G,cAAe9G,EAAG0G,WAAY1G,EAAGkH,mBAAoBlH,EAAGmH,SAC3DnH,EAAG8G,cAAe9G,EAAG0G,WAAY1G,EAAGoH,mBAAoBpH,EAAGmH,SAE3DG,GAECC,cAEC,+BAEA,+BACA,sBACA,0BAEA,kCAEA,2BACA,qBAEA,oBACA,6BAEA,gBAEC,YAEA,uBAEA,2BAEC,iEACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DACA,6DAEA,2CACA,2CACA,2CACA,2CAEA,uEACA,uEAED,IAEA,uFAED,KAECC,KAAM,MAERC,gBAEC,+BAEA,yBACA,yBACA,sBAEA,oBACA,6BAEA,gBAIC,2BAEC,6CAID,kCAEC,wCAID,WAEC,wCACA,sCACA,0BACA,6BAED,IAED,KAECD,KAAM,OAIT9C,EAAUgD,EAAeJ,GAEzBK,GACCC,OAAQ5H,EAAG6H,kBAAoBnD,EAAS,YACxCoD,GAAQ9H,EAAG6H,kBAAoBnD,EAAS,OAGzCqD,GACCC,WAAgBhI,EAAG+E,mBAAoBL,EAAS,cAChD3F,IAAgBiB,EAAG+E,mBAAoBL,EAAS,OAChDuD,aAAgBjI,EAAG+E,mBAAoBL,EAAS,gBAChDwD,QAAgBlI,EAAG+E,mBAAoBL,EAAS,WAChDyD,MAAgBnI,EAAG+E,mBAAoBL,EAAS,SAChD0D,MAAgBpI,EAAG+E,mBAAoBL,EAAS,SAChD2D,SAAgBrI,EAAG+E,mBAAoBL,EAAS,YAChD4D,eAAgBtI,EAAG+E,mBAAoBL,EAAS,mBA6LlD,QAASgD,GAAeJ,GAEvB,GAAI5C,GAAU1E,EAAG0H,gBAEbD,EAAiBzH,EAAGuI,aAAcvI,EAAGwI,iBACrCjB,EAAevH,EAAGuI,aAAcvI,EAAGyI,eAEnCC,EAAS,aAAe/I,EAASgJ,eAAiB,WAatD,OAXA3I,GAAG4I,aAAcnB,EAAgBiB,EAASpB,EAAOG,gBACjDzH,EAAG4I,aAAcrB,EAAcmB,EAASpB,EAAOC,cAE/CvH,EAAG6I,cAAepB,GAClBzH,EAAG6I,cAAetB,GAElBvH,EAAG8I,aAAcpE,EAAS+C,GAC1BzH,EAAG8I,aAAcpE,EAAS6C,GAE1BvH,EAAG+I,YAAarE,GAETA,EAlXR,GAGImB,GAAcE,EACduB,EAAQ5C,EAASiD,EAAYI,EAE7B1B,EAAaE,EANbvG,EAAKL,EAASqJ,QACdxC,EAAQ7G,EAAS6G,KA2KrBjO,MAAKoB,OAAS,SAAWsP,EAAOC,EAAQ9L,GAEvC,GAAuB,IAAlBoI,EAAOjH,OAAZ,CAEA,GAAI4K,GAAe,GAAIjL,GAEnBkL,EAAYhM,EAASrE,EAAIqE,EAASL,EACrCsM,EAAiC,GAAbjM,EAASL,EAC7BuM,EAAkC,GAAblM,EAASrE,EAE3B2J,EAAO,GAAKtF,EAASrE,EACxBqP,EAAQ,GAAIhO,GAASsI,EAAO0G,EAAW1G,GAEpC4F,EAAiB,GAAIpK,GAAS,EAAG,EAAG,GACvCqL,EAAuB,GAAInP,GAAS,EAAG,GAEpCoP,EAAY,GAAIrE,EAEpBqE,GAAUpE,IAAIH,IAAK,EAAG,GACtBuE,EAAUnE,IAAIJ,IAAK7H,EAASL,EAAI,GAAIK,EAASrE,EAAI,IAEhC4C,SAAZ+I,GAEJe,IAIDzF,EAAGyJ,WAAY/E,GAEf8B,EAAMkD,iBACNlD,EAAMmD,gBAAiBhC,EAAWC,QAClCpB,EAAMmD,gBAAiBhC,EAAWG,IAClCtB,EAAMoD,0BAKN5J,EAAGK,UAAW0H,EAASE,aAAc,GACrCjI,EAAGK,UAAW0H,EAAShJ,IAAK,GAE5BiB,EAAGgG,WAAYhG,EAAGiG,aAAcJ,GAChC7F,EAAG6J,oBAAqBlC,EAAWC,OAAQ,EAAG5H,EAAG8J,OAAO,EAAO,GAAO,GACtE9J,EAAG6J,oBAAqBlC,EAAWG,GAAI,EAAG9H,EAAG8J,OAAO,EAAO,GAAO,GAElE9J,EAAGgG,WAAYhG,EAAGoG,qBAAsBL,GAExCS,EAAMuD,QAAS/J,EAAGgK,WAClBxD,EAAMyD,eAAe,EAErB,KAAM,GAAIxK,GAAI,EAAGyK,EAAI1E,EAAOjH,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjDiD,EAAO,GAAKtF,EAASrE,EACrBqP,EAAMnD,IAAKvC,EAAO0G,EAAW1G,EAI7B,IAAIyH,GAAQ3E,EAAQ/F,EAkBpB,IAhBA0J,EAAalE,IAAKkF,EAAMC,YAAYhM,SAAU,IAAM+L,EAAMC,YAAYhM,SAAU,IAAM+L,EAAMC,YAAYhM,SAAU,KAElH+K,EAAakB,aAAcnB,EAAOoB,oBAClCnB,EAAaoB,gBAAiBrB,EAAOsB,kBAIrClC,EAAemC,KAAMtB,GAIrBI,EAAqBlP,EAAI+C,EAAS/C,EAAMiO,EAAejO,EAAIgP,EAAsBA,EAAoB,EACrGE,EAAqBjP,EAAI8C,EAAS9C,EAAMgO,EAAehO,EAAIgP,EAAuBA,EAAqB,EAIlGE,EAAUkB,cAAenB,MAA2B,EAAO,CAI/D/C,EAAMmE,cAAe3K,EAAG4K,UACxBpE,EAAMC,YAAazG,EAAG0G,WAAY,MAClCF,EAAMmE,cAAe3K,EAAG6K,UACxBrE,EAAMC,YAAazG,EAAG0G,WAAYL,GAClCrG,EAAG8K,eAAgB9K,EAAG0G,WAAY,EAAG1G,EAAG4G,IAAK2C,EAAqBlP,EAAGkP,EAAqBjP,EAAG,GAAI,GAAI,GAKrG0F,EAAGK,UAAW0H,EAASC,WAAY,GACnChI,EAAGQ,UAAWuH,EAASK,MAAOA,EAAM/N,EAAG+N,EAAM9N,GAC7C0F,EAAGU,UAAWqH,EAASO,eAAgBA,EAAejO,EAAGiO,EAAehO,EAAGgO,EAAevL,GAE1FyJ,EAAMuD,QAAS/J,EAAG+K,OAClBvE,EAAMwE,OAAQhL,EAAGiL,YAEjBjL,EAAGkL,aAAclL,EAAGmL,UAAW,EAAGnL,EAAGoL,eAAgB,GAKrD5E,EAAMmE,cAAe3K,EAAG4K,UACxBpE,EAAMC,YAAazG,EAAG0G,WAAYH,GAClCvG,EAAG8K,eAAgB9K,EAAG0G,WAAY,EAAG1G,EAAGqH,KAAMkC,EAAqBlP,EAAGkP,EAAqBjP,EAAG,GAAI,GAAI,GAKtG0F,EAAGK,UAAW0H,EAASC,WAAY,GACnCxB,EAAMuD,QAAS/J,EAAGiL,YAElBzE,EAAMmE,cAAe3K,EAAG6K,UACxBrE,EAAMC,YAAazG,EAAG0G,WAAYL,GAClCrG,EAAGkL,aAAclL,EAAGmL,UAAW,EAAGnL,EAAGoL,eAAgB,GAKrDjB,EAAMkB,eAAeZ,KAAMnC,GAEtB6B,EAAMmB,qBAEVnB,EAAMmB,qBAAsBnB,GAI5BA,EAAMoB,mBAMPvL,EAAGK,UAAW0H,EAASC,WAAY,GACnCxB,EAAMwE,OAAQhL,EAAG+K,MAEjB,KAAM,GAAIS,GAAI,EAAGC,EAAKtB,EAAMuB,WAAWnN,OAAYkN,EAAJD,EAAQA,IAAO,CAE7D,GAAIG,GAASxB,EAAMuB,WAAYF,EAE1BG,GAAOzD,QAAU,MAASyD,EAAOvD,MAAQ,OAE7CE,EAAejO,EAAIsR,EAAOtR,EAC1BiO,EAAehO,EAAIqR,EAAOrR,EAC1BgO,EAAevL,EAAI4O,EAAO5O,EAE1B2F,EAAOiJ,EAAOjJ,KAAOiJ,EAAOvD,MAAQhL,EAASrE,EAE7CqP,EAAM/N,EAAIqI,EAAO0G,EACjBhB,EAAM9N,EAAIoI,EAEV1C,EAAGU,UAAWqH,EAASO,eAAgBA,EAAejO,EAAGiO,EAAehO,EAAGgO,EAAevL,GAC1FiD,EAAGQ,UAAWuH,EAASK,MAAOA,EAAM/N,EAAG+N,EAAM9N,GAC7C0F,EAAGE,UAAW6H,EAASM,SAAUsD,EAAOtD,UAExCrI,EAAGE,UAAW6H,EAASG,QAASyD,EAAOzD,SACvClI,EAAGU,UAAWqH,EAASI,MAAOwD,EAAOxD,MAAM7I,EAAGqM,EAAOxD,MAAMxH,EAAGgL,EAAOxD,MAAMvH,GAE3E4F,EAAMoF,YAAaD,EAAOE,SAAUF,EAAOG,cAAeH,EAAOI,SAAUJ,EAAOK,UAClFrM,EAAS8B,aAAckK,EAAOtO,QAAS,GAEvC2C,EAAGkL,aAAclL,EAAGmL,UAAW,EAAGnL,EAAGoL,eAAgB,MAYzD5E,EAAMwE,OAAQhL,EAAGgK,WACjBxD,EAAMwE,OAAQhL,EAAGiL,YACjBzE,EAAMyD,eAAe,GAErBtK,EAASsM,iBAmCX,QAASC,GAAcvM,EAAUwM,GAgBhC,QAAS1G,KAER,GAAIC,GAAW,GAAIrH,gBAChB,IAAO,GAAM,EAAG,EAChB,IAAO,GAAM,EAAG,EAChB,GAAO,GAAM,EAAG,GAChB,GAAO,GAAM,EAAG,IAGfsH,EAAQ,GAAIC,cACf,EAAG,EAAG,EACN,EAAG,EAAG,GAGPC,GAAgB7F,EAAG8F,eACnBC,EAAgB/F,EAAG8F,eAEnB9F,EAAGgG,WAAYhG,EAAGiG,aAAcJ,GAChC7F,EAAGkG,WAAYlG,EAAGiG,aAAcP,EAAU1F,EAAGmG,aAE7CnG,EAAGgG,WAAYhG,EAAGoG,qBAAsBL,GACxC/F,EAAGkG,WAAYlG,EAAGoG,qBAAsBT,EAAO3F,EAAGmG,aAElDzB,EAAUgD,IAEVC,GACCyE,SAAYpM,EAAG6H,kBAAoBnD,EAAS,YAC5CoD,GAAQ9H,EAAG6H,kBAAoBnD,EAAS,OAGzCqD,GACCsE,SAAYrM,EAAG+E,mBAAoBL,EAAS,YAC5C4H,QAAWtM,EAAG+E,mBAAoBL,EAAS,WAE3C2D,SAAYrI,EAAG+E,mBAAoBL,EAAS,YAC5C0D,MAAUpI,EAAG+E,mBAAoBL,EAAS,SAE1CyD,MAAUnI,EAAG+E,mBAAoBL,EAAS,SAC1C3F,IAAQiB,EAAG+E,mBAAoBL,EAAS,OACxCwD,QAAWlI,EAAG+E,mBAAoBL,EAAS,WAE3C6H,gBAAkBvM,EAAG+E,mBAAoBL,EAAS,mBAClD8F,iBAAkBxK,EAAG+E,mBAAoBL,EAAS,oBAElD8H,QAAWxM,EAAG+E,mBAAoBL,EAAS,WAC3C+H,WAAczM,EAAG+E,mBAAoBL,EAAS,cAC9CgI,QAAW1M,EAAG+E,mBAAoBL,EAAS,WAC3CiI,OAAW3M,EAAG+E,mBAAoBL,EAAS,UAC3CkI,SAAY5M,EAAG+E,mBAAoBL,EAAS,YAE5CmI,UAAa7M,EAAG+E,mBAAoBL,EAAS,aAG9C,IAAIoI,GAASC,SAASC,gBAAiB,+BAAgC,SACvEF,GAAOlU,MAAQ,EACfkU,EAAOjU,OAAS,CAEhB,IAAImQ,GAAU8D,EAAOG,WAAY,KACjCjE,GAAQkE,UAAY,QACpBlE,EAAQmE,SAAU,EAAG,EAAG,EAAG,GAE3B9P,EAAU,GAAI9C,GAASuS,GACvBzP,EAAQ+P,aAAc,EAoKvB,QAAS1F,KAER,GAAIhD,GAAU1E,EAAG0H,gBAEbH,EAAevH,EAAGuI,aAAcvI,EAAGyI,eACnChB,EAAiBzH,EAAGuI,aAAcvI,EAAGwI,gBAkGzC,OAhGAxI,GAAG4I,aAAcrB,GAEhB,aAAe5H,EAASgJ,eAAiB,UAEzC,gCACA,iCACA,0BACA,sBACA,yBACA,wBAEA,2BACA,qBAEA,oBAEA,gBAEC,iCAEA,2CAEA,wBACA,iGACA,iGAEA,sBAEA,gEACA,uCACA,oDAEA,+BAED,KAECnB,KAAM,OAERxH,EAAG4I,aAAcnB,GAEhB,aAAe9H,EAASgJ,eAAiB,UAEzC,sBACA,yBACA,yBAEA,uBACA,yBACA,4BACA,yBACA,wBACA,2BAEA,oBAEA,gBAEC,wCAEA,wCAEA,mEAEA,uBAEC,iDACA,yBAEA,wBAEC,oDAED,WAEC,+BACA,wEACA,kDAED,IAEA,mFAED,IAED,KAECnB,KAAM,OAERxH,EAAG6I,cAAetB,GAClBvH,EAAG6I,cAAepB,GAElBzH,EAAG8I,aAAcpE,EAAS6C,GAC1BvH,EAAG8I,aAAcpE,EAAS+C,GAE1BzH,EAAG+I,YAAarE,GAETA,EAIR,QAAS2I,GAAmBC,EAAG1M,GAE9B,MAAK0M,GAAEC,cAAgB3M,EAAE2M,YAEjBD,EAAEC,YAAc3M,EAAE2M,YAEdD,EAAEvQ,IAAM6D,EAAE7D,EAEd6D,EAAE7D,EAAIuQ,EAAEvQ,EAIR6D,EAAEyC,GAAKiK,EAAEjK,GAvWlB,GAGIwC,GAAcE,EACdrB,EAASiD,EAAYI,EAErB1K,EANA2C,EAAKL,EAASqJ,QACdxC,EAAQ7G,EAAS6G,MASjBgH,EAAiB,GAAItP,GACrBuP,EAAiB,GAAI5P,GACrB6P,EAAc,GAAIxP,EAoEtB3F,MAAKoB,OAAS,SAAWsP,EAAOC,GAE/B,GAAwB,IAAnBiD,EAAQ5N,OAAb,CAIiB5C,SAAZ+I,GAEJe,IAIDzF,EAAGyJ,WAAY/E,GAEf8B,EAAMkD,iBACNlD,EAAMmD,gBAAiBhC,EAAWyE,UAClC5F,EAAMmD,gBAAiBhC,EAAWG,IAClCtB,EAAMoD,0BAENpD,EAAMuD,QAAS/J,EAAGgK,WAClBxD,EAAMwE,OAAQhL,EAAG+K,OAEjB/K,EAAGgG,WAAYhG,EAAGiG,aAAcJ,GAChC7F,EAAG6J,oBAAqBlC,EAAWyE,SAAU,EAAGpM,EAAG8J,OAAO,EAAO,GAAO,GACxE9J,EAAG6J,oBAAqBlC,EAAWG,GAAI,EAAG9H,EAAG8J,OAAO,EAAO,GAAO,GAElE9J,EAAGgG,WAAYhG,EAAGoG,qBAAsBL,GAExC/F,EAAGsB,iBAAkByG,EAASyC,kBAAkB,EAAOtB,EAAOsB,iBAAiBpM,UAE/EoI,EAAMmE,cAAe3K,EAAG4K,UACxB5K,EAAGK,UAAW0H,EAAShJ,IAAK,EAE5B,IAAI4O,GAAa,EACbC,EAAe,EACfC,EAAM5E,EAAM4E,GAEXA,IAEJ7N,EAAGU,UAAWqH,EAAS6E,SAAUiB,EAAI1F,MAAM7I,EAAGuO,EAAI1F,MAAMxH,EAAGkN,EAAI1F,MAAMvH,GAE/DiN,GAAOA,EAAIC,OAEhB9N,EAAGE,UAAW6H,EAAS2E,QAASmB,EAAIE,MACpC/N,EAAGE,UAAW6H,EAAS4E,OAAQkB,EAAIG,KAEnChO,EAAGK,UAAW0H,EAASyE,QAAS,GAChCmB,EAAa,EACbC,EAAe,GAEHC,GAAOA,EAAII,YAEvBjO,EAAGE,UAAW6H,EAAS0E,WAAYoB,EAAIK,SAEvClO,EAAGK,UAAW0H,EAASyE,QAAS,GAChCmB,EAAa,EACbC,EAAe,KAMhB5N,EAAGK,UAAW0H,EAASyE,QAAS,GAChCmB,EAAa,EACbC,EAAe,EAOhB,KAAM,GAAInO,GAAI,EAAGyK,EAAIiC,EAAQ5N,OAAY2L,EAAJzK,EAAOA,IAAO,CAElD,GAAIkM,GAASQ,EAAS1M,EAEtBkM,GAAOY,gBAAgB4B,iBAAkBjF,EAAOoB,mBAAoBqB,EAAOvB,aAC3EuB,EAAO5O,GAAM4O,EAAOY,gBAAgBnO,SAAU,IAI/C+N,EAAQiC,KAAMf,EAMd,KAAM,GAFFjF,MAEM3I,EAAI,EAAGyK,EAAIiC,EAAQ5N,OAAY2L,EAAJzK,EAAOA,IAAO,CAElD,GAAIkM,GAASQ,EAAS1M,GAClB4O,EAAW1C,EAAO0C,QAEtB,IAAKA,EAASC,WAAY,EAA1B,CAEAtO,EAAGE,UAAW6H,EAAS8E,UAAWwB,EAASxB,WAC3C7M,EAAGsB,iBAAkByG,EAASwE,iBAAiB,EAAOZ,EAAOY,gBAAgBnO,UAE7EuN,EAAOvB,YAAYmE,UAAWf,EAAgBC,EAAgBC,GAE9DtF,EAAO,GAAMsF,EAAYrT,EACzB+N,EAAO,GAAMsF,EAAYpT,CAEzB,IAAIkS,GAAU,CAETvD,GAAM4E,KAAOQ,EAASR,MAE1BrB,EAAUoB,GAIND,IAAenB,IAEnBxM,EAAGK,UAAW0H,EAASyE,QAASA,GAChCmB,EAAanB,GAIQ,OAAjB6B,EAAStP,KAEbiB,EAAGQ,UAAWuH,EAASsE,SAAUgC,EAAStP,IAAI3C,OAAO/B,EAAGgU,EAAStP,IAAI3C,OAAO9B,GAC5E0F,EAAGQ,UAAWuH,EAASuE,QAAS+B,EAAStP,IAAI1C,OAAOhC,EAAGgU,EAAStP,IAAI1C,OAAO/B,KAI3E0F,EAAGQ,UAAWuH,EAASsE,SAAU,EAAG,GACpCrM,EAAGQ,UAAWuH,EAASuE,QAAS,EAAG,IAIpCtM,EAAGE,UAAW6H,EAASG,QAASmG,EAASnG,SACzClI,EAAGU,UAAWqH,EAASI,MAAOkG,EAASlG,MAAM7I,EAAG+O,EAASlG,MAAMxH,EAAG0N,EAASlG,MAAMvH,GAEjFZ,EAAGE,UAAW6H,EAASM,SAAUgG,EAAShG,UAC1CrI,EAAGO,WAAYwH,EAASK,MAAOA,GAE/B5B,EAAMoF,YAAayC,EAASxC,SAAUwC,EAASvC,cAAeuC,EAAStC,SAAUsC,EAASrC,UAC1FxF,EAAMgI,aAAcH,EAASI,WAC7BjI,EAAMyD,cAAeoE,EAASK,YAEzBL,EAAStP,IAEbY,EAAS8B,aAAc4M,EAAStP,IAAK,GAIrCY,EAAS8B,aAAcpE,EAAS,GAIjC2C,EAAGkL,aAAclL,EAAGmL,UAAW,EAAGnL,EAAGoL,eAAgB,IAMtD5E,EAAMwE,OAAQhL,EAAGgK,WAEjBrK,EAASsM,iBAwIX,QAAS0C,KAERzT,OAAOC,eAAgB5C,KAAM,MAAQ6C,MAAOwT,MAE5CrW,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKkD,KAAO,GACZlD,KAAKwC,KAAO,WAEZxC,KAAKsV,KAAM,EACXtV,KAAKsW,QAAS,EAEdtW,KAAKsT,SAAWiD,GAChBvW,KAAKwW,KAAOC,GACZzW,KAAK0W,QAAUC,GACf3W,KAAK4W,aAAeC,GAEpB7W,KAAK2P,QAAU,EACf3P,KAAK8W,aAAc,EAEnB9W,KAAKwT,SAAWuD,GAChB/W,KAAKyT,SAAWuD,GAChBhX,KAAKuT,cAAgB0D,GACrBjX,KAAKkX,cAAgB,KACrBlX,KAAKmX,cAAgB,KACrBnX,KAAKoX,mBAAqB,KAE1BpX,KAAKqX,UAAYC,GACjBtX,KAAKkW,WAAY,EACjBlW,KAAKmW,YAAa,EAElBnW,KAAKuX,eAAiB,KACtBvX,KAAKwX,aAAc,EAEnBxX,KAAKyX,YAAa,EAElBzX,KAAK0X,UAAY,KAEjB1X,KAAK2X,eAAgB,EACrB3X,KAAK4X,oBAAsB,EAC3B5X,KAAK6X,mBAAqB,EAE1B7X,KAAKsU,UAAY,EACjBtU,KAAK8X,oBAAqB,EAE1B9X,KAAK+X,SAAW,EAEhB/X,KAAK+V,SAAU,EAEf/V,KAAKgY,cAAe,EA2RrB,QAAS3B,KAAoB,MAAO4B,MAuBpC,QAASC,GAAgBC,GAExB/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,iBAEZxC,KAAKoY,WACLpY,KAAKwP,YAELxP,KAAKgP,aAAe,+FACpBhP,KAAKkP,eAAiB,gEAEtBlP,KAAKqY,UAAY,EAEjBrY,KAAKsY,WAAY,EACjBtY,KAAKuY,mBAAqB,EAE1BvY,KAAKsV,KAAM,EACXtV,KAAKsW,QAAS,EACdtW,KAAKwY,UAAW,EAEhBxY,KAAKyY,UAAW,EAChBzY,KAAK0Y,cAAe,EACpB1Y,KAAK2Y,cAAe,EAEpB3Y,KAAK4Y,YACJC,aAAa,EACbC,WAAW,EACXC,aAAa,EACbC,kBAAkB,GAKnBhZ,KAAKiZ,wBACJrJ,OAAW,EAAG,EAAG,GACjBL,IAAQ,EAAG,GACX2J,KAAS,EAAG,IAGblZ,KAAKmZ,oBAAsB/V,OAEPA,SAAf+U,IAE2B/U,SAA1B+U,EAAW/I,YAEfnJ,QAAQC,MAAO,2FAIhBlG,KAAKoZ,UAAWjB,IA0ElB,QAASkB,GAAmBlB,GAE3B/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,oBAEZxC,KAAKsZ,aAAeC,GAEpBvZ,KAAKyY,UAAW,EAChBzY,KAAK0Y,cAAe,EAEpB1Y,KAAKwG,IAAM,KAEXxG,KAAKwZ,SAAW,KAEhBxZ,KAAKyZ,gBAAkB,KACvBzZ,KAAK0Z,kBAAoB,EACzB1Z,KAAK2Z,iBAAmB,EAExB3Z,KAAKsY,WAAY,EACjBtY,KAAKuY,mBAAqB,EAE1BvY,KAAKsV,KAAM,EACXtV,KAAKsW,QAAS,EAEdtW,KAAKoZ,UAAWjB,GAsCjB,QAASyB,IAAM/M,EAAKC,GAEnB9M,KAAK6M,IAAgBzJ,SAARyJ,EAAsBA,EAAM,GAAIlH,KAAWoH,EAAAA,KAAYA,EAAAA,KAAYA,EAAAA,IAChF/M,KAAK8M,IAAgB1J,SAAR0J,EAAsBA,EAAM,GAAInH,KAAWoH,EAAAA,KAAYA,EAAAA,KAAYA,EAAAA,IA0djF,QAAS8M,IAAQC,EAAQC,GAExB/Z,KAAK8Z,OAAsB1W,SAAX0W,EAAyBA,EAAS,GAAInU,GACtD3F,KAAK+Z,OAAsB3W,SAAX2W,EAAyBA,EAAS,EA8KnD,QAASC,MAERha,KAAK6F,SAAW,GAAIC,eAEnB,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,IAIFC,UAAUC,OAAS,GAEvBC,QAAQC,MAAO,iFAwSjB,QAAS+T,IAAOC,EAAQC,GAEvBna,KAAKka,OAAsB9W,SAAX8W,EAAyBA,EAAS,GAAIvU,GAAS,EAAG,EAAG,GACrE3F,KAAKma,SAA0B/W,SAAb+W,EAA2BA,EAAW,EAwOzD,QAASC,IAASC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAErC1a,KAAK2a,QAEKvX,SAAPiX,EAAqBA,EAAK,GAAIJ,IACvB7W,SAAPkX,EAAqBA,EAAK,GAAIL,IACvB7W,SAAPmX,EAAqBA,EAAK,GAAIN,IACvB7W,SAAPoX,EAAqBA,EAAK,GAAIP,IACvB7W,SAAPqX,EAAqBA,EAAK,GAAIR,IACvB7W,SAAPsX,EAAqBA,EAAK,GAAIT,KAuLlC,QAASW,IAAgBC,EAAWC,EAASC,EAAUC,GAqStD,QAASC,GAAkBC,EAAQpF,EAAUqF,EAAcC,GAE1D,GAAIC,GAAWH,EAAOG,SAElBC,EAAS,KAETC,EAAmBC,EACnBC,EAAiBP,EAAOQ,mBAS5B,IAPKP,IAEJI,EAAmBI,EACnBF,EAAiBP,EAAOU,wBAIlBH,EA6BNH,EAASG,MA7Bc,CAEvB,GAAII,IAAc,CAEb/F,GAAS4C,eAEP2C,GAAYA,EAASS,iBAE1BD,EAAcR,EAASU,iBAAmBV,EAASU,gBAAgBlI,UAAYwH,EAASU,gBAAgBlI,SAAS7N,OAAS,EAE9GqV,GAAYA,EAASW,aAEjCH,EAAcR,EAAS3C,cAAgB2C,EAAS3C,aAAa1S,OAAS,GAMxE,IAAIiW,GAAcf,EAAOgB,eAAiBpG,EAAS2C,SAE/C0D,EAAe,CAEdN,KAAcM,GAAgBC,GAC9BH,IAAcE,GAAgBE,GAEnCf,EAASC,EAAkBY,GAQ5B,GAAKtB,EAAUyB,sBACbxG,EAAS0B,eAAgB,GACU,IAAnC1B,EAASyB,eAAevR,OAAe,CAKxC,GAAIuW,GAAOjB,EAAOvY,KAAMyZ,EAAO1G,EAAS/S,KAEpC0Z,EAAsBC,EAAgBH,EAEbnZ,UAAxBqZ,IAEJA,KACAC,EAAgBH,GAASE,EAI1B,IAAIE,GAAiBF,EAAqBD,EAElBpZ,UAAnBuZ,IAEJA,EAAiBrB,EAAOsB,QACxBH,EAAqBD,GAASG,GAI/BrB,EAASqB,EAIVrB,EAAOvF,QAAUD,EAASC,QAC1BuF,EAAOhD,UAAYxC,EAASwC,SAE5B,IAAI9B,GAAOV,EAASU,IA6BpB,OA3BKqG,GAAMC,mBAAqBtG,GAAQuG,KAEvCvG,EAAOC,IAIHoG,EAAMG,qBAELxG,IAASC,GAAYD,EAAOyG,GACvBzG,IAASyG,KAAWzG,EAAOC,KAItC6E,EAAO9E,KAAOA,EAEd8E,EAAO9D,YAAc1B,EAAS0B,YAC9B8D,EAAO/D,eAAiBzB,EAASyB,eAEjC+D,EAAO/C,mBAAqBzC,EAASyC,mBACrC+C,EAAOjD,UAAYvC,EAASuC,UAEvB8C,GAA6C/X,SAA7BkY,EAAO9L,SAAS0N,UAEpC5B,EAAO9L,SAAS0N,SAASra,MAAMqP,KAAMkJ,GAI/BE,EAIR,QAAS6B,GAAejC,EAAQvK,EAAQyM,GAEvC,GAAKlC,EAAOnF,WAAY,EAAxB,CAEA,GAAIA,GAA0D,KAA9CmF,EAAOmC,OAAOC,KAAO3M,EAAO0M,OAAOC,KAEnD,IAAKvH,IAAamF,EAAOqC,QAAUrC,EAAOsC,QAAUtC,EAAOuC,WAErDvC,EAAOwC,aAAgBxC,EAAOyC,iBAAkB,GAASC,EAASC,iBAAkB3C,MAAa,GAAS,CAE9G,GAAIpF,GAAWoF,EAAOpF,QAEjBA,GAASC,WAAY,IAEzBmF,EAAOlH,gBAAgB4B,iBAAkBwH,EAAarL,mBAAoBmJ,EAAOrJ,aACjFiM,EAAYxS,KAAM4P,IAUrB,IAAM,GAFFna,GAAWma,EAAOna,SAEZmG,EAAI,EAAGyK,EAAI5Q,EAASiF,OAAY2L,EAAJzK,EAAOA,IAE5CiW,EAAepc,EAAUmG,GAAKyJ,EAAQyM,IAlbxC,GAAIW,GAAMlD,EAAUpK,QACpBuN,EAASnD,EAAU5M,MACnB2P,EAAW,GAAIxD,IACf6D,EAAoB,GAAIrY,GAExBsY,EAAgBpD,EAAQqD,QAExBC,EAAiB,GAAIvc,GACrBwc,EAAoB,GAAIxc,GAASmZ,EAAasD,eAAgBtD,EAAasD,gBAE3EC,EAAc,GAAI5Y,GAClB6Y,EAAsB,GAAI7Y,GAE1BmY,KAEA1B,EAAgB,EAChBC,EAAgB,EAEhBoC,GAA8BrC,EAAgBC,GAAkB,EAEhEb,EAAkB,GAAIkD,OAAOD,GAC7B9C,EAAqB,GAAI+C,OAAOD,GAEhC/B,KAEIiC,GACH,GAAIhZ,GAAS,EAAG,EAAG,GAAK,GAAIA,GAAS,GAAK,EAAG,GAAK,GAAIA,GAAS,EAAG,EAAG,GACrE,GAAIA,GAAS,EAAG,EAAG,IAAO,GAAIA,GAAS,EAAG,EAAG,GAAK,GAAIA,GAAS,EAAG,GAAK,IAGpEiZ,GACH,GAAIjZ,GAAS,EAAG,EAAG,GAAK,GAAIA,GAAS,EAAG,EAAG,GAAK,GAAIA,GAAS,EAAG,EAAG,GACnE,GAAIA,GAAS,EAAG,EAAG,GAAK,GAAIA,GAAS,EAAG,EAAG,GAAK,GAAIA,GAAS,EAAG,EAAG,KAGhEkZ,GACH,GAAIta,GAAW,GAAIA,GAAW,GAAIA,GAClC,GAAIA,GAAW,GAAIA,GAAW,GAAIA,IAK/Bua,EAAwB,GAAIzF,EAChCyF,GAAsBxF,aAAeyF,GACrCD,EAAsBtG,UAAW,CAKjC,KAAM,GAHFwG,GAAiBC,GAAW,aAC5BC,EAAmB1d,EAAQ2d,cAAcvC,MAAOoC,EAAexP,UAEzDtI,EAAI,EAAGA,IAAMuX,IAA8BvX,EAAI,CAExD,GAAI2U,GAAwC,KAAxB3U,EAAIkV,GACpBH,EAAwC,KAAxB/U,EAAImV,GAEpB+C,EAAgBN,EAAsBlC,OAC1CwC,GAAc1G,aAAemD,EAC7BuD,EAAc3G,SAAWwD,EAEzBT,EAAiBtU,GAAMkY,CAEvB,IAAIC,GAAmB,GAAInH,IAC1BE,SACCkH,cAAiB,IAElB9P,SAAU0P,EACVlQ,aAAcgQ,EAAehQ,aAC7BE,eAAgB8P,EAAe9P,eAC/BwJ,aAAcmD,EACdpD,SAAUwD,EACVzD,UAAU,GAGXmD,GAAoBzU,GAAMmY,EAM3B,GAAIxC,GAAQ7c,IAEZA,MAAKuf,SAAU,EAEfvf,KAAKwf,YAAa,EAClBxf,KAAK6U,aAAc,EAEnB7U,KAAKwC,KAAOid,GAEZzf,KAAKgd,oBAAqB,EAC1Bhd,KAAK8c,mBAAoB,EAEzB9c,KAAKoB,OAAS,SAAWsP,EAAOC,GAE/B,GAAKkM,EAAM0C,WAAY,IAClB1C,EAAM2C,cAAe,GAAS3C,EAAMhI,eAAgB,IAE3B,IAAzBqJ,EAAclY,OAAnB,CAGAgY,EAAO0B,WAAY,EAAG,EAAG,EAAG,GAC5B1B,EAAOxM,QAASuM,EAAIvL,OACpBwL,EAAO/H,cAAc,GACrB+H,EAAO2B,gBAAgB,EAMvB,KAAM,GAFFC,GAAWzE,EAELjU,EAAI,EAAG2Y,EAAK3B,EAAclY,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAE1D,GAAI4Y,GAAQ5B,EAAehX,GACvB6Y,EAASD,EAAMC,MAEnB,IAAgB3c,SAAX2c,EAAL,CAOA,GAAI3C,GAAe2C,EAAOpP,MAK1B,IAHAyN,EAAelM,KAAM6N,EAAOC,SAC5B5B,EAAevR,IAAKwR,GAEdyB,GAASA,EAAM3E,aAAgB,CAEpCyE,EAAY,EACZzE,GAAe,CAEf,IAAI8E,GAAU7B,EAAetc,EACzBoe,EAAW9B,EAAerc,CAgB9B8c,GAAiB,GAAInS,IAAe,EAAVuT,EAAaC,EAAUD,EAASC,GAE1DrB,EAAiB,GAAInS,IAAK,EAAGwT,EAAUD,EAASC,GAEhDrB,EAAiB,GAAInS,IAAe,EAAVuT,EAAaC,EAAUD,EAASC,GAE1DrB,EAAiB,GAAInS,IAAKuT,EAASC,EAAUD,EAASC,GAEtDrB,EAAiB,GAAInS,IAAe,EAAVuT,EAAa,EAAGA,EAASC,GAEnDrB,EAAiB,GAAInS,IAAKuT,EAAS,EAAGA,EAASC,GAE/C9B,EAAetc,GAAK,EACpBsc,EAAerc,GAAK,MAIpB6d,GAAY,EACZzE,GAAe,CAIhB,IAAoB,OAAf4E,EAAOvZ,IAAe,CAE1B,GAAI2Z,IAAS7d,UAAW8d,GAAe/d,UAAW+d,GAAe7d,OAAQoB,GAEzEoc,GAAOvZ,IAAM,GAAI/B,GAAmB2Z,EAAetc,EAAGsc,EAAerc,EAAGoe,GAExE/C,EAAaiD,yBAIRN,GAAUA,EAAOO,mBAEtBP,EAAOQ,OAAQT,EAIhB,IAAIU,GAAYT,EAAOvZ,IACnBia,EAAeV,EAAOW,MAE1BlC,GAAoBmC,sBAAuBb,EAAMjO,aACjDuL,EAAavJ,SAAS3B,KAAMsM,GAE5B3D,EAAU+F,gBAAiBJ,GAC3B3F,EAAUgG,OAKV,KAAM,GAAIC,GAAO,EAAUlB,EAAPkB,EAAkBA,IAAU,CAE/C,GAAK3F,EAAe,CAEnBoD,EAAYrM,KAAMkL,EAAavJ,UAC/B0K,EAAYwC,IAAKpC,EAAgBmC,IACjC1D,EAAa4D,GAAG9O,KAAM0M,EAASkC,IAC/B1D,EAAa6D,OAAQ1C,EAErB,IAAI2C,GAAerC,EAAiBiC,EACpC9C,GAAOnZ,SAAUqc,OAIjB3C,GAAYoC,sBAAuBb,EAAMqB,OAAOtP,aAChDuL,EAAa6D,OAAQ1C,EAItBnB,GAAagE,oBACbhE,EAAarL,mBAAmBsP,WAAYjE,EAAavL,aAIzD4O,EAAa/T,IACZ,GAAK,EAAK,EAAK,GACf,EAAK,GAAK,EAAK,GACf,EAAK,EAAK,GAAK,GACf,EAAK,EAAK,EAAK,GAGhB+T,EAAaa,SAAUlE,EAAanL,kBACpCwO,EAAaa,SAAUlE,EAAarL,oBAIpCkM,EAAkBrI,iBAAkBwH,EAAanL,iBAAkBmL,EAAarL,oBAChF6L,EAAS2D,cAAetD,GAIxBH,EAAY9X,OAAS,EAErBmX,EAAezM,EAAOC,EAAQyM,EAK9B,KAAM,GAAInK,GAAI,EAAGC,EAAK4K,EAAY9X,OAAYkN,EAAJD,EAAQA,IAAO,CAExD,GAAIiI,GAAS4C,EAAa7K,GACtBoI,EAAWN,EAASwF,OAAQrF,GAC5BpF,EAAWoF,EAAOpF,QAEtB,IAAMA,GAAYA,EAAS0L,gBAK1B,IAAM,GAHFC,GAASpG,EAASoG,OAClBC,EAAY5L,EAAS4L,UAEfC,EAAI,EAAGC,EAAKH,EAAOzb,OAAY4b,EAAJD,EAAQA,IAAO,CAEnD,GAAIE,GAAQJ,EAAQE,GAChBG,EAAgBJ,EAAWG,EAAME,cAErC,IAAKD,EAAc/L,WAAY,EAAO,CAErC,GAAIqJ,GAAgBnE,EAAkBC,EAAQ4G,EAAe3G,EAAcqD,EAC3E3D,GAAUmH,mBAAoB5E,EAAc,KAAM/B,EAAU+D,EAAelE,EAAQ2G,QAM/E,CAEN,GAAIzC,GAAgBnE,EAAkBC,EAAQpF,EAAUqF,EAAcqD,EACtE3D,GAAUmH,mBAAoB5E,EAAc,KAAM/B,EAAU+D,EAAelE,EAAQ,aA9JrFjV,SAAQgc,KAAM,wBAAyBnC,EAAO,kBAyKhD,GAAIJ,GAAa7E,EAAUqH,gBAC3BC,EAAatH,EAAUuH,eACvBvH,GAAUwH,cAAe3C,EAAYyC,GAErCtF,EAAMhI,aAAc,IA+JtB,QAASyN,IAAKC,EAAQC,GAErBxiB,KAAKuiB,OAAsBnf,SAAXmf,EAAyBA,EAAS,GAAI5c,GACtD3F,KAAKwiB,UAA4Bpf,SAAdof,EAA4BA,EAAY,GAAI7c,GAuhBhE,QAAS8c,IAAO3gB,EAAGC,EAAGyC,EAAGke,GAExB1iB,KAAKuF,GAAKzD,GAAK,EACf9B,KAAKwF,GAAKzD,GAAK,EACf/B,KAAKyF,GAAKjB,GAAK,EACfxE,KAAK2iB,OAASD,GAASD,GAAMG,aAkU9B,QAASC,MAER7iB,KAAKsd,KAAO,EAgDb,QAASwF,MAmBR,QAASC,KAERC,EAAWC,aAAcnT,GAAU,GAIpC,QAASoT,KAERpT,EAASqT,kBAAmBH,EAAY5f,QAAW,GAzBpDT,OAAOC,eAAgB5C,KAAM,MAAQ6C,MAAOugB,OAE5CpjB,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKkD,KAAO,GACZlD,KAAKwC,KAAO,WAEZxC,KAAKqjB,OAAS,KACdrjB,KAAKe,YAELf,KAAKghB,GAAK8B,GAASQ,UAAU1G,OAE7B,IAAI/I,GAAW,GAAIlO,GACfmK,EAAW,GAAI2S,IACfO,EAAa,GAAI1d,GACjBuK,EAAQ,GAAIlK,GAAS,EAAG,EAAG,EAc/BmK,GAASyT,SAAUR,GACnBC,EAAWO,SAAUL,GAErBvgB,OAAO6gB,iBAAkBxjB,MACxB6T,UACC4P,YAAY,EACZ5gB,MAAOgR,GAER/D,UACC2T,YAAY,EACZ5gB,MAAOiN,GAERkT,YACCS,YAAY,EACZ5gB,MAAOmgB,GAERnT,OACC4T,YAAY,EACZ5gB,MAAOgN,GAERmE,iBACCnR,MAAO,GAAI+C,IAEZ8d,cACC7gB,MAAO,GAAImX,OAIbha,KAAK0gB,OAAS,GAAI9a,GAClB5F,KAAK6R,YAAc,GAAIjM,GAEvB5F,KAAK2jB,iBAAmBb,GAASc,wBACjC5jB,KAAK6jB,wBAAyB,EAE9B7jB,KAAKqd,OAAS,GAAIwF,IAClB7iB,KAAK+V,SAAU,EAEf/V,KAAK0d,YAAa,EAClB1d,KAAK8jB,eAAgB,EAErB9jB,KAAK2d,eAAgB,EACrB3d,KAAKgV,YAAc,EAEnBhV,KAAK+jB,YAEL/jB,KAAKgkB,eAAiB,KA4nBvB,QAASZ,MAAoB,MAAOa,MAMpC,QAASC,IAAOC,EAAOC,GAEtBpkB,KAAKmkB,MAAoB/gB,SAAV+gB,EAAwBA,EAAQ,GAAIxe,GACnD3F,KAAKokB,IAAgBhhB,SAARghB,EAAsBA,EAAM,GAAIze,GA6H9C,QAAS0e,IAAUtP,EAAG1M,EAAGic,GAExBtkB,KAAK+U,EAAY3R,SAAN2R,EAAoBA,EAAI,GAAIpP,GACvC3F,KAAKqI,EAAYjF,SAANiF,EAAoBA,EAAI,GAAI1C,GACvC3F,KAAKskB,EAAYlhB,SAANkhB,EAAoBA,EAAI,GAAI3e,GA4PxC,QAAS4e,IAAOxP,EAAG1M,EAAGic,EAAGpK,EAAQtK,EAAOmS,GAEvC/hB,KAAK+U,EAAIA,EACT/U,KAAKqI,EAAIA,EACTrI,KAAKskB,EAAIA,EAETtkB,KAAKka,OAAUA,GAAUA,EAAOsK,UAAatK,EAAS,GAAIvU,GAC1D3F,KAAKykB,cAAgB/F,MAAMgG,QAASxK,GAAWA,KAE/Cla,KAAK4P,MAASA,GAASA,EAAM+U,QAAW/U,EAAQ,GAAInD,GACpDzM,KAAK4W,aAAe8H,MAAMgG,QAAS9U,GAAUA,KAE7C5P,KAAK+hB,cAAkC3e,SAAlB2e,EAA8BA,EAAgB,EA4EpE,QAAS6C,IAAmBzM,GAE3B/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,oBAEZxC,KAAK4P,MAAQ,GAAInD,GAAO,UAExBzM,KAAKwG,IAAM,KAEXxG,KAAK6kB,MAAQ,KACb7kB,KAAK8kB,eAAiB,EAEtB9kB,KAAK+kB,YAAc,KAEnB/kB,KAAKwZ,SAAW,KAEhBxZ,KAAKglB,OAAS,KACdhlB,KAAKilB,QAAUC,GACfllB,KAAKmlB,aAAe,EACpBnlB,KAAKolB,gBAAkB,IAEvBplB,KAAKsY,WAAY,EACjBtY,KAAKuY,mBAAqB,EAC1BvY,KAAKqlB,iBAAmB,QACxBrlB,KAAKslB,kBAAoB,QAEzBtlB,KAAKyY,UAAW,EAChBzY,KAAK0Y,cAAe,EAEpB1Y,KAAKsW,QAAS,EAEdtW,KAAKoZ,UAAWjB,GA6CjB,QAASoN,IAAiB7e,EAAO8e,EAAUC,GAE1C,GAAK/G,MAAMgG,QAAShe,GAEnB,KAAM,IAAIgf,WAAW,wDAItB1lB,MAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAK0G,MAAQA,EACb1G,KAAKwlB,SAAWA,EAChBxlB,KAAKsE,MAAkBlB,SAAVsD,EAAsBA,EAAMV,OAASwf,EAAW,EAC7DxlB,KAAKylB,WAAaA,KAAe,EAEjCzlB,KAAK2lB,SAAU,EACf3lB,KAAK4lB,aAAgB/hB,OAAQ,EAAGS,MAAO,IAEvCtE,KAAKoE,QAAU,EAkShB,QAASyhB,IAAenf,EAAO8e,GAE9B,MAAO,IAAID,IAAiB,GAAIO,WAAWpf,GAAS8e,GAIrD,QAASO,IAAgBrf,EAAO8e,GAE/B,MAAO,IAAID,IAAiB,GAAIS,YAAYtf,GAAS8e,GAItD,QAASS,IAAuBvf,EAAO8e,GAEtC,MAAO,IAAID,IAAiB,GAAIW,mBAAmBxf,GAAS8e,GAI7D,QAASW,IAAgBzf,EAAO8e,GAE/B,MAAO,IAAID,IAAiB,GAAIa,YAAY1f,GAAS8e,GAItD,QAASa,IAAiB3f,EAAO8e,GAEhC,MAAO,IAAID,IAAiB,GAAIlY,aAAa3G,GAAS8e,GAIvD,QAASc,IAAgB5f,EAAO8e,GAE/B,MAAO,IAAID,IAAiB,GAAIje,YAAYZ,GAAS8e,GAItD,QAASe,IAAiB7f,EAAO8e,GAEhC,MAAO,IAAID,IAAiB,GAAIiB,aAAa9f,GAAS8e,GAIvD,QAASiB,IAAkB/f,EAAO8e,GAEjC,MAAO,IAAID,IAAiB,GAAIzf,cAAcY,GAAS8e,GAIxD,QAASkB,IAAkBhgB,EAAO8e,GAEjC,MAAO,IAAID,IAAiB,GAAIoB,cAAcjgB,GAAS8e,GAMxD,QAASoB,IAAwBlgB,EAAO8e,GAGvC,MADAvf,SAAQgc,KAAM,8GACP,GAAIsD,IAAiB7e,EAAO8e,GAAWqB,YAAY,GAa3D,QAASC,MAERnkB,OAAOC,eAAgB5C,KAAM,MAAQ6C,MAAOkkB,OAE5C/mB,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKkD,KAAO,GACZlD,KAAKwC,KAAO,WAEZxC,KAAKmN,YACLnN,KAAKgnB,UACLhnB,KAAKoN,SACLpN,KAAKinB,mBAELjnB,KAAK0Y,gBACL1Y,KAAK2Y,gBAEL3Y,KAAKknB,eACLlnB,KAAKmnB,eAELnnB,KAAKonB,iBAELpnB,KAAKqnB,YAAc,KACnBrnB,KAAKsnB,eAAiB,KAItBtnB,KAAKunB,oBAAqB,EAC1BvnB,KAAKwnB,oBAAqB,EAC1BxnB,KAAKynB,eAAgB,EACrBznB,KAAK0nB,mBAAoB,EACzB1nB,KAAK2nB,kBAAmB,EACxB3nB,KAAK4nB,yBAA0B,EAC/B5nB,KAAK6nB,kBAAmB,EAgqCzB,QAASd,MAAoB,MAAOe,MAMpC,QAASC,MAERplB,OAAOC,eAAgB5C,KAAM,MAAQ6C,MAAOkkB,OAE5C/mB,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKkD,KAAO,GACZlD,KAAKwC,KAAO,iBAEZxC,KAAKgoB,WACLhoB,KAAKmN,YACLnN,KAAKioB,WACLjoB,KAAKgnB,UACLhnB,KAAKkoB,OACLloB,KAAKmoB,QAELnoB,KAAKyhB,UAELzhB,KAAK0Y,gBAEL1Y,KAAKknB,eACLlnB,KAAKmnB,eAILnnB,KAAKqnB,YAAc,KACnBrnB,KAAKsnB,eAAiB,KAItBtnB,KAAKwnB,oBAAqB,EAC1BxnB,KAAK0nB,mBAAoB,EACzB1nB,KAAK2nB,kBAAmB,EACxB3nB,KAAKynB,eAAgB,EACrBznB,KAAK6nB,kBAAmB,EA8PzB,QAASO,MAERzlB,OAAOC,eAAgB5C,KAAM,MAAQ6C,MAAOkkB,OAE5C/mB,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKkD,KAAO,GACZlD,KAAKwC,KAAO,iBAEZxC,KAAKqoB,MAAQ,KACbroB,KAAKoP,cAELpP,KAAK+b,mBAEL/b,KAAKyhB,UAELzhB,KAAKqnB,YAAc,KACnBrnB,KAAKsnB,eAAiB,KAEtBtnB,KAAKsoB,WAAcnE,MAAO,EAAG7f,MAAOyI,EAAAA,GAs/BrC,QAASwb,IAAMlN,EAAUvF,GAExBgN,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,OAEZxC,KAAKqb,SAAwBjY,SAAbiY,EAAyBA,EAAW,GAAI+M,IACxDpoB,KAAK8V,SAAwB1S,SAAb0S,EAAyBA,EAAW,GAAI8O,KAAqBhV,MAAuB,SAAhB5M,KAAKwlB,WAEzFxoB,KAAKyoB,SAAWC,GAEhB1oB,KAAK2oB,qBAwUN,QAASC,IAAmBvoB,EAAOC,EAAQuoB,EAAOC,EAAeC,EAAgBC,GAyDhF,QAASC,GAAsBzoB,EAAG0oB,EAAGC,GAEpC,GAAIhc,GAAW,CAOf,OAJAA,KAAa3M,EAAI,IAAM0oB,EAAI,GAAK,EAChC/b,IAAa3M,EAAI,IAAM2oB,EAAI,GAAK,EAChChc,IAAagc,EAAI,IAAMD,EAAI,GAAK,EAMjC,QAASE,GAAqB5oB,EAAG0oB,EAAGC,GAEnC,GAAId,GAAQ,CAOZ,OAJAA,IAAS7nB,EAAI0oB,EAAI,EACjBb,GAAS7nB,EAAI2oB,EAAI,EACjBd,GAASc,EAAID,EAAI,EAEF,EAARb,EAIR,QAASgB,GAAYC,EAAG5hB,EAAGlH,EAAG+oB,EAAMC,EAAMnpB,EAAOC,EAAQuoB,EAAOY,EAAOC,EAAO3H,GAmB7E,IAAM,GAjBF4H,GAAetpB,EAAQopB,EACvBG,EAAgBtpB,EAASopB,EAEzBG,EAAYxpB,EAAQ,EACpBypB,EAAaxpB,EAAS,EACtBypB,EAAYlB,EAAQ,EAEpBmB,EAASP,EAAQ,EACjBQ,EAASP,EAAQ,EAEjBQ,EAAgB,EAChBC,EAAa,EAEbC,EAAS,GAAIzkB,GAIP0kB,EAAK,EAAQJ,EAALI,EAAaA,IAI9B,IAAM,GAFFtoB,GAAIsoB,EAAKT,EAAgBE,EAEnBQ,EAAK,EAAQN,EAALM,EAAaA,IAAQ,CAEtC,GAAIxoB,GAAIwoB,EAAKX,EAAeE,CAG5BO,GAAQd,GAAMxnB,EAAIynB,EAClBa,EAAQ1iB,GAAM3F,EAAIynB,EAClBY,EAAQ5pB,GAAMupB,EAGd5c,EAAUod,GAAuBH,EAAOtoB,EACxCqL,EAAUod,EAAqB,GAAMH,EAAOroB,EAC5CoL,EAAUod,EAAqB,GAAMH,EAAO5lB,EAG5C4lB,EAAQd,GAAM,EACdc,EAAQ1iB,GAAM,EACd0iB,EAAQ5pB,GAAMqoB,EAAQ,EAAI,EAAI,GAG9BZ,EAASsC,GAAuBH,EAAOtoB,EACvCmmB,EAASsC,EAAqB,GAAMH,EAAOroB,EAC3CkmB,EAASsC,EAAqB,GAAMH,EAAO5lB,EAG3C0jB,EAAKsC,GAAmBF,EAAKb,EAC7BvB,EAAKsC,EAAiB,GAAM,EAAMH,EAAKX,EAGvCa,GAAsB,EACtBC,GAAkB,EAClBN,GAAiB,EAUnB,IAAMG,EAAK,EAAQX,EAALW,EAAYA,IAEzB,IAAMC,EAAK,EAAQb,EAALa,EAAYA,IAAQ,CAGjC,GAAIvV,GAAI0V,EAAmBH,EAAKN,EAASK,EACrChiB,EAAIoiB,EAAmBH,EAAKN,GAAWK,EAAK,GAC5C/F,EAAImG,GAAqBH,EAAK,GAAMN,GAAWK,EAAK,GACpDlB,EAAIsB,GAAqBH,EAAK,GAAMN,EAASK,CAGjDrC,GAAS0C,GAAsB3V,EAC/BiT,EAAS0C,EAAoB,GAAMriB,EACnC2f,EAAS0C,EAAoB,GAAMvB,EAGnCnB,EAAS0C,EAAoB,GAAMriB,EACnC2f,EAAS0C,EAAoB,GAAMpG,EACnC0D,EAAS0C,EAAoB,GAAMvB,EAGnCuB,GAAqB,EACrBP,GAAc,EAOhBtN,EAAM8N,SAAUC,EAAYT,EAAYpI,GAGxC6I,GAAcT,EAGdM,GAAoBP,EApLrB9B,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,oBAEZxC,KAAKmY,YACJ9X,MAAOA,EACPC,OAAQA,EACRuoB,MAAOA,EACPC,cAAeA,EACfC,eAAgBA,EAChBC,cAAeA,EAGhB,IAAInM,GAAQ7c,IAGZ8oB,GAAgB9lB,KAAK6nB,MAAO/B,IAAmB,EAC/CC,EAAiB/lB,KAAK6nB,MAAO9B,IAAoB,EACjDC,EAAgBhmB,KAAK6nB,MAAO7B,IAAmB,CAG/C,IAAI8B,GAAc7B,EAAsBH,EAAeC,EAAgBC,GACnE+B,EAAa3B,EAAqBN,EAAeC,EAAgBC,GAGjEhB,EAAU,IAAM+C,EAAa,MAAQvE,YAAcnZ,aAAe0d,GAClE5d,EAAW,GAAIrH,cAA4B,EAAdglB,GAC7B7C,EAAU,GAAIniB,cAA4B,EAAdglB,GAC5B5C,EAAM,GAAIpiB,cAA4B,EAAdglB,GAGxBP,EAAqB,EACrBC,EAAiB,EACjBE,EAAoB,EACpBD,EAAmB,EAGnBG,EAAa,CAGjBvB,GAAY,IAAK,IAAK,IAAK,GAAK,GAAKR,EAAOvoB,EAAUD,EAAQ2oB,EAAeD,EAAgB,GAC7FM,EAAY,IAAK,IAAK,IAAO,EAAG,GAAKR,EAAOvoB,GAAUD,EAAQ2oB,EAAeD,EAAgB,GAC7FM,EAAY,IAAK,IAAK,IAAO,EAAK,EAAGhpB,EAAOwoB,EAAUvoB,EAAQwoB,EAAeE,EAAgB,GAC7FK,EAAY,IAAK,IAAK,IAAO,EAAG,GAAKhpB,EAAOwoB,GAAUvoB,EAAQwoB,EAAeE,EAAgB,GAC7FK,EAAY,IAAK,IAAK,IAAO,EAAG,GAAKhpB,EAAOC,EAAUuoB,EAAQC,EAAeC,EAAgB,GAC7FM,EAAY,IAAK,IAAK,IAAK,GAAK,GAAKhpB,EAAOC,GAAUuoB,EAAQC,EAAeC,EAAgB,GAG7F/oB,KAAKgrB,SAAU,GAAIzF,IAAiByC,EAAS,IAC7ChoB,KAAKirB,aAAc,WAAY,GAAI1F,IAAiBpY,EAAU,IAC9DnN,KAAKirB,aAAc,SAAU,GAAI1F,IAAiB0C,EAAS,IAC3DjoB,KAAKirB,aAAc,KAAM,GAAI1F,IAAiB2C,EAAK,IA+IpD,QAASgD,IAAqB7qB,EAAOC,EAAQwoB,EAAeC,GAE3DX,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,sBAEZxC,KAAKmY,YACJ9X,MAAOA,EACPC,OAAQA,EACRwoB,cAAeA,EACfC,eAAgBA,EAsBjB,KAAM,GAnBFoC,GAAa9qB,EAAQ,EACrB+qB,EAAc9qB,EAAS,EAEvBmpB,EAAQzmB,KAAK6nB,MAAO/B,IAAmB,EACvCY,EAAQ1mB,KAAK6nB,MAAO9B,IAAoB,EAExCiB,EAASP,EAAQ,EACjBQ,EAASP,EAAQ,EAEjB2B,EAAgBhrB,EAAQopB,EACxB6B,EAAiBhrB,EAASopB,EAE1Bvc,EAAW,GAAIrH,cAAckkB,EAASC,EAAS,GAC/ChC,EAAU,GAAIniB,cAAckkB,EAASC,EAAS,GAC9C/B,EAAM,GAAIpiB,cAAckkB,EAASC,EAAS,GAE1CpmB,EAAS,EACT0nB,EAAU,EAEJlB,EAAK,EAAQJ,EAALI,EAAaA,IAI9B,IAAM,GAFFtoB,GAAIsoB,EAAKiB,EAAiBF,EAEpBd,EAAK,EAAQN,EAALM,EAAaA,IAAQ,CAEtC,GAAIxoB,GAAIwoB,EAAKe,EAAgBF,CAE7Bhe,GAAUtJ,GAAW/B,EACrBqL,EAAUtJ,EAAS,IAAQ9B,EAE3BkmB,EAASpkB,EAAS,GAAM,EAExBqkB,EAAKqD,GAAYjB,EAAKb,EACtBvB,EAAKqD,EAAU,GAAM,EAAMlB,EAAKX,EAEhC7lB,GAAU,EACV0nB,GAAW,EAMb1nB,EAAS,CAIT,KAAM,GAFFmkB,GAAU,IAAQ7a,EAASnH,OAAS,EAAM,MAAQwgB,YAAcnZ,aAAeoc,EAAQC,EAAQ,GAEzFW,EAAK,EAAQX,EAALW,EAAYA,IAE7B,IAAM,GAAIC,GAAK,EAAQb,EAALa,EAAYA,IAAQ,CAErC,GAAIvV,GAAIuV,EAAKN,EAASK,EAClBhiB,EAAIiiB,EAAKN,GAAWK,EAAK,GACzB/F,EAAMgG,EAAK,EAAMN,GAAWK,EAAK,GACjClB,EAAMmB,EAAK,EAAMN,EAASK,CAE9BrC,GAASnkB,GAAWkR,EACpBiT,EAASnkB,EAAS,GAAMwE,EACxB2f,EAASnkB,EAAS,GAAMslB,EAExBnB,EAASnkB,EAAS,GAAMwE,EACxB2f,EAASnkB,EAAS,GAAMygB,EACxB0D,EAASnkB,EAAS,GAAMslB,EAExBtlB,GAAU,EAMZ7D,KAAKgrB,SAAU,GAAIzF,IAAiByC,EAAS,IAC7ChoB,KAAKirB,aAAc,WAAY,GAAI1F,IAAiBpY,EAAU,IAC9DnN,KAAKirB,aAAc,SAAU,GAAI1F,IAAiB0C,EAAS,IAC3DjoB,KAAKirB,aAAc,KAAM,GAAI1F,IAAiB2C,EAAK,IAapD,QAASsD,MAER1I,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,SAEZxC,KAAK+R,mBAAqB,GAAInM,GAC9B5F,KAAKiS,iBAAmB,GAAIrM,GAiE7B,QAAS6lB,IAAmBC,EAAKC,EAAQnW,EAAMC,GAE9C+V,GAAOrmB,KAAMnF,MAEbA,KAAKwC,KAAO,oBAEZxC,KAAK0rB,IAActoB,SAARsoB,EAAoBA,EAAM,GACrC1rB,KAAK4rB,KAAO,EAEZ5rB,KAAKwV,KAAgBpS,SAAToS,EAAqBA,EAAO,GACxCxV,KAAKyV,IAAcrS,SAARqS,EAAoBA,EAAM,IACrCzV,KAAK6rB,MAAQ,GAEb7rB,KAAK2rB,OAAoBvoB,SAAXuoB,EAAuBA,EAAS,EAC9C3rB,KAAK8rB,KAAO,KAEZ9rB,KAAK+rB,UAAY,GACjB/rB,KAAKgsB,WAAa,EAElBhsB,KAAKqgB,yBAuMN,QAAS4L,IAAoBC,EAAMC,EAAOC,EAAKC,EAAQ7W,EAAMC,GAE5D+V,GAAOrmB,KAAMnF,MAEbA,KAAKwC,KAAO,qBAEZxC,KAAK4rB,KAAO,EACZ5rB,KAAK8rB,KAAO,KAEZ9rB,KAAKksB,KAAOA,EACZlsB,KAAKmsB,MAAQA,EACbnsB,KAAKosB,IAAMA,EACXpsB,KAAKqsB,OAASA,EAEdrsB,KAAKwV,KAAkBpS,SAAToS,EAAuBA,EAAO,GAC5CxV,KAAKyV,IAAgBrS,SAARqS,EAAsBA,EAAM,IAEzCzV,KAAKqgB,yBAwGN,QAASiM,IAA4B7kB,EAAImR,EAAY2T,GAIpD,QAASC,GAAS3pB,GAEjB4pB,EAAO5pB,EAMR,QAASmoB,GAAU3C,GAEbA,EAAM3hB,gBAAiB8f,cAAe5N,EAAW8T,IAAK,2BAE1DlqB,EAAOiF,EAAGklB,aACVxiB,EAAO,IAIP3H,EAAOiF,EAAGoL,eACV1I,EAAO,GAMT,QAAS/I,GAAQ+iB,EAAO7f,GAEvBmD,EAAGkL,aAAc8Z,EAAMnoB,EAAO9B,EAAM2hB,EAAQha,GAE5CoiB,EAAWK,QACXL,EAAWpf,UAAY7I,EAElBmoB,IAAShlB,EAAGmL,YAAY2Z,EAAWnf,OAAS9I,EAAQ,GAI1D,QAASuoB,GAAiBxR,EAAU8I,EAAO7f,GAE1C,GAAIwoB,GAAYlU,EAAW8T,IAAK,yBAEhC,OAAmB,QAAdI,MAEJ7mB,SAAQC,MAAO,mIAKhB4mB,EAAUC,2BAA4BN,EAAMnoB,EAAO9B,EAAM2hB,EAAQha,EAAMkR,EAAS2R,mBAEhFT,EAAWK,QACXL,EAAWpf,UAAY7I,EAAQ+W,EAAS2R,uBAEnCP,IAAShlB,EAAGmL,YAAY2Z,EAAWnf,OAASiO,EAAS2R,kBAAoB1oB,EAAQ,KArDvF,GAAImoB,GAQAjqB,EAAM2H,CAiDV,QAECqiB,QAASA,EACTxB,SAAUA,EACV5pB,OAAQA,EACRyrB,gBAAiBA,GAUnB,QAASI,IAAqBxlB,EAAImR,EAAY2T,GAI7C,QAASC,GAAS3pB,GAEjB4pB,EAAO5pB,EAIR,QAASzB,GAAQ+iB,EAAO7f,GAEvBmD,EAAGylB,WAAYT,EAAMtI,EAAO7f,GAE5BioB,EAAWK,QACXL,EAAWpf,UAAY7I,EAElBmoB,IAAShlB,EAAGmL,YAAY2Z,EAAWnf,OAAS9I,EAAQ,GAI1D,QAASuoB,GAAiBxR,GAEzB,GAAIyR,GAAYlU,EAAW8T,IAAK,yBAEhC,IAAmB,OAAdI,EAGJ,WADA7mB,SAAQC,MAAO,iIAKhB,IAAI2N,GAAWwH,EAASjM,WAAWyE,SAE/BvP,EAAQ,CAENuP,IAAYA,EAASsZ,8BAE1B7oB,EAAQuP,EAASuZ,KAAK9oB,MAEtBwoB,EAAUO,yBAA0BZ,EAAM,EAAGnoB,EAAO+W,EAAS2R,qBAI7D1oB,EAAQuP,EAASvP;AAEjBwoB,EAAUO,yBAA0BZ,EAAM,EAAGnoB,EAAO+W,EAAS2R,oBAI9DT,EAAWK,QACXL,EAAWpf,UAAY7I,EAAQ+W,EAAS2R,kBAEnCP,IAAShlB,EAAGmL,YAAY2Z,EAAWnf,OAASiO,EAAS2R,kBAAoB1oB,EAAQ,GAnDvF,GAAImoB,EAuDJ,QACCD,QAASA,EACTprB,OAAQA,EACRyrB,gBAAiBA,GAKnB,QAASS,MAER,GAAIhX,KAEJ,QAECoW,IAAK,SAAW5M,GAEf,GAA4B1c,SAAvBkT,EAAQwJ,EAAMhV,IAElB,MAAOwL,GAAQwJ,EAAMhV,GAItB,IAAI0E,EAEJ,QAASsQ,EAAMtd,MAEd,IAAK,mBACJgN,GACCgT,UAAW,GAAI7c,GACfiK,MAAO,GAAInD,GAEXsT,QAAQ,EACRwN,WAAY,EACZC,aAAc,EACdC,cAAe,GAAI5rB,GAEpB,MAED,KAAK,YACJ2N,GACCqE,SAAU,GAAIlO,GACd6c,UAAW,GAAI7c,GACfiK,MAAO,GAAInD,GACXihB,SAAU,EACVC,QAAS,EACTC,YAAa,EACbC,MAAO,EAEP9N,QAAQ,EACRwN,WAAY,EACZC,aAAc,EACdC,cAAe,GAAI5rB,GAEpB,MAED,KAAK,aACJ2N,GACCqE,SAAU,GAAIlO,GACdiK,MAAO,GAAInD,GACXihB,SAAU,EACVG,MAAO,EAEP9N,QAAQ,EACRwN,WAAY,EACZC,aAAc,EACdC,cAAe,GAAI5rB,GAEpB,MAED,KAAK,kBACJ2N,GACCgT,UAAW,GAAI7c,GACfmoB,SAAU,GAAIrhB,GACdshB,YAAa,GAAIthB,IAQpB,MAFA6J,GAAQwJ,EAAMhV,IAAO0E,EAEdA,IAYV,QAASwe,IAAgBC,GAIxB,IAAM,GAFFC,GAAQD,EAAOE,MAAO,MAEhBjnB,EAAI,EAAGA,EAAIgnB,EAAMloB,OAAQkB,IAElCgnB,EAAOhnB,GAAQA,EAAI,EAAM,KAAOgnB,EAAOhnB,EAIxC,OAAOgnB,GAAMjf,KAAM,MAIpB,QAASmf,IAAa3mB,EAAIjF,EAAMyrB,GAE/B,GAAIlf,GAAStH,EAAGuI,aAAcxN,EAoB9B,OAlBAiF,GAAG4I,aAActB,EAAQkf,GACzBxmB,EAAG6I,cAAevB,GAEbtH,EAAG4mB,mBAAoBtf,EAAQtH,EAAG6mB,mBAAqB,GAE3DroB,QAAQC,MAAO,+CAIuB,KAAlCuB,EAAG8mB,iBAAkBxf,IAEzB9I,QAAQgc,KAAM,2CAA4Czf,IAASiF,EAAGyI,cAAgB,SAAW,WAAYzI,EAAG8mB,iBAAkBxf,GAAUif,GAAgBC,IAOtJlf,EAMR,QAASyf,IAAuB9rB,GAE/B,OAASA,GAER,IAAKyB,IACJ,OAAS,SAAS,YACnB,KAAKsqB,IACJ,OAAS,OAAO,YACjB,KAAKC,IACJ,OAAS,OAAO,YACjB,KAAKC,IACJ,OAAS,OAAO,iBACjB,KAAKC,IACJ,OAAS,OAAO,kBACjB,KAAKC,IACJ,OAAS,OAAO,mBACjB,KAAKC,IACJ,OAAS,QAAQ,mCAClB,SACC,KAAM,IAAIC,OAAO,yBAA2BrsB,IAM/C,QAASssB,IAA0BC,EAAcvsB,GAEhD,GAAIwsB,GAAaV,GAAuB9rB,EACxC,OAAO,QAAUusB,EAAe,2BAA6BC,EAAY,GAAM,WAAaA,EAAY,GAAM,MAI/G,QAASC,IAA0BF,EAAcvsB,GAEhD,GAAIwsB,GAAaV,GAAuB9rB,EACxC,OAAO,QAAUusB,EAAe,mCAAqCC,EAAY,GAAMA,EAAY,GAAM,MAI1G,QAASE,IAAwBH,EAAcI,GAE9C,GAAIC,EAEJ,QAASD,GAER,IAAKE,IACJD,EAAkB,QAClB,MAED,KAAKE,IACJF,EAAkB,UAClB,MAED,KAAKG,IACJH,EAAkB,YAClB,MAED,KAAKI,IACJJ,EAAkB,iBAClB,MAED,SACC,KAAM,IAAIP,OAAO,4BAA8BM,GAIjD,MAAO,QAAUJ,EAAe,2BAA6BK,EAAkB,0BAIhF,QAASK,IAAoB/W,EAAYT,EAAYyX,GAEpDhX,EAAaA,KAEb,IAAIiX,IACDjX,EAAWC,aAAeV,EAAW2X,cAAgB3X,EAAW4X,SAAW5X,EAAW6X,WAAa7X,EAAW8X,YAAgB,kDAAoD,IAClLrX,EAAWE,WAAaX,EAAW+X,yBAA4BN,EAAmBlD,IAAK,kBAAqB,wCAA0C,GACtJ9T,EAAW,aAAiBgX,EAAmBlD,IAAK,sBAAyB,2CAA6C,IAC1H9T,EAAWI,kBAAoBb,EAAW6M,SAAY4K,EAAmBlD,IAAK,0BAA6B,gDAAkD,GAGhK,OAAOmD,GAAOM,OAAQC,IAAkBnhB,KAAM,MAI/C,QAASohB,IAAiBjY,GAEzB,GAAIyX,KAEJ,KAAM,GAAI3sB,KAAQkV,GAAU,CAE3B,GAAIvV,GAAQuV,EAASlV,EAEhBL,MAAU,GAEfgtB,EAAOvkB,KAAM,WAAapI,EAAO,IAAML,GAIxC,MAAOgtB,GAAO5gB,KAAM,MAIrB,QAASqhB,IAAyB7oB,EAAI0E,EAASokB,GAM9C,IAAM,GAJFnhB,MAEAtI,EAAIW,EAAG2E,oBAAqBD,EAAS1E,EAAG+oB,mBAElCtpB,EAAI,EAAOJ,EAAJI,EAAOA,IAAO,CAE9B,GAAIoF,GAAO7E,EAAGgpB,gBAAiBtkB,EAASjF,GACpChE,EAAOoJ,EAAKpJ,IAIhBkM,GAAYlM,GAASuE,EAAG6H,kBAAmBnD,EAASjJ,GAIrD,MAAOkM,GAIR,QAASghB,IAAiBnC,GAEzB,MAAkB,KAAXA,EAIR,QAASyC,IAAkBzC,EAAQ9V,GAElC,MAAO8V,GACL0C,QAAS,kBAAmBxY,EAAWyY,cACvCD,QAAS,mBAAoBxY,EAAW0Y,eACxCF,QAAS,oBAAqBxY,EAAW2Y,gBACzCH,QAAS,mBAAoBxY,EAAW4Y,eAI3C,QAASC,IAAe/C,GAIvB,QAAS0C,GAAS/kB,EAAOqlB,GAExB,GAAIN,GAAUO,GAAaD,EAE3B,IAAiB7tB,SAAZutB,EAEJ,KAAM,IAAI5B,OAAO,6BAA+BkC,EAAU,IAI3D,OAAOD,IAAeL,GAZvB,GAAIQ,GAAU,yBAgBd,OAAOlD,GAAO0C,QAASQ,EAASR,GAIjC,QAASS,IAAanD,GAIrB,QAAS0C,GAAS/kB,EAAOuY,EAAOC,EAAKiN,GAIpC,IAAM,GAFFC,GAAS,GAEHpqB,EAAIqqB,SAAUpN,GAASjd,EAAIqqB,SAAUnN,GAAOld,IAErDoqB,GAAUD,EAAQV,QAAS,WAAY,KAAOzpB,EAAI,KAInD,OAAOoqB,GAZR,GAAIH,GAAU,qEAgBd,OAAOlD,GAAO0C,QAASQ,EAASR,GAIjC,QAASa,IAAcpqB,EAAUqqB,EAAM3b,EAAUqC,GAEhD,GAAI1Q,GAAKL,EAASqJ,QAEdmI,EAAa9C,EAAS8C,WACtBR,EAAUtC,EAASsC,QAEnBpJ,EAAe8G,EAAS4b,cAAc1iB,aACtCE,EAAiB4G,EAAS4b,cAAcxiB,eAExCyiB,EAAsB,sBAErBxZ,GAAWyZ,gBAAkBnS,GAEjCkS,EAAsB,qBAEXxZ,EAAWyZ,gBAAkBC,KAExCF,EAAsB,0BAIvB,IAAIG,GAAmB,mBACnBC,EAAmB,yBACnBC,EAAuB,0BAE3B,IAAK7Z,EAAW6M,OAAS,CAExB,OAASlP,EAASkP,OAAO9iB,SAExB,IAAKmE,IACL,IAAK4rB,IACJH,EAAmB,kBACnB,MAED,KAAKI,IACL,IAAKC,IACJL,EAAmB,qBACnB,MAED,KAAKM,IACL,IAAKC,IACJP,EAAmB,qBACnB,MAED,KAAKQ,IACJR,EAAmB,qBAKrB,OAAShc,EAASkP,OAAO9iB,SAExB,IAAK+vB,IACL,IAAKI,IACJN,EAAmB,yBAKrB,OAASjc,EAASmP,SAEjB,IAAKC,IACJ8M,EAAuB,0BACvB,MAED,KAAKO,IACJP,EAAuB,qBACvB,MAED,KAAKQ,IACJR,EAAuB,uBAO1B,GAcIS,GAAcC,EAddC,EAAsBvrB,EAASwrB,YAAc,EAAMxrB,EAASwrB,YAAc,EAM1EC,EAAmBlD,GAAoB/W,EAAYT,EAAY/Q,EAASwR,YAExEka,EAAgBzC,GAAiBjY,GAIjCjM,EAAU1E,EAAG0H,eAIZ2G,GAASid,qBAEbN,GAECK,EAEA,MAEC3C,OAAQC,IAAkBnhB,KAAM,MAElCyjB,GAECG,EACAC,EAEA,MAEC3C,OAAQC,IAAkBnhB,KAAM,QAIlCwjB,GAEC,aAAeta,EAAWT,UAAY,UACtC,aAAeS,EAAWT,UAAY,QAEtC,uBAAyB5B,EAAS4b,cAAcxuB,KAEhD4vB,EAEA3a,EAAW6a,uBAAyB,0BAA4B,GAEhE,wBAA0BL,EAE1B,qBAAuBxa,EAAW8a,SAElC9a,EAAW3R,IAAM,kBAAoB,GACrC2R,EAAW6M,OAAS,qBAAuB,GAC3C7M,EAAW6M,OAAS,WAAa+M,EAAmB,GACpD5Z,EAAW+a,SAAW,uBAAyB,GAC/C/a,EAAW0M,MAAQ,oBAAsB,GACzC1M,EAAWgb,YAAc,0BAA4B,GACrDhb,EAAW4X,QAAU,sBAAwB,GAC7C5X,EAAW6X,UAAY,wBAA0B,GACjD7X,EAAWsB,iBAAmBtB,EAAW6a,uBAAyB,8BAAgC,GAClG7a,EAAW4M,YAAc,0BAA4B,GACrD5M,EAAWib,aAAe,2BAA6B,GACvDjb,EAAWkb,aAAe,2BAA6B,GACvDlb,EAAWqB,SAAW,uBAAyB,GAC/CrB,EAAWvB,aAAe,oBAAsB,GAEhDuB,EAAW8X,YAAc,sBAAwB,GAEjD9X,EAAWM,SAAW,uBAAyB,GAC/CN,EAAWmb,iBAAmB,uBAAyB,GAEvDnb,EAAWO,aAAe,2BAA6B,GACvDP,EAAWQ,cAAgBR,EAAW8X,eAAgB,EAAQ,2BAA6B,GAC3F9X,EAAWob,YAAc,uBAAyB,GAClDpb,EAAWqb,UAAY,qBAAuB,GAE9C,+BAAiCrb,EAAWsb,kBAE5Ctb,EAAWub,iBAAmB,wBAA0B,GACxDvb,EAAWub,iBAAmB,WAAa/B,EAAsB,GAEjExZ,EAAWwb,gBAAkB,8BAAgC,GAE7Dxb,EAAW+X,uBAAyB,0BAA4B,GAChE/X,EAAW+X,wBAA0B9oB,EAASwR,WAAW8T,IAAK,kBAAqB,8BAAgC,GAEnH,4BACA,gCACA,iCACA,2BACA,6BACA,+BAEA,2BACA,yBACA,qBAEA,mBAEA,yBAEA,SAEA,0BAEA,gCACA,gCACA,gCACA,gCAEA,2BAEA,iCACA,iCACA,iCACA,iCAEA,SAEA,iCACA,iCACA,iCACA,iCAEA,UAEA,SAEA,sBAEA,6BACA,8BAEA,SAEA,MAECyD,OAAQC,IAAkBnhB,KAAM,MAElCyjB,GAECG,EAEA,aAAe1a,EAAWT,UAAY,UACtC,aAAeS,EAAWT,UAAY,QAEtC,uBAAyB5B,EAAS4b,cAAcxuB,KAEhD4vB,EAEA3a,EAAW7D,UAAY,qBAAuB6D,EAAW7D,UAAY,GAErE,wBAA0Bqe,EAExBxa,EAAWyb,QAAUzb,EAAW7C,IAAQ,kBAAoB,GAC5D6C,EAAWyb,QAAUzb,EAAW0b,OAAW,mBAAqB,GAElE1b,EAAW3R,IAAM,kBAAoB,GACrC2R,EAAW6M,OAAS,qBAAuB,GAC3C7M,EAAW6M,OAAS,WAAa8M,EAAmB,GACpD3Z,EAAW6M,OAAS,WAAa+M,EAAmB,GACpD5Z,EAAW6M,OAAS,WAAagN,EAAuB,GACxD7Z,EAAW+a,SAAW,uBAAyB,GAC/C/a,EAAW0M,MAAQ,oBAAsB,GACzC1M,EAAWgb,YAAc,0BAA4B,GACrDhb,EAAW4X,QAAU,sBAAwB,GAC7C5X,EAAW6X,UAAY,wBAA0B,GACjD7X,EAAW4M,YAAc,0BAA4B,GACrD5M,EAAWib,aAAe,2BAA6B,GACvDjb,EAAWkb,aAAe,2BAA6B,GACvDlb,EAAWqB,SAAW,uBAAyB,GAC/CrB,EAAWvB,aAAe,oBAAsB,GAEhDuB,EAAW8X,YAAc,sBAAwB,GAEjD9X,EAAWob,YAAc,uBAAyB,GAClDpb,EAAWqb,UAAY,qBAAuB,GAE9C,+BAAiCrb,EAAWsb,kBAE5Ctb,EAAWub,iBAAmB,wBAA0B,GACxDvb,EAAWub,iBAAmB,WAAa/B,EAAsB,GAEjExZ,EAAWL,mBAAqB,8BAAgC,GAEhEK,EAAW2b,wBAA0B,oCAAsC,GAE3E3b,EAAW+X,uBAAyB,0BAA4B,GAChE/X,EAAW+X,wBAA0B9oB,EAASwR,WAAW8T,IAAK,kBAAqB,8BAAgC,GAEnHvU,EAAW6M,QAAU5d,EAASwR,WAAW8T,IAAK,0BAA6B,0BAA4B,GAEvG,2BACA,+BAEEvU,EAAWkX,cAAgB0E,GAAkB,uBAAyB,GACtE5b,EAAWkX,cAAgB0E,GAAkB7C,GAAa,0BAAgC,GAC1F/Y,EAAWkX,cAAgB0E,GAAkB3E,GAAwB,cAAejX,EAAWkX,aAAgB,GAE/GlX,EAAW6b,gBAAkB7b,EAAW8b,aAAe9b,EAAW+b,gBAAkB/b,EAAWgc,oBAAwBjD,GAAa,wBAA8B,GACpK/Y,EAAW8b,YAAcjF,GAA0B,mBAAoB7W,EAAW8b,aAAgB,GAClG9b,EAAW+b,eAAiBlF,GAA0B,sBAAuB7W,EAAW+b,gBAAmB,GAC3G/b,EAAWgc,oBAAsBnF,GAA0B,2BAA4B7W,EAAWgc,qBAAwB,GAC1Hhc,EAAW6b,eAAiB7E,GAA0B,sBAAuBhX,EAAW6b,gBAAmB,GAE3G7b,EAAWmB,aAAe,yBAA2BxD,EAASwD,aAAe,GAE7E,MAEC6W,OAAQC,IAAkBnhB,KAAM,OAInCD,EAAegiB,GAAehiB,EAAcmJ,GAC5CnJ,EAAe0hB,GAAkB1hB,EAAcmJ,GAE/CjJ,EAAiB8hB,GAAe9hB,EAAgBiJ,GAChDjJ,EAAiBwhB,GAAkBxhB,EAAgBiJ,GAE5CrC,EAASse,mBAEfplB,EAAeoiB,GAAapiB,GAC5BE,EAAiBkiB,GAAaliB,GAI/B,IAAImlB,GAAa5B,EAAezjB,EAC5BslB,EAAe5B,EAAiBxjB,EAKhCqlB,EAAiBnG,GAAa3mB,EAAIA,EAAGyI,cAAemkB,GACpDG,EAAmBpG,GAAa3mB,EAAIA,EAAGwI,gBAAiBqkB,EAE5D7sB,GAAG8I,aAAcpE,EAASooB,GAC1B9sB,EAAG8I,aAAcpE,EAASqoB,GAIYpxB,SAAjC0S,EAASqD,oBAEb1R,EAAGgtB,mBAAoBtoB,EAAS,EAAG2J,EAASqD,qBAEjChB,EAAWO,gBAAiB,GAGvCjR,EAAGgtB,mBAAoBtoB,EAAS,EAAG,YAIpC1E,EAAG+I,YAAarE,EAEhB,IAAIuoB,GAAajtB,EAAGktB,kBAAmBxoB,GACnCyoB,EAAYntB,EAAG8mB,iBAAkBgG,GACjCM,EAAcptB,EAAG8mB,iBAAkBiG,GAEnCM,GAAW,EACXC,GAAkB,CAKjBttB,GAAG2E,oBAAqBD,EAAS1E,EAAGutB,gBAAkB,GAE1DF,GAAW,EAEX7uB,QAAQC,MAAO,qCAAsCuB,EAAGwtB,WAAY,qBAAsBxtB,EAAG2E,oBAAqBD,EAAS1E,EAAGytB,iBAAmB,uBAAwBR,EAAYE,EAAWC,IAEtK,KAAfH,EAEXzuB,QAAQgc,KAAM,6CAA8CyS,IAEnC,KAAdE,GAAoC,KAAhBC,KAE/BE,GAAkB,GAIdA,IAEJ/0B,KAAKm1B,aAEJL,SAAUA,EACVhf,SAAUA,EAEV4e,WAAYA,EAEZ1lB,cAEComB,IAAKR,EACLzkB,OAAQsiB,GAITvjB,gBAECkmB,IAAKP,EACL1kB,OAAQuiB,KAUXjrB,EAAG4tB,aAAcd,GACjB9sB,EAAG4tB,aAAcb,EAIjB,IAAIc,EAEJt1B,MAAKu1B,YAAc,WASlB,MAPwBnyB,UAAnBkyB,IAEJA,EACE,GAAIppB,GAAezE,EAAI0E,EAAS/E,IAI5BkuB,EAMR,IAAIE,EAyDJ,OAvDAx1B,MAAKy1B,cAAgB,WAQpB,MAN0BryB,UAArBoyB,IAEJA,EAAmBlF,GAAyB7oB,EAAI0E,IAI1CqpB,GAMRx1B,KAAK01B,QAAU,WAEdjuB,EAAGkuB,cAAexpB,GAClBnM,KAAKmM,QAAU/I,QAMhBT,OAAO6gB,iBAAkBxjB,MAExBwP,UACCkd,IAAK,WAGJ,MADAzmB,SAAQgc,KAAM,wDACPjiB,KAAKu1B,gBAKdnmB,YACCsd,IAAK,WAGJ,MADAzmB,SAAQgc,KAAM,4DACPjiB,KAAKy1B,oBAUfz1B,KAAK8K,GAAK8qB,KACV51B,KAAKyxB,KAAOA,EACZzxB,KAAK61B,UAAY,EACjB71B,KAAKmM,QAAUA,EACfnM,KAAKgP,aAAeulB,EACpBv0B,KAAKkP,eAAiBslB,EAEfx0B,KAIR,QAAS81B,IAAe1uB,EAAU4T,GA+BjC,QAAS+a,GAAe7a,GAEvB,GAAKF,EAAagb,qBAAuB9a,GAAUA,EAAO+a,UAAY/a,EAAO+a,SAAS3C,iBAErF,MAAO,KAWP,IAAI4C,GAAkBlb,EAAamb,kBAC/BC,EAAkBpzB,KAAK6nB,OAASqL,EAAkB,IAAO,GAEzDjD,EAAWmD,CAcf,OAZgBhzB,UAAX8X,GAAyBA,GAAUA,EAAOgB,gBAE9C+W,EAAWjwB,KAAK6J,IAAKqO,EAAO+a,SAASI,MAAMrwB,OAAQitB,GAE9CA,EAAW/X,EAAO+a,SAASI,MAAMrwB,QAErCC,QAAQgc,KAAM,mCAAqC/G,EAAO+a,SAASI,MAAMrwB,OAAS,4BAA8BitB,EAAW,mCAMtHA,EAMT,QAASqD,GAA2B9vB,EAAK+vB,GAExC,GAAI7zB,EAwBJ,OAtBO8D,GAIMA,GAAOA,EAAIgwB,UAEvB9zB,EAAW8D,EAAI9D,SAEH8D,GAAOA,EAAIiwB,sBAEvBxwB,QAAQgc,KAAM,6HACdvf,EAAW8D,EAAI1B,QAAQpC,UATvBA,EAAWyB,GAcPzB,IAAayB,IAAkBoyB,IAEnC7zB,EAAWosB,IAILpsB,EA7FR,GAAIg0B,MAEAC,GACHtd,kBAAmB,QACnBud,mBAAoB,SACpBhS,kBAAmB,QACnBiS,oBAAqB,UACrBC,kBAAmB,QACnBC,qBAAsB,WACtBC,qBAAsB,WACtBC,kBAAmB,QACnBC,mBAAoB,SACpBC,eAAgB,UAGbC,GACH,YAAa,yBAA0B,MAAO,cAAe,SAAU,aAAc,iBACrF,WAAY,QAAS,cAAe,sBAAuB,UAAW,YAAa,kBAAmB,cACtG,eAAgB,eAChB,WAAY,UAAW,eAAgB,MAAO,SAAU,SACxD,cAAe,kBAAmB,yBAA0B,WAC5D,WAAY,mBAAoB,eAAgB,eAChD,kBAAmB,kBAAmB,qBACtC,eAAgB,iBAAkB,gBAAiB,gBACnD,mBAAoB,gBAAiB,cAAe,0BACpD,YAAa,cAAe,YAAa,oBAAqB,eAwE/Dp3B,MAAKq3B,cAAgB,SAAWvhB,EAAUQ,EAAQhB,EAAKgiB,EAAapc,GAEnE,GAAIqc,GAAWZ,EAAW7gB,EAAStT,MAK/BywB,EAAW8C,EAAe7a,GAC1BxD,EAAYtQ,EAASgJ,cAEG,QAAvB0F,EAAS4B,YAEbA,EAAYsD,EAAawc,gBAAiB1hB,EAAS4B,WAE9CA,IAAc5B,EAAS4B,WAE3BzR,QAAQgc,KAAM,oCAAqCnM,EAAS4B,UAAW,uBAAwBA,EAAW,YAM5G,IAAI+f,GAAsBrwB,EAASswB,yBAE/Bvf,GAEHof,SAAUA,EAEV7f,UAAWA,EACXsb,uBAAwBhY,EAAa2c,eACrC3D,eAAgBsC,EAA+BmB,EAA+BA,EAAoB3yB,QAA3B,KAAoCsC,EAASwwB,aACpHpxB,MAAQsP,EAAStP,IACjBytB,YAAaqC,EAA2BxgB,EAAStP,IAAKY,EAASywB,YAC/D7S,SAAWlP,EAASkP,OACpB8S,WAAYhiB,EAASkP,QAAUlP,EAASkP,OAAO9iB,QAC/CgyB,eAAgBoC,EAA2BxgB,EAASkP,OAAQ5d,EAASywB,YACrE/H,eAAmBha,EAASkP,SAAgBlP,EAASkP,OAAO9iB,UAAYgwB,IAA+Bpc,EAASkP,OAAO9iB,UAAYiwB,IACnIe,WAAapd,EAASod,SACtBrO,QAAU/O,EAAS+O,MACnBsO,cAAgBrd,EAASqd,YACzBgB,oBAAqBmC,EAA2BxgB,EAASqd,YAAa/rB,EAASywB,YAC/E9H,UAAYja,EAASia,QACrBC,YAAcla,EAASka,UACvBvW,kBAAoB3D,EAAS2D,gBAC7B2Z,eAAiBtd,EAASsd,aAC1BC,eAAiBvd,EAASud,aAC1BtO,cAAgBjP,EAASiP,YACzBvL,WAAa1D,EAAS0D,SAEtByL,QAASnP,EAASmP,QAElBrO,aAAcd,EAASc,aAEvBtB,MAAQA,EACRse,OAAQ9d,EAASR,IACjBue,OAASve,GAAOA,EAAII,UAEpBua,YAAana,EAASY,UAAYqhB,GAElCpE,gBAAiB7d,EAAS6d,gBAC1BzD,uBAAwBlV,EAAakV,uBAErCzX,SAAU3C,EAAS2C,SACnBwa,SAAUA,EACVK,iBAAkBtY,EAAagb,qBAAuB9a,GAAUA,EAAO+a,UAAY/a,EAAO+a,SAAS3C,iBAEnG5a,aAAc5C,EAAS4C,aACvBC,aAAc7C,EAAS6C,aACvBqf,gBAAiB5wB,EAAS4wB,gBAC1BC,gBAAiB7wB,EAAS6wB,gBAE1BrH,aAActa,EAAO4hB,YAAYlyB,OACjC8qB,eAAgBxa,EAAO6hB,MAAMnyB,OAC7B6qB,cAAeva,EAAO8hB,KAAKpyB,OAC3B+qB,cAAeza,EAAO+hB,KAAKryB,OAE3BytB,kBAAmB6D,EAEnB5D,iBAAkBtsB,EAASoZ,UAAUjB,SAAWrE,EAAO4I,eAAiBxN,EAAO6H,QAAQnY,OAAS,EAChG4rB,cAAexqB,EAASoZ,UAAUhe,KAElC6sB,YAAajoB,EAASioB,YACtByE,wBAAyB1sB,EAAS0sB,wBAElChc,mBAAoBhC,EAASgC,mBAE7BxD,UAAWwB,EAASxB,UACpBif,YAAazd,EAASU,OAASuG,GAC/ByW,UAAW1d,EAASU,OAASyG,GAE7B3D,aAA0ClW,SAA1B0S,EAASwD,aAA+BxD,EAASwD,cAAe,EAIjF,OAAOnB,IAIRnY,KAAKs4B,eAAiB,SAAWxiB,EAAUqC,GAE1C,GAAIzR,KAaJ,IAXKyR,EAAWof,SAEf7wB,EAAM4E,KAAM6M,EAAWof,WAIvB7wB,EAAM4E,KAAMwK,EAAS5G,gBACrBxI,EAAM4E,KAAMwK,EAAS9G,eAII5L,SAArB0S,EAASsC,QAEb,IAAM,GAAIlV,KAAQ4S,GAASsC,QAE1B1R,EAAM4E,KAAMpI,GACZwD,EAAM4E,KAAMwK,EAASsC,QAASlV,GAMhC,KAAM,GAAIgE,GAAI,EAAGA,EAAIkwB,EAAepxB,OAAQkB,IAE3CR,EAAM4E,KAAM6M,EAAYif,EAAgBlwB,IAIzC,OAAOR,GAAMuI,QAIdjP,KAAKu4B,eAAiB,SAAWziB,EAAUqC,EAAYsZ,GAKtD,IAAM,GAHFtlB,GAGMqsB,EAAI,EAAGC,EAAK/B,EAAS1wB,OAAYyyB,EAAJD,EAAQA,IAAO,CAErD,GAAIE,GAAchC,EAAU8B,EAE5B,IAAKE,EAAYjH,OAASA,EAAO,CAEhCtlB,EAAUusB,IACPvsB,EAAQ0pB,SAEX,QAaF,MAPiBzyB,UAAZ+I,IAEJA,EAAU,GAAIqlB,IAAcpqB,EAAUqqB,EAAM3b,EAAUqC,GACtDue,EAASprB,KAAMa,IAITA,GAIRnM,KAAK24B,eAAiB,SAAUxsB,GAE/B,GAA8B,MAAtBA,EAAQ0pB,UAAkB,CAGjC,GAAI3uB,GAAIwvB,EAASkC,QAASzsB,EAC1BuqB,GAAUxvB,GAAMwvB,EAAUA,EAAS1wB,OAAS,GAC5C0wB,EAASmC,MAGT1sB,EAAQupB,YAOV11B,KAAK02B,SAAWA,EAIjB,QAASoC,IAAiBrxB,EAAIsxB,EAAYzsB,GAIzC,QAAS0sB,GAAmBC,GAE3B,GAAI5d,GAAW4d,EAAM9X,OACjB+X,EAAiBC,EAAY9d,EAASvQ,GAEZ,QAAzBouB,EAAe7Q,OAEnB+Q,EAAiBF,EAAe7Q,OAIjCgR,EAAkBH,EAAe9pB,YAEjCiM,EAASie,oBAAqB,UAAWN,SAElCG,GAAY9d,EAASvQ,GAI5B,IAAIyuB,GAAWR,EAAWrM,IAAKrR,EAE1Bke,GAASjhB,WAEb8gB,EAAiBG,EAASjhB,WAI3BygB,EAAAA,UAAmB1d,EAEnB,IAAIme,GAAiBT,EAAWrM,IAAKwM,EAEhCM,GAAelhB,WAEnB8gB,EAAiBI,EAAelhB,WAIjCygB,EAAAA,UAAmBG,GAInB5sB,EAAKmtB,OAAON,aAIb,QAASO,GAAoBC,GAE5B,MAAKA,GAAUxM,6BAEP4L,EAAWrM,IAAKiN,EAAUvM,MAAOwM,cAIlCb,EAAWrM,IAAKiN,GAAYC,cAIpC,QAASR,GAAiBO,GAEzB,GAAIE,GAASH,EAAoBC,EAEjBv2B,UAAXy2B,IAEJpyB,EAAGqyB,aAAcD,GACjBE,EAAuBJ,IAMzB,QAASN,GAAkBjqB,GAE1B,IAAM,GAAIlM,KAAQkM,GAEjBgqB,EAAiBhqB,EAAYlM,IAM/B,QAAS62B,GAAuBJ,GAE1BA,EAAUxM,6BAEd4L,EAAAA,UAAmBY,EAAUvM,MAI7B2L,EAAAA,UAAmBY,GA1FrB,GAAIR,KAgGJ,QAECzM,IAAK,SAAWxR,GAEf,GAAIG,GAAWH,EAAOG,QAEtB,IAAmCjY,SAA9B+1B,EAAY9d,EAASvQ,IAEzB,MAAOquB,GAAY9d,EAASvQ,GAI7BuQ,GAAS2e,iBAAkB,UAAWhB,EAEtC,IAAIE,EAsBJ,OApBK7d,GAASS,iBAEbod,EAAiB7d,EAENA,EAASW,aAEc5Y,SAA7BiY,EAAS4e,kBAEb5e,EAAS4e,iBAAkB,GAAI7R,KAAiB8R,cAAehf,IAIhEge,EAAiB7d,EAAS4e,iBAI3Bd,EAAY9d,EAASvQ,IAAOouB,EAE5B5sB,EAAKmtB,OAAON,aAELD,IAQV,QAASiB,IAAc1yB,EAAIsxB,EAAYzsB,GAMtC,QAASiU,GAAQrF,GAIhB,GAAIG,GAAW8d,EAAWzM,IAAKxR,EAE1BA,GAAOG,SAASW,YAEpBX,EAAS+e,iBAAkBlf,EAI5B,IAAImN,GAAQhN,EAASgN,MACjBjZ,EAAaiM,EAASjM,UAEX,QAAViZ,GAEJgS,EAAiBhS,EAAO5gB,EAAGoG,qBAI5B,KAAM,GAAI3K,KAAQkM,GAEjBirB,EAAiBjrB,EAAYlM,GAAQuE,EAAGiG,aAMzC,IAAIqO,GAAkBV,EAASU,eAE/B,KAAM,GAAI7Y,KAAQ6Y,GAIjB,IAAM,GAFFrV,GAAQqV,EAAiB7Y,GAEnBgE,EAAI,EAAGyK,EAAIjL,EAAMV,OAAY2L,EAAJzK,EAAOA,IAEzCmzB,EAAiB3zB,EAAOQ,GAAKO,EAAGiG,aAMlC,OAAO2N,GAIR,QAASgf,GAAiBV,EAAWW,GAEpC,GAAIlN,GAASuM,EAAU,6BAAiCA,EAAUvM,KAAOuM,EAErEY,EAAsBxB,EAAWrM,IAAKU,EAEChqB,UAAtCm3B,EAAoBX,cAExBrsB,EAAcgtB,EAAqBnN,EAAMkN,GAE9BC,EAAoBn2B,UAAYgpB,EAAKhpB,SAEhDo2B,EAAcD,EAAqBnN,EAAMkN,GAM3C,QAAS/sB,GAAcgtB,EAAqBnN,EAAMkN,GAEjDC,EAAoBX,cAAgBnyB,EAAG8F,eACvC9F,EAAGgG,WAAY6sB,EAAYC,EAAoBX,cAE/C,IAAIa,GAAQrN,EAAKzH,QAAUle,EAAGizB,aAAejzB,EAAGmG,WAEhDnG,GAAGkG,WAAY2sB,EAAYlN,EAAK1mB,MAAO+zB,GAEvCF,EAAoBn2B,QAAUgpB,EAAKhpB,QAIpC,QAASo2B,GAAcD,EAAqBnN,EAAMkN,GAEjD7yB,EAAGgG,WAAY6sB,EAAYC,EAAoBX,eAE1CxM,EAAKzH,WAAY,GAAoC,KAA3ByH,EAAKxH,YAAYthB,MAI/CmD,EAAGkzB,cAAeL,EAAY,EAAGlN,EAAK1mB,OAEA,IAA3B0mB,EAAKxH,YAAYthB,MAE5B2B,QAAQC,MAAO,4KAIfuB,EAAGkzB,cAAeL,EAAYlN,EAAKxH,YAAY/hB,OAASupB,EAAK1mB,MAAMk0B,kBAC7DxN,EAAK1mB,MAAMm0B,SAAUzN,EAAKxH,YAAY/hB,OAAQupB,EAAKxH,YAAY/hB,OAASupB,EAAKxH,YAAYthB,QAE/F8oB,EAAKxH,YAAYthB,MAAQ,GAI1Bi2B,EAAoBn2B,QAAUgpB,EAAKhpB,QAIpC,QAASs1B,GAAoBC,GAE5B,MAAKA,GAAUxM,6BAEP4L,EAAWrM,IAAKiN,EAAUvM,MAAOwM,cAIlCb,EAAWrM,IAAKiN,GAAYC,cAIpC,QAASkB,GAAuBzf,GAE/B,GAAIke,GAAWR,EAAWrM,IAAKrR,EAE/B,IAA4BjY,SAAvBm2B,EAASjhB,UAEb,MAAOihB,GAASjhB,SAIjB,IAAI0P,MAEAK,EAAQhN,EAASgN,MACjBjZ,EAAaiM,EAASjM,WACtByE,EAAWzE,EAAWyE,QAI1B,IAAe,OAAVwU,EAKJ,IAAM,GAFF3hB,GAAQ2hB,EAAM3hB,MAERQ,EAAI,EAAGyK,EAAIjL,EAAMV,OAAY2L,EAAJzK,EAAOA,GAAK,EAAI,CAElD,GAAI6N,GAAIrO,EAAOQ,EAAI,GACfmB,EAAI3B,EAAOQ,EAAI,GACfod,EAAI5d,EAAOQ,EAAI,EAEnB8gB,GAAQ1c,KAAMyJ,EAAG1M,EAAGA,EAAGic,EAAGA,EAAGvP,OAQ9B,KAAM,GAFFrO,GAAQ0I,EAAWyE,SAASnN,MAEtBQ,EAAI,EAAGyK,EAAMjL,EAAMV,OAAS,EAAM,EAAO2L,EAAJzK,EAAOA,GAAK,EAAI,CAE9D,GAAI6N,GAAI7N,EAAI,EACRmB,EAAInB,EAAI,EACRod,EAAIpd,EAAI,CAEZ8gB,GAAQ1c,KAAMyJ,EAAG1M,EAAGA,EAAGic,EAAGA,EAAGvP,GAQ/B,GAAIgmB,GAAYlnB,EAASvP,MAAQ,MAAQkiB,YAAcnZ,YACnDssB,EAAY,GAAIpU,IAAiB,GAAIwV,GAAW/S,GAAW,EAM/D,OAJAqS,GAAiBV,EAAWlyB,EAAGoG,sBAE/B0rB,EAASjhB,UAAYqhB,EAEdA,EAnLR,GAAIR,GAAa,GAAIL,IAAiBrxB,EAAIsxB,EAAYzsB,EAuLtD,QAECotB,mBAAoBA,EACpBoB,sBAAuBA,EAEvBva,OAAQA,GAMV,QAASya,IAAejd,EAAKnF,EAAY3K,EAAO8qB,EAAY/d,EAAcigB,EAAgB3uB,GAOzF,QAAS4uB,GAAgBj5B,EAAOk5B,GAE/B,GAAKl5B,EAAM5B,MAAQ86B,GAAWl5B,EAAM3B,OAAS66B,EAAU,CAKtD,GAAItrB,GAAQsrB,EAAUn4B,KAAK8J,IAAK7K,EAAM5B,MAAO4B,EAAM3B,QAE/CiU,EAASC,SAASC,gBAAiB,+BAAgC,SACvEF,GAAOlU,MAAQ2C,KAAK6nB,MAAO5oB,EAAM5B,MAAQwP,GACzC0E,EAAOjU,OAAS0C,KAAK6nB,MAAO5oB,EAAM3B,OAASuP,EAE3C,IAAIY,GAAU8D,EAAOG,WAAY,KAKjC,OAJAjE,GAAQ2qB,UAAWn5B,EAAO,EAAG,EAAGA,EAAM5B,MAAO4B,EAAM3B,OAAQ,EAAG,EAAGiU,EAAOlU,MAAOkU,EAAOjU,QAEtF2F,QAAQgc,KAAM,0CAA4ChgB,EAAM5B,MAAQ,IAAM4B,EAAM3B,OAAS,iBAAmBiU,EAAOlU,MAAQ,IAAMkU,EAAOjU,OAAQ2B,GAE7IsS,EAIR,MAAOtS,GAIR,QAASo5B,GAAcp5B,GAEtB,MAAOT,GAAQwB,KAAKq4B,aAAcp5B,EAAM5B,QAAWmB,EAAQwB,KAAKq4B,aAAcp5B,EAAM3B,QAIrF,QAASg7B,GAAgBr5B,GAExB,GAAKA,YAAiBs5B,mBAAoBt5B,YAAiBu5B,mBAAoB,CAE9E,GAAIjnB,GAASC,SAASC,gBAAiB,+BAAgC,SACvEF,GAAOlU,MAAQmB,EAAQwB,KAAKy4B,kBAAmBx5B,EAAM5B,OACrDkU,EAAOjU,OAASkB,EAAQwB,KAAKy4B,kBAAmBx5B,EAAM3B,OAEtD,IAAImQ,GAAU8D,EAAOG,WAAY,KAKjC,OAJAjE,GAAQ2qB,UAAWn5B,EAAO,EAAG,EAAGsS,EAAOlU,MAAOkU,EAAOjU,QAErD2F,QAAQgc,KAAM,mDAAqDhgB,EAAM5B,MAAQ,IAAM4B,EAAM3B,OAAS,iBAAmBiU,EAAOlU,MAAQ,IAAMkU,EAAOjU,OAAQ2B,GAEtJsS,EAIR,MAAOtS,GAIR,QAASy5B,GAAwB52B,GAEhC,MAAKA,GAAQ3C,QAAUqB,IAAuBsB,EAAQ1C,QAAUoB,IAA6B,EACxFsB,EAAQxC,YAAc8d,IAAiBtb,EAAQxC,YAAcmB,IAAsB,GAEjF,EAMR,QAASk4B,GAAgBC,GAExB,MAAKA,KAAMxb,IAAiBwb,IAAMC,IAA8BD,IAAME,GAE9D/d,EAAInP,QAILmP,EAAIge,OAMZ,QAASC,GAAkB/C,GAE1B,GAAIn0B,GAAUm0B,EAAM9X,MAEpBrc,GAAQw0B,oBAAqB,UAAW0C,GAExCC,EAAmBn3B,GAEnBo3B,EAAYC,WAKb,QAASC,GAAuBnD,GAE/B,GAAIoD,GAAepD,EAAM9X,MAEzBkb,GAAa/C,oBAAqB,UAAW8C,GAE7CE,EAAwBD,GAExBH,EAAYC,WAMb,QAASF,GAAmBn3B,GAE3B,GAAIy3B,GAAoBxD,EAAWrM,IAAK5nB,EAExC,IAAKA,EAAQ7C,OAASs6B,EAAkBC,0BAIvCze,EAAI0e,cAAeF,EAAkBC,+BAE/B,CAIN,GAAuCp5B,SAAlCm5B,EAAkBG,YAA4B,MAEnD3e,GAAI0e,cAAeF,EAAkBI,gBAKtC5D,EAAAA,UAAmBj0B,GAIpB,QAASw3B,GAAwBD,GAEhC,GAAIO,GAAyB7D,EAAWrM,IAAK2P,GACzCE,EAAoBxD,EAAWrM,IAAK2P,EAAav3B,QAErD,IAAOu3B,EAAP,CAcA,GAZ0Cj5B,SAArCm5B,EAAkBI,gBAEtB5e,EAAI0e,cAAeF,EAAkBI,gBAIjCN,EAAap3B,cAEjBo3B,EAAap3B,aAAa43B,UAIrBR,GAAgBA,EAAaS,wBAElC,IAAM,GAAI51B,GAAI,EAAO,EAAJA,EAAOA,IAEvB6W,EAAIgf,kBAAmBH,EAAuBI,mBAAoB91B,IAC7D01B,EAAuBK,oBAAqBlf,EAAImf,mBAAoBN,EAAuBK,mBAAoB/1B,QAMrH6W,GAAIgf,kBAAmBH,EAAuBI,oBACzCJ,EAAuBK,oBAAqBlf,EAAImf,mBAAoBN,EAAuBK,mBAIjGlE,GAAAA,UAAmBsD,EAAav3B,SAChCi0B,EAAAA,UAAmBsD,IAQpB,QAASnzB,GAAcpE,EAASq4B,GAE/B,GAAIZ,GAAoBxD,EAAWrM,IAAK5nB,EAExC,IAAKA,EAAQV,QAAU,GAAKm4B,EAAkBa,YAAct4B,EAAQV,QAAU,CAE7E,GAAInC,GAAQ6C,EAAQ7C,KAEpB,IAAemB,SAAVnB,EAEJgE,QAAQgc,KAAM,wEAAyEnd,OAEjF,CAAA,GAAK7C,EAAMo7B,YAAa,EAO9B,WADAC,GAAef,EAAmBz3B,EAASq4B,EAJ3Cl3B,SAAQgc,KAAM,yEAA0End,IAW1FmJ,EAAMmE,cAAe2L,EAAI1L,SAAW8qB,GACpClvB,EAAMC,YAAa6P,EAAI5P,WAAYouB,EAAkBI,gBAItD,QAAStzB,GAAgBvE,EAASq4B,GAEjC,GAAIZ,GAAoBxD,EAAWrM,IAAK5nB,EAExC,IAA8B,IAAzBA,EAAQ7C,MAAM+D,OAElB,GAAKlB,EAAQV,QAAU,GAAKm4B,EAAkBa,YAAct4B,EAAQV,QAAU,CAEtEm4B,EAAkBC,4BAExB13B,EAAQk1B,iBAAkB,UAAWgC,GAErCO,EAAkBC,0BAA4Bze,EAAIhQ,gBAElDmuB,EAAYC,YAIbluB,EAAMmE,cAAe2L,EAAI1L,SAAW8qB,GACpClvB,EAAMC,YAAa6P,EAAIwf,iBAAkBhB,EAAkBC,2BAE3Dze,EAAIyf,YAAazf,EAAI0f,oBAAqB34B,EAAQb,MAOlD,KAAM,GALFy5B,GAAgB54B,GAAWA,EAAQ64B,oBACnCC,EAAiB94B,EAAQ7C,MAAO,IAAO6C,EAAQ7C,MAAO,GAAI27B,cAE1DC,KAEM32B,EAAI,EAAO,EAAJA,EAAOA,IAEhBw2B,GAAkBE,EAMxBC,EAAW32B,GAAM02B,EAAgB94B,EAAQ7C,MAAOiF,GAAIjF,MAAQ6C,EAAQ7C,MAAOiF,GAJ3E22B,EAAW32B,GAAMg0B,EAAgBp2B,EAAQ7C,MAAOiF,GAAK8T,EAAa8iB,eAUpE,IAAI77B,GAAQ47B,EAAW,GACvBE,EAAoB1C,EAAcp5B,GAClC+7B,EAAW/C,EAAgBn2B,EAAQvC,QACnC07B,EAAShD,EAAgBn2B,EAAQtC,KAEjC07B,GAAsBngB,EAAIwf,iBAAkBz4B,EAASi5B,EAErD,KAAM,GAAI72B,GAAI,EAAO,EAAJA,EAAOA,IAEvB,GAAOw2B,EAgBN,IAAM,GAFFS,GAAQ76B,EAAUu6B,EAAW32B,GAAI5D,QAE3B2P,EAAI,EAAGC,EAAK5P,EAAQ0C,OAAYkN,EAAJD,EAAQA,IAE7CkrB,EAAS76B,EAAS2P,GAEbnO,EAAQvC,SAAWoB,IAAcmB,EAAQvC,SAAW67B,GAEnDnwB,EAAMowB,8BAA8BzF,QAASoF,GAAa,GAE9D/vB,EAAMqwB,qBAAsBvgB,EAAIwgB,4BAA8Br3B,EAAG+L,EAAG+qB,EAAUG,EAAO99B,MAAO89B,EAAO79B,OAAQ,EAAG69B,EAAO/Q,MAIrHnnB,QAAQgc,KAAM,mGAMfhU,EAAMG,WAAY2P,EAAIwgB,4BAA8Br3B,EAAG+L,EAAG+qB,EAAUG,EAAO99B,MAAO89B,EAAO79B,OAAQ,EAAG09B,EAAUC,EAAQE,EAAO/Q,UAhC1HwQ,GAEJ3vB,EAAMG,WAAY2P,EAAIwgB,4BAA8Br3B,EAAG,EAAG82B,EAAUH,EAAW32B,GAAI7G,MAAOw9B,EAAW32B,GAAI5G,OAAQ,EAAG09B,EAAUC,EAAQJ,EAAW32B,GAAIkmB,MAIrJnf,EAAMG,WAAY2P,EAAIwgB,4BAA8Br3B,EAAG,EAAG82B,EAAUA,EAAUC,EAAQJ,EAAW32B,GAoC/FpC,GAAQf,iBAAmBg6B,GAE/BhgB,EAAIygB,eAAgBzgB,EAAIwf,kBAIzBhB,EAAkBa,UAAYt4B,EAAQV,QAEjCU,EAAQT,UAAWS,EAAQT,SAAUS,OAI1CmJ,GAAMmE,cAAe2L,EAAI1L,SAAW8qB,GACpClvB,EAAMC,YAAa6P,EAAIwf,iBAAkBhB,EAAkBC,2BAQ9D,QAASiC,GAAuB35B,EAASq4B,GAExClvB,EAAMmE,cAAe2L,EAAI1L,SAAW8qB,GACpClvB,EAAMC,YAAa6P,EAAIwf,iBAAkBxE,EAAWrM,IAAK5nB,GAAU63B,gBAIpE,QAASuB,GAAsBQ,EAAa55B,EAASi5B,GAEpD,GAAIjR,EAkCJ,IAhCKiR,GAEJhgB,EAAIxP,cAAemwB,EAAa3gB,EAAIvP,eAAgBysB,EAAgBn2B,EAAQ3C,QAC5E4b,EAAIxP,cAAemwB,EAAa3gB,EAAIrP,eAAgBusB,EAAgBn2B,EAAQ1C,QAE5E2b,EAAIxP,cAAemwB,EAAa3gB,EAAIpP,mBAAoBssB,EAAgBn2B,EAAQzC,YAChF0b,EAAIxP,cAAemwB,EAAa3gB,EAAIlP,mBAAoBosB,EAAgBn2B,EAAQxC,cAIhFyb,EAAIxP,cAAemwB,EAAa3gB,EAAIvP,eAAgBuP,EAAItP,eACxDsP,EAAIxP,cAAemwB,EAAa3gB,EAAIrP,eAAgBqP,EAAItP,gBAEnD3J,EAAQ3C,QAAUqB,IAAuBsB,EAAQ1C,QAAUoB,KAE/DyC,QAAQgc,KAAM,gIAAiInd,GAIhJiZ,EAAIxP,cAAemwB,EAAa3gB,EAAIpP,mBAAoBgtB,EAAgB72B,EAAQzC,YAChF0b,EAAIxP,cAAemwB,EAAa3gB,EAAIlP,mBAAoB8sB,EAAgB72B,EAAQxC,YAE3EwC,EAAQxC,YAAc8d,IAAiBtb,EAAQxC,YAAcmB,IAEjEwC,QAAQgc,KAAM,kIAAmInd,IAMnJgoB,EAAYlU,EAAW8T,IAAK,kCAEX,CAEhB,GAAK5nB,EAAQtC,OAASm8B,IAA8D,OAAjD/lB,EAAW8T,IAAK,4BAAwC,MAC3F,IAAK5nB,EAAQtC,OAASo8B,IAAuE,OAAtDhmB,EAAW8T,IAAK,iCAA6C,QAE/F5nB,EAAQrC,WAAa,GAAKs2B,EAAWrM,IAAK5nB,GAAU+5B,uBAExD9gB,EAAI+gB,cAAeJ,EAAa5R,EAAUiS,2BAA4B/7B,KAAK6J,IAAK/H,EAAQrC,WAAYuY,EAAagkB,qBACjHjG,EAAWrM,IAAK5nB,GAAU+5B,oBAAsB/5B,EAAQrC,aAQ3D,QAAS66B,GAAef,EAAmBz3B,EAASq4B,GAEZ/5B,SAAlCm5B,EAAkBG,cAEtBH,EAAkBG,aAAc,EAEhC53B,EAAQk1B,iBAAkB,UAAWgC,GAErCO,EAAkBI,eAAiB5e,EAAIhQ,gBAEvCmuB,EAAYC,YAIbluB,EAAMmE,cAAe2L,EAAI1L,SAAW8qB,GACpClvB,EAAMC,YAAa6P,EAAI5P,WAAYouB,EAAkBI,gBAErD5e,EAAIyf,YAAazf,EAAI0f,oBAAqB34B,EAAQb,OAClD8Z,EAAIyf,YAAazf,EAAIkhB,+BAAgCn6B,EAAQd,kBAC7D+Z,EAAIyf,YAAazf,EAAImhB,iBAAkBp6B,EAAQZ,gBAE/C,IAAIjC,GAAQi5B,EAAgBp2B,EAAQ7C,MAAO+Y,EAAasD,eAEnDod,GAAwB52B,IAAau2B,EAAcp5B,MAAY,IAEnEA,EAAQq5B,EAAgBr5B,GAIzB,IAAI87B,GAAoB1C,EAAcp5B,GACtC+7B,EAAW/C,EAAgBn2B,EAAQvC,QACnC07B,EAAShD,EAAgBn2B,EAAQtC,KAEjC07B,GAAsBngB,EAAI5P,WAAYrJ,EAASi5B,EAE/C,IAAII,GAAQ76B,EAAUwB,EAAQxB,OAE9B,IAAMwB,GAAWA,EAAQq6B,eAAkB,CAI1C,GAAIC,GAAiBrhB,EAAIshB,eAEzB,IAAKv6B,EAAQtC,OAASm8B,GAAY,CAEjC,IAAMW,EAAY,KAAM,IAAIvQ,OAAM,iDAClCqQ,GAAiBrhB,EAAIwhB,uBAEVD,KAGXF,EAAiBrhB,EAAIyhB,kBAMjB16B,GAAQvC,SAAWk9B,KAEvBL,EAAiBrhB,EAAI2hB,eAItBzxB,EAAMG,WAAY2P,EAAI5P,WAAY,EAAGixB,EAAgBn9B,EAAM5B,MAAO4B,EAAM3B,OAAQ,EAAG09B,EAAUC,EAAQ,UAE/F,IAAMn5B,GAAWA,EAAQ84B,cAM/B,GAAKt6B,EAAQ0C,OAAS,GAAK+3B,EAAoB,CAE9C,IAAM,GAAI72B,GAAI,EAAG2Y,EAAKvc,EAAQ0C,OAAY6Z,EAAJ3Y,EAAQA,IAE7Ci3B,EAAS76B,EAAS4D,GAClB+G,EAAMG,WAAY2P,EAAI5P,WAAYjH,EAAG82B,EAAUG,EAAO99B,MAAO89B,EAAO79B,OAAQ,EAAG09B,EAAUC,EAAQE,EAAO/Q,KAIzGtoB,GAAQf,iBAAkB,MAI1BkK,GAAMG,WAAY2P,EAAI5P,WAAY,EAAG6vB,EAAU/7B,EAAM5B,MAAO4B,EAAM3B,OAAQ,EAAG09B,EAAUC,EAAQh8B,EAAMmrB,UAIhG,IAAMtoB,GAAWA,EAAQ64B,oBAE/B,IAAM,GAAIz2B,GAAI,EAAG2Y,EAAKvc,EAAQ0C,OAAY6Z,EAAJ3Y,EAAQA,IAE7Ci3B,EAAS76B,EAAS4D,GAEbpC,EAAQvC,SAAWoB,IAAcmB,EAAQvC,SAAW67B,GAEnDnwB,EAAMowB,8BAA8BzF,QAASoF,GAAa,GAE9D/vB,EAAMqwB,qBAAsBvgB,EAAI5P,WAAYjH,EAAG82B,EAAUG,EAAO99B,MAAO89B,EAAO79B,OAAQ,EAAG69B,EAAO/Q,MAIhGnnB,QAAQgc,KAAM,kGAMfhU,EAAMG,WAAY2P,EAAI5P,WAAYjH,EAAG82B,EAAUG,EAAO99B,MAAO89B,EAAO79B,OAAQ,EAAG09B,EAAUC,EAAQE,EAAO/Q,UAc1G,IAAK9pB,EAAQ0C,OAAS,GAAK+3B,EAAoB,CAE9C,IAAM,GAAI72B,GAAI,EAAG2Y,EAAKvc,EAAQ0C,OAAY6Z,EAAJ3Y,EAAQA,IAE7Ci3B,EAAS76B,EAAS4D,GAClB+G,EAAMG,WAAY2P,EAAI5P,WAAYjH,EAAG82B,EAAUA,EAAUC,EAAQE,EAIlEr5B,GAAQf,iBAAkB,MAI1BkK,GAAMG,WAAY2P,EAAI5P,WAAY,EAAG6vB,EAAUA,EAAUC,EAAQh8B,EAM9D6C,GAAQf,iBAAmBg6B,GAAoBhgB,EAAIygB,eAAgBzgB,EAAI5P,YAE5EouB,EAAkBa,UAAYt4B,EAAQV,QAEjCU,EAAQT,UAAWS,EAAQT,SAAUS,GAO3C,QAAS66B,GAAyBC,EAAavD,EAAcwD,EAAYC,GAExE,GAAI9B,GAAW/C,EAAgBoB,EAAav3B,QAAQvC,QAChD07B,EAAShD,EAAgBoB,EAAav3B,QAAQtC,KAClDyL,GAAMG,WAAY0xB,EAAe,EAAG9B,EAAU3B,EAAah8B,MAAOg8B,EAAa/7B,OAAQ,EAAG09B,EAAUC,EAAQ,MAC5GlgB,EAAIgiB,gBAAiBhiB,EAAIiiB,YAAaJ,GACtC7hB,EAAIkiB,qBAAsBliB,EAAIiiB,YAAaH,EAAYC,EAAe/G,EAAWrM,IAAK2P,EAAav3B,SAAU63B,eAAgB,GAC7H5e,EAAIgiB,gBAAiBhiB,EAAIiiB,YAAa,MAKvC,QAASE,GAA0BC,EAAc9D,GAEhDte,EAAIqiB,iBAAkBriB,EAAIsiB,aAAcF,GAEnC9D,EAAat3B,cAAiBs3B,EAAar3B,eAE/C+Y,EAAIuiB,oBAAqBviB,EAAIsiB,aAActiB,EAAIyhB,kBAAmBnD,EAAah8B,MAAOg8B,EAAa/7B,QACnGyd,EAAIwiB,wBAAyBxiB,EAAIiiB,YAAajiB,EAAIyiB,iBAAkBziB,EAAIsiB,aAAcF,IAE3E9D,EAAat3B,aAAes3B,EAAar3B,eAEpD+Y,EAAIuiB,oBAAqBviB,EAAIsiB,aAActiB,EAAI2hB,cAAerD,EAAah8B,MAAOg8B,EAAa/7B,QAC/Fyd,EAAIwiB,wBAAyBxiB,EAAIiiB,YAAajiB,EAAI0iB,yBAA0B1iB,EAAIsiB,aAAcF,IAK9FpiB,EAAIuiB,oBAAqBviB,EAAIsiB,aAActiB,EAAI2iB,MAAOrE,EAAah8B,MAAOg8B,EAAa/7B,QAIxFyd,EAAIqiB,iBAAkBriB,EAAIsiB,aAAc,MAKzC,QAASM,GAAmBf,EAAavD,GAExC,GAAIuE,GAAYvE,GAAgBA,EAAaS,uBAC7C,IAAK8D,EAAS,KAAM,IAAI7R,OAAM,2DAI9B,IAFAhR,EAAIgiB,gBAAiBhiB,EAAIiiB,YAAaJ,IAE7BvD,EAAap3B,eAAgBo3B,EAAap3B,aAAak6B,eAE/D,KAAM,IAAIpQ,OAAM,sEAKXgK,GAAWrM,IAAK2P,EAAap3B,cAAe03B,gBAChDN,EAAap3B,aAAahD,MAAM5B,QAAUg8B,EAAah8B,OACvDg8B,EAAap3B,aAAahD,MAAM3B,SAAW+7B,EAAa/7B,SACzD+7B,EAAap3B,aAAahD,MAAM5B,MAAQg8B,EAAah8B,MACrDg8B,EAAap3B,aAAahD,MAAM3B,OAAS+7B,EAAa/7B,OACtD+7B,EAAap3B,aAAa4P,aAAc,GAGzC3L,EAAcmzB,EAAap3B,aAAc,EAEzC,IAAI47B,GAAoB9H,EAAWrM,IAAK2P,EAAap3B,cAAe03B,cAEpE,IAAKN,EAAap3B,aAAa1C,SAAWu+B,GAEzC/iB,EAAIkiB,qBAAsBliB,EAAIiiB,YAAajiB,EAAIyiB,iBAAkBziB,EAAI5P,WAAY0yB,EAAmB,OAE9F,CAAA,GAAKxE,EAAap3B,aAAa1C,SAAWk9B,GAMhD,KAAM,IAAI1Q,OAAM,8BAJhBhR,GAAIkiB,qBAAsBliB,EAAIiiB,YAAajiB,EAAI0iB,yBAA0B1iB,EAAI5P,WAAY0yB,EAAmB,IAW9G,QAASE,GAAwB1E,GAEhC,GAAIO,GAAyB7D,EAAWrM,IAAK2P,GAEzCuE,EAAYvE,GAAgBA,EAAaS,uBAE7C,IAAKT,EAAap3B,aAAe,CAEhC,GAAK27B,EAAS,KAAM,IAAI7R,OAAM,2DAE9B4R,GAAmB/D,EAAuBI,mBAAoBX,OAI9D,IAAKuE,EAAS,CAEbhE,EAAuBK,qBAEvB,KAAM,GAAI/1B,GAAI,EAAO,EAAJA,EAAOA,IAEvB6W,EAAIgiB,gBAAiBhiB,EAAIiiB,YAAapD,EAAuBI,mBAAoB91B,IACjF01B,EAAuBK,mBAAoB/1B,GAAM6W,EAAIijB,qBACrDd,EAA0BtD,EAAuBK,mBAAoB/1B,GAAKm1B,OAM3Ete,GAAIgiB,gBAAiBhiB,EAAIiiB,YAAapD,EAAuBI,oBAC7DJ,EAAuBK,mBAAqBlf,EAAIijB,qBAChDd,EAA0BtD,EAAuBK,mBAAoBZ,EAMvEte,GAAIgiB,gBAAiBhiB,EAAIiiB,YAAa,MAKvC,QAASiB,GAAmB5E,GAE3B,GAAIO,GAAyB7D,EAAWrM,IAAK2P,GACzCE,EAAoBxD,EAAWrM,IAAK2P,EAAav3B,QAErDu3B,GAAarC,iBAAkB,UAAWoC,GAE1CG,EAAkBI,eAAiB5e,EAAIhQ,gBAEvCmuB,EAAYC,UAEZ,IAAIyE,GAAYvE,GAAgBA,EAAaS,wBACzCoE,EAAqB7F,EAAcgB,EAIvC,IAAKuE,EAAS,CAEbhE,EAAuBI,qBAEvB,KAAM,GAAI91B,GAAI,EAAO,EAAJA,EAAOA,IAEvB01B,EAAuBI,mBAAoB91B,GAAM6W,EAAIojB,wBAMtDvE,GAAuBI,mBAAqBjf,EAAIojB,mBAMjD,IAAKP,EAAS,CAEb3yB,EAAMC,YAAa6P,EAAIwf,iBAAkBhB,EAAkBI,gBAC3DuB,EAAsBngB,EAAIwf,iBAAkBlB,EAAav3B,QAASo8B,EAElE,KAAM,GAAIh6B,GAAI,EAAO,EAAJA,EAAOA,IAEvBy4B,EAAyB/C,EAAuBI,mBAAoB91B,GAAKm1B,EAActe,EAAIqjB,kBAAmBrjB,EAAIwgB,4BAA8Br3B,EAI5Im1B,GAAav3B,QAAQf,iBAAmBm9B,GAAqBnjB,EAAIygB,eAAgBzgB,EAAIwf,kBAC1FtvB,EAAMC,YAAa6P,EAAIwf,iBAAkB,UAIzCtvB,GAAMC,YAAa6P,EAAI5P,WAAYouB,EAAkBI,gBACrDuB,EAAsBngB,EAAI5P,WAAYkuB,EAAav3B,QAASo8B,GAC5DvB,EAAyB/C,EAAuBI,mBAAoBX,EAActe,EAAIqjB,kBAAmBrjB,EAAI5P,YAExGkuB,EAAav3B,QAAQf,iBAAmBm9B,GAAqBnjB,EAAIygB,eAAgBzgB,EAAI5P,YAC1FF,EAAMC,YAAa6P,EAAI5P,WAAY,KAM/BkuB,GAAat3B,aAEjBg8B,EAAwB1E,GAM1B,QAASgF,GAA0BhF,GAElC,GAAIv3B,GAAUu3B,EAAav3B,OAE3B,IAAKA,EAAQf,iBAAmBs3B,EAAcgB,IAC5Cv3B,EAAQxC,YAAc8d,IACtBtb,EAAQxC,YAAcmB,GAAe,CAEtC,GAAI0d,GAAUkb,GAAgBA,EAAaS,wBAA2B/e,EAAIwf,iBAAmBxf,EAAI5P,WAC7FmzB,EAAevI,EAAWrM,IAAK5nB,GAAU63B,cAE7C1uB,GAAMC,YAAaiT,EAAQmgB,GAC3BvjB,EAAIygB,eAAgBrd,GACpBlT,EAAMC,YAAaiT,EAAQ,OApuB7B,GAAI+a,GAAc5vB,EAAKmtB,OACnB6F,EAAgD,mBAA3BiC,yBAA0CxjB,YAAewjB,uBAyuBlFvhC,MAAKkJ,aAAeA,EACpBlJ,KAAKqJ,eAAiBA,EACtBrJ,KAAKy+B,sBAAwBA,EAC7Bz+B,KAAKihC,kBAAoBA,EACzBjhC,KAAKqhC,yBAA2BA,EAQjC,QAASG,MAER,GAAIzI,KAEJ,QAECrM,IAAK,SAAWxR,GAEf,GAAInY,GAAOmY,EAAOnY,KACdyD,EAAMuyB,EAAYh2B,EAStB,OAPaK,UAARoD,IAEJA,KACAuyB,EAAYh2B,GAASyD,GAIfA,GAIRi7B,SAAQ,SAAWvmB,SAEX6d,GAAY7d,EAAOnY,OAI3B8d,MAAO,WAENkY,OAQH,QAAS2I,IAAYj6B,EAAImR,EAAYqiB,GAEpC,QAAS0G,KAER,GAAIC,IAAS,EAEThyB,EAAQ,GAAIrL,GACZs9B,EAAmB,KACnBC,EAAoB,GAAIv9B,EAE5B,QAECw9B,QAAS,SAAWC,GAEdH,IAAqBG,GAAeJ,IAExCn6B,EAAGu6B,UAAWA,EAAWA,EAAWA,EAAWA,GAC/CH,EAAmBG,IAMrBC,UAAW,SAAWC,GAErBN,EAASM,GAIVC,SAAU,SAAWp7B,EAAGqB,EAAGC,EAAG0M,GAE7BnF,EAAMlD,IAAK3F,EAAGqB,EAAGC,EAAG0M,GAEf+sB,EAAkBM,OAAQxyB,MAAY,IAE1CnI,EAAGiY,WAAY3Y,EAAGqB,EAAGC,EAAG0M,GACxB+sB,EAAkB5vB,KAAMtC,KAM1ByyB,MAAO,WAENT,GAAS,EAETC,EAAmB,KACnBC,EAAkBp1B,IAAK,EAAG,EAAG,EAAG,KAQnC,QAAS41B,KAER,GAAIV,IAAS,EAETW,EAAmB,KACnBC,EAAmB,KACnBC,EAAoB,IAExB,QAECC,QAAS,SAAWxsB,GAEdA,EAEJzD,EAAQhL,EAAGiL,YAIXlB,EAAS/J,EAAGiL,aAMdqvB,QAAS,SAAWY,GAEdJ,IAAqBI,GAAef,IAExCn6B,EAAGk7B,UAAWA,GACdJ,EAAmBI,IAMrBC,QAAS,SAAWvrB,GAEnB,GAAKmrB,IAAqBnrB,EAAY,CAErC,GAAKA,EAEJ,OAASA,GAER,IAAKwrB,IAEJp7B,EAAG4P,UAAW5P,EAAGq7B,MACjB,MAED,KAAKC,IAEJt7B,EAAG4P,UAAW5P,EAAGu7B,OACjB,MAED,KAAKC,IAEJx7B,EAAG4P,UAAW5P,EAAGy7B,KACjB,MAED,KAAK5rB,IAEJ7P,EAAG4P,UAAW5P,EAAG07B,OACjB,MAED,KAAKC,IAEJ37B,EAAG4P,UAAW5P,EAAG47B,MACjB,MAED,KAAKC,IAEJ77B,EAAG4P,UAAW5P,EAAG87B,OACjB,MAED,KAAKC,IAEJ/7B,EAAG4P,UAAW5P,EAAGg8B,QACjB,MAED,KAAKC,IAEJj8B,EAAG4P,UAAW5P,EAAGk8B,SACjB,MAED,SAECl8B,EAAG4P,UAAW5P,EAAG07B,YAMnB17B,GAAG4P,UAAW5P,EAAG07B,OAIlBX,GAAmBnrB,IAMrB4qB,UAAW,SAAWC,GAErBN,EAASM,GAIVC,SAAU,SAAWtZ,GAEf4Z,IAAsB5Z,IAE1BphB,EAAGm8B,WAAY/a,GACf4Z,EAAoB5Z,IAMtBwZ,MAAO,WAENT,GAAS,EAETW,EAAmB,KACnBC,EAAmB,KACnBC,EAAoB,OAQvB,QAASoB,KAER,GAAIjC,IAAS,EAETkC,EAAqB,KACrBC,EAAqB,KACrBC,EAAoB,KACpBC,EAAyB,KACzBC,EAAsB,KACtBC,EAAsB,KACtBC,EAAsB,KACtBC,EAAsB,IAE1B,QAEC3B,QAAS,SAAW4B,GAEdA,EAEJ7xB,EAAQhL,EAAG88B,cAIX/yB,EAAS/J,EAAG88B,eAMdxC,QAAS,SAAWyC,GAEdV,IAAuBU,GAAiB5C,IAE5Cn6B,EAAG+8B,YAAaA,GAChBV,EAAqBU,IAMvB5B,QAAS,SAAW6B,EAAaC,EAAYF,IAEvCT,IAAuBU,GACvBT,IAAuBU,GACvBT,IAA2BO,KAE/B/8B,EAAGg9B,YAAaA,EAAcC,EAAYF,GAE1CT,EAAqBU,EACrBT,EAAqBU,EACrBT,EAAyBO,IAM3BG,MAAO,SAAWC,EAAaC,EAAcC,IAEvCZ,IAAwBU,GACxBT,IAAwBU,GACxBT,IAAwBU,KAE5Br9B,EAAGs9B,UAAWH,EAAcC,EAAcC,GAE1CZ,EAAsBU,EACtBT,EAAsBU,EACtBT,EAAsBU,IAMxB7C,UAAW,SAAWC,GAErBN,EAASM,GAIVC,SAAU,SAAW6C,GAEfX,IAAwBW,IAE5Bv9B,EAAGw9B,aAAcD,GACjBX,EAAsBW,IAMxB3C,MAAO,WAENT,GAAS,EAETkC,EAAqB,KACrBC,EAAqB,KACrBC,EAAoB,KACpBC,EAAyB,KACzBC,EAAqB,KACrBC,EAAsB,KACtBC,EAAsB,KACtBC,EAAsB,OAkDzB,QAASt2B,GAAevL,EAAM2e,EAAQ7c,GAErC,GAAI8oB,GAAO,GAAIpH,YAAY,GACvBlhB,EAAU2C,EAAGsG,eAEjBtG,GAAGyG,YAAa1L,EAAMsC,GACtB2C,EAAG8G,cAAe/L,EAAMiF,EAAGoH,mBAAoBpH,EAAGmH,SAClDnH,EAAG8G,cAAe/L,EAAMiF,EAAGkH,mBAAoBlH,EAAGmH,QAElD,KAAM,GAAI1H,GAAI,EAAO5C,EAAJ4C,EAAWA,IAE3BO,EAAG2G,WAAY+S,EAASja,EAAG,EAAGO,EAAGqH,KAAM,EAAG,EAAG,EAAGrH,EAAGqH,KAAMrH,EAAG6G,cAAe8e,EAI5E,OAAOtoB,GAUR,QAASoI,KAERwS,EAAY,EAAG,EAAG,EAAG,GACrBkkB,EAAY,GACZqB,EAAc,GAEdxyB,EAAQhL,EAAGiL,YACXwyB,EAAc5tB,IAEd6tB,GAAc,GACdC,EAAaC,IACb5yB,EAAQhL,EAAGgK,WAEXgB,EAAQhL,EAAG+K,OACXa,EAAakD,IAId,QAASpF,KAER,IAAM,GAAIjK,GAAI,EAAGyK,EAAI2zB,EAAct/B,OAAY2L,EAAJzK,EAAOA,IAEjDo+B,EAAep+B,GAAM,EAMvB,QAASkK,GAAiBuoB,GAWzB,GATA2L,EAAe3L,GAAc,EAEW,IAAnC4L,EAAmB5L,KAEvBlyB,EAAG+9B,wBAAyB7L,GAC5B4L,EAAmB5L,GAAc,GAIM,IAAnC8L,EAAmB9L,GAAoB,CAE3C,GAAI7M,GAAYlU,EAAW8T,IAAK,yBAEhCI,GAAU4Y,yBAA0B/L,EAAW,GAC/C8L,EAAmB9L,GAAc,GAMnC,QAASgM,GAA2BhM,EAAWiM,EAAkB9Y,GAEhEwY,EAAe3L,GAAc,EAEW,IAAnC4L,EAAmB5L,KAEvBlyB,EAAG+9B,wBAAyB7L,GAC5B4L,EAAmB5L,GAAc,GAI7B8L,EAAmB9L,KAAgBiM,IAEvC9Y,EAAU4Y,yBAA0B/L,EAAWiM,GAC/CH,EAAmB9L,GAAciM,GAMnC,QAASv0B,KAER,IAAM,GAAInK,GAAI,EAAGyK,EAAI4zB,EAAkBv/B,OAAQkB,IAAMyK,IAAMzK,EAErDq+B,EAAmBr+B,KAAQo+B,EAAep+B,KAE9CO,EAAGo+B,yBAA0B3+B,GAC7Bq+B,EAAmBr+B,GAAM,GAQ5B,QAASuL,GAAQ3H,GAEXkQ,EAAclQ,MAAS,IAE3BrD,EAAGgL,OAAQ3H,GACXkQ,EAAclQ,IAAO,GAMvB,QAAS0G,GAAS1G,GAEZkQ,EAAclQ,MAAS,IAE3BrD,EAAG+J,QAAS1G,GACZkQ,EAAclQ,IAAO,GAMvB,QAASuzB,KAER,GAAkC,OAA7ByH,IAEJA,KAEKltB,EAAW8T,IAAK,mCAChB9T,EAAW8T,IAAK,kCAChB9T,EAAW8T,IAAK,kCAIpB,IAAM,GAFFqZ,GAAUt+B,EAAGu+B,aAAcv+B,EAAGw+B,4BAExB/+B,EAAI,EAAGA,EAAI6+B,EAAQ//B,OAAQkB,IAEpC4+B,EAAyBx6B,KAAMy6B,EAAS7+B,GAQ3C,OAAO4+B,GAIR,QAASzyB,GAAaC,EAAUC,EAAeC,EAAUC,EAAU2D,EAAoBF,EAAeC,EAAeW,GAEpH,MAAKxE,KAAa4yB,IAMjB10B,EAAS/J,EAAG+K,YACZ2zB,EAAkB7yB,KALlBb,EAAQhL,EAAG+K,QAUPc,IAAa6yB,GAAmBruB,IAAuBsuB,MAEtD9yB,IAAa+yB,GAEZvuB,GAEJrQ,EAAG6+B,sBAAuB7+B,EAAG8+B,SAAU9+B,EAAG8+B,UAC1C9+B,EAAG++B,kBAAmB/+B,EAAGg/B,IAAKh/B,EAAGg/B,IAAKh/B,EAAGg/B,IAAKh/B,EAAGg/B,OAIjDh/B,EAAG8L,cAAe9L,EAAG8+B,UACrB9+B,EAAGi/B,UAAWj/B,EAAGk/B,UAAWl/B,EAAGg/B,MAIrBnzB,IAAaszB,GAEnB9uB,GAEJrQ,EAAG6+B,sBAAuB7+B,EAAG8+B,SAAU9+B,EAAG8+B,UAC1C9+B,EAAG++B,kBAAmB/+B,EAAGo/B,KAAMp/B,EAAGo/B,KAAMp/B,EAAGq/B,oBAAqBr/B,EAAGs/B,uBAInEt/B,EAAG8L,cAAe9L,EAAG8+B,UACrB9+B,EAAGi/B,UAAWj/B,EAAGo/B,KAAMp/B,EAAGq/B,sBAIhBxzB,IAAa0zB,GAEnBlvB,GAEJrQ,EAAG6+B,sBAAuB7+B,EAAG8+B,SAAU9+B,EAAG8+B,UAC1C9+B,EAAG++B,kBAAmB/+B,EAAGo/B,KAAMp/B,EAAGw/B,UAAWx/B,EAAGo/B,KAAMp/B,EAAGk/B,aAIzDl/B,EAAG8L,cAAe9L,EAAG8+B,UACrB9+B,EAAGi/B,UAAWj/B,EAAGo/B,KAAMp/B,EAAGw/B,YAMtBnvB,GAEJrQ,EAAG6+B,sBAAuB7+B,EAAG8+B,SAAU9+B,EAAG8+B,UAC1C9+B,EAAG++B,kBAAmB/+B,EAAGg/B,IAAKh/B,EAAGs/B,oBAAqBt/B,EAAGg/B,IAAKh/B,EAAGs/B,uBAIjEt/B,EAAG6+B,sBAAuB7+B,EAAG8+B,SAAU9+B,EAAG8+B,UAC1C9+B,EAAG++B,kBAAmB/+B,EAAGk/B,UAAWl/B,EAAGs/B,oBAAqBt/B,EAAGg/B,IAAKh/B,EAAGs/B,sBAMzEZ,EAAkB7yB,EAClB8yB,GAA2BtuB,QAIvBxE,IAAa4zB,IAEjB9vB,EAAqBA,GAAsB7D,EAC3C2D,EAAgBA,GAAiB1D,EACjC2D,EAAgBA,GAAiB1D,GAE5BF,IAAkB4zB,GAAwB/vB,IAAuBgwB,MAErE3/B,EAAG6+B,sBAAuBrL,EAAgB1nB,GAAiB0nB,EAAgB7jB,IAE3E+vB,EAAuB5zB,EACvB6zB,GAA4BhwB,IAIxB5D,IAAa6zB,GAAmB5zB,IAAa6zB,GAAmBpwB,IAAkBqwB,IAAwBpwB,IAAkBqwB,MAEhI//B,EAAG++B,kBAAmBvL,EAAgBznB,GAAYynB,EAAgBxnB,GAAYwnB,EAAgB/jB,GAAiB+jB,EAAgB9jB,IAE/HkwB,EAAkB7zB,EAClB8zB,EAAkB7zB,EAClB8zB,GAAuBrwB,EACvBswB,GAAuBrwB,KAMxBgwB,EAAuB,KACvBE,EAAkB,KAClBC,EAAkB,KAClBF,GAA4B,KAC5BG,GAAuB,KACvBC,GAAuB,QAQzB,QAASC,GAAehwB,GAEvBiwB,EAAY3F,QAAStqB,GAItB,QAASxB,GAAcC,GAEtBnR,EAAY29B,QAASxsB,GAItB,QAASxE,GAAeyE,GAEvBpR,EAAYg9B,QAAS5rB,GAItB,QAAS+uB,GAAc7tB,GAEtBtS,EAAY69B,QAASvrB,GAItB,QAASswB,GAAgBrD,GAExBt/B,EAAc09B,QAAS4B,GAIxB,QAASsD,GAAiBC,GAEzB7iC,EAAc+8B,QAAS8F,GAIxB,QAASC,GAAgBrD,EAAaC,EAAYF,GAEjDx/B,EAAc49B,QAAS6B,EAAaC,EAAYF,GAIjD,QAASuD,GAAcnD,EAAaC,EAAcC,GAEjD9/B,EAAc2/B,MAAOC,EAAaC,EAAcC,GAMjD,QAASK,GAAc3R,GAEjBwU,KAAqBxU,IAEpBA,EAEJ/rB,EAAGwgC,UAAWxgC,EAAGygC,IAIjBzgC,EAAGwgC,UAAWxgC,EAAG0gC,KAIlBH,GAAmBxU,GAMrB,QAAS4R,GAAagD,GAEhBA,IAAaC,IAEjB51B,EAAQhL,EAAGgK,WAEN22B,IAAaE,KAEZF,IAAa/C,GAEjB59B,EAAG2gC,SAAU3gC,EAAG8gC,MAELH,IAAaI,GAExB/gC,EAAG2gC,SAAU3gC,EAAGghC,OAIhBhhC,EAAG2gC,SAAU3gC,EAAGihC,kBAQlBl3B,EAAS/J,EAAGgK,WAIb62B,GAAkBF,EAInB,QAASO,GAActoC,GAEjBA,IAAUuoC,KAEdnhC,EAAGohC,UAAWxoC,GAEduoC,GAAmBvoC,GAMrB,QAASyoC,GAAkBnxB,EAAeoxB,EAAQr+B,GAE5CiN,GAEJlF,EAAQhL,EAAGuhC,sBAENC,KAA+BF,GAAUG,KAA8Bx+B,KAE3EjD,EAAGkQ,cAAeoxB,EAAQr+B,GAE1Bu+B,GAA6BF,EAC7BG,GAA4Bx+B,IAM7B8G,EAAS/J,EAAGuhC,qBAMd,QAASG,KAER,MAAOC,IAIR,QAASzpB,GAAgB/a,GAExBwkC,GAAqBxkC,EAEhBA,EAEJ6N,EAAQhL,EAAG4hC,cAIX73B,EAAS/J,EAAG4hC,cAQd,QAASj3B,GAAek3B,GAEJlmC,SAAdkmC,IAA0BA,EAAY7hC,EAAG4K,SAAWk3B,GAAc,GAElEC,KAAuBF,IAE3B7hC,EAAG2K,cAAek3B,GAClBE,GAAqBF,GAMvB,QAASp7B,GAAau7B,EAAWnI,GAEJ,OAAvBkI,IAEJp3B,GAID,IAAIs3B,GAAeC,GAAsBH;AAEnBpmC,SAAjBsmC,IAEJA,GAAiBlnC,KAAMY,OAAW0B,QAAS1B,QAC3CumC,GAAsBH,IAAuBE,IAIzCA,EAAalnC,OAASinC,GAAaC,EAAa5kC,UAAYw8B,KAEhE75B,EAAGyG,YAAau7B,EAAWnI,GAAgBsI,GAAeH,IAE1DC,EAAalnC,KAAOinC,EACpBC,EAAa5kC,QAAUw8B,GAMzB,QAAShD,KAER,IAEC72B,EAAG62B,qBAAqBuL,MAAOpiC,EAAI1B,WAElC,MAAQG,GAETD,QAAQC,MAAOA,IAMjB,QAASkI,KAER,IAEC3G,EAAG2G,WAAWy7B,MAAOpiC,EAAI1B,WAExB,MAAQG,GAETD,QAAQC,MAAOA,IAQjB,QAASwZ,GAAY3Y,EAAGqB,EAAGC,EAAG0M,GAE7B2yB,EAAYvF,SAAUp7B,EAAGqB,EAAGC,EAAG0M,GAIhC,QAAS6uB,GAAY/a,GAEpB9jB,EAAYo9B,SAAUtZ,GAIvB,QAASoc,GAAcD,GAEtBhgC,EAAcm9B,SAAU6C,GAMzB,QAASrgC,GAASA,GAEZmlC,GAAe1H,OAAQz9B,MAAc,IAEzC8C,EAAG9C,QAASA,EAAQ7C,EAAG6C,EAAQ5C,EAAG4C,EAAQH,EAAGG,EAAQnE,GACrDspC,GAAe53B,KAAMvN,IAMvB,QAASE,GAAUA,GAEbklC,GAAgB3H,OAAQv9B,MAAe,IAE3C4C,EAAG5C,SAAUA,EAAS/C,EAAG+C,EAAS9C,EAAG8C,EAASL,EAAGK,EAASrE,GAC1DupC,GAAgB73B,KAAMrN,IAQxB,QAASw9B,KAER,IAAM,GAAIn7B,GAAI,EAAGA,EAAIq+B,EAAkBv/B,OAAQkB,IAEd,IAA3Bq+B,EAAmBr+B,KAEvBO,EAAGo+B,yBAA0B3+B,GAC7Bq+B,EAAmBr+B,GAAM,EAM3B8T,MAEA8qB,EAA2B,KAE3B0D,GAAqB,KACrBG,MAEAxD,EAAkB,KAElB6B,GAAmB,KACnBM,GAAkB,KAElBZ,EAAYrF,QACZt9B,EAAYs9B,QACZr9B,EAAcq9B,QA/mBf,GAAIqF,GAAc,GAAI/F,GAClB58B,EAAc,GAAIu9B,GAClBt9B,EAAgB,GAAI6+B,GAEpBmG,EAAsBviC,EAAGu+B,aAAcv+B,EAAGwiC,oBAC1C3E,EAAgB,GAAItf,YAAYgkB,GAChCzE,EAAoB,GAAIvf,YAAYgkB,GACpCvE,EAAoB,GAAIzf,YAAYgkB,GAEpChvB,KAEA8qB,EAA2B,KAE3BK,EAAkB,KAClBgB,EAAuB,KACvBE,EAAkB,KAClBC,EAAkB,KAClBF,GAA4B,KAC5BG,GAAuB,KACvBC,GAAuB,KACvBpB,IAA2B,EAE3B4B,GAAmB,KACnBM,GAAkB,KAElBM,GAAmB,KAEnBK,GAA6B,KAC7BC,GAA4B,KAE5BE,GAAqB,KAErBG,GAAc9hC,EAAGu+B,aAAcv+B,EAAGyiC,yBAElCV,GAAqB,KACrBG,MAEAG,GAAiB,GAAIvlC,GACrBwlC,GAAkB,GAAIxlC,GAqBtBqlC,KAwjBJ,OAvjBAA,IAAeniC,EAAG0G,YAAeJ,EAAetG,EAAG0G,WAAY1G,EAAG0G,WAAY,GAC9Ey7B,GAAeniC,EAAG81B,kBAAqBxvB,EAAetG,EAAG81B,iBAAkB91B,EAAG82B,4BAA6B,IAwjB1G4L,SACCv6B,MAAO83B,EACP7e,MAAO9jB,EACPigC,QAAShgC,GAGVkI,KAAMA,EACNiE,eAAgBA,EAChBC,gBAAiBA,EACjBu0B,0BAA2BA,EAC3Bt0B,wBAAyBA,EACzBoB,OAAQA,EACRjB,QAASA,EACT6sB,4BAA6BA,EAE7BhrB,YAAaA,EAEbo0B,cAAeA,EACfxxB,aAAcA,EACdvE,cAAeA,EACfwzB,aAAcA,EACdyC,eAAgBA,EAChBC,gBAAiBA,EACjBE,eAAgBA,EAChBC,aAAcA,EAEd5C,aAAcA,EACdC,YAAaA,EAEbuD,aAAcA,EACdG,iBAAkBA,EAElBK,eAAgBA,EAChBxpB,eAAgBA,EAEhBvN,cAAeA,EACflE,YAAaA,EACbowB,qBAAsBA,EACtBlwB,WAAYA,EAEZsR,WAAYA,EACZkkB,WAAYA,EACZqB,aAAcA,EAEdtgC,QAASA,EACTE,SAAUA,EAEVw9B,MAAOA,GAUT,QAAS+H,IAAmB3iC,EAAImR,EAAYT,GAI3C,QAAS6mB,KAER,GAAuB57B,SAAlBinC,EAA8B,MAAOA,EAE1C,IAAIvd,GAAYlU,EAAW8T,IAAK,iCAYhC,OARC2d,GAFkB,OAAdvd,EAEYrlB,EAAGu+B,aAAclZ,EAAUwd,gCAI3B,EAQlB,QAAS9S,GAAiB9f,GAEzB,GAAmB,UAAdA,EAAwB,CAE5B,GAAKjQ,EAAG8iC,yBAA0B9iC,EAAGyI,cAAezI,EAAG+iC,YAAa9yB,UAAY,GAC3EjQ,EAAG8iC,yBAA0B9iC,EAAGwI,gBAAiBxI,EAAG+iC,YAAa9yB,UAAY,EAEjF,MAAO,OAIRA,GAAY,UAIb,MAAmB,YAAdA,GAECjQ,EAAG8iC,yBAA0B9iC,EAAGyI,cAAezI,EAAGgjC,cAAe/yB,UAAY,GAC7EjQ,EAAG8iC,yBAA0B9iC,EAAGwI,gBAAiBxI,EAAGgjC,cAAe/yB,UAAY,EAE5E,UAMF,OAhDR,GAAI2yB,GAoDA3yB,EAAqCtU,SAAzB+U,EAAWT,UAA0BS,EAAWT,UAAY,QACxEgzB,EAAelT,EAAiB9f,EAE/BgzB,KAAiBhzB,IAErBzR,QAAQgc,KAAM,uBAAwBvK,EAAW,uBAAwBgzB,EAAc,YACvFhzB,EAAYgzB,EAIb,IAAIxa,GAAyB/X,EAAW+X,0BAA2B,KAAWtX,EAAW8T,IAAK,kBAE1F6c,EAAc9hC,EAAGu+B,aAAcv+B,EAAGyiC,yBAClCS,EAAoBljC,EAAGu+B,aAAcv+B,EAAGmjC,gCACxCtsB,EAAiB7W,EAAGu+B,aAAcv+B,EAAGojC,kBACrC/M,EAAiBr2B,EAAGu+B,aAAcv+B,EAAGqjC,2BAErCC,EAAgBtjC,EAAGu+B,aAAcv+B,EAAGwiC,oBACpC9T,EAAoB1uB,EAAGu+B,aAAcv+B,EAAGujC,4BACxCC,EAAcxjC,EAAGu+B,aAAcv+B,EAAGyjC,qBAClCC,EAAsB1jC,EAAGu+B,aAAcv+B,EAAG2jC,8BAE1CzT,EAAiBgT,EAAoB,EACrCU,IAA2BzyB,EAAW8T,IAAK,qBAC3CsJ,EAAsB2B,GAAkB0T,CAE5C,QAECrM,iBAAkBA,EAClBxH,gBAAiBA,EAEjB9f,UAAWA,EACXwY,uBAAwBA,EAExBqZ,YAAaA,EACboB,kBAAmBA,EACnBrsB,eAAgBA,EAChBwf,eAAgBA,EAEhBiN,cAAeA,EACf5U,kBAAmBA,EACnB8U,YAAaA,EACbE,oBAAqBA,EAErBxT,eAAgBA,EAChB0T,sBAAuBA,EACvBrV,oBAAqBA,GAUvB,QAASsV,IAAiB7jC,GAEzB,GAAImR,KAEJ,QAEC8T,IAAK,SAAWxpB,GAEf,GAA4BE,SAAvBwV,EAAY1V,GAEhB,MAAO0V,GAAY1V,EAIpB,IAAI4pB,EAEJ,QAAS5pB,GAER,IAAK,sBACJ4pB,EAAYrlB,EAAG8jC,aAAc,wBAA2B9jC,EAAG8jC,aAAc,4BAA+B9jC,EAAG8jC,aAAc,6BACzH,MAED,KAAK,iCACJze,EAAYrlB,EAAG8jC,aAAc,mCAAsC9jC,EAAG8jC,aAAc,uCAA0C9jC,EAAG8jC,aAAc,wCAC/I,MAED,KAAK,gCACJze,EAAYrlB,EAAG8jC,aAAc,kCAAqC9jC,EAAG8jC,aAAc,sCAAyC9jC,EAAG8jC,aAAc,uCAC7I,MAED,KAAK,iCACJze,EAAYrlB,EAAG8jC,aAAc,mCAAsC9jC,EAAG8jC,aAAc,wCACpF,MAED,KAAK,gCACJze,EAAYrlB,EAAG8jC,aAAc,gCAC7B,MAED,SACCze,EAAYrlB,EAAG8jC,aAAcroC,GAY/B,MARmB,QAAd4pB,GAEJ7mB,QAAQgc,KAAM,wBAA0B/e,EAAO,6BAIhD0V,EAAY1V,GAAS4pB,EAEdA,IAQV,QAAS0e,MA4FR,QAASC,KAEHC,EAAQ7oC,QAAU8oC,IAEtBD,EAAQ7oC,MAAQ8oC,EAChBD,EAAQ72B,YAAc+2B,EAAkB,GAIzC/uB,EAAMgvB,UAAYD,EAInB,QAASE,GAAenxB,EAAQhK,EAAQo7B,EAAWC,GAElD,GAAIC,GAAqB,OAAXtxB,EAAkBA,EAAO3U,OAAS,EAC/CkmC,EAAW,IAEZ,IAAiB,IAAZD,EAAgB,CAIpB,GAFAC,EAAWR,EAAQ7oC,MAEdmpC,KAAkB,GAAqB,OAAbE,EAAoB,CAElD,GAAIC,GAAWJ,EAAsB,EAAVE,EAC1BG,EAAaz7B,EAAOoB,kBAErBs6B,GAAiBC,gBAAiBF,IAEhB,OAAbF,GAAqBA,EAASlmC,OAASmmC,KAE3CD,EAAW,GAAIpmC,cAAcqmC,GAI9B,KAAM,GAAIjlC,GAAI,EAAGqlC,EAAKR,EACjB7kC,IAAM+kC,IAAY/kC,EAAGqlC,GAAM,EAE/BC,EAAMt6B,KAAMyI,EAAQzT,IAClB4K,aAAcs6B,EAAYC,GAE5BG,EAAMtyB,OAAOjT,QAASilC,EAAUK,GAChCL,EAAUK,EAAK,GAAMC,EAAMryB,SAM7BuxB,EAAQ7oC,MAAQqpC,EAChBR,EAAQ72B,aAAc,EAKvB,MADAgI,GAAMgvB,UAAYI,EACXC,EAhJR,GAAIrvB,GAAQ7c,KAEX2rC,EAAc,KACdC,EAAkB,EAClBtvB,GAAuB,EACvBmwB,GAAmB,EAEnBD,EAAQ,GAAIvyB,IACZoyB,EAAmB,GAAIryB,IAEvB0xB,GAAY7oC,MAAO,KAAMgS,aAAa,EAEvC7U,MAAK0rC,QAAUA,EACf1rC,KAAK6rC,UAAY,EAEjB7rC,KAAKkN,KAAO,SAAUyN,EAAQ+xB,EAAqB/7B,GAElD,GAAI4O,GACe,IAAlB5E,EAAO3U,QACP0mC,GAGoB,IAApBd,GACAtvB,CAOD,OALAA,GAAuBowB,EAEvBf,EAAcG,EAAenxB,EAAQhK,EAAQ,GAC7Ci7B,EAAkBjxB,EAAO3U,OAElBuZ,GAIRvf,KAAK2sC,aAAe,WAEnBF,GAAmB,EACnBX,EAAe,OAIhB9rC,KAAK4sC,WAAa,WAEjBH,GAAmB,EACnBhB,KAIDzrC,KAAK6sC,SAAW,SAAUlyB,EAAQnD,EAAa7G,EAAQm8B,EAAOC,GAE7D,IAAOzwB,GACM,OAAX3B,GAAqC,IAAlBA,EAAO3U,QAC1BymC,IAAsBj1B,EAGlBi1B,EAGJX,EAAe,MAIfL,QAGK,CAEN,GAAIuB,GAAUP,EAAmB,EAAIb,EACpCqB,EAAoB,EAAVD,EAEVd,EAAWY,EAAMI,eAAiB,IAEnCxB,GAAQ7oC,MAAQqpC,EAEhBA,EAAWJ,EAAenxB,EAAQhK,EAAQs8B,EAASF,EAEnD,KAAM,GAAI7lC,GAAI,EAAGA,IAAM+lC,IAAY/lC,EAElCglC,EAAUhlC,GAAMykC,EAAazkC,EAI9B4lC,GAAMI,cAAgBhB,EACtBlsC,KAAK6rC,WAAamB,IA2ErB,QAASG,IAAeh1B,GAqRvB,QAASi1B,KAER,MAAgC,QAAzBC,GAAgCC,GAAc,EAItD,QAASC,GAAcxmC,EAAGqB,EAAGC,EAAG0M,GAE1By4B,KAAwB,IAE5BzmC,GAAKgO,EAAG3M,GAAK2M,EAAG1M,GAAK0M,GAItB9G,GAAMyR,WAAY3Y,EAAGqB,EAAGC,EAAG0M,GAI5B,QAAS04B,KAERx/B,GAAMf,OAENe,GAAMtJ,QAAS+oC,GAAgBx7B,KAAMy7B,IAAWC,eAAgBN,KAChEr/B,GAAMpJ,SAAUgpC,GAAiB37B,KAAM47B,IAAYF,eAAgBN,KAEnEC,EAAcQ,GAAYhnC,EAAGgnC,GAAY3lC,EAAG2lC,GAAY1lC,EAAG2lC,IAI5D,QAASt6B,KAERu6B,GAAkB,KAClBC,GAAiB,KAEjBC,GAA0B,GAC1BC,GAAqB,GAErBngC,GAAMo0B,QA4MP,QAASgM,GAAepV,GAEvBA,EAAMqV,iBAEN56B,IACA+5B,IAEA1U,GAAWlY,QAIZ,QAAS0tB,GAAmBtV,GAE3B,GAAInjB,GAAWmjB,EAAM9X,MAErBrL,GAASwjB,oBAAqB,UAAWiV,GAEzCC,EAAoB14B,GAMrB,QAAS04B,GAAoB14B,GAE5B24B,EAAiC34B,GAEjCijB,GAAAA,UAAmBjjB,GAKpB,QAAS24B,GAAiC34B,GAEzC,GAAI4iB,GAAcK,GAAWrM,IAAK5W,GAAW3J,OAE7C2J,GAAS3J,QAAU/I,OAEEA,SAAhBs1B,GAEJgW,GAAa/V,eAAgBD,GAuT/B,QAASiW,GAAuB74B,EAAU3J,EAASkP,EAAUuzB,GAE5D,GAAI9hB,EAEJ,IAAKzR,GAAYA,EAASwzB,4BAEzB/hB,EAAYlU,GAAW8T,IAAK,0BAET,OAAdI,GAGJ,WADA7mB,SAAQC,MAAO,iJAOG9C,UAAfwrC,IAA2BA,EAAa,GAE7C3gC,GAAMkD,gBAEN,IAAI29B,GAAqBzzB,EAASjM,WAE9B2/B,EAAoB5iC,EAAQspB,gBAE5BuZ,EAAiCl5B,EAASmD,sBAE9C,KAAM,GAAI/V,KAAQ6rC,GAAoB,CAErC,GAAIE,GAAmBF,EAAmB7rC,EAE1C,IAAK+rC,GAAoB,EAAI,CAE5B,GAAIC,GAAoBJ,EAAoB5rC,EAE5C,IAA2BE,SAAtB8rC,EAAkC,CAEtC,GAAI1sC,GAAOub,GAAIxM,MACX7K,EAAQwoC,EAAkBxoC,MAC1B+e,EAAaypB,EAAkBzpB,UAE9B/e,aAAiBZ,cAErBtD,EAAOub,GAAIxM,MAEA7K,YAAiBigB,cAE5B1gB,QAAQgc,KAAM,gDAEHvb,YAAiB2G,aAE5B7K,EAAOub,GAAIlL,eAEAnM,YAAiB0f,YAE5B5jB,EAAOub,GAAIoxB,MAEAzoC,YAAiB8f,aAE5BhkB,EAAOub,GAAI4O,aAEAjmB,YAAiBY,YAE5B9E,EAAOub,GAAIqxB,IAEA1oC,YAAiBof,WAE5BtjB,EAAOub,GAAIsxB,KAEA3oC,YAAiBsf,cAE5BxjB,EAAOub,GAAIzP,cAIZ,IAAInE,GAAO+kC,EAAkB1pB,SACzBqU,EAASyV,GAAQ5V,mBAAoBwV,EAEzC,IAAKA,GAAqBA,EAAkB/hB,6BAA+B,CAE1E,GAAIC,GAAO8hB,EAAkB9hB,KACzBmiB,EAASniB,EAAKmiB,OACd1rC,EAASqrC,EAAkBrrC,MAE1BupB,IAAQA,EAAKoiB,8BAEjBvhC,GAAM03B,0BAA2BsJ,EAAkB7hB,EAAKwY,iBAAkB9Y,GAEtC1pB,SAA/BiY,EAAS2R,oBAEb3R,EAAS2R,kBAAoBI,EAAKwY,iBAAmBxY,EAAK9oB,QAM3D2J,GAAMmD,gBAAiB69B,GAIxBlxB,GAAItQ,WAAYsQ,GAAIrQ,aAAcmsB,GAClC9b,GAAIzM,oBAAqB29B,EAAkB9kC,EAAM3H,EAAMijB,EAAY8pB,EAASniB,EAAK1mB,MAAMk0B,mBAAqBgU,EAAaW,EAAS1rC,GAAWupB,EAAK1mB,MAAMk0B,uBAInJsU,IAAqBA,EAAkBO,4BAE3CxhC,GAAM03B,0BAA2BsJ,EAAkBC,EAAkBtJ,iBAAkB9Y,GAEnD1pB,SAA/BiY,EAAS2R,oBAEb3R,EAAS2R,kBAAoBkiB,EAAkBtJ,iBAAmBsJ,EAAkB5qC,QAMrF2J,GAAMmD,gBAAiB69B,GAIxBlxB,GAAItQ,WAAYsQ,GAAIrQ,aAAcmsB,GAClC9b,GAAIzM,oBAAqB29B,EAAkB9kC,EAAM3H,EAAMijB,EAAY,EAAGmpB,EAAazkC,EAAO+kC,EAAkBxoC,MAAMk0B,uBAI7G,IAAwCx3B,SAAnC4rC,EAA+C,CAE1D,GAAInsC,GAAQmsC,EAAgC9rC,EAE5C,IAAeE,SAAVP,EAEJ,OAASA,EAAMmD,QAEd,IAAK,GACJ+X,GAAI2xB,gBAAiBT,EAAkBpsC,EACvC,MAED,KAAK,GACJkb,GAAI4xB,gBAAiBV,EAAkBpsC,EACvC,MAED,KAAK,GACJkb,GAAI6xB,gBAAiBX,EAAkBpsC,EACvC,MAED,SACCkb,GAAI8xB,gBAAiBZ,EAAkBpsC,MAY7CoL,GAAMoD,0BAMP,QAASy+B,GAAkB/6B,EAAG1M,GAE7B,MAAOrF,MAAK+sC,IAAK1nC,EAAG,IAAQrF,KAAK+sC,IAAKh7B,EAAG,IAI1C,QAASD,GAAmBC,EAAG1M,GAE9B,MAAK0M,GAAEmG,OAAOlG,cAAgB3M,EAAE6S,OAAOlG,YAE/BD,EAAEmG,OAAOlG,YAAc3M,EAAE6S,OAAOlG,YAE5BD,EAAEe,SAAS3J,SAAW9D,EAAEyN,SAAS3J,SAAW4I,EAAEe,SAAS3J,UAAY9D,EAAEyN,SAAS3J,QAElF4I,EAAEe,SAAS3J,QAAQrB,GAAKzC,EAAEyN,SAAS3J,QAAQrB,GAEvCiK,EAAEe,SAAShL,KAAOzC,EAAEyN,SAAShL,GAEjCiK,EAAEe,SAAShL,GAAKzC,EAAEyN,SAAShL,GAEvBiK,EAAEvQ,IAAM6D,EAAE7D,EAEduQ,EAAEvQ,EAAI6D,EAAE7D,EAIRuQ,EAAEjK,GAAKzC,EAAEyC,GAMlB,QAASklC,GAA0Bj7B,EAAG1M,GAErC,MAAK0M,GAAEmG,OAAOlG,cAAgB3M,EAAE6S,OAAOlG,YAE/BD,EAAEmG,OAAOlG,YAAc3M,EAAE6S,OAAOlG,YAEjCD,EAAEvQ,IAAM6D,EAAE7D,EAET6D,EAAE7D,EAAIuQ,EAAEvQ,EAIRuQ,EAAEjK,GAAKzC,EAAEyC,GAkLlB,QAASmlC,GAAgB/0B,EAAQG,EAAUvF,EAAUtR,EAAGqd,GAEvD,GAAInb,GAAO2hB,CAINvS,GAASgB,aAEbpQ,EAAQwpC,GACR7nB,IAAW8nB,KAIXzpC,EAAQ0pC,GACR/nB,IAAWgoB,GAMZ,IAAIC,GAAa5pC,EAAO2hB,EAEJjlB,UAAfktC,GAEJA,EAAWxlC,GAAKoQ,EAAOpQ,GACvBwlC,EAAWp1B,OAASA,EACpBo1B,EAAWj1B,SAAWA,EACtBi1B,EAAWx6B,SAAWA,EACtBw6B,EAAW9rC,EAAI+rC,GAAS/rC,EACxB8rC,EAAWzuB,MAAQA,IAInByuB,GACCxlC,GAAIoQ,EAAOpQ,GACXoQ,OAAQA,EACRG,SAAUA,EACVvF,SAAUA,EACVtR,EAAG+rC,GAAS/rC,EACZqd,MAAOA,GAIRnb,EAAM4E,KAAMglC,IAQd,QAASE,GAAkBt1B,GAE1B,GAAIG,GAAWH,EAAOG,QAQtB,OANiC,QAA5BA,EAASiM,gBACbjM,EAASo1B,wBAEVC,GAAQx+B,KAAMmJ,EAASiM,gBACtBxV,aAAcoJ,EAAOrJ,aAEf8+B,EAAkBD,IAI1B,QAASE,GAAkBx9B,GAM1B,MAJAs9B,IAAQ52B,OAAOpN,IAAK,EAAG,EAAG,GAC1BgkC,GAAQ32B,OAAS,kBACjB22B,GAAQ5+B,aAAcsB,EAAOvB,aAEtB8+B,EAAkBD,IAI1B,QAASC,GAAkBE,GAE1B,IAAOjzB,GAASkzB,iBAAkBD,GAAW,OAAO,CAEpD,IAAIhF,GAAYkF,GAAUlF,SAE1B,IAAmB,IAAdA,EAAkB,OAAO,CAE9B,IAAIlxB,GAASq2B,GAAMz5B,eAElBuC,EAAS+2B,EAAO/2B,OAChBm3B,GAAWJ,EAAO92B,OAClB7S,EAAI,CAEL,GAGC,IAAKyT,EAAQzT,GAAIgqC,gBAAiBp3B,GAAWm3B,EAAS,OAAO,UAEjD/pC,IAAM2kC,EAEnB,QAAO,EAIR,QAAS1uB,GAAejC,EAAQvK,GAE/B,GAAKuK,EAAOnF,WAAY,EAAxB,CAEA,GAAIA,GAA0D,KAA9CmF,EAAOmC,OAAOC,KAAO3M,EAAO0M,OAAOC,KAEnD,IAAKvH,EAEJ,GAAKmF,EAAOi2B,QAEX76B,EAAOhL,KAAM4P,OAEP,IAAKA,EAAOk2B,UAEbl2B,EAAOyC,iBAAkB,GAASizB,EAAkB11B,MAAa,IAErEtH,GAAQtI,KAAM4P,OAIT,IAAKA,EAAOm2B,YAElBl+B,GAAW7H,KAAM4P,OAEX,IAAKA,EAAOo2B,wBAEbN,GAAMO,eAAgB,IAE1BhB,GAAS5vB,sBAAuBzF,EAAOrJ,aACvC0+B,GAASv+B,gBAAiBiM,KAI3BgyB,EAAgB/0B,EAAQ,KAAMA,EAAOpF,SAAUy6B,GAAS/rC,EAAG,UAErD,KAAK0W,EAAOqC,QAAUrC,EAAOsC,QAAUtC,EAAOuC,YAE/CvC,EAAOgB,eAEXhB,EAAO+a,SAAS1V,SAIZrF,EAAOyC,iBAAkB,GAAS6yB,EAAkBt1B,MAAa,GAAO,CAE5E,GAAIpF,GAAWoF,EAAOpF,QAEtB,IAAKA,EAASC,WAAY,EAAO,CAE3Bi7B,GAAMO,eAAgB,IAE1BhB,GAAS5vB,sBAAuBzF,EAAOrJ,aACvC0+B,GAASv+B,gBAAiBiM,IAI3B,IAAI5C,GAAWi0B,GAAQ/uB,OAAQrF,EAE/B,IAAKpF,EAAS0L,gBAKb,IAAM,GAHFC,GAASpG,EAASoG,OAClBC,EAAY5L,EAAS4L,UAEfxa,EAAI,EAAGyK,EAAI8P,EAAOzb,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjD,GAAI2a,GAAQJ,EAAQva,GAChB4a,EAAgBJ,EAAWG,EAAME,cAEhCD,GAAc/L,WAAY,GAE9Bk6B,EAAgB/0B,EAAQG,EAAUyG,EAAeyuB,GAAS/rC,EAAGqd,OAQ/DouB,GAAgB/0B,EAAQG,EAAUvF,EAAUy6B,GAAS/rC,EAAG,OAc7D,IAAM,GAFFzD,GAAWma,EAAOna,SAEZmG,EAAI,EAAGyK,EAAI5Q,EAASiF,OAAY2L,EAAJzK,EAAOA,IAE5CiW,EAAepc,EAAUmG,GAAKyJ,IAMhC,QAAS6gC,GAAeC,EAAY9gC,EAAQ2E,EAAKo8B,GAEhD,IAAM,GAAIxqC,GAAI,EAAGyK,EAAI8/B,EAAWzrC,OAAY2L,EAAJzK,EAAOA,IAAO,CAErD,GAAIopC,GAAamB,EAAYvqC,GAEzBgU,EAASo1B,EAAWp1B,OACpBG,EAAWi1B,EAAWj1B,SACtBvF,EAAgC1S,SAArBsuC,EAAiCpB,EAAWx6B,SAAW47B,EAClE7vB,EAAQyuB,EAAWzuB,KAKvB,IAHA3G,EAAOlH,gBAAgB4B,iBAAkBjF,EAAOoB,mBAAoBmJ,EAAOrJ,aAC3EqJ,EAAOwI,aAAa4oB,gBAAiBpxB,EAAOlH,iBAEvCkH,EAAOo2B,wBAA0B,CAErCK,EAAa77B,EAEb,IAAI3J,GAAUylC,EAAYjhC,EAAQ2E,EAAKQ,EAAUoF,EAEjDizB,IAA0B,GAE1BjzB,EAAO9Z,OAAQ,SAAW8Z,GAEzB81B,GAAMa,sBAAuB32B,EAAQ/O,EAAS2J,SAMhB,QAA1BoF,EAAO8I,gBAA0B9I,EAAO8I,iBAE7CgtB,GAAMhvB,mBAAoBrR,EAAQ2E,EAAK+F,EAAUvF,EAAUoF,EAAQ2G,IAQtE,QAASiwB,GAAch8B,EAAUR,EAAK4F,GAErC,GAAI62B,GAAqBhZ,GAAWrM,IAAK5W,GAErCqC,EAAau2B,GAAarX,cAC5BvhB,EAAUgF,GAASxF,EAAKy7B,GAAUlF,UAAW3wB,GAE3CuW,EAAOid,GAAapW,eAAgBxiB,EAAUqC,GAE9ChM,EAAU4lC,EAAmB5lC,QAC7B6lC,GAAgB,CAEpB,IAAiB5uC,SAAZ+I,EAGJ2J,EAASkkB,iBAAkB,UAAWuU,OAEhC,IAAKpiC,EAAQslB,OAASA,EAG5Bgd,EAAiC34B,OAE3B,CAAA,GAA6B1S,SAAxB+U,EAAWof,SAGtB,MAKAya,IAAgB,EAIjB,GAAKA,EAAgB,CAEpB,GAAK75B,EAAWof,SAAW,CAE1B,GAAIxoB,GAASkQ,GAAW9G,EAAWof,SAEnCwa,GAAmBrgB,eAClBxuB,KAAM4S,EAAStT,KACfgN,SAAUhO,EAAQ2d,cAAcvC,MAAO7N,EAAOS,UAC9CR,aAAcD,EAAOC,aACrBE,eAAgBH,EAAOG,oBAKxB6iC,GAAmBrgB,eAClBxuB,KAAM4S,EAAStT,KACfgN,SAAUsG,EAAStG,SACnBR,aAAc8G,EAAS9G,aACvBE,eAAgB4G,EAAS5G,eAK3B4G,GAAS4b,cAAgBqgB,EAAmBrgB,cAE5CvlB,EAAUuiC,GAAanW,eAAgBziB,EAAUqC,EAAYsZ,GAE7DsgB,EAAmB5lC,QAAUA,EAC7B2J,EAAS3J,QAAUA,EAIpB,GAAIiD,GAAajD,EAAQspB,eAEzB,IAAK3f,EAAS4C,aAAe,CAE5B5C,EAASm8B,yBAA2B,CAEpC,KAAM,GAAI/qC,GAAI,EAAGA,EAAI8pC,GAAMhZ,gBAAiB9wB,IAEtCkI,EAAY,cAAgBlI,IAAO,GAEvC4O,EAASm8B,2BAQZ,GAAKn8B,EAAS6C,aAAe,CAE5B7C,EAASo8B,yBAA2B,CAEpC,KAAM,GAAIhrC,GAAI,EAAGA,EAAI8pC,GAAM/Y,gBAAiB/wB,IAEtCkI,EAAY,cAAgBlI,IAAO,GAEvC4O,EAASo8B,2BAQZ,GAAI1iC,GAAWuiC,EAAmBrgB,cAAcliB,WAEzCsG,EAASse,mBACTte,EAASid,qBACTjd,EAAS0C,YAAa,KAE5Bu5B,EAAmBte,kBAAoBsd,GAAUlF,UACjDr8B,EAAS+H,eAAiBw5B,GAAUrF,SAIrCqG,EAAmBz8B,IAAMA,EAIzBy8B,EAAmBI,WAAar3B,GAAQs3B,KAEnCt8B,EAASQ,SAIb9G,EAAS6iC,kBAAkBxvC,MAAQiY,GAAQw3B,QAC3C9iC,EAAS+iC,kBAAkB1vC,MAAQiY,GAAQod,YAC3C1oB,EAASgjC,WAAW3vC,MAAQiY,GAAQsd,KACpC5oB,EAASijC,YAAY5vC,MAAQiY,GAAQqd,MACrC3oB,EAASkjC,iBAAiB7vC,MAAQiY,GAAQud,KAE1C7oB,EAASmjC,qBAAqB9vC,MAAQiY,GAAQ63B,qBAC9CnjC,EAASojC,wBAAwB/vC,MAAQiY,GAAQ83B,wBACjDpjC,EAASqjC,cAAchwC,MAAQiY,GAAQ+3B,cACvCrjC,EAASsjC,iBAAiBjwC,MAAQiY,GAAQg4B,iBAC1CtjC,EAASujC,eAAelwC,MAAQiY,GAAQi4B,eACxCvjC,EAASwjC,kBAAkBnwC,MAAQiY,GAAQk4B,kBAI5C,IAAIC,GAAelB,EAAmB5lC,QAAQopB,cAC7C2d,EACEhnC,EAAcinC,aAAcF,EAAa1sC,IAAKiJ,EAEjDuiC,GAAmBmB,aAAeA,EAClCnB,EAAmBqB,gBACjBlnC,EAAcmnC,aAAcH,EAAc1jC,GAI7C,QAASmiC,GAAa77B,GAErBA,EAASU,OAASuG,GACf9O,GAAMuD,QAASuM,GAAItM,WACnBxD,GAAMwE,OAAQsL,GAAItM,WAErBxD,GAAMk3B,aAAcrvB,EAASU,OAASyG,IAEtCnH,EAASgB,eAAgB,EACtB7I,GAAMoF,YAAayC,EAASxC,SAAUwC,EAASvC,cAAeuC,EAAStC,SAAUsC,EAASrC,SAAUqC,EAASsB,mBAAoBtB,EAASoB,cAAepB,EAASqB,cAAerB,EAASgC,oBAC1L7J,GAAMoF,YAAa6yB,IAEtBj4B,GAAMi3B,aAAcpvB,EAASuB,WAC7BpJ,GAAMgI,aAAcH,EAASI,WAC7BjI,GAAMyD,cAAeoE,EAASK,YAC9BlI,GAAMw5B,cAAe3xB,EAAS2B,YAC9BxJ,GAAM66B,iBAAkBhzB,EAAS6B,cAAe7B,EAAS8B,oBAAqB9B,EAAS+B,oBAIxF,QAAS+5B,GAAYjhC,EAAQ2E,EAAKQ,EAAUoF,GAE3Co4B,GAAoB,CAEpB,IAAIvB,GAAqBhZ,GAAWrM,IAAK5W,EAEzC,IAAKy9B,KAECC,IAAyB7iC,IAAWu9B,IAAiB,CAEzD,GAAIuF,GACF9iC,IAAWu9B,IACXp4B,EAAShL,KAAOsjC,EAKlB2C,IAAUlE,SACR/2B,EAASyB,eAAgBzB,EAAS0B,YAClC7G,EAAQohC,EAAoB0B,GAM3B39B,EAASjB,eAAgB,IAEOzR,SAA/B2uC,EAAmB5lC,QAEvB2J,EAASjB,aAAc,EAEZiB,EAASR,KAAOy8B,EAAmBz8B,MAAQA,EAEtDQ,EAASjB,aAAc,EAEZiB,EAASQ,QAAUy7B,EAAmBI,aAAer3B,GAAQs3B,KAExEt8B,EAASjB,aAAc,EAE6BzR,SAAzC2uC,EAAmBte,mBAC9Bse,EAAmBte,oBAAsBsd,GAAUlF,YAEnD/1B,EAASjB,aAAc,IAMpBiB,EAASjB,cAEbi9B,EAAch8B,EAAUR,EAAK4F,GAC7BpF,EAASjB,aAAc,EAIxB,IAAI6+B,IAAiB,EACjBC,GAAkB,EAClBC,GAAgB,EAEhBznC,EAAU4lC,EAAmB5lC,QAChC0nC,EAAa1nC,EAAQopB,cACrBue,EAAa/B,EAAmBrgB,cAAcliB,QAqB/C,IAnBKrD,EAAQrB,KAAOmjC,KAEnBlwB,GAAI7M,WAAY/E,EAAQA,SACxB8hC,GAAkB9hC,EAAQrB,GAE1B4oC,GAAiB,EACjBC,GAAkB,EAClBC,GAAgB,GAIZ99B,EAAShL,KAAOsjC,KAEpBA,GAAqBt4B,EAAShL,GAE9B6oC,GAAkB,GAIdD,GAAkB/iC,IAAWu9B,GAAiB,CA4BlD,GA1BA2F,EAAWnnC,IAAKqR,GAAKpN,EAAQ,oBAExBqK,GAAakV,wBAEjB2jB,EAAW7oC,SAAU+S,GAAK,gBACxB,GAAQ/a,KAAKoyB,IAAKzkB,EAAO8E,IAAM,GAAQzS,KAAK+wC,MAK1CpjC,IAAWu9B,KAEfA,GAAiBv9B,EAMjBgjC,GAAkB,EAClBC,GAAgB,GAOZ99B,EAASse,kBACTte,EAASk+B,qBACTl+B,EAASm+B,wBACTn+B,EAASkP,OAAS,CAEtB,GAAIkvB,GAAUL,EAAWrtC,IAAI2tC,cAEZ/wC,UAAZ8wC,GAEJA,EAAQlpC,SAAU+S,GAChBwyB,GAAS5vB,sBAAuBhQ,EAAOkB,eAMtCiE,EAASk+B,qBACTl+B,EAASs+B,uBACTt+B,EAASu+B,qBACTv+B,EAASm+B,wBACTn+B,EAASse,kBACTte,EAAS2C,WAEbo7B,EAAW7oC,SAAU+S,GAAK,aAAcpN,EAAOoB,oBAIhD8hC,EAAWnnC,IAAKqR,GAAKizB,GAAO,uBAC5B6C,EAAWnnC,IAAKqR,GAAKizB,GAAO,yBAQ7B,GAAKl7B,EAAS2C,SAAW,CAExBo7B,EAAWS,YAAav2B,GAAK7C,EAAQ,cACrC24B,EAAWS,YAAav2B,GAAK7C,EAAQ,oBAErC,IAAI+a,GAAW/a,EAAO+a,QAEjBA,KAECjb,GAAagb,qBAAuBC,EAAS3C,kBAEjDugB,EAAWnnC,IAAKqR,GAAKkY,EAAU,eAC/B4d,EAAWnnC,IAAKqR,GAAKkY,EAAU,oBAC/B4d,EAAWnnC,IAAKqR,GAAKkY,EAAU,sBAI/B4d,EAAWS,YAAav2B,GAAKkY,EAAU,iBAQrC0d,IAEC79B,EAASQ,QAWbi+B,EAA+BT,EAAYF,GAMvCt+B,GAAOQ,EAASR,KAEpBk/B,EAAoBV,EAAYx+B,IAI5BQ,EAASu+B,qBACTv+B,EAASs+B,uBACTt+B,EAASk+B,qBACTl+B,EAASm+B,wBACTn+B,EAAS2+B,sBAEbC,EAAuBZ,EAAYh+B,GAM/BA,EAAS6+B,oBAEbC,EAAqBd,EAAYh+B,GAEtBA,EAAS++B,sBAEpBD,EAAqBd,EAAYh+B,GACjCg/B,EAAqBhB,EAAYh+B,IAEtBA,EAASi/B,iBAEpBC,EAAuBlB,EAAYh+B,GAExBA,EAASs+B,sBAEpBa,EAAwBnB,EAAYh+B,GAEzBA,EAASk+B,oBAEpBkB,EAAsBpB,EAAYh+B,GAEvBA,EAASq/B,uBAEpBC,EAAyBtB,EAAYh+B,GAE1BA,EAASm+B,uBAEpBoB,EAAyBvB,EAAYh+B,GAE1BA,EAAS2+B,oBAEf3+B,EAAS2D,kBAEbq6B,EAAWr6B,gBAAgB5W,MAAQiT,EAAS2D,gBAC5Cq6B,EAAWp6B,kBAAkB7W,MAAQiT,EAAS4D,kBAC9Co6B,EAAWn6B,iBAAiB9W,MAAQiT,EAAS6D,kBAInC7D,EAASw/B,uBAEpBxB,EAAWnkC,QAAQ9M,MAAQiT,EAASnG,SAIrCzD,EAAcqpC,OACZx3B,GAAKg0B,EAAmBmB,aAAcY,EAAY9C,KAOrD6C,EAAWnnC,IAAKqR,GAAK7C,EAAQ,mBAC7B24B,EAAWnnC,IAAKqR,GAAK7C,EAAQ,gBAC7B24B,EAAW7oC,SAAU+S,GAAK,cAAe7C,EAAOrJ,YAKhD,IAAI2jC,GAAczD,EAAmBqB,eASrC,OAPqB,QAAhBoC,IAEJtpC,EAAcupC,YAAaD,EAAa1B,EAAY54B,EAAQpF,EAAUnF,GACtEzE,EAAcqpC,OAAQx3B,GAAKy3B,EAAa1B,EAAY9C,KAI9C7kC,EAMR,QAASuoC,GAAuBllC,EAAUsG,GAEzCtG,EAASG,QAAQ9M,MAAQiT,EAASnG,QAElCH,EAASkmC,QAAQ7yC,MAAQiT,EAASlG,MAE7BkG,EAAS6/B,UAEbnmC,EAASmmC,SAAS9yC,MAAMqP,KAAM4D,EAAS6/B,UAAW/H,eAAgB93B,EAAS8/B,mBAI5EpmC,EAAShJ,IAAI3D,MAAQiT,EAAStP,IAC9BgJ,EAASuV,YAAYliB,MAAQiT,EAASiP,YACtCvV,EAASgK,SAAS3W,MAAQiT,EAAS0D,SAE9B1D,EAAS+O,QAEbrV,EAASqV,MAAMhiB,MAAQiT,EAAS+O,MAChCrV,EAASsV,eAAejiB,MAAQiT,EAASgP,eAY1C,IAAI+wB,EAwCJ,IAtCK//B,EAAStP,IAEbqvC,EAAa//B,EAAStP,IAEXsP,EAASiP,YAEpB8wB,EAAa//B,EAASiP,YAEXjP,EAAS2D,gBAEpBo8B,EAAa//B,EAAS2D,gBAEX3D,EAASka,UAEpB6lB,EAAa//B,EAASka,UAEXla,EAASia,QAEpB8lB,EAAa//B,EAASia,QAEXja,EAASsd,aAEpByiB,EAAa//B,EAASsd,aAEXtd,EAASud,aAEpBwiB,EAAa//B,EAASud,aAEXvd,EAAS0D,SAEpBq8B,EAAa//B,EAAS0D,SAEX1D,EAASqd,cAEpB0iB,EAAa//B,EAASqd,aAIH/vB,SAAfyyC,EAA2B,CAG1BA,EAAWpf,sBAEfof,EAAaA,EAAW/wC,QAIzB,IAAIjB,GAASgyC,EAAWhyC,OACpBC,EAAS+xC,EAAW/xC,MAExB0L,GAASsmC,aAAajzC,MAAM6J,IAAK7I,EAAO/B,EAAG+B,EAAO9B,EAAG+B,EAAOhC,EAAGgC,EAAO/B,GAIvEyN,EAASwV,OAAOniB,MAAQiT,EAASkP,OAMjCxV,EAASumC,WAAWlzC,MAAciT,EAASkP,QAAUlP,EAASkP,OAAOgxB,cAAwB,GAAJ,EAEzFxmC,EAAS2V,aAAatiB,MAAQiT,EAASqP,aACvC3V,EAAS4V,gBAAgBviB,MAAQiT,EAASsP,gBAI3C,QAASwvB,GAAqBplC,EAAUsG,GAEvCtG,EAASkmC,QAAQ7yC,MAAQiT,EAASlG,MAClCJ,EAASG,QAAQ9M,MAAQiT,EAASnG,QAInC,QAASmlC,GAAqBtlC,EAAUsG,GAEvCtG,EAASymC,SAASpzC,MAAQiT,EAASmgC,SACnCzmC,EAAS0mC,UAAUrzC,MAAQiT,EAASmgC,SAAWngC,EAASqgC,QACxD3mC,EAASK,MAAMhN,MAAQiT,EAASjG,MAIjC,QAASmlC,GAAuBxlC,EAAUsG,GASzC,GAPAtG,EAASkmC,QAAQ7yC,MAAQiT,EAASlG,MAClCJ,EAASG,QAAQ9M,MAAQiT,EAASnG,QAClCH,EAASrF,KAAKtH,MAAQiT,EAAS3L,KAAOmjC,GACtC99B,EAASK,MAAMhN,MAA+B,GAAvBuzC,EAAQC,aAE/B7mC,EAAShJ,IAAI3D,MAAQiT,EAAStP,IAER,OAAjBsP,EAAStP,IAAe,CAE5B,GAAI3C,GAASiS,EAAStP,IAAI3C,OACtBC,EAASgS,EAAStP,IAAI1C,MAE1B0L,GAASsmC,aAAajzC,MAAM6J,IAAK7I,EAAO/B,EAAG+B,EAAO9B,EAAG+B,EAAOhC,EAAGgC,EAAO/B,IAMxE,QAASyyC,GAAoBhlC,EAAU8F,GAEtC9F,EAAS6E,SAASxR,MAAQyS,EAAI1F,MAEzB0F,EAAIC,OAER/F,EAAS2E,QAAQtR,MAAQyS,EAAIE,KAC7BhG,EAAS4E,OAAOvR,MAAQyS,EAAIG,KAEjBH,EAAII,YAEflG,EAAS0E,WAAWrR,MAAQyS,EAAIK,SAMlC,QAASs/B,GAAwBzlC,EAAUsG,GAErCA,EAASod,WAEb1jB,EAAS0jB,SAASrwB,MAAQiT,EAASod,SACnC1jB,EAAS8mC,kBAAkBzzC,MAAQiT,EAASwgC,mBAIxCxgC,EAASqd,cAEb3jB,EAAS2jB,YAAYtwB,MAAQiT,EAASqd,aAMxC,QAAS+hB,GAAsB1lC,EAAUsG,GAExCtG,EAAS+mC,SAAS1zC,MAAQiT,EAASygC,SACnC/mC,EAASgnC,UAAU3zC,MAAQG,KAAK8J,IAAKgJ,EAAS0gC,UAAW,MAEpD1gC,EAASod,WAEb1jB,EAAS0jB,SAASrwB,MAAQiT,EAASod,SACnC1jB,EAAS8mC,kBAAkBzzC,MAAQiT,EAASwgC,mBAIxCxgC,EAASqd,cAEb3jB,EAAS2jB,YAAYtwB,MAAQiT,EAASqd,aAIlCrd,EAASia,UAEbvgB,EAASugB,QAAQltB,MAAQiT,EAASia,QAClCvgB,EAASinC,UAAU5zC,MAAQiT,EAAS2gC,WAIhC3gC,EAASka,YAEbxgB,EAASwgB,UAAUntB,MAAQiT,EAASka,UACpCxgB,EAASknC,YAAY7zC,MAAMqP,KAAM4D,EAAS4gC,cAItC5gC,EAAS2D,kBAEbjK,EAASiK,gBAAgB5W,MAAQiT,EAAS2D,gBAC1CjK,EAASkK,kBAAkB7W,MAAQiT,EAAS4D,kBAC5ClK,EAASmK,iBAAiB9W,MAAQiT,EAAS6D,kBAM7C,QAAS07B,GAAyB7lC,EAAUsG,GAE3CtG,EAASmnC,UAAU9zC,MAAQiT,EAAS6gC,UACpCnnC,EAASonC,UAAU/zC,MAAQiT,EAAS8gC,UAE/B9gC,EAASsd,eAEb5jB,EAAS4jB,aAAavwB,MAAQiT,EAASsd,cAInCtd,EAASud,eAEb7jB,EAAS6jB,aAAaxwB,MAAQiT,EAASud,cAInCvd,EAASod,WAEb1jB,EAAS0jB,SAASrwB,MAAQiT,EAASod,SACnC1jB,EAAS8mC,kBAAkBzzC,MAAQiT,EAASwgC,mBAIxCxgC,EAASqd,cAEb3jB,EAAS2jB,YAAYtwB,MAAQiT,EAASqd,aAIlCrd,EAASia,UAEbvgB,EAASugB,QAAQltB,MAAQiT,EAASia,QAClCvgB,EAASinC,UAAU5zC,MAAQiT,EAAS2gC,WAIhC3gC,EAASka,YAEbxgB,EAASwgB,UAAUntB,MAAQiT,EAASka,UACpCxgB,EAASknC,YAAY7zC,MAAMqP,KAAM4D,EAAS4gC,cAItC5gC,EAAS2D,kBAEbjK,EAASiK,gBAAgB5W,MAAQiT,EAAS2D,gBAC1CjK,EAASkK,kBAAkB7W,MAAQiT,EAAS4D,kBAC5ClK,EAASmK,iBAAiB9W,MAAQiT,EAAS6D,kBAIvC7D,EAASkP,SAGbxV,EAASqnC,gBAAgBh0C,MAAQiT,EAAS+gC,iBAM5C,QAASzB,GAAyB5lC,EAAUsG,GAE3CtG,EAASsnC,UAAUj0C,MAAQiT,EAASghC,UACpCtnC,EAASunC,mBAAmBl0C,MAAQiT,EAASihC,mBAE7C1B,EAAyB7lC,EAAUsG,GAMpC,QAASy+B,GAA+B/kC,EAAU3M,GAEjD2M,EAAS6iC,kBAAkBx9B,YAAchS,EAEzC2M,EAAS+iC,kBAAkB19B,YAAchS,EACzC2M,EAASijC,YAAY59B,YAAchS,EACnC2M,EAASgjC,WAAW39B,YAAchS,EAClC2M,EAASkjC,iBAAiB79B,YAAchS,EAMzC,QAASm0C,GAAc1gC,GAItB,IAAM,GAFF2gC,GAAqB,EAEf/vC,EAAI,EAAGyK,EAAI2E,EAAOtQ,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjD,GAAI4Y,GAAQxJ,EAAQpP,EAEf4Y,GAAMpC,aAEV5C,GAAQqD,QAAS84B,KAA0Bn3B,GAM7ChF,GAAQqD,QAAQnY,OAASixC,EAI1B,QAASC,GAAa5gC,EAAQ3F,GAE7B,GAAIgB,GAAGwlC,EAAIr3B,EAEXlQ,EACAwnC,EACA1pB,EACAlN,EAJAzZ,EAAI,EAAGqB,EAAI,EAAGC,EAAI,EAMlB+jC,EAAaz7B,EAAOoB,mBAEpBslC,EAAoB,EACpBC,EAAc,EACdC,EAAa,EACbC,EAAa,CAEb,KAAM7lC,EAAI,EAAGwlC,EAAK7gC,EAAOtQ,OAAYmxC,EAAJxlC,EAAQA,IAUxC,GARAmO,EAAQxJ,EAAQ3E,GAEhB/B,EAAQkQ,EAAMlQ,MACdwnC,EAAYt3B,EAAMs3B,UAClB1pB,EAAW5N,EAAM4N,SAEjBlN,EAAcV,EAAMC,QAAUD,EAAMC,OAAOvZ,IAAQsZ,EAAMC,OAAOvZ,IAAI1B,QAAU,KAEzEgb,EAAM23B,eAEV1wC,GAAK6I,EAAM7I,EAAIqwC,EACfhvC,GAAKwH,EAAMxH,EAAIgvC,EACf/uC,GAAKuH,EAAMvH,EAAI+uC,MAET,IAAKt3B,EAAM43B,mBAAqB,CAEtC,GAAIloC,GAAWmoC,GAAWjrB,IAAK5M,EAE/BtQ,GAASI,MAAMsC,KAAM4N,EAAMlQ,OAAQg+B,eAAgB9tB,EAAMs3B,WACzD5nC,EAASgT,UAAU7B,sBAAuBb,EAAMjO,aAChD0+B,GAAS5vB,sBAAuBb,EAAMqB,OAAOtP,aAC7CrC,EAASgT,UAAUo1B,IAAKrH,IACxB/gC,EAASgT,UAAUq1B,mBAAoBzL,GAEvC58B,EAASuQ,OAASD,EAAMpC,WAEnBoC,EAAMpC,aAEVlO,EAAS+d,WAAazN,EAAMC,OAAO+3B,KACnCtoC,EAASge,aAAe1N,EAAMC,OAAOhG,OACrCvK,EAASie,cAAgB3N,EAAMC,OAAOC,SAIvClF,GAAQ63B,qBAAsB0E,GAAsB72B,EACpD1F,GAAQ83B,wBAAyByE,GAAsBv3B,EAAMC,OAAOW,OACpE5F,GAAQod,YAAamf,KAAyB7nC,MAExC,IAAKsQ,EAAMi4B,YAAc,CAE/B,GAAIvoC,GAAWmoC,GAAWjrB,IAAK5M,EAE/BtQ,GAASqE,SAAS8M,sBAAuBb,EAAMjO,aAC/CrC,EAASqE,SAAS/B,aAAcs6B,GAEhC58B,EAASI,MAAMsC,KAAMtC,GAAQg+B,eAAgBwJ,GAC7C5nC,EAASke,SAAWA,EAEpBle,EAASgT,UAAU7B,sBAAuBb,EAAMjO,aAChD0+B,GAAS5vB,sBAAuBb,EAAMqB,OAAOtP,aAC7CrC,EAASgT,UAAUo1B,IAAKrH,IACxB/gC,EAASgT,UAAUq1B,mBAAoBzL,GAEvC58B,EAASme,QAAU3qB,KAAKg1C,IAAKl4B,EAAMm4B,OACnCzoC,EAASoe,YAAc5qB,KAAKg1C,IAAKl4B,EAAMm4B,OAAU,EAAIn4B,EAAMo4B,WAC3D1oC,EAASqe,MAA6B,IAAnB/N,EAAM4N,SAAmB,EAAM5N,EAAM+N,MAExDre,EAASuQ,OAASD,EAAMpC,WAEnBoC,EAAMpC,aAEVlO,EAAS+d,WAAazN,EAAMC,OAAO+3B,KACnCtoC,EAASge,aAAe1N,EAAMC,OAAOhG,OACrCvK,EAASie,cAAgB3N,EAAMC,OAAOC,SAIvClF,GAAQ+3B,cAAe0E,GAAe/2B,EACtC1F,GAAQg4B,iBAAkByE,GAAez3B,EAAMC,OAAOW,OACtD5F,GAAQsd,KAAMmf,KAAkB/nC,MAE1B,IAAKsQ,EAAM3E,aAAe,CAEhC,GAAI3L,GAAWmoC,GAAWjrB,IAAK5M,EAE/BtQ,GAASqE,SAAS8M,sBAAuBb,EAAMjO,aAC/CrC,EAASqE,SAAS/B,aAAcs6B,GAEhC58B,EAASI,MAAMsC,KAAM4N,EAAMlQ,OAAQg+B,eAAgB9tB,EAAMs3B,WACzD5nC,EAASke,SAAW5N,EAAM4N,SAC1Ble,EAASqe,MAA6B,IAAnB/N,EAAM4N,SAAmB,EAAM5N,EAAM+N,MAExDre,EAASuQ,OAASD,EAAMpC,WAEnBoC,EAAMpC,aAEVlO,EAAS+d,WAAazN,EAAMC,OAAO+3B,KACnCtoC,EAASge,aAAe1N,EAAMC,OAAOhG,OACrCvK,EAASie,cAAgB3N,EAAMC,OAAOC,SAIvClF,GAAQi4B,eAAgBuE,GAAgB92B,EAEUpd,SAA7C0X,GAAQk4B,kBAAmBsE,KAE/Bx8B,GAAQk4B,kBAAmBsE,GAAgB,GAAI1xC,IAMhD2qC,GAAS5vB,sBAAuBb,EAAMjO,aAAcsmC,SACpDr9B,GAAQk4B,kBAAmBsE,GAAcc,WAAWC,YAAa9H,IAEjEz1B,GAAQqd,MAAOmf,KAAmB9nC,MAE5B,IAAKsQ,EAAMw4B,kBAAoB,CAErC,GAAI9oC,GAAWmoC,GAAWjrB,IAAK5M,EAE/BtQ,GAASgT,UAAU7B,sBAAuBb,EAAMjO,aAChDrC,EAASgT,UAAUq1B,mBAAoBzL,GACvC58B,EAASgT,UAAU+1B,YAEnB/oC,EAASse,SAAS5b,KAAM4N,EAAMlQ,OAAQg+B,eAAgBwJ,GACtD5nC,EAASue,YAAY7b,KAAM4N,EAAMiO,aAAc6f,eAAgBwJ,GAE/Dt8B,GAAQud,KAAMmf,KAAkBhoC,EAMlCsL,GAAQw3B,QAAS,GAAMvrC,EACvB+T,GAAQw3B,QAAS,GAAMlqC,EACvB0S,GAAQw3B,QAAS,GAAMjqC,EAEvByS,GAAQod,YAAYlyB,OAASqxC,EAC7Bv8B,GAAQsd,KAAKpyB,OAASuxC,EACtBz8B,GAAQqd,MAAMnyB,OAASsxC,EACvBx8B,GAAQud,KAAKryB,OAASwxC,EAEtB18B,GAAQs3B,KAAOiF,EAAoB,IAAMC,EAAc,IAAMC,EAAa,IAAMC,EAAa,IAAM18B,GAAQqD,QAAQnY,OAepH,QAASuB,KAER,GAAIixC,GAAclF,EAUlB,OARKkF,IAAex9B,GAAauuB,aAEhCtjC,QAAQgc,KAAM,gCAAkCu2B,EAAc,+CAAiDx9B,GAAauuB,aAI7H+J,IAAqB,EAEdkF,EAiPR,QAASvd,GAAgBzC,GAExB,GAAI1L,EAEJ,IAAK0L,IAAMigB,GAAiB,MAAO16B,IAAI26B,MACvC,IAAKlgB,IAAMh1B,GAAsB,MAAOua,IAAItP,aAC5C,IAAK+pB,IAAMmgB,GAAyB,MAAO56B,IAAI66B,eAE/C,IAAKpgB,IAAMpY,GAAgB,MAAOrC,IAAInP,OACtC,IAAK4pB,IAAMqD,GAA6B,MAAO9d,IAAI86B,sBACnD,IAAKrgB,IAAMsD,GAA4B,MAAO/d,IAAI+6B,qBAElD,IAAKtgB,IAAM/0B,GAAe,MAAOsa,IAAIge,MACrC,IAAKvD,IAAMugB,GAA4B,MAAOh7B,IAAIi7B,qBAClD,IAAKxgB,IAAM90B,GAA2B,MAAOqa,IAAIk7B,oBAEjD,IAAKzgB,IAAM50B,GAAmB,MAAOma,IAAIzP,aACzC,IAAKkqB,IAAM0gB,GAAwB,MAAOn7B,IAAIo7B,sBAC9C,IAAK3gB,IAAM4gB,GAAwB,MAAOr7B,IAAIs7B,sBAC9C,IAAK7gB,IAAM8gB,GAAuB,MAAOv7B,IAAIw7B,oBAE7C,IAAK/gB,IAAMghB,GAAW,MAAOz7B,IAAIsxB,IACjC,IAAK7W,IAAMihB,GAAY,MAAO17B,IAAIoxB,KAClC,IAAK3W,IAAMkhB,GAAoB,MAAO37B,IAAIlL,cAC1C,IAAK2lB,IAAMmhB,GAAU,MAAO57B,IAAIqxB,GAChC,IAAK5W,IAAMohB,GAAkB,MAAO77B,IAAI4O,YACxC,IAAK6L,IAAMmG,GAAY,MAAO5gB,IAAIxM,KAIlC,IAFAub,EAAYlU,GAAW8T,IAAK,0BAET,OAAdI,GAEC0L,IAAMoG,GAAgB,MAAO9R,GAAU+sB,cAI7C,IAAKrhB,IAAMshB,GAAc,MAAO/7B,IAAIg8B,KACpC,IAAKvhB,IAAM4F,GAAY,MAAOrgB,IAAI1P,GAClC,IAAKmqB,IAAM70B,GAAa,MAAOoa,IAAIjP,IACnC,IAAK0pB,IAAMwhB,GAAkB,MAAOj8B,IAAIk8B,SACxC,IAAKzhB,IAAM0hB,GAAuB,MAAOn8B,IAAIo8B,eAC7C,IAAK3hB,IAAMsI,GAAc,MAAO/iB,IAAIshB,eACpC,IAAK7G,IAAMiH,GAAqB,MAAO1hB,IAAI2hB,aAE3C,IAAKlH,IAAMvhB,GAAc,MAAO8G,IAAIwoB,QACpC,IAAK/N,IAAM4hB,GAAmB,MAAOr8B,IAAIs8B,aACzC,IAAK7hB,IAAM8hB,GAA0B,MAAOv8B,IAAIw8B,qBAEhD,IAAK/hB,IAAMgiB,GAAa,MAAOz8B,IAAI8oB,IACnC,IAAKrO,IAAMiiB,GAAY,MAAO18B,IAAI0oB,GAClC,IAAKjO,IAAMkiB,GAAiB,MAAO38B,IAAIkpB,SACvC,IAAKzO,IAAMmiB,GAAyB,MAAO58B,IAAI+oB,mBAC/C,IAAKtO,IAAMzhB,GAAiB,MAAOgH,IAAI4oB,SACvC,IAAKnO,IAAMxhB,GAAyB,MAAO+G,IAAIgpB,mBAC/C,IAAKvO,IAAMoiB,GAAiB,MAAO78B,IAAI88B,SACvC,IAAKriB,IAAMsiB,GAAyB,MAAO/8B,IAAIg9B,mBAE/C,IAAKviB,IAAMwiB,GAAiB,MAAOj9B,IAAIk9B,SACvC,IAAKziB,IAAM0iB,GAAyB,MAAOn9B,IAAIo9B,mBAC/C,IAAK3iB,IAAM4iB,GAAyB,MAAOr9B,IAAIs9B,kBAI/C,IAFAvuB,EAAYlU,GAAW8T,IAAK,iCAET,OAAdI,EAAqB,CAEzB,GAAK0L,IAAM8iB,GAAuB,MAAOxuB,GAAUyuB,4BACnD,IAAK/iB,IAAMgjB,GAAwB,MAAO1uB,GAAU2uB,6BACpD,IAAKjjB,IAAMkjB,GAAwB,MAAO5uB,GAAU6uB,6BACpD,IAAKnjB,IAAMojB,GAAwB,MAAO9uB,GAAU+uB,8BAMrD,GAFA/uB,EAAYlU,GAAW8T,IAAK,kCAET,OAAdI,EAAqB,CAEzB,GAAK0L,IAAMsjB,GAA0B,MAAOhvB,GAAUivB,+BACtD,IAAKvjB,IAAMwjB,GAA0B,MAAOlvB,GAAUmvB,+BACtD,IAAKzjB,IAAM0jB,GAA2B,MAAOpvB,GAAUqvB,gCACvD,IAAK3jB,IAAM4jB,GAA2B,MAAOtvB,GAAUuvB,iCAMxD,GAFAvvB,EAAYlU,GAAW8T,IAAK,iCAET,OAAdI,GAEC0L,IAAM8jB,GAAkB,MAAOxvB,GAAUyvB,yBAM/C,IAFAzvB,EAAYlU,GAAW8T,IAAK,oBAET,OAAdI,EAAqB,CAEzB,GAAK0L,IAAMgkB,GAAc,MAAO1vB,GAAU2vB,OAC1C,IAAKjkB,IAAMkkB,GAAc,MAAO5vB,GAAU6vB,QAM3C,MAFA7vB,GAAYlU,GAAW8T,IAAK,uBAET,OAAdI,GAEC0L,IAAMokB,GAA4B9vB,EAAU+vB,wBAI3C,EAnuFR52C,QAAQmvB,IAAK,sBAAuB0nB,IAEpC3kC,EAAaA,KAEb,IAAIi+B,GAAgChzC,SAAtB+U,EAAW5D,OAAuB4D,EAAW5D,OAASC,SAASC,gBAAiB,+BAAgC,UAC9HsoC,EAAkC35C,SAAvB+U,EAAW1H,QAAwB0H,EAAW1H,QAAU,KAEnEusC,EAA8B55C,SAArB+U,EAAW8kC,MAAsB9kC,EAAW8kC,OAAQ,EAC7DC,EAA8B95C,SAArB+U,EAAW0Q,MAAsB1Q,EAAW0Q,OAAQ,EAC7Ds0B,EAAkC/5C,SAAvB+U,EAAW6sB,QAAwB7sB,EAAW6sB,SAAU,EACnEoY,EAAsCh6C,SAAzB+U,EAAWklC,UAA0BllC,EAAWklC,WAAY,EACzE7P,EAAwDpqC,SAAlC+U,EAAWL,mBAAmCK,EAAWL,oBAAqB,EACpGwlC,EAA8Dl6C,SAArC+U,EAAWolC,sBAAsCplC,EAAWolC,uBAAwB,EAEzGjnC,KAEA85B,MACAC,GAAyB,GACzBH,MACAC,GAA8B,GAE9BqN,GAAkB,GAAI13C,cAAc,GAEpC8N,MACAT,KAIJnT,MAAKy9C,WAAarH,EAClBp2C,KAAKyQ,QAAU,KAIfzQ,KAAK09C,WAAY,EACjB19C,KAAK29C,gBAAiB,EACtB39C,KAAK49C,gBAAiB,EACtB59C,KAAK69C,kBAAmB,EAIxB79C,KAAKuxC,aAAc,EAInBvxC,KAAKuX,kBACLvX,KAAKsc,sBAAuB,EAI5Btc,KAAK4yB,YAAc,EACnB5yB,KAAK63B,YAAa,EAClB73B,KAAK43B,aAAc,EAInB53B,KAAK8zB,yBAA0B,EAI/B9zB,KAAKqvB,YAAcE,GACnBvvB,KAAK89C,oBAAsB,EAC3B99C,KAAK+9C,sBAAwB,EAI7B/9C,KAAKg4B,gBAAkB,EACvBh4B,KAAKi4B,gBAAkB,CAIvB,IAAI+Y,IAAQhxC,KAIZiuC,GAAkB,KAClBZ,GAAuB,KACvB2Q,GAAsB,KACtB5P,GAAqB,GACrBD,GAA0B,GAC1BD,GAAiB,KAEjBR,GAAkB,GAAInpC,GACtB05C,GAAsB,KAEtBpQ,GAAmB,GAAItpC,GAIvB+uC,GAAoB,EAIpBvF,GAAc,GAAIthC,GAAO,GACzBuhC,GAAc,EAEdkQ,GAAS9H,EAAQ/1C,MACjB89C,GAAU/H,EAAQ91C,OAElBgtC,GAAc,EAEdK,GAAW,GAAIppC,GAAS,EAAG,EAAG25C,GAAQC,IACtCC,IAAe,EAEftQ,GAAY,GAAIvpC,GAAS,EAAG,EAAG25C,GAAQC,IAIvCvgC,GAAW,GAAIxD,IAIf22B,GAAY,GAAIvF,IAChB+H,IAAmB,EACnBC,IAAwB,EAExB9C,GAAU,GAAI72B,IAIdoE,GAAoB,GAAIrY,GAExB2qC,GAAW,GAAI5qC,GAIfmV,IAECs3B,KAAM,GAENE,SAAW,EAAG,EAAG,GACjBpa,eACAya,wBACAC,2BACAxa,QACAya,iBACAC,oBACA3a,SACA4a,kBACAC,qBACA3a,QAEAla,YAMDkgC,IAECzxB,MAAO,EACPzf,SAAU,EACVC,MAAO,EACPkxC,OAAQ,EAITt+C,MAAKsM,MAEJlL,OAAQi9C,GACR5kB,QAECN,WAAY,EACZgD,SAAU,GAGXzF,SAAU,KAOX,IAAI3Y,GAEJ,KAEC,GAAI3O,KACH6tC,MAAOD,EACPn0B,MAAOq0B,EACPlY,QAASmY,EACTE,UAAWD,EACXtlC,mBAAoB01B,EACpB+P,sBAAuBD,EAKxB,IAFAv/B,GAAMg/B,GAAY3G,EAAQ1hC,WAAY,QAAStF,KAAgBgnC,EAAQ1hC,WAAY,qBAAsBtF,IAE5F,OAAR2O,GAEJ,KAAuC,QAAlCq4B,EAAQ1hC,WAAY,SAElB,8DAIA,+BAQ8BtR,UAAjC2a,GAAIwsB,2BAERxsB,GAAIwsB,yBAA2B,WAE9B,OAASgU,SAAY,EAAGC,SAAY,EAAG9mC,UAAa,KAMtD0+B,EAAQpc,iBAAkB,mBAAoBqU,GAAe,GAE5D,MAAQnoC,IAETD,QAAQC,MAAO,wBAA0BA,IAI1C,GAAI0S,IAAa,GAAI0yB,IAAiBvtB,GAEtCnF,IAAW8T,IAAK,uBAChB9T,GAAW8T,IAAK,qBAChB9T,GAAW8T,IAAK,4BAChB9T,GAAW8T,IAAK,0BAChB9T,GAAW8T,IAAK,iCAChB9T,GAAW8T,IAAK,4BAChB9T,GAAW8T,IAAK,0BAEX9T,GAAW8T,IAAK,4BAEpBtE,GAAeq2B,SAAW,WAI3B,IAAIzjC,IAAe,GAAIovB,IAAmBrsB,GAAKnF,GAAYT,GAEvDlK,GAAQ,GAAIyzB,IAAY3jB,GAAKnF,GAAYqiB,GACzClC,GAAa,GAAIyI,IACjBrF,GAAW,GAAInB,IAAejd,GAAKnF,GAAY3K,GAAO8qB,GAAY/d,GAAcigB,EAAgBj7B,KAAKsM,MACrGgjC,GAAU,GAAInV,IAAcpc,GAAKgb,GAAY/4B,KAAKsM,MAClDoiC,GAAe,GAAI5Y,IAAe91B,KAAMgb,IACxC28B,GAAa,GAAIrqB,GAErBttB,MAAKsM,KAAKoqB,SAAWgY,GAAahY,QAElC,IAAIgoB,IAAiB,GAAIzxB,IAAqBlP,GAAKnF,GAAYylC,IAC3DM,GAAwB,GAAIryB,IAA4BvO,GAAKnF,GAAYylC,IAIzEO,GAAmB,GAAI3yB,IAAoB,GAAK,EAAG,EAAG,GAAK,EAAG,GAC9D4yB,GAAoB,GAAIpzB,IACxBqzB,GAAsB,GAAIv2B,IAC7B,GAAI2C,IAAqB,EAAG,GAC5B,GAAItG,KAAqB1O,WAAW,EAAOC,YAAY,EAAOb,KAAK,KAEhEypC,GAAsB9/B,GAAW,KACjC+/B,GAAoB,GAAIz2B,IAC3B,GAAIK,IAAmB,EAAG,EAAG,GAC7B,GAAI1Q,IACH1I,SAAUuvC,GAAoBvvC,SAC9BR,aAAc+vC,GAAoB/vC,aAClCE,eAAgB6vC,GAAoB7vC,eACpCsH,KAAMyG,GACN/G,WAAW,EACXC,YAAY,EACZb,KAAK,IA+CPm4B,KAEAztC,KAAKyQ,QAAUsN,GACf/d,KAAKgb,aAAeA,GACpBhb,KAAK4Y,WAAaA,GAClB5Y,KAAK+4B,WAAaA,GAClB/4B,KAAKiO,MAAQA,EAIb,IAAIuS,IAAY,GAAI5F,IAAgB5a,KAAM8a,GAASw0B,GAASt0B,GAE5Dhb,MAAKwgB,UAAYA,EAKjB,IAAIy+B,IAAe,GAAItrC,GAAc3T,KAAM4T,IACvCsrC,GAAkB,GAAIlyC,GAAiBhN,KAAMmT,GAIjDnT,MAAK0U,WAAa,WAEjB,MAAOqJ,KAIR/d,KAAKm/C,qBAAuB,WAE3B,MAAOphC,IAAIohC,wBAIZn/C,KAAKo/C,iBAAmB,WAEvBxmC,GAAW8T,IAAK,sBAAuB2yB,eAIxCr/C,KAAKg/B,iBAAmB,WAEvB,MAAOhkB,IAAagkB,oBAIrBh/B,KAAKoQ,aAAe,WAEnB,MAAO4K,IAAatD,WAIrB1X,KAAKs/C,cAAgB,WAEpB,MAAOhS,KAIRttC,KAAKu/C,cAAgB,SAAW18C,GAEhBO,SAAVP,IAELyqC,GAAczqC,EAEd7C,KAAKw/C,QAAS1R,GAAUtpC,EAAGspC,GAAUttC,GAAG,KAIzCR,KAAKy/C,QAAU,WAEd,OACCp/C,MAAO69C,GACP59C,OAAQ69C,KAKVn+C,KAAKw/C,QAAU,SAAWn/C,EAAOC,EAAQo/C,GAExCxB,GAAS79C,EACT89C,GAAU79C,EAEV81C,EAAQ/1C,MAAQA,EAAQitC,GACxB8I,EAAQ91C,OAASA,EAASgtC,GAErBoS,KAAgB,IAEpBtJ,EAAQuJ,MAAMt/C,MAAQA,EAAQ,KAC9B+1C,EAAQuJ,MAAMr/C,OAASA,EAAS,MAIjCN,KAAK4/C,YAAa,EAAG,EAAGv/C,EAAOC,IAIhCN,KAAK4/C,YAAc,SAAW99C,EAAGC,EAAG1B,EAAOC,GAE1C2N,GAAMpJ,SAAUipC,GAAUphC,IAAK5K,EAAGC,EAAG1B,EAAOC,KAI7CN,KAAK6/C,WAAa,SAAW/9C,EAAGC,EAAG1B,EAAOC,GAEzC2N,GAAMtJ,QAASgpC,GAASjhC,IAAK5K,EAAGC,EAAG1B,EAAOC,KAI3CN,KAAK2f,eAAiB,SAAWmgC,GAEhC7xC,GAAM0R,eAAgBy+B,GAAe0B,IAMtC9/C,KAAKkiB,cAAgB,WAEpB,MAAO6rB,KAIR/tC,KAAKqiB,cAAgB,SAAWzS,EAAOqtC,GAEtClP,GAAYrhC,IAAKkD,GAEjBo+B,GAAwB5qC,SAAV65C,EAAsBA,EAAQ,EAE5C1P,EAAcQ,GAAYhnC,EAAGgnC,GAAY3lC,EAAG2lC,GAAY1lC,EAAG2lC,KAI5DhuC,KAAKoiB,cAAgB,WAEpB,MAAO4rB,KAIRhuC,KAAK+/C,cAAgB,SAAW9C,GAE/BjP,GAAciP,EAEd1P,EAAcQ,GAAYhnC,EAAGgnC,GAAY3lC,EAAG2lC,GAAY1lC,EAAG2lC,KAI5DhuC,KAAK6gB,MAAQ,SAAWjR,EAAOiZ,EAAOmc,GAErC,GAAIgb,GAAO,GAEI58C,SAAVwM,GAAuBA,KAAQowC,GAAQjiC,GAAIkiC,mBACjC78C,SAAVylB,GAAuBA,KAAQm3B,GAAQjiC,GAAImiC,mBAC/B98C,SAAZ4hC,GAAyBA,KAAUgb,GAAQjiC,GAAIoiC,oBAEpDpiC,GAAI8C,MAAOm/B,IAIZhgD,KAAK0f,WAAa,WAEjB1f,KAAK6gB,OAAO,GAAM,GAAO,IAI1B7gB,KAAK4jC,WAAa,WAEjB5jC,KAAK6gB,OAAO,GAAO,GAAM,IAI1B7gB,KAAKilC,aAAe,WAEnBjlC,KAAK6gB,OAAO,GAAO,GAAO,IAI3B7gB,KAAKogD,YAAc,SAAW/jB,EAAczsB,EAAOiZ,EAAOmc,GAEzDhlC,KAAK4gB,gBAAiByb,GACtBr8B,KAAK6gB,MAAOjR,EAAOiZ,EAAOmc,IAM3BhlC,KAAK0T,aAAeA,EAEpB1T,KAAK68B,QAAU,WAEdqT,MACAC,GAA8B,GAC9BC,MACAC,GAAyB,GAEzB+F,EAAQ9c,oBAAqB,mBAAoB+U,GAAe,IAsDjEruC,KAAK6xC,sBAAwB,SAAW32B,EAAQ/O,EAAS2J,GAExD7H,GAAMkD,gBAEN,IAAIg5B,GAAUpR,GAAWrM,IAAKxR,EAEzBA,GAAOmlC,eAAkBlW,EAAQt2B,WAAWs2B,EAAQt2B,SAAWkK,GAAIxQ,gBACnE2N,EAAOolC,aAAgBnW,EAAQjwB,SAASiwB,EAAQjwB,OAAS6D,GAAIxQ,gBAC7D2N,EAAOqlC,SAAYpW,EAAQ56B,KAAK46B,EAAQ56B,GAAKwO,GAAIxQ,gBACjD2N,EAAOslC,YAAerW,EAAQv6B,QAAQu6B,EAAQv6B,MAAQmO,GAAIxQ,eAE/D,IAAI6B,GAAajD,EAAQspB,eAYzB,IAVKva,EAAOmlC,eAEXtiC,GAAItQ,WAAYsQ,GAAIrQ,aAAcy8B,EAAQt2B,UAC1CkK,GAAIpQ,WAAYoQ,GAAIrQ,aAAcwN,EAAOulC,cAAe1iC,GAAI2c,cAE5DzsB,GAAMmD,gBAAiBhC,EAAWyE,UAClCkK,GAAIzM,oBAAqBlC,EAAWyE,SAAU,EAAGkK,GAAIxM,OAAO,EAAO,EAAG,IAIlE2J,EAAOolC,WAAa,CAIxB,GAFAviC,GAAItQ,WAAYsQ,GAAIrQ,aAAcy8B,EAAQjwB,SAEnCpE,EAASk+B,sBACTl+B,EAASm+B,wBACTn+B,EAASY,UAAYqhB,GAE3B,IAAM,GAAI7wB,GAAI,EAAGyK,EAAmB,EAAfuJ,EAAO5W,MAAeqN,EAAJzK,EAAOA,GAAK,EAAI,CAEtD,GAAIR,GAAQwU,EAAOwlC,YAEfC,GAAOj6C,EAAOQ,EAAI,GAAMR,EAAOQ,EAAI,GAAMR,EAAOQ,EAAI,IAAQ,EAC5D05C,GAAOl6C,EAAOQ,EAAI,GAAMR,EAAOQ,EAAI,GAAMR,EAAOQ,EAAI,IAAQ,EAC5D25C,GAAOn6C,EAAOQ,EAAI,GAAMR,EAAOQ,EAAI,GAAMR,EAAOQ,EAAI,IAAQ,CAEhER,GAAOQ,EAAI,GAAMy5C,EACjBj6C,EAAOQ,EAAI,GAAM05C,EACjBl6C,EAAOQ,EAAI,GAAM25C,EAEjBn6C,EAAOQ,EAAI,GAAMy5C,EACjBj6C,EAAOQ,EAAI,GAAM05C,EACjBl6C,EAAOQ,EAAI,GAAM25C,EAEjBn6C,EAAOQ,EAAI,GAAMy5C,EACjBj6C,EAAOQ,EAAI,GAAM05C,EACjBl6C,EAAOQ,EAAI,GAAM25C,EAMnB9iC,GAAIpQ,WAAYoQ,GAAIrQ,aAAcwN,EAAOwlC,YAAa3iC,GAAI2c,cAE1DzsB,GAAMmD,gBAAiBhC,EAAW8K,QAElC6D,GAAIzM,oBAAqBlC,EAAW8K,OAAQ,EAAG6D,GAAIxM,OAAO,EAAO,EAAG,GAIhE2J,EAAOqlC,QAAUzqC,EAAStP,MAE9BuX,GAAItQ,WAAYsQ,GAAIrQ,aAAcy8B,EAAQ56B,IAC1CwO,GAAIpQ,WAAYoQ,GAAIrQ,aAAcwN,EAAO4lC,QAAS/iC,GAAI2c,cAEtDzsB,GAAMmD,gBAAiBhC,EAAWG,IAElCwO,GAAIzM,oBAAqBlC,EAAWG,GAAI,EAAGwO,GAAIxM,OAAO,EAAO,EAAG,IAI5D2J,EAAOslC,WAAa1qC,EAASc,eAAiBC,KAElDkH,GAAItQ,WAAYsQ,GAAIrQ,aAAcy8B,EAAQv6B,OAC1CmO,GAAIpQ,WAAYoQ,GAAIrQ,aAAcwN,EAAO6lC,WAAYhjC,GAAI2c,cAEzDzsB,GAAMmD,gBAAiBhC,EAAWQ,OAElCmO,GAAIzM,oBAAqBlC,EAAWQ,MAAO,EAAGmO,GAAIxM,OAAO,EAAO,EAAG,IAIpEtD,GAAMoD,0BAEN0M,GAAImP,WAAYnP,GAAInL,UAAW,EAAGsI,EAAO5W,OAEzC4W,EAAO5W,MAAQ,GAIhBtE,KAAKgiB,mBAAqB,SAAWrR,EAAQ2E,EAAK+F,EAAUvF,EAAUoF,EAAQ2G,GAE7E8vB,EAAa77B,EAEb,IAAI3J,GAAUylC,EAAYjhC,EAAQ2E,EAAKQ,EAAUoF,GAE7C8lC,GAAgB,EAChBC,EAAkB5lC,EAASvQ,GAAK,IAAMqB,EAAQrB,GAAK,IAAMgL,EAASwC,SAEjE2oC,KAAoB9S,KAExBA,GAA0B8S,EAC1BD,GAAgB,EAMjB,IAAIE,GAAwBhmC,EAAOgmC,qBAEnC,IAA+B99C,SAA1B89C,EAAsC,CAI1C,IAAM,GAFFC,MAEMj6C,EAAI,EAAGyK,EAAIuvC,EAAsBl7C,OAAY2L,EAAJzK,EAAOA,IAAO,CAEhE,GAAIk6C,GAAYF,EAAuBh6C,EACvCi6C,GAAiB71C,MAAQ81C,EAAWl6C,IAIrCi6C,EAAiBtrC,KAAMi6B,GAElBqR,EAAiBn7C,OAAS,IAE9Bm7C,EAAiBn7C,OAAS,EAM3B,KAAM,GAFF+V,GAAkBV,EAASU,gBAErB7U,EAAI,EAAGyK,EAAIwvC,EAAiBn7C,OAAY2L,EAAJzK,EAAOA,IAAO,CAE3D,GAAIk6C,GAAYD,EAAkBj6C,EAGlC,IAFAs2C,GAAiBt2C,GAAMk6C,EAAW,GAEV,IAAnBA,EAAW,GAAY,CAE3B,GAAI/4B,GAAQ+4B,EAAW,EAElBtrC,GAAS4C,gBAAiB,GAAQqD,EAAgBlI,UAAWwH,EAAS4P,aAAc,cAAgB/jB,EAAG6U,EAAgBlI,SAAUwU,IACjIvS,EAAS6C,gBAAiB,GAAQoD,EAAgB7B,QAASmB,EAAS4P,aAAc,cAAgB/jB,EAAG6U,EAAgB7B,OAAQmO,QAI7HvS,GAAS4C,gBAAiB,GAAO2C,EAASgmC,gBAAiB,cAAgBn6C,GAC3E4O,EAAS6C,gBAAiB,GAAO0C,EAASgmC,gBAAiB,cAAgBn6C,GAMlF,IAAM,GAAIA,GAAIi6C,EAAiBn7C,OAAQ6Z,EAAK29B,GAAgBx3C,OAAY6Z,EAAJ3Y,EAAQA,IAE3Es2C,GAAiBt2C,GAAM,CAIxBiF,GAAQopB,cAAcvqB,SACpB+S,GAAK,wBAAyBy/B,IAEhCwD,GAAgB,EAMjB,GAAI34B,GAAQhN,EAASgN,MACjBxU,EAAWwH,EAASjM,WAAWyE,SAC/BytC,EAAc,CAEbxrC,GAASwC,aAAc,IAE3B+P,EAAQinB,GAAQxU,sBAAuBzf,GACvCimC,EAAc,EAIf,IAAIl6C,EAEW,QAAVihB,GAEJjhB,EAAWu3C,GACXv3C,EAAS4jB,SAAU3C,IAInBjhB,EAAWs3C,GAIPsC,IAEJrS,EAAuB74B,EAAU3J,EAASkP,GAE3B,OAAVgN,GAEJtK,GAAItQ,WAAYsQ,GAAIlQ,qBAAsByhC,GAAQ5V,mBAAoBrR,IAQxE,IAAIk5B,GAAY,CAED,QAAVl5B,EAEJk5B,EAAYl5B,EAAM/jB,MAEMlB,SAAbyQ,IAEX0tC,EAAY1tC,EAASvP,MAItB,IAAIk9C,GAAanmC,EAASiN,UAAUnE,MAAQm9B,EACxCG,EAAapmC,EAASiN,UAAUhkB,MAAQg9C,EAExC12B,EAAuB,OAAV/I,EAAiBA,EAAMsC,MAAQm9B,EAAc,EAC1Dn3B,EAAuB,OAAVtI,EAAiBA,EAAMvd,MAAQg9C,EAAcv0C,EAAAA,EAE1D20C,EAAY1+C,KAAK8J,IAAK00C,EAAY52B,GAClC+2B,EAAU3+C,KAAK6J,IAAK00C,EAAWC,EAAaC,EAAY72B,EAAaT,GAAe,EAEpFy3B,EAAY5+C,KAAK8J,IAAK,EAAG60C,EAAUD,EAAY,EAEnD,IAAmB,IAAdE,EAAL,CAIA,GAAK1mC,EAAOqC,OAEX,GAAKzH,EAASwC,aAAc,EAE3BrK,GAAM06B,aAAc7yB,EAASyC,mBAAqB60B,KAClDhmC,EAASolB,QAASzO,GAAI8jC,WAItB,QAAS3mC,EAAOuN,UAEf,IAAKC,IACJthB,EAASolB,QAASzO,GAAInL,UACtB,MAED,KAAKkvC,IACJ16C,EAASolB,QAASzO,GAAIgkC,eACtB,MAED,KAAKC,IACJ56C,EAASolB,QAASzO,GAAIkkC,kBAQnB,IAAK/mC,EAAOsC,OAAS,CAE3B,GAAIqrB,GAAY/yB,EAASuC,SAENjV,UAAdylC,IAA0BA,EAAY,GAE3C56B,GAAM06B,aAAcE,EAAYuE,KAE3BlyB,EAAOgnC,eAEX96C,EAASolB,QAASzO,GAAI8jC,OAItBz6C,EAASolB,QAASzO,GAAIokC,gBAIZjnC,GAAOuC,UAElBrW,EAASolB,QAASzO,GAAIqkC,OAIlB/mC,IAAYA,EAASwzB,0BAEpBxzB,EAAS2R,kBAAoB,GAEjC5lB,EAASylB,gBAAiBxR,EAAUqmC,EAAWE,GAMhDx6C,EAAShG,OAAQsgD,EAAWE,KA+N9B5hD,KAAKoB,OAAS,SAAWsP,EAAOC,EAAQ0rB,EAAcgmB,GAErD,GAAgBj/C,SAAXuN,GAAwBA,EAAO2xC,YAAa,EAGhD,WADAr8C,SAAQC,MAAO,yEAKhB,IAAIoP,GAAM5E,EAAM4E,GAIhB64B,IAA0B,GAC1BC,GAAqB,GACrBF,GAAiB,KAIZx9B,EAAM8O,cAAe,GAAO9O,EAAM0Q,oBAIhB,OAAlBzQ,EAAO0S,QAAkB1S,EAAOyQ,oBAErCzQ,EAAOoB,mBAAmBsP,WAAY1Q,EAAOkB,aAE7CoM,GAAkBrI,iBAAkBjF,EAAOsB,iBAAkBtB,EAAOoB,oBACpE6L,GAAS2D,cAAetD,IAExB3H,EAAOtQ,OAAS,EAEhBqqC,GAAyB,GACzBF,GAA8B,GAE9Bv8B,GAAQ5N,OAAS,EACjBmN,GAAWnN,OAAS,EAEpBwtC,GAAwBxzC,KAAKsc,qBAC7Bi3B,GAAmBxC,GAAU7jC,KAAMlN,KAAKuX,eAAgBi8B,GAAuB7iC,GAE/EwM,EAAezM,EAAOC,GAEtBy/B,GAAcpqC,OAASqqC,GAAyB,EAChDH,GAAmBlqC,OAASmqC,GAA8B,EAErDa,GAAMO,eAAgB,IAE1BnB,GAAcv6B,KAAMf,GACpBo7B,GAAmBr6B,KAAMm6B,IAMrBuD,IAAmBxC,GAAUpE,eAElCqK,EAAc1gC,GAEdkK,GAAUpf,OAAQsP,EAAOC,GAEzBumC,EAAa5gC,EAAQ3F,GAEhB4iC,IAAmBxC,GAAUnE,aAIlCyR,GAAYzxB,MAAQ,EACpByxB,GAAYlxC,SAAW,EACvBkxC,GAAYjxC,MAAQ,EACpBixC,GAAYC,OAAS,EAECl7C,SAAjBi5B,IAEJA,EAAe,MAIhBr8B,KAAK4gB,gBAAiByb,EAItB,IAAIkmB,GAAa7xC,EAAM6xC,UA6CvB,IA3CoB,OAAfA,EAEJhV,EAAcQ,GAAYhnC,EAAGgnC,GAAY3lC,EAAG2lC,GAAY1lC,EAAG2lC,IAEhDuU,GAAcA,EAAW59B,UAEpC4oB,EAAcgV,EAAWx7C,EAAGw7C,EAAWn6C,EAAGm6C,EAAWl6C,EAAG,GACxDg6C,GAAa,IAITriD,KAAK09C,WAAa2E,IAEtBriD,KAAK6gB,MAAO7gB,KAAK29C,eAAgB39C,KAAK49C,eAAgB59C,KAAK69C,kBAIvD0E,GAAcA,EAAWvM,eAE7B6I,GAAkB5sC,iBAAiBC,KAAMvB,EAAOsB,kBAEhD4sC,GAAkBhtC,YAAY2wC,gBAAiB7xC,EAAOkB,aACtDgtC,GAAkB9sC,mBAAmBsP,WAAYw9B,GAAkBhtC,aAEnEmtC,GAAkBlpC,SAAStG,SAAU,MAAU3M,MAAQ0/C,EACvDvD,GAAkBhrC,gBAAgB4B,iBAAkBipC,GAAkB9sC,mBAAoBitC,GAAkBntC,aAE5Gy9B,GAAQ/uB,OAAQy+B,IAEhBhO,GAAMhvB,mBAAoB68B,GAAmB,KAAMG,GAAkB3jC,SAAU2jC,GAAkBlpC,SAAUkpC,GAAmB,OAEnHuD,GAAcA,EAAW/rB,YAEpCsoB,GAAoBhpC,SAAStP,IAAM+7C,EAEnCjT,GAAQ/uB,OAAQu+B,IAEhB9N,GAAMhvB,mBAAoB48B,GAAkB,KAAME,GAAoBzjC,SAAUyjC,GAAoBhpC,SAAUgpC,GAAqB,OAM/HpuC,EAAMghC,iBAAmB,CAE7B,GAAIA,GAAmBhhC,EAAMghC,gBAE7BF,GAAepB,GAAez/B,EAAQ2E,EAAKo8B,GAC3CF,EAAetB,GAAoBv/B,EAAQ2E,EAAKo8B,OAMhDzjC,IAAMoF,YAAa6yB,IACnBsL,EAAepB,GAAez/B,EAAQ2E,GAItCk8B,EAAetB,GAAoBv/B,EAAQ2E,EAM5C2pC,IAAa79C,OAAQsP,EAAOC,GAC5BuuC,GAAgB99C,OAAQsP,EAAOC,EAAQk9B,IAIlCxR,GAEJF,GAASkF,yBAA0BhF,GAMpCpuB,GAAMgI,cAAc,GACpBhI,GAAMyD,eAAe,GACrBzD,GAAMw5B,eAAe,IAipCtBznC,KAAKyiD,eAAiB,SAAWra,EAAUsa,GAE1Cz0C,GAAMm3B,YAAagD,GACnBn6B,GAAMk3B,aAAcud,IAAuBC,KAsB5C3iD,KAAKuH,iBAAmBA,EAGxBvH,KAAKkJ,aAAiB,WAErB,GAAI05C,IAAS,CAGb,OAAO,UAAuB99C,EAASq4B,GAEjCr4B,GAAWA,EAAQ2xB,sBAEhBmsB,IAEN38C,QAAQgc,KAAM,gHACd2gC,GAAS,GAIV99C,EAAUA,EAAQA,SAInBq3B,GAASjzB,aAAcpE,EAASq4B,OAMlCn9B,KAAK6iD,WAAe,WAEnB,GAAID,IAAS,CAEb,OAAO,UAAqB99C,EAASq4B,GAE7BylB,IAEN38C,QAAQgc,KAAM;AACd2gC,GAAS,GAIVzmB,GAASjzB,aAAcpE,EAASq4B,OAMlCn9B,KAAKqJ,eAAmB,WAEvB,GAAIu5C,IAAS,CAEb,OAAO,UAAyB99C,EAASq4B,GAGnCr4B,GAAWA,EAAQg4B,0BAEhB8lB,IAEN38C,QAAQgc,KAAM,uHACd2gC,GAAS,GAIV99C,EAAUA,EAAQA,SAMZA,GAAWA,EAAQkxC,eACtBt3B,MAAMgG,QAAS5f,EAAQ7C,QAAoC,IAAzB6C,EAAQ7C,MAAM+D,OAKnDm2B,GAAS9yB,eAAgBvE,EAASq4B,GAMlChB,GAASsC,sBAAuB35B,EAASq4B,OAQ5Cn9B,KAAK03B,uBAAyB,WAE7B,MAAO2V,KAIRrtC,KAAK4gB,gBAAkB,SAAWyb,GAEjCgR,GAAuBhR,EAElBA,GAAsEj5B,SAAtD21B,GAAWrM,IAAK2P,GAAeW,oBAEnDb,GAAS8E,kBAAmB5E,EAI7B,IACIuD,GADAgB,EAAWvE,GAAgBA,EAAaS,uBAG5C,IAAKT,EAAe,CAEnB,GAAIO,GAAyB7D,GAAWrM,IAAK2P,EAI5CuD,GAFIgB,EAEUhE,EAAuBI,mBAAoBX,EAAaj3B,gBAIxDw3B,EAAuBI,mBAItC0Q,GAAgBx7B,KAAMmqB,EAAa13B,SACnCs5C,GAAsB5hB,EAAaz3B,YAEnCipC,GAAiB37B,KAAMmqB,EAAax3B,cAIpC+6B,GAAc,KAEd8N,GAAgBx7B,KAAMy7B,IAAWC,eAAgBN,IACjD2Q,GAAsBG,GAEtBvQ,GAAiB37B,KAAM47B,IAAYF,eAAgBN,GAgBpD,IAZK0Q,KAAwBpe,IAE5B7hB,GAAIgiB,gBAAiBhiB,GAAIiiB,YAAaJ,GACtCoe,GAAsBpe,GAIvB3xB,GAAMtJ,QAAS+oC,IACfz/B,GAAM0R,eAAgBs+B,IAEtBhwC,GAAMpJ,SAAUgpC,IAEXjN,EAAS,CAEb,GAAIrE,GAAoBxD,GAAWrM,IAAK2P,EAAav3B,QACrDiZ,IAAIkiB,qBAAsBliB,GAAIiiB,YAAajiB,GAAIqjB,kBAAmBrjB,GAAIwgB,4BAA8BlC,EAAaj3B,eAAgBm3B,EAAkBI,eAAgBN,EAAah3B,qBAMlLrF,KAAK8iD,uBAAyB,SAAWzmB,EAAcv6B,EAAGC,EAAG1B,EAAOC,EAAQu5B,GAE3E,IAAOwC,GAAgBA,EAAa5F,wBAA0B,EAG7D,WADAxwB,SAAQC,MAAO,2FAKhB,IAAI05B,GAAc7G,GAAWrM,IAAK2P,GAAeW,kBAEjD,IAAK4C,EAAc,CAElB,GAAImjB,IAAU,CAETnjB,KAAgBoe,KAEpBjgC,GAAIgiB,gBAAiBhiB,GAAIiiB,YAAaJ,GAEtCmjB,GAAU,EAIX,KAEC,GAAIj+C,GAAUu3B,EAAav3B,QACvBk+C,EAAgBl+C,EAAQvC,OACxBm8B,EAAc55B,EAAQtC,IAE1B,IAAKwgD,IAAkBr/C,IAAcs3B,EAAgB+nB,KAAoBjlC,GAAIioB,aAAcjoB,GAAIklC,kCAG9F,WADAh9C,SAAQC,MAAO,4GAKhB,MAAKw4B,IAAgB96B,IAAoBq3B,EAAgByD,KAAkB3gB,GAAIioB,aAAcjoB,GAAImlC,iCACxFxkB,IAAgBC,KAAe/lB,GAAW8T,IAAK,sBAAyB9T,GAAW8T,IAAK,8BACxFgS,IAAgBE,IAAiBhmB,GAAW8T,IAAK,gCAGzD,WADAzmB,SAAQC,MAAO,sHAKX6X,IAAIolC,uBAAwBplC,GAAIiiB,eAAkBjiB,GAAIqlC,qBAInDthD,GAAK,GAAKA,GAAOu6B,EAAah8B,MAAQA,GAAe0B,GAAK,GAAKA,GAAOs6B,EAAa/7B,OAASA,GAElGyd,GAAIslC,WAAYvhD,EAAGC,EAAG1B,EAAOC,EAAQ26B,EAAgB+nB,GAAiB/nB,EAAgByD,GAAe7E,GAMtG5zB,QAAQC,MAAO,8GAIf,QAEI68C,GAEJhlC,GAAIgiB,gBAAiBhiB,GAAIiiB,YAAage,OAmI3C,QAASsF,IAAU1zC,EAAO+F,GAEzB3V,KAAKkD,KAAO,GAEZlD,KAAK4P,MAAQ,GAAInD,GAAOmD,GACxB5P,KAAK2V,QAAwBvS,SAAZuS,EAA0BA,EAAU,MA2BtD,QAAS4tC,IAAM3zC,EAAO4F,EAAMC,GAE3BzV,KAAKkD,KAAO,GAEZlD,KAAK4P,MAAQ,GAAInD,GAAOmD,GAExB5P,KAAKwV,KAAkBpS,SAAToS,EAAuBA,EAAO,EAC5CxV,KAAKyV,IAAgBrS,SAARqS,EAAsBA,EAAM,IA2B1C,QAAS+tC,MAER1gC,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,QAEZxC,KAAKuiD,WAAa,KAClBviD,KAAKsV,IAAM,KACXtV,KAAK0xC,iBAAmB,KAExB1xC,KAAKwf,YAAa,EAuCnB,QAASikC,IAAW3+C,EAASqF,EAAMujB,EAAUpa,EAAU1D,GAEtDkT,GAAS3d,KAAMnF,MAEfA,KAAKmT,cAELnT,KAAK8S,eAAiB,GAAInN,GAC1B3F,KAAK+S,qBAAuB3P,OAEXA,SAAZ0B,GAEJ9E,KAAK+gB,IAAKjc,EAASqF,EAAMujB,EAAUpa,EAAU1D,GA8F/C,QAAS8zC,IAAgBvrC,GAExB/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,iBAEZxC,KAAK4P,MAAQ,GAAInD,GAAO,UACxBzM,KAAKwG,IAAM,KAEXxG,KAAK8P,SAAW,EAEhB9P,KAAKsV,KAAM,EACXtV,KAAKsW,QAAS,EAEdtW,KAAKoZ,UAAWjB,GAyBjB,QAASwrC,IAAQ7tC,GAEhBgN,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,SAEZxC,KAAK8V,SAA0B1S,SAAb0S,EAA2BA,EAAW,GAAI4tC,IAsD7D,QAASE,MAER9gC,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,MAEZG,OAAO6gB,iBAAkBxjB,MACxB6jD,QACCpgC,YAAY,EACZ5gB,YAiKH,QAASihD,IAAa12B,EAAM/sB,EAAOC,EAAQiC,EAAQC,EAAMN,EAASC,EAAOC,EAAOC,EAAWC,EAAWG,EAAYC,GAEjHV,EAAQmD,KAAMnF,KAAM,KAAMkC,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,EAAYC,GAEjG1C,KAAKiC,OAAUmrB,KAAMA,EAAM/sB,MAAOA,EAAOC,OAAQA,GAEjDN,KAAKqC,UAA0Be,SAAdf,EAA0BA,EAAY+d,GACvDpgB,KAAKsC,UAA0Bc,SAAdd,EAA0BA,EAAY8d,GAEvDpgB,KAAKiE,OAAQ,EACbjE,KAAK+D,iBAAmB,EAgBzB,QAASggD,IAAU1tB,EAAO2tB,EAAc1wB,GAcvC,GAZAtzB,KAAKszB,iBAAwClwB,SAArBkwB,EAAiCA,GAAmB,EAE5EtzB,KAAKikD,eAAiB,GAAIr+C,GAI1BywB,EAAQA,MAERr2B,KAAKq2B,MAAQA,EAAM6tB,MAAO,GAIrBlkD,KAAKszB,iBAAmB,CAU5B,GAAInpB,GAAOnH,KAAKmhD,KAA0B,EAApBnkD,KAAKq2B,MAAMrwB,OACjCmE,GAAO3I,EAAQwB,KAAKohD,eAAgBphD,KAAKqhD,KAAMl6C,IAC/CA,EAAOnH,KAAK8J,IAAK3C,EAAM,GAEvBnK,KAAKskD,iBAAmBn6C,EACxBnK,KAAKukD,kBAAoBp6C,EAEzBnK,KAAKwkD,aAAe,GAAI1+C,cAAc9F,KAAKskD,iBAAmBtkD,KAAKukD,kBAAoB,GACvFvkD,KAAKykD,YAAc,GAAIX,IAAa9jD,KAAKwkD,aAAcxkD,KAAKskD,iBAAkBtkD,KAAKukD,kBAAmB5gD,GAAYg7B,QAIlH3+B,MAAKwkD,aAAe,GAAI1+C,cAAc,GAAK9F,KAAKq2B,MAAMrwB,OAMvD,IAAsB5C,SAAjB4gD,EAEJhkD,KAAK0kD,wBAIL,IAAK1kD,KAAKq2B,MAAMrwB,SAAWg+C,EAAah+C,OAEvChG,KAAKgkD,aAAeA,EAAaE,MAAO,OAElC,CAENj+C,QAAQgc,KAAM,mDAEdjiB,KAAKgkD,eAEL,KAAM,GAAI37C,GAAI,EAAGs8C,EAAK3kD,KAAKq2B,MAAMrwB,OAAY2+C,EAAJt8C,EAAQA,IAEhDrI,KAAKgkD,aAAa14C,KAAM,GAAI1F,KAwHhC,QAASg/C,IAAMC,GAEd/hC,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,OAEZxC,KAAK6kD,KAAOA,EA4Bb,QAASC,IAAazpC,EAAUvF,EAAUwd,GAEzC/K,GAAKpjB,KAAMnF,KAAMqb,EAAUvF,GAE3B9V,KAAKwC,KAAO,cAEZxC,KAAK+kD,SAAW,WAChB/kD,KAAKglD,WAAa,GAAIp/C,GACtB5F,KAAKilD,kBAAoB,GAAIr/C,EAO7B,IAAIywB,KAEJ,IAAKr2B,KAAKqb,UAAoCjY,SAAxBpD,KAAKqb,SAASgb,MAAsB,CAIzD,IAAM,GAFF6uB,GAAMC,EAEA98C,EAAI,EAAGs8C,EAAK3kD,KAAKqb,SAASgb,MAAMrwB,OAAY2+C,EAAJt8C,IAAWA,EAE5D88C,EAAQnlD,KAAKqb,SAASgb,MAAOhuB,GAE7B68C,EAAO,GAAIN,IAAM5kD,MACjBq2B,EAAM/qB,KAAM45C,GAEZA,EAAKhiD,KAAOiiD,EAAMjiD,KAClBgiD,EAAKrxC,SAASuxC,UAAWD,EAAME,KAC/BH,EAAKliC,WAAWoiC,UAAWD,EAAMG,MACdliD,SAAd+hD,EAAMI,KAAoBL,EAAKr1C,MAAMu1C,UAAWD,EAAMI,IAI5D,KAAM,GAAIl9C,GAAI,EAAGs8C,EAAK3kD,KAAKqb,SAASgb,MAAMrwB,OAAY2+C,EAAJt8C,IAAWA,EAE5D88C,EAAQnlD,KAAKqb,SAASgb,MAAOhuB,GAEP,KAAjB88C,EAAM9hC,QAAmC,OAAjB8hC,EAAM9hC,QACPjgB,SAA1BizB,EAAO8uB,EAAM9hC,QAEdgT,EAAO8uB,EAAM9hC,QAAStC,IAAKsV,EAAOhuB,IAIlCrI,KAAK+gB,IAAKsV,EAAOhuB,IAQpBrI,KAAKwlD,uBAELxlD,KAAKohB,mBAAmB,GACxBphB,KAAKU,KAAM,GAAIqjD,IAAU1tB,EAAOjzB,OAAWkwB,GAAoBtzB,KAAK6R,aAqIrE,QAASolB,IAAmB9e,GAE3B/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,oBAEZxC,KAAK4P,MAAQ,GAAInD,GAAO,UAExBzM,KAAKqY,UAAY,EACjBrY,KAAKylD,QAAU,QACfzlD,KAAK0lD,SAAW,QAEhB1lD,KAAKsW,QAAS,EAEdtW,KAAKoZ,UAAWjB,GA2BjB,QAASwtC,IAAMtqC,EAAUvF,EAAU2W,GAElC,MAAc,KAATA,GAEJxmB,QAAQgc,KAAM,mGACP,GAAI2jC,IAAcvqC,EAAUvF,KAIpCgN,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,OAEZxC,KAAKqb,SAAwBjY,SAAbiY,EAAyBA,EAAW,GAAI+M,SACxDpoB,KAAK8V,SAAwB1S,SAAb0S,EAAyBA,EAAW,GAAImhB,KAAqBrnB,MAAuB,SAAhB5M,KAAKwlB,aA2K1F,QAASo9B,IAAcvqC,EAAUvF,GAEhC6vC,GAAKxgD,KAAMnF,KAAMqb,EAAUvF,GAE3B9V,KAAKwC,KAAO,eA0Bb,QAAS20B,IAAgBhf,GAExB/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,iBAEZxC,KAAK4P,MAAQ,GAAInD,GAAO,UAExBzM,KAAKwG,IAAM,KAEXxG,KAAKmK,KAAO,EACZnK,KAAK2zB,iBAAkB,EAEvB3zB,KAAKsW,QAAS,EAEdtW,KAAKoZ,UAAWjB,GA4BjB,QAAS0tC,IAAQxqC,EAAUvF,GAE1BgN,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,SAEZxC,KAAKqb,SAAwBjY,SAAbiY,EAAyBA,EAAW,GAAI+M,IACxDpoB,KAAK8V,SAAwB1S,SAAb0S,EAAyBA,EAAW,GAAIqhB,KAAkBvnB,MAAuB,SAAhB5M,KAAKwlB,WAiIvF,QAASs9B,MAERhjC,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,QAcb,QAASujD,IAAcC,EAAO9jD,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,GAQxF,QAAS8d,KAER0lC,sBAAuB1lC,GAElBylC,EAAME,YAAcF,EAAMG,oBAE9BtpC,EAAMhI,aAAc,GAZtB7S,EAAQmD,KAAMnF,KAAMgmD,EAAO9jD,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,GAEtFzC,KAAK+D,iBAAkB,CAEvB,IAAI8Y,GAAQ7c,IAcZugB,KAWD,QAAS6lC,IAAmB9iD,EAASjD,EAAOC,EAAQiC,EAAQC,EAAMN,EAASC,EAAOC,EAAOC,EAAWC,EAAWG,EAAYC,GAE1HV,EAAQmD,KAAMnF,KAAM,KAAMkC,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,EAAYC,GAEjG1C,KAAKiC,OAAU5B,MAAOA,EAAOC,OAAQA,GACrCN,KAAKsD,QAAUA,EAKftD,KAAKiE,OAAQ,EAKbjE,KAAK+D,iBAAkB,EAaxB,QAASsiD,IAAe9xC,EAAQrS,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,GAE1FT,EAAQmD,KAAMnF,KAAMuU,EAAQrS,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,GAEvFzC,KAAK6U,aAAc,EAYpB,QAASyxC,IAAcjmD,EAAOC,EAAQkC,EAAMN,EAASC,EAAOC,EAAOC,EAAWC,EAAWG,EAAYF,GAIpG,GAFAA,EAAoBa,SAAXb,EAAuBA,EAASu+B,GAEpCv+B,IAAWu+B,IAAev+B,IAAWk9B,GAEzC,KAAM,IAAI1Q,OAAO,mFAIlB/sB,GAAQmD,KAAMnF,KAAM,KAAMkC,EAASC,EAAOC,EAAOC,EAAWC,EAAWC,EAAQC,EAAMC,GAErFzC,KAAKiC,OAAU5B,MAAOA,EAAOC,OAAQA,GAErCN,KAAKwC,KAAgBY,SAATZ,EAAqBA,EAAOk3C,GAExC15C,KAAKqC,UAA0Be,SAAdf,EAA0BA,EAAY+d,GACvDpgB,KAAKsC,UAA0Bc,SAAdd,EAA0BA,EAAY8d,GAEvDpgB,KAAKiE,OAAQ,EACbjE,KAAK+D,iBAAkB,EAYxB,QAASwiD,IAAmBlrC,GAM3B,QAASmrC,GAAczxC,EAAG1M,GAEzB,MAAO0M,GAAI1M,EANZ+f,GAAejjB,KAAMnF,KAErB,IAAIymD,IAAS,EAAG,GAAKrU,KAQjBsU,GAAS,IAAK,IAAK,IAEvB,IAAMrrC,GAAYA,EAASW,WAAc,CASxC,IAAM,GAPF7O,GAAWkO,EAASlO,SACpBC,EAAQiO,EAASjO,MACjBu5C,EAAW,EAGXC,EAAQ,GAAIpgC,aAAa,EAAIpZ,EAAMpH,QAE7BkB,EAAI,EAAGyK,EAAIvE,EAAMpH,OAAY2L,EAAJzK,EAAOA,IAIzC,IAAM,GAFF4Z,GAAO1T,EAAOlG,GAER+L,EAAI,EAAO,EAAJA,EAAOA,IAAO,CAE9BwzC,EAAM,GAAM3lC,EAAM4lC,EAAMzzC,IACxBwzC,EAAM,GAAM3lC,EAAM4lC,GAAQzzC,EAAI,GAAM,IACpCwzC,EAAK5wC,KAAM2wC,EAEX,IAAIK,GAAMJ,EAAKK,UAEM1jD,UAAhBgvC,EAAMyU,KAEVD,EAAO,EAAID,GAAaF,EAAM,GAC9BG,EAAO,EAAID,EAAW,GAAMF,EAAM,GAClCrU,EAAMyU,IAAQ,EACdF,KAUH,IAAM,GAFFI,GAAS,GAAIjhD,cAAyB,EAAX6gD,EAAe,GAEpCz/C,EAAI,EAAGyK,EAAIg1C,EAAch1C,EAAJzK,EAAOA,IAErC,IAAM,GAAI+L,GAAI,EAAO,EAAJA,EAAOA,IAAO,CAE9B,GAAI5D,GAASlC,EAAUy5C,EAAQ,EAAI1/C,EAAI+L,IAEnCoV,EAAQ,EAAInhB,EAAI,EAAI+L,CACxB8zC,GAAQ1+B,EAAQ,GAAMhZ,EAAOvN,EAC7BilD,EAAQ1+B,EAAQ,GAAMhZ,EAAOtN,EAC7BglD,EAAQ1+B,EAAQ,GAAMhZ,EAAO7K,EAM/BxE,KAAKirB,aAAc,WAAY,GAAI1F,IAAiBwhC,EAAQ,QAEtD,IAAM1rC,GAAYA,EAASS,iBAEjC,GAAwB,OAAnBT,EAASgN,MAAiB,CAI9B,GAAIL,GAAU3M,EAASgN,MAAM3hB,MACzByG,EAAWkO,EAASjM,WAAWyE,SAC/B4N,EAASpG,EAASoG,OAClBklC,EAAW,CAEQ,KAAlBllC,EAAOzb,QAEXqV,EAASsP,SAAU,EAAG3C,EAAQhiB,OAO/B,KAAM,GAFF4gD,GAAQ,GAAIpgC,aAAa,EAAIwB,EAAQhiB,QAE/BghD,EAAI,EAAGC,EAAKxlC,EAAOzb,OAAYihD,EAAJD,IAAWA,EAO/C,IAAM,GALFnlC,GAAQJ,EAAQulC,GAEhB7iC,EAAQtC,EAAMsC,MACd7f,EAAQud,EAAMvd,MAER4C,EAAIid,EAAOtE,EAAKsE,EAAQ7f,EAAWub,EAAJ3Y,EAAQA,GAAK,EAErD,IAAM,GAAI+L,GAAI,EAAO,EAAJA,EAAOA,IAAO,CAE9BwzC,EAAM,GAAMz+B,EAAS9gB,EAAI+L,GACzBwzC,EAAM,GAAMz+B,EAAS9gB,GAAM+L,EAAI,GAAM,GACrCwzC,EAAK5wC,KAAM2wC,EAEX,IAAIK,GAAMJ,EAAKK,UAEM1jD,UAAhBgvC,EAAMyU,KAEVD,EAAO,EAAID,GAAaF,EAAM,GAC9BG,EAAO,EAAID,EAAW,GAAMF,EAAM,GAClCrU,EAAMyU,IAAQ,EACdF,KAYJ,IAAM,GAFFI,GAAS,GAAIjhD,cAAyB,EAAX6gD,EAAe,GAEpCz/C,EAAI,EAAGyK,EAAIg1C,EAAch1C,EAAJzK,EAAOA,IAErC,IAAM,GAAI+L,GAAI,EAAO,EAAJA,EAAOA,IAAO,CAE9B,GAAIoV,GAAQ,EAAInhB,EAAI,EAAI+L,EACpBi0C,EAASN,EAAO,EAAI1/C,EAAI+L,EAE5B8zC,GAAQ1+B,EAAQ,GAAMlb,EAASg6C,KAAMD,GACrCH,EAAQ1+B,EAAQ,GAAMlb,EAASi6C,KAAMF,GACrCH,EAAQ1+B,EAAQ,GAAMlb,EAASk6C,KAAMH,GAMvClnD,KAAKirB,aAAc,WAAY,GAAI1F,IAAiBwhC,EAAQ,QAEtD,CAUN,IAAM,GANF55C,GAAWkO,EAASjM,WAAWyE,SAASnN,MACxCigD,EAAWx5C,EAASnH,OAAS,EAC7BshD,EAAUX,EAAW,EAErBI,EAAS,GAAIjhD,cAAyB,EAAX6gD,EAAe,GAEpCz/C,EAAI,EAAGyK,EAAI21C,EAAa31C,EAAJzK,EAAOA,IAEpC,IAAM,GAAI+L,GAAI,EAAO,EAAJA,EAAOA,IAAO,CAE9B,GAAIoV,GAAQ,GAAKnhB,EAAI,EAAI+L,EAErBs0C,EAAS,EAAIrgD,EAAI,EAAI+L,CACzB8zC,GAAQ1+B,EAAQ,GAAMlb,EAAUo6C,GAChCR,EAAQ1+B,EAAQ,GAAMlb,EAAUo6C,EAAS,GACzCR,EAAQ1+B,EAAQ,GAAMlb,EAAUo6C,EAAS,EAEzC,IAAIL,GAAS,EAAIhgD,EAAI,IAAQ+L,EAAI,GAAM,EACvC8zC,GAAQ1+B,EAAQ,GAAMlb,EAAU+5C,GAChCH,EAAQ1+B,EAAQ,GAAMlb,EAAU+5C,EAAS,GACzCH,EAAQ1+B,EAAQ,GAAMlb,EAAU+5C,EAAS,GAM3ClnD,KAAKirB,aAAc,WAAY,GAAI1F,IAAiBwhC,EAAQ,KAoB/D,QAASS,IAAoBC,EAAMC,EAAQC,GAE1C7gC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,qBAEZxC,KAAKmY,YACJsvC,KAAMA,EACNC,OAAQA,EACRC,OAAQA,EAGT,IAIIzgD,GAAG+L,EAAGulB,EACNlP,EAAG5hB,EALHkgD,EAAQ5nD,KAAKmN,SACbC,EAAQpN,KAAKoN,MACb8a,EAAMloB,KAAKinB,cAAe,GAK1B4gC,EAAaH,EAAS,CAE1B,KAAMxgD,EAAI,EAAQygD,GAALzgD,EAAaA,IAIzB,IAFAQ,EAAIR,EAAIygD,EAEF10C,EAAI,EAAQy0C,GAALz0C,EAAaA,IAEzBqW,EAAIrW,EAAIy0C,EAERlvB,EAAIivB,EAAMn+B,EAAG5hB,GACbkgD,EAAMt8C,KAAMktB,EAMd,IAAIzjB,GAAG1M,EAAGic,EAAG6E,EACT2+B,EAAKC,EAAKC,EAAKC,CAEnB,KAAM/gD,EAAI,EAAOygD,EAAJzgD,EAAYA,IAExB,IAAM+L,EAAI,EAAOy0C,EAAJz0C,EAAYA,IAExB8B,EAAI7N,EAAI2gD,EAAa50C,EACrB5K,EAAInB,EAAI2gD,EAAa50C,EAAI,EACzBqR,GAAMpd,EAAI,GAAM2gD,EAAa50C,EAAI,EACjCkW,GAAMjiB,EAAI,GAAM2gD,EAAa50C,EAE7B60C,EAAM,GAAIjmD,GAASoR,EAAIy0C,EAAQxgD,EAAIygD,GACnCI,EAAM,GAAIlmD,IAAWoR,EAAI,GAAMy0C,EAAQxgD,EAAIygD,GAC3CK,EAAM,GAAInmD,IAAWoR,EAAI,GAAMy0C,GAAUxgD,EAAI,GAAMygD,GACnDM,EAAM,GAAIpmD,GAASoR,EAAIy0C,GAAUxgD,EAAI,GAAMygD,GAE3Cv6C,EAAM9B,KAAM,GAAIiZ,IAAOxP,EAAG1M,EAAG8gB,IAC7BjB,EAAI5c,MAAQw8C,EAAKC,EAAKE,IAEtB76C,EAAM9B,KAAM,GAAIiZ,IAAOlc,EAAGic,EAAG6E,IAC7BjB,EAAI5c,MAAQy8C,EAAInrC,QAASorC,EAAKC,EAAIrrC,SAYpC5c,MAAKkoD,qBACLloD,KAAKmoD,uBAaN,QAASC,IAAoBj7C,EAAU6a,EAASjO,EAAQsuC,GA6FvD,QAASC,GAASl+B,GAEjB,GAAI/a,GAAS+a,EAAOmuB,YAAY37B,OAChCvN,GAAOgZ,MAAQkgC,EAAKp7C,SAAS7B,KAAM+D,GAAW,CAI9C,IAAIia,GAAIk/B,EAASp+B,GAAW,EAAIpnB,KAAKylD,GAAK,GACtC/gD,EAAIghD,EAAat+B,GAAWpnB,KAAKylD,GAAK,EAG1C,OAFAp5C,GAAOE,GAAK,GAAI1N,GAASynB,EAAG,EAAI5hB,GAEzB2H,EAOR,QAASs5C,GAAMC,EAAIC,EAAIC,GAEtB,GAAIhoC,GAAO,GAAIyD,IAAOqkC,EAAGvgC,MAAOwgC,EAAGxgC,MAAOygC,EAAGzgC,OAASugC,EAAGhsC,QAASisC,EAAGjsC,QAASksC,EAAGlsC,SACjF2rC,GAAKn7C,MAAM9B,KAAMwV,GAEjBioC,EAAS72C,KAAM02C,GAAK7nC,IAAK8nC,GAAK9nC,IAAK+nC,GAAKE,aAAc,EAEtD,IAAIC,GAAMT,EAASO,EAEnBR,GAAKthC,cAAe,GAAI3b,MACvB49C,EAAWN,EAAGr5C,GAAIq5C,EAAIK,GACtBC,EAAWL,EAAGt5C,GAAIs5C,EAAII,GACtBC,EAAWJ,EAAGv5C,GAAIu5C,EAAIG,KAQxB,QAASE,GAAWroC,EAAMunC,GAUzB,IAAM,GARFe,GAAOpmD,KAAKqmD,IAAK,EAAGhB,GACpBtzC,EAAIuzC,EAASC,EAAKp7C,SAAU2T,EAAK/L,IACjC1M,EAAIigD,EAASC,EAAKp7C,SAAU2T,EAAKzY,IACjCic,EAAIgkC,EAASC,EAAKp7C,SAAU2T,EAAKwD,IACjC5c,KAIMR,EAAI,EAASkiD,GAALliD,EAAWA,IAAO,CAEnCQ,EAAGR,KAMH,KAAM,GAJFoiD,GAAKhB,EAASvzC,EAAE6H,QAAQ2sC,KAAMjlC,EAAGpd,EAAIkiD,IACrCI,EAAKlB,EAASjgD,EAAEuU,QAAQ2sC,KAAMjlC,EAAGpd,EAAIkiD,IACrCK,EAAOL,EAAOliD,EAER+L,EAAI,EAAQw2C,GAALx2C,EAAWA,IAEhB,IAANA,GAAW/L,IAAMkiD,EAErB1hD,EAAGR,GAAK+L,GAAMq2C,EAId5hD,EAAGR,GAAK+L,GAAMq1C,EAASgB,EAAG1sC,QAAQ2sC,KAAMC,EAAIv2C,EAAIw2C,IAUnD,IAAM,GAAIviD,GAAI,EAAOkiD,EAAJliD,EAAWA,IAE3B,IAAM,GAAI+L,GAAI,EAAO,GAAMm2C,EAAOliD,GAAM,EAAvB+L,EAA0BA,IAAO,CAEjD,GAAI0O,GAAI3e,KAAK6nB,MAAO5X,EAAI,EAEnBA,GAAI,IAAM,EAEd01C,EACCjhD,EAAGR,GAAKya,EAAI,GACZja,EAAGR,EAAI,GAAKya,GACZja,EAAGR,GAAKya,IAKTgnC,EACCjhD,EAAGR,GAAKya,EAAI,GACZja,EAAGR,EAAI,GAAKya,EAAI,GAChBja,EAAGR,EAAI,GAAKya,KAcjB,QAAS6mC,GAASp+B,GAEjB,MAAOpnB,MAAK0mD,MAAOt/B,EAAO5lB,GAAK4lB,EAAOtoB,GAOvC,QAAS4mD,GAAat+B,GAErB,MAAOpnB,MAAK0mD,OAASt/B,EAAOroB,EAAGiB,KAAKmhD,KAAQ/5B,EAAOtoB,EAAIsoB,EAAOtoB,EAAQsoB,EAAO5lB,EAAI4lB,EAAO5lB,IAOzF,QAAS0kD,GAAW35C,EAAI6a,EAAQo+B,GAI/B,MAFiB,GAAVA,GAA4B,IAATj5C,EAAGzN,IAAYyN,EAAK,GAAI1N,GAAS0N,EAAGzN,EAAI,EAAGyN,EAAGxN,IACpD,IAAbqoB,EAAOtoB,GAA4B,IAAbsoB,EAAO5lB,IAAY+K,EAAK,GAAI1N,GAAS2mD,EAAU,EAAIxlD,KAAKylD,GAAK,GAAKl5C,EAAGxN,IAC3FwN,EAAGqN,QA5NXkK,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,qBAEZxC,KAAKmY,YACJhL,SAAUA,EACV6a,QAASA,EACTjO,OAAQA,EACRsuC,OAAQA,GAGTtuC,EAASA,GAAU,EACnBsuC,EAASA,GAAU,CAInB,KAAM,GAFFE,GAAOvoD,KAEDkH,EAAI,EAAGyK,EAAIxE,EAASnH,OAAY2L,EAAJzK,EAAOA,GAAK,EAEjDohD,EAAS,GAAI3iD,GAASwH,EAAUjG,GAAKiG,EAAUjG,EAAI,GAAKiG,EAAUjG,EAAI,IAQvE,KAAM,GAJFsxB,GAAIx4B,KAAKmN,SAETC,KAEMlG,EAAI,EAAG+L,EAAI,EAAGtB,EAAIqW,EAAQhiB,OAAY2L,EAAJzK,EAAOA,GAAK,EAAG+L,IAAO,CAEjE,GAAI21C,GAAKpwB,EAAGxQ,EAAS9gB,IACjB2hD,EAAKrwB,EAAGxQ,EAAS9gB,EAAI,IACrB4hD,EAAKtwB,EAAGxQ,EAAS9gB,EAAI,GAEzBkG,GAAO6F,GAAM,GAAIsR,IAAOqkC,EAAGvgC,MAAOwgC,EAAGxgC,MAAOygC,EAAGzgC,OAASugC,EAAGhsC,QAASisC,EAAGjsC,QAASksC,EAAGlsC,UAMpF,IAAM,GAFFmsC,GAAW,GAAIpjD,GAETuB,EAAI,EAAGyK,EAAIvE,EAAMpH,OAAY2L,EAAJzK,EAAOA,IAEzCiiD,EAAW/7C,EAAOlG,GAAKmhD,EAOxB,KAAM,GAAInhD,GAAI,EAAGyK,EAAI3R,KAAKinB,cAAe,GAAIjhB,OAAY2L,EAAJzK,EAAOA,IAAO,CAElE,GAAIghB,GAAMloB,KAAKinB,cAAe,GAAK/f,GAE/ByiD,EAAKzhC,EAAK,GAAIpmB,EACd8nD,EAAK1hC,EAAK,GAAIpmB,EACd+nD,EAAK3hC,EAAK,GAAIpmB,EAEdgL,EAAM9J,KAAK8J,IAAK68C,EAAIC,EAAIC,GACxBh9C,EAAM7J,KAAK6J,IAAK88C,EAAIC,EAAIC,EAEvB/8C,GAAM,IAAa,GAAND,IAIP,GAAL88C,IAAWzhC,EAAK,GAAIpmB,GAAK,GACpB,GAAL8nD,IAAW1hC,EAAK,GAAIpmB,GAAK,GACpB,GAAL+nD,IAAW3hC,EAAK,GAAIpmB,GAAK,IAShC,IAAM,GAAIoF,GAAI,EAAGyK,EAAI3R,KAAKmN,SAASnH,OAAY2L,EAAJzK,EAAOA,IAEjDlH,KAAKmN,SAAUjG,GAAI0mC,eAAgB7zB,EAOpC/Z,MAAK8pD,gBAEL9pD,KAAKkoD,qBAELloD,KAAKsnB,eAAiB,GAAIzN,IAAQ,GAAIlU,GAAWoU,GAmJlD,QAASgwC,IAAqBhwC,EAAQsuC,GAErC,GAAIl7C,IACF,EAAI,EAAI,EAAK,GAAK,GAAM,EAAK,GAAM,EAAG,GAAQ,EAAG,GAAK,IAGpD6a,GACF,EAAI,EAAI,EAAM,EAAI,EAAI,EAAM,EAAI,EAAI,EAAM,EAAI,EAAI,EAGpDogC,IAAmBjjD,KAAMnF,KAAMmN,EAAU6a,EAASjO,EAAQsuC,GAE1DroD,KAAKwC,KAAO,sBAEZxC,KAAKmY,YACJ4B,OAAQA,EACRsuC,OAAQA,GAYV,QAAS2B,IAAoBjwC,EAAQsuC,GAEpC,GAAIl7C,IACH,EAAG,EAAG,EAAK,GAAK,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,GAAK,EAAM,EAAG,EAAG,EAAM,EAAG,EAAG,IAGlE6a,GACH,EAAG,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,EAAG,EAAM,EAAG,EAAG,EAG3FogC,IAAmBjjD,KAAMnF,KAAMmN,EAAU6a,EAASjO,EAAQsuC,GAE1DroD,KAAKwC,KAAO,qBAEZxC,KAAKmY,YACJ4B,OAAQA,EACRsuC,OAAQA,GAYV,QAAS4B,IAAqBlwC,EAAQsuC,GAErC,GAAI6B,IAAM,EAAIlnD,KAAKmhD,KAAM,IAAQ,EAE7Bh3C,GACH,GAAM+8C,EAAI,EAAM,EAAIA,EAAI,EAAK,IAAOA,EAAI,EAAM,GAAKA,EAAI,EACtD,EAAG,GAAMA,EAAM,EAAI,EAAIA,EAAM,EAAG,IAAOA,EAAM,EAAI,GAAKA,EACtDA,EAAI,EAAG,GAAQA,EAAI,EAAI,GAAOA,EAAI,EAAG,IAASA,EAAI,EAAI,GAGpDliC,GACF,EAAG,GAAK,EAAM,EAAI,EAAI,EAAM,EAAI,EAAI,EAAM,EAAI,EAAG,GAAO,EAAG,GAAI,GAC/D,EAAI,EAAI,EAAM,EAAG,GAAK,EAAK,GAAI,GAAK,EAAK,GAAK,EAAI,EAAM,EAAI,EAAI,EAChE,EAAI,EAAI,EAAM,EAAI,EAAI,EAAM,EAAI,EAAI,EAAM,EAAI,EAAI,EAAM,EAAI,EAAI,EAChE,EAAI,EAAI,EAAM,EAAI,EAAG,GAAO,EAAI,EAAG,GAAO,EAAI,EAAI,EAAM,EAAI,EAAI,EAGlEogC,IAAmBjjD,KAAMnF,KAAMmN,EAAU6a,EAASjO,EAAQsuC,GAE1DroD,KAAKwC,KAAO,sBAEZxC,KAAKmY,YACJ4B,OAAQA,EACRsuC,OAAQA,GAYV,QAAS8B,IAAsBpwC,EAAQsuC,GAEtC,GAAI6B,IAAM,EAAIlnD,KAAKmhD,KAAM,IAAQ,EAC7Bp9C,EAAI,EAAImjD,EAER/8C,GAGH,GAAK,GAAK,GAAQ,GAAK,GAAM,EAC7B,GAAM,EAAG,GAAQ,GAAM,EAAI,EAC1B,EAAG,GAAK,GAAS,EAAG,GAAM,EAC1B,EAAI,EAAG,GAAS,EAAI,EAAI,EAGxB,GAAKpG,GAAKmjD,EAAO,GAAKnjD,EAAImjD,EAC1B,EAAInjD,GAAKmjD,EAAO,EAAInjD,EAAImjD,GAGvBnjD,GAAKmjD,EAAI,GAAQnjD,EAAImjD,EAAI,EAC1BnjD,GAAKmjD,EAAI,EAAOnjD,EAAImjD,EAAI,GAGvBA,EAAI,GAAKnjD,EAAOmjD,EAAI,GAAKnjD,GACzBmjD,EAAI,EAAInjD,EAAOmjD,EAAI,EAAInjD,GAGtBihB,GACF,EAAG,GAAK,EAAQ,EAAI,EAAG,GAAS,EAAG,GAAI,GACvC,EAAG,GAAI,GAAS,EAAG,GAAK,EAAQ,EAAI,EAAG,GACxC,GAAK,EAAI,EAAO,GAAK,EAAG,GAAQ,GAAI,GAAK,EACxC,EAAI,EAAG,GAAS,EAAG,GAAK,EAAQ,EAAI,EAAG,GACvC,EAAG,GAAK,EAAQ,EAAI,EAAG,GAAS,EAAG,GAAI,GACvC,EAAG,GAAK,EAAQ,EAAI,EAAG,GAAS,EAAG,GAAI,GACvC,EAAG,GAAI,GAAS,EAAG,GAAK,EAAQ,EAAI,EAAG,GACxC,GAAK,EAAI,EAAO,GAAK,EAAG,GAAQ,GAAI,GAAK,EACxC,EAAG,GAAI,GAAS,EAAG,GAAK,EAAQ,EAAI,EAAI,EACzC,GAAK,EAAI,EAAO,GAAK,EAAG,GAAQ,GAAI,GAAK,EACzC,GAAK,EAAG,GAAQ,GAAI,GAAK,EAAO,GAAK,EAAG,GACvC,EAAG,GAAI,GAAS,EAAG,GAAK,EAAQ,EAAI,EAAI,EAG1CogC,IAAmBjjD,KAAMnF,KAAMmN,EAAU6a,EAASjO,EAAQsuC,GAE1DroD,KAAKwC,KAAO,uBAEZxC,KAAKmY,YACJ4B,OAAQA,EACRsuC,OAAQA,GAsBV,QAAS+B,IAAc5+C,EAAM6+C,EAAUtwC,EAAQuwC,EAAgBC,EAAQC,GAkDtE,QAASC,GAAM3oD,EAAGC,EAAGyC,GAEpB,MAAOqY,GAAM1P,SAAS7B,KAAM,GAAI3F,GAAS7D,EAAGC,EAAGyC,IAAQ,EAlDxDsiB,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,eAEZxC,KAAKmY,YACJ3M,KAAMA,EACN6+C,SAAUA,EACVtwC,OAAQA,EACRuwC,eAAgBA,EAChBC,OAAQA,EACRC,MAAOA,GAGRH,EAAWA,GAAY,GACvBtwC,EAASA,GAAU,EACnBuwC,EAAiBA,GAAkB,EACnCC,EAASA,IAAU,EACnBC,EAAQA,GAASJ,GAAaM,OAE9B,IAICC,GACAzwC,EACA0wC,EAIAthC,EAAG5hB,EAAGX,EAEN8jD,EAAIC,EACJzF,EACAn+C,EAAG+L,EACH83C,EAAIC,EACJj2C,EAAG1M,EAAGic,EAAG6E,EACT2+B,EAAKC,EAAKC,EAAKC,EAjBZgD,KAEApuC,EAAQ7c,KAMXkrD,EAAYb,EAAW,EAKlBc,EAAO,GAAIxlD,GAMbylD,EAAS,GAAIhB,IAAaiB,aAAc7/C,EAAM6+C,EAAUE,GAC3De,EAAWF,EAAOE,SAClBrjC,EAAUmjC,EAAOnjC,QACjBsjC,EAAYH,EAAOG,SAepB,KAZAvrD,KAAKsrD,SAAWA,EAChBtrD,KAAKioB,QAAUA,EACfjoB,KAAKurD,UAAYA,EAUXrkD,EAAI,EAAOgkD,EAAJhkD,EAAeA,IAc3B,IAZA+jD,EAAM/jD,MAENoiB,EAAIpiB,GAAMgkD,EAAY,GAEtB7F,EAAM75C,EAAKggD,WAAYliC,GAEvBqhC,EAAUW,EAAUpkD,GACpBgT,EAAS+N,EAAS/gB,GAClB0jD,EAAWW,EAAWrkD,GAEtBH,EAAIgT,EAASywC,EAAOlhC,GAEdrW,EAAI,EAAOq3C,EAAJr3C,EAAoBA,IAEhCvL,EAAIuL,EAAIq3C,EAAiB,EAAItnD,KAAKylD,GAElCoC,GAAO9jD,EAAI/D,KAAKg1C,IAAKtwC,GACrBojD,EAAK/jD,EAAI/D,KAAKyoD,IAAK/jD,GAEnByjD,EAAKj5C,KAAMmzC,GACX8F,EAAKrpD,GAAK+oD,EAAK3wC,EAAOpY,EAAIgpD,EAAKF,EAAS9oD,EACxCqpD,EAAKppD,GAAK8oD,EAAK3wC,EAAOnY,EAAI+oD,EAAKF,EAAS7oD,EACxCopD,EAAK3mD,GAAKqmD,EAAK3wC,EAAO1V,EAAIsmD,EAAKF,EAASpmD,EAExCymD,EAAM/jD,GAAK+L,GAAMw3C,EAAMU,EAAKrpD,EAAGqpD,EAAKppD,EAAGopD,EAAK3mD,EAS9C,KAAM0C,EAAI,EAAOmjD,EAAJnjD,EAAcA,IAE1B,IAAM+L,EAAI,EAAOq3C,EAAJr3C,EAAoBA,IAEhC83C,EAAK,GAAe7jD,EAAI,GAAMmjD,EAAWnjD,EAAI,EAC7C8jD,GAAO/3C,EAAI,GAAMq3C,EAEjBv1C,EAAIk2C,EAAM/jD,GAAK+L,GACf5K,EAAI4iD,EAAMF,GAAM93C,GAChBqR,EAAI2mC,EAAMF,GAAMC,GAChB7hC,EAAI8hC,EAAM/jD,GAAK8jD,GAEflD,EAAM,GAAIjmD,GAASqF,EAAImjD,EAAUp3C,EAAIq3C,GACrCvC,EAAM,GAAIlmD,IAAWqF,EAAI,GAAMmjD,EAAUp3C,EAAIq3C,GAC7CtC,EAAM,GAAInmD,IAAWqF,EAAI,GAAMmjD,GAAYp3C,EAAI,GAAMq3C,GACrDrC,EAAM,GAAIpmD,GAASqF,EAAImjD,GAAYp3C,EAAI,GAAMq3C,GAE7CtqD,KAAKoN,MAAM9B,KAAM,GAAIiZ,IAAOxP,EAAG1M,EAAG8gB,IAClCnpB,KAAKinB,cAAe,GAAI3b,MAAQw8C,EAAKC,EAAKE,IAE1CjoD,KAAKoN,MAAM9B,KAAM,GAAIiZ,IAAOlc,EAAGic,EAAG6E,IAClCnpB,KAAKinB,cAAe,GAAI3b,MAAQy8C,EAAInrC,QAASorC,EAAKC,EAAIrrC,SAMxD5c,MAAKkoD,qBACLloD,KAAKmoD,uBAgLN,QAASuD,IAAyB3xC,EAAQ4xC,EAAMC,EAAiBtB,EAAgB9xB,EAAGqzB,GA8InF,QAASC,GAA0BxiC,EAAGkP,EAAGqzB,EAAG9xC,EAAQlG,GAEnD,GAAIk4C,GAAK/oD,KAAKg1C,IAAK1uB,GACf0iC,EAAKhpD,KAAKyoD,IAAKniC,GACf2iC,EAAUJ,EAAIrzB,EAAIlP,EAClB4iC,EAAKlpD,KAAKg1C,IAAKiU,EAEnBp4C,GAAS/R,EAAIiY,GAAW,EAAImyC,GAAO,GAAMH,EACzCl4C,EAAS9R,EAAIgY,GAAW,EAAImyC,GAAOF,EAAK,GACxCn4C,EAASrP,EAAIuV,EAAS/W,KAAKyoD,IAAKQ,GAAY,GArJ7C7jC,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,0BAEZxC,KAAKmY,YACJ4B,OAAQA,EACR4xC,KAAMA,EACNC,gBAAiBA,EACjBtB,eAAgBA,EAChB9xB,EAAGA,EACHqzB,EAAGA,GAGJ9xC,EAASA,GAAU,IACnB4xC,EAAOA,GAAQ,GACfC,EAAkB5oD,KAAK6nB,MAAO+gC,IAAqB,GACnDtB,EAAiBtnD,KAAK6nB,MAAOy/B,IAAoB,EACjD9xB,EAAIA,GAAK,EACTqzB,EAAIA,GAAK,CAGT,IAUI3kD,GAAG+L,EAVH6X,GAAkBw/B,EAAiB,IAAQsB,EAAkB,GAC7D7gC,EAAau/B,EAAiBsB,EAAkB,EAAI,EAGpD5jC,EAAU,GAAIzC,IAAiB,IAAMwF,EAAa,MAAQvE,YAAcnZ,aAAe0d,GAAe,GACtG5d,EAAW,GAAIoY,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACrE7C,EAAU,GAAI1C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACpE5C,EAAM,GAAI3C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GAG1DzC,EAAQ,EAAG8jC,EAAc,EAE/B98C,EAAS,GAAI1J,GACbuU,EAAS,GAAIvU,GACb4J,EAAK,GAAI1N,GAETuqD,EAAK,GAAIzmD,GACT0mD,EAAK,GAAI1mD,GAET2mD,EAAI,GAAI3mD,GACR4mD,EAAI,GAAI5mD,GACR6mD,EAAI,GAAI7mD,EAIZ,KAAMuB,EAAI,EAAQ0kD,GAAL1kD,IAAyBA,EAAI,CAIzC,GAAIoiB,GAAIpiB,EAAI0kD,EAAkBpzB,EAAIx1B,KAAKylD,GAAK,CAoB5C,KAfAqD,EAA0BxiC,EAAGkP,EAAGqzB,EAAG9xC,EAAQqyC,GAC3CN,EAA0BxiC,EAAI,IAAMkP,EAAGqzB,EAAG9xC,EAAQsyC,GAIlDE,EAAEE,WAAYJ,EAAID,GAClBI,EAAEE,WAAYL,EAAID,GAClBE,EAAEK,aAAcJ,EAAGC,GACnBA,EAAEG,aAAcL,EAAGC,GAInBD,EAAE/T,YACFiU,EAAEjU,YAEItlC,EAAI,EAAQq3C,GAALr3C,IAAwBA,EAAI,CAKxC,GAAIvL,GAAIuL,EAAIq3C,EAAiBtnD,KAAKylD,GAAK,EACnCoC,GAAOc,EAAO3oD,KAAKg1C,IAAKtwC,GACxBojD,EAAKa,EAAO3oD,KAAKyoD,IAAK/jD,EAK1B2H,GAAOvN,EAAIsqD,EAAGtqD,GAAM+oD,EAAK2B,EAAE1qD,EAAIgpD,EAAKwB,EAAExqD,GACtCuN,EAAOtN,EAAIqqD,EAAGrqD,GAAM8oD,EAAK2B,EAAEzqD,EAAI+oD,EAAKwB,EAAEvqD,GACtCsN,EAAO7K,EAAI4nD,EAAG5nD,GAAMqmD,EAAK2B,EAAEhoD,EAAIsmD,EAAKwB,EAAE9nD,GAGtC2I,EAASy/C,OAAQvkC,EAAOhZ,EAAOvN,EAAGuN,EAAOtN,EAAGsN,EAAO7K,GAGnD0V,EAAOuyC,WAAYp9C,EAAQ+8C,GAAK7T,YAChCtwB,EAAQ2kC,OAAQvkC,EAAOnO,EAAOpY,EAAGoY,EAAOnY,EAAGmY,EAAO1V,GAGlD+K,EAAGzN,EAAIoF,EAAI0kD,EACXr8C,EAAGxN,EAAIkR,EAAIq3C,EACXpiC,EAAI2kC,MAAOxkC,EAAO9Y,EAAGzN,EAAGyN,EAAGxN,GAG3BsmB,KAQF,IAAMpV,EAAI,EAAQ24C,GAAL34C,EAAsBA,IAElC,IAAM/L,EAAI,EAAQojD,GAALpjD,EAAqBA,IAAO,CAGxC,GAAI6N,IAAMu1C,EAAiB,IAAQr3C,EAAI,IAAQ/L,EAAI,GAC/CmB,GAAMiiD,EAAiB,GAAMr3C,GAAM/L,EAAI,GACvCod,GAAMgmC,EAAiB,GAAMr3C,EAAI/L,EACjCiiB,GAAMmhC,EAAiB,IAAQr3C,EAAI,GAAM/L,CAG7C8gB,GAAQ8kC,KAAMX,EAAap3C,GAAKo3C,IAChCnkC,EAAQ8kC,KAAMX,EAAa9jD,GAAK8jD,IAChCnkC,EAAQ8kC,KAAMX,EAAahjC,GAAKgjC,IAGhCnkC,EAAQ8kC,KAAMX,EAAa9jD,GAAK8jD,IAChCnkC,EAAQ8kC,KAAMX,EAAa7nC,GAAK6nC,IAChCnkC,EAAQ8kC,KAAMX,EAAahjC,GAAKgjC,IAQlCnsD,KAAKgrB,SAAUhD,GACfhoB,KAAKirB,aAAc,WAAY9d,GAC/BnN,KAAKirB,aAAc,SAAUhD,GAC7BjoB,KAAKirB,aAAc,KAAM/C,GA0B1B,QAAS6kC,IAAmBhzC,EAAQ4xC,EAAMC,EAAiBtB,EAAgB9xB,EAAGqzB,EAAGmB,GAEhFlmC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,oBAEZxC,KAAKmY,YACJ4B,OAAQA,EACR4xC,KAAMA,EACNC,gBAAiBA,EACjBtB,eAAgBA,EAChB9xB,EAAGA,EACHqzB,EAAGA,GAGgBzoD,SAAhB4pD,GAA4B/mD,QAAQgc,KAAM,4FAE9CjiB,KAAKitD,mBAAoB,GAAIvB,IAAyB3xC,EAAQ4xC,EAAMC,EAAiBtB,EAAgB9xB,EAAGqzB,IACxG7rD,KAAK8pD,gBAWN,QAASoD,IAAqBnzC,EAAQ4xC,EAAMrB,EAAgBsB,EAAiBuB,GAE5E/kC,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,sBAEZxC,KAAKmY,YACJ4B,OAAQA,EACR4xC,KAAMA,EACNrB,eAAgBA,EAChBsB,gBAAiBA,EACjBuB,IAAKA,GAGNpzC,EAASA,GAAU,IACnB4xC,EAAOA,GAAQ,GACfrB,EAAiBtnD,KAAK6nB,MAAOy/B,IAAoB,EACjDsB,EAAkB5oD,KAAK6nB,MAAO+gC,IAAqB,EACnDuB,EAAMA,GAAiB,EAAVnqD,KAAKylD,EAGlB,IAmBIx1C,GAAG/L,EAnBH4jB,GAAkBw/B,EAAiB,IAAQsB,EAAkB,GAC7D7gC,EAAau/B,EAAiBsB,EAAkB,EAAI,EAGpD5jC,EAAU,IAAM+C,EAAa,MAAQvE,YAAcnZ,aAAe0d,GAClE5d,EAAW,GAAIrH,cAA4B,EAAdglB,GAC7B7C,EAAU,GAAIniB,cAA4B,EAAdglB,GAC5B5C,EAAM,GAAIpiB,cAA4B,EAAdglB,GAGxBP,EAAqB,EACrBC,EAAiB,EACjBE,EAAoB,EAGpB5Q,EAAS,GAAInU,GACb0J,EAAS,GAAI1J,GACbuU,EAAS,GAAIvU,EAMjB,KAAMsN,EAAI,EAAQq3C,GAALr3C,EAAqBA,IAEjC,IAAM/L,EAAI,EAAQ0kD,GAAL1kD,EAAsBA,IAAO,CAEzC,GAAIoiB,GAAIpiB,EAAI0kD,EAAkBuB,EAC1BzlD,EAAIuL,EAAIq3C,EAAiBtnD,KAAKylD,GAAK,CAGvCp5C,GAAOvN,GAAMiY,EAAS4xC,EAAO3oD,KAAKg1C,IAAKtwC,IAAQ1E,KAAKg1C,IAAK1uB,GACzDja,EAAOtN,GAAMgY,EAAS4xC,EAAO3oD,KAAKg1C,IAAKtwC,IAAQ1E,KAAKyoD,IAAKniC,GACzDja,EAAO7K,EAAImnD,EAAO3oD,KAAKyoD,IAAK/jD,GAE5ByF,EAAUod,GAAuBlb,EAAOvN,EACxCqL,EAAUod,EAAqB,GAAMlb,EAAOtN,EAC5CoL,EAAUod,EAAqB,GAAMlb,EAAO7K,EAG5CsV,EAAOhY,EAAIiY,EAAS/W,KAAKg1C,IAAK1uB,GAC9BxP,EAAO/X,EAAIgY,EAAS/W,KAAKyoD,IAAKniC,GAG9BpP,EAAOuyC,WAAYp9C,EAAQyK,GAASy+B,YAEpCtwB,EAASsC,GAAuBrQ,EAAOpY,EACvCmmB,EAASsC,EAAqB,GAAMrQ,EAAOnY,EAC3CkmB,EAASsC,EAAqB,GAAMrQ,EAAO1V,EAG3C0jB,EAAKsC,GAAmBtjB,EAAI0kD,EAC5B1jC,EAAKsC,EAAiB,GAAMvX,EAAIq3C,EAGhC//B,GAAsB,EACtBC,GAAkB,EAQpB,IAAMvX,EAAI,EAAQq3C,GAALr3C,EAAqBA,IAEjC,IAAM/L,EAAI,EAAQ0kD,GAAL1kD,EAAsBA,IAAO,CAGzC,GAAI6N,IAAM62C,EAAkB,GAAM34C,EAAI/L,EAAI,EACtCmB,GAAMujD,EAAkB,IAAQ34C,EAAI,GAAM/L,EAAI,EAC9Cod,GAAMsnC,EAAkB,IAAQ34C,EAAI,GAAM/L,EAC1CiiB,GAAMyiC,EAAkB,GAAM34C,EAAI/L,CAGtC8gB,GAAS0C,GAAsB3V,EAC/BiT,EAAS0C,EAAoB,GAAMriB,EACnC2f,EAAS0C,EAAoB,GAAMvB,EAGnCnB,EAAS0C,EAAoB,GAAMriB,EACnC2f,EAAS0C,EAAoB,GAAMpG,EACnC0D,EAAS0C,EAAoB,GAAMvB,EAGnCuB,GAAqB,EAOvB1qB,KAAKgrB,SAAU,GAAIzF,IAAiByC,EAAS,IAC7ChoB,KAAKirB,aAAc,WAAY,GAAI1F,IAAiBpY,EAAU,IAC9DnN,KAAKirB,aAAc,SAAU,GAAI1F,IAAiB0C,EAAS,IAC3DjoB,KAAKirB,aAAc,KAAM,GAAI1F,IAAiB2C,EAAK,IAapD,QAASklC,IAAerzC,EAAQ4xC,EAAMrB,EAAgBsB,EAAiBuB,GAEtErmC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,gBAEZxC,KAAKmY,YACJ4B,OAAQA,EACR4xC,KAAMA,EACNrB,eAAgBA,EAChBsB,gBAAiBA,EACjBuB,IAAKA,GAGNntD,KAAKitD,mBAAoB,GAAIC,IAAqBnzC,EAAQ4xC,EAAMrB,EAAgBsB,EAAiBuB,IA6xBlG,QAASE,IAAiBC,EAAQ5oD,GAEjC,MAA0B,mBAArB,QAEJ4oD,OAKDxmC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,kBAEZ8qD,EAAS5uC,MAAMgG,QAAS4oC,GAAWA,GAAWA,GAE9CttD,KAAKutD,aAAcD,EAAQ5oD,OAE3B1E,MAAKkoD,sBAuqBN,QAASsF,IAAcC,EAAMt1C,GAE5BA,EAAaA,KAEb,IAAIu1C,GAAOv1C,EAAWu1C,IAEtB,KAAMA,GAAQA,EAAKC,WAAY,EAG9B,MADA1nD,SAAQC,MAAO,wEACR,GAAI4gB,GAIZ,IAAIwmC,GAASI,EAAKE,eAAgBH,EAAMt1C,EAAWhO,KAAMgO,EAAW01C,cAIpE11C,GAAW21C,OAA+B1qD,SAAtB+U,EAAW7X,OAAuB6X,EAAW7X,OAAS,GAIvC8C,SAA9B+U,EAAW41C,iBAA+B51C,EAAW41C,eAAiB,IAC7C3qD,SAAzB+U,EAAW61C,YAA0B71C,EAAW61C,UAAY,GAChC5qD,SAA5B+U,EAAW81C,eAA6B91C,EAAW81C,cAAe,GAEvEZ,GAAgBloD,KAAMnF,KAAMstD,EAAQn1C,GAEpCnY,KAAKwC,KAAO,eAYb,QAAS0rD,IAAsBn0C,EAAQ+O,EAAeC,EAAgBolC,EAAUC,EAAWC,EAAYC,GAEtGlmC,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,uBAEZxC,KAAKmY,YACJ4B,OAAQA,EACR+O,cAAeA,EACfC,eAAgBA,EAChBolC,SAAUA,EACVC,UAAWA,EACXC,WAAYA,EACZC,YAAaA,GAGdv0C,EAASA,GAAU,GAEnB+O,EAAgB9lB,KAAK8J,IAAK,EAAG9J,KAAK6nB,MAAO/B,IAAmB,GAC5DC,EAAiB/lB,KAAK8J,IAAK,EAAG9J,KAAK6nB,MAAO9B,IAAoB,GAE9DolC,EAAwB/qD,SAAb+qD,EAAyBA,EAAW,EAC/CC,EAA0BhrD,SAAdgrD,EAA0BA,EAAsB,EAAVprD,KAAKylD,GAEvD4F,EAA4BjrD,SAAfirD,EAA2BA,EAAa,EACrDC,EAA8BlrD,SAAhBkrD,EAA4BA,EAActrD,KAAKylD,EAY7D,KAAM,GAVF8F,GAAWF,EAAaC,EAExBxjC,GAAkBhC,EAAgB,IAAQC,EAAiB,GAE3DylC,EAAY,GAAIjpC,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACtE7C,EAAU,GAAI1C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACpE5C,EAAM,GAAI3C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GAEhEzC,EAAQ,EAAGlb,KAAe+M,EAAS,GAAIvU,GAEjC5D,EAAI,EAAQgnB,GAALhnB,EAAqBA,IAAO,CAM5C,IAAM,GAJF0sD,MAEA/mD,EAAI3F,EAAIgnB,EAEFjnB,EAAI,EAAQgnB,GAALhnB,EAAoBA,IAAO,CAE3C,GAAIwnB,GAAIxnB,EAAIgnB,EAER4lC,GAAO30C,EAAS/W,KAAKg1C,IAAKmW,EAAW7kC,EAAI8kC,GAAcprD,KAAKyoD,IAAK4C,EAAa3mD,EAAI4mD,GAClFK,EAAK50C,EAAS/W,KAAKg1C,IAAKqW,EAAa3mD,EAAI4mD,GACzCM,EAAK70C,EAAS/W,KAAKyoD,IAAK0C,EAAW7kC,EAAI8kC,GAAcprD,KAAKyoD,IAAK4C,EAAa3mD,EAAI4mD,EAEpFp0C,GAAOxN,IAAKgiD,EAAIC,EAAIC,GAAKrW,YAEzBiW,EAAU5B,OAAQvkC,EAAOqmC,EAAIC,EAAIC,GACjC3mC,EAAQ2kC,OAAQvkC,EAAOnO,EAAOpY,EAAGoY,EAAOnY,EAAGmY,EAAO1V,GAClD0jB,EAAI2kC,MAAOxkC,EAAOiB,EAAG,EAAI5hB,GAEzB+mD,EAAYnjD,KAAM+c,GAElBA,IAIDlb,EAAS7B,KAAMmjD,GAMhB,IAAM,GAFFzmC,MAEMjmB,EAAI,EAAOgnB,EAAJhnB,EAAoBA,IAEpC,IAAM,GAAID,GAAI,EAAOgnB,EAAJhnB,EAAmBA,IAAO,CAE1C,GAAI8mD,GAAKz7C,EAAUpL,GAAKD,EAAI,GACxB+mD,EAAK17C,EAAUpL,GAAKD,GACpBgnD,EAAK37C,EAAUpL,EAAI,GAAKD,GACxB+sD,EAAK1hD,EAAUpL,EAAI,GAAKD,EAAI,IAErB,IAANC,GAAWssD,EAAa,IAAIrmC,EAAQ1c,KAAMs9C,EAAIC,EAAIgG,IAClD9sD,IAAMgnB,EAAiB,GAAKwlC,EAAWvrD,KAAKylD,KAAKzgC,EAAQ1c,KAAMu9C,EAAIC,EAAI+F,GAM9E7uD,KAAKgrB,SAAU,IAAMwjC,EAAUlqD,MAAQ,MAAQiiB,GAAkBF,IAAmB2B,EAAS,IAC7FhoB,KAAKirB,aAAc,WAAYujC,GAC/BxuD,KAAKirB,aAAc,SAAUhD,GAC7BjoB,KAAKirB,aAAc,KAAM/C,GAEzBloB,KAAKsnB,eAAiB,GAAIzN,IAAQ,GAAIlU,GAAWoU,GAWlD,QAAS+0C,IAAgB/0C,EAAQ+O,EAAeC,EAAgBolC,EAAUC,EAAWC,EAAYC,GAEhGxnC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,iBAEZxC,KAAKmY,YACJ4B,OAAQA,EACR+O,cAAeA,EACfC,eAAgBA,EAChBolC,SAAUA,EACVC,UAAWA,EACXC,WAAYA,EACZC,YAAaA,GAGdtuD,KAAKitD,mBAAoB,GAAIiB,IAAsBn0C,EAAQ+O,EAAeC,EAAgBolC,EAAUC,EAAWC,EAAYC,IAW5H,QAASS,IAAoBC,EAAaC,EAAaC,EAAeC,EAAad,EAAYC,GAE9FlmC,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,qBAEZxC,KAAKmY,YACJ62C,YAAaA,EACbC,YAAaA,EACbC,cAAeA,EACfC,YAAaA,EACbd,WAAYA,EACZC,YAAaA,GAGdU,EAAcA,GAAe,GAC7BC,EAAcA,GAAe,GAE7BZ,EAA4BjrD,SAAfirD,EAA2BA,EAAa,EACrDC,EAA8BlrD,SAAhBkrD,EAA4BA,EAAwB,EAAVtrD,KAAKylD,GAE7DyG,EAAkC9rD,SAAlB8rD,EAA8BlsD,KAAK8J,IAAK,EAAGoiD,GAAkB,EAC7EC,EAA8B/rD,SAAhB+rD,EAA4BnsD,KAAK8J,IAAK,EAAGqiD,GAAgB,CAGvE,IAUgCC,GAK5Bn8C,EAAG/L,EAfH4jB,GAAgBokC,EAAgB,IAAQC,EAAc,GACtDpkC,EAAamkC,EAAgBC,EAAc,EAAI,EAG/CnnC,EAAU,GAAIzC,IAAiB,IAAMwF,EAAa,MAAQvE,YAAcnZ,aAAe0d,GAAe,GACtG5d,EAAW,GAAIoY,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACrE7C,EAAU,GAAI1C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACpE5C,EAAM,GAAI3C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GAGhEzC,EAAQ,EAAG8jC,EAAc,EACzBpyC,EAASi1C,EACTK,GAAiBJ,EAAcD,GAAgBG,EAC/C9/C,EAAS,GAAI1J,GACb4J,EAAK,GAAI1N,EAOb,KAAMoR,EAAI,EAAQk8C,GAALl8C,EAAkBA,IAAO,CAErC,IAAM/L,EAAI,EAAQgoD,GAALhoD,EAAoBA,IAEhCkoD,EAAUf,EAAannD,EAAIgoD,EAAgBZ,EAG3Cj/C,EAAOvN,EAAIiY,EAAS/W,KAAKg1C,IAAKoX,GAC9B//C,EAAOtN,EAAIgY,EAAS/W,KAAKyoD,IAAK2D,GAC9BjiD,EAASy/C,OAAQvkC,EAAOhZ,EAAOvN,EAAGuN,EAAOtN,EAAGsN,EAAO7K,GAGnDyjB,EAAQ2kC,OAAQvkC,EAAO,EAAG,EAAG,GAG7B9Y,EAAGzN,GAAMuN,EAAOvN,EAAImtD,EAAc,GAAM,EACxC1/C,EAAGxN,GAAMsN,EAAOtN,EAAIktD,EAAc,GAAM,EACxC/mC,EAAI2kC,MAAOxkC,EAAO9Y,EAAGzN,EAAGyN,EAAGxN,GAG3BsmB,GAKDtO,IAAUs1C,EAMX,IAAMp8C,EAAI,EAAOk8C,EAAJl8C,EAAiBA,IAAO,CAEpC,GAAIq8C,GAAoBr8C,GAAMi8C,EAAgB,EAE9C,KAAMhoD,EAAI,EAAOgoD,EAAJhoD,EAAmBA,IAAO,CAEtCkoD,EAAUloD,EAAIooD,CAGd,IAAIv6C,GAAIq6C,EACJ/mD,EAAI+mD,EAAUF,EAAgB,EAC9B5qC,EAAI8qC,EAAUF,EAAgB,EAC9B/lC,EAAIimC,EAAU,CAGlBpnC,GAAQ8kC,KAAMX,EAAap3C,GAAKo3C,IAChCnkC,EAAQ8kC,KAAMX,EAAa9jD,GAAK8jD,IAChCnkC,EAAQ8kC,KAAMX,EAAa7nC,GAAK6nC,IAGhCnkC,EAAQ8kC,KAAMX,EAAap3C,GAAKo3C,IAChCnkC,EAAQ8kC,KAAMX,EAAa7nC,GAAK6nC,IAChCnkC,EAAQ8kC,KAAMX,EAAahjC,GAAKgjC,KAQlCnsD,KAAKgrB,SAAUhD,GACfhoB,KAAKirB,aAAc,WAAY9d,GAC/BnN,KAAKirB,aAAc,SAAUhD,GAC7BjoB,KAAKirB,aAAc,KAAM/C,GAW1B,QAASqnC,IAAcP,EAAaC,EAAaC,EAAeC,EAAad,EAAYC,GAExFxnC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,eAEZxC,KAAKmY,YACJ62C,YAAaA,EACbC,YAAaA,EACbC,cAAeA,EACfC,YAAaA,EACbd,WAAYA,EACZC,YAAaA,GAGdtuD,KAAKitD,mBAAoB,GAAI8B,IAAoBC,EAAaC,EAAaC,EAAeC,EAAad,EAAYC,IAYpH,QAASkB,IAAenvD,EAAOC,EAAQwoB,EAAeC,GAErDjC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,gBAEZxC,KAAKmY,YACJ9X,MAAOA,EACPC,OAAQA,EACRwoB,cAAeA,EACfC,eAAgBA,GAGjB/oB,KAAKitD,mBAAoB,GAAI/hC,IAAqB7qB,EAAOC,EAAQwoB,EAAeC,IAkBjF,QAAS0mC,IAAqBnR,EAAQ+L,EAAU8D,EAAUC,GAEzDhmC,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,sBAEZxC,KAAKmY,YACJmmC,OAAQA,EACR+L,SAAUA,EACV8D,SAAUA,EACVC,UAAWA,GAGZ/D,EAAWrnD,KAAK6nB,MAAOw/B,IAAc,GACrC8D,EAAWA,GAAY,EACvBC,EAAYA,GAAuB,EAAVprD,KAAKylD,GAG9B2F,EAAY5sD,EAAQwB,KAAK0sD,MAAOtB,EAAW,EAAa,EAAVprD,KAAKylD,GAGnD,IASgCkH,GAI5BzoD,EAAG+L,EAbH6X,GAAgBu/B,EAAW,GAAM/L,EAAOt4C,OACxC+kB,EAAas/B,EAAW/L,EAAOt4C,OAAS,EAAI,EAG5CgiB,EAAU,GAAIzC,IAAiB,IAAMwF,EAAa,MAAQvE,YAAcnZ,aAAe0d,GAAe,GACtG5d,EAAW,GAAIoY,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACrE5C,EAAM,GAAI3C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GAGhEzC,EAAQ,EAAG8jC,EAAc,EACzByD,EAAkB,EAAMvF,EACxBh7C,EAAS,GAAI1J,GACb4J,EAAK,GAAI1N,EAKb,KAAMqF,EAAI,EAAQmjD,GAALnjD,EAAeA,IAAO,CAElC,GAAI2oD,GAAM1B,EAAWjnD,EAAI0oD,EAAkBxB,EAEvC3C,EAAMzoD,KAAKyoD,IAAKoE,GAChB7X,EAAMh1C,KAAKg1C,IAAK6X,EAEpB,KAAM58C,EAAI,EAAGA,GAAOqrC,EAAOt4C,OAAS,EAAKiN,IAGxC5D,EAAOvN,EAAIw8C,EAAQrrC,GAAInR,EAAI2pD,EAC3Bp8C,EAAOtN,EAAIu8C,EAAQrrC,GAAIlR,EACvBsN,EAAO7K,EAAI85C,EAAQrrC,GAAInR,EAAIk2C,EAC3B7qC,EAASy/C,OAAQvkC,EAAOhZ,EAAOvN,EAAGuN,EAAOtN,EAAGsN,EAAO7K,GAGnD+K,EAAGzN,EAAIoF,EAAImjD,EACX96C,EAAGxN,EAAIkR,GAAMqrC,EAAOt4C,OAAS,GAC7BkiB,EAAI2kC,MAAOxkC,EAAO9Y,EAAGzN,EAAGyN,EAAGxN,GAG3BsmB,IAQF,IAAMnhB,EAAI,EAAOmjD,EAAJnjD,EAAcA,IAE1B,IAAM+L,EAAI,EAAGA,EAAMqrC,EAAOt4C,OAAS,EAAKiN,IAAO,CAE9C08C,EAAO18C,EAAI/L,EAAIo3C,EAAOt4C,MAGtB,IAAI+O,GAAI46C,EACJtnD,EAAIsnD,EAAOrR,EAAOt4C,OAClBse,EAAIqrC,EAAOrR,EAAOt4C,OAAS,EAC3BmjB,EAAIwmC,EAAO,CAGf3nC,GAAQ8kC,KAAMX,EAAap3C,GAAKo3C,IAChCnkC,EAAQ8kC,KAAMX,EAAa9jD,GAAK8jD,IAChCnkC,EAAQ8kC,KAAMX,EAAahjC,GAAKgjC,IAGhCnkC,EAAQ8kC,KAAMX,EAAa9jD,GAAK8jD,IAChCnkC,EAAQ8kC,KAAMX,EAAa7nC,GAAK6nC,IAChCnkC,EAAQ8kC,KAAMX,EAAahjC,GAAKgjC,IAmBlC,GAXAnsD,KAAKgrB,SAAUhD,GACfhoB,KAAKirB,aAAc,WAAY9d,GAC/BnN,KAAKirB,aAAc,KAAM/C,GAIzBloB,KAAKmoD,uBAKDiG,IAAwB,EAAVprD,KAAKylD,GAAS,CAE/B,GAAIxgC,GAAUjoB,KAAKoP,WAAW8K,OAAOxT,MACjCopD,EAAK,GAAInqD,GACToqD,EAAK,GAAIpqD,GACTmB,EAAI,GAAInB,EAKZ,KAFAgqD,EAAOtF,EAAW/L,EAAOt4C,OAAS,EAE7BkB,EAAI,EAAG+L,EAAI,EAAG/L,EAAIo3C,EAAOt4C,OAAQkB,IAAM+L,GAAK,EAGhD68C,EAAGhuD,EAAImmB,EAAShV,EAAI,GACpB68C,EAAG/tD,EAAIkmB,EAAShV,EAAI,GACpB68C,EAAGtrD,EAAIyjB,EAAShV,EAAI,GAGpB88C,EAAGjuD,EAAImmB,EAAS0nC,EAAO18C,EAAI,GAC3B88C,EAAGhuD,EAAIkmB,EAAS0nC,EAAO18C,EAAI,GAC3B88C,EAAGvrD,EAAIyjB,EAAS0nC,EAAO18C,EAAI,GAG3BnM,EAAE4lD,WAAYoD,EAAIC,GAAKxX,YAGvBtwB,EAAShV,EAAI,GAAMgV,EAAS0nC,EAAO18C,EAAI,GAAMnM,EAAEhF,EAC/CmmB,EAAShV,EAAI,GAAMgV,EAAS0nC,EAAO18C,EAAI,GAAMnM,EAAE/E,EAC/CkmB,EAAShV,EAAI,GAAMgV,EAAS0nC,EAAO18C,EAAI,GAAMnM,EAAEtC,GAwBlD,QAASwrD,IAAe1R,EAAQ+L,EAAU8D,EAAUC,GAEnDtnC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,gBAEZxC,KAAKmY,YACJmmC,OAAQA,EACR+L,SAAUA,EACV8D,SAAUA,EACVC,UAAWA,GAGZpuD,KAAKitD,mBAAoB,GAAIwC,IAAqBnR,EAAQ+L,EAAU8D,EAAUC,IAC9EpuD,KAAK8pD,gBAuBN,QAASmG,IAAe3C,EAAQ5oD,GAE/BoiB,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,gBAEPkc,MAAMgG,QAAS4oC,MAAa,IAAQA,GAAWA,IAEpDttD,KAAKutD,aAAcD,EAAQ5oD,GAE3B1E,KAAKkoD,qBA8GN,QAASgI,IAAe70C,EAAU80C,GAUjC,QAAS3J,GAAczxC,EAAG1M,GAEzB,MAAO0M,GAAI1M,EAVZ+f,GAAejjB,KAAMnF,MAErBmwD,EAAsC/sD,SAAnB+sD,EAAiCA,EAAiB,CAErE,IAYIC,GAZAC,EAAertD,KAAKg1C,IAAKx2C,EAAQwB,KAAKstD,QAAUH,GAEhD1J,GAAS,EAAG,GAAKrU,KAQjBsU,GAAS,IAAK,IAAK,IAIjBrrC,IAAYA,EAASS,kBAE1Bs0C,EAAY,GAAItpC,IAChBspC,EAAUnD,mBAAoB5xC,IAI9B+0C,EAAY/0C,EAASuB,QAItBwzC,EAAUtG,gBACVsG,EAAUlI,oBAKV,KAAM,GAHF/6C,GAAWijD,EAAUjjD,SACrBC,EAAQgjD,EAAUhjD,MAEZlG,EAAI,EAAGyK,EAAIvE,EAAMpH,OAAY2L,EAAJzK,EAAOA,IAIzC,IAAM,GAFF4Z,GAAO1T,EAAOlG,GAER+L,EAAI,EAAO,EAAJA,EAAOA,IAAO,CAE9BwzC,EAAM,GAAM3lC,EAAM4lC,EAAMzzC,IACxBwzC,EAAM,GAAM3lC,EAAM4lC,GAAQzzC,EAAI,GAAM,IACpCwzC,EAAK5wC,KAAM2wC,EAEX,IAAIK,GAAMJ,EAAKK,UAEM1jD,UAAhBgvC,EAAMyU,GAEVzU,EAAMyU,IAAU0J,MAAO9J,EAAM,GAAK+J,MAAO/J,EAAM,GAAKgK,MAAOvpD,EAAGwpD,MAAOttD,QAIrEgvC,EAAMyU,GAAM6J,MAAQxpD,EAQvB,GAAI6/C,KAEJ,KAAM,GAAIF,KAAOzU,GAAO,CAEvB,GAAIlpB,GAAIkpB,EAAMyU,EAEd,IAAiBzjD,SAAZ8lB,EAAEwnC,OAAuBtjD,EAAO8b,EAAEunC,OAAQv2C,OAAOy2C,IAAKvjD,EAAO8b,EAAEwnC,OAAQx2C,SAAYm2C,EAAe,CAEtG,GAAIhhD,GAASlC,EAAU+b,EAAEqnC,MACzBxJ,GAAOz7C,KAAM+D,EAAOvN,GACpBilD,EAAOz7C,KAAM+D,EAAOtN,GACpBglD,EAAOz7C,KAAM+D,EAAO7K,GAEpB6K,EAASlC,EAAU+b,EAAEsnC,OACrBzJ,EAAOz7C,KAAM+D,EAAOvN,GACpBilD,EAAOz7C,KAAM+D,EAAOtN,GACpBglD,EAAOz7C,KAAM+D,EAAO7K,IAMtBxE,KAAKirB,aAAc,WAAY,GAAI1F,IAAiB,GAAIzf,cAAcihD,GAAU,IAWjF,QAAS6J,IAAwBC,EAAWC,EAAcxwD,EAAQgqD,EAAgBvhC,EAAgBgoC,EAAW1C,EAAYC,GAiFxH,QAASrlC,KAER,GAAI3kB,IAAUgmD,EAAiB,IAAQvhC,EAAiB,EAQxD,OANKgoC,MAAc,IAElBzsD,IAAagmD,EAAiB,GAAM0G,EAAY1G,EAAiB0G,GAI3D1sD,EAIR,QAAS8kB,KAER,GAAI9kB,GAAQgmD,EAAiBvhC,EAAiB,EAAI,CAQlD,OANKgoC,MAAc,IAElBzsD,GAASgmD,EAAiB0G,EAAQ,GAI5B1sD,EAIR,QAAS2sD,KAER,GAAInvD,GAAGC,EACHmY,EAAS,GAAIvU,GACb0J,EAAS,GAAI1J,GAEbwkB,EAAa,EAGb+mC,GAAUJ,EAAeD,GAAcvwD,CAI3C,KAAMyB,EAAI,EAAQgnB,GAALhnB,EAAqBA,IAAO,CAExC,GAAIovD,MAEAzpD,EAAI3F,EAAIgnB,EAGRhP,EAASrS,GAAMopD,EAAeD,GAAcA,CAEhD,KAAM/uD,EAAI,EAAQwoD,GAALxoD,EAAqBA,IAAO,CAExC,GAAIwnB,GAAIxnB,EAAIwoD,EAER8G,EAAQ9nC,EAAIglC,EAAcD,EAE1BgD,EAAWruD,KAAKyoD,IAAK2F,GACrBE,EAAWtuD,KAAKg1C,IAAKoZ,EAGzB/hD,GAAOvN,EAAIiY,EAASs3C,EACpBhiD,EAAOtN,GAAM2F,EAAIpH,EAASixD,EAC1BliD,EAAO7K,EAAIuV,EAASu3C,EACpBnkD,EAASy/C,OAAQvkC,EAAOhZ,EAAOvN,EAAGuN,EAAOtN,EAAGsN,EAAO7K,GAGnD0V,EAAOxN,IAAK2kD,EAAUH,EAAOI,GAAW/Y,YACxCtwB,EAAQ2kC,OAAQvkC,EAAOnO,EAAOpY,EAAGoY,EAAOnY,EAAGmY,EAAO1V,GAGlD0jB,EAAI2kC,MAAOxkC,EAAOiB,EAAG,EAAI5hB,GAGzBypD,EAAS7lD,KAAM+c,GAGfA,IAKDmpC,EAAWlmD,KAAM6lD,GAMlB,IAAMrvD,EAAI,EAAOwoD,EAAJxoD,EAAoBA,IAEhC,IAAMC,EAAI,EAAOgnB,EAAJhnB,EAAoBA,IAAO,CAGvC,GAAI0vD,GAAKD,EAAYzvD,GAAKD,GACtB4vD,EAAKF,EAAYzvD,EAAI,GAAKD,GAC1B6vD,EAAKH,EAAYzvD,EAAI,GAAKD,EAAI,GAC9ByqC,EAAKilB,EAAYzvD,GAAKD,EAAI,EAG9BkmB,GAAQ8kC,KAAMX,EAAasF,GAAMtF,IACjCnkC,EAAQ8kC,KAAMX,EAAauF,GAAMvF,IACjCnkC,EAAQ8kC,KAAMX,EAAa5f,GAAM4f,IAGjCnkC,EAAQ8kC,KAAMX,EAAauF,GAAMvF,IACjCnkC,EAAQ8kC,KAAMX,EAAawF,GAAMxF,IACjCnkC,EAAQ8kC,KAAMX,EAAa5f,GAAM4f,IAGjChiC,GAAc,EAOhBtN,EAAM8N,SAAUC,EAAYT,EAAY,GAGxCS,GAAcT,EAIf,QAASynC,GAAaxlC,GAErB,GAAItqB,GAAG+vD,EAAkBC,EAErBviD,EAAK,GAAI1N,GACTwN,EAAS,GAAI1J,GAEbwkB,EAAa,EAEbpQ,EAAWqS,KAAQ,EAASykC,EAAYC,EACxCiB,EAAS3lC,KAAQ,EAAS,EAAI,EASlC,KANAylC,EAAmBxpC,EAMbvmB,EAAI,EAAQwoD,GAALxoD,EAAqBA,IAGjCqL,EAASy/C,OAAQvkC,EAAO,EAAGkpC,EAAaQ,EAAM,GAG9C9pC,EAAQ2kC,OAAQvkC,EAAO,EAAG0pC,EAAM,GAGhCxiD,EAAGzN,EAAI,GACPyN,EAAGxN,EAAI,GAEPmmB,EAAI2kC,MAAOxkC,EAAO9Y,EAAGzN,EAAGyN,EAAGxN,GAG3BsmB,GASD,KAJAypC,EAAiBzpC,EAIXvmB,EAAI,EAAQwoD,GAALxoD,EAAqBA,IAAO,CAExC,GAAIwnB,GAAIxnB,EAAIwoD,EACR8G,EAAQ9nC,EAAIglC,EAAcD,EAE1BiD,EAAWtuD,KAAKg1C,IAAKoZ,GACrBC,EAAWruD,KAAKyoD,IAAK2F,EAGzB/hD,GAAOvN,EAAIiY,EAASs3C,EACpBhiD,EAAOtN,EAAIwvD,EAAaQ,EACxB1iD,EAAO7K,EAAIuV,EAASu3C,EACpBnkD,EAASy/C,OAAQvkC,EAAOhZ,EAAOvN,EAAGuN,EAAOtN,EAAGsN,EAAO7K,GAGnDyjB,EAAQ2kC,OAAQvkC,EAAO,EAAG0pC,EAAM,GAGhCxiD,EAAGzN,EAAiB,GAAXwvD,EAAmB,GAC5B/hD,EAAGxN,EAAiB,GAAXsvD,EAAiBU,EAAS,GACnC7pC,EAAI2kC,MAAOxkC,EAAO9Y,EAAGzN,EAAGyN,EAAGxN,GAG3BsmB,IAMD,IAAMvmB,EAAI,EAAOwoD,EAAJxoD,EAAoBA,IAAO,CAEvC,GAAIwiB,GAAIutC,EAAmB/vD,EACvBoF,EAAI4qD,EAAiBhwD,CAEpBsqB,MAAQ,GAGZpE,EAAQ8kC,KAAMX,EAAajlD,GAAKilD,IAChCnkC,EAAQ8kC,KAAMX,EAAajlD,EAAI,GAAKilD,IACpCnkC,EAAQ8kC,KAAMX,EAAa7nC,GAAK6nC,MAKhCnkC,EAAQ8kC,KAAMX,EAAajlD,EAAI,GAAKilD,IACpCnkC,EAAQ8kC,KAAMX,EAAajlD,GAAKilD,IAChCnkC,EAAQ8kC,KAAMX,EAAa7nC,GAAK6nC,KAKjChiC,GAAc,EAKftN,EAAM8N,SAAUC,EAAYT,EAAYiC,KAAQ,EAAO,EAAI,GAG3DxB,GAAcT,EA/Sf/B,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,yBAEZxC,KAAKmY,YACJ04C,UAAWA,EACXC,aAAcA,EACdxwD,OAAQA,EACRgqD,eAAgBA,EAChBvhC,eAAgBA,EAChBgoC,UAAWA,EACX1C,WAAYA,EACZC,YAAaA,EAGd,IAAIzxC,GAAQ7c,IAEZ6wD,GAA0BztD,SAAdytD,EAA0BA,EAAY,GAClDC,EAAgC1tD,SAAjB0tD,EAA6BA,EAAe,GAC3DxwD,EAAoB8C,SAAX9C,EAAuBA,EAAS,IAEzCgqD,EAAiBtnD,KAAK6nB,MAAOy/B,IAAoB,EACjDvhC,EAAiB/lB,KAAK6nB,MAAO9B,IAAoB,EAEjDgoC,EAA0B3tD,SAAd2tD,EAA0BA,GAAY,EAClD1C,EAA4BjrD,SAAfirD,EAA2BA,EAAa,EACrDC,EAA8BlrD,SAAhBkrD,EAA4BA,EAAc,EAAMtrD,KAAKylD,EAInE,IAAIuI,GAAQ,CAEPD,MAAc,IAEbF,EAAY,GAAIG,IAChBF,EAAe,GAAIE,IAIzB,IAAIlmC,GAAc7B,IACd8B,EAAa3B,IAIbpB,EAAU,GAAIzC,IAAiB,IAAMwF,EAAa,MAAQvE,YAAcnZ,aAAe0d,GAAc,GACrG5d,EAAW,GAAIoY,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACrE7C,EAAU,GAAI1C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GACpE5C,EAAM,GAAI3C,IAAiB,GAAIzf,cAA4B,EAAdglB,GAAmB,GAIhEzC,EAAQ,EACR8jC,EAAc,EACdqF,KACAD,EAAajxD,EAAS,EAGtBsqB,EAAa,CAIjBqmC,KAEKF,KAAc,IAEbF,EAAY,GAAIe,GAAa,GAC7Bd,EAAe,GAAIc,GAAa,IAMtC5xD,KAAKgrB,SAAUhD,GACfhoB,KAAKirB,aAAc,WAAY9d,GAC/BnN,KAAKirB,aAAc,SAAUhD,GAC7BjoB,KAAKirB,aAAc,KAAM/C,GAiP1B,QAAS8pC,IAAkBnB,EAAWC,EAAcxwD,EAAQgqD,EAAgBvhC,EAAgBgoC,EAAW1C,EAAYC,GAElHxnC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,mBAEZxC,KAAKmY,YACJ04C,UAAWA,EACXC,aAAcA,EACdxwD,OAAQA,EACRgqD,eAAgBA,EAChBvhC,eAAgBA,EAChBgoC,UAAWA,EACX1C,WAAYA,EACZC,YAAaA,GAGdtuD,KAAKitD,mBAAoB,GAAI2D,IAAwBC,EAAWC,EAAcxwD,EAAQgqD,EAAgBvhC,EAAgBgoC,EAAW1C,EAAYC,IAC7ItuD,KAAK8pD,gBAWN,QAASmI,IACRl4C,EAAQzZ,EACRgqD,EAAgBvhC,EAChBgoC,EAAW1C,EAAYC,GAEvB0D,GAAiB7sD,KAAMnF,KACtB,EAAG+Z,EAAQzZ,EACXgqD,EAAgBvhC,EAChBgoC,EAAW1C,EAAYC,GAExBtuD,KAAKwC,KAAO,eAEZxC,KAAKmY,YACJ4B,OAAQA,EACRzZ,OAAQA,EACRgqD,eAAgBA,EAChBvhC,eAAgBA,EAChBgoC,UAAWA,EACX1C,WAAYA,EACZC,YAAaA,GAYf,QAAS4D,IACRn4C,EAAQzZ,EACRgqD,EAAgBvhC,EAChBgoC,EAAW1C,EAAYC,GAEvBsC,GAAuBzrD,KAAMnF,KAC5B,EAAG+Z,EAAQzZ,EACXgqD,EAAgBvhC,EAChBgoC,EAAW1C,EAAYC,GAExBtuD,KAAKwC,KAAO,qBAEZxC,KAAKmY,YACJ4B,OAAQA,EACRzZ,OAAQA,EACRgqD,eAAgBA,EAChBvhC,eAAgBA,EAChBslC,WAAYA,EACZC,YAAaA,GAYf,QAAS6D,IAAsBp4C,EAAQswC,EAAUgE,EAAYC,GAE5DlmC,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,uBAEZxC,KAAKmY,YACJ4B,OAAQA,EACRswC,SAAUA,EACVgE,WAAYA,EACZC,YAAaA,GAGdv0C,EAASA,GAAU,GACnBswC,EAAwBjnD,SAAbinD,EAAyBrnD,KAAK8J,IAAK,EAAGu9C,GAAa,EAE9DgE,EAA4BjrD,SAAfirD,EAA2BA,EAAa,EACrDC,EAA8BlrD,SAAhBkrD,EAA4BA,EAAwB,EAAVtrD,KAAKylD,EAE7D,IAAIt7C,GAAWk9C,EAAW,EAEtBmE,EAAY,GAAI1oD,cAAyB,EAAXqH,GAC9B8a,EAAU,GAAIniB,cAAyB,EAAXqH,GAC5B+a,EAAM,GAAIpiB,cAAyB,EAAXqH,EAG5B8a,GAAS,GAAM,EACfC,EAAK,GAAM,GACXA,EAAK,GAAM,EAEX,KAAM,GAAIkqC,GAAI,EAAGlrD,EAAI,EAAGmrD,EAAK,EAAShI,GAAL+H,EAAeA,IAAMlrD,GAAK,EAAGmrD,GAAM,EAAI,CAEvE,GAAIjD,GAAUf,EAAa+D,EAAI/H,EAAWiE,CAE1CE,GAAWtnD,GAAM6S,EAAS/W,KAAKg1C,IAAKoX,GACpCZ,EAAWtnD,EAAI,GAAM6S,EAAS/W,KAAKyoD,IAAK2D,GAExCnnC,EAAS/gB,EAAI,GAAM,EAEnBghB,EAAKmqC,IAAS7D,EAAWtnD,GAAM6S,EAAS,GAAM,EAC9CmO,EAAKmqC,EAAK,IAAQ7D,EAAWtnD,EAAI,GAAM6S,EAAS,GAAM,EAMvD,IAAM,GAFFiO,MAEM9gB,EAAI,EAAQmjD,GAALnjD,EAAeA,IAE/B8gB,EAAQ1c,KAAMpE,EAAGA,EAAI,EAAG,EAIzBlH,MAAKgrB,SAAU,GAAIzF,IAAiB,GAAIlY,aAAa2a,GAAW,IAChEhoB,KAAKirB,aAAc,WAAY,GAAI1F,IAAiBipC,EAAW,IAC/DxuD,KAAKirB,aAAc,SAAU,GAAI1F,IAAiB0C,EAAS,IAC3DjoB,KAAKirB,aAAc,KAAM,GAAI1F,IAAiB2C,EAAK,IAEnDloB,KAAKsnB,eAAiB,GAAIzN,IAAQ,GAAIlU,GAAWoU,GAWlD,QAASu4C,IAAgBv4C,EAAQswC,EAAUgE,EAAYC,GAEtDxnC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,iBAEZxC,KAAKmY,YACJ4B,OAAQA,EACRswC,SAAUA,EACVgE,WAAYA,EACZC,YAAaA,GAGdtuD,KAAKitD,mBAAoB,GAAIkF,IAAsBp4C,EAAQswC,EAAUgE,EAAYC,IAYlF,QAASiE,IAAalyD,EAAOC,EAAQuoB,EAAOC,EAAeC,EAAgBC,GAE1ElC,GAAS3hB,KAAMnF,MAEfA,KAAKwC,KAAO,cAEZxC,KAAKmY,YACJ9X,MAAOA,EACPC,OAAQA,EACRuoB,MAAOA,EACPC,cAAeA,EACfC,eAAgBA,EAChBC,cAAeA,GAGhBhpB,KAAKitD,mBAAoB,GAAIrkC,IAAmBvoB,EAAOC,EAAQuoB,EAAOC,EAAeC,EAAgBC,IACrGhpB,KAAK8pD,gBAgDN,QAAS0I,MAERt6C,EAAe/S,KAAMnF,MACpBwP,SAAUhO,EAAQ2d,cAAcszC,OAC/BC,GAAa,QAEZ/iD,SAAW9M,MAAO,MAGpBmM,aAAckiB,GAAa,YAC3BhiB,eAAgBgiB,GAAa,cAG9BlxB,KAAKsW,QAAS,EACdtW,KAAK8W,aAAc,EAEnBnU,OAAO6gB,iBAAkBxjB,MACxB2P,SACC8T,YAAY,EACZiJ,IAAK,WACJ,MAAO1sB,MAAKwP,SAASG,QAAQ9M,OAE9B6J,IAAK,SAAW7J,GACf7C,KAAKwP,SAASG,QAAQ9M,MAAQA,MAgBlC,QAAS8vD,IAAmBx6C,GAE3BD,EAAe/S,KAAMnF,KAAMmY,GAE3BnY,KAAKwC,KAAO,oBAab,QAASowD,IAAelxC,GAEvB1hB,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKwC,KAAO,gBAEZxC,KAAK0hB,UAAYA,YAAqBhD,OAAQgD,KAE9C1hB,KAAK+V,SAAU,EA6GhB,QAASghB,IAAsB5e,GAE9B/B,EAASjR,KAAMnF,MAEfA,KAAKoY,SAAYy6C,SAAY,IAE7B7yD,KAAKwC,KAAO,uBAEZxC,KAAK4P,MAAQ,GAAInD,GAAO,UACxBzM,KAAK22C,UAAY,GACjB32C,KAAK42C,UAAY,GAEjB52C,KAAKwG,IAAM,KAEXxG,KAAKkzB,SAAW,KAChBlzB,KAAKs2C,kBAAoB,EAEzBt2C,KAAK6kB,MAAQ,KACb7kB,KAAK8kB,eAAiB,EAEtB9kB,KAAK21C,SAAW,GAAIlpC,GAAO,GAC3BzM,KAAK41C,kBAAoB,EACzB51C,KAAKmzB,YAAc,KAEnBnzB,KAAK+vB,QAAU,KACf/vB,KAAKy2C,UAAY,EAEjBz2C,KAAKgwB,UAAY,KACjBhwB,KAAK02C,YAAc,GAAI70C,GAAS,EAAG,GAEnC7B,KAAKyZ,gBAAkB,KACvBzZ,KAAK0Z,kBAAoB,EACzB1Z,KAAK2Z,iBAAmB,EAExB3Z,KAAKozB,aAAe,KAEpBpzB,KAAKqzB,aAAe,KAEpBrzB,KAAKwZ,SAAW,KAEhBxZ,KAAKglB,OAAS,KACdhlB,KAAK62C,gBAAkB,EAEvB72C,KAAKolB,gBAAkB,IAEvBplB,KAAKsY,WAAY,EACjBtY,KAAKuY,mBAAqB,EAC1BvY,KAAKqlB,iBAAmB,QACxBrlB,KAAKslB,kBAAoB,QAEzBtlB,KAAKyY,UAAW,EAChBzY,KAAK0Y,cAAe,EACpB1Y,KAAK2Y,cAAe,EAEpB3Y,KAAKoZ,UAAWjB,GAyEjB,QAAS6e,IAAsB7e,GAE9B4e,GAAqB5xB,KAAMnF,MAE3BA,KAAKoY,SAAY06C,SAAY,IAE7B9yD,KAAKwC,KAAO,uBAEZxC,KAAKmlB,aAAe,GAEpBnlB,KAAK82C,UAAY,EACjB92C,KAAK+2C,mBAAqB,EAE1B/2C,KAAKoZ,UAAWjB,GA0EjB,QAAS2e,IAAmB3e,GAE3B/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,oBAEZxC,KAAK4P,MAAQ,GAAInD,GAAO,UACxBzM,KAAKu2C,SAAW,GAAI9pC,GAAO,SAC3BzM,KAAKw2C,UAAY,GAEjBx2C,KAAKwG,IAAM,KAEXxG,KAAKkzB,SAAW,KAChBlzB,KAAKs2C,kBAAoB,EAEzBt2C,KAAK6kB,MAAQ,KACb7kB,KAAK8kB,eAAiB,EAEtB9kB,KAAK21C,SAAW,GAAIlpC,GAAO,GAC3BzM,KAAK41C,kBAAoB,EACzB51C,KAAKmzB,YAAc,KAEnBnzB,KAAK+vB,QAAU,KACf/vB,KAAKy2C,UAAY,EAEjBz2C,KAAKgwB,UAAY,KACjBhwB,KAAK02C,YAAc,GAAI70C,GAAS,EAAG,GAEnC7B,KAAKyZ,gBAAkB,KACvBzZ,KAAK0Z,kBAAoB,EACzB1Z,KAAK2Z,iBAAmB,EAExB3Z,KAAK+kB,YAAc,KAEnB/kB,KAAKwZ,SAAW,KAEhBxZ,KAAKglB,OAAS,KACdhlB,KAAKilB,QAAUC,GACfllB,KAAKmlB,aAAe,EACpBnlB,KAAKolB,gBAAkB,IAEvBplB,KAAKsY,WAAY,EACjBtY,KAAKuY,mBAAqB,EAC1BvY,KAAKqlB,iBAAmB,QACxBrlB,KAAKslB,kBAAoB,QAEzBtlB,KAAKyY,UAAW,EAChBzY,KAAK0Y,cAAe,EACpB1Y,KAAK2Y,cAAe,EAEpB3Y,KAAKoZ,UAAWjB,GAwEjB,QAASye,IAAoBze,GAE5B/B,EAASjR,KAAMnF,KAAMmY,GAErBnY,KAAKwC,KAAO,qBAEZxC,KAAKsY,WAAY,EACjBtY,KAAKuY,mBAAqB,EAE1BvY,KAAKsV,KAAM,EACXtV,KAAKsW,QAAS,EACdtW,KAAK0Y,cAAe,EAEpB1Y,KAAKoZ,UAAWjB,GA0DjB,QAAS0e,IAAqB1e,GAE7B/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,sBAEZxC,KAAK4P,MAAQ,GAAInD,GAAO,UAExBzM,KAAKwG,IAAM,KAEXxG,KAAKkzB,SAAW,KAChBlzB,KAAKs2C,kBAAoB,EAEzBt2C,KAAK6kB,MAAQ,KACb7kB,KAAK8kB,eAAiB,EAEtB9kB,KAAK21C,SAAW,GAAIlpC,GAAO,GAC3BzM,KAAK41C,kBAAoB,EACzB51C,KAAKmzB,YAAc,KAEnBnzB,KAAK+kB,YAAc,KAEnB/kB,KAAKwZ,SAAW,KAEhBxZ,KAAKglB,OAAS,KACdhlB,KAAKilB,QAAUC,GACfllB,KAAKmlB,aAAe,EACpBnlB,KAAKolB,gBAAkB,IAEvBplB,KAAKsY,WAAY,EACjBtY,KAAKuY,mBAAqB,EAC1BvY,KAAKqlB,iBAAmB,QACxBrlB,KAAKslB,kBAAoB,QAEzBtlB,KAAKyY,UAAW,EAChBzY,KAAK0Y,cAAe,EACpB1Y,KAAK2Y,cAAe,EAEpB3Y,KAAKoZ,UAAWjB,GAgEjB,QAAS+e,IAAoB/e,GAE5B/B,EAASjR,KAAMnF,MAEfA,KAAKwC,KAAO,qBAEZxC,KAAK4P,MAAQ,GAAInD,GAAO,UAExBzM,KAAKqY,UAAY,EAEjBrY,KAAK6P,MAAQ,EACb7P,KAAKi2C,SAAW,EAChBj2C,KAAKm2C,QAAU,EAEfn2C,KAAKsW,QAAS,EAEdtW,KAAKoZ,UAAWjB,GA8FjB,QAAS46C,IAAgBC,EAAQC,EAAYC,GAE5C,GAAIr2C,GAAQ7c,KAERmzD,GAAY,EAAOC,EAAc,EAAGC,EAAa,CAErDrzD,MAAKszD,QAAUlwD,OACfpD,KAAKgzD,OAASA,EACdhzD,KAAKizD,WAAaA,EAClBjzD,KAAKkzD,QAAUA,EAEflzD,KAAKuzD,UAAY,SAAWC,GAE3BH,IAEKF,KAAc,GAEK/vD,SAAlByZ,EAAMy2C,SAEVz2C,EAAMy2C,QAASE,EAAKJ,EAAaC,GAMnCF,GAAY,GAIbnzD,KAAKyzD,QAAU,SAAWD,GAEzBJ,IAE0BhwD,SAArByZ,EAAMo2C,YAEVp2C,EAAMo2C,WAAYO,EAAKJ,EAAaC,GAIhCD,IAAgBC,IAEpBF,GAAY,EAEU/vD,SAAjByZ,EAAMm2C,QAEVn2C,EAAMm2C,WAQThzD,KAAK0zD,UAAY,SAAWF,GAEJpwD,SAAlByZ,EAAMq2C,SAEVr2C,EAAMq2C,QAASM,IAclB,QAASG,IAAWC,GAEnB5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBA8H9D,QAASC,IAAyBF,GAEjC5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBAG7D7zD,KAAK+zD,QAAU,KAkIhB,QAASC,IAAqBJ,GAE7B5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBAG7D7zD,KAAK+zD,QAAU,KAiFhB,QAASE,IAAaL,GAErB5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBA0E9D,QAASK,IAAmBN,GAE3B5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBAkE9D,QAASM,IAAeP,GAEvB5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBAiE9D,QAASO,IAAOxkD,EAAOwnC,GAEtBt0B,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,QAEZxC,KAAK4P,MAAQ,GAAInD,GAAOmD,GACxB5P,KAAKo3C,UAA0Bh0C,SAAdg0C,EAA0BA,EAAY,EAEvDp3C,KAAK8jB,cAAgB1gB,OA+CtB,QAASixD,IAAiBvmC,EAAUC,EAAaqpB,GAEhDgd,GAAMjvD,KAAMnF,KAAM8tB,EAAUspB,GAE5Bp3C,KAAKwC,KAAO,kBAEZxC,KAAK0d,WAAata,OAElBpD,KAAK6T,SAAS3B,KAAM4Q,GAASQ,WAC7BtjB,KAAKs0D,eAELt0D,KAAK+tB,YAAc,GAAIthB,GAAOshB,GA0B/B,QAASwmC,IAAa5jD,GAErB3Q,KAAK2Q,OAASA,EAEd3Q,KAAK83C,KAAO,EACZ93C,KAAK+Z,OAAS,EAEd/Z,KAAKggB,QAAU,GAAIne,GAAS,IAAK,KAEjC7B,KAAKwG,IAAM,KACXxG,KAAK0gB,OAAS,GAAI9a,GA8CnB,QAAS4uD,MAERD,GAAYpvD,KAAMnF,KAAM,GAAIyrB,IAAmB,GAAI,EAAG,GAAK,MAmC5D,QAASgpC,IAAW7kD,EAAOwnC,EAAW1pB,EAAUuqB,EAAOC,EAAUrqB,GAEhEumC,GAAMjvD,KAAMnF,KAAM4P,EAAOwnC,GAEzBp3C,KAAKwC,KAAO,YAEZxC,KAAK6T,SAAS3B,KAAM4Q,GAASQ,WAC7BtjB,KAAKs0D,eAELt0D,KAAKmhB,OAAS,GAAI2B,IAElBngB,OAAOC,eAAgB5C,KAAM,SAC5B0sB,IAAK,WAGJ,MAAO1sB,MAAKo3C,UAAYp0C,KAAKylD,IAE9B/7C,IAAK,SAAWgoD,GAGf10D,KAAKo3C,UAAYsd,EAAQ1xD,KAAKylD,MAIhCzoD,KAAK0tB,SAA0BtqB,SAAbsqB,EAA2BA,EAAW,EACxD1tB,KAAKi4C,MAAoB70C,SAAV60C,EAAwBA,EAAQj1C,KAAKylD,GAAK,EACzDzoD,KAAKk4C,SAA0B90C,SAAb80C,EAA2BA,EAAW,EACxDl4C,KAAK6tB,MAAoBzqB,SAAVyqB,EAAwBA,EAAQ,EAE/C7tB,KAAK+f,OAAS,GAAIy0C,IAkCnB,QAASG,IAAY/kD,EAAOwnC,EAAW1pB,EAAUG,GAEhDumC,GAAMjvD,KAAMnF,KAAM4P,EAAOwnC,GAEzBp3C,KAAKwC,KAAO,aAEZG,OAAOC,eAAgB5C,KAAM,SAC5B0sB,IAAK,WAGJ,MAAwB,GAAjB1sB,KAAKo3C,UAAgBp0C,KAAKylD,IAGlC/7C,IAAK,SAAWgoD,GAGf10D,KAAKo3C,UAAYsd,GAAU,EAAI1xD,KAAKylD,OAItCzoD,KAAK0tB,SAA0BtqB,SAAbsqB,EAA2BA,EAAW,EACxD1tB,KAAK6tB,MAAoBzqB,SAAVyqB,EAAwBA,EAAQ,EAE/C7tB,KAAK+f,OAAS,GAAIw0C,IAAa,GAAI9oC,IAAmB,GAAI,EAAG,GAAK,MA6BnE,QAASmpC,IAAwB90C,GAEhCy0C,GAAYpvD,KAAMnF,KAAM,GAAIisB,IAAoB,GAAK,EAAG,EAAG,GAAK,GAAK,MAetE,QAAS4oC,IAAkBjlD,EAAOwnC,GAEjCgd,GAAMjvD,KAAMnF,KAAM4P,EAAOwnC,GAEzBp3C,KAAKwC,KAAO,mBAEZxC,KAAK6T,SAAS3B,KAAM4Q,GAASQ,WAC7BtjB,KAAKs0D,eAELt0D,KAAKmhB,OAAS,GAAI2B,IAElB9iB,KAAK+f,OAAS,GAAI60C,IA4BnB,QAASE,IAAcllD,EAAOwnC,GAE7Bgd,GAAMjvD,KAAMnF,KAAM4P,EAAOwnC,GAEzBp3C,KAAKwC,KAAO,eAEZxC,KAAK0d,WAAata,OAkMnB,QAAS2xD,IACPC,EAAoBC,EAAcC,EAAYC,GAE/Cn1D,KAAKg1D,mBAAqBA,EAC1Bh1D,KAAKo1D,aAAe,EAEpBp1D,KAAKm1D,aAAgC/xD,SAAjB+xD,EAClBA,EAAe,GAAIF,GAAaI,YAAaH,GAC/Cl1D,KAAKi1D,aAAeA,EACpBj1D,KAAKs1D,UAAYJ,EA6OlB,QAASK,IACPP,EAAoBC,EAAcC,EAAYC,GAE/CJ,GAAY5vD,KACVnF,KAAMg1D,EAAoBC,EAAcC,EAAYC,GAEtDn1D,KAAKw1D,aAAe,EACpBx1D,KAAKy1D,aAAe,EACpBz1D,KAAK01D,aAAe,EACpB11D,KAAK21D,aAAe,EA0IrB,QAASC,IACPZ,EAAoBC,EAAcC,EAAYC,GAE/CJ,GAAY5vD,KACVnF,KAAMg1D,EAAoBC,EAAcC,EAAYC,GA2CvD,QAASU,IACPb,EAAoBC,EAAcC,EAAYC,GAE/CJ,GAAY5vD,KACVnF,KAAMg1D,EAAoBC,EAAcC,EAAYC,GAqXvD,QAASW,IAA0B5yD,EAAM6yD,EAAOC,EAAQC,GAEvD,GAAa7yD,SAATF,EAAqB,KAAM,IAAI6rB,OAAO,0BAE1C,IAAc3rB,SAAV2yD,GAAwC,IAAjBA,EAAM/vD,OAEhC,KAAM,IAAI+oB,OAAO,+BAAiC7rB,EAInDlD,MAAKkD,KAAOA,EAEZlD,KAAK+1D,MAAQv0D,EAAQ00D,eAAeC,aAAcJ,EAAO/1D,KAAKo2D,gBAC9Dp2D,KAAKg2D,OAASx0D,EAAQ00D,eAAeC,aAAcH,EAAQh2D,KAAKq2D,iBAEhEr2D,KAAKs2D,iBAAkBL,GAAiBj2D,KAAKu2D,sBAE7Cv2D,KAAKw2D,WACLx2D,KAAKy2D,WAcN,QAASC,IAAqBxzD,EAAM6yD,EAAOC,EAAQC,GAElDH,GAAyB3wD,KAAMnF,KAAMkD,EAAM6yD,EAAOC,EAAQC,GAuB3D,QAASU,IACP3B,EAAoBC,EAAcC,EAAYC,GAE/CJ,GAAY5vD,KACVnF,KAAMg1D,EAAoBC,EAAcC,EAAYC,GAyCvD,QAASyB,IAAyB1zD,EAAM6yD,EAAOC,EAAQC,GAEtDH,GAAyB3wD,KAAMnF,KAAMkD,EAAM6yD,EAAOC,EAAQC,GAmC3D,QAASY,IAAqB3zD,EAAM6yD,EAAOC,EAAQC,GAElDH,GAAyB3wD,KAAMnF,KAAMkD,EAAM6yD,EAAOC,EAAQC,GA2B3D,QAASa,IAAqB5zD,EAAM6yD,EAAOC,EAAQC,GAElDH,GAAyB3wD,KAAMnF,KAAMkD,EAAM6yD,EAAOC,EAAQC,GA8B3D,QAASc,IAAsB7zD,EAAM6yD,EAAOC,GAE3CF,GAAyB3wD,KAAMnF,KAAMkD,EAAM6yD,EAAOC,GAiCnD,QAASgB,IAAoB9zD,EAAM6yD,EAAOC,EAAQC,GAEjDH,GAAyB3wD,KAAMnF,KAAMkD,EAAM6yD,EAAOC,EAAQC,GA+B3D,QAASgB,IAAe/zD,EAAM6yD,EAAOC,EAAQC,GAE5CH,GAAyBjsB,MAAO7pC,KAAM+F,WA4IvC,QAASmxD,IAAeh0D,EAAMi0D,EAAUC,GAEvCp3D,KAAKkD,KAAOA,EACZlD,KAAKo3D,OAASA,EACdp3D,KAAKm3D,SAA0B/zD,SAAb+zD,EAA2BA,EAAW,GAExDn3D,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAGpBjD,KAAKm3D,SAAW,GAEpBn3D,KAAKq3D,gBAINr3D,KAAKy2D,WAkVN,QAASa,IAAgB1D,GAExB5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBAC7D7zD,KAAKm8B,YAwJN,QAASo7B,IAAsB3D,GAE9B5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBA+F9D,QAAS2D,MAERx3D,KAAKy3D,YAAc,aACnBz3D,KAAK03D,eAAiB,aACtB13D,KAAK23D,eAAiB,aAiUvB,QAASC,IAAYhE,GAEI,iBAAZA,KAEX3tD,QAAQgc,KAAM,6EACd2xC,EAAUxwD,QAIXpD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBAE7D7zD,KAAK63D,iBAAkB,EA+gBxB,QAASC,IAAelE,GAEvB5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBAC7D7zD,KAAK+3D,YAAc,GAqrBpB,QAASC,OA4PT,QAASC,IAAWrP,EAAIC,GAEvB7oD,KAAK4oD,GAAKA,EACV5oD,KAAK6oD,GAAKA,EAkDX,QAASqP,MAERl4D,KAAKm4D,UAELn4D,KAAKo4D,WAAY,EAgOlB,QAASC,IAAcC,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAEpF74D,KAAKs4D,GAAKA,EACVt4D,KAAKu4D,GAAKA,EAEVv4D,KAAKw4D,QAAUA,EACfx4D,KAAKy4D,QAAUA,EAEfz4D,KAAK04D,YAAcA,EACnB14D,KAAK24D,UAAYA;AAEjB34D,KAAK44D,WAAaA,EAElB54D,KAAK64D,UAAYA,GAAa,EA2H/B,QAASC,IAAaxa,GAErBt+C,KAAKs+C,OAAsBl7C,SAAXk7C,KAA8BA,EAmC/C,QAASya,IAAkBC,EAAIpQ,EAAIC,EAAIC,GAEtC9oD,KAAKg5D,GAAKA,EACVh5D,KAAK4oD,GAAKA,EACV5oD,KAAK6oD,GAAKA,EACV7oD,KAAK8oD,GAAKA,EAkCX,QAASmQ,IAAsBD,EAAIpQ,EAAIC,GAEtC7oD,KAAKg5D,GAAKA,EACVh5D,KAAK4oD,GAAKA,EACV5oD,KAAK6oD,GAAKA,EAkKX,QAASqQ,MAERC,GAAKtvB,MAAO7pC,KAAM+F,WAElB/F,KAAKo5D,SAiDN,QAASD,IAAM7a,GAEd4Z,GAAU/yD,KAAMnF,MAChBA,KAAKq5D,aAAe,GAAIx3D,GAEnBy8C,GAEJt+C,KAAKs5D,WAAYhb,GAWnB,QAASib,MACRv5D,KAAKw5D,YACLx5D,KAAKy5D,YAAc,KA+PpB,QAASC,IAAMtsC,GAEdptB,KAAKotB,KAAOA,EAoKb,QAASusC,IAAY/F,GAEpB5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBA4C9D,QAAS+F,MAQR,MANiBx2D,UAAZqN,KAEJA,GAAU,IAAMopD,OAAOC,cAAgBD,OAAOE,qBAIxCtpD,GAQR,QAASupD,IAAapG,GAErB5zD,KAAK4zD,QAAwBxwD,SAAZwwD,EAA0BA,EAAUpyD,EAAQqyD,sBA8B9D,QAASoG,MAERj6D,KAAKwC,KAAO,eAEZxC,KAAK2rB,OAAS,EAEd3rB,KAAKk6D,OAAS,KAEdl6D,KAAKm6D,QAAU,GAAI1uC,IACnBzrB,KAAKm6D,QAAQ98C,OAAO5K,OAAQ,GAC5BzS,KAAKm6D,QAAQx2C,kBAAmB,EAEhC3jB,KAAKo6D,QAAU,GAAI3uC,IACnBzrB,KAAKo6D,QAAQ/8C,OAAO5K,OAAQ,GAC5BzS,KAAKo6D,QAAQz2C,kBAAmB,EAiFjC,QAAS02C,IAAY7kD,EAAMC,EAAK6kD,GAE/Bx3C,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,YAEZ,IAAIkpB,GAAM,GAAIC,EAAS,EAEnB4uC,EAAW,GAAI9uC,IAAmBC,EAAKC,EAAQnW,EAAMC,EACzD8kD,GAASv5C,GAAGtU,IAAK,EAAG,GAAK,GACzB6tD,EAASt5C,OAAQ,GAAItb,GAAS,EAAG,EAAG,IACpC3F,KAAK+gB,IAAKw5C,EAEV,IAAIC,GAAW,GAAI/uC,IAAmBC,EAAKC,EAAQnW,EAAMC,EACzD+kD,GAASx5C,GAAGtU,IAAK,EAAG,GAAK,GACzB8tD,EAASv5C,OAAQ,GAAItb,GAAS,GAAK,EAAG,IACtC3F,KAAK+gB,IAAKy5C,EAEV,IAAIC,GAAW,GAAIhvC,IAAmBC,EAAKC,EAAQnW,EAAMC,EACzDglD,GAASz5C,GAAGtU,IAAK,EAAG,EAAG,GACvB+tD,EAASx5C,OAAQ,GAAItb,GAAS,EAAG,EAAG,IACpC3F,KAAK+gB,IAAK05C,EAEV,IAAIC,GAAW,GAAIjvC,IAAmBC,EAAKC,EAAQnW,EAAMC,EACzDilD,GAAS15C,GAAGtU,IAAK,EAAG,EAAG,IACvBguD,EAASz5C,OAAQ,GAAItb,GAAS,EAAG,GAAK,IACtC3F,KAAK+gB,IAAK25C,EAEV,IAAIC,GAAW,GAAIlvC,IAAmBC,EAAKC,EAAQnW,EAAMC,EACzDklD,GAAS35C,GAAGtU,IAAK,EAAG,GAAK,GACzBiuD,EAAS15C,OAAQ,GAAItb,GAAS,EAAG,EAAG,IACpC3F,KAAK+gB,IAAK45C,EAEV,IAAIC,GAAW,GAAInvC,IAAmBC,EAAKC,EAAQnW,EAAMC,EACzDmlD,GAAS55C,GAAGtU,IAAK,EAAG,GAAK,GACzBkuD,EAAS35C,OAAQ,GAAItb,GAAS,EAAG,EAAG,KACpC3F,KAAK+gB,IAAK65C,EAEV,IAAIl2D,IAAYnC,OAAQ67B,GAAW/7B,UAAWoB,GAAcnB,UAAWmB,GAEvEzD,MAAKq8B,aAAe,GAAIn3B,GAAuBo1D,EAAgBA,EAAgB51D,GAE/E1E,KAAK66D,cAAgB,SAAWzzD,EAAUsJ,GAEpB,OAAhB1Q,KAAKqjB,QAAkBrjB,KAAKohB,mBAEjC,IAAIib,GAAer8B,KAAKq8B,aACpBt4B,EAAkBs4B,EAAav3B,QAAQf,eAE3Cs4B,GAAav3B,QAAQf,iBAAkB,EAEvCs4B,EAAaj3B,eAAiB,EAC9BgC,EAAShG,OAAQsP,EAAO6pD,EAAUl+B,GAElCA,EAAaj3B,eAAiB,EAC9BgC,EAAShG,OAAQsP,EAAO8pD,EAAUn+B,GAElCA,EAAaj3B,eAAiB,EAC9BgC,EAAShG,OAAQsP,EAAO+pD,EAAUp+B,GAElCA,EAAaj3B,eAAiB,EAC9BgC,EAAShG,OAAQsP,EAAOgqD,EAAUr+B,GAElCA,EAAaj3B,eAAiB,EAC9BgC,EAAShG,OAAQsP,EAAOiqD,EAAUt+B,GAElCA,EAAav3B,QAAQf,gBAAkBA,EAEvCs4B,EAAaj3B,eAAiB,EAC9BgC,EAAShG,OAAQsP,EAAOkqD,EAAUv+B,GAElCj1B,EAASwZ,gBAAiB,OAS5B,QAASk6C,MAERh4C,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,gBAEZxC,KAAKyQ,QAAUmpD,KAEf55D,KAAK+6D,KAAO/6D,KAAKyQ,QAAQuqD,aACzBh7D,KAAK+6D,KAAKE,QAASj7D,KAAKyQ,QAAQyqD,aAEhCl7D,KAAKmwB,OAAS,KA4Ff,QAASgrC,IAAOC,GAEft4C,GAAS3d,KAAMnF,MAEfA,KAAKwC,KAAO,QAEZxC,KAAKyQ,QAAU2qD,EAAS3qD,QACxBzQ,KAAKq7D,OAASr7D,KAAKyQ,QAAQ6qD,qBAC3Bt7D,KAAKq7D,OAAOE,QAAUv7D,KAAKw7D,QAAQ96D,KAAMV,MAEzCA,KAAK+6D,KAAO/6D,KAAKyQ,QAAQuqD,aACzBh7D,KAAK+6D,KAAKE,QAASG,EAASK,YAE5Bz7D,KAAK07D,UAAW,EAEhB17D,KAAK27D,UAAY,EACjB37D,KAAK47D,aAAe,EACpB57D,KAAK67D,WAAY,EACjB77D,KAAK87D,oBAAqB,EAC1B97D,KAAK+7D,WAAa,QAElB/7D,KAAKg8D,WAwQN,QAASC,IAAiBb,GAEzBD,GAAMh2D,KAAMnF,KAAMo7D,GAElBp7D,KAAKk8D,OAASl8D,KAAKyQ,QAAQ0rD,eAC3Bn8D,KAAKk8D,OAAOjB,QAASj7D,KAAK+6D,MAqF3B,QAASqB,IAAeC,EAAOC,GAE9Bt8D,KAAKu8D,SAAWF,EAAM5rD,QAAQ+rD,iBAC9Bx8D,KAAKu8D,SAASD,QAAsBl5D,SAAZk5D,EAAwBA,EAAU,KAE1Dt8D,KAAKotB,KAAO,GAAIpH,YAAYhmB,KAAKu8D,SAASE,mBAE1CJ,EAAMK,YAAYzB,QAASj7D,KAAKu8D,UAwCjC,QAASI,IAAeC,EAASC,EAAUvH,GAE1Ct1D,KAAK48D,QAAUA,EACf58D,KAAKs1D,UAAYA,CAEjB,IACCwH,GADGxiC,EAAa3T,YAGjB,QAASk2C,GAER,IAAK,aAAgBC,EAAc98D,KAAK+8D,MAAS,MAEjD,KAAK,SACL,IAAK,OAEJziC,EAAa5b,MAAQo+C,EAAc98D,KAAKg9D,OAAU,MAEnD,SAAaF,EAAc98D,KAAKi9D,MAIjCj9D,KAAK65B,OAAS,GAAIS,GAAwB,EAAZg7B,GAY9Bt1D,KAAKk9D,iBAAmBJ,EAExB98D,KAAKm9D,iBAAmB,EAExBn9D,KAAKo9D,SAAW,EAChBp9D,KAAKq9D,eAAiB,EAsKvB,QAASC,IAAiBC,EAAU/xD,EAAMgyD,GAEzCx9D,KAAKwL,KAAOA,EACZxL,KAAKw9D,WAAaA,GAChBF,GAAgBG,eAAgBjyD,GAElCxL,KAAK09D,KAAOJ,GAAgBK,SAC1BJ,EAAUv9D,KAAKw9D,WAAWI,WAAcL,EAE1Cv9D,KAAKu9D,SAAWA,EAspBjB,QAASM,IAAsBC,GAE9B99D,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAGzBjD,KAAK+a,SAAW2D,MAAMq/C,UAAU7Z,MAAM/+C,KAAMY,WAE5C/F,KAAKg+D,gBAAkB,CAGvB,IAAIh2C,KACJhoB,MAAKi+D,eAAiBj2C,CAEtB,KAAM,GAAI9gB,GAAI,EAAGJ,EAAIf,UAAUC,OAAQkB,IAAMJ,IAAMI,EAElD8gB,EAASjiB,UAAWmB,GAAInE,MAASmE,CAIlClH,MAAKk+D,UACLl+D,KAAKm+D,gBACLn+D,KAAKo+D,aACLp+D,KAAKq+D,yBAEL,IAAIxhD,GAAQ7c,IAEZA,MAAKs+D,OAEJhvB,SACCivB,GAAIC,SAAU,MAAO3hD,GAAM9B,SAAS/U,QACpCu4D,GAAIE,SAAU,MAAOz+D,MAAKw+D,MAAQ3hD,EAAMmhD,kBAGzCO,GAAIG,qBAAsB,MAAO7hD,GAAMuhD,UAAUp4D,SA8TnD,QAAS24D,IAAiBC,EAAOC,EAAMC,GAEtC9+D,KAAK++D,OAASH,EACd5+D,KAAKg/D,MAAQH,EACb7+D,KAAKi/D,WAAaH,GAAa,IAW/B,KAAM,GATF1H,GAASyH,EAAKzH,OACjB8H,EAAU9H,EAAOpxD,OACjBm5D,EAAe,GAAIzgD,OAAOwgD,GAEvBE,GACFC,YAAcC,GACdC,UAAYD,IAGJp4D,EAAI,EAAGA,IAAMg4D,IAAYh4D,EAAI,CAEtC,GAAIs4D,GAAcpI,EAAQlwD,GAAIu4D,kBAAmB,KACjDN,GAAcj4D,GAAMs4D,EACpBA,EAAYE,SAAWN,EAIxBp/D,KAAK2/D,qBAAuBP,EAE5Bp/D,KAAK4/D,cAAgBT,EAGrBn/D,KAAK6/D,kBAAoB,GAAInhD,OAAOwgD,GAEpCl/D,KAAK8/D,YAAc,KACnB9/D,KAAK+/D,kBAAoB,KAEzB//D,KAAKggE,sBAAwB,KAC7BhgE,KAAKigE,mBAAqB,KAE1BjgE,KAAKkgE,KAAOC,GACZngE,KAAKogE,WAAa,GAIlBpgE,KAAKqgE,WAAa,KAIlBrgE,KAAKsgE,KAAO,EAEZtgE,KAAKugE,UAAY,EACjBvgE,KAAKwgE,oBAAsB,EAE3BxgE,KAAKygE,OAAS,EACdzgE,KAAK0gE,iBAAmB,EAExB1gE,KAAK2gE,YAAc5zD,EAAAA,EAEnB/M,KAAK4gE,QAAS,EACd5gE,KAAKuf,SAAU,EAEfvf,KAAK6gE,mBAAqB,EAE1B7gE,KAAK8gE,kBAAoB,EACzB9gE,KAAK+gE,gBAAkB,EA+kBxB,QAASC,IAAgBC,GAExBjhE,KAAKkhE,MAAQD,EACbjhE,KAAKmhE,qBACLnhE,KAAKohE,WAAa,EAElBphE,KAAKsgE,KAAO,EAEZtgE,KAAKugE,UAAY,EAktBlB,QAASc,IAASx+D,GAEK,gBAAVA,KAEXoD,QAAQgc,KAAM,sDACdpf,EAAQkD,UAAW,IAIpB/F,KAAK6C,MAAQA,EAEb7C,KAAK2lB,SAAU,EAuBhB,QAAS27C,MAERl5C,GAAejjB,KAAMnF,MAErBA,KAAKwC,KAAO,0BACZxC,KAAKgtB,kBAAoB5pB,OAyD1B,QAASm+D,IAA4BC,EAAmBh8C,EAAU3hB,EAAQ4hB,GAEzEzlB,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAKotB,KAAOo0C,EACZxhE,KAAKwlB,SAAWA,EAChBxlB,KAAK6D,OAASA,EAEd7D,KAAKylB,WAAaA,KAAe,EAyHlC,QAASg8C,IAAmB/6D,EAAO6oC,GAElCvvC,KAAK+C,KAAOvB,EAAQwB,KAAKC,eAEzBjD,KAAK0G,MAAQA,EACb1G,KAAKuvC,OAASA,EACdvvC,KAAKsE,MAAkBlB,SAAVsD,EAAsBA,EAAMV,OAASupC,EAAS,EAE3DvvC,KAAK2lB,SAAU,EACf3lB,KAAK4lB,aAAgB/hB,OAAQ,EAAGS,MAAO,IAEvCtE,KAAKoE,QAAU,EAwEhB,QAASs9D,IAA4Bh7D,EAAO6oC,EAAQ3J,GAEnD67B,GAAkBt8D,KAAMnF,KAAM0G,EAAO6oC,GAErCvvC,KAAK4lC,iBAAmBA,GAAoB,EAuB7C,QAAS+7B,IAA0Bj7D,EAAO8e,EAAUogB,GAEnDrgB,GAAgBpgB,KAAMnF,KAAM0G,EAAO8e,GAEnCxlB,KAAK4lC,iBAAmBA,GAAoB,EAyB7C,QAASg8B,IAAWr/C,EAAQC,EAAWhN,EAAMC,GAE5CzV,KAAK6hE,IAAM,GAAIv/C,IAAKC,EAAQC,GAG5BxiB,KAAKwV,KAAOA,GAAQ,EACpBxV,KAAKyV,IAAMA,GAAO1I,EAAAA,EAElB/M,KAAK8hE,QACJv5C,QACAo9B,QACA/B,OACAiC,QAAUkc,UAAW,GACrBpe,WAGDhhD,OAAO6gB,iBAAkBxjB,KAAK8hE,QAC7BE,YACCt1C,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,yEACPjiB,KAAK6lD,WAOhB,QAASoc,IAASltD,EAAG1M,GAEpB,MAAO0M,GAAE2Y,SAAWrlB,EAAEqlB,SAIvB,QAASw0C,IAAiBhnD,EAAQinD,EAAWC,EAAYC,GAExD,GAAKnnD,EAAOnF,WAAY,IAExBmF,EAAOonD,QAASH,EAAWC,GAEtBC,KAAc,GAIlB,IAAM,GAFFthE,GAAWma,EAAOna,SAEZmG,EAAI,EAAGyK,EAAI5Q,EAASiF,OAAY2L,EAAJzK,EAAOA,IAE5Cg7D,GAAiBnhE,EAAUmG,GAAKi7D,EAAWC,GAAY,GAqF1D,QAASG,IAAOC,GAEfxiE,KAAKwiE,UAA4Bp/D,SAAdo/D,EAA4BA,GAAY,EAE3DxiE,KAAK27D,UAAY,EACjB37D,KAAKyiE,QAAU,EACfziE,KAAK0iE,YAAc,EAEnB1iE,KAAK2iE,SAAU,EAkEhB,QAASC,IAAQtkB,GA8JhB,QAASukB,GAAaxoD,EAAIC,EAAIC,EAAIC,EAAI0vC,EAAG4Y,EAAIC,GAE5C,GAAI/J,GAAmB,IAAZz+C,EAAKF,GACfuuC,EAAmB,IAAZpuC,EAAKF,EAEb,QAAS,GAAMA,EAAKC,GAAOy+C,EAAKpQ,GAAOma,GAAO,IAAQzoD,EAAKC,GAAO,EAAIy+C,EAAKpQ,GAAOka,EAAK9J,EAAK9O,EAAI5vC,EAjKjGta,KAAKs+C,OAASA,CAEd,IACAnmB,GAAO6qC,EAAUvC,EAAQwC,EAAIC,EAC7BC,EAAIC,EAAIC,EAAIC,EAFRh/C,KAAQwkC,GAAOhnD,EAAG,EAAGC,EAAG,EAAGyC,EAAG,EAIlCxE,MAAKujE,cAAgB,SAAWxuD,GAE/B/U,KAAKs+C,SAEL,KAAM,GAAIp3C,GAAI,EAAGA,EAAI6N,EAAE/O,OAAQkB,IAE9BlH,KAAKs+C,OAAQp3C,IAAQpF,EAAGiT,EAAG7N,GAAK,GAAKnF,EAAGgT,EAAG7N,GAAK,GAAK1C,EAAGuQ,EAAG7N,GAAK,KAMlElH,KAAKwjE,SAAW,SAAW7hD,GAuB1B,MArBAwW,IAAUn4B,KAAKs+C,OAAOt4C,OAAS,GAAM2b,EACrCqhD,EAAWhgE,KAAK6nB,MAAOsN,GACvBsoC,EAAStoC,EAAQ6qC,EAEjB1+C,EAAG,GAAmB,IAAb0+C,EAAiBA,EAAWA,EAAW,EAChD1+C,EAAG,GAAM0+C,EACT1+C,EAAG,GAAM0+C,EAAYhjE,KAAKs+C,OAAOt4C,OAAS,EAAIhG,KAAKs+C,OAAOt4C,OAAS,EAAIg9D,EAAW,EAClF1+C,EAAG,GAAM0+C,EAAYhjE,KAAKs+C,OAAOt4C,OAAS,EAAIhG,KAAKs+C,OAAOt4C,OAAS,EAAIg9D,EAAW,EAElFG,EAAKnjE,KAAKs+C,OAAQh6B,EAAG,IACrB8+C,EAAKpjE,KAAKs+C,OAAQh6B,EAAG,IACrB++C,EAAKrjE,KAAKs+C,OAAQh6B,EAAG,IACrBg/C,EAAKtjE,KAAKs+C,OAAQh6B,EAAG,IAErB2+C,EAAKxC,EAASA,EACdyC,EAAKzC,EAASwC,EAEdna,EAAGhnD,EAAI+gE,EAAaM,EAAGrhE,EAAGshE,EAAGthE,EAAGuhE,EAAGvhE,EAAGwhE,EAAGxhE,EAAG2+D,EAAQwC,EAAIC,GACxDpa,EAAG/mD,EAAI8gE,EAAaM,EAAGphE,EAAGqhE,EAAGrhE,EAAGshE,EAAGthE,EAAGuhE,EAAGvhE,EAAG0+D,EAAQwC,EAAIC,GACxDpa,EAAGtkD,EAAIq+D,EAAaM,EAAG3+D,EAAG4+D,EAAG5+D,EAAG6+D,EAAG7+D,EAAG8+D,EAAG9+D,EAAGi8D,EAAQwC,EAAIC,GAEjDpa,GAIR9oD,KAAKyjE,sBAAwB,WAE5B,GAAIv8D,GAAGsxB,EAAG7mB,EAAI3R,KAAKs+C,OAAOt4C,OACzB+gD,IAED,KAAM7/C,EAAI,EAAOyK,EAAJzK,EAAOA,IAEnBsxB,EAAIx4B,KAAKs+C,OAAQp3C,GACjB6/C,EAAQ7/C,IAAQsxB,EAAE12B,EAAG02B,EAAEz2B,EAAGy2B,EAAEh0B,EAI7B,OAAOuiD,IAMR/mD,KAAK0jE,UAAY,SAAWC,GAE3B,GAAIz8D,GAAGmhB,EAAOu7C,EAAU/vD,EACvBskB,EAAQ,EAAG6qC,EAAW,EAAGa,EAAc,EACvCC,EAAc,GAAIn+D,GAClBo+D,EAAS,GAAIp+D,GACbq+D,KACAC,EAAc,CAYf,KARAD,EAAc,GAAM,EAEbL,IAAgBA,EAAgB,KAEvCC,EAAW5jE,KAAKs+C,OAAOt4C,OAAS29D,EAEhCG,EAAY5xD,KAAMlS,KAAKs+C,OAAQ,IAEzBp3C,EAAI,EAAO08D,EAAJ18D,EAAcA,IAE1BmhB,EAAQnhB,EAAI08D,EAEZ/vD,EAAW7T,KAAKwjE,SAAUn7C,GAC1B07C,EAAO7xD,KAAM2B,GAEbowD,GAAeF,EAAOG,WAAYJ,GAElCA,EAAY5xD,KAAM2B,GAElBskB,GAAUn4B,KAAKs+C,OAAOt4C,OAAS,GAAMqiB,EACrC26C,EAAWhgE,KAAK6nB,MAAOsN,GAElB6qC,IAAaa,IAEjBG,EAAchB,GAAaiB,EAC3BJ,EAAcb,EAUhB,OAFAgB,GAAcA,EAAah+D,QAAWi+D,GAE7Bp0C,OAAQm0C,EAAcxF,MAAOyF,IAIvCjkE,KAAKmkE,yBAA2B,SAAWC,GAE1C,GAAIl9D,GAAG+L,EACNoV,EAAOg8C,EAAcC,EACrBC,EACAC,EAAU3wD,EACV4wD,KACAV,EAAS,GAAIp+D,GACb++D,EAAK1kE,KAAK0jE,WAIX,KAFAe,EAAUn5D,KAAMy4D,EAAO7xD,KAAMlS,KAAKs+C,OAAQ,IAAM1hC,SAE1C1V,EAAI,EAAGA,EAAIlH,KAAKs+C,OAAOt4C,OAAQkB,IAAO,CAY3C,IAPAq9D,EAAeG,EAAG70C,OAAQ3oB,GAAMw9D,EAAG70C,OAAQ3oB,EAAI,GAE/Cs9D,EAAWxhE,KAAKqhD,KAAM+f,EAAeG,EAAeG,EAAGlG,OAEvD6F,GAAiBn9D,EAAI,IAAQlH,KAAKs+C,OAAOt4C,OAAS,GAClDs+D,EAAYp9D,GAAMlH,KAAKs+C,OAAOt4C,OAAS,GAEjCiN,EAAI,EAAOuxD,EAAW,EAAfvxD,EAAkBA,IAE9BoV,EAAQg8C,EAAepxD,GAAM,EAAIuxD,IAAeF,EAAYD,GAE5DxwD,EAAW7T,KAAKwjE,SAAUn7C,GAC1Bo8C,EAAUn5D,KAAMy4D,EAAO7xD,KAAM2B,GAAW+I,QAIzC6nD,GAAUn5D,KAAMy4D,EAAO7xD,KAAMlS,KAAKs+C,OAAQp3C,IAAM0V,SAIjD5c,KAAKs+C,OAASmmB,GA2BhB,QAASE,IAAW5qD,EAAQ81C,EAAKuB,GAMhC,MAJApxD,MAAK+Z,OAAsB3W,SAAX2W,EAAyBA,EAAS,EAClD/Z,KAAK6vD,IAAgBzsD,SAARysD,EAAsBA,EAAM,EACzC7vD,KAAKoxD,MAAoBhuD,SAAVguD,EAAwBA,EAAQ,EAExCpxD,KAsER,QAAS4kE,IAAgBvpD,EAAUvF,GAElCyS,GAAKpjB,KAAMnF,KAAMqb,EAAUvF,GAE3B9V,KAAK6kE,iBACL7kE,KAAK8kE,iBAKL,IAAIC,GAAY/kE,KAAKqb,SAAS3C,aAAa1S,OAEvC9C,EAAO,YAEP8hE,EAAa,EACbC,EAAWF,EAAY,EAEvBG,EAAMH,EAAY,CAEtB/kE,MAAKmlE,gBAAiBjiE,EAAM8hE,EAAYC,EAAUC,GAClDllE,KAAKolE,mBAAoBliE,EAAM,GAwShC,QAASmiE,IAAuBvvD,GAE/BgN,GAAS3d,KAAMnF,MAEfA,KAAK8V,SAAWA,EAChB9V,KAAKoB,OAAS,SAAWkkE,KAc1B,QAASC,IAAqBrqD,EAAQ/Q,EAAMq7D,EAAKntD,GAEhDrY,KAAKkb,OAASA,EAEdlb,KAAKmK,KAAkB/G,SAAT+G,EAAuBA,EAAO,CAE5C,IAAIyF,GAAkBxM,SAARoiE,EAAsBA,EAAM,SAEtCnlE,EAAwB+C,SAAdiV,EAA4BA,EAAY,EAIlDotD,EAAW,EAEXC,EAAc1lE,KAAKkb,OAAOG,QAExBqqD,IAAeA,EAAY1pD,WAEhCypD,EAAsC,EAA3BC,EAAYt4D,MAAMpH,OAEjB0/D,GAAeA,EAAY5pD,mBAEvC2pD,EAAWC,EAAYt2D,WAAW8K,OAAO5V,MAM1C,IAAI+W,GAAW,GAAI+M,IAEfomC,EAAY,GAAI/nC,IAA6B,EAAXg/C,EAAe,EAAG,EAExDpqD,GAAS4P,aAAc,WAAYujC,GAEnC5I,GAAazgD,KAAMnF,KAAMqb,EAAU,GAAI4b,KAAqBrnB,MAAOA,EAAOyI,UAAWhY,KAIrFL,KAAK2jB,kBAAmB,EAExB3jB,KAAKugB,SA2GN,QAASolD,IAAiB7lD,GAEzBgD,GAAS3d,KAAMnF,MAEfA,KAAK8f,MAAQA,EACb9f,KAAK8f,MAAMsB,oBAEXphB,KAAK0gB,OAASZ,EAAMjO,YACpB7R,KAAK2jB,kBAAmB,CAYxB,KAAM,GAVFtI,GAAW,GAAI+M,IAEfomC,GACH,EAAG,EAAG,EAAK,EAAK,EAAK,EACrB,EAAG,EAAG,EAAK,EAAK,EAAK,EACrB,EAAG,EAAG,EAAG,GAAO,EAAK,EACrB,EAAG,EAAG,EAAK,EAAK,EAAK,EACrB,EAAG,EAAG,EAAK,EAAG,GAAO,GAGZtnD,EAAI,EAAG+L,EAAI,EAAGtB,EAAI,GAAQA,EAAJzK,EAAOA,IAAM+L,IAAO,CAEnD,GAAIqH,GAAOpT,EAAIyK,EAAM3O,KAAKylD,GAAK,EAC3BluC,EAAOtH,EAAItB,EAAM3O,KAAKylD,GAAK,CAE/B+F,GAAUljD,KACTtI,KAAKg1C,IAAK19B,GAAMtX,KAAKyoD,IAAKnxC,GAAM,EAChCtX,KAAKg1C,IAAKz9B,GAAMvX,KAAKyoD,IAAKlxC,GAAM,GAKlCc,EAAS4P,aAAc,WAAY,GAAIxE,IAAkB+nC,EAAW,GAEpE,IAAI14C,GAAW,GAAImhB,KAAqB3hB,KAAK,GAE7CtV,MAAK4lE,KAAO,GAAIhgB,IAAcvqC,EAAUvF,GACxC9V,KAAK+gB,IAAK/gB,KAAK4lE,MAEf5lE,KAAKugB,SA4CN,QAASslD,IAAgB3qD,GAExBlb,KAAKq2B,MAAQr2B,KAAK8lE,YAAa5qD,EAI/B,KAAM,GAFFG,GAAW,GAAIyL,IAET5f,EAAI,EAAGA,EAAIlH,KAAKq2B,MAAMrwB,OAAQkB,IAAO,CAE9C,GAAIg+C,GAAOllD,KAAKq2B,MAAOnvB,EAEjBg+C,GAAK7hC,QAAU6hC,EAAK7hC,OAAO0iD,SAEhC1qD,EAASlO,SAAS7B,KAAM,GAAI3F,IAC5B0V,EAASlO,SAAS7B,KAAM,GAAI3F,IAC5B0V,EAAS2L,OAAO1b,KAAM,GAAImB,GAAO,EAAG,EAAG,IACvC4O,EAAS2L,OAAO1b,KAAM,GAAImB,GAAO,EAAG,EAAG,KAMzC4O,EAASsK,SAAU,CAEnB,IAAI7P,GAAW,GAAImhB,KAAqBrgB,aAAcovD,GAAc9vD,WAAW,EAAOC,YAAY,EAAOW,aAAa,GAEtH8uC,IAAazgD,KAAMnF,KAAMqb,EAAUvF,GAEnC9V,KAAKihE,KAAO/lD,EAEZlb,KAAK0gB,OAASxF,EAAOrJ,YACrB7R,KAAK2jB,kBAAmB,EAExB3jB,KAAKugB,SAmEN,QAAS0lD,IAAkBnmD,EAAOomD,GAEjClmE,KAAK8f,MAAQA,EACb9f,KAAK8f,MAAMsB,mBAEX,IAAI/F,GAAW,GAAI6yC,IAAsBgY,EAAY,EAAG,GACpDpwD,EAAW,GAAI8O,KAAqBtM,WAAW,EAAMhD,KAAK,GAC9DQ,GAASlG,MAAMsC,KAAMlS,KAAK8f,MAAMlQ,OAAQg+B,eAAgB5tC,KAAK8f,MAAMs3B,WAEnE7uB,GAAKpjB,KAAMnF,KAAMqb,EAAUvF,GAE3B9V,KAAK0gB,OAAS1gB,KAAK8f,MAAMjO,YACzB7R,KAAK2jB,kBAAmB,EA8DzB,QAASwiD,IAAuBrmD,EAAOomD,GAEtCpjD,GAAS3d,KAAMnF,MAEfA,KAAK8f,MAAQA,EACb9f,KAAK8f,MAAMsB,oBAEXphB,KAAK0gB,OAASZ,EAAMjO,YACpB7R,KAAK2jB,kBAAmB,EAExB3jB,KAAKgnB,QAAW,GAAIva,GAAS,GAAIA,GAEjC,IAAI4O,GAAW,GAAIyzC,IAAgBoX,EAAY,EAAG,EAClD7qD,GAAS+qD,SAAWpjE,KAAKylD,GAAK,EAE9B,KAAM,GAAIvhD,GAAI,EAAG2Y,EAAK,EAAOA,EAAJ3Y,EAAQA,IAEhCmU,EAASjO,MAAOlG,GAAI0I,MAAQ5P,KAAKgnB,OAAY,EAAJ9f,EAAQ,EAAI,EAItD,IAAI4O,GAAW,GAAI8O,KAAqBhO,aAAcyvD,GAAY/tD,WAAW,GAE7EtY,MAAKsmE,YAAc,GAAI/9C,IAAMlN,EAAUvF,GACvC9V,KAAK+gB,IAAK/gB,KAAKsmE,aAEftmE,KAAKugB,SAkCN,QAASgmD,IAAYp8D,EAAMq8D,EAAWC,EAAQC,GAE7CF,EAAYA,GAAa,EACzBC,EAAS,GAAIh6D,GAAkBrJ,SAAXqjE,EAAuBA,EAAS,SACpDC,EAAS,GAAIj6D,GAAkBrJ,SAAXsjE,EAAuBA,EAAS,QAMpD,KAAM,GAJF5sD,GAAS0sD,EAAY,EACrBG,EAAgB,EAAPx8D,EAAaq8D,EACtBr5D,KAAe6Z,KAET9f,EAAI,EAAG+L,EAAI,EAAG0O,GAAMxX,EAAWq8D,GAALt/D,EAAgBA,IAAMya,GAAKglD,EAAO,CAErEx5D,EAAS7B,MAAQnB,EAAM,EAAGwX,EAAGxX,EAAM,EAAGwX,GACtCxU,EAAS7B,KAAMqW,EAAG,GAAKxX,EAAMwX,EAAG,EAAGxX,EAEnC,IAAIyF,GAAQ1I,IAAM4S,EAAS2sD,EAASC,CAEpC92D,GAAM3I,QAAS+f,EAAQ/T,GAAKA,GAAK,EACjCrD,EAAM3I,QAAS+f,EAAQ/T,GAAKA,GAAK,EACjCrD,EAAM3I,QAAS+f,EAAQ/T,GAAKA,GAAK,EACjCrD,EAAM3I,QAAS+f,EAAQ/T,GAAKA,GAAK,EAIlC,GAAIoI,GAAW,GAAI+M,GACnB/M,GAAS4P,aAAc,WAAY,GAAIxE,IAAkBtZ,EAAU,IACnEkO,EAAS4P,aAAc,QAAS,GAAIxE,IAAkBO,EAAQ,GAE9D,IAAIlR,GAAW,GAAImhB,KAAqBrgB,aAAcovD,IAEtDpgB,IAAazgD,KAAMnF,KAAMqb,EAAUvF,GAkBpC,QAAS8wD,IAAmB1rD,EAAQ/Q,EAAMq7D,EAAKntD,GAI9CrY,KAAKkb,OAASA,EAEdlb,KAAKmK,KAAkB/G,SAAT+G,EAAuBA,EAAO,CAE5C,IAAIyF,GAAkBxM,SAARoiE,EAAsBA,EAAM,SAEtCnlE,EAAwB+C,SAAdiV,EAA4BA,EAAY,EAIlDotD,EAAW,EAEXC,EAAc1lE,KAAKkb,OAAOG,QAExBqqD,IAAeA,EAAY1pD,WAEhCypD,EAAWC,EAAYt4D,MAAMpH,OAI7BC,QAAQgc,KAAM,qGAMf,IAAI5G,GAAW,GAAI+M,IAEfomC,EAAY,GAAI/nC,IAA6B,EAAXg/C,EAAe,EAAG,EAExDpqD,GAAS4P,aAAc,WAAYujC,GAEnC5I,GAAazgD,KAAMnF,KAAMqb,EAAU,GAAI4b,KAAqBrnB,MAAOA,EAAOyI,UAAWhY,KAIrFL,KAAK2jB,kBAAmB,EACxB3jB,KAAKugB,SAuEN,QAASsmD,IAAwB/mD,EAAO3V,GAEvC2Y,GAAS3d,KAAMnF,MAEfA,KAAK8f,MAAQA,EACb9f,KAAK8f,MAAMsB,oBAEXphB,KAAK0gB,OAASZ,EAAMjO,YACpB7R,KAAK2jB,kBAAmB,EAEVvgB,SAAT+G,IAAqBA,EAAO,EAEjC,IAAIkR,GAAW,GAAI+M,GACnB/M,GAAS4P,aAAc,WAAY,GAAIxE,MACpCtc,EAAQA,EAAM,EACdA,EAAQA,EAAM,EACdA,GAAQA,EAAM,GACdA,GAAQA,EAAM,GACdA,EAAQA,EAAM,GACd,GAEH,IAAI2L,GAAW,GAAImhB,KAAqB3hB,KAAK,GAE7CtV,MAAK+gB,IAAK,GAAI4kC,IAAMtqC,EAAUvF,IAE9BuF,EAAW,GAAI+M,IACf/M,EAAS4P,aAAc,WAAY,GAAIxE,KAAoB,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IAE/EzmB,KAAK+gB,IAAK,GAAI4kC,IAAMtqC,EAAUvF,IAE9B9V,KAAKugB,SAqDN,QAASumD,IAAcn2D,GA8DtB,QAASo2D,GAAShyD,EAAG1M,EAAGm9D,GAEvBwB,EAAUjyD,EAAGywD,GACbwB,EAAU3+D,EAAGm9D,GAId,QAASwB,GAAUl8D,EAAI06D,GAEtBnqD,EAASlO,SAAS7B,KAAM,GAAI3F,IAC5B0V,EAAS2L,OAAO1b,KAAM,GAAImB,GAAO+4D,IAETpiE,SAAnB6jE,EAAUn8D,KAEdm8D,EAAUn8D,OAIXm8D,EAAUn8D,GAAKQ,KAAM+P,EAASlO,SAASnH,OAAS,GA9EjD,GAAIqV,GAAW,GAAIyL,IACfhR,EAAW,GAAImhB,KAAqBrnB,MAAO,SAAUgH,aAAcyvD,KAEnEY,KAIAC,EAAa,SACbC,EAAU,SACVC,EAAQ,MACRC,EAAY,SACZC,EAAW,OAIfP,GAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GAIrBH,EAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GAIrBH,EAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GACrBH,EAAS,KAAM,KAAMG,GAIrBH,EAAS,IAAK,KAAMI,GACpBJ,EAAS,IAAK,KAAMI,GACpBJ,EAAS,IAAK,KAAMI,GACpBJ,EAAS,IAAK,KAAMI,GAIpBJ,EAAS,KAAM,KAAMK,GACrBL,EAAS,KAAM,KAAMK,GACrBL,EAAS,KAAM,KAAMK,GAIrBL,EAAS,IAAK,IAAKM,GACnBN,EAAS,IAAK,IAAKO,GAInBP,EAAS,MAAO,MAAOO,GACvBP,EAAS,MAAO,MAAOO,GAEvBP,EAAS,MAAO,MAAOO,GACvBP,EAAS,MAAO,MAAOO,GAwBvB1hB,GAAazgD,KAAMnF,KAAMqb,EAAUvF,GAEnC9V,KAAK2Q,OAASA,EACV3Q,KAAK2Q,OAAO0P,wBAAyBrgB,KAAK2Q,OAAO0P,yBAErDrgB,KAAK0gB,OAAS/P,EAAOkB,YACrB7R,KAAK2jB,kBAAmB,EAExB3jB,KAAKinE,SAAWA,EAEhBjnE,KAAKugB,SA6FN,QAASgnD,IAAmBrsD,EAAQsqD,GAEnC,GAAI51D,GAAkBxM,SAARoiE,EAAsBA,EAAM,OAE1CxlE,MAAKkb,OAASA,EAEdlb,KAAKwnE,IAAM,GAAI5tD,IAEf2O,GAAKpjB,KAAMnF,KAAM,GAAIuyD,IAAa,EAAG,EAAG,GAAK,GAAI3tC,KAAqBhV,MAAOA,EAAO0I,WAAW,KAqBhG,QAASmvD,IAAWvsD,EAAQtL,GAEZxM,SAAVwM,IAAsBA,EAAQ,SAEnC,IAAIoY,GAAU,GAAI3a,cAAe,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClGmhD,EAAY,GAAI1oD,cAAc,IAE9BuV,EAAW,GAAI+M,GACnB/M,GAAS2P,SAAU,GAAIzF,IAAiByC,EAAS,IACjD3M,EAAS4P,aAAc,WAAY,GAAI1F,IAAiBipC,EAAW,IAEnE5I,GAAazgD,KAAMnF,KAAMqb,EAAU,GAAI4b,KAAqBrnB,MAAOA,KAEnDxM,SAAX8X,GAEJlb,KAAKugB,OAAQrF,GAwEf,QAASwsD,IAAaC,EAAKplD,EAAQvc,EAAQ4J,EAAOg4D,EAAYC,GAI7D/kD,GAAS3d,KAAMnF,MAEAoD,SAAVwM,IAAsBA,EAAQ,UACnBxM,SAAX4C,IAAuBA,EAAS,GACjB5C,SAAfwkE,IAA2BA,EAAa,GAAM5hE,GAChC5C,SAAdykE,IAA0BA,EAAY,GAAMD,GAEjD5nE,KAAK6T,SAAS3B,KAAMqQ,GAEpBviB,KAAK8nE,KAAO,GAAIniB,IAAMoiB,GAAc,GAAI9wC,KAAqBrnB,MAAOA,KACpE5P,KAAK8nE,KAAKnkD,kBAAmB,EAC7B3jB,KAAK+gB,IAAK/gB,KAAK8nE,MAEf9nE,KAAK4lE,KAAO,GAAIr9C,IAAMy/C,GAAc,GAAIpjD,KAAqBhV,MAAOA,KACpE5P,KAAK4lE,KAAKjiD,kBAAmB,EAC7B3jB,KAAK+gB,IAAK/gB,KAAK4lE,MAEf5lE,KAAKioE,aAAcN,GACnB3nE,KAAKkoE,UAAWliE,EAAQ4hE,EAAYC,GAgErC,QAASM,IAAYh+D,GAEpBA,EAAOA,GAAQ,CAEf,IAAIgD,GAAW,GAAIrH,eAClB,EAAG,EAAG,EAAIqE,EAAM,EAAG,EACnB,EAAG,EAAG,EAAI,EAAGA,EAAM,EACnB,EAAG,EAAG,EAAI,EAAG,EAAGA,IAGb6c,EAAS,GAAIlhB,eAChB,EAAG,EAAG,EAAI,EAAG,GAAK,EAClB,EAAG,EAAG,EAAI,GAAK,EAAG,EAClB,EAAG,EAAG,EAAI,EAAG,GAAK,IAGfuV,EAAW,GAAI+M,GACnB/M,GAAS4P,aAAc,WAAY,GAAI1F,IAAiBpY,EAAU,IAClEkO,EAAS4P,aAAc,QAAS,GAAI1F,IAAiByB,EAAQ,GAE7D,IAAIlR,GAAW,GAAImhB,KAAqBrgB,aAAcovD,IAEtDpgB,IAAazgD,KAAMnF,KAAMqb,EAAUvF,GAmMpC,QAASsyD,IAAoB9pB,GAE5Br4C,QAAQgc,KAAM,oFAEdzgB,EAAQ6mE,iBAAiBljE,KAAMnF,KAAMs+C,GACrCt+C,KAAKwC,KAAO,aACZxC,KAAKuqD,QAAS,EA2If,QAAS+d,IAAUhQ,EAAIC,EAAIgQ,EAAS7P,EAAaC,EAAWC,GAE3DP,GAAalzD,KAAMnF,KAAMs4D,EAAIC,EAAIgQ,EAASA,EAAS7P,EAAaC,EAAWC,GAgD5E,QAAS4P,IAAQzzD,EAAG1M,EAAGic,EAAG6E,EAAGjP,EAAQtK,EAAOmS,GAE3C,MADA9b,SAAQgc,KAAM,wEACP,GAAIsC,IAAOxP,EAAG1M,EAAGic,EAAGpK,EAAQtK,EAAOmS,GAO3C,QAASigD,IAAa3mD,EAAUvF,GAE/B,MADA7P,SAAQgc,KAAM,sDACP,GAAI4jC,IAAQxqC,EAAUvF,GAG9B,QAAS2yD,IAAiBptD,EAAUvF,GAEnC,MADA7P,SAAQgc,KAAM,0DACP,GAAI4jC,IAAQxqC,EAAUvF,GAG9B,QAAS4yD,IAAqBvwD,GAE7B,MADAlS,SAAQgc,KAAM,sEACP,GAAIkV,IAAgBhf,GAG5B,QAASwwD,IAAwBxwD,GAEhC,MADAlS,SAAQgc,KAAM,yEACP,GAAIkV,IAAgBhf,GAG5B,QAASywD,IAAyBzwD,GAEjC,MADAlS,SAAQgc,KAAM,0EACP,GAAIkV,IAAgBhf,GAG5B,QAAS0wD,IAAS/mE,EAAGC,EAAGyC,GAEvB,MADAyB,SAAQgc,KAAM,6DACP,GAAItc,GAAS7D,EAAGC,EAAGyC,GAK3B,QAASskE,IAAa5tD,EAAQsqD,GAE7B,MADAv/D,SAAQgc,KAAM,wEACP,GAAI2jC,IAAc,GAAIsK,IAAeh1C,EAAOG,UAAY,GAAI4b,KAAqBrnB,MAAexM,SAARoiE,EAAoBA,EAAM,YAG1H,QAASuD,IAAiB7tD,EAAQsqD,GAEjC,MADAv/D,SAAQgc,KAAM,gFACP,GAAI2jC,IAAc,GAAIW,IAAmBrrC,EAAOG,UAAY,GAAI4b,KAAqBrnB,MAAexM,SAARoiE,EAAoBA,EAAM,YAstB9H,QAASwD,MAER/iE,QAAQC,MAAO,0EAEflG,KAAKipE,cAAgB,SAAW7+C,EAAQzZ,GAEvC1K,QAAQgc,KAAM,8DACdmI,EAAO8+C,QAASv4D,IAIjB3Q,KAAKmpE,gBAAkB,SAAW/+C,EAAQzZ,GAEzC1K,QAAQgc,KAAM,kEACdmI,EAAOg/C,UAAWz4D,IAInB3Q,KAAKqpE,WAAa,SAAWj/C,EAAQzZ,GAEpC1K,QAAQC,MAAO,qEAQjB,QAASojE,MAERrjE,QAAQC,MAAO,mFAEflG,KAAKy9C,WAAajpC,SAASC,gBAAiB,+BAAgC,UAC5EzU,KAAK6gB,MAAQ,aACb7gB,KAAKoB,OAAS,aACdpB,KAAKqiB,cAAgB,aACrBriB,KAAKw/C,QAAU,aA78wCQp8C,SAAnBmmE,OAAOC,UAEXD,OAAOC,QAAUxmE,KAAKqmD,IAAK,EAAG,MAMZjmD,SAAdJ,KAAK+uD,OAIT/uD,KAAK+uD,KAAO,SAAWjwD,GAEtB,MAAa,GAAJA,EAAU,GAAQA,EAAI,EAAM,GAAMA,IAMZsB,SAA5BqmE,SAAS1L,UAAU76D,MAKvBP,OAAOC,eAAgB6mE,SAAS1L,UAAW,QAE1CrxC,IAAK,WAEJ,MAAO1sB,MAAK8mD,WAAWl7C,MAAO,6BAA+B,MAQzCxI,SAAlBT,OAAO+mE,SAKX,WAEC/mE,OAAO+mE,OAAS,SAAWvoD,GAI1B,GAAgB/d,SAAX+d,GAAmC,OAAXA,EAE5B,KAAM,IAAIuE,WAAW,6CAMtB,KAAM,GAFFikD,GAAShnE,OAAQwe,GAEXkH,EAAQ,EAAGA,EAAQtiB,UAAUC,OAAQqiB,IAAW,CAEzD,GAAIgzC,GAASt1D,UAAWsiB,EAExB,IAAgBjlB,SAAXi4D,GAAmC,OAAXA,EAE5B,IAAM,GAAIuO,KAAWvO,GAEf14D,OAAOo7D,UAAU8L,eAAe1kE,KAAMk2D,EAAQuO,KAElDD,EAAQC,GAAYvO,EAAQuO,IAUhC,MAAOD,OAcVhnE,OAAO+mE,OAAQ9nE,EAAgBm8D,WAE9B/jC,iBAAkB,SAAWx3B,EAAM44D,GAETh4D,SAApBpD,KAAK8pE,aAA2B9pE,KAAK8pE,cAE1C,IAAIC,GAAY/pE,KAAK8pE,UAEM1mE,UAAtB2mE,EAAWvnE,KAEfunE,EAAWvnE,OAImC,KAA1CunE,EAAWvnE,GAAOo2B,QAASwiC,IAE/B2O,EAAWvnE,GAAO8I,KAAM8vD,IAM1B4O,iBAAkB,SAAWxnE,EAAM44D,GAElC,GAAyBh4D,SAApBpD,KAAK8pE,WAA2B,OAAO,CAE5C,IAAIC,GAAY/pE,KAAK8pE,UAErB,OAA2B1mE,UAAtB2mE,EAAWvnE,IAAkE,KAA1CunE,EAAWvnE,GAAOo2B,QAASwiC,IAE3D,GAID,GAIR9hC,oBAAqB,SAAW92B,EAAM44D,GAErC,GAAyBh4D,SAApBpD,KAAK8pE,WAAV,CAEA,GAAIC,GAAY/pE,KAAK8pE,WACjBG,EAAgBF,EAAWvnE,EAE/B,IAAuBY,SAAlB6mE,EAA8B,CAElC,GAAI5hD,GAAQ4hD,EAAcrxC,QAASwiC,EAEpB,MAAV/yC,GAEJ4hD,EAAcC,OAAQ7hD,EAAO,MAQhC8hD,cAAe,SAAWlxC,GAEzB,GAAyB71B,SAApBpD,KAAK8pE,WAAV,CAEA,GAAIC,GAAY/pE,KAAK8pE,WACjBG,EAAgBF,EAAW9wC,EAAMz2B,KAErC,IAAuBY,SAAlB6mE,EAA8B,CAElChxC,EAAM9X,OAASnhB,IAEf,IAAI0G,MAAYQ,EAAI,EAChBlB,EAASikE,EAAcjkE,MAE3B,KAAMkB,EAAI,EAAOlB,EAAJkB,EAAYA,IAExBR,EAAOQ,GAAM+iE,EAAe/iE,EAI7B,KAAMA,EAAI,EAAOlB,EAAJkB,EAAYA,IAExBR,EAAOQ,GAAI/B,KAAMnF,KAAMi5B,OAU3B,IAAI6jB,IAAW,KACXstB,IAAUC,KAAM,EAAGC,OAAQ,EAAGC,MAAO,GACrCliC,GAAe,EACfhD,GAAe,EACfmD,GAAgB,EAChBgiC,GAAoB,EACpB7nB,GAAuB,EACvB8nB,GAAwB,EACxBC,GAAiB,EACjBjrD,GAAe,EACfoS,GAAmB,EACnBpb,GAAY,EACZwG,GAAW,EACXF,GAAa,EACbgb,GAAc,EACdphB,GAAgB,EAChBE,GAAW,EACXwvD,GAAa,EACbL,GAAe,EACf9/B,GAAa,EACb3vB,GAAiB,EACjB8vB,GAAmB,EACnBO,GAAsB,EACtBI,GAAmB,EACnBE,GAAiB,EACjByjC,IACAzkC,WAAYA,GACZ3vB,eAAgBA,GAChB8vB,iBAAkBA,GAClBO,oBAAqBA,GACrBI,iBAAkBA,GAClBE,eAAgBA,IAEhBjwB,GAAc,IACdmjC,GAAmB,IACnBE,GAA0B,IAC1BkC,GAAc,IACdE,GAAc,IACdlC,GAAa,IACbC,GAAY,IACZC,GAAiB,IACjBC,GAAyB,IACzB5jC,GAAiB,IACjBC,GAAyB,IACzB4jC,GAAiB,IACjBE,GAAyB,IACzBE,GAAiB,IACjBE,GAAyB,IACzBE,GAAyB,IACzBvY,GAAa,EACbE,GAAc,EACdE,GAAY,EACZ3rB,GAAiB,EACjB8rB,GAAa,EACbE,GAAoB,EACpBE,GAAe,EACfE,GAAgB,EAChBxe,GAAoB,EACpBqN,GAAe,EACfC,GAAe,EACfuB,GAAgB,EAChBxE,GAAoB,EACpBC,GAAsB,EACtBC,GAAwB,EACxBC,GAAoB,EACpBk7C,GAAY,IACZvkE,GAAwB,IACxB4rB,GAAwB,IACxBG,GAAmC,IACnCC,GAAmC,IACnCC,GAA6B,IAC7BJ,GAA0B,IAC1BC,GAA0B,IAC1B04C,IACAD,UAAWA,GACXvkE,sBAAuBA,GACvB4rB,sBAAuBA,GACvBG,iCAAkCA,GAClCC,iCAAkCA,GAClCC,2BAA4BA,GAC5BJ,wBAAyBA,GACzBC,wBAAyBA,IAEzBsmB,GAAiB,IACjBj1C,GAAsB,KACtBm1C,GAAyB,KACzBmyB,IACAryB,eAAgBA,GAChBj1C,oBAAqBA,GACrBm1C,uBAAwBA,IAExBv4B,GAAgB,KAChByb,GAA6B,KAC7BC,GAA4B,KAC5Br4B,GAAe,KACfs1C,GAA4B,KAC5Br1C,GAA2B,KAC3BqnE,IACA3qD,cAAeA,GACfyb,2BAA4BA,GAC5BC,0BAA2BA,GAC3Br4B,aAAcA,GACds1C,0BAA2BA,GAC3Br1C,yBAA0BA,IAE1BE,GAAmB,KACnB41C,GAAW,KACXC,GAAY,KACZC,GAAoB,KACpBC,GAAU,KACVC,GAAkB,KAClBjb,GAAY,KACZC,GAAgB,KAChBsa,GAAwB,KACxBE,GAAwB,KACxBE,GAAuB,KACvBsD,GAAqB,KACrB9C,GAAc,KACd1b,GAAY,KACZz6B,GAAa,KACbq2C,GAAkB,KAClBE,GAAuB,KACvB8wB,GAAarnE,GACbm9B,GAAc,KACdrB,GAAqB,KACrB6b,GAAuB,KACvBE,GAAwB,KACxBE,GAAwB,KACxBE,GAAwB,KACxBE,GAA0B,KAC1BE,GAA0B,KAC1BE,GAA2B,KAC3BE,GAA2B,KAC3BE,GAAkB,KAClB2uB,GAAW,KACX9K,GAAa,KACb+K,GAAe,KACfC,GAAsB,KACtBC,GAAoB,KACpBC,GAAoB,KACpB/L,GAAsB,KACtBgM,GAAkB,KAClBC,GAAmB,KACnB7iD,GAAoB,EACpBo5B,GAAwB,EACxBE,GAAsB,EACtB79C,GAAiB,IACjBsqB,GAAe,KACfK,GAAgB,KAChBJ,GAAe,KACf88C,GAAiB,KACjB78C,GAAgB,KAChBC,GAAiB,KACjBC,GAAe,KACftV,GAAoB,KACpBwF,GAAmB,IAOvBvd,GAAQwB,MAEPstD,QAASttD,KAAKylD,GAAK,IACnBgjB,QAAS,IAAMzoE,KAAKylD,GAEpBxlD,aAAc,WAIb,GAEa8D,GAFT2kE,EAAQ,iEAAiEv9C,MAAO,IAChFprB,EAAO,GAAI2b,OAAO,IAClBitD,EAAM,CAEV,OAAO,YAEN,IAAM,GAAIzkE,GAAI,EAAO,GAAJA,EAAQA,IAEb,IAANA,GAAiB,KAANA,GAAkB,KAANA,GAAkB,KAANA,EAEvCnE,EAAMmE,GAAM,IAEK,KAANA,EAEXnE,EAAMmE,GAAM,KAIA,GAAPykE,IAAcA,EAAM,SAA8B,SAAhB3oE,KAAKwlB,SAAyB,GACrEzhB,EAAU,GAAN4kE,EACJA,IAAa,EACb5oE,EAAMmE,GAAMwkE,EAAe,KAANxkE,EAAmB,EAAJH,EAAY,EAAMA,GAMxD,OAAOhE,GAAKkM,KAAM,QAMpBygD,MAAO,SAAW7sD,EAAOgK,EAAKC,GAE7B,MAAO9J,MAAK8J,IAAKD,EAAK7J,KAAK6J,IAAKC,EAAKjK,KAOtC+oE,gBAAiB,SAAW9kE,EAAG+kE,GAE9B,OAAW/kE,EAAI+kE,EAAMA,GAAMA,GAM5BC,UAAW,SAAWhqE,EAAGiqE,EAAIC,EAAIC,EAAIC,GAEpC,MAAOD,IAAOnqE,EAAIiqE,IAASG,EAAKD,IAASD,EAAKD,IAM/CI,WAAY,SAAWrqE,EAAG+K,EAAKC,GAE9B,MAAUD,IAAL/K,EAAkB,EAClBA,GAAKgL,EAAa,GAEvBhL,GAAMA,EAAI+K,IAAUC,EAAMD,GAEnB/K,EAAIA,GAAM,EAAI,EAAIA,KAI1BsqE,aAAc,SAAWtqE,EAAG+K,EAAKC,GAEhC,MAAUD,IAAL/K,EAAkB,EAClBA,GAAKgL,EAAa,GAEvBhL,GAAMA,EAAI+K,IAAUC,EAAMD,GAEnB/K,EAAIA,EAAIA,GAAMA,GAAU,EAAJA,EAAQ,IAAO,MAI3CuqE,SAAU,WAGT,MADApmE,SAAQgc,KAAM,yEACPjf,KAAKwlB,UAMb8jD,QAAS,SAAWC,EAAKC,GAExB,MAAOD,GAAMvpE,KAAK6nB,MAAO7nB,KAAKwlB,UAAagkD,EAAOD,EAAM,KAMzDE,UAAW,SAAWF,EAAKC,GAE1B,MAAOD,GAAMvpE,KAAKwlB,UAAagkD,EAAOD,IAMvCG,gBAAiB,SAAWC,GAE3B,MAAOA,IAAU,GAAM3pE,KAAKwlB,WAI7BokD,SAAU,SAAWC,GAEpB,MAAOA,GAAUrrE,EAAQwB,KAAKstD,SAI/Bwc,SAAU,SAAWC,GAEpB,MAAOA,GAAUvrE,EAAQwB,KAAKyoE,SAI/BpwC,aAAc,SAAWx4B,GAExB,MAAqC,MAA5BA,EAAUA,EAAQ,IAAyB,IAAVA,GAI3C44B,kBAAmB,SAAW54B,GAE7B,MAAOG,MAAKqmD,IAAK,EAAGrmD,KAAKgqE,MAAOhqE,KAAKoyB,IAAKvyB,GAAUG,KAAK+wC,OAI1DqQ,eAAgB,SAAWvhD,GAU1B,MARAA,KACAA,GAASA,GAAS,EAClBA,GAASA,GAAS,EAClBA,GAASA,GAAS,EAClBA,GAASA,GAAS,EAClBA,GAASA,GAAS,GAClBA,IAEOA,IAoBThB,EAAQk8D,WAEP1I,YAAaxzD,EAEborE,WAAW,EAEX1O,GAAIl+D,SAEH,MAAOL,MAAK8B,GAIby8D,GAAIl+D,OAAOwC,GAEV7C,KAAK8B,EAAIe,GAIV07D,GAAIj+D,UAEH,MAAON,MAAK+B,GAIbw8D,GAAIj+D,QAAQuC,GAEX7C,KAAK+B,EAAIc,GAMV6J,IAAK,SAAW5K,EAAGC,GAKlB,MAHA/B,MAAK8B,EAAIA,EACT9B,KAAK+B,EAAIA,EAEF/B,MAIRktE,UAAW,SAAWC,GAKrB,MAHAntE,MAAK8B,EAAIqrE,EACTntE,KAAK+B,EAAIorE,EAEFntE,MAIR8sD,KAAM,SAAWhrD,GAIhB,MAFA9B,MAAK8B,EAAIA,EAEF9B,MAIRotE,KAAM,SAAWrrE,GAIhB,MAFA/B,MAAK+B,EAAIA,EAEF/B,MAIRqtE,aAAc,SAAWhlD,EAAOxlB,GAE/B,OAASwlB,GAER,IAAK,GAAGroB,KAAK8B,EAAIe,CAAO,MACxB,KAAK,GAAG7C,KAAK+B,EAAIc,CAAO,MACxB,SAAS,KAAM,IAAIksB,OAAO,0BAA4B1G,KAMxDilD,aAAc,SAAWjlD,GAExB,OAASA,GAER,IAAK,GAAG,MAAOroB,MAAK8B,CACpB,KAAK,GAAG,MAAO9B,MAAK+B,CACpB,SAAS,KAAM,IAAIgtB,OAAO,0BAA4B1G,KAMxDzL,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAK8B,EAAG9B,KAAK+B,IAI3CmQ,KAAM,SAAWxK,GAKhB,MAHA1H,MAAK8B,EAAI4F,EAAE5F,EACX9B,KAAK+B,EAAI2F,EAAE3F,EAEJ/B,MAIR+gB,IAAK,SAAWrZ,EAAGlH,GAElB,MAAW4C,UAAN5C,GAEJyF,QAAQgc,KAAM,yFACPjiB,KAAK0sD,WAAYhlD,EAAGlH,KAI5BR,KAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EAEL/B,OAIRutE,UAAW,SAAWnb,GAKrB,MAHApyD,MAAK8B,GAAKswD,EACVpyD,KAAK+B,GAAKqwD,EAEHpyD,MAIR0sD,WAAY,SAAW33C,EAAG1M,GAKzB,MAHArI,MAAK8B,EAAIiT,EAAEjT,EAAIuG,EAAEvG,EACjB9B,KAAK+B,EAAIgT,EAAEhT,EAAIsG,EAAEtG,EAEV/B,MAIRwtE,gBAAiB,SAAW9lE,EAAG0qD,GAK9B,MAHApyD,MAAK8B,GAAK4F,EAAE5F,EAAIswD,EAChBpyD,KAAK+B,GAAK2F,EAAE3F,EAAIqwD,EAETpyD,MAIR43C,IAAK,SAAWlwC,EAAGlH,GAElB,MAAW4C,UAAN5C,GAEJyF,QAAQgc,KAAM,yFACPjiB,KAAKysD,WAAY/kD,EAAGlH,KAI5BR,KAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EAEL/B,OAIRytE,UAAW,SAAWrb,GAKrB,MAHApyD,MAAK8B,GAAKswD,EACVpyD,KAAK+B,GAAKqwD,EAEHpyD,MAIRysD,WAAY,SAAW13C,EAAG1M,GAKzB,MAHArI,MAAK8B,EAAIiT,EAAEjT,EAAIuG,EAAEvG,EACjB9B,KAAK+B,EAAIgT,EAAEhT,EAAIsG,EAAEtG,EAEV/B,MAIRshB,SAAU,SAAW5Z,GAKpB,MAHA1H,MAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EAEL/B,MAIR4tC,eAAgB,SAAWu/B,GAc1B,MAZKO,UAAUP,IAEdntE,KAAK8B,GAAKqrE,EACVntE,KAAK+B,GAAKorE,IAIVntE,KAAK8B,EAAI,EACT9B,KAAK+B,EAAI,GAIH/B,MAIR2tE,OAAQ,SAAWjmE,GAKlB,MAHA1H,MAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EAEL/B,MAIRgpD,aAAc,SAAWmkB,GAExB,MAAOntE,MAAK4tC,eAAgB,EAAIu/B,IAIjCtgE,IAAK,SAAWnF,GAKf,MAHA1H,MAAK8B,EAAIkB,KAAK6J,IAAK7M,KAAK8B,EAAG4F,EAAE5F,GAC7B9B,KAAK+B,EAAIiB,KAAK6J,IAAK7M,KAAK+B,EAAG2F,EAAE3F,GAEtB/B,MAIR8M,IAAK,SAAWpF,GAKf,MAHA1H,MAAK8B,EAAIkB,KAAK8J,IAAK9M,KAAK8B,EAAG4F,EAAE5F,GAC7B9B,KAAK+B,EAAIiB,KAAK8J,IAAK9M,KAAK+B,EAAG2F,EAAE3F,GAEtB/B,MAIR0vD,MAAO,SAAW7iD,EAAKC,GAOtB,MAHA9M,MAAK8B,EAAIkB,KAAK8J,IAAKD,EAAI/K,EAAGkB,KAAK6J,IAAKC,EAAIhL,EAAG9B,KAAK8B,IAChD9B,KAAK+B,EAAIiB,KAAK8J,IAAKD,EAAI9K,EAAGiB,KAAK6J,IAAKC,EAAI/K,EAAG/B,KAAK+B,IAEzC/B,MAIR4tE,YAAa,WAEZ,GAAI/gE,GAAKC,CAET,OAAO,UAAsB+gE,EAAQC,GAYpC,MAVa1qE,UAARyJ,IAEJA,EAAM,GAAIhL,GACViL,EAAM,GAAIjL,IAIXgL,EAAIH,IAAKmhE,EAAQA,GACjB/gE,EAAIJ,IAAKohE,EAAQA,GAEV9tE,KAAK0vD,MAAO7iD,EAAKC,OAM1BihE,YAAa,SAAWlhE,EAAKC,GAE5B,GAAI9G,GAAShG,KAAKgG,QAElB,OAAOhG,MAAK4tC,eAAgB5qC,KAAK8J,IAAKD,EAAK7J,KAAK6J,IAAKC,EAAK9G,IAAaA,IAIxE6kB,MAAO,WAKN,MAHA7qB,MAAK8B,EAAIkB,KAAK6nB,MAAO7qB,KAAK8B,GAC1B9B,KAAK+B,EAAIiB,KAAK6nB,MAAO7qB,KAAK+B,GAEnB/B,MAIRqkD,KAAM,WAKL,MAHArkD,MAAK8B,EAAIkB,KAAKqhD,KAAMrkD,KAAK8B,GACzB9B,KAAK+B,EAAIiB,KAAKqhD,KAAMrkD,KAAK+B,GAElB/B,MAIRgtE,MAAO,WAKN,MAHAhtE,MAAK8B,EAAIkB,KAAKgqE,MAAOhtE,KAAK8B,GAC1B9B,KAAK+B,EAAIiB,KAAKgqE,MAAOhtE,KAAK+B,GAEnB/B,MAIRguE,YAAa,WAKZ,MAHAhuE,MAAK8B,EAAM9B,KAAK8B,EAAI,EAAMkB,KAAKqhD,KAAMrkD,KAAK8B,GAAMkB,KAAK6nB,MAAO7qB,KAAK8B,GACjE9B,KAAK+B,EAAM/B,KAAK+B,EAAI,EAAMiB,KAAKqhD,KAAMrkD,KAAK+B,GAAMiB,KAAK6nB,MAAO7qB,KAAK+B,GAE1D/B,MAIRm4C,OAAQ,WAKP,MAHAn4C,MAAK8B,GAAM9B,KAAK8B,EAChB9B,KAAK+B,GAAM/B,KAAK+B,EAET/B,MAIR2wD,IAAK,SAAWjpD,GAEf,MAAO1H,MAAK8B,EAAI4F,EAAE5F,EAAI9B,KAAK+B,EAAI2F,EAAE3F,GAIlCksE,SAAU,WAET,MAAOjuE,MAAK8B,EAAI9B,KAAK8B,EAAI9B,KAAK+B,EAAI/B,KAAK+B,GAIxCiE,OAAQ,WAEP,MAAOhD,MAAKmhD,KAAMnkD,KAAK8B,EAAI9B,KAAK8B,EAAI9B,KAAK+B,EAAI/B,KAAK+B,IAInDmsE,gBAAiB,WAEhB,MAAOlrE,MAAK+sC,IAAK/vC,KAAK8B,GAAMkB,KAAK+sC,IAAK/vC,KAAK+B,IAI5Cw2C,UAAW,WAEV,MAAOv4C,MAAKgpD,aAAchpD,KAAKgG,WAIhCiyC,MAAO,WAIN,GAAIA,GAAQj1C,KAAK0mD,MAAO1pD,KAAK+B,EAAG/B,KAAK8B,EAIrC,OAFa,GAARm2C,IAAYA,GAAS,EAAIj1C,KAAKylD,IAE5BxQ,GAIRisB,WAAY,SAAWx8D,GAEtB,MAAO1E,MAAKmhD,KAAMnkD,KAAKmuE,kBAAmBzmE,KAI3CymE,kBAAmB,SAAWzmE,GAE7B,GAAI0mE,GAAKpuE,KAAK8B,EAAI4F,EAAE5F,EAAGusE,EAAKruE,KAAK+B,EAAI2F,EAAE3F,CACvC,OAAOqsE,GAAKA,EAAKC,EAAKA,GAIvBC,oBAAqB,SAAW5mE,GAE/B,MAAO1E,MAAK+sC,IAAK/vC,KAAK8B,EAAI4F,EAAE5F,GAAMkB,KAAK+sC,IAAK/vC,KAAK+B,EAAI2F,EAAE3F,IAIxDmmE,UAAW,SAAWliE,GAErB,MAAOhG,MAAK4tC,eAAgB5nC,EAAShG,KAAKgG,WAI3CujD,KAAM,SAAW7hD,EAAGu1C,GAKnB,MAHAj9C,MAAK8B,IAAO4F,EAAE5F,EAAI9B,KAAK8B,GAAMm7C,EAC7Bj9C,KAAK+B,IAAO2F,EAAE3F,EAAI/B,KAAK+B,GAAMk7C,EAEtBj9C,MAIRuuE,YAAa,SAAW3lB,EAAIC,EAAI5L,GAE/B,MAAOj9C,MAAKysD,WAAY5D,EAAID,GAAKhb,eAAgBqP,GAAQl8B,IAAK6nC,IAI/DxmB,OAAQ,SAAW16B,GAElB,MAAWA,GAAE5F,IAAM9B,KAAK8B,GAAS4F,EAAE3F,IAAM/B,KAAK+B,GAI/CqjD,UAAW,SAAW1+C,EAAO7C,GAO5B,MALgBT,UAAXS,IAAuBA,EAAS,GAErC7D,KAAK8B,EAAI4E,EAAO7C,GAChB7D,KAAK+B,EAAI2E,EAAO7C,EAAS,GAElB7D,MAIRiH,QAAS,SAAWP,EAAO7C,GAQ1B,MANeT,UAAVsD,IAAsBA,MACXtD,SAAXS,IAAuBA,EAAS,GAErC6C,EAAO7C,GAAW7D,KAAK8B,EACvB4E,EAAO7C,EAAS,GAAM7D,KAAK+B,EAEpB2E,GAIR8nE,cAAe,SAAW70C,EAAWtR,EAAOxkB,GAS3C,MAPgBT,UAAXS,IAAuBA,EAAS,GAErCwkB,EAAQA,EAAQsR,EAAUnU,SAAW3hB,EAErC7D,KAAK8B,EAAI63B,EAAUjzB,MAAO2hB,GAC1BroB,KAAK+B,EAAI43B,EAAUjzB,MAAO2hB,EAAQ,GAE3BroB,MAIRyuE,aAAc,SAAW30D,EAAQm+B,GAEhC,GAAI3zB,GAAIthB,KAAKg1C,IAAKC,GAASma,EAAIpvD,KAAKyoD,IAAKxT,GAErCn2C,EAAI9B,KAAK8B,EAAIgY,EAAOhY,EACpBC,EAAI/B,KAAK+B,EAAI+X,EAAO/X,CAKxB,OAHA/B,MAAK8B,EAAIA,EAAIwiB,EAAIviB,EAAIqwD,EAAIt4C,EAAOhY,EAChC9B,KAAK+B,EAAID,EAAIswD,EAAIrwD,EAAIuiB,EAAIxK,EAAO/X,EAEzB/B,OAyDTgC,EAAQqB,cAAgBD,OACxBpB,EAAQuB,gBAAkBqnE,GAE1B5oE,EAAQ+7D,WAEP1I,YAAarzD,EAEbw0B,WAAW,EAEX+nC,GAAI1pD,aAAahS,GAEXA,KAAU,GAAO7C,KAAKoE,WAI5BwY,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWmpD,GA2BhB,MAzBAr7D,MAAKiC,MAAQo5D,EAAOp5D,MACpBjC,KAAKsD,QAAU+3D,EAAO/3D,QAAQ4gD,MAAO,GAErClkD,KAAKkC,QAAUm5D,EAAOn5D,QAEtBlC,KAAKmC,MAAQk5D,EAAOl5D,MACpBnC,KAAKoC,MAAQi5D,EAAOj5D,MAEpBpC,KAAKqC,UAAYg5D,EAAOh5D,UACxBrC,KAAKsC,UAAY+4D,EAAO/4D,UAExBtC,KAAKyC,WAAa44D,EAAO54D,WAEzBzC,KAAKuC,OAAS84D,EAAO94D,OACrBvC,KAAKwC,KAAO64D,EAAO74D,KAEnBxC,KAAK6D,OAAOqO,KAAMmpD,EAAOx3D,QACzB7D,KAAK8D,OAAOoO,KAAMmpD,EAAOv3D,QAEzB9D,KAAK+D,gBAAkBs3D,EAAOt3D,gBAC9B/D,KAAKgE,iBAAmBq3D,EAAOr3D,iBAC/BhE,KAAKiE,MAAQo3D,EAAOp3D,MACpBjE,KAAKkE,gBAAkBm3D,EAAOn3D,gBAC9BlE,KAAK0C,SAAW24D,EAAO34D,SAEhB1C,MAIR0uE,OAAQ,SAAWC,GAQlB,QAASC,GAAY3sE,GAEpB,GAAIsS,EAgBJ,OAdyBnR,UAApBnB,EAAM4sE,UAEVt6D,EAAStS,GAITsS,EAASC,SAASC,gBAAiB,+BAAgC,UACnEF,EAAOlU,MAAQ4B,EAAM5B,MACrBkU,EAAOjU,OAAS2B,EAAM3B,OAEtBiU,EAAOG,WAAY,MAAO0mB,UAAWn5B,EAAO,EAAG,EAAGA,EAAM5B,MAAO4B,EAAM3B,SAIjEiU,EAAOlU,MAAQ,MAAQkU,EAAOjU,OAAS,KAEpCiU,EAAOs6D,UAAW,aAAc,IAIhCt6D,EAAOs6D,UAAW,aA9B3B,GAAoCzrE,SAA/BurE,EAAKxyC,SAAUn8B,KAAK+C,MAExB,MAAO4rE,GAAKxyC,SAAUn8B,KAAK+C,KAkC5B,IAAI4mE,IACHmF,UACC1qE,QAAS,IACT5B,KAAM,UACNusE,UAAW,kBAGZhsE,KAAM/C,KAAK+C,KACXG,KAAMlD,KAAKkD,KAEXhB,QAASlC,KAAKkC,QAEd4B,QAAU9D,KAAK8D,OAAOhC,EAAG9B,KAAK8D,OAAO/B,GACrC8B,QAAU7D,KAAK6D,OAAO/B,EAAG9B,KAAK6D,OAAO9B,GACrCitE,MAAQhvE,KAAKmC,MAAOnC,KAAKoC,OAEzBE,UAAWtC,KAAKsC,UAChBD,UAAWrC,KAAKqC,UAChBI,WAAYzC,KAAKyC,WAEjBwB,MAAOjE,KAAKiE,MAGb,IAAoBb,SAAfpD,KAAKiC,MAAsB,CAI/B,GAAIA,GAAQjC,KAAKiC,KAEGmB,UAAfnB,EAAMc,OAEVd,EAAMc,KAAOvB,EAAQwB,KAAKC,gBAIQG,SAA9BurE,EAAKvoE,OAAQnE,EAAMc,QAEvB4rE,EAAKvoE,OAAQnE,EAAMc,OAClBA,KAAMd,EAAMc,KACZywD,IAAKob,EAAY3sE,KAKnB0nE,EAAO1nE,MAAQA,EAAMc,KAMtB,MAFA4rE,GAAKxyC,SAAUn8B,KAAK+C,MAAS4mE,EAEtBA,GAIR9sC,QAAS,WAER78B,KAAKmqE,eAAiB3nE,KAAM,aAI7BysE,YAAa,SAAW1/D,GAEvB,GAAKvP,KAAKkC,UAAY0oE,GAAtB,CAKA,GAHAr7D,EAAG+R,SAAUthB,KAAK8D,QAClByL,EAAGwR,IAAK/gB,KAAK6D,QAER0L,EAAGzN,EAAI,GAAKyN,EAAGzN,EAAI,EAEvB,OAAS9B,KAAKmC,OAEb,IAAKs2C,IAEJlpC,EAAGzN,EAAIyN,EAAGzN,EAAIkB,KAAK6nB,MAAOtb,EAAGzN,EAC7B,MAED,KAAK0B,IAEJ+L,EAAGzN,EAAIyN,EAAGzN,EAAI,EAAI,EAAI,CACtB,MAED,KAAK62C,IAEwC,IAAvC31C,KAAK+sC,IAAK/sC,KAAK6nB,MAAOtb,EAAGzN,GAAM,GAEnCyN,EAAGzN,EAAIkB,KAAKqhD,KAAM90C,EAAGzN,GAAMyN,EAAGzN,EAI9ByN,EAAGzN,EAAIyN,EAAGzN,EAAIkB,KAAK6nB,MAAOtb,EAAGzN,GASjC,GAAKyN,EAAGxN,EAAI,GAAKwN,EAAGxN,EAAI,EAEvB,OAAS/B,KAAKoC,OAEb,IAAKq2C,IAEJlpC,EAAGxN,EAAIwN,EAAGxN,EAAIiB,KAAK6nB,MAAOtb,EAAGxN,EAC7B,MAED,KAAKyB,IAEJ+L,EAAGxN,EAAIwN,EAAGxN,EAAI,EAAI,EAAI,CACtB,MAED,KAAK42C,IAEwC,IAAvC31C,KAAK+sC,IAAK/sC,KAAK6nB,MAAOtb,EAAGxN,GAAM,GAEnCwN,EAAGxN,EAAIiB,KAAKqhD,KAAM90C,EAAGxN,GAAMwN,EAAGxN,EAI9BwN,EAAGxN,EAAIwN,EAAGxN,EAAIiB,KAAK6nB,MAAOtb,EAAGxN,GAS5B/B,KAAKiE,QAETsL,EAAGxN,EAAI,EAAIwN,EAAGxN,MAQjBY,OAAO+mE,OAAQ1nE,EAAQ+7D,UAAWn8D,EAAgBm8D,UAElD,IAAIz5D,IAAQ,CAoBZC,GAAQw5D,WAEP1I,YAAa9wD,EAEb2qE,WAAW,EAEXxiE,IAAK,SAAW5K,EAAGC,EAAGyC,EAAGhE,GAOxB,MALAR,MAAK8B,EAAIA,EACT9B,KAAK+B,EAAIA,EACT/B,KAAKwE,EAAIA,EACTxE,KAAKQ,EAAIA,EAEFR,MAIRktE,UAAW,SAAWC,GAOrB,MALAntE,MAAK8B,EAAIqrE,EACTntE,KAAK+B,EAAIorE,EACTntE,KAAKwE,EAAI2oE,EACTntE,KAAKQ,EAAI2sE,EAEFntE,MAIR8sD,KAAM,SAAWhrD,GAIhB,MAFA9B,MAAK8B,EAAIA,EAEF9B,MAIRotE,KAAM,SAAWrrE,GAIhB,MAFA/B,MAAK+B,EAAIA,EAEF/B,MAIRmvE,KAAM,SAAW3qE,GAIhB,MAFAxE,MAAKwE,EAAIA,EAEFxE,MAIRovE,KAAM,SAAW5uE,GAIhB,MAFAR,MAAKQ,EAAIA,EAEFR,MAIRqtE,aAAc,SAAWhlD,EAAOxlB,GAE/B,OAASwlB,GAER,IAAK,GAAGroB,KAAK8B,EAAIe,CAAO,MACxB,KAAK,GAAG7C,KAAK+B,EAAIc,CAAO,MACxB,KAAK,GAAG7C,KAAKwE,EAAI3B,CAAO,MACxB,KAAK,GAAG7C,KAAKQ,EAAIqC,CAAO,MACxB,SAAS,KAAM,IAAIksB,OAAO,0BAA4B1G,KAMxDilD,aAAc,SAAWjlD,GAExB,OAASA,GAER,IAAK,GAAG,MAAOroB,MAAK8B,CACpB,KAAK,GAAG,MAAO9B,MAAK+B,CACpB,KAAK,GAAG,MAAO/B,MAAKwE,CACpB,KAAK,GAAG,MAAOxE,MAAKQ,CACpB,SAAS,KAAM,IAAIuuB,OAAO,0BAA4B1G,KAMxDzL,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAK8B,EAAG9B,KAAK+B,EAAG/B,KAAKwE,EAAGxE,KAAKQ,IAI3D0R,KAAM,SAAWxK,GAOhB,MALA1H,MAAK8B,EAAI4F,EAAE5F,EACX9B,KAAK+B,EAAI2F,EAAE3F,EACX/B,KAAKwE,EAAIkD,EAAElD,EACXxE,KAAKQ,EAAc4C,SAARsE,EAAElH,EAAoBkH,EAAElH,EAAI,EAEhCR,MAIR+gB,IAAK,SAAWrZ,EAAGlH,GAElB,MAAW4C,UAAN5C,GAEJyF,QAAQgc,KAAM,yFACPjiB,KAAK0sD,WAAYhlD,EAAGlH,KAI5BR,KAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EACZ/B,KAAKwE,GAAKkD,EAAElD,EACZxE,KAAKQ,GAAKkH,EAAElH,EAELR,OAIRutE,UAAW,SAAWnb,GAOrB,MALApyD,MAAK8B,GAAKswD,EACVpyD,KAAK+B,GAAKqwD,EACVpyD,KAAKwE,GAAK4tD,EACVpyD,KAAKQ,GAAK4xD,EAEHpyD,MAIR0sD,WAAY,SAAW33C,EAAG1M,GAOzB,MALArI,MAAK8B,EAAIiT,EAAEjT,EAAIuG,EAAEvG,EACjB9B,KAAK+B,EAAIgT,EAAEhT,EAAIsG,EAAEtG,EACjB/B,KAAKwE,EAAIuQ,EAAEvQ,EAAI6D,EAAE7D,EACjBxE,KAAKQ,EAAIuU,EAAEvU,EAAI6H,EAAE7H,EAEVR,MAIRwtE,gBAAiB,SAAW9lE,EAAG0qD,GAO9B,MALApyD,MAAK8B,GAAK4F,EAAE5F,EAAIswD,EAChBpyD,KAAK+B,GAAK2F,EAAE3F,EAAIqwD,EAChBpyD,KAAKwE,GAAKkD,EAAElD,EAAI4tD,EAChBpyD,KAAKQ,GAAKkH,EAAElH,EAAI4xD,EAETpyD,MAIR43C,IAAK,SAAWlwC,EAAGlH,GAElB,MAAW4C,UAAN5C,GAEJyF,QAAQgc,KAAM,yFACPjiB,KAAKysD,WAAY/kD,EAAGlH,KAI5BR,KAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EACZ/B,KAAKwE,GAAKkD,EAAElD,EACZxE,KAAKQ,GAAKkH,EAAElH,EAELR,OAIRytE,UAAW,SAAWrb,GAOrB,MALApyD,MAAK8B,GAAKswD,EACVpyD,KAAK+B,GAAKqwD,EACVpyD,KAAKwE,GAAK4tD,EACVpyD,KAAKQ,GAAK4xD,EAEHpyD,MAIRysD,WAAY,SAAW13C,EAAG1M,GAOzB,MALArI,MAAK8B,EAAIiT,EAAEjT,EAAIuG,EAAEvG,EACjB9B,KAAK+B,EAAIgT,EAAEhT,EAAIsG,EAAEtG,EACjB/B,KAAKwE,EAAIuQ,EAAEvQ,EAAI6D,EAAE7D,EACjBxE,KAAKQ,EAAIuU,EAAEvU,EAAI6H,EAAE7H,EAEVR,MAIR4tC,eAAgB,SAAWu/B,GAkB1B,MAhBKO,UAAUP,IAEdntE,KAAK8B,GAAKqrE,EACVntE,KAAK+B,GAAKorE,EACVntE,KAAKwE,GAAK2oE,EACVntE,KAAKQ,GAAK2sE,IAIVntE,KAAK8B,EAAI,EACT9B,KAAK+B,EAAI,EACT/B,KAAKwE,EAAI,EACTxE,KAAKQ,EAAI,GAIHR,MAIR8R,aAAc,SAAW+5D,GAExB,GAAI/pE,GAAI9B,KAAK8B,EAAGC,EAAI/B,KAAK+B,EAAGyC,EAAIxE,KAAKwE,EAAGhE,EAAIR,KAAKQ,EAC7C6uE,EAAIxD,EAAEhmE,QAOV,OALA7F,MAAK8B,EAAIutE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAM7qE,EAAI6qE,EAAG,IAAO7uE,EAC1DR,KAAK+B,EAAIstE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAM7qE,EAAI6qE,EAAG,IAAO7uE,EAC1DR,KAAKwE,EAAI6qE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,IAAO7qE,EAAI6qE,EAAG,IAAO7uE,EAC3DR,KAAKQ,EAAI6uE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,IAAO7qE,EAAI6qE,EAAG,IAAO7uE,EAEpDR,MAIRgpD,aAAc,SAAWmkB,GAExB,MAAOntE,MAAK4tC,eAAgB,EAAIu/B,IAIjCmC,2BAA4B,SAAWzjB,GAMtC7rD,KAAKQ,EAAI,EAAIwC,KAAKusE,KAAM1jB,EAAErrD,EAE1B,IAAI4xD,GAAIpvD,KAAKmhD,KAAM,EAAI0H,EAAErrD,EAAIqrD,EAAErrD,EAgB/B,OAdS,MAAJ4xD,GAEHpyD,KAAK8B,EAAI,EACT9B,KAAK+B,EAAI,EACT/B,KAAKwE,EAAI,IAITxE,KAAK8B,EAAI+pD,EAAE/pD,EAAIswD,EACfpyD,KAAK+B,EAAI8pD,EAAE9pD,EAAIqwD,EACfpyD,KAAKwE,EAAIqnD,EAAErnD,EAAI4tD,GAIVpyD,MAIRwvE,+BAAgC,SAAW3D,GAM1C,GAAI5zB,GAAOn2C,EAAGC,EAAGyC,EAChBirE,EAAU,IACVC,EAAW,GAEXC,EAAK9D,EAAEhmE,SAEP+pE,EAAMD,EAAI,GAAKE,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GACxCI,EAAMJ,EAAI,GAAKK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GACxCO,EAAMP,EAAI,GAAKQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,GAEzC,IAAO3sE,KAAK+sC,IAAK8/B,EAAME,GAAQN,GACxBzsE,KAAK+sC,IAAK+/B,EAAMI,GAAQT,GACxBzsE,KAAK+sC,IAAKkgC,EAAME,GAAQV,EAAY,CAM1C,GAAOzsE,KAAK+sC,IAAK8/B,EAAME,GAAQL,GACxB1sE,KAAK+sC,IAAK+/B,EAAMI,GAAQR,GACxB1sE,KAAK+sC,IAAKkgC,EAAME,GAAQT,GACxB1sE,KAAK+sC,IAAK6/B,EAAMI,EAAMI,EAAM,GAAMV,EAMxC,MAFA1vE,MAAK0M,IAAK,EAAG,EAAG,EAAG,GAEZ1M,IAMRi4C,GAAQj1C,KAAKylD,EAEb,IAAI4nB,IAAOT,EAAM,GAAM,EACnBU,GAAON,EAAM,GAAM,EACnBO,GAAOH,EAAM,GAAM,EACnBI,GAAOX,EAAME,GAAQ,EACrBU,GAAOX,EAAMI,GAAQ,EACrBQ,GAAOT,EAAME,GAAQ,CA4DzB,OA1DOE,GAAKC,GAAUD,EAAKE,EAIhBd,EAALY,GAEJvuE,EAAI,EACJC,EAAI,WACJyC,EAAI,aAIJ1C,EAAIkB,KAAKmhD,KAAMksB,GACftuE,EAAIyuE,EAAK1uE,EACT0C,EAAIisE,EAAK3uE,GAICwuE,EAAKC,EAINd,EAALa,GAEJxuE,EAAI,WACJC,EAAI,EACJyC,EAAI,aAIJzC,EAAIiB,KAAKmhD,KAAMmsB,GACfxuE,EAAI0uE,EAAKzuE,EACTyC,EAAIksE,EAAK3uE,GAQA0tE,EAALc,GAEJzuE,EAAI,WACJC,EAAI,WACJyC,EAAI,IAIJA,EAAIxB,KAAKmhD,KAAMosB,GACfzuE,EAAI2uE,EAAKjsE,EACTzC,EAAI2uE,EAAKlsE,GAMXxE,KAAK0M,IAAK5K,EAAGC,EAAGyC,EAAGyzC,GAEZj4C,KAMR,GAAIoyD,GAAIpvD,KAAKmhD,MAAQgsB,EAAMF,IAAUE,EAAMF,IACtBH,EAAMI,IAAUJ,EAAMI,IACtBH,EAAMF,IAAUE,EAAMF,GAY3C,OAVK7sE,MAAK+sC,IAAKqiB,GAAM,OAAQA,EAAI,GAKjCpyD,KAAK8B,GAAMquE,EAAMF,GAAQ7d,EACzBpyD,KAAK+B,GAAM+tE,EAAMI,GAAQ9d,EACzBpyD,KAAKwE,GAAMurE,EAAMF,GAAQzd,EACzBpyD,KAAKQ,EAAIwC,KAAKusE,MAAQK,EAAMI,EAAMI,EAAM,GAAM,GAEvCpwE,MAIR6M,IAAK,SAAWnF,GAOf,MALA1H,MAAK8B,EAAIkB,KAAK6J,IAAK7M,KAAK8B,EAAG4F,EAAE5F,GAC7B9B,KAAK+B,EAAIiB,KAAK6J,IAAK7M,KAAK+B,EAAG2F,EAAE3F,GAC7B/B,KAAKwE,EAAIxB,KAAK6J,IAAK7M,KAAKwE,EAAGkD,EAAElD,GAC7BxE,KAAKQ,EAAIwC,KAAK6J,IAAK7M,KAAKQ,EAAGkH,EAAElH,GAEtBR,MAIR8M,IAAK,SAAWpF,GAOf,MALA1H,MAAK8B,EAAIkB,KAAK8J,IAAK9M,KAAK8B,EAAG4F,EAAE5F,GAC7B9B,KAAK+B,EAAIiB,KAAK8J,IAAK9M,KAAK+B,EAAG2F,EAAE3F,GAC7B/B,KAAKwE,EAAIxB,KAAK8J,IAAK9M,KAAKwE,EAAGkD,EAAElD,GAC7BxE,KAAKQ,EAAIwC,KAAK8J,IAAK9M,KAAKQ,EAAGkH,EAAElH,GAEtBR,MAIR0vD,MAAO,SAAW7iD,EAAKC,GAStB,MALA9M,MAAK8B,EAAIkB,KAAK8J,IAAKD,EAAI/K,EAAGkB,KAAK6J,IAAKC,EAAIhL,EAAG9B,KAAK8B,IAChD9B,KAAK+B,EAAIiB,KAAK8J,IAAKD,EAAI9K,EAAGiB,KAAK6J,IAAKC,EAAI/K,EAAG/B,KAAK+B,IAChD/B,KAAKwE,EAAIxB,KAAK8J,IAAKD,EAAIrI,EAAGxB,KAAK6J,IAAKC,EAAItI,EAAGxE,KAAKwE,IAChDxE,KAAKQ,EAAIwC,KAAK8J,IAAKD,EAAIrM,EAAGwC,KAAK6J,IAAKC,EAAItM,EAAGR,KAAKQ,IAEzCR,MAIR4tE,YAAa,WAEZ,GAAI/gE,GAAKC,CAET,OAAO,UAAsB+gE,EAAQC,GAYpC,MAVa1qE,UAARyJ,IAEJA,EAAM,GAAItI,GACVuI,EAAM,GAAIvI,IAIXsI,EAAIH,IAAKmhE,EAAQA,EAAQA,EAAQA,GACjC/gE,EAAIJ,IAAKohE,EAAQA,EAAQA,EAAQA,GAE1B9tE,KAAK0vD,MAAO7iD,EAAKC,OAM1B+d,MAAO,WAON,MALA7qB,MAAK8B,EAAIkB,KAAK6nB,MAAO7qB,KAAK8B,GAC1B9B,KAAK+B,EAAIiB,KAAK6nB,MAAO7qB,KAAK+B,GAC1B/B,KAAKwE,EAAIxB,KAAK6nB,MAAO7qB,KAAKwE,GAC1BxE,KAAKQ,EAAIwC,KAAK6nB,MAAO7qB,KAAKQ,GAEnBR,MAIRqkD,KAAM,WAOL,MALArkD,MAAK8B,EAAIkB,KAAKqhD,KAAMrkD,KAAK8B,GACzB9B,KAAK+B,EAAIiB,KAAKqhD,KAAMrkD,KAAK+B,GACzB/B,KAAKwE,EAAIxB,KAAKqhD,KAAMrkD,KAAKwE,GACzBxE,KAAKQ,EAAIwC,KAAKqhD,KAAMrkD,KAAKQ,GAElBR,MAIRgtE,MAAO,WAON,MALAhtE,MAAK8B,EAAIkB,KAAKgqE,MAAOhtE,KAAK8B,GAC1B9B,KAAK+B,EAAIiB,KAAKgqE,MAAOhtE,KAAK+B,GAC1B/B,KAAKwE,EAAIxB,KAAKgqE,MAAOhtE,KAAKwE,GAC1BxE,KAAKQ,EAAIwC,KAAKgqE,MAAOhtE,KAAKQ,GAEnBR,MAIRguE,YAAa,WAOZ,MALAhuE,MAAK8B,EAAM9B,KAAK8B,EAAI,EAAMkB,KAAKqhD,KAAMrkD,KAAK8B,GAAMkB,KAAK6nB,MAAO7qB,KAAK8B,GACjE9B,KAAK+B,EAAM/B,KAAK+B,EAAI,EAAMiB,KAAKqhD,KAAMrkD,KAAK+B,GAAMiB,KAAK6nB,MAAO7qB,KAAK+B,GACjE/B,KAAKwE,EAAMxE,KAAKwE,EAAI,EAAMxB,KAAKqhD,KAAMrkD,KAAKwE,GAAMxB,KAAK6nB,MAAO7qB,KAAKwE,GACjExE,KAAKQ,EAAMR,KAAKQ,EAAI,EAAMwC,KAAKqhD,KAAMrkD,KAAKQ,GAAMwC,KAAK6nB,MAAO7qB,KAAKQ,GAE1DR,MAIRm4C,OAAQ,WAOP,MALAn4C,MAAK8B,GAAM9B,KAAK8B,EAChB9B,KAAK+B,GAAM/B,KAAK+B,EAChB/B,KAAKwE,GAAMxE,KAAKwE,EAChBxE,KAAKQ,GAAMR,KAAKQ,EAETR,MAIR2wD,IAAK,SAAWjpD,GAEf,MAAO1H,MAAK8B,EAAI4F,EAAE5F,EAAI9B,KAAK+B,EAAI2F,EAAE3F,EAAI/B,KAAKwE,EAAIkD,EAAElD,EAAIxE,KAAKQ,EAAIkH,EAAElH,GAIhEytE,SAAU,WAET,MAAOjuE,MAAK8B,EAAI9B,KAAK8B,EAAI9B,KAAK+B,EAAI/B,KAAK+B,EAAI/B,KAAKwE,EAAIxE,KAAKwE,EAAIxE,KAAKQ,EAAIR,KAAKQ,GAI5EwF,OAAQ,WAEP,MAAOhD,MAAKmhD,KAAMnkD,KAAK8B,EAAI9B,KAAK8B,EAAI9B,KAAK+B,EAAI/B,KAAK+B,EAAI/B,KAAKwE,EAAIxE,KAAKwE,EAAIxE,KAAKQ,EAAIR,KAAKQ,IAIvF0tE,gBAAiB,WAEhB,MAAOlrE,MAAK+sC,IAAK/vC,KAAK8B,GAAMkB,KAAK+sC,IAAK/vC,KAAK+B,GAAMiB,KAAK+sC,IAAK/vC,KAAKwE,GAAMxB,KAAK+sC,IAAK/vC,KAAKQ,IAItF+3C,UAAW,WAEV,MAAOv4C,MAAKgpD,aAAchpD,KAAKgG,WAIhCkiE,UAAW,SAAWliE,GAErB,MAAOhG,MAAK4tC,eAAgB5nC,EAAShG,KAAKgG,WAI3CujD,KAAM,SAAW7hD,EAAGu1C,GAOnB,MALAj9C,MAAK8B,IAAO4F,EAAE5F,EAAI9B,KAAK8B,GAAMm7C,EAC7Bj9C,KAAK+B,IAAO2F,EAAE3F,EAAI/B,KAAK+B,GAAMk7C,EAC7Bj9C,KAAKwE,IAAOkD,EAAElD,EAAIxE,KAAKwE,GAAMy4C,EAC7Bj9C,KAAKQ,IAAOkH,EAAElH,EAAIR,KAAKQ,GAAMy8C,EAEtBj9C,MAIRuuE,YAAa,SAAW3lB,EAAIC,EAAI5L,GAE/B,MAAOj9C,MAAKysD,WAAY5D,EAAID,GAAKhb,eAAgBqP,GAAQl8B,IAAK6nC,IAI/DxmB,OAAQ,SAAW16B,GAElB,MAAWA,GAAE5F,IAAM9B,KAAK8B,GAAS4F,EAAE3F,IAAM/B,KAAK+B,GAAS2F,EAAElD,IAAMxE,KAAKwE,GAASkD,EAAElH,IAAMR,KAAKQ,GAI3F4kD,UAAW,SAAW1+C,EAAO7C,GAS5B,MAPgBT,UAAXS,IAAuBA,EAAS,GAErC7D,KAAK8B,EAAI4E,EAAO7C,GAChB7D,KAAK+B,EAAI2E,EAAO7C,EAAS,GACzB7D,KAAKwE,EAAIkC,EAAO7C,EAAS,GACzB7D,KAAKQ,EAAIkG,EAAO7C,EAAS,GAElB7D,MAIRiH,QAAS,SAAWP,EAAO7C,GAU1B,MAReT,UAAVsD,IAAsBA,MACXtD,SAAXS,IAAuBA,EAAS,GAErC6C,EAAO7C,GAAW7D,KAAK8B,EACvB4E,EAAO7C,EAAS,GAAM7D,KAAK+B,EAC3B2E,EAAO7C,EAAS,GAAM7D,KAAKwE,EAC3BkC,EAAO7C,EAAS,GAAM7D,KAAKQ,EAEpBkG,GAIR8nE,cAAe,SAAW70C,EAAWtR,EAAOxkB,GAW3C,MATgBT,UAAXS,IAAuBA,EAAS,GAErCwkB,EAAQA,EAAQsR,EAAUnU,SAAW3hB,EAErC7D,KAAK8B,EAAI63B,EAAUjzB,MAAO2hB,GAC1BroB,KAAK+B,EAAI43B,EAAUjzB,MAAO2hB,EAAQ,GAClCroB,KAAKwE,EAAIm1B,EAAUjzB,MAAO2hB,EAAQ,GAClCroB,KAAKQ,EAAIm5B,EAAUjzB,MAAO2hB,EAAQ,GAE3BroB,OAyCT2C,OAAO+mE,OAAQjlE,EAAkBs5D,UAAWn8D,EAAgBm8D,WAE3DtnC,qBAAqB,EAErB+oB,QAAS,SAAWn/C,EAAOC,IAErBN,KAAKK,QAAUA,GAASL,KAAKM,SAAWA,KAE5CN,KAAKK,MAAQA,EACbL,KAAKM,OAASA,EAEdN,KAAK68B,WAIN78B,KAAK6E,SAAS6H,IAAK,EAAG,EAAGrM,EAAOC,GAChCN,KAAK2E,QAAQ+H,IAAK,EAAG,EAAGrM,EAAOC,IAIhCsc,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWmpD,GAahB,MAXAr7D,MAAKK,MAAQg7D,EAAOh7D,MACpBL,KAAKM,OAAS+6D,EAAO/6D,OAErBN,KAAK6E,SAASqN,KAAMmpD,EAAOx2D,UAE3B7E,KAAK8E,QAAUu2D,EAAOv2D,QAAQ8X,QAE9B5c,KAAK+E,YAAcs2D,EAAOt2D,YAC1B/E,KAAKgF,cAAgBq2D,EAAOr2D,cAC5BhF,KAAKiF,aAAeo2D,EAAOp2D,aAEpBjF,MAIR68B,QAAS,WAER78B,KAAKmqE,eAAiB3nE,KAAM,eAmB9B0C,EAAsB64D,UAAYp7D,OAAOguE,OAAQlsE,EAAkBs5D,WACnE74D,EAAsB64D,UAAU1I,YAAcnwD,EAE9CA,EAAsB64D,UAAUjhC,yBAA0B,EAkB1Dx3B,EAAWy4D,WAEV1I,YAAa/vD,EAEbi5D,GAAIz8D,KAEH,MAAO9B,MAAKuF,IAIbg5D,GAAIz8D,GAAIe,GAEP7C,KAAKuF,GAAK1C,EACV7C,KAAK4wE,oBAINrS,GAAIx8D,KAEH,MAAO/B,MAAKwF,IAIb+4D,GAAIx8D,GAAIc,GAEP7C,KAAKwF,GAAK3C,EACV7C,KAAK4wE,oBAINrS,GAAI/5D,KAEH,MAAOxE,MAAKyF,IAIb84D,GAAI/5D,GAAI3B,GAEP7C,KAAKyF,GAAK5C,EACV7C,KAAK4wE,oBAINrS,GAAI/9D,KAEH,MAAOR,MAAK0F,IAIb64D,GAAI/9D,GAAIqC,GAEP7C,KAAK0F,GAAK7C,EACV7C,KAAK4wE,oBAINlkE,IAAK,SAAW5K,EAAGC,EAAGyC,EAAGhE,GASxB,MAPAR,MAAKuF,GAAKzD,EACV9B,KAAKwF,GAAKzD,EACV/B,KAAKyF,GAAKjB,EACVxE,KAAK0F,GAAKlF,EAEVR,KAAK4wE,mBAEE5wE,MAIR4c,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAKuF,GAAIvF,KAAKwF,GAAIxF,KAAKyF,GAAIzF,KAAK0F,KAI9DwM,KAAM,SAAW8Q,GAShB,MAPAhjB,MAAKuF,GAAKyd,EAAWlhB,EACrB9B,KAAKwF,GAAKwd,EAAWjhB,EACrB/B,KAAKyF,GAAKud,EAAWxe,EACrBxE,KAAK0F,GAAKsd,EAAWxiB,EAErBR,KAAK4wE,mBAEE5wE,MAIRijB,aAAc,SAAW4tD,EAAOtwD,GAE/B,IAAMswD,GAASA,EAAMC,YAAa,EAEjC,KAAM,IAAI/hD,OAAO,kGAQlB,IAAIgiD,GAAK/tE,KAAKg1C,IAAK64B,EAAMtrE,GAAK,GAC1ByrE,EAAKhuE,KAAKg1C,IAAK64B,EAAMrrE,GAAK,GAC1ByrE,EAAKjuE,KAAKg1C,IAAK64B,EAAMprE,GAAK,GAC1ByrE,EAAKluE,KAAKyoD,IAAKolB,EAAMtrE,GAAK,GAC1B4rE,EAAKnuE,KAAKyoD,IAAKolB,EAAMrrE,GAAK,GAC1B4rE,EAAKpuE,KAAKyoD,IAAKolB,EAAMprE,GAAK,GAE1Bid,EAAQmuD,EAAMnuD;AAgDlB,MA9Ce,QAAVA,GAEJ1iB,KAAKuF,GAAK2rE,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnCpxE,KAAKwF,GAAKurE,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnCpxE,KAAKyF,GAAKsrE,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCjxE,KAAK0F,GAAKqrE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAEd,QAAV1uD,GAEX1iB,KAAKuF,GAAK2rE,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnCpxE,KAAKwF,GAAKurE,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnCpxE,KAAKyF,GAAKsrE,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCjxE,KAAK0F,GAAKqrE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAEd,QAAV1uD,GAEX1iB,KAAKuF,GAAK2rE,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnCpxE,KAAKwF,GAAKurE,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnCpxE,KAAKyF,GAAKsrE,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCjxE,KAAK0F,GAAKqrE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAEd,QAAV1uD,GAEX1iB,KAAKuF,GAAK2rE,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnCpxE,KAAKwF,GAAKurE,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnCpxE,KAAKyF,GAAKsrE,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCjxE,KAAK0F,GAAKqrE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAEd,QAAV1uD,GAEX1iB,KAAKuF,GAAK2rE,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnCpxE,KAAKwF,GAAKurE,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnCpxE,KAAKyF,GAAKsrE,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCjxE,KAAK0F,GAAKqrE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAEd,QAAV1uD,IAEX1iB,KAAKuF,GAAK2rE,EAAKF,EAAKC,EAAKF,EAAKI,EAAKC,EACnCpxE,KAAKwF,GAAKurE,EAAKI,EAAKF,EAAKC,EAAKF,EAAKI,EACnCpxE,KAAKyF,GAAKsrE,EAAKC,EAAKI,EAAKF,EAAKC,EAAKF,EACnCjxE,KAAK0F,GAAKqrE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAI/B7wD,KAAW,GAAQvgB,KAAK4wE,mBAEtB5wE,MAIRqxE,iBAAkB,SAAWC,EAAMr5B,GAMlC,GAAIs5B,GAAYt5B,EAAQ,EAAGma,EAAIpvD,KAAKyoD,IAAK8lB,EASzC,OAPAvxE,MAAKuF,GAAK+rE,EAAKxvE,EAAIswD,EACnBpyD,KAAKwF,GAAK8rE,EAAKvvE,EAAIqwD,EACnBpyD,KAAKyF,GAAK6rE,EAAK9sE,EAAI4tD,EACnBpyD,KAAK0F,GAAK1C,KAAKg1C,IAAKu5B,GAEpBvxE,KAAK4wE,mBAEE5wE,MAIRwxE,sBAAuB,SAAW3F,GAMjC,GAOCzZ,GAPGud,EAAK9D,EAAEhmE,SAEV+pE,EAAMD,EAAI,GAAKE,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GACxCI,EAAMJ,EAAI,GAAKK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GACxCO,EAAMP,EAAI,GAAKQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,IAExC8B,EAAQ7B,EAAMI,EAAMI,CA2CrB,OAxCKqB,GAAQ,GAEZrf,EAAI,GAAMpvD,KAAKmhD,KAAMstB,EAAQ,GAE7BzxE,KAAK0F,GAAK,IAAO0sD,EACjBpyD,KAAKuF,IAAO4qE,EAAMF,GAAQ7d,EAC1BpyD,KAAKwF,IAAOsqE,EAAMI,GAAQ9d,EAC1BpyD,KAAKyF,IAAOsqE,EAAMF,GAAQzd,GAEfwd,EAAMI,GAAOJ,EAAMQ,GAE9Bhe,EAAI,EAAMpvD,KAAKmhD,KAAM,EAAMyrB,EAAMI,EAAMI,GAEvCpwE,KAAK0F,IAAOyqE,EAAMF,GAAQ7d,EAC1BpyD,KAAKuF,GAAK,IAAO6sD,EACjBpyD,KAAKwF,IAAOqqE,EAAME,GAAQ3d,EAC1BpyD,KAAKyF,IAAOqqE,EAAMI,GAAQ9d,GAEf4d,EAAMI,GAEjBhe,EAAI,EAAMpvD,KAAKmhD,KAAM,EAAM6rB,EAAMJ,EAAMQ,GAEvCpwE,KAAK0F,IAAOoqE,EAAMI,GAAQ9d,EAC1BpyD,KAAKuF,IAAOsqE,EAAME,GAAQ3d,EAC1BpyD,KAAKwF,GAAK,IAAO4sD,EACjBpyD,KAAKyF,IAAOwqE,EAAME,GAAQ/d,IAI1BA,EAAI,EAAMpvD,KAAKmhD,KAAM,EAAMisB,EAAMR,EAAMI,GAEvChwE,KAAK0F,IAAOqqE,EAAMF,GAAQzd,EAC1BpyD,KAAKuF,IAAOuqE,EAAMI,GAAQ9d,EAC1BpyD,KAAKwF,IAAOyqE,EAAME,GAAQ/d,EAC1BpyD,KAAKyF,GAAK,IAAO2sD,GAIlBpyD,KAAK4wE,mBAEE5wE,MAIR0xE,mBAAoB,WAMnB,GAAI9oB,GAAI7hD,EAEJ4qE,EAAM,IAEV,OAAO,UAA6BC,EAAOC,GA+B1C,MA7BYzuE,UAAPwlD,IAAmBA,EAAK,GAAIjjD,IAEjCoB,EAAI6qE,EAAMjhB,IAAKkhB,GAAQ,EAEdF,EAAJ5qE,GAEJA,EAAI,EAEC/D,KAAK+sC,IAAK6hC,EAAM9vE,GAAMkB,KAAK+sC,IAAK6hC,EAAMptE,GAE1CokD,EAAGl8C,KAAOklE,EAAM7vE,EAAG6vE,EAAM9vE,EAAG,GAI5B8mD,EAAGl8C,IAAK,GAAKklE,EAAMptE,EAAGotE,EAAM7vE,IAM7B6mD,EAAG+D,aAAcilB,EAAOC,GAIzB7xE,KAAKuF,GAAKqjD,EAAG9mD,EACb9B,KAAKwF,GAAKojD,EAAG7mD,EACb/B,KAAKyF,GAAKmjD,EAAGpkD,EACbxE,KAAK0F,GAAKqB,EAEH/G,KAAKu4C,gBAMdu5B,QAAS,WAER,MAAO9xE,MAAK+xE,YAAYx5B,aAIzBw5B,UAAW,WAQV,MANA/xE,MAAKuF,IAAM,GACXvF,KAAKwF,IAAM,GACXxF,KAAKyF,IAAM,GAEXzF,KAAK4wE,mBAEE5wE,MAIR2wD,IAAK,SAAWjpD,GAEf,MAAO1H,MAAKuF,GAAKmC,EAAEnC,GAAKvF,KAAKwF,GAAKkC,EAAElC,GAAKxF,KAAKyF,GAAKiC,EAAEjC,GAAKzF,KAAK0F,GAAKgC,EAAEhC,IAIvEuoE,SAAU,WAET,MAAOjuE,MAAKuF,GAAKvF,KAAKuF,GAAKvF,KAAKwF,GAAKxF,KAAKwF,GAAKxF,KAAKyF,GAAKzF,KAAKyF,GAAKzF,KAAK0F,GAAK1F,KAAK0F,IAInFM,OAAQ,WAEP,MAAOhD,MAAKmhD,KAAMnkD,KAAKuF,GAAKvF,KAAKuF,GAAKvF,KAAKwF,GAAKxF,KAAKwF,GAAKxF,KAAKyF,GAAKzF,KAAKyF,GAAKzF,KAAK0F,GAAK1F,KAAK0F,KAI9F6yC,UAAW,WAEV,GAAI5mC,GAAI3R,KAAKgG,QAsBb,OApBW,KAAN2L,GAEJ3R,KAAKuF,GAAK,EACVvF,KAAKwF,GAAK,EACVxF,KAAKyF,GAAK,EACVzF,KAAK0F,GAAK,IAIViM,EAAI,EAAIA,EAER3R,KAAKuF,GAAKvF,KAAKuF,GAAKoM,EACpB3R,KAAKwF,GAAKxF,KAAKwF,GAAKmM,EACpB3R,KAAKyF,GAAKzF,KAAKyF,GAAKkM,EACpB3R,KAAK0F,GAAK1F,KAAK0F,GAAKiM,GAIrB3R,KAAK4wE,mBAEE5wE,MAIRshB,SAAU,SAAWuqC,EAAGrzB,GAEvB,MAAWp1B,UAANo1B,GAEJvyB,QAAQgc,KAAM,0GACPjiB,KAAKgyE,oBAAqBnmB,EAAGrzB,IAI9Bx4B,KAAKgyE,oBAAqBhyE,KAAM6rD,IAIxComB,YAAa,SAAWpmB,GAEvB,MAAO7rD,MAAKgyE,oBAAqBnmB,EAAG7rD,OAIrCgyE,oBAAqB,SAAWj9D,EAAG1M,GAIlC,GAAI6pE,GAAMn9D,EAAExP,GAAI4sE,EAAMp9D,EAAEvP,GAAI4sE,EAAMr9D,EAAEtP,GAAI4sE,EAAMt9D,EAAErP,GAC5C4sE,EAAMjqE,EAAE9C,GAAIgtE,EAAMlqE,EAAE7C,GAAIgtE,EAAMnqE,EAAE5C,GAAIgtE,EAAMpqE,EAAE3C,EAShD,OAPA1F,MAAKuF,GAAK2sE,EAAMO,EAAMJ,EAAMC,EAAMH,EAAMK,EAAMJ,EAAMG,EACpDvyE,KAAKwF,GAAK2sE,EAAMM,EAAMJ,EAAME,EAAMH,EAAME,EAAMJ,EAAMM,EACpDxyE,KAAKyF,GAAK2sE,EAAMK,EAAMJ,EAAMG,EAAMN,EAAMK,EAAMJ,EAAMG,EACpDtyE,KAAK0F,GAAK2sE,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAEpDxyE,KAAK4wE,mBAEE5wE,MAIR0yE,MAAO,SAAWC,EAAIzoB,GAErB,GAAW,IAANA,EAAU,MAAOlqD,KACtB,IAAW,IAANkqD,EAAU,MAAOlqD,MAAKkS,KAAMygE,EAEjC,IAAI7wE,GAAI9B,KAAKuF,GAAIxD,EAAI/B,KAAKwF,GAAIhB,EAAIxE,KAAKyF,GAAIjF,EAAIR,KAAK0F,GAIhDktE,EAAepyE,EAAImyE,EAAGjtE,GAAK5D,EAAI6wE,EAAGptE,GAAKxD,EAAI4wE,EAAGntE,GAAKhB,EAAImuE,EAAGltE,EAiB9D,IAfoB,EAAfmtE,GAEJ5yE,KAAK0F,IAAOitE,EAAGjtE,GACf1F,KAAKuF,IAAOotE,EAAGptE,GACfvF,KAAKwF,IAAOmtE,EAAGntE,GACfxF,KAAKyF,IAAOktE,EAAGltE,GAEfmtE,GAAiBA,GAIjB5yE,KAAKkS,KAAMygE,GAIPC,GAAgB,EAOpB,MALA5yE,MAAK0F,GAAKlF,EACVR,KAAKuF,GAAKzD,EACV9B,KAAKwF,GAAKzD,EACV/B,KAAKyF,GAAKjB,EAEHxE,IAIR,IAAI6yE,GAAe7vE,KAAKmhD,KAAM,EAAMyuB,EAAeA,EAEnD,IAAK5vE,KAAK+sC,IAAK8iC,GAAiB,KAO/B,MALA7yE,MAAK0F,GAAK,IAAQlF,EAAIR,KAAK0F,IAC3B1F,KAAKuF,GAAK,IAAQzD,EAAI9B,KAAKuF,IAC3BvF,KAAKwF,GAAK,IAAQzD,EAAI/B,KAAKwF,IAC3BxF,KAAKyF,GAAK,IAAQjB,EAAIxE,KAAKyF,IAEpBzF,IAIR,IAAI8yE,GAAY9vE,KAAK0mD,MAAOmpB,EAAcD,GACtCG,EAAS/vE,KAAKyoD,KAAO,EAAIvB,GAAM4oB,GAAcD,EACjDG,EAAShwE,KAAKyoD,IAAKvB,EAAI4oB,GAAcD,CASrC,OAPA7yE,MAAK0F,GAAOlF,EAAIuyE,EAAS/yE,KAAK0F,GAAKstE,EACnChzE,KAAKuF,GAAOzD,EAAIixE,EAAS/yE,KAAKuF,GAAKytE,EACnChzE,KAAKwF,GAAOzD,EAAIgxE,EAAS/yE,KAAKwF,GAAKwtE,EACnChzE,KAAKyF,GAAOjB,EAAIuuE,EAAS/yE,KAAKyF,GAAKutE,EAEnChzE,KAAK4wE,mBAEE5wE,MAIRoiC,OAAQ,SAAWpf,GAElB,MAASA,GAAWzd,KAAOvF,KAAKuF,IAAUyd,EAAWxd,KAAOxF,KAAKwF,IAAUwd,EAAWvd,KAAOzF,KAAKyF,IAAUud,EAAWtd,KAAO1F,KAAK0F,IAIpI0/C,UAAW,SAAW1+C,EAAO7C,GAW5B,MATgBT,UAAXS,IAAuBA,EAAS,GAErC7D,KAAKuF,GAAKmB,EAAO7C,GACjB7D,KAAKwF,GAAKkB,EAAO7C,EAAS,GAC1B7D,KAAKyF,GAAKiB,EAAO7C,EAAS,GAC1B7D,KAAK0F,GAAKgB,EAAO7C,EAAS,GAE1B7D,KAAK4wE,mBAEE5wE,MAIRiH,QAAS,SAAWP,EAAO7C,GAU1B,MAReT,UAAVsD,IAAsBA,MACXtD,SAAXS,IAAuBA,EAAS,GAErC6C,EAAO7C,GAAW7D,KAAKuF,GACvBmB,EAAO7C,EAAS,GAAM7D,KAAKwF,GAC3BkB,EAAO7C,EAAS,GAAM7D,KAAKyF,GAC3BiB,EAAO7C,EAAS,GAAM7D,KAAK0F,GAEpBgB,GAIR6c,SAAU,SAAW0vD,GAIpB,MAFAjzE,MAAK4wE,iBAAmBqC,EAEjBjzE,MAIR4wE,iBAAkB,cAInBjuE,OAAO+mE,OAAQpkE,GAEdotE,MAAO,SAAUQ,EAAIP,EAAIQ,EAAIjpB,GAE5B,MAAOipB,GAAGjhE,KAAMghE,GAAKR,MAAOC,EAAIzoB,IAIjCkpB,UAAW,SACTC,EAAKtnC,EAAWunC,EAAMC,EAAYC,EAAMC,EAAYvpB,GAIrD,GAAIP,GAAK2pB,EAAMC,EAAa,GAC3BG,EAAKJ,EAAMC,EAAa,GACxBI,EAAKL,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GAExB3pB,EAAK4pB,EAAMC,EAAa,GACxBI,EAAKL,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,EAEzB,IAAKG,IAAOG,GAAMpqB,IAAOC,GAAM8pB,IAAOG,GAAMF,IAAOG,EAAK,CAEvD,GAAI1hB,GAAI,EAAIlI,EAEXlS,EAAM2R,EAAKC,EAAK8pB,EAAKG,EAAKF,EAAKG,EAAKF,EAAKG,EAEzCpM,EAAQ3vB,GAAO,EAAI,EAAI,GACvBg8B,EAAS,EAAIh8B,EAAMA,CAGpB,IAAKg8B,EAASzK,OAAOC,QAAU,CAE9B,GAAI/d,GAAMzoD,KAAKmhD,KAAM6vB,GACpBC,EAAMjxE,KAAK0mD,MAAO+B,EAAKzT,EAAM2vB,EAE9BvV,GAAIpvD,KAAKyoD,IAAK2G,EAAI6hB,GAAQxoB,EAC1BvB,EAAIlnD,KAAKyoD,IAAKvB,EAAI+pB,GAAQxoB,EAI3B,GAAIyoB,GAAOhqB,EAAIyd,CAQf,IANAhe,EAAKA,EAAKyI,EAAIxI,EAAKsqB,EACnBR,EAAKA,EAAKthB,EAAIyhB,EAAKK,EACnBP,EAAKA,EAAKvhB,EAAI0hB,EAAKI,EACnBN,EAAKA,EAAKxhB,EAAI2hB,EAAKG,EAGd9hB,IAAM,EAAIlI,EAAI,CAElB,GAAItuB,GAAI,EAAI54B,KAAKmhD,KAAMwF,EAAKA,EAAK+pB,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAE1DjqB,IAAM/tB,EACN83C,GAAM93C,EACN+3C,GAAM/3C,EACNg4C,GAAMh4C,GAMRy3C,EAAKtnC,GAAc4d,EACnB0pB,EAAKtnC,EAAY,GAAM2nC,EACvBL,EAAKtnC,EAAY,GAAM4nC,EACvBN,EAAKtnC,EAAY,GAAM6nC,KAuBzBjuE,EAAQo4D,WAEP1I,YAAa1vD,EAEb6e,WAAW,EAEX9X,IAAK,SAAW5K,EAAGC,EAAGyC,GAMrB,MAJAxE,MAAK8B,EAAIA,EACT9B,KAAK+B,EAAIA,EACT/B,KAAKwE,EAAIA,EAEFxE,MAIRktE,UAAW,SAAWC,GAMrB,MAJAntE,MAAK8B,EAAIqrE,EACTntE,KAAK+B,EAAIorE,EACTntE,KAAKwE,EAAI2oE,EAEFntE,MAIR8sD,KAAM,SAAWhrD,GAIhB,MAFA9B,MAAK8B,EAAIA,EAEF9B,MAIRotE,KAAM,SAAWrrE,GAIhB,MAFA/B,MAAK+B,EAAIA,EAEF/B,MAIRmvE,KAAM,SAAW3qE,GAIhB,MAFAxE,MAAKwE,EAAIA,EAEFxE,MAIRqtE,aAAc,SAAWhlD,EAAOxlB,GAE/B,OAASwlB,GAER,IAAK,GAAGroB,KAAK8B,EAAIe,CAAO,MACxB,KAAK,GAAG7C,KAAK+B,EAAIc,CAAO,MACxB,KAAK,GAAG7C,KAAKwE,EAAI3B,CAAO,MACxB,SAAS,KAAM,IAAIksB,OAAO,0BAA4B1G,KAMxDilD,aAAc,SAAWjlD,GAExB,OAASA,GAER,IAAK,GAAG,MAAOroB,MAAK8B,CACpB,KAAK,GAAG,MAAO9B,MAAK+B,CACpB,KAAK,GAAG,MAAO/B,MAAKwE,CACpB,SAAS,KAAM,IAAIuqB,OAAO,0BAA4B1G,KAMxDzL,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAK8B,EAAG9B,KAAK+B,EAAG/B,KAAKwE,IAInD0N,KAAM,SAAWxK,GAMhB,MAJA1H,MAAK8B,EAAI4F,EAAE5F,EACX9B,KAAK+B,EAAI2F,EAAE3F,EACX/B,KAAKwE,EAAIkD,EAAElD,EAEJxE,MAIR+gB,IAAK,SAAWrZ,EAAGlH,GAElB,MAAW4C,UAAN5C,GAEJyF,QAAQgc,KAAM,yFACPjiB,KAAK0sD,WAAYhlD,EAAGlH,KAI5BR,KAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EACZ/B,KAAKwE,GAAKkD,EAAElD,EAELxE,OAIRutE,UAAW,SAAWnb,GAMrB,MAJApyD,MAAK8B,GAAKswD,EACVpyD,KAAK+B,GAAKqwD,EACVpyD,KAAKwE,GAAK4tD,EAEHpyD,MAIR0sD,WAAY,SAAW33C,EAAG1M,GAMzB,MAJArI,MAAK8B,EAAIiT,EAAEjT,EAAIuG,EAAEvG,EACjB9B,KAAK+B,EAAIgT,EAAEhT,EAAIsG,EAAEtG,EACjB/B,KAAKwE,EAAIuQ,EAAEvQ,EAAI6D,EAAE7D,EAEVxE,MAIRwtE,gBAAiB,SAAW9lE,EAAG0qD,GAM9B,MAJApyD,MAAK8B,GAAK4F,EAAE5F,EAAIswD,EAChBpyD,KAAK+B,GAAK2F,EAAE3F,EAAIqwD,EAChBpyD,KAAKwE,GAAKkD,EAAElD,EAAI4tD,EAETpyD,MAIR43C,IAAK,SAAWlwC,EAAGlH,GAElB,MAAW4C,UAAN5C,GAEJyF,QAAQgc,KAAM,yFACPjiB,KAAKysD,WAAY/kD,EAAGlH,KAI5BR,KAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EACZ/B,KAAKwE,GAAKkD,EAAElD,EAELxE,OAIRytE,UAAW,SAAWrb,GAMrB,MAJApyD,MAAK8B,GAAKswD,EACVpyD,KAAK+B,GAAKqwD,EACVpyD,KAAKwE,GAAK4tD,EAEHpyD,MAIRysD,WAAY,SAAW13C,EAAG1M,GAMzB,MAJArI,MAAK8B,EAAIiT,EAAEjT,EAAIuG,EAAEvG,EACjB9B,KAAK+B,EAAIgT,EAAEhT,EAAIsG,EAAEtG,EACjB/B,KAAKwE,EAAIuQ,EAAEvQ,EAAI6D,EAAE7D,EAEVxE,MAIRshB,SAAU,SAAW5Z,EAAGlH,GAEvB,MAAW4C,UAAN5C,GAEJyF,QAAQgc,KAAM,mGACPjiB,KAAKm0E,gBAAiBzsE,EAAGlH,KAIjCR,KAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EACZ/B,KAAKwE,GAAKkD,EAAElD,EAELxE,OAIR4tC,eAAgB,SAAWu/B,GAgB1B,MAdKO,UAAUP,IAEdntE,KAAK8B,GAAKqrE,EACVntE,KAAK+B,GAAKorE,EACVntE,KAAKwE,GAAK2oE,IAIVntE,KAAK8B,EAAI,EACT9B,KAAK+B,EAAI,EACT/B,KAAKwE,EAAI,GAIHxE,MAIRm0E,gBAAiB,SAAWp/D,EAAG1M,GAM9B,MAJArI,MAAK8B,EAAIiT,EAAEjT,EAAIuG,EAAEvG,EACjB9B,KAAK+B,EAAIgT,EAAEhT,EAAIsG,EAAEtG,EACjB/B,KAAKwE,EAAIuQ,EAAEvQ,EAAI6D,EAAE7D,EAEVxE,MAIRo0E,WAAY,WAEX,GAAIpxD,EAEJ,OAAO,UAAqB6tD,GAU3B,OARMA,GAASA,EAAMC,YAAa,GAEjC7qE,QAAQC,MAAO,+FAII9C,SAAf4f,IAA2BA,EAAa,GAAI1d,IAE1CtF,KAAKq0E,gBAAiBrxD,EAAWC,aAAc4tD,QAMxDyD,eAAgB,WAEf,GAAItxD,EAEJ,OAAO,UAAyBsuD,EAAMr5B,GAIrC,MAFoB70C,UAAf4f,IAA2BA,EAAa,GAAI1d,IAE1CtF,KAAKq0E,gBAAiBrxD,EAAWquD,iBAAkBC,EAAMr5B,QAMlEs8B,aAAc,SAAW1I,GAExB,GAAI/pE,GAAI9B,KAAK8B,EAAGC,EAAI/B,KAAK+B,EAAGyC,EAAIxE,KAAKwE,EACjC6qE,EAAIxD,EAAEhmE,QAMV,OAJA7F,MAAK8B,EAAIutE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAM7qE,EAC5CxE,KAAK+B,EAAIstE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAM7qE,EAC5CxE,KAAKwE,EAAI6qE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAM7qE,EAErCxE,MAIR8R,aAAc,SAAW+5D,GAIxB,GAAI/pE,GAAI9B,KAAK8B,EAAGC,EAAI/B,KAAK+B,EAAGyC,EAAIxE,KAAKwE,EACjC6qE,EAAIxD,EAAEhmE,QAMV,OAJA7F,MAAK8B,EAAIutE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAO7qE,EAAI6qE,EAAG,IACpDrvE,KAAK+B,EAAIstE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAO7qE,EAAI6qE,EAAG,IACpDrvE,KAAKwE,EAAI6qE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,IAAO7qE,EAAI6qE,EAAG,IAE7CrvE,MAIRgS,gBAAiB,SAAW65D,GAI3B,GAAI/pE,GAAI9B,KAAK8B,EAAGC,EAAI/B,KAAK+B,EAAGyC,EAAIxE,KAAKwE,EACjC6qE,EAAIxD,EAAEhmE,SACNsjB,EAAI,GAAMkmD,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,IAAO7qE,EAAI6qE,EAAG,IAMzD,OAJArvE,MAAK8B,GAAMutE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAO7qE,EAAI6qE,EAAG,KAASlmD,EAC/DnpB,KAAK+B,GAAMstE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAO7qE,EAAI6qE,EAAG,KAASlmD,EAC/DnpB,KAAKwE,GAAM6qE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,IAAO7qE,EAAI6qE,EAAG,KAASlmD,EAExDnpB,MAIRq0E,gBAAiB,SAAWxoB,GAE3B,GAAI/pD,GAAI9B,KAAK8B,EAAGC,EAAI/B,KAAK+B,EAAGyC,EAAIxE,KAAKwE,EACjCgwE,EAAK3oB,EAAE/pD,EAAG2yE,EAAK5oB,EAAE9pD,EAAG2yE,EAAK7oB,EAAErnD,EAAGmwE,EAAK9oB,EAAErrD,EAIrC8pB,EAAMqqD,EAAK7yE,EAAI2yE,EAAKjwE,EAAIkwE,EAAK3yE,EAC7BsoB,EAAMsqD,EAAK5yE,EAAI2yE,EAAK5yE,EAAI0yE,EAAKhwE,EAC7BowE,EAAMD,EAAKnwE,EAAIgwE,EAAKzyE,EAAI0yE,EAAK3yE,EAC7B+yE,GAAOL,EAAK1yE,EAAI2yE,EAAK1yE,EAAI2yE,EAAKlwE,CAQlC,OAJAxE,MAAK8B,EAAIwoB,EAAKqqD,EAAKE,GAAOL,EAAKnqD,GAAOqqD,EAAKE,GAAOH,EAClDz0E,KAAK+B,EAAIsoB,EAAKsqD,EAAKE,GAAOJ,EAAKG,GAAOJ,EAAKlqD,GAAOoqD,EAClD10E,KAAKwE,EAAIowE,EAAKD,EAAKE,GAAOH,EAAKpqD,GAAOmqD,EAAKpqD,GAAOmqD,EAE3Cx0E,MAIRkpE,QAAS,WAER,GAAIxoD,EAEJ,OAAO,UAAkB/P,GAKxB,MAHgBvN,UAAXsd,IAAuBA,EAAS,GAAI9a,IAEzC8a,EAAO9K,iBAAkBjF,EAAOsB,iBAAkByO,EAAOW,WAAY1Q,EAAOkB,cACrE7R,KAAKgS,gBAAiB0O,OAM/B0oD,UAAW,WAEV,GAAI1oD,EAEJ,OAAO,UAAoB/P,GAK1B,MAHgBvN,UAAXsd,IAAuBA,EAAS,GAAI9a,IAEzC8a,EAAO9K,iBAAkBjF,EAAOkB,YAAa6O,EAAOW,WAAY1Q,EAAOsB,mBAChEjS,KAAKgS,gBAAiB0O,OAM/Bm3B,mBAAoB,SAAWg0B,GAK9B,GAAI/pE,GAAI9B,KAAK8B,EAAGC,EAAI/B,KAAK+B,EAAGyC,EAAIxE,KAAKwE,EACjC6qE,EAAIxD,EAAEhmE,QAMV,OAJA7F,MAAK8B,EAAIutE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAO7qE,EAC7CxE,KAAK+B,EAAIstE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,GAAO7qE,EAC7CxE,KAAKwE,EAAI6qE,EAAG,GAAMvtE,EAAIutE,EAAG,GAAMttE,EAAIstE,EAAG,IAAO7qE,EAEtCxE,KAAKu4C,aAIbo1B,OAAQ,SAAWjmE,GAMlB,MAJA1H,MAAK8B,GAAK4F,EAAE5F,EACZ9B,KAAK+B,GAAK2F,EAAE3F,EACZ/B,KAAKwE,GAAKkD,EAAElD,EAELxE,MAIRgpD,aAAc,SAAWmkB,GAExB,MAAOntE,MAAK4tC,eAAgB,EAAIu/B,IAIjCtgE,IAAK,SAAWnF,GAMf,MAJA1H,MAAK8B,EAAIkB,KAAK6J,IAAK7M,KAAK8B,EAAG4F,EAAE5F,GAC7B9B,KAAK+B,EAAIiB,KAAK6J,IAAK7M,KAAK+B,EAAG2F,EAAE3F,GAC7B/B,KAAKwE,EAAIxB,KAAK6J,IAAK7M,KAAKwE,EAAGkD,EAAElD,GAEtBxE,MAIR8M,IAAK,SAAWpF,GAMf,MAJA1H,MAAK8B,EAAIkB,KAAK8J,IAAK9M,KAAK8B,EAAG4F,EAAE5F,GAC7B9B,KAAK+B,EAAIiB,KAAK8J,IAAK9M,KAAK+B,EAAG2F,EAAE3F,GAC7B/B,KAAKwE,EAAIxB,KAAK8J,IAAK9M,KAAKwE,EAAGkD,EAAElD,GAEtBxE,MAIR0vD,MAAO,SAAW7iD,EAAKC,GAQtB,MAJA9M,MAAK8B,EAAIkB,KAAK8J,IAAKD,EAAI/K,EAAGkB,KAAK6J,IAAKC,EAAIhL,EAAG9B,KAAK8B,IAChD9B,KAAK+B,EAAIiB,KAAK8J,IAAKD,EAAI9K,EAAGiB,KAAK6J,IAAKC,EAAI/K,EAAG/B,KAAK+B,IAChD/B,KAAKwE,EAAIxB,KAAK8J,IAAKD,EAAIrI,EAAGxB,KAAK6J,IAAKC,EAAItI,EAAGxE,KAAKwE,IAEzCxE,MAIR4tE,YAAa,WAEZ,GAAI/gE,GAAKC,CAET,OAAO,UAAsB+gE,EAAQC,GAYpC,MAVa1qE,UAARyJ,IAEJA,EAAM,GAAIlH,GACVmH,EAAM,GAAInH,IAIXkH,EAAIH,IAAKmhE,EAAQA,EAAQA,GACzB/gE,EAAIJ,IAAKohE,EAAQA,EAAQA,GAElB9tE,KAAK0vD,MAAO7iD,EAAKC,OAM1BihE,YAAa,SAAWlhE,EAAKC,GAE5B,GAAI9G,GAAShG,KAAKgG,QAElB,OAAOhG,MAAK4tC,eAAgB5qC,KAAK8J,IAAKD,EAAK7J,KAAK6J,IAAKC,EAAK9G,IAAaA,IAIxE6kB,MAAO,WAMN,MAJA7qB,MAAK8B,EAAIkB,KAAK6nB,MAAO7qB,KAAK8B,GAC1B9B,KAAK+B,EAAIiB,KAAK6nB,MAAO7qB,KAAK+B,GAC1B/B,KAAKwE,EAAIxB,KAAK6nB,MAAO7qB,KAAKwE,GAEnBxE,MAIRqkD,KAAM,WAML,MAJArkD,MAAK8B,EAAIkB,KAAKqhD,KAAMrkD,KAAK8B,GACzB9B,KAAK+B,EAAIiB,KAAKqhD,KAAMrkD,KAAK+B,GACzB/B,KAAKwE,EAAIxB,KAAKqhD,KAAMrkD,KAAKwE,GAElBxE,MAIRgtE,MAAO,WAMN,MAJAhtE,MAAK8B,EAAIkB,KAAKgqE,MAAOhtE,KAAK8B,GAC1B9B,KAAK+B,EAAIiB,KAAKgqE,MAAOhtE,KAAK+B,GAC1B/B,KAAKwE,EAAIxB,KAAKgqE,MAAOhtE,KAAKwE,GAEnBxE,MAIRguE,YAAa,WAMZ,MAJAhuE,MAAK8B,EAAM9B,KAAK8B,EAAI,EAAMkB,KAAKqhD,KAAMrkD,KAAK8B,GAAMkB,KAAK6nB,MAAO7qB,KAAK8B,GACjE9B,KAAK+B,EAAM/B,KAAK+B,EAAI,EAAMiB,KAAKqhD,KAAMrkD,KAAK+B,GAAMiB,KAAK6nB,MAAO7qB,KAAK+B,GACjE/B,KAAKwE,EAAMxE,KAAKwE,EAAI,EAAMxB,KAAKqhD,KAAMrkD,KAAKwE,GAAMxB,KAAK6nB,MAAO7qB,KAAKwE,GAE1DxE,MAIRm4C,OAAQ,WAMP,MAJAn4C,MAAK8B,GAAM9B,KAAK8B,EAChB9B,KAAK+B,GAAM/B,KAAK+B,EAChB/B,KAAKwE,GAAMxE,KAAKwE,EAETxE,MAIR2wD,IAAK,SAAWjpD,GAEf,MAAO1H,MAAK8B,EAAI4F,EAAE5F,EAAI9B,KAAK+B,EAAI2F,EAAE3F,EAAI/B,KAAKwE,EAAIkD,EAAElD,GAIjDypE,SAAU,WAET,MAAOjuE,MAAK8B,EAAI9B,KAAK8B,EAAI9B,KAAK+B,EAAI/B,KAAK+B,EAAI/B,KAAKwE,EAAIxE,KAAKwE,GAI1DwB,OAAQ,WAEP,MAAOhD,MAAKmhD,KAAMnkD,KAAK8B,EAAI9B,KAAK8B,EAAI9B,KAAK+B,EAAI/B,KAAK+B,EAAI/B,KAAKwE,EAAIxE,KAAKwE,IAIrE0pE,gBAAiB,WAEhB,MAAOlrE,MAAK+sC,IAAK/vC,KAAK8B,GAAMkB,KAAK+sC,IAAK/vC,KAAK+B,GAAMiB,KAAK+sC,IAAK/vC,KAAKwE,IAIjE+zC,UAAW,WAEV,MAAOv4C,MAAKgpD,aAAchpD,KAAKgG,WAIhCkiE,UAAW,SAAWliE,GAErB,MAAOhG,MAAK4tC,eAAgB5nC,EAAShG,KAAKgG,WAI3CujD,KAAM,SAAW7hD,EAAGu1C,GAMnB,MAJAj9C,MAAK8B,IAAO4F,EAAE5F,EAAI9B,KAAK8B,GAAMm7C,EAC7Bj9C,KAAK+B,IAAO2F,EAAE3F,EAAI/B,KAAK+B,GAAMk7C,EAC7Bj9C,KAAKwE,IAAOkD,EAAElD,EAAIxE,KAAKwE,GAAMy4C,EAEtBj9C,MAIRuuE,YAAa,SAAW3lB,EAAIC,EAAI5L,GAE/B,MAAOj9C,MAAKysD,WAAY5D,EAAID,GAAKhb,eAAgBqP,GAAQl8B,IAAK6nC,IAI/DksB,MAAO,SAAWptE,EAAGlH,GAEpB,GAAW4C,SAAN5C,EAGJ,MADAyF,SAAQgc,KAAM,6FACPjiB,KAAK2sD,aAAcjlD,EAAGlH,EAI9B,IAAIsB,GAAI9B,KAAK8B,EAAGC,EAAI/B,KAAK+B,EAAGyC,EAAIxE,KAAKwE,CAMrC,OAJAxE,MAAK8B,EAAIC,EAAI2F,EAAElD,EAAIA,EAAIkD,EAAE3F,EACzB/B,KAAK+B,EAAIyC,EAAIkD,EAAE5F,EAAIA,EAAI4F,EAAElD,EACzBxE,KAAKwE,EAAI1C,EAAI4F,EAAE3F,EAAIA,EAAI2F,EAAE5F,EAElB9B,MAIR2sD,aAAc,SAAW53C,EAAG1M,GAE3B,GAAI0sE,GAAKhgE,EAAEjT,EAAGkzE,EAAKjgE,EAAEhT,EAAGkzE,EAAKlgE,EAAEvQ,EAC3B0wE,EAAK7sE,EAAEvG,EAAGqzE,EAAK9sE,EAAEtG,EAAGqzE,EAAK/sE,EAAE7D,CAM/B,OAJAxE,MAAK8B,EAAIkzE,EAAKI,EAAKH,EAAKE,EACxBn1E,KAAK+B,EAAIkzE,EAAKC,EAAKH,EAAKK,EACxBp1E,KAAKwE,EAAIuwE,EAAKI,EAAKH,EAAKE,EAEjBl1E,MAIRq1E,gBAAiB,SAAWjrD,GAE3B,GAAI+iD,GAAS/iD,EAAOumC,IAAK3wD,MAASoqB,EAAO6jD,UAEzC,OAAOjuE,MAAKkS,KAAMkY,GAASwjB,eAAgBu/B,IAI5CmI,eAAgB,WAEf,GAAI1sB,EAEJ,OAAO,UAAyB2sB,GAM/B,MAJYnyE,UAAPwlD,IAAmBA,EAAK,GAAIjjD,IAEjCijD,EAAG12C,KAAMlS,MAAOq1E,gBAAiBE,GAE1Bv1E,KAAK43C,IAAKgR,OAMnB4sB,QAAS,WAKR,GAAI5sB,EAEJ,OAAO,UAAkB1uC,GAIxB,MAFY9W,UAAPwlD,IAAmBA,EAAK,GAAIjjD,IAE1B3F,KAAK43C,IAAKgR,EAAG12C,KAAMgI,GAAS0zB,eAAgB,EAAI5tC,KAAK2wD,IAAKz2C,SAMnEu7D,QAAS,SAAW/tE,GAEnB,GAAI0pD,GAAQpxD,KAAK2wD,IAAKjpD,GAAQ1E,KAAKmhD,KAAMnkD,KAAKiuE,WAAavmE,EAAEumE,WAI7D,OAAOjrE,MAAKusE,KAAM/tE,EAAQwB,KAAK0sD,MAAO0B,EAAO,GAAK,KAInD8S,WAAY,SAAWx8D,GAEtB,MAAO1E,MAAKmhD,KAAMnkD,KAAKmuE,kBAAmBzmE,KAI3CymE,kBAAmB,SAAWzmE,GAE7B,GAAI0mE,GAAKpuE,KAAK8B,EAAI4F,EAAE5F,EAAGusE,EAAKruE,KAAK+B,EAAI2F,EAAE3F,EAAG2zE,EAAK11E,KAAKwE,EAAIkD,EAAElD,CAE1D,OAAO4pE,GAAKA,EAAKC,EAAKA,EAAKqH,EAAKA,GAIjCpH,oBAAqB,SAAW5mE,GAE/B,MAAO1E,MAAK+sC,IAAK/vC,KAAK8B,EAAI4F,EAAE5F,GAAMkB,KAAK+sC,IAAK/vC,KAAK+B,EAAI2F,EAAE3F,GAAMiB,KAAK+sC,IAAK/vC,KAAKwE,EAAIkD,EAAElD,IAInFmxE,iBAAkB,SAAUvjB,GAE3B,GAAIwjB,GAAe5yE,KAAKyoD,IAAK2G,EAAEvC,KAAQuC,EAAEr4C,MAMzC,OAJA/Z,MAAK8B,EAAI8zE,EAAe5yE,KAAKyoD,IAAK2G,EAAEhB,OACpCpxD,KAAK+B,EAAIiB,KAAKg1C,IAAKoa,EAAEvC,KAAQuC,EAAEr4C,OAC/B/Z,KAAKwE,EAAIoxE,EAAe5yE,KAAKg1C,IAAKoa,EAAEhB,OAE7BpxD,MAIR2gB,sBAAuB,SAAWkrD,GAEjC,MAAO7rE,MAAK61E,oBAAqBhK,EAAG,IAIrCiK,mBAAoB,SAAWjK,GAE9B,GAAIkK,GAAK/1E,KAAK61E,oBAAqBhK,EAAG,GAAI7lE,SACtCgwE,EAAKh2E,KAAK61E,oBAAqBhK,EAAG,GAAI7lE,SACtCiwE,EAAKj2E,KAAK61E,oBAAqBhK,EAAG,GAAI7lE,QAM1C,OAJAhG,MAAK8B,EAAIi0E,EACT/1E,KAAK+B,EAAIi0E,EACTh2E,KAAKwE,EAAIyxE,EAEFj2E,MAIR61E,oBAAqB,SAAWhK,EAAGxjD,GAElC,GAAkB,gBAANwjD,GAAiB,CAE5B5lE,QAAQgc,KAAM,oEACd,IAAIi0D,GAAOrK,CACXA,GAAIxjD,EACJA,EAAQ6tD,EAIT,MAAOl2E,MAAKolD,UAAWymB,EAAEhmE,SAAkB,EAARwiB,IAIpC+Z,OAAQ,SAAW16B,GAElB,MAAWA,GAAE5F,IAAM9B,KAAK8B,GAAS4F,EAAE3F,IAAM/B,KAAK+B,GAAS2F,EAAElD,IAAMxE,KAAKwE,GAIrE4gD,UAAW,SAAW1+C,EAAO7C,GAQ5B,MANgBT,UAAXS,IAAuBA,EAAS,GAErC7D,KAAK8B,EAAI4E,EAAO7C,GAChB7D,KAAK+B,EAAI2E,EAAO7C,EAAS,GACzB7D,KAAKwE,EAAIkC,EAAO7C,EAAS,GAElB7D,MAIRiH,QAAS,SAAWP,EAAO7C,GAS1B,MAPeT,UAAVsD,IAAsBA,MACXtD,SAAXS,IAAuBA,EAAS,GAErC6C,EAAO7C,GAAW7D,KAAK8B,EACvB4E,EAAO7C,EAAS,GAAM7D,KAAK+B,EAC3B2E,EAAO7C,EAAS,GAAM7D,KAAKwE,EAEpBkC,GAIR8nE,cAAe,SAAW70C,EAAWtR,EAAOxkB,GAU3C,MARgBT,UAAXS,IAAuBA,EAAS,GAErCwkB,EAAQA,EAAQsR,EAAUnU,SAAW3hB,EAErC7D,KAAK8B,EAAI63B,EAAUjzB,MAAO2hB,GAC1BroB,KAAK+B,EAAI43B,EAAUjzB,MAAO2hB,EAAQ,GAClCroB,KAAKwE,EAAIm1B,EAAUjzB,MAAO2hB,EAAQ,GAE3BroB,OAsCT4F,EAAQm4D,WAEP1I,YAAazvD,EAEbuwE,WAAW,EAEXzpE,IAAK,SAAW0pE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAE1F,GAAIxH,GAAK3vE,KAAK6F,QAOd,OALA8pE,GAAI,GAAMyG,EAAKzG,EAAI,GAAM0G,EAAK1G,EAAI,GAAM2G,EAAK3G,EAAI,IAAO4G,EACxD5G,EAAI,GAAM6G,EAAK7G,EAAI,GAAM8G,EAAK9G,EAAI,GAAM+G,EAAK/G,EAAI,IAAOgH,EACxDhH,EAAI,GAAMiH,EAAKjH,EAAI,GAAMkH,EAAKlH,EAAI,IAAOmH,EAAKnH,EAAI,IAAOoH,EACzDpH,EAAI,GAAMqH,EAAKrH,EAAI,GAAMsH,EAAKtH,EAAI,IAAOuH,EAAKvH,EAAI,IAAOwH,EAElDn3E,MAIRo4C,SAAU,WAWT,MATAp4C,MAAK0M,IAEJ,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIH1M,MAIR4c,MAAO,WAEN,OAAO,GAAIhX,IAAUw/C,UAAWplD,KAAK6F,WAItCqM,KAAM,SAAW25D,GAIhB,MAFA7rE,MAAK6F,SAAS6G,IAAKm/D,EAAEhmE,UAEd7F,MAIRo3E,aAAc,SAAWvL,GAExB,GAAI8D,GAAK3vE,KAAK6F,SACVwxE,EAAKxL,EAAEhmE,QAMX,OAJA8pE,GAAI,IAAO0H,EAAI,IACf1H,EAAI,IAAO0H,EAAI,IACf1H,EAAI,IAAO0H,EAAI,IAERr3E,MAIRs3E,aAAc,SAAWC,EAAOC,EAAOC,GAMtC,MAJAF,GAAM1B,oBAAqB71E,KAAM,GACjCw3E,EAAM3B,oBAAqB71E,KAAM,GACjCy3E,EAAM5B,oBAAqB71E,KAAM,GAE1BA,MAIR03E,UAAW,SAAWH,EAAOC,EAAOC,GASnC,MAPAz3E,MAAK0M,IACJ6qE,EAAMz1E,EAAG01E,EAAM11E,EAAG21E,EAAM31E,EAAG,EAC3By1E,EAAMx1E,EAAGy1E,EAAMz1E,EAAG01E,EAAM11E,EAAG,EAC3Bw1E,EAAM/yE,EAAGgzE,EAAMhzE,EAAGizE,EAAMjzE,EAAG,EAC3B,EAAS,EAAS,EAAS,GAGrBxE,MAIRwiD,gBAAiB,WAEhB,GAAIoG,EAEJ,OAAO,UAA0BijB,GAEpBzoE,SAAPwlD,IAAmBA,EAAK,GAAIjjD,GAEjC,IAAIgqE,GAAK3vE,KAAK6F,SACVwxE,EAAKxL,EAAEhmE,SAEP8xE,EAAS,EAAI/uB,EAAGitB,oBAAqBhK,EAAG,GAAI7lE,SAC5C4xE,EAAS,EAAIhvB,EAAGitB,oBAAqBhK,EAAG,GAAI7lE,SAC5C6xE,EAAS,EAAIjvB,EAAGitB,oBAAqBhK,EAAG,GAAI7lE,QAchD,OAZA2pE,GAAI,GAAM0H,EAAI,GAAMM,EACpBhI,EAAI,GAAM0H,EAAI,GAAMM,EACpBhI,EAAI,GAAM0H,EAAI,GAAMM,EAEpBhI,EAAI,GAAM0H,EAAI,GAAMO,EACpBjI,EAAI,GAAM0H,EAAI,GAAMO,EACpBjI,EAAI,GAAM0H,EAAI,GAAMO,EAEpBjI,EAAI,GAAM0H,EAAI,GAAMQ,EACpBlI,EAAI,GAAM0H,EAAI,GAAMQ,EACpBlI,EAAI,IAAO0H,EAAI,IAAOQ,EAEf73E,SAMT83E,sBAAuB,SAAWjH,IAE3BA,GAASA,EAAMC,YAAa,GAEjC7qE,QAAQC,MAAO,uGAIhB,IAAIypE,GAAK3vE,KAAK6F,SAEV/D,EAAI+uE,EAAM/uE,EAAGC,EAAI8uE,EAAM9uE,EAAGyC,EAAIqsE,EAAMrsE,EACpCuQ,EAAI/R,KAAKg1C,IAAKl2C,GAAKuG,EAAIrF,KAAKyoD,IAAK3pD,GACjCwiB,EAAIthB,KAAKg1C,IAAKj2C,GAAKonB,EAAInmB,KAAKyoD,IAAK1pD,GACjCstE,EAAIrsE,KAAKg1C,IAAKxzC,GAAKo3B,EAAI54B,KAAKyoD,IAAKjnD,EAErC,IAAqB,QAAhBqsE,EAAMnuD,MAAkB,CAE5B,GAAIq1D,GAAKhjE,EAAIs6D,EAAG2I,EAAKjjE,EAAI6mB,EAAGq8C,EAAK5vE,EAAIgnE,EAAG6I,EAAK7vE,EAAIuzB,CAEjD+zC,GAAI,GAAMrrD,EAAI+qD,EACdM,EAAI,IAAQrrD,EAAIsX,EAChB+zC,EAAI,GAAMxmD,EAEVwmD,EAAI,GAAMqI,EAAKC,EAAK9uD,EACpBwmD,EAAI,GAAMoI,EAAKG,EAAK/uD,EACpBwmD,EAAI,IAAQtnE,EAAIic,EAEhBqrD,EAAI,GAAMuI,EAAKH,EAAK5uD,EACpBwmD,EAAI,GAAMsI,EAAKD,EAAK7uD,EACpBwmD,EAAI,IAAO56D,EAAIuP,MAET,IAAqB,QAAhBusD,EAAMnuD,MAAkB,CAEnC,GAAIy1D,GAAK7zD,EAAI+qD,EAAG+I,EAAK9zD,EAAIsX,EAAGy8C,EAAKlvD,EAAIkmD,EAAGiJ,EAAKnvD,EAAIyS,CAEjD+zC,GAAI,GAAMwI,EAAKG,EAAKjwE,EACpBsnE,EAAI,GAAM0I,EAAKhwE,EAAI+vE,EACnBzI,EAAI,GAAM56D,EAAIoU,EAEdwmD,EAAI,GAAM56D,EAAI6mB,EACd+zC,EAAI,GAAM56D,EAAIs6D,EACdM,EAAI,IAAQtnE,EAEZsnE,EAAI,GAAMyI,EAAK/vE,EAAIgwE,EACnB1I,EAAI,GAAM2I,EAAKH,EAAK9vE,EACpBsnE,EAAI,IAAO56D,EAAIuP,MAET,IAAqB,QAAhBusD,EAAMnuD,MAAkB,CAEnC,GAAIy1D,GAAK7zD,EAAI+qD,EAAG+I,EAAK9zD,EAAIsX,EAAGy8C,EAAKlvD,EAAIkmD,EAAGiJ,EAAKnvD,EAAIyS,CAEjD+zC,GAAI,GAAMwI,EAAKG,EAAKjwE,EACpBsnE,EAAI,IAAQ56D,EAAI6mB,EAChB+zC,EAAI,GAAM0I,EAAKD,EAAK/vE,EAEpBsnE,EAAI,GAAMyI,EAAKC,EAAKhwE,EACpBsnE,EAAI,GAAM56D,EAAIs6D,EACdM,EAAI,GAAM2I,EAAKH,EAAK9vE,EAEpBsnE,EAAI,IAAQ56D,EAAIoU,EAChBwmD,EAAI,GAAMtnE,EACVsnE,EAAI,IAAO56D,EAAIuP,MAET,IAAqB,QAAhBusD,EAAMnuD,MAAkB,CAEnC,GAAIq1D,GAAKhjE,EAAIs6D,EAAG2I,EAAKjjE,EAAI6mB,EAAGq8C,EAAK5vE,EAAIgnE,EAAG6I,EAAK7vE,EAAIuzB,CAEjD+zC,GAAI,GAAMrrD,EAAI+qD,EACdM,EAAI,GAAMsI,EAAK9uD,EAAI6uD,EACnBrI,EAAI,GAAMoI,EAAK5uD,EAAI+uD,EAEnBvI,EAAI,GAAMrrD,EAAIsX,EACd+zC,EAAI,GAAMuI,EAAK/uD,EAAI4uD,EACnBpI,EAAI,GAAMqI,EAAK7uD,EAAI8uD,EAEnBtI,EAAI,IAAQxmD,EACZwmD,EAAI,GAAMtnE,EAAIic,EACdqrD,EAAI,IAAO56D,EAAIuP,MAET,IAAqB,QAAhBusD,EAAMnuD,MAAkB,CAEnC,GAAI61D,GAAKxjE,EAAIuP,EAAGk0D,EAAKzjE,EAAIoU,EAAGsvD,EAAKpwE,EAAIic,EAAGo0D,EAAKrwE,EAAI8gB,CAEjDwmD,GAAI,GAAMrrD,EAAI+qD,EACdM,EAAI,GAAM+I,EAAKH,EAAK38C,EACpB+zC,EAAI,GAAM8I,EAAK78C,EAAI48C,EAEnB7I,EAAI,GAAM/zC,EACV+zC,EAAI,GAAM56D,EAAIs6D,EACdM,EAAI,IAAQtnE,EAAIgnE,EAEhBM,EAAI,IAAQxmD,EAAIkmD,EAChBM,EAAI,GAAM6I,EAAK58C,EAAI68C,EACnB9I,EAAI,IAAO4I,EAAKG,EAAK98C,MAEf,IAAqB,QAAhBi1C,EAAMnuD,MAAkB,CAEnC,GAAI61D,GAAKxjE,EAAIuP,EAAGk0D,EAAKzjE,EAAIoU,EAAGsvD,EAAKpwE,EAAIic,EAAGo0D,EAAKrwE,EAAI8gB,CAEjDwmD,GAAI,GAAMrrD,EAAI+qD,EACdM,EAAI,IAAQ/zC,EACZ+zC,EAAI,GAAMxmD,EAAIkmD,EAEdM,EAAI,GAAM4I,EAAK38C,EAAI88C,EACnB/I,EAAI,GAAM56D,EAAIs6D,EACdM,EAAI,GAAM6I,EAAK58C,EAAI68C,EAEnB9I,EAAI,GAAM8I,EAAK78C,EAAI48C,EACnB7I,EAAI,GAAMtnE,EAAIgnE,EACdM,EAAI,IAAO+I,EAAK98C,EAAI28C,EAerB,MAVA5I,GAAI,GAAM,EACVA,EAAI,GAAM,EACVA,EAAI,IAAO,EAGXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EAEJ3vE,MAIR24E,2BAA4B,SAAW9sB,GAEtC,GAAI8jB,GAAK3vE,KAAK6F,SAEV/D,EAAI+pD,EAAE/pD,EAAGC,EAAI8pD,EAAE9pD,EAAGyC,EAAIqnD,EAAErnD,EAAGhE,EAAIqrD,EAAErrD,EACjCqpD,EAAK/nD,EAAIA,EAAG82E,EAAK72E,EAAIA,EAAG82E,EAAKr0E,EAAIA,EACjC6rE,EAAKvuE,EAAI+nD,EAAI2mB,EAAK1uE,EAAI82E,EAAInI,EAAK3uE,EAAI+2E,EACnCvI,EAAKvuE,EAAI62E,EAAIlI,EAAK3uE,EAAI82E,EAAItI,EAAK/rE,EAAIq0E,EACnCC,EAAKt4E,EAAIqpD,EAAIkvB,EAAKv4E,EAAIo4E,EAAII,EAAKx4E,EAAIq4E,CAyBvC,OAvBAlJ,GAAI,GAAM,GAAMW,EAAKC,GACrBZ,EAAI,GAAMa,EAAKwI,EACfrJ,EAAI,GAAMc,EAAKsI,EAEfpJ,EAAI,GAAMa,EAAKwI,EACfrJ,EAAI,GAAM,GAAMU,EAAKE,GACrBZ,EAAI,GAAMe,EAAKoI,EAEfnJ,EAAI,GAAMc,EAAKsI,EACfpJ,EAAI,GAAMe,EAAKoI,EACfnJ,EAAI,IAAO,GAAMU,EAAKC,GAGtBX,EAAI,GAAM,EACVA,EAAI,GAAM,EACVA,EAAI,IAAO,EAGXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EAEJ3vE,MAIRihB,OAAQ,WAEP,GAAInf,GAAGC,EAAGyC,CAEV,OAAO,UAAiBy0E,EAAK93D,EAAQH,GAEzB5d,SAANtB,IAEJA,EAAI,GAAI6D,GACR5D,EAAI,GAAI4D,GACRnB,EAAI,GAAImB,GAIT,IAAIgqE,GAAK3vE,KAAK6F,QA0Bd,OAxBArB,GAAEioD,WAAYwsB,EAAK93D,GAASo3B,YAEN,IAAjB/zC,EAAEypE,aAENzpE,EAAEA,EAAI,GAIP1C,EAAE6qD,aAAc3rC,EAAIxc,GAAI+zC,YAEF,IAAjBz2C,EAAEmsE,aAENzpE,EAAEA,GAAK,KACP1C,EAAE6qD,aAAc3rC,EAAIxc,GAAI+zC,aAIzBx2C,EAAE4qD,aAAcnoD,EAAG1C,GAGnB6tE,EAAI,GAAM7tE,EAAEA,EAAG6tE,EAAI,GAAM5tE,EAAED,EAAG6tE,EAAI,GAAMnrE,EAAE1C,EAC1C6tE,EAAI,GAAM7tE,EAAEC,EAAG4tE,EAAI,GAAM5tE,EAAEA,EAAG4tE,EAAI,GAAMnrE,EAAEzC,EAC1C4tE,EAAI,GAAM7tE,EAAE0C,EAAGmrE,EAAI,GAAM5tE,EAAEyC,EAAGmrE,EAAI,IAAOnrE,EAAEA,EAEpCxE,SAMTshB,SAAU,SAAWuqD,EAAG/kE,GAEvB,MAAW1D,UAAN0D,GAEJb,QAAQgc,KAAM,oGACPjiB,KAAK4V,iBAAkBi2D,EAAG/kE,IAI3B9G,KAAK4V,iBAAkB5V,KAAM6rE,IAIrCoG,YAAa,SAAWpG,GAEvB,MAAO7rE,MAAK4V,iBAAkBi2D,EAAG7rE,OAIlC4V,iBAAkB,SAAWb,EAAG1M,GAE/B,GAAI0vE,GAAKhjE,EAAElP,SACPoyE,EAAK5vE,EAAExC,SACP8pE,EAAK3vE,KAAK6F,SAEVqzE,EAAMnB,EAAI,GAAKoB,EAAMpB,EAAI,GAAKqB,EAAMrB,EAAI,GAAKsB,EAAMtB,EAAI,IACvDuB,EAAMvB,EAAI,GAAKwB,EAAMxB,EAAI,GAAKyB,EAAMzB,EAAI,GAAK0B,EAAM1B,EAAI,IACvD2B,EAAM3B,EAAI,GAAK4B,EAAM5B,EAAI,GAAK6B,EAAM7B,EAAI,IAAM8B,EAAM9B,EAAI,IACxD+B,EAAM/B,EAAI,GAAKgC,EAAMhC,EAAI,GAAKiC,EAAMjC,EAAI,IAAMkC,EAAMlC,EAAI,IAExDmC,EAAMjC,EAAI,GAAKkC,EAAMlC,EAAI,GAAKmC,EAAMnC,EAAI,GAAKoC,EAAMpC,EAAI,IACvDqC,EAAMrC,EAAI,GAAKsC,EAAMtC,EAAI,GAAKuC,EAAMvC,EAAI,GAAKwC,EAAMxC,EAAI,IACvDyC,EAAMzC,EAAI,GAAK0C,EAAM1C,EAAI,GAAK2C,EAAM3C,EAAI,IAAM4C,EAAM5C,EAAI,IACxD6C,EAAM7C,EAAI,GAAK8C,EAAM9C,EAAI,GAAK+C,EAAM/C,EAAI,IAAMgD,EAAMhD,EAAI,GAsB5D,OApBAtI,GAAI,GAAMuJ,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EACpDnL,EAAI,GAAMuJ,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EAAMtB,EAAM0B,EACpDpL,EAAI,GAAMuJ,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAAMvB,EAAM2B,EACpDrL,EAAI,IAAOuJ,EAAMmB,EAAMlB,EAAMsB,EAAMrB,EAAMyB,EAAMxB,EAAM4B,EAErDtL,EAAI,GAAM2J,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EACpDnL,EAAI,GAAM2J,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EAAMlB,EAAMsB,EACpDpL,EAAI,GAAM2J,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAAMnB,EAAMuB,EACpDrL,EAAI,IAAO2J,EAAMe,EAAMd,EAAMkB,EAAMjB,EAAMqB,EAAMpB,EAAMwB,EAErDtL,EAAI,GAAM+J,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EACpDnL,EAAI,GAAM+J,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EAAMd,EAAMkB,EACpDpL,EAAI,IAAO+J,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAAMf,EAAMmB,EACrDrL,EAAI,IAAO+J,EAAMW,EAAMV,EAAMc,EAAMb,EAAMiB,EAAMhB,EAAMoB,EAErDtL,EAAI,GAAMmK,EAAMI,EAAMH,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EACpDnL,EAAI,GAAMmK,EAAMK,EAAMJ,EAAMQ,EAAMP,EAAMW,EAAMV,EAAMc,EACpDpL,EAAI,IAAOmK,EAAMM,EAAML,EAAMS,EAAMR,EAAMY,EAAMX,EAAMe,EACrDrL,EAAI,IAAOmK,EAAMO,EAAMN,EAAMU,EAAMT,EAAMa,EAAMZ,EAAMgB,EAE9Cj7E,MAIRk7E,gBAAiB,SAAWnmE,EAAG1M,EAAGtB,GAEjC,GAAI4oE,GAAK3vE,KAAK6F,QASd,OAPA7F,MAAK4V,iBAAkBb,EAAG1M,GAE1BtB,EAAG,GAAM4oE,EAAI,GAAK5oE,EAAG,GAAM4oE,EAAI,GAAK5oE,EAAG,GAAM4oE,EAAI,GAAK5oE,EAAG,GAAM4oE,EAAI,GACnE5oE,EAAG,GAAM4oE,EAAI,GAAK5oE,EAAG,GAAM4oE,EAAI,GAAK5oE,EAAG,GAAM4oE,EAAI,GAAK5oE,EAAG,GAAM4oE,EAAI,GACnE5oE,EAAG,GAAO4oE,EAAI,GAAK5oE,EAAG,GAAO4oE,EAAI,GAAK5oE,EAAG,IAAO4oE,EAAI,IAAM5oE,EAAG,IAAO4oE,EAAI,IACxE5oE,EAAG,IAAO4oE,EAAI,IAAM5oE,EAAG,IAAO4oE,EAAI,IAAM5oE,EAAG,IAAO4oE,EAAI,IAAM5oE,EAAG,IAAO4oE,EAAI,IAEnE3vE,MAIR4tC,eAAgB,SAAWwkB,GAE1B,GAAIud,GAAK3vE,KAAK6F,QAOd,OALA8pE,GAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,KAAQvd,EACtDud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,KAAQvd,EACtDud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,KAAQvd,EAAGud,EAAI,KAAQvd,EACvDud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,KAAQvd,EAAGud,EAAI,KAAQvd,EAEhDpyD,MAIRm7E,oBAAqB,WAEpB,GAAIvyB,EAEJ,OAAO,UAA8BliD,EAAO7C,EAAQmC,GAEvC5C,SAAPwlD,IAAmBA,EAAK,GAAIjjD,IACjBvC,SAAXS,IAAuBA,EAAS,GACrBT,SAAX4C,IAAuBA,EAASU,EAAMV,OAE3C,KAAM,GAAIkB,GAAI,EAAG+L,EAAIpP,EAAYmC,EAAJkB,EAAYA,GAAK,EAAG+L,GAAK,EAErD21C,EAAGxD,UAAW1+C,EAAOuM,GACrB21C,EAAG92C,aAAc9R,MACjB4oD,EAAG3hD,QAASP,EAAOuM,EAIpB,OAAOvM,OAMT00E,cAAe,WAEd,GAAIxyB,EAEJ,OAAO,UAAwB/uB,EAAQh2B,EAAQmC,GAElC5C,SAAPwlD,IAAmBA,EAAK,GAAIjjD,IACjBvC,SAAXS,IAAuBA,EAAS,GACrBT,SAAX4C,IAAuBA,EAAS6zB,EAAO7zB,OAAS6zB,EAAOrU,SAE5D,KAAM,GAAIte,GAAI,EAAG+L,EAAIpP,EAAYmC,EAAJkB,EAAYA,IAAM+L,IAE9C21C,EAAG9mD,EAAI+3B,EAAOstB,KAAMl0C,GACpB21C,EAAG7mD,EAAI83B,EAAOutB,KAAMn0C,GACpB21C,EAAGpkD,EAAIq1B,EAAOwtB,KAAMp0C,GAEpB21C,EAAG92C,aAAc9R,MAEjB65B,EAAO+yB,OAAQhE,EAAG9mD,EAAG8mD,EAAG7mD,EAAG6mD,EAAGpkD,EAI/B,OAAOq1B,OAMTwhD,YAAa,WAEZ,GAAI1L,GAAK3vE,KAAK6F,SAEVuwE,EAAMzG,EAAI,GAAK0G,EAAM1G,EAAI,GAAK2G,EAAM3G,EAAI,GAAK4G,EAAM5G,EAAI,IACvD6G,EAAM7G,EAAI,GAAK8G,EAAM9G,EAAI,GAAK+G,EAAM/G,EAAI,GAAKgH,EAAMhH,EAAI,IACvDiH,EAAMjH,EAAI,GAAKkH,EAAMlH,EAAI,GAAKmH,EAAMnH,EAAI,IAAMoH,EAAMpH,EAAI,IACxDqH,EAAMrH,EAAI,GAAKsH,EAAMtH,EAAI,GAAKuH,EAAMvH,EAAI,IAAMwH,EAAMxH,EAAI,GAK5D,OACCqH,KACGT,EAAMG,EAAMG,EACXP,EAAMK,EAAME,EACZN,EAAME,EAAMK,EACZT,EAAMM,EAAMG,EACZR,EAAMG,EAAMM,EACZV,EAAMK,EAAMK,GAEhBE,IACGb,EAAMM,EAAMK,EACXX,EAAMO,EAAMG,EACZP,EAAMC,EAAMM,EACZR,EAAME,EAAMO,EACZT,EAAMK,EAAMC,EACZL,EAAMG,EAAME,GAEhBM,IACGd,EAAMO,EAAME,EACXT,EAAMK,EAAMM,EACZR,EAAMC,EAAMK,EACZR,EAAMG,EAAMO,EACZR,EAAME,EAAMG,EACZP,EAAMM,EAAMC,GAEhBO,IACGb,EAAMG,EAAMG,EACXR,EAAMM,EAAMG,EACZT,EAAMK,EAAMK,EACZR,EAAME,EAAMK,EACZR,EAAMG,EAAMM,EACZT,EAAMK,EAAME,IAOlB0E,UAAW,WAEV,GACIC,GADA5L,EAAK3vE,KAAK6F,QAWd,OARA01E,GAAM5L,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM4L,EAC5CA,EAAM5L,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM4L,EAC5CA,EAAM5L,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM4L,EAE5CA,EAAM5L,EAAI,GAAKA,EAAI,GAAMA,EAAI,IAAMA,EAAI,IAAO4L,EAC9CA,EAAM5L,EAAI,GAAKA,EAAI,GAAMA,EAAI,IAAMA,EAAI,IAAO4L,EAC9CA,EAAM5L,EAAI,IAAMA,EAAI,IAAOA,EAAI,IAAMA,EAAI,IAAO4L,EAEzCv7E,MAIRw7E,qBAAsB,SAAW90E,EAAO7C,GAKvC,MAHAoC,SAAQgc,KAAM,mFAGPjiB,KAAKiH,QAASP,EAAO7C,IAI7B43E,YAAa,WAEZ,GAAI7yB,EAEJ,OAAO,YAKN,MAHYxlD,UAAPwlD,IAAmBA,EAAK,GAAIjjD,IACjCM,QAAQgc,KAAM,wGAEP2mC,EAAGitB,oBAAqB71E,KAAM,OAMvCq4C,YAAa,SAAW3wC,GAEvB,GAAIioE,GAAK3vE,KAAK6F,QAMd,OAJA8pE,GAAI,IAAOjoE,EAAE5F,EACb6tE,EAAI,IAAOjoE,EAAE3F,EACb4tE,EAAI,IAAOjoE,EAAElD,EAENxE,MAIRqhB,WAAY,SAAWwqD,EAAG6P,GAGzB,GAAI/L,GAAK3vE,KAAK6F,SACbwxE,EAAKxL,EAAEhmE,SAEPuwE,EAAMiB,EAAI,GAAKb,EAAMa,EAAI,GAAKT,EAAMS,EAAI,GAAKL,EAAMK,EAAI,GACvDhB,EAAMgB,EAAI,GAAKZ,EAAMY,EAAI,GAAKR,EAAMQ,EAAI,GAAKJ,EAAMI,EAAI,GACvDf,EAAMe,EAAI,GAAKX,EAAMW,EAAI,GAAKP,EAAMO,EAAI,IAAMH,EAAMG,EAAI,IACxDd,EAAMc,EAAI,IAAMV,EAAMU,EAAI,IAAMN,EAAMM,EAAI,IAAMF,EAAME,EAAI,IAE1DsE,EAAMjF,EAAMK,EAAME,EAAMN,EAAMG,EAAMG,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAC5GyE,EAAMrF,EAAMO,EAAMG,EAAMX,EAAMS,EAAME,EAAMV,EAAMM,EAAMK,EAAMb,EAAMU,EAAMG,EAAMZ,EAAMO,EAAMM,EAAMd,EAAMS,EAAMK,EAC5G0E,EAAMvF,EAAMK,EAAMM,EAAMV,EAAMG,EAAMO,EAAMV,EAAME,EAAMS,EAAMb,EAAMM,EAAMO,EAAMZ,EAAMG,EAAMU,EAAMd,EAAMK,EAAMS,EAC5G2E,EAAMvF,EAAMG,EAAMG,EAAMP,EAAMK,EAAME,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAEzGgF,EAAM3F,EAAMuF,EAAMnF,EAAMoF,EAAMhF,EAAMiF,EAAM7E,EAAM8E,CAEpD,IAAa,IAARC,EAAY,CAEhB,GAAIC,GAAM,mEAEV,IAAKN,KAAsB,EAE1B,KAAM,IAAI3sD,OAAOitD,EAQlB,OAJC/1E,SAAQgc,KAAM+5D,GAIRh8E,KAAKo4C,WAIb,GAAI6jC,GAAS,EAAIF,CAsBjB,OApBApM,GAAI,GAAMgM,EAAMM,EAChBtM,EAAI,IAAQgH,EAAMG,EAAME,EAAMN,EAAMK,EAAMC,EAAML,EAAMC,EAAMM,EAAMV,EAAMO,EAAMG,EAAMR,EAAME,EAAMO,EAAMX,EAAMM,EAAMK,GAAQ8E,EAC1HtM,EAAI,IAAQ8G,EAAMM,EAAMC,EAAML,EAAME,EAAMG,EAAML,EAAMC,EAAMK,EAAMT,EAAMO,EAAME,EAAMR,EAAMG,EAAMO,EAAMX,EAAMK,EAAMM,GAAQ8E,EAC1HtM,EAAI,IAAQ+G,EAAMG,EAAMG,EAAMP,EAAMK,EAAME,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,GAAQ+E,EAE1HtM,EAAI,GAAMiM,EAAMK,EAChBtM,EAAI,IAAQ2G,EAAMS,EAAMC,EAAMT,EAAMO,EAAME,EAAMT,EAAMK,EAAMM,EAAMd,EAAMW,EAAMG,EAAMZ,EAAMM,EAAMO,EAAMf,EAAMU,EAAMK,GAAQ8E,EAC1HtM,EAAI,IAAQ4G,EAAMM,EAAMG,EAAMX,EAAMU,EAAMC,EAAMT,EAAMK,EAAMK,EAAMb,EAAMW,EAAME,EAAMZ,EAAMO,EAAMO,EAAMf,EAAMS,EAAMM,GAAQ8E,EAC1HtM,EAAI,IAAQ0G,EAAMS,EAAME,EAAMV,EAAMO,EAAMG,EAAMV,EAAMM,EAAMK,EAAMb,EAAMU,EAAMG,EAAMZ,EAAMO,EAAMM,EAAMd,EAAMS,EAAMK,GAAQ+E,EAE1HtM,EAAI,GAAMkM,EAAMI,EAChBtM,EAAI,IAAQ4G,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,EAAMT,EAAMC,EAAMU,EAAMd,EAAMO,EAAMO,EAAMZ,EAAME,EAAMW,EAAMf,EAAMM,EAAMS,GAAQ8E,EAC1HtM,EAAI,KAAS0G,EAAMM,EAAMK,EAAMT,EAAME,EAAMO,EAAMT,EAAMC,EAAMS,EAAMb,EAAMO,EAAMM,EAAMZ,EAAMG,EAAMW,EAAMf,EAAMK,EAAMU,GAAQ8E,EAC3HtM,EAAI,KAAS2G,EAAMG,EAAMO,EAAMX,EAAMK,EAAMM,EAAMV,EAAME,EAAMS,EAAMb,EAAMM,EAAMO,EAAMZ,EAAMG,EAAMU,EAAMd,EAAMK,EAAMS,GAAQ+E,EAE3HtM,EAAI,IAAOmM,EAAMG,EACjBtM,EAAI,KAAS2G,EAAMK,EAAMC,EAAML,EAAMG,EAAME,EAAML,EAAMC,EAAMM,EAAMV,EAAMO,EAAMG,EAAMR,EAAME,EAAMO,EAAMX,EAAMM,EAAMK,GAAQkF,EAC3HtM,EAAI,KAAS4G,EAAME,EAAMG,EAAMP,EAAMM,EAAMC,EAAML,EAAMC,EAAMK,EAAMT,EAAMO,EAAME,EAAMR,EAAMG,EAAMO,EAAMX,EAAMK,EAAMM,GAAQkF,EAC3HtM,EAAI,KAAS0G,EAAMK,EAAME,EAAMN,EAAMG,EAAMG,EAAMN,EAAME,EAAMK,EAAMT,EAAMM,EAAMG,EAAMR,EAAMG,EAAMM,EAAMV,EAAMK,EAAMK,GAAQmF,EAEpHj8E,MAIR6P,MAAO,SAAWnI,GAEjB,GAAIioE,GAAK3vE,KAAK6F,SACV/D,EAAI4F,EAAE5F,EAAGC,EAAI2F,EAAE3F,EAAGyC,EAAIkD,EAAElD,CAO5B,OALAmrE,GAAI,IAAO7tE,EAAG6tE,EAAI,IAAO5tE,EAAG4tE,EAAI,IAAOnrE,EACvCmrE,EAAI,IAAO7tE,EAAG6tE,EAAI,IAAO5tE,EAAG4tE,EAAI,IAAOnrE,EACvCmrE,EAAI,IAAO7tE,EAAG6tE,EAAI,IAAO5tE,EAAG4tE,EAAI,KAAQnrE,EACxCmrE,EAAI,IAAO7tE,EAAG6tE,EAAI,IAAO5tE,EAAG4tE,EAAI,KAAQnrE,EAEjCxE,MAIRk8E,kBAAmB,WAElB,GAAIvM,GAAK3vE,KAAK6F,SAEVs2E,EAAWxM,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GACjEyM,EAAWzM,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GACjE0M,EAAW1M,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,IAAOA,EAAI,GAEtE,OAAO3sE,MAAKmhD,KAAMnhD,KAAK8J,IAAKqvE,EAAUC,EAAUC,KAIjDC,gBAAiB,SAAWx6E,EAAGC,EAAGyC,GAWjC,MATAxE,MAAK0M,IAEJ,EAAG,EAAG,EAAG5K,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAGyC,EACT,EAAG,EAAG,EAAG,GAIHxE,MAIRu8E,cAAe,SAAWnrB,GAEzB,GAAI9sC,GAAIthB,KAAKg1C,IAAKoZ,GAASgB,EAAIpvD,KAAKyoD,IAAK2F,EAWzC,OATApxD,MAAK0M,IAEJ,EAAG,EAAI,EAAG,EACV,EAAG4X,GAAK8tC,EAAG,EACX,EAAGA,EAAI9tC,EAAG,EACV,EAAG,EAAI,EAAG,GAIJtkB,MAIRw8E,cAAe,SAAWprB,GAEzB,GAAI9sC,GAAIthB,KAAKg1C,IAAKoZ,GAASgB,EAAIpvD,KAAKyoD,IAAK2F,EAWzC,OATApxD,MAAK0M,IAEH4X,EAAG,EAAG8tC,EAAG,EACT,EAAG,EAAG,EAAG,GACRA,EAAG,EAAG9tC,EAAG,EACV,EAAG,EAAG,EAAG,GAIJtkB,MAIRy8E,cAAe,SAAWrrB,GAEzB,GAAI9sC,GAAIthB,KAAKg1C,IAAKoZ,GAASgB,EAAIpvD,KAAKyoD,IAAK2F,EAWzC,OATApxD,MAAK0M,IAEJ4X,GAAK8tC,EAAG,EAAG,EACXA,EAAI9tC,EAAG,EAAG,EACV,EAAI,EAAG,EAAG,EACV,EAAI,EAAG,EAAG,GAIJtkB,MAIR08E,iBAAkB,SAAWpL,EAAMr5B,GAIlC,GAAI3zB,GAAIthB,KAAKg1C,IAAKC,GACdma,EAAIpvD,KAAKyoD,IAAKxT,GACdiS,EAAI,EAAI5lC,EACRxiB,EAAIwvE,EAAKxvE,EAAGC,EAAIuvE,EAAKvvE,EAAGyC,EAAI8sE,EAAK9sE,EACjCm4E,EAAKzyB,EAAIpoD,EAAG86E,EAAK1yB,EAAInoD,CAWxB,OATD/B,MAAK0M,IAEJiwE,EAAK76E,EAAIwiB,EAAGq4D,EAAK56E,EAAIqwD,EAAI5tD,EAAGm4E,EAAKn4E,EAAI4tD,EAAIrwD,EAAG,EAC5C46E,EAAK56E,EAAIqwD,EAAI5tD,EAAGo4E,EAAK76E,EAAIuiB,EAAGs4D,EAAKp4E,EAAI4tD,EAAItwD,EAAG,EAC5C66E,EAAKn4E,EAAI4tD,EAAIrwD,EAAG66E,EAAKp4E,EAAI4tD,EAAItwD,EAAGooD,EAAI1lD,EAAIA,EAAI8f,EAAG,EAC/C,EAAG,EAAG,EAAG,GAIFtkB,MAIT68E,UAAW,SAAW/6E,EAAGC,EAAGyC,GAW3B,MATAxE,MAAK0M,IAEJ5K,EAAG,EAAG,EAAG,EACT,EAAGC,EAAG,EAAG,EACT,EAAG,EAAGyC,EAAG,EACT,EAAG,EAAG,EAAG,GAIHxE,MAIR88E,QAAS,SAAWjpE,EAAUmP,EAAYnT,GAMzC,MAJA7P,MAAK24E,2BAA4B31D,GACjChjB,KAAK6P,MAAOA,GACZ7P,KAAKq4C,YAAaxkC,GAEX7T,MAIRgW,UAAW,WAEV,GAAIoU,GAAQ1J,CAEZ,OAAO,UAAoB7M,EAAUmP,EAAYnT,GAEhCzM,SAAXgnB,IAEJA,EAAS,GAAIzkB,GACb+a,EAAS,GAAI9a,GAId,IAAI+pE,GAAK3vE,KAAK6F,SAEVkwE,EAAK3rD,EAAO1d,IAAKijE,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM3pE,SAC7CgwE,EAAK5rD,EAAO1d,IAAKijE,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM3pE,SAC7CiwE,EAAK7rD,EAAO1d,IAAKijE,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAAO3pE,SAG9C+1E,EAAM/7E,KAAKq7E,aACJ,GAANU,IAEJhG,GAAOA,GAIRliE,EAAS/R,EAAI6tE,EAAI,IACjB97D,EAAS9R,EAAI4tE,EAAI,IACjB97D,EAASrP,EAAImrE,EAAI,IAIjBjvD,EAAO7a,SAAS6G,IAAK1M,KAAK6F,SAE1B,IAAIk3E,GAAQ,EAAIhH,EACZiH,EAAQ,EAAIhH,EACZiH,EAAQ,EAAIhH,CAoBhB,OAlBAv1D,GAAO7a,SAAU,IAAOk3E,EACxBr8D,EAAO7a,SAAU,IAAOk3E,EACxBr8D,EAAO7a,SAAU,IAAOk3E,EAExBr8D,EAAO7a,SAAU,IAAOm3E,EACxBt8D,EAAO7a,SAAU,IAAOm3E,EACxBt8D,EAAO7a,SAAU,IAAOm3E,EAExBt8D,EAAO7a,SAAU,IAAOo3E,EACxBv8D,EAAO7a,SAAU,IAAOo3E,EACxBv8D,EAAO7a,SAAU,KAAQo3E,EAEzBj6D,EAAWwuD,sBAAuB9wD,GAElC7Q,EAAM/N,EAAIi0E,EACVlmE,EAAM9N,EAAIi0E,EACVnmE,EAAMrL,EAAIyxE,EAEHj2E,SAMTk9E,YAAa,SAAWhxD,EAAMC,EAAOE,EAAQD,EAAK5W,EAAMC,GAEvD,GAAIk6D,GAAK3vE,KAAK6F,SACV/D,EAAI,EAAI0T,GAAS2W,EAAQD,GACzBnqB,EAAI,EAAIyT,GAAS4W,EAAMC,GAEvBtX,GAAMoX,EAAQD,IAAWC,EAAQD,GACjC7jB,GAAM+jB,EAAMC,IAAaD,EAAMC,GAC/B/H,IAAQ7O,EAAMD,IAAWC,EAAMD,GAC/B2T,EAAI,GAAM1T,EAAMD,GAASC,EAAMD,EAOnC,OALAm6D,GAAI,GAAM7tE,EAAG6tE,EAAI,GAAM,EAAGA,EAAI,GAAM56D,EAAG46D,EAAI,IAAO,EAClDA,EAAI,GAAM,EAAGA,EAAI,GAAM5tE,EAAG4tE,EAAI,GAAMtnE,EAAGsnE,EAAI,IAAO,EAClDA,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,IAAOrrD,EAAGqrD,EAAI,IAAOxmD,EACnDwmD,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,IAAO,GAAKA,EAAI,IAAO,EAE9C3vE,MAIRm9E,gBAAiB,SAAWzxD,EAAKC,EAAQnW,EAAMC,GAE9C,GAAI2nE,GAAO5nE,EAAOxS,KAAKq6E,IAAK77E,EAAQwB,KAAKstD,QAAU5kC,EAAM,IACrD4xD,GAASF,EACTG,EAAOD,EAAO3xD,EACd6xD,EAAOJ,EAAOzxD,CAElB,OAAO3rB,MAAKk9E,YAAaK,EAAMC,EAAMF,EAAMF,EAAM5nE,EAAMC,IAIxDgoE,iBAAkB,SAAWvxD,EAAMC,EAAOC,EAAKC,EAAQ7W,EAAMC,GAE5D,GAAIk6D,GAAK3vE,KAAK6F,SACVrF,EAAI,GAAQ2rB,EAAQD,GACpBhD,EAAI,GAAQkD,EAAMC,GAClBmM,EAAI,GAAQ/iB,EAAMD,GAElB1T,GAAMqqB,EAAQD,GAAS1rB,EACvBuB,GAAMqqB,EAAMC,GAAWnD,EACvB1kB,GAAMiR,EAAMD,GAASgjB,CAOzB,OALAm3C,GAAI,GAAM,EAAInvE,EAAGmvE,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,KAAS7tE,EACxD6tE,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAIzmD,EAAGymD,EAAI,GAAM,EAAGA,EAAI,KAAS5tE,EACxD4tE,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,IAAO,GAAMn3C,EAAGm3C,EAAI,KAASnrE,EAC3DmrE,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,IAAO,EAAGA,EAAI,IAAO,EAE5C3vE,MAIRoiC,OAAQ,SAAW1hB,GAKlB,IAAM,GAHFivD,GAAK3vE,KAAK6F,SACVwxE,EAAK32D,EAAO7a,SAENqB,EAAI,EAAO,GAAJA,EAAQA,IAExB,GAAKyoE,EAAIzoE,KAAQmwE,EAAInwE,GAAM,OAAO,CAInC,QAAO,GAIRk+C,UAAW,SAAW1+C,EAAO7C,GAEZT,SAAXS,IAAuBA,EAAS,EAErC,KAAK,GAAIqD,GAAI,EAAO,GAAJA,EAAQA,IAEvBlH,KAAK6F,SAAUqB,GAAMR,EAAOQ,EAAIrD,EAIjC,OAAO7D,OAIRiH,QAAS,SAAWP,EAAO7C,GAEXT,SAAVsD,IAAsBA,MACXtD,SAAXS,IAAuBA,EAAS,EAErC,IAAI8rE,GAAK3vE,KAAK6F,QAsBd,OApBAa,GAAO7C,GAAW8rE,EAAI,GACtBjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAE1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAE1BjpE,EAAO7C,EAAS,GAAO8rE,EAAI,GAC3BjpE,EAAO7C,EAAS,GAAO8rE,EAAI,GAC3BjpE,EAAO7C,EAAS,IAAO8rE,EAAI,IAC3BjpE,EAAO7C,EAAS,IAAO8rE,EAAI,IAE3BjpE,EAAO7C,EAAS,IAAO8rE,EAAI,IAC3BjpE,EAAO7C,EAAS,IAAO8rE,EAAI,IAC3BjpE,EAAO7C,EAAS,IAAO8rE,EAAI,IAC3BjpE,EAAO7C,EAAS,IAAO8rE,EAAI,IAEpBjpE,IAqBTP,EAAY43D,UAAYp7D,OAAOguE,OAAQ3uE,EAAQ+7D,WAC/C53D,EAAY43D,UAAU1I,YAAclvD,EAEpCA,EAAY43D,UAAU/nB,eAAgB,EAEtCrzC,OAAOC,eAAgBuD,EAAY43D,UAAW,UAE7CrxC,IAAK,WAEJ,MAAO1sB,MAAKiC,OAIbyK,IAAK,SAAW7J,GAEf7C,KAAKiC,MAAQY,IAMf,IAAIsG,IAAe,GAAInH,GACnBsH,GAAmB,GAAInD,GAevBa,MACAK,KA8SJ6D,GAAkB6yD,UAAU/yD,SAAW,SAAUvD,EAAI5E,GAOpD,IAAM,GAFF0D,GAAMvG,KAAKuG,IAELW,EAAI,EAAGJ,EAAIP,EAAIP,OAAQkB,IAAMJ,IAAMI,EAAI,CAEhD,GAAIoiB,GAAI/iB,EAAKW,EACboiB,GAAEte,SAAUvD,EAAI5E,EAAOymB,EAAExe,MAU3B,IAAIY,IAAa,0BA0FjBQ,GAAc6xD,UAAU/yD,SAAW,SAAUvD,EAAIvE,EAAML,GAEtD,GAAIymB,GAAItpB,KAAKwG,IAAKtD,EAEPE,UAANkmB,GAAkBA,EAAEte,SAAUvD,EAAI5E,EAAO7C,KAAKoH,WAIpD8E,EAAc6xD,UAAUrxD,IAAM,SAAUjF,EAAIyT,EAAQhY,GAEnD,GAAIomB,GAAItpB,KAAKwG,IAAKtD,EAEPE,UAANkmB,GAAkBA,EAAEte,SAAUvD,EAAIyT,EAAQhY,GAAQlD,KAAKoH,WAI7D8E,EAAc6xD,UAAUzpB,YAAc,SAAU7sC,EAAIyT,EAAQhY,GAE3D,GAAIwE,GAAIwT,EAAQhY,EAELE,UAANsE,GAAkB1H,KAAKgL,SAAUvD,EAAIvE,EAAMwE,IAOjDwE,EAAcqpC,OAAS,SAAU9tC,EAAIlB,EAAKyvD,EAAQ5uD,GAEjD,IAAM,GAAIF,GAAI,EAAGJ,EAAIP,EAAIP,OAAQkB,IAAMJ,IAAMI,EAAI,CAEhD,GAAIoiB,GAAI/iB,EAAKW,GACZQ,EAAIsuD,EAAQ1sC,EAAExe,GAEVpD,GAAEmN,eAAgB,GAGtByU,EAAEte,SAAUvD,EAAIC,EAAE7E,MAAOuE,KAQ5B8E,EAAcinC,aAAe,SAAU5sC,EAAKyvD,GAI3C,IAAM,GAFFjvD,MAEMG,EAAI,EAAGJ,EAAIP,EAAIP,OAAQkB,IAAMJ,IAAMI,EAAI,CAEhD,GAAIoiB,GAAI/iB,EAAKW,EACRoiB,GAAExe,KAAMkrD,IAASjvD,EAAEuE,KAAMge,GAI/B,MAAOviB,IAIRmF,EAAcmnC,aAAe,SAAU9sC,EAAKyvD,GAM3C,IAAM,GAJFjvD,GAAI,KACPD,EAAIP,EAAIP,OACRxF,EAAI,EAEK0G,EAAI,EAAGA,IAAMJ,IAAMI,EAAI,CAEhC,GAAIoiB,GAAI/iB,EAAKW,GACZQ,EAAIsuD,EAAQ1sC,EAAExe,GAEVpD,IAAKA,EAAEie,WAAY,GAEZ,OAAN5e,IAAaA,MAClBA,EAAEuE,KAAMge,KAKCpiB,EAAJ1G,IAAQ+F,EAAK/F,GAAM8oB,KACrB9oB,GAQL,MAFSsG,GAAJtG,IAAQ+F,EAAIP,OAASxF,GAEnBuG,GAIRmF,EAAcupC,YAAc,SAAUlvC,EAAKyvD,EAAQ96C,EAAQpF,EAAUnF,GAEpE,IAAM,GAAIzJ,GAAI,EAAGJ,EAAIP,EAAIP,OAAQkB,IAAMJ,IAAMI,EAAI,CAEhD,GAAIQ,GAAIsuD,EAAQzvD,EAAKW,GAAI4D,IACxB8wB,EAAIl0B,EAAEg2E,gBAEIt6E,UAANw4B,GAAkBA,EAAEz2B,KAAMuC,EAAGwT,EAAQpF,EAAUnF,KAUtDnP,EAAQ2d,eAEPszC,MAAO,SAAWjjD,GAIjB,IAAM,GAFFmuE,MAEMr0D,EAAI,EAAGA,EAAI9Z,EAASxJ,OAAQsjB,IAAO,CAE5C,GAAIiyD,GAAMv7E,KAAK4c,MAAOpN,EAAU8Z,GAEhC,KAAM,GAAIkP,KAAK+iD,GAEdoC,EAAQnlD,GAAM+iD,EAAK/iD,GAMrB,MAAOmlD,IAIR/gE,MAAO,SAAWghE,GAEjB,GAAIC,KAEJ,KAAM,GAAIv0D,KAAKs0D,GAAe,CAE7BC,EAAcv0D,KAEd,KAAM,GAAIkP,KAAKolD,GAAct0D,GAAM,CAElC,GAAIw0D,GAAgBF,EAAct0D,GAAKkP,EAEjCslD,IAAiBA,EAAcn5D,SAClCm5D,GAAiBA,EAAc7Q,WAC/B6Q,GAAiBA,EAAct5D,WAC/Bs5D,GAAiBA,EAAc5O,WAC/B4O,GAAiBA,EAAcC,WAC/BD,GAAiBA,EAAc3H,WAC/B2H,GAAiBA,EAActnD,UAEjCqnD,EAAcv0D,GAAKkP,GAAMslD,EAAclhE,QAE5B8B,MAAMgG,QAASo5D,GAE1BD,EAAcv0D,GAAKkP,GAAMslD,EAAc55B,QAIvC25B,EAAcv0D,GAAKkP,GAAMslD,GAQ5B,MAAOD,IAMT,IAAIG,IAAoB,kFAEpBC,GAAyB,8DAEzBC,GAAqB,0EAErBC,GAAiB,qaAEjBC,GAAsB,sFAEtBC,GAAe,2CAEfC,GAAqB,0CAErBC,GAAQ,i6HAERC,GAAwB,uxBAExBC,GAA2B,mMAE3BC,GAAgC,wLAEhCC,GAA8B,qHAE9BC,GAAyB,2HAEzBC,GAAiB,yDAEjBC,GAAsB,oDAEtBC,GAAoB,kDAEpBC,GAAe,qDAEfC,GAAS,gxDAETC,GAA8B,q+HAE9BC,GAAuB,qHAEvBC,GAA8B,iJAE9BC,GAAyB,gJAEzBC,GAAuB,4MAEvBC,GAA4B,oEAE5BC,GAAqB,0DAErBC,GAA0B,0vFAE1BC,GAAkB,4jDAElBC,GAAuB,8lBAEvBC,GAAqB,wNAErBC,GAAgB,kfAEhBC,GAAe,ibAEfC,GAAoB,qKAEpBC,GAAoB,8HAEpBC,GAAyB,+FAEzBC,GAAwB,8kEAExBC,GAAc,6uNAEdC,GAAwB,wMAExBC,GAA6B,kwCAE7BC,GAA2B,0iBAE3BC,GAAgC,ysGAEhCC,GAAkB,8kGAElBC,GAAuB,mIAEvBC,GAA4B,qIAE5BC,GAA0B,mIAE1BC,GAAqB,6PAErBC,GAAe,mJAEfC,GAAoB,oDAEpBC,GAAwB,mMAExBC,GAA6B,iFAE7BC,GAAwB,uKAExBC,GAA6B,oEAE7BC,GAAqB,4UAErBC,GAA0B,sKAE1BC,GAAqB,gqBAErBC,GAAc,+HAEdC,GAAkB,igBAElBC,GAA0B,skBAE1BC,GAAU,iyCAEVC,GAA+B,6EAE/BC,GAAiB,oMAEjBC,GAAwB,uKAExBC,GAA6B,oEAE7BC,GAA0B,qtMAE1BC,GAAwB,wdAExBC,GAAmB,+fAEnBC,GAA2B,+mCAE3BC,GAAkB,8NAElBC,GAAuB,u/BAEvBC,GAAkB,+WAElBC,GAAoB,uWAEpBC,GAAuB,uLAEvBC,GAA4B,kEAE5BC,GAAuB,+FAEvBC,GAA4B,o5BAE5BC,GAAmB,gQAEnBC,GAAiB,+RAEjBC,GAAY,4RAEZC,GAAoB,mFAEpBC,GAAkB,yGAElBC,GAAa,4EAEbC,GAAkB,0RAElBC,GAAY,yQAEZC,GAAY,4LAEZC,GAAa,+tBAEbC,GAAa,2gBAEbC,GAAoB,6RAEpBC,GAAoB,saAEpBC,GAAgB,mXAEhBC,GAAgB,4LAEhBC,GAAkB,sxBAElBC,GAAkB,udAElBC,GAAiB,uzCAEjBC,GAAiB,gyBAEjBC,GAAmB,wgEAEnBC,GAAmB,o/BAEnBC,GAAiB,wxDAEjBC,GAAiB,6lCAEjBC,GAAoB,umEAEpBC,GAAoB,4kCAEpBC,GAAc,iUAEdC,GAAc,yXAEdC,GAAc,iyBAEdC,GAAc,yiBAEdC,GAAc,qRAEdC,GAAc,wKAEdtzD;AACH8sD,kBAAmBA,GACnBC,uBAAwBA,GACxBC,mBAAoBA,GACpBC,eAAgBA,GAChBC,oBAAqBA,GACrBC,aAAcA,GACdC,mBAAoBA,GACpBC,MAAOA,GACPC,sBAAuBA,GACvBC,yBAA0BA,GAC1BC,8BAA+BA,GAC/BC,4BAA6BA,GAC7BC,uBAAwBA,GACxBC,eAAgBA,GAChBC,oBAAqBA,GACrBC,kBAAmBA,GACnBC,aAAcA,GACdC,OAAQA,GACRC,4BAA6BA,GAC7BC,qBAAsBA,GACtBC,4BAA6BA,GAC7BC,uBAAwBA,GACxBC,qBAAsBA,GACtBC,0BAA2BA,GAC3BC,mBAAoBA,GACpBC,wBAAyBA,GACzBC,gBAAiBA,GACjBC,qBAAsBA,GACtBC,mBAAoBA,GACpBC,cAAeA,GACfC,aAAcA,GACdC,kBAAmBA,GACnBC,kBAAmBA,GACnBC,uBAAwBA,GACxBC,sBAAuBA,GACvBC,YAAaA,GACbC,sBAAuBA,GACvBC,2BAA4BA,GAC5BC,yBAA0BA,GAC1BC,8BAA+BA,GAC/BC,gBAAiBA,GACjBC,qBAAsBA,GACtBC,0BAA2BA,GAC3BC,wBAAyBA,GACzBC,mBAAoBA,GACpBC,aAAcA,GACdC,kBAAmBA,GACnBC,sBAAuBA,GACvBC,2BAA4BA,GAC5BC,sBAAuBA,GACvBC,2BAA4BA,GAC5BC,mBAAoBA,GACpBC,wBAAyBA,GACzBC,mBAAoBA,GACpBC,YAAaA,GACbC,gBAAiBA,GACjBC,wBAAyBA,GACzBC,QAASA,GACTC,6BAA8BA,GAC9BC,eAAgBA,GAChBC,sBAAuBA,GACvBC,2BAA4BA,GAC5BC,wBAAyBA,GACzBC,sBAAuBA,GACvBC,iBAAkBA,GAClBC,yBAA0BA,GAC1BC,gBAAiBA,GACjBC,qBAAsBA,GACtBC,gBAAiBA,GACjBC,kBAAmBA,GACnBC,qBAAsBA,GACtBC,0BAA2BA,GAC3BC,qBAAsBA,GACtBC,0BAA2BA,GAC3BC,iBAAkBA,GAClBC,eAAgBA,GAChBC,UAAWA,GACXC,kBAAmBA,GACnBC,gBAAiBA,GACjBC,WAAYA,GACZC,gBAAiBA,GAEjBC,UAAWA,GACXC,UAAWA,GACXC,WAAYA,GACZC,WAAYA,GACZC,kBAAmBA,GACnBC,kBAAmBA,GACnBC,cAAeA,GACfC,cAAeA,GACfC,gBAAiBA,GACjBC,gBAAiBA,GACjBC,eAAgBA,GAChBC,eAAgBA,GAChBC,iBAAkBA,GAClBC,iBAAkBA,GAClBC,eAAgBA,GAChBC,eAAgBA,GAChBC,kBAAmBA,GACnBC,kBAAmBA,GACnBC,YAAaA,GACbC,YAAaA,GACbC,YAAaA,GACbC,YAAaA,GACbC,YAAaA,GACbC,YAAaA,GAoBd/3E,GAAMsxD,WAEL1I,YAAa5oD,EAEbkY,SAAS,EAET5d,EAAG,EAAGqB,EAAG,EAAGC,EAAG,EAEfqE,IAAK,SAAW7J,GAgBf,MAdMA,IAASA,EAAM8hB,QAEpB3kB,KAAKkS,KAAMrP,GAEiB,gBAAVA,GAElB7C,KAAKykF,OAAQ5hF,GAEe,gBAAVA,IAElB7C,KAAK0kF,SAAU7hF,GAIT7C,MAIRktE,UAAW,SAAWC,GAErBntE,KAAK+G,EAAIomE,EACTntE,KAAKoI,EAAI+kE,EACTntE,KAAKqI,EAAI8kE,GAIVsX,OAAQ,SAAWjf,GAQlB,MANAA,GAAMxiE,KAAK6nB,MAAO26C,GAElBxlE,KAAK+G,GAAMy+D,GAAO,GAAK,KAAQ,IAC/BxlE,KAAKoI,GAAMo9D,GAAO,EAAI,KAAQ,IAC9BxlE,KAAKqI,GAAY,IAANm9D,GAAc,IAElBxlE,MAIR2M,OAAQ,SAAW5F,EAAGqB,EAAGC,GAMxB,MAJArI,MAAK+G,EAAIA,EACT/G,KAAKoI,EAAIA,EACTpI,KAAKqI,EAAIA,EAEFrI,MAIR2kF,OAAQ,WAEP,QAASC,GAASpsD,EAAGqzB,EAAG3B,GAIvB,MAFS,GAAJA,IAAQA,GAAK,GACbA,EAAI,IAAIA,GAAK,GACT,EAAI,EAARA,EAAmB1xB,EAAgB,GAAVqzB,EAAIrzB,GAAU0xB,EACnC,GAAJA,EAAmB2B,EACf,EAAI,EAAR3B,EAAmB1xB,EAAgB,GAAVqzB,EAAIrzB,IAAY,EAAI,EAAI0xB,GAC/C1xB,EAIR,MAAO,UAAiBtP,EAAGkpC,EAAGzgD,GAO7B,GAJAuX,EAAI1nB,EAAQwB,KAAK4oE,gBAAiB1iD,EAAG,GACrCkpC,EAAI5wD,EAAQwB,KAAK0sD,MAAO0C,EAAG,EAAG,GAC9BzgD,EAAInQ,EAAQwB,KAAK0sD,MAAO/9C,EAAG,EAAG,GAEnB,IAANygD,EAEJpyD,KAAK+G,EAAI/G,KAAKoI,EAAIpI,KAAKqI,EAAIsJ,MAErB,CAEN,GAAI6mB,GAAS,IAAL7mB,EAAWA,GAAM,EAAIygD,GAAMzgD,EAAIygD,EAAMzgD,EAAIygD,EAC7CvG,EAAM,EAAIl6C,EAAM6mB,CAEpBx4B,MAAK+G,EAAI69E,EAAS/4B,EAAGrzB,EAAGtP,EAAI,EAAI,GAChClpB,KAAKoI,EAAIw8E,EAAS/4B,EAAGrzB,EAAGtP,GACxBlpB,KAAKqI,EAAIu8E,EAAS/4B,EAAGrzB,EAAGtP,EAAI,EAAI,GAIjC,MAAOlpB,UAMT0kF,SAAU,SAAW/kC,GAEpB,QAASklC,GAAa52D,GAEL7qB,SAAX6qB,GAEA62D,WAAY72D,GAAW,GAE3BhoB,QAAQgc,KAAM,mCAAqC09B,EAAQ,qBAO7D,GAAIksB,EAEJ,IAAKA,EAAI,kCAAkChgE,KAAM8zC,GAAU,CAI1D,GAAI/vC,GACA1M,EAAO2oE,EAAG,GACV38C,EAAa28C,EAAG,EAEpB,QAAS3oE,GAER,IAAK,MACL,IAAK,OAEJ,GAAK0M,EAAQ,gEAAgE/D,KAAMqjB,GASlF,MANAlvB,MAAK+G,EAAI/D,KAAK6J,IAAK,IAAK0kB,SAAU3hB,EAAO,GAAK,KAAS,IACvD5P,KAAKoI,EAAIpF,KAAK6J,IAAK,IAAK0kB,SAAU3hB,EAAO,GAAK,KAAS,IACvD5P,KAAKqI,EAAIrF,KAAK6J,IAAK,IAAK0kB,SAAU3hB,EAAO,GAAK,KAAS,IAEvDi1E,EAAaj1E,EAAO,IAEb5P,IAIR,IAAK4P,EAAQ,sEAAsE/D,KAAMqjB,GASxF,MANAlvB,MAAK+G,EAAI/D,KAAK6J,IAAK,IAAK0kB,SAAU3hB,EAAO,GAAK,KAAS,IACvD5P,KAAKoI,EAAIpF,KAAK6J,IAAK,IAAK0kB,SAAU3hB,EAAO,GAAK,KAAS,IACvD5P,KAAKqI,EAAIrF,KAAK6J,IAAK,IAAK0kB,SAAU3hB,EAAO,GAAK,KAAS,IAEvDi1E,EAAaj1E,EAAO,IAEb5P,IAIR,MAED,KAAK,MACL,IAAK,OAEJ,GAAK4P,EAAQ,gFAAgF/D,KAAMqjB,GAAe,CAGjH,GAAIhG,GAAI47D,WAAYl1E,EAAO,IAAQ,IAC/BwiD,EAAI7gC,SAAU3hB,EAAO,GAAK,IAAO,IACjC+B,EAAI4f,SAAU3hB,EAAO,GAAK,IAAO,GAIrC,OAFAi1E,GAAaj1E,EAAO,IAEb5P,KAAK2kF,OAAQz7D,EAAGkpC,EAAGzgD,SAQvB,IAAKk6D,EAAI,qBAAqBhgE,KAAM8zC,GAAU,CAIpD,GAAI6lB,GAAMqG,EAAG,GACT1hE,EAAOq7D,EAAIx/D,MAEf,IAAc,IAATmE,EAOJ,MAJAnK,MAAK+G,EAAIwqB,SAAUi0C,EAAIuf,OAAQ,GAAMvf,EAAIuf,OAAQ,GAAK,IAAO,IAC7D/kF,KAAKoI,EAAImpB,SAAUi0C,EAAIuf,OAAQ,GAAMvf,EAAIuf,OAAQ,GAAK,IAAO,IAC7D/kF,KAAKqI,EAAIkpB,SAAUi0C,EAAIuf,OAAQ,GAAMvf,EAAIuf,OAAQ,GAAK,IAAO,IAEtD/kF,IAED,IAAc,IAATmK,EAOX,MAJAnK,MAAK+G,EAAIwqB,SAAUi0C,EAAIuf,OAAQ,GAAMvf,EAAIuf,OAAQ,GAAK,IAAO,IAC7D/kF,KAAKoI,EAAImpB,SAAUi0C,EAAIuf,OAAQ,GAAMvf,EAAIuf,OAAQ,GAAK,IAAO,IAC7D/kF,KAAKqI,EAAIkpB,SAAUi0C,EAAIuf,OAAQ,GAAMvf,EAAIuf,OAAQ,GAAK,IAAO,IAEtD/kF,KAMT,GAAK2/C,GAASA,EAAM35C,OAAS,EAAI,CAGhC,GAAIw/D,GAAMhkE,EAAQwjF,cAAerlC,EAEpBv8C,UAARoiE,EAGJxlE,KAAKykF,OAAQjf,GAKbv/D,QAAQgc,KAAM,8BAAgC09B,GAMhD,MAAO3/C,OAIR4c,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAK+G,EAAG/G,KAAKoI,EAAGpI,KAAKqI,IAInD6J,KAAM,SAAWtC,GAMhB,MAJA5P,MAAK+G,EAAI6I,EAAM7I,EACf/G,KAAKoI,EAAIwH,EAAMxH,EACfpI,KAAKqI,EAAIuH,EAAMvH,EAERrI,MAIRilF,kBAAmB,SAAWr1E,EAAOgjB,GAQpC,MANqBxvB,UAAhBwvB,IAA4BA,EAAc,GAE/C5yB,KAAK+G,EAAI/D,KAAKqmD,IAAKz5C,EAAM7I,EAAG6rB,GAC5B5yB,KAAKoI,EAAIpF,KAAKqmD,IAAKz5C,EAAMxH,EAAGwqB,GAC5B5yB,KAAKqI,EAAIrF,KAAKqmD,IAAKz5C,EAAMvH,EAAGuqB,GAErB5yB,MAIRklF,kBAAmB,SAAWt1E,EAAOgjB,GAEfxvB,SAAhBwvB,IAA4BA,EAAc,EAE/C,IAAIuyD,GAAgBvyD,EAAc,EAAQ,EAAMA,EAAgB,CAMhE,OAJA5yB,MAAK+G,EAAI/D,KAAKqmD,IAAKz5C,EAAM7I,EAAGo+E,GAC5BnlF,KAAKoI,EAAIpF,KAAKqmD,IAAKz5C,EAAMxH,EAAG+8E,GAC5BnlF,KAAKqI,EAAIrF,KAAKqmD,IAAKz5C,EAAMvH,EAAG88E,GAErBnlF,MAIRolF,qBAAsB,WAErB,GAAIr+E,GAAI/G,KAAK+G,EAAGqB,EAAIpI,KAAKoI,EAAGC,EAAIrI,KAAKqI,CAMrC,OAJArI,MAAK+G,EAAIA,EAAIA,EACb/G,KAAKoI,EAAIA,EAAIA,EACbpI,KAAKqI,EAAIA,EAAIA,EAENrI,MAIRqlF,qBAAsB,WAMrB,MAJArlF,MAAK+G,EAAI/D,KAAKmhD,KAAMnkD,KAAK+G,GACzB/G,KAAKoI,EAAIpF,KAAKmhD,KAAMnkD,KAAKoI,GACzBpI,KAAKqI,EAAIrF,KAAKmhD,KAAMnkD,KAAKqI,GAElBrI,MAIRslF,OAAQ,WAEP,MAAkB,KAATtlF,KAAK+G,GAAa,GAAgB,IAAT/G,KAAKoI,GAAa,EAAe,IAATpI,KAAKqI,GAAa,GAI7Ek9E,aAAc,WAEb,OAAS,SAAWvlF,KAAKslF,SAASx+B,SAAU,KAAO5C,MAAO,KAI3DshC,OAAQ,SAAWC,GAIlB,GAOIC,GAAKC,EAPLC,EAAMH,IAAoBv8D,EAAG,EAAGkpC,EAAG,EAAGzgD,EAAG,GAEzC5K,EAAI/G,KAAK+G,EAAGqB,EAAIpI,KAAKoI,EAAGC,EAAIrI,KAAKqI,EAEjCyE,EAAM9J,KAAK8J,IAAK/F,EAAGqB,EAAGC,GACtBwE,EAAM7J,KAAK6J,IAAK9F,EAAGqB,EAAGC,GAGtBw9E,GAAch5E,EAAMC,GAAQ,CAEhC,IAAKD,IAAQC,EAEZ44E,EAAM,EACNC,EAAa,MAEP,CAEN,GAAIG,GAAQh5E,EAAMD,CAIlB,QAFA84E,EAA0B,IAAbE,EAAmBC,GAAUh5E,EAAMD,GAAQi5E,GAAU,EAAIh5E,EAAMD,GAEnEC,GAER,IAAK/F,GAAG2+E,GAAQt9E,EAAIC,GAAMy9E,GAAcz9E,EAAJD,EAAQ,EAAI,EAAK,MACrD,KAAKA,GAAGs9E,GAAQr9E,EAAItB,GAAM++E,EAAQ,CAAG,MACrC,KAAKz9E,GAAGq9E,GAAQ3+E,EAAIqB,GAAM09E,EAAQ,EAInCJ,GAAO,EAQR,MAJAE,GAAI18D,EAAIw8D,EACRE,EAAIxzB,EAAIuzB,EACRC,EAAIj0E,EAAIk0E,EAEDD,GAIRG,SAAU,WAET,MAAO,QAAsB,IAAT/lF,KAAK+G,EAAY,GAAM,KAAmB,IAAT/G,KAAKoI,EAAY,GAAM,KAAmB,IAATpI,KAAKqI,EAAY,GAAM,KAI9G29E,UAAW,SAAW98D,EAAGkpC,EAAGzgD,GAE3B,GAAIi0E,GAAM5lF,KAAKwlF,QAMf,OAJAI,GAAI18D,GAAKA,EAAG08D,EAAIxzB,GAAKA,EAAGwzB,EAAIj0E,GAAKA,EAEjC3R,KAAK2kF,OAAQiB,EAAI18D,EAAG08D,EAAIxzB,EAAGwzB,EAAIj0E,GAExB3R,MAIR+gB,IAAK,SAAWnR,GAMf,MAJA5P,MAAK+G,GAAK6I,EAAM7I,EAChB/G,KAAKoI,GAAKwH,EAAMxH,EAChBpI,KAAKqI,GAAKuH,EAAMvH,EAETrI,MAIRimF,UAAW,SAAWxf,EAAQC,GAM7B,MAJA1mE,MAAK+G,EAAI0/D,EAAO1/D,EAAI2/D,EAAO3/D,EAC3B/G,KAAKoI,EAAIq+D,EAAOr+D,EAAIs+D,EAAOt+D,EAC3BpI,KAAKqI,EAAIo+D,EAAOp+D,EAAIq+D,EAAOr+D,EAEpBrI,MAIRutE,UAAW,SAAWnb,GAMrB,MAJApyD,MAAK+G,GAAKqrD,EACVpyD,KAAKoI,GAAKgqD,EACVpyD,KAAKqI,GAAK+pD,EAEHpyD,MAIR43C,IAAK,SAAUhoC,GAMd,MAJA5P,MAAK+G,EAAI/D,KAAK8J,IAAK,EAAG9M,KAAK+G,EAAI6I,EAAM7I,GACrC/G,KAAKoI,EAAIpF,KAAK8J,IAAK,EAAG9M,KAAKoI,EAAIwH,EAAMxH,GACrCpI,KAAKqI,EAAIrF,KAAK8J,IAAK,EAAG9M,KAAKqI,EAAIuH,EAAMvH,GAE9BrI,MAIRshB,SAAU,SAAW1R,GAMpB,MAJA5P,MAAK+G,GAAK6I,EAAM7I,EAChB/G,KAAKoI,GAAKwH,EAAMxH,EAChBpI,KAAKqI,GAAKuH,EAAMvH,EAETrI,MAIR4tC,eAAgB,SAAWwkB,GAM1B,MAJApyD,MAAK+G,GAAKqrD,EACVpyD,KAAKoI,GAAKgqD,EACVpyD,KAAKqI,GAAK+pD,EAEHpyD,MAIRupD,KAAM,SAAW35C,EAAOqtC,GAMvB,MAJAj9C,MAAK+G,IAAO6I,EAAM7I,EAAI/G,KAAK+G,GAAMk2C,EACjCj9C,KAAKoI,IAAOwH,EAAMxH,EAAIpI,KAAKoI,GAAM60C,EACjCj9C,KAAKqI,IAAOuH,EAAMvH,EAAIrI,KAAKqI,GAAM40C,EAE1Bj9C,MAIRoiC,OAAQ,SAAW9d,GAElB,MAASA,GAAEvd,IAAM/G,KAAK+G,GAASud,EAAElc,IAAMpI,KAAKoI,GAASkc,EAAEjc,IAAMrI,KAAKqI,GAInE+8C,UAAW,SAAW1+C,EAAO7C,GAQ5B,MANgBT,UAAXS,IAAuBA,EAAS,GAErC7D,KAAK+G,EAAIL,EAAO7C,GAChB7D,KAAKoI,EAAI1B,EAAO7C,EAAS,GACzB7D,KAAKqI,EAAI3B,EAAO7C,EAAS,GAElB7D,MAIRiH,QAAS,SAAWP,EAAO7C,GAS1B,MAPeT,UAAVsD,IAAsBA,MACXtD,SAAXS,IAAuBA,EAAS,GAErC6C,EAAO7C,GAAW7D,KAAK+G,EACvBL,EAAO7C,EAAS,GAAM7D,KAAKoI,EAC3B1B,EAAO7C,EAAS,GAAM7D,KAAKqI,EAEpB3B,GAIRgoE,OAAQ,WAEP,MAAO1uE,MAAKslF,WAMd9jF,EAAQwjF,eAAkBkB,UAAa,SAAUC,aAAgB,SAAUC,KAAQ,MAAUC,WAAc,QAAUC,MAAS,SAC9HC,MAAS,SAAUC,OAAU,SAAUC,MAAS,EAAUC,eAAkB,SAAUC,KAAQ,IAAUC,WAAc,QACtHC,MAAS,SAAUC,UAAa,SAAUC,UAAa,QAAUC,WAAc,QAAUC,UAAa,SAAUC,MAAS,SACzHC,eAAkB,QAAUC,SAAY,SAAUC,QAAW,SAAUC,KAAQ,MAAUC,SAAY,IAAUC,SAAY,MAC3HC,cAAiB,SAAUC,SAAY,SAAUC,UAAa,MAAUC,SAAY,SAAUC,UAAa,SAAUC,YAAe,QACpIC,eAAkB,QAAUC,WAAc,SAAUC,WAAc,SAAUC,QAAW,QAAUC,WAAc,SAAUC,aAAgB,QACzIC,cAAiB,QAAUC,cAAiB,QAAUC,cAAiB,QAAUC,cAAiB,MAAUC,WAAc,QAC1HC,SAAY,SAAUC,YAAe,MAAUC,QAAW,QAAUC,QAAW,QAAUC,WAAc,QAAUC,UAAa,SAC9HC,YAAe,SAAUC,YAAe,QAAUC,QAAW,SAAUC,UAAa,SAAUC,WAAc,SAAUC,KAAQ,SAC9HC,UAAa,SAAUC,KAAQ,QAAUC,MAAS,MAAUC,YAAe,SAAUC,KAAQ,QAAUC,SAAY,SAAUC,QAAW,SACxIC,UAAa,SAAUC,OAAU,QAAUC,MAAS,SAAUC,MAAS,SAAUC,SAAY,SAAUC,cAAiB,SAAUC,UAAa,QAC/IC,aAAgB,SAAUC,UAAa,SAAUC,WAAc,SAAUC,UAAa,SAAUC,qBAAwB,SAAUC,UAAa,SAC/IC,WAAc,QAAUC,UAAa,SAAUC,UAAa,SAAUC,YAAe,SAAUC,cAAiB,QAAUC,aAAgB,QAC1IC,eAAkB,QAAUC,eAAkB,QAAUC,eAAkB,SAAUC,YAAe,SAAUC,KAAQ,MAAUC,UAAa,QAC5IC,MAAS,SAAUC,QAAW,SAAUC,OAAU,QAAUC,iBAAoB,QAAUC,WAAc,IAAUC,aAAgB,SAClIC,aAAgB,QAAUC,eAAkB,QAAUC,gBAAmB,QAAUC,kBAAqB,MAAUC,gBAAmB,QACrIC,gBAAmB,SAAUC,aAAgB,QAAUC,UAAa,SAAUC,UAAa,SAAUC,SAAY,SAAUC,YAAe,SAC1IC,KAAQ,IAAUC,QAAW,SAAUC,MAAS,QAAUC,UAAa,QAAUC,OAAU,SAAUC,UAAa,SAAUC,OAAU,SACtIC,cAAiB,SAAUC,UAAa,SAAUC,cAAiB,SAAUC,cAAiB,SAAUC,WAAc,SAAUC,UAAa,SAC7IC,KAAQ,SAAUC,KAAQ,SAAUC,KAAQ,SAAUC,WAAc,SAAUC,OAAU,QAAUC,IAAO,SAAUC,UAAa,SAChIC,UAAa,QAAUC,YAAe,QAAUC,OAAU,SAAUC,WAAc,SAAUC,SAAY,QAAUC,SAAY,SAC9HC,OAAU,SAAUC,OAAU,SAAUC,QAAW,QAAUC,UAAa,QAAUC,UAAa,QAAUC,UAAa,QAAUC,KAAQ,SAC1IC,YAAe,MAAUC,UAAa,QAAUpR,IAAO,SAAUqR,KAAQ,MAAUC,QAAW,SAAUC,OAAU,SAAUC,UAAa,QACzIC,OAAU,SAAUC,MAAS,SAAUC,MAAS,SAAUC,WAAc,SAAUC,OAAU,SAAUC,YAAe,SAMrH,IAAIz8B,KAEHusB,QAECvpC,SAAW7yC,MAAO,GAAI4J,GAAO,WAC7BkD,SAAW9M,MAAO,GAElB2D,KAAO3D,MAAO,MACdizC,cAAgBjzC,MAAO,GAAI0B,GAAS,EAAG,EAAG,EAAG,IAE7CwgB,aAAeliB,MAAO,MACtB2W,UAAY3W,MAAO,MAEnBmiB,QAAUniB,MAAO,MACjBkzC,YAAclzC,MAAO,IACrBsiB,cAAgBtiB,MAAO,GACvBuiB,iBAAmBviB,MAAO,MAI3BusF,OAECvqE,OAAShiB,MAAO,MAChBiiB,gBAAkBjiB,MAAO,IAI1BwsF,UAECn8D,UAAYrwB,MAAO,MACnByzC,mBAAqBzzC,MAAO,IAI7BysF,aAECn8D,aAAetwB,MAAO,OAIvB0sF,SAECx/D,SAAWltB,MAAO,MAClB4zC,WAAa5zC,MAAO,IAIrB2sF,WAECx/D,WAAantB,MAAO,MACpB6zC,aAAe7zC,MAAO,GAAIhB,GAAS,EAAG,KAIvC4tF,iBAECh2E,iBAAmB5W,MAAO,MAC1B6W,mBAAqB7W,MAAO,GAC5B8W,kBAAoB9W,MAAO,IAI5B6sF,cAECt8D,cAAgBvwB,MAAO,OAIxB8sF,cAECt8D,cAAgBxwB,MAAO,OAIxByS,KAECpB,YAAcrR,MAAO,OACrBsR,SAAWtR,MAAO,GAClBuR,QAAUvR,MAAO,KACjBwR,UAAYxR,MAAO,GAAI4J,GAAO,YAI/B6J,QAEC+7B,mBAAqBxvC,UAErB0vC,mBAAqB1vC,SAAWk2B,YAC/BvW,aACA5S,SAEAmQ,UACAwN,cACAC,gBACAC,mBAGDklB,sBAAwB9vC,UACxB+vC,yBAA2B/vC,UAE3B2vC,YAAc3vC,SAAWk2B,YACxBnpB,SACAiE,YACA2O,aACAkL,YACAC,WACAC,eACAC,SAEA9N,UACAwN,cACAC,gBACAC,mBAGDolB,eAAiBhwC,UACjBiwC,kBAAoBjwC,UAEpB4vC,aAAe5vC,SAAWk2B,YACzBnpB,SACAiE,YACAga,SACAH,YAEA3N,UACAwN,cACAC,gBACAC,mBAGDslB,gBAAkBlwC,UAClBmwC,mBAAqBnwC,UAErB6vC,kBAAoB7vC,SAAWk2B,YAC9BvW,aACAsL,YACAC,kBAKFuwB,QAEC5I,SAAW7yC,MAAO,GAAI4J,GAAO,WAC7BkD,SAAW9M,MAAO,GAClBsH,MAAQtH,MAAO,GACfgN,OAAShN,MAAO,GAChB2D,KAAO3D,MAAO,MACdizC,cAAgBjzC,MAAO,GAAI0B,GAAS,EAAG,EAAG,EAAG,MAY3C0a,IAEH2wE,OAECpgF,SAAUhO,EAAQ2d,cAAcszC,OAE/BC,GAAYusB,OACZvsB,GAAY08B,MACZ18B,GAAYp9C,MAIbtG,aAAckiB,GAAY0yD,eAC1B10E,eAAgBgiB,GAAYyyD,gBAI7BkM,SAECrgF,SAAUhO,EAAQ2d,cAAcszC,OAE/BC,GAAYusB,OACZvsB,GAAY08B,MACZ18B,GAAY28B,SACZ38B,GAAY48B,YACZ58B,GAAYp9C,IACZo9C,GAAYp8C,QAGXq/B,UAAa9yC,MAAO,GAAI4J,GAAO,OAKjCuC,aAAckiB,GAAY4yD,iBAC1B50E,eAAgBgiB,GAAY2yD,kBAI7BiM,OAECtgF,SAAUhO,EAAQ2d,cAAcszC,OAE/BC,GAAYusB,OACZvsB,GAAY08B,MACZ18B,GAAY28B,SACZ38B,GAAY48B,YACZ58B,GAAY68B,QACZ78B,GAAY88B,UACZ98B,GAAY+8B,gBACZ/8B,GAAYp9C,IACZo9C,GAAYp8C,QAGXq/B,UAAa9yC,MAAO,GAAI4J,GAAO,IAC/B8pC,UAAa1zC,MAAO,GAAI4J,GAAO,UAC/B+pC,WAAa3zC,MAAO,OAKtBmM,aAAckiB,GAAY8yD,eAC1B90E,eAAgBgiB,GAAY6yD,gBAI7BgM,UAECvgF,SAAUhO,EAAQ2d,cAAcszC,OAE/BC,GAAYusB,OACZvsB,GAAY08B,MACZ18B,GAAY28B,SACZ38B,GAAY48B,YACZ58B,GAAY68B,QACZ78B,GAAY88B,UACZ98B,GAAY+8B,gBACZ/8B,GAAYg9B,aACZh9B,GAAYi9B,aACZj9B,GAAYp9C,IACZo9C,GAAYp8C,QAGXq/B,UAAa9yC,MAAO,GAAI4J,GAAO,IAC/BkqC,WAAa9zC,MAAO,IACpB+zC,WAAa/zC,MAAO,GACpBg0C,iBAAoBh0C,MAAO,MAK7BmM,aAAckiB,GAAYgzD,kBAC1Bh1E,eAAgBgiB,GAAY+yD,mBAI7B3lC,QAEC9uC,SAAUhO,EAAQ2d,cAAcszC,OAE/BC,GAAYpU,OACZoU,GAAYp9C,MAIbtG,aAAckiB,GAAYozD,YAC1Bp1E,eAAgBgiB,GAAYmzD,aAI7B2L,QAECxgF,SAAUhO,EAAQ2d,cAAcszC,OAE/BC,GAAYusB,OACZvsB,GAAYp9C,KAGXzF,OAAahN,MAAO,GACpBozC,UAAapzC,MAAO,GACpBqzC,WAAarzC,MAAO,MAKtBmM,aAAckiB,GAAYwyD,gBAC1Bx0E,eAAgBgiB,GAAYuyD,iBAI7B56D,OAECrZ,SAAUhO,EAAQ2d,cAAcszC,OAE/BC,GAAYusB,OACZvsB,GAAY+8B,kBAIbzgF,aAAckiB,GAAYkyD,WAC1Bl0E,eAAgBgiB,GAAYiyD,YAI7BjpE,QAEC1K,UAECG,SAAY9M,MAAO,IAIpBmM,aAAckiB,GAAYkzD,YAC1Bl1E,eAAgBgiB,GAAYizD,aAQ7B8L,MAECzgF,UACC0gF,OAASrtF,MAAO,MAChBstF,OAASttF,MAAO,IAChB8M,SAAW9M,MAAO,IAGnBmM,aAAckiB,GAAYgyD,UAC1Bh0E,eAAgBgiB,GAAY+xD,WAQ7BmN,UAEC5gF,UACC6gF,WAAaxtF,MAAO,MACpBstF,OAASttF,MAAO,KAGjBmM,aAAckiB,GAAYsyD,cAC1Bt0E,eAAgBgiB,GAAYqyD,eAI7B+M,cAEC9gF,UAEC0N,UAAYra,MAAO,GAAI8C,KAIxBqJ,aAAckiB,GAAYoyD,kBAC1Bp0E,eAAgBgiB,GAAYmyD,mBAM9BpkE,IAAUsxE,UAET/gF,SAAUhO,EAAQ2d,cAAcszC,OAE/BxzC,GAAU8wE,SAASvgF,UAGlBsnC,WAAaj0C,MAAO,GACpBk0C,oBAAsBl0C,MAAO,MAK/BmM,aAAckiB,GAAYgzD,kBAC1Bh1E,eAAgBgiB,GAAY+yD,mBAe7Br3E,EAAKmxD,WAEJ1I,YAAazoD,EAEbF,IAAK,SAAWG,EAAKC,GAKpB,MAHA9M,MAAK6M,IAAIqF,KAAMrF,GACf7M,KAAK8M,IAAIoF,KAAMpF,GAER9M,MAIRwwF,cAAe,SAAWlyC,GAEzBt+C,KAAKywF,WAEL,KAAM,GAAIvpF,GAAI,EAAG2Y,EAAKy+B,EAAOt4C,OAAY6Z,EAAJ3Y,EAAQA,IAE5ClH,KAAK0wF,cAAepyC,EAAQp3C,GAI7B,OAAOlH,OAIR2wF,qBAAsB,WAErB,GAAI/nC,GAAK,GAAI/mD,EAEb,OAAO,UAA+BiY,EAAQ3P,GAE7C,GAAIymF,GAAWhoC,EAAG12C,KAAM/H,GAAOyjC,eAAgB,GAI/C,OAHA5tC,MAAK6M,IAAIqF,KAAM4H,GAAS89B,IAAKg5C,GAC7B5wF,KAAK8M,IAAIoF,KAAM4H,GAASiH,IAAK6vE,GAEtB5wF,SAMT4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWs1D,GAKhB,MAHAxnE,MAAK6M,IAAIqF,KAAMs1D,EAAI36D,KACnB7M,KAAK8M,IAAIoF,KAAMs1D,EAAI16D,KAEZ9M,MAIRywF,UAAW,WAKV,MAHAzwF,MAAK6M,IAAI/K,EAAI9B,KAAK6M,IAAI9K,IAAMgL,EAAAA,GAC5B/M,KAAK8M,IAAIhL,EAAI9B,KAAK8M,IAAI/K,IAAMgL,EAAAA,GAErB/M,MAIR6wF,QAAS,WAIR,MAAS7wF,MAAK8M,IAAIhL,EAAI9B,KAAK6M,IAAI/K,GAAS9B,KAAK8M,IAAI/K,EAAI/B,KAAK6M,IAAI9K,GAI/D+uF,UAAW,SAAWrL,GAErB,GAAInqE,GAASmqE,GAAkB,GAAI5jF,EACnC,OAAO7B,MAAK6wF,UAAYv1E,EAAO5O,IAAK,EAAG,GAAM4O,EAAOoxC,WAAY1sD,KAAK6M,IAAK7M,KAAK8M,KAAM8gC,eAAgB,KAItG6R,QAAS,SAAWgmC,GAEnB,GAAInqE,GAASmqE,GAAkB,GAAI5jF,EACnC,OAAO7B,MAAK6wF,UAAYv1E,EAAO5O,IAAK,EAAG,GAAM4O,EAAOmxC,WAAYzsD,KAAK8M,IAAK9M,KAAK6M,MAIhF6jF,cAAe,SAAWv4D,GAKzB,MAHAn4B,MAAK6M,IAAIA,IAAKsrB,GACdn4B,KAAK8M,IAAIA,IAAKqrB,GAEPn4B,MAIR+wF,eAAgB,SAAW3mE,GAK1B,MAHApqB,MAAK6M,IAAI+qC,IAAKxtB,GACdpqB,KAAK8M,IAAIiU,IAAKqJ,GAEPpqB,MAIRgxF,eAAgB,SAAW7jB,GAK1B,MAHAntE,MAAK6M,IAAI0gE,WAAaJ,GACtBntE,KAAK8M,IAAIygE,UAAWJ,GAEbntE,MAIRmS,cAAe,SAAWgmB,GAEzB,MAAKA,GAAMr2B,EAAI9B,KAAK6M,IAAI/K,GAAKq2B,EAAMr2B,EAAI9B,KAAK8M,IAAIhL,GAC3Cq2B,EAAMp2B,EAAI/B,KAAK6M,IAAI9K,GAAKo2B,EAAMp2B,EAAI/B,KAAK8M,IAAI/K,GAExC,GAID,GAIRkvF,YAAa,SAAWzpB,GAEvB,MAAOxnE,MAAK6M,IAAI/K,GAAK0lE,EAAI36D,IAAI/K,GAAS0lE,EAAI16D,IAAIhL,GAAK9B,KAAK8M,IAAIhL,GACrD9B,KAAK6M,IAAI9K,GAAKylE,EAAI36D,IAAI9K,GAASylE,EAAI16D,IAAI/K,GAAK/B,KAAK8M,IAAI/K,GAEpD,GAID,GAIRikC,aAAc,SAAW7N,EAAOstD,GAK/B,GAAInqE,GAASmqE,GAAkB,GAAI5jF,EAEnC,OAAOyZ,GAAO5O,KACXyrB,EAAMr2B,EAAI9B,KAAK6M,IAAI/K,IAAQ9B,KAAK8M,IAAIhL,EAAI9B,KAAK6M,IAAI/K,IACjDq2B,EAAMp2B,EAAI/B,KAAK6M,IAAI9K,IAAQ/B,KAAK8M,IAAI/K,EAAI/B,KAAK6M,IAAI9K,KAKrDmvF,cAAe,SAAW1pB,GAIzB,MAAKA,GAAI16D,IAAIhL,EAAI9B,KAAK6M,IAAI/K,GAAK0lE,EAAI36D,IAAI/K,EAAI9B,KAAK8M,IAAIhL,GAC/C0lE,EAAI16D,IAAI/K,EAAI/B,KAAK6M,IAAI9K,GAAKylE,EAAI36D,IAAI9K,EAAI/B,KAAK8M,IAAI/K,GAE5C,GAID,GAIRovF,WAAY,SAAWh5D,EAAOstD,GAE7B,GAAInqE,GAASmqE,GAAkB,GAAI5jF,EACnC,OAAOyZ,GAAOpJ,KAAMimB,GAAQu3B,MAAO1vD,KAAK6M,IAAK7M,KAAK8M,MAInDokC,gBAAiB,WAEhB,GAAI0X,GAAK,GAAI/mD,EAEb,OAAO,UAA0Bs2B,GAEhC,GAAIi5D,GAAexoC,EAAG12C,KAAMimB,GAAQu3B,MAAO1vD,KAAK6M,IAAK7M,KAAK8M,IAC1D,OAAOskF,GAAax5C,IAAKzf,GAAQnyB,aAMnCqrF,UAAW,SAAW7pB,GAKrB,MAHAxnE,MAAK6M,IAAIC,IAAK06D,EAAI36D,KAClB7M,KAAK8M,IAAID,IAAK26D,EAAI16D,KAEX9M,MAIRsxF,MAAO,SAAW9pB,GAKjB,MAHAxnE,MAAK6M,IAAIA,IAAK26D,EAAI36D,KAClB7M,KAAK8M,IAAIA,IAAK06D,EAAI16D,KAEX9M,MAIRuxF,UAAW,SAAW1tF,GAKrB,MAHA7D,MAAK6M,IAAIkU,IAAKld,GACd7D,KAAK8M,IAAIiU,IAAKld,GAEP7D,MAIRoiC,OAAQ,SAAWolC,GAElB,MAAOA,GAAI36D,IAAIu1B,OAAQpiC,KAAK6M,MAAS26D,EAAI16D,IAAIs1B,OAAQpiC,KAAK8M,OAqzB5DsJ,EAAS2nD,WAER1I,YAAaj/C,EAEbo7E,YAAY,EAEZjzB,GAAI1pD,eAEH,MAAO7U,MAAKgY,cAIbumD,GAAI1pD,aAAahS,GAEXA,KAAU,GAAO7C,KAAKugB,SAC3BvgB,KAAKgY,aAAenV,GAIrBuW,UAAW,SAAW48C,GAErB,GAAgB5yD,SAAX4yD,EAEL,IAAM,GAAInP,KAAOmP,GAAS,CAEzB,GAAIy7B,GAAWz7B,EAAQnP,EAEvB,IAAkBzjD,SAAbquF,EAAL,CAOA,GAAIC,GAAe1xF,KAAM6mD,EAEHzjD,UAAjBsuF,EAOCA,GAAgBA,EAAa/sE,QAElC+sE,EAAahlF,IAAK+kF,GAENC,GAAgBA,EAAaltE,WAAeitE,GAAYA,EAASjtE,UAE7EktE,EAAax/E,KAAMu/E,GAEA,aAAR5qC,EAGX7mD,KAAM6mD,GAAQ0iB,OAAQkoB,GAItBzxF,KAAM6mD,GAAQ4qC,EApBdxrF,QAAQgc,KAAM,SAAWjiB,KAAKwC,KAAO,MAAQqkD,EAAM,6CATnD5gD,SAAQgc,KAAM,oBAAsB4kC,EAAM,+BAqC7C6nB,OAAQ,SAAWC,GAkGlB,QAASgjB,GAAkB7kD,GAE1B,GAAIkpB,KAEJ,KAAM,GAAInP,KAAO/Z,GAAQ,CAExB,GAAI1f,GAAO0f,EAAO+Z,SACXz5B,GAAK0hD,SACZ9Y,EAAO1qD,KAAM8hB,GAId,MAAO4oC,GA5GR,GAAI47B,GAAkBxuF,SAATurE,CAERijB,KAEJjjB,GACCxyC,YACA/1B,WAKF,IAAIgnB,IACH0hD,UACC1qE,QAAS,IACT5B,KAAM,WACNusE,UAAW,mBAiGb,IA5FA3hD,EAAKrqB,KAAO/C,KAAK+C,KACjBqqB,EAAK5qB,KAAOxC,KAAKwC,KAEE,KAAdxC,KAAKkD,OAAckqB,EAAKlqB,KAAOlD,KAAKkD,MAEnClD,KAAK4P,OAAS5P,KAAK4P,MAAM+U,UAAWyI,EAAKxd,MAAQ5P,KAAK4P,MAAM01E,UAE1CliF,SAAnBpD,KAAK22C,YAA0BvpB,EAAKupB,UAAY32C,KAAK22C,WAClCvzC,SAAnBpD,KAAK42C,YAA0BxpB,EAAKwpB,UAAY52C,KAAK42C,WAEpD52C,KAAK21C,UAAY31C,KAAK21C,SAAShxB,UAAWyI,EAAKuoB,SAAW31C,KAAK21C,SAAS2vC,UACxEtlF,KAAKu2C,UAAYv2C,KAAKu2C,SAAS5xB,UAAWyI,EAAKmpB,SAAWv2C,KAAKu2C,SAAS+uC,UACtDliF,SAAnBpD,KAAKw2C,YAA0BppB,EAAKopB,UAAYx2C,KAAKw2C,WAEpDx2C,KAAKwG,KAAOxG,KAAKwG,IAAIgwB,YAAapJ,EAAK5mB,IAAMxG,KAAKwG,IAAIkoE,OAAQC,GAAO5rE,MACrE/C,KAAKwZ,UAAYxZ,KAAKwZ,SAASgd,YAAapJ,EAAK5T,SAAWxZ,KAAKwZ,SAASk1D,OAAQC,GAAO5rE,MACzF/C,KAAKkzB,UAAYlzB,KAAKkzB,SAASsD,YAAapJ,EAAK8F,SAAWlzB,KAAKkzB,SAASw7C,OAAQC,GAAO5rE,MACzF/C,KAAK+vB,SAAW/vB,KAAK+vB,QAAQyG,YAElCpJ,EAAK2C,QAAU/vB,KAAK+vB,QAAQ2+C,OAAQC,GAAO5rE,KAC3CqqB,EAAKqpB,UAAYz2C,KAAKy2C,WAGjBz2C,KAAKgwB,WAAahwB,KAAKgwB,UAAUwG,YAEtCpJ,EAAK4C,UAAYhwB,KAAKgwB,UAAU0+C,OAAQC,GAAO5rE,KAC/CqqB,EAAKspB,YAAc12C,KAAK02C,YAAYzvC,WAG/BjH,KAAKyZ,iBAAmBzZ,KAAKyZ,gBAAgB+c,YAElDpJ,EAAK3T,gBAAkBzZ,KAAKyZ,gBAAgBi1D,OAAQC,GAAO5rE,KAC3DqqB,EAAK1T,kBAAoB1Z,KAAK0Z,kBAC9B0T,EAAKzT,iBAAmB3Z,KAAK2Z,kBAGxB3Z,KAAKozB,cAAgBpzB,KAAKozB,aAAaoD,YAAapJ,EAAKgG,aAAepzB,KAAKozB,aAAas7C,OAAQC,GAAO5rE,MACzG/C,KAAKqzB,cAAgBrzB,KAAKqzB,aAAamD,YAAapJ,EAAKiG,aAAerzB,KAAKqzB,aAAaq7C,OAAQC,GAAO5rE,MAEzG/C,KAAKmzB,aAAenzB,KAAKmzB,YAAYqD,YAAapJ,EAAK+F,YAAcnzB,KAAKmzB,YAAYu7C,OAAQC,GAAO5rE,MACrG/C,KAAK+kB,aAAe/kB,KAAK+kB,YAAYyR,YAAapJ,EAAKrI,YAAc/kB,KAAK+kB,YAAY2pD,OAAQC,GAAO5rE,MAErG/C,KAAKglB,QAAUhlB,KAAKglB,OAAOwR,YAEhCpJ,EAAKpI,OAAShlB,KAAKglB,OAAO0pD,OAAQC,GAAO5rE,KACzCqqB,EAAKjI,aAAenlB,KAAKmlB,cAIP/hB,SAAdpD,KAAKmK,OAAqBijB,EAAKjjB,KAAOnK,KAAKmK,MAClB/G,SAAzBpD,KAAK2zB,kBAAgCvG,EAAKuG,gBAAkB3zB,KAAK2zB,iBAEjE3zB,KAAKsT,WAAaiD,KAAiB6W,EAAK9Z,SAAWtT,KAAKsT,UACxDtT,KAAK0W,UAAYC,KAAgByW,EAAK1W,QAAU1W,KAAK0W,SACrD1W,KAAKwW,OAASC,KAAY2W,EAAK5W,KAAOxW,KAAKwW,MAC3CxW,KAAK4W,eAAiBC,KAAWuW,EAAKxW,aAAe5W,KAAK4W,cAE1D5W,KAAK2P,QAAU,IAAIyd,EAAKzd,QAAU3P,KAAK2P,SACvC3P,KAAK8W,eAAgB,IAAOsW,EAAKtW,YAAc9W,KAAK8W,aAEzDsW,EAAK/V,UAAYrX,KAAKqX,UACtB+V,EAAKlX,UAAYlW,KAAKkW,UACtBkX,EAAKjX,WAAanW,KAAKmW,WAElBnW,KAAKsU,UAAY,IAAI8Y,EAAK9Y,UAAYtU,KAAKsU,WAC3CtU,KAAK8X,sBAAuB,IAAOsV,EAAKtV,mBAAqB9X,KAAK8X,oBAClE9X,KAAKsY,aAAc,IAAO8U,EAAK9U,UAAYtY,KAAKsY,WAChDtY,KAAKuY,mBAAqB,IAAI6U,EAAK7U,mBAAqBvY,KAAKuY,oBACnC,UAA1BvY,KAAKqlB,mBAA+B+H,EAAK/H,iBAAmBrlB,KAAKqlB,kBACtC,UAA3BrlB,KAAKslB,oBAAgC8H,EAAK9H,kBAAoBtlB,KAAKslB,mBAExE8H,EAAK3U,SAAWzY,KAAKyY,SACrB2U,EAAK1U,aAAe1Y,KAAK0Y,aAoBpBk5E,EAAS,CAEb,GAAIz1D,GAAWw1D,EAAkBhjB,EAAKxyC,UAClC/1B,EAASurF,EAAkBhjB,EAAKvoE,OAE/B+1B,GAASn2B,OAAS,IAAIonB,EAAK+O,SAAWA,GACtC/1B,EAAOJ,OAAS,IAAIonB,EAAKhnB,OAASA,GAIxC,MAAOgnB,IAIRxQ,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWmpD,GAEhBr7D,KAAKkD,KAAOm4D,EAAOn4D,KAEnBlD,KAAKsV,IAAM+lD,EAAO/lD,IAClBtV,KAAKsW,OAAS+kD,EAAO/kD,OAErBtW,KAAKsT,SAAW+nD,EAAO/nD,SACvBtT,KAAKwW,KAAO6kD,EAAO7kD,KACnBxW,KAAK0W,QAAU2kD,EAAO3kD,QACtB1W,KAAK4W,aAAeykD,EAAOzkD,aAE3B5W,KAAK2P,QAAU0rD,EAAO1rD,QACtB3P,KAAK8W,YAAcukD,EAAOvkD,YAE1B9W,KAAKwT,SAAW6nD,EAAO7nD,SACvBxT,KAAKyT,SAAW4nD,EAAO5nD,SACvBzT,KAAKuT,cAAgB8nD,EAAO9nD,cAC5BvT,KAAKkX,cAAgBmkD,EAAOnkD,cAC5BlX,KAAKmX,cAAgBkkD,EAAOlkD,cAC5BnX,KAAKoX,mBAAqBikD,EAAOjkD,mBAEjCpX,KAAKqX,UAAYgkD,EAAOhkD,UACxBrX,KAAKkW,UAAYmlD,EAAOnlD,UACxBlW,KAAKmW,WAAaklD,EAAOllD,WAEzBnW,KAAKyX,WAAa4jD,EAAO5jD,WAEzBzX,KAAK0X,UAAY2jD,EAAO3jD,UAExB1X,KAAK2X,cAAgB0jD,EAAO1jD,cAC5B3X,KAAK4X,oBAAsByjD,EAAOzjD,oBAClC5X,KAAK6X,mBAAqBwjD,EAAOxjD,mBAEjC7X,KAAKsU,UAAY+mD,EAAO/mD,UAExBtU,KAAK8X,mBAAqBujD,EAAOvjD,mBAEjC9X,KAAK+X,SAAWsjD,EAAOtjD,SAEvB/X,KAAK+V,QAAUslD,EAAOtlD,QACtB/V,KAAKwX,YAAc6jD,EAAO7jD,WAE1B,IAAIq6E,GAAYx2B,EAAO9jD,eACtBu6E,EAAY,IAEb,IAAmB,OAAdD,EAAqB,CAEzB,GAAI/qF,GAAI+qF,EAAU7rF,MAClB8rF,GAAY,GAAIpzE,OAAO5X,EAEvB,KAAM,GAAII,GAAI,EAAGA,IAAMJ,IAAMI,EAC5B4qF,EAAW5qF,GAAM2qF,EAAW3qF,GAAI0V,QAMlC,MAFA5c,MAAKuX,eAAiBu6E,EAEf9xF,MAIRugB,OAAQ,WAEPvgB,KAAKmqE,eAAiB3nE,KAAM,YAI7Bq6B,QAAS,WAER78B,KAAKmqE,eAAiB3nE,KAAM,cAM9BG,OAAO+mE,OAAQtzD,EAAS2nD,UAAWn8D,EAAgBm8D,UAEnD,IAAI9lD,IAAU,CAgFdC,GAAe6lD,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACnD7lD,EAAe6lD,UAAU1I,YAAcn9C,EAEvCA,EAAe6lD,UAAU3pC,kBAAmB,EAE5Clc,EAAe6lD,UAAU7rD,KAAO,SAAWmpD,GAwB1C,MAtBAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAKkP,eAAiBmsD,EAAOnsD,eAC7BlP,KAAKgP,aAAeqsD,EAAOrsD,aAE3BhP,KAAKwP,SAAWhO,EAAQ2d,cAAcvC,MAAOy+C,EAAO7rD,UAEpDxP,KAAKoY,QAAUijD,EAAOjjD,QAEtBpY,KAAKsY,UAAY+iD,EAAO/iD,UACxBtY,KAAKuY,mBAAqB8iD,EAAO9iD,mBAEjCvY,KAAKsW,OAAS+kD,EAAO/kD,OACrBtW,KAAKwY,SAAW6iD,EAAO7iD,SAEvBxY,KAAKyY,SAAW4iD,EAAO5iD,SAEvBzY,KAAK0Y,aAAe2iD,EAAO3iD,aAC3B1Y,KAAK2Y,aAAe0iD,EAAO1iD,aAE3B3Y,KAAK4Y,WAAayiD,EAAOziD,WAElB5Y,MAIRkY,EAAe6lD,UAAU2Q,OAAS,SAAWC,GAE5C,GAAIvhD,GAAOhX,EAAS2nD,UAAU2Q,OAAOvpE,KAAMnF,KAAM2uE,EAMjD,OAJAvhD,GAAK5d,SAAWxP,KAAKwP,SACrB4d,EAAKpe,aAAehP,KAAKgP,aACzBoe,EAAKle,eAAiBlP,KAAKkP,eAEpBke,GAwDR/T,EAAkB0kD,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACtD1kD,EAAkB0kD,UAAU1I,YAAch8C,EAE1CA,EAAkB0kD,UAAUtpB,qBAAsB,EAElDp7B,EAAkB0kD,UAAU7rD,KAAO,SAAWmpD,GAoB7C,MAlBAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAKsZ,aAAe+hD,EAAO/hD,aAE3BtZ,KAAKyY,SAAW4iD,EAAO5iD,SACvBzY,KAAK0Y,aAAe2iD,EAAO3iD,aAE3B1Y,KAAKwG,IAAM60D,EAAO70D,IAElBxG,KAAKwZ,SAAW6hD,EAAO7hD,SAEvBxZ,KAAKyZ,gBAAkB4hD,EAAO5hD,gBAC9BzZ,KAAK0Z,kBAAoB2hD,EAAO3hD,kBAChC1Z,KAAK2Z,iBAAmB0hD,EAAO1hD,iBAE/B3Z,KAAKsY,UAAY+iD,EAAO/iD,UACxBtY,KAAKuY,mBAAqB8iD,EAAO9iD,mBAE1BvY,MAgBR4Z,GAAKmkD,WAEJ1I,YAAaz7C,GAEbm4E,QAAQ,EAERrlF,IAAK,SAAWG,EAAKC,GAKpB,MAHA9M,MAAK6M,IAAIqF,KAAMrF,GACf7M,KAAK8M,IAAIoF,KAAMpF,GAER9M,MAIRgyF,aAAc,SAAWtrF,GAUxB,IAAM,GARFurF,KAASllF,EAAAA,GACTmlF,IAASnlF,EAAAA,GACTolF,IAASplF,EAAAA,GAETqlF,IAASrlF,EAAAA,GACTslF,IAAStlF,EAAAA,GACTulF,IAASvlF,EAAAA,GAEH7F,EAAI,EAAGyK,EAAIjL,EAAMV,OAAY2L,EAAJzK,EAAOA,GAAK,EAAI,CAElD,GAAIpF,GAAI4E,EAAOQ,GACXnF,EAAI2E,EAAOQ,EAAI,GACf1C,EAAIkC,EAAOQ,EAAI,EAEV+qF,GAAJnwF,IAAWmwF,EAAOnwF,GACdowF,EAAJnwF,IAAWmwF,EAAOnwF,GACdowF,EAAJ3tF,IAAW2tF,EAAO3tF,GAElB1C,EAAIswF,IAAOA,EAAOtwF,GAClBC,EAAIswF,IAAOA,EAAOtwF,GAClByC,EAAI8tF,IAAOA,EAAO9tF,GAIxBxE,KAAK6M,IAAIH,IAAKulF,EAAMC,EAAMC,GAC1BnyF,KAAK8M,IAAIJ,IAAK0lF,EAAMC,EAAMC,IAI3B9B,cAAe,SAAWlyC,GAEzBt+C,KAAKywF,WAEL,KAAM,GAAIvpF,GAAI,EAAG2Y,EAAKy+B,EAAOt4C,OAAY6Z,EAAJ3Y,EAAQA,IAE5ClH,KAAK0wF,cAAepyC,EAAQp3C,GAI7B,OAAOlH,OAIR2wF,qBAAsB,WAErB,GAAI/nC,GAAK,GAAIjjD,EAEb,OAAO,UAA+BmU,EAAQ3P,GAE7C,GAAIymF,GAAWhoC,EAAG12C,KAAM/H,GAAOyjC,eAAgB,GAK/C,OAHA5tC,MAAK6M,IAAIqF,KAAM4H,GAAS89B,IAAKg5C,GAC7B5wF,KAAK8M,IAAIoF,KAAM4H,GAASiH,IAAK6vE,GAEtB5wF,SAMTk6B,cAAe,WAKd,GAAI0uB,GAAK,GAAIjjD,EAEb,OAAO,UAAwBuV,GAE9B,GAAI2B,GAAQ7c,IAgEZ,OA9DAkb,GAAOkG,mBAAmB,GAE1BphB,KAAKywF,YAELv1E,EAAOq3E,SAAU,SAAW70B,GAE3B,GAAIriD,GAAWqiD,EAAKriD,QAEpB,IAAkBjY,SAAbiY,EAEJ,GAAMA,GAAYA,EAASW,WAI1B,IAAM,GAFF7O,GAAWkO,EAASlO,SAEdjG,EAAI,EAAG2Y,EAAK1S,EAASnH,OAAY6Z,EAAJ3Y,EAAQA,IAE9C0hD,EAAG12C,KAAM/E,EAAUjG,IACnB0hD,EAAG92C,aAAc4rD,EAAK7rD,aAEtBgL,EAAM6zE,cAAe9nC,OAIhB,IAAMvtC,GAAYA,EAASS,iBAAoB,CAErD,GAAI6d,GAAYte,EAASjM,WAAWyE,QAEpC,IAAmBzQ,SAAdu2B,EAA0B,CAE9B,GAAIjzB,GAAO7C,EAAQ0rC,CAEb5V,IAAaA,EAAUxM,8BAE5BzmB,EAAQizB,EAAUvM,KAAK1mB,MACvB7C,EAAS81B,EAAU91B,OACnB0rC,EAAS5V,EAAUvM,KAAKmiB,SAIxB7oC,EAAQizB,EAAUjzB,MAClB7C,EAAS,EACT0rC,EAAS,EAIV,KAAM,GAAIroC,GAAIrD,EAAQgc,EAAKnZ,EAAMV,OAAY6Z,EAAJ3Y,EAAQA,GAAKqoC,EAErDqZ,EAAGxD,UAAW1+C,EAAOQ,GACrB0hD,EAAG92C,aAAc4rD,EAAK7rD,aAEtBgL,EAAM6zE,cAAe9nC,OAYnB5oD,SAMT4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWs1D,GAKhB,MAHAxnE,MAAK6M,IAAIqF,KAAMs1D,EAAI36D,KACnB7M,KAAK8M,IAAIoF,KAAMs1D,EAAI16D,KAEZ9M,MAIRywF,UAAW,WAKV,MAHAzwF,MAAK6M,IAAI/K,EAAI9B,KAAK6M,IAAI9K,EAAI/B,KAAK6M,IAAIrI,IAAMuI,EAAAA,GACzC/M,KAAK8M,IAAIhL,EAAI9B,KAAK8M,IAAI/K,EAAI/B,KAAK8M,IAAItI,IAAMuI,EAAAA,GAElC/M,MAIR6wF,QAAS,WAIR,MAAS7wF,MAAK8M,IAAIhL,EAAI9B,KAAK6M,IAAI/K,GAAS9B,KAAK8M,IAAI/K,EAAI/B,KAAK6M,IAAI9K,GAAS/B,KAAK8M,IAAItI,EAAIxE,KAAK6M,IAAIrI,GAI9FssF,UAAW,SAAWrL,GAErB,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EACnC,OAAO3F,MAAK6wF,UAAYv1E,EAAO5O,IAAK,EAAG,EAAG,GAAM4O,EAAOoxC,WAAY1sD,KAAK6M,IAAK7M,KAAK8M,KAAM8gC,eAAgB,KAIzG6R,QAAS,SAAWgmC,GAEnB,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EACnC,OAAO3F,MAAK6wF,UAAYv1E,EAAO5O,IAAK,EAAG,EAAG,GAAM4O,EAAOmxC,WAAYzsD,KAAK8M,IAAK9M,KAAK6M,MAInF6jF,cAAe,SAAWv4D,GAKzB,MAHAn4B,MAAK6M,IAAIA,IAAKsrB,GACdn4B,KAAK8M,IAAIA,IAAKqrB,GAEPn4B,MAIR+wF,eAAgB,SAAW3mE,GAK1B,MAHApqB,MAAK6M,IAAI+qC,IAAKxtB,GACdpqB,KAAK8M,IAAIiU,IAAKqJ,GAEPpqB,MAIRgxF,eAAgB,SAAW7jB,GAK1B,MAHAntE,MAAK6M,IAAI0gE,WAAaJ,GACtBntE,KAAK8M,IAAIygE,UAAWJ,GAEbntE,MAIRmS,cAAe,SAAWgmB,GAEzB,MAAKA,GAAMr2B,EAAI9B,KAAK6M,IAAI/K,GAAKq2B,EAAMr2B,EAAI9B,KAAK8M,IAAIhL,GAC7Cq2B,EAAMp2B,EAAI/B,KAAK6M,IAAI9K,GAAKo2B,EAAMp2B,EAAI/B,KAAK8M,IAAI/K,GAC3Co2B,EAAM3zB,EAAIxE,KAAK6M,IAAIrI,GAAK2zB,EAAM3zB,EAAIxE,KAAK8M,IAAItI,GAEtC,GAID,GAIRysF,YAAa,SAAWzpB,GAEvB,MAAOxnE,MAAK6M,IAAI/K,GAAK0lE,EAAI36D,IAAI/K,GAAS0lE,EAAI16D,IAAIhL,GAAK9B,KAAK8M,IAAIhL,GACxD9B,KAAK6M,IAAI9K,GAAKylE,EAAI36D,IAAI9K,GAASylE,EAAI16D,IAAI/K,GAAK/B,KAAK8M,IAAI/K,GACrD/B,KAAK6M,IAAIrI,GAAKgjE,EAAI36D,IAAIrI,GAASgjE,EAAI16D,IAAItI,GAAKxE,KAAK8M,IAAItI,GAEjD,GAID,GAIRwhC,aAAc,SAAW7N,EAAOstD,GAK/B,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EAEnC,OAAO2V,GAAO5O,KACXyrB,EAAMr2B,EAAI9B,KAAK6M,IAAI/K,IAAQ9B,KAAK8M,IAAIhL,EAAI9B,KAAK6M,IAAI/K,IACjDq2B,EAAMp2B,EAAI/B,KAAK6M,IAAI9K,IAAQ/B,KAAK8M,IAAI/K,EAAI/B,KAAK6M,IAAI9K,IACjDo2B,EAAM3zB,EAAIxE,KAAK6M,IAAIrI,IAAQxE,KAAK8M,IAAItI,EAAIxE,KAAK6M,IAAIrI,KAKrD0sF,cAAe,SAAW1pB,GAIzB,MAAKA,GAAI16D,IAAIhL,EAAI9B,KAAK6M,IAAI/K,GAAK0lE,EAAI36D,IAAI/K,EAAI9B,KAAK8M,IAAIhL,GACjD0lE,EAAI16D,IAAI/K,EAAI/B,KAAK6M,IAAI9K,GAAKylE,EAAI36D,IAAI9K,EAAI/B,KAAK8M,IAAI/K,GAC/CylE,EAAI16D,IAAItI,EAAIxE,KAAK6M,IAAIrI,GAAKgjE,EAAI36D,IAAIrI,EAAIxE,KAAK8M,IAAItI,GAE1C,GAID,GAIRssC,iBAAkB,WAEjB,GAAI0hD,EAEJ,OAAO,UAA2B3hD,GAQjC,MANsBztC,UAAjBovF,IAA6BA,EAAe,GAAI7sF,IAGrD3F,KAAKmxF,WAAYtgD,EAAO/2B,OAAQ04E,GAGzBA,EAAarkB,kBAAmBt9B,EAAO/2B,SAAc+2B,EAAO92B,OAAS82B,EAAO92B,WAMrF04E,gBAAiB,SAAWjmD,GAK3B,GAAI3/B,GAAKC,CAsCT,OApCK0/B,GAAMtyB,OAAOpY,EAAI,GAErB+K,EAAM2/B,EAAMtyB,OAAOpY,EAAI9B,KAAK6M,IAAI/K,EAChCgL,EAAM0/B,EAAMtyB,OAAOpY,EAAI9B,KAAK8M,IAAIhL,IAIhC+K,EAAM2/B,EAAMtyB,OAAOpY,EAAI9B,KAAK8M,IAAIhL,EAChCgL,EAAM0/B,EAAMtyB,OAAOpY,EAAI9B,KAAK6M,IAAI/K,GAI5B0qC,EAAMtyB,OAAOnY,EAAI,GAErB8K,GAAO2/B,EAAMtyB,OAAOnY,EAAI/B,KAAK6M,IAAI9K,EACjC+K,GAAO0/B,EAAMtyB,OAAOnY,EAAI/B,KAAK8M,IAAI/K,IAIjC8K,GAAO2/B,EAAMtyB,OAAOnY,EAAI/B,KAAK8M,IAAI/K,EACjC+K,GAAO0/B,EAAMtyB,OAAOnY,EAAI/B,KAAK6M,IAAI9K,GAI7ByqC,EAAMtyB,OAAO1V,EAAI,GAErBqI,GAAO2/B,EAAMtyB,OAAO1V,EAAIxE,KAAK6M,IAAIrI,EACjCsI,GAAO0/B,EAAMtyB,OAAO1V,EAAIxE,KAAK8M,IAAItI,IAIjCqI,GAAO2/B,EAAMtyB,OAAO1V,EAAIxE,KAAK8M,IAAItI,EACjCsI,GAAO0/B,EAAMtyB,OAAO1V,EAAIxE,KAAK6M,IAAIrI,GAIzBqI,GAAO2/B,EAAMryB,UAAYrN,GAAO0/B,EAAMryB,UAIhDg3E,WAAY,SAAWh5D,EAAOstD,GAE7B,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EACnC,OAAO2V,GAAOpJ,KAAMimB,GAAQu3B,MAAO1vD,KAAK6M,IAAK7M,KAAK8M,MAInDokC,gBAAiB,WAEhB,GAAI0X,GAAK,GAAIjjD,EAEb,OAAO,UAA0BwyB,GAEhC,GAAIi5D,GAAexoC,EAAG12C,KAAMimB,GAAQu3B,MAAO1vD,KAAK6M,IAAK7M,KAAK8M,IAC1D,OAAOskF,GAAax5C,IAAKzf,GAAQnyB,aAMnC0sF,kBAAmB,WAElB,GAAI9pC,GAAK,GAAIjjD,EAEb,OAAO,UAA4B8/E,GAElC,GAAInqE,GAASmqE,GAAkB,GAAI5rE,GAMnC,OAJA7Z,MAAK8wF,UAAWx1E,EAAOxB,QAEvBwB,EAAOvB,OAAoC,GAA3B/Z,KAAKmK,KAAMy+C,GAAK5iD,SAEzBsV,MAMT+1E,UAAW,SAAW7pB,GAQrB,MANAxnE,MAAK6M,IAAIC,IAAK06D,EAAI36D,KAClB7M,KAAK8M,IAAID,IAAK26D,EAAI16D,KAGd9M,KAAK6wF,WAAY7wF,KAAKywF,YAEnBzwF,MAIRsxF,MAAO,SAAW9pB,GAKjB,MAHAxnE,MAAK6M,IAAIA,IAAK26D,EAAI36D,KAClB7M,KAAK8M,IAAIA,IAAK06D,EAAI16D,KAEX9M,MAIR8R,aAAc,WAEb,GAAIwsC,IACH,GAAI34C,GACJ,GAAIA,GACJ,GAAIA,GACJ,GAAIA,GACJ,GAAIA,GACJ,GAAIA,GACJ,GAAIA,GACJ,GAAIA,GAGL,OAAO,UAAuB+a,GAG7B,MAAI1gB,MAAK6wF,UAAmB7wF,MAG5Bs+C,EAAQ,GAAI5xC,IAAK1M,KAAK6M,IAAI/K,EAAG9B,KAAK6M,IAAI9K,EAAG/B,KAAK6M,IAAIrI,GAAIsN,aAAc4O,GACpE49B,EAAQ,GAAI5xC,IAAK1M,KAAK6M,IAAI/K,EAAG9B,KAAK6M,IAAI9K,EAAG/B,KAAK8M,IAAItI,GAAIsN,aAAc4O,GACpE49B,EAAQ,GAAI5xC,IAAK1M,KAAK6M,IAAI/K,EAAG9B,KAAK8M,IAAI/K,EAAG/B,KAAK6M,IAAIrI,GAAIsN,aAAc4O,GACpE49B,EAAQ,GAAI5xC,IAAK1M,KAAK6M,IAAI/K,EAAG9B,KAAK8M,IAAI/K,EAAG/B,KAAK8M,IAAItI,GAAIsN,aAAc4O,GACpE49B,EAAQ,GAAI5xC,IAAK1M,KAAK8M,IAAIhL,EAAG9B,KAAK6M,IAAI9K,EAAG/B,KAAK6M,IAAIrI,GAAIsN,aAAc4O,GACpE49B,EAAQ,GAAI5xC,IAAK1M,KAAK8M,IAAIhL,EAAG9B,KAAK6M,IAAI9K,EAAG/B,KAAK8M,IAAItI,GAAIsN,aAAc4O,GACpE49B,EAAQ,GAAI5xC,IAAK1M,KAAK8M,IAAIhL,EAAG9B,KAAK8M,IAAI/K,EAAG/B,KAAK6M,IAAIrI,GAAIsN,aAAc4O,GACpE49B,EAAQ,GAAI5xC,IAAK1M,KAAK8M,IAAIhL,EAAG9B,KAAK8M,IAAI/K,EAAG/B,KAAK8M,IAAItI,GAAIsN,aAAc4O,GAEpE1gB,KAAKwwF,cAAelyC,GAEbt+C,UAMTuxF,UAAW,SAAW1tF,GAKrB,MAHA7D,MAAK6M,IAAIkU,IAAKld,GACd7D,KAAK8M,IAAIiU,IAAKld,GAEP7D,MAIRoiC,OAAQ,SAAWolC,GAElB,MAAOA,GAAI36D,IAAIu1B,OAAQpiC,KAAK6M,MAAS26D,EAAI16D,IAAIs1B,OAAQpiC,KAAK8M,OAkB5D+M,GAAOkkD,WAEN1I,YAAax7C,GAEbnN,IAAK,SAAWoN,EAAQC,GAKvB,MAHA/Z,MAAK8Z,OAAO5H,KAAM4H,GAClB9Z,KAAK+Z,OAASA,EAEP/Z,MAIRwwF,cAAe,WAEd,GAAIhpB,GAAM,GAAI5tD,GAEd,OAAO,UAAwB0kC,EAAQq0C,GAEtC,GAAI74E,GAAS9Z,KAAK8Z,MAEM1W,UAAnBuvF,EAEJ74E,EAAO5H,KAAMygF,GAIbnrB,EAAIgpB,cAAelyC,GAASwyC,UAAWh3E,EAMxC,KAAM,GAFF84E,GAAc,EAER1rF,EAAI,EAAG2Y,EAAKy+B,EAAOt4C,OAAY6Z,EAAJ3Y,EAAQA,IAE5C0rF,EAAc5vF,KAAK8J,IAAK8lF,EAAa94E,EAAOq0D,kBAAmB7vB,EAAQp3C,IAMxE,OAFAlH,MAAK+Z,OAAS/W,KAAKmhD,KAAMyuC,GAElB5yF,SAMT4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAW2+B,GAKhB,MAHA7wC,MAAK8Z,OAAO5H,KAAM2+B,EAAO/2B,QACzB9Z,KAAK+Z,OAAS82B,EAAO92B,OAEd/Z,MAIR6yF,MAAO,WAEN,MAAS7yF,MAAK+Z,QAAU,GAIzB5H,cAAe,SAAWgmB,GAEzB,MAASA,GAAMg2C,kBAAmBnuE,KAAK8Z,SAAc9Z,KAAK+Z,OAAS/Z,KAAK+Z,QAIzEm3B,gBAAiB,SAAW/Y,GAE3B,MAASA,GAAM+rC,WAAYlkE,KAAK8Z,QAAW9Z,KAAK+Z,QAIjD+2B,iBAAkB,SAAWD,GAE5B,GAAIiiD,GAAY9yF,KAAK+Z,OAAS82B,EAAO92B,MAErC,OAAO82B,GAAO/2B,OAAOq0D,kBAAmBnuE,KAAK8Z,SAAcg5E,EAAYA,GAIxE5B,cAAe,SAAW1pB,GAEzB,MAAOA,GAAI12B,iBAAkB9wC,OAI9ByyF,gBAAiB,SAAWjmD,GAU3B,MAAOxpC,MAAK+sC,IAAK/vC,KAAK8Z,OAAO62C,IAAKnkB,EAAMtyB,QAAWsyB,EAAMryB,WAAcna,KAAK+Z,QAI7Eo3E,WAAY,SAAWh5D,EAAOstD,GAE7B,GAAIsN,GAAgB/yF,KAAK8Z,OAAOq0D,kBAAmBh2C,GAE/C7c,EAASmqE,GAAkB,GAAI9/E,EAWnC,OATA2V,GAAOpJ,KAAMimB,GAER46D,EAAkB/yF,KAAK+Z,OAAS/Z,KAAK+Z,SAEzCuB,EAAOs8B,IAAK53C,KAAK8Z,QAASy+B,YAC1Bj9B,EAAOsyB,eAAgB5tC,KAAK+Z,QAASgH,IAAK/gB,KAAK8Z,SAIzCwB,GAIR03E,eAAgB,SAAWvN,GAE1B,GAAIje,GAAMie,GAAkB,GAAI7rE,GAKhC,OAHA4tD,GAAI96D,IAAK1M,KAAK8Z,OAAQ9Z,KAAK8Z,QAC3B0tD,EAAIwpB,eAAgBhxF,KAAK+Z,QAElBytD,GAIR11D,aAAc,SAAW4O,GAKxB,MAHA1gB,MAAK8Z,OAAOhI,aAAc4O,GAC1B1gB,KAAK+Z,OAAS/Z,KAAK+Z,OAAS2G,EAAOw7D,oBAE5Bl8E,MAIRuxF,UAAW,SAAW1tF,GAIrB,MAFA7D,MAAK8Z,OAAOiH,IAAKld,GAEV7D,MAIRoiC,OAAQ,SAAWyO,GAElB,MAAOA,GAAO/2B,OAAOsoB,OAAQpiC,KAAK8Z,SAAc+2B,EAAO92B,SAAW/Z,KAAK+Z,SA+BzEC,GAAQ+jD,WAEP1I,YAAar7C,GAEb+jE,WAAW,EAEXrxE,IAAK,SAAW0pE,EAAKC,EAAKC,EAAKE,EAAKC,EAAKC,EAAKE,EAAKC,EAAKC,GAEvD,GAAInH,GAAK3vE,KAAK6F,QAMd,OAJA8pE,GAAI,GAAMyG,EAAKzG,EAAI,GAAM6G,EAAK7G,EAAI,GAAMiH,EACxCjH,EAAI,GAAM0G,EAAK1G,EAAI,GAAM8G,EAAK9G,EAAI,GAAMkH,EACxClH,EAAI,GAAM2G,EAAK3G,EAAI,GAAM+G,EAAK/G,EAAI,GAAMmH,EAEjC92E,MAIRo4C,SAAU,WAUT,MARAp4C,MAAK0M,IAEJ,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAIA1M,MAIR4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcjQ,UAAWplD,KAAK6F,WAI/CqM,KAAM,SAAW25D,GAEhB,GAAIwL,GAAKxL,EAAEhmE,QAUX,OARA7F,MAAK0M,IAEJ2qE,EAAI,GAAKA,EAAI,GAAKA,EAAI,GACtBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GACtBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAIhBr3E,MAIRizF,eAAgB,SAAUpnB,GAEzB,GAAIwL,GAAKxL,EAAEhmE,QAUX,OARA7F,MAAK0M,IAEJ2qE,EAAI,GAAKA,EAAI,GAAKA,EAAK,GACvBA,EAAI,GAAKA,EAAI,GAAKA,EAAK,GACvBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAIhBr3E,MAIRm7E,oBAAqB,WAEpB,GAAIvyB,EAEJ,OAAO,UAA8BliD,EAAO7C,EAAQmC,GAEvC5C,SAAPwlD,IAAmBA,EAAK,GAAIjjD,IACjBvC,SAAXS,IAAuBA,EAAS,GACrBT,SAAX4C,IAAuBA,EAASU,EAAMV,OAE3C,KAAM,GAAIkB,GAAI,EAAG+L,EAAIpP,EAAYmC,EAAJkB,EAAYA,GAAK,EAAG+L,GAAK,EAErD21C,EAAGxD,UAAW1+C,EAAOuM,GACrB21C,EAAG2rB,aAAcv0E,MACjB4oD,EAAG3hD,QAASP,EAAOuM,EAIpB,OAAOvM,OAMT00E,cAAe,WAEd,GAAIxyB,EAEJ,OAAO,UAAwB/uB,EAAQh2B,EAAQmC,GAElC5C,SAAPwlD,IAAmBA,EAAK,GAAIjjD,IACjBvC,SAAXS,IAAuBA,EAAS,GACrBT,SAAX4C,IAAuBA,EAAS6zB,EAAO7zB,OAAS6zB,EAAOrU,SAE5D,KAAM,GAAIte,GAAI,EAAG+L,EAAIpP,EAAYmC,EAAJkB,EAAYA,IAAM+L,IAE9C21C,EAAG9mD,EAAI+3B,EAAOstB,KAAMl0C,GACpB21C,EAAG7mD,EAAI83B,EAAOutB,KAAMn0C,GACpB21C,EAAGpkD,EAAIq1B,EAAOwtB,KAAMp0C,GAEpB21C,EAAG2rB,aAAcv0E,MAEjB65B,EAAO+yB,OAAQhE,EAAG9mD,EAAG8mD,EAAG7mD,EAAG6mD,EAAGpkD,EAI/B,OAAOq1B,OAMT+T,eAAgB,SAAWwkB,GAE1B,GAAIud,GAAK3vE,KAAK6F,QAMd,OAJA8pE,GAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EACvCud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EACvCud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAAGud,EAAI,IAAOvd,EAEhCpyD,MAIRq7E,YAAa,WAEZ,GAAI1L,GAAK3vE,KAAK6F,SAEVkP,EAAI46D,EAAI,GAAKtnE,EAAIsnE,EAAI,GAAKrrD,EAAIqrD,EAAI,GACrCxmD,EAAIwmD,EAAI,GAAKN,EAAIM,EAAI,GAAK/zC,EAAI+zC,EAAI,GAClCvnE,EAAIunE,EAAI,GAAKzmD,EAAIymD,EAAI,GAAKzoE,EAAIyoE,EAAI,EAEnC,OAAO56D,GAAIs6D,EAAInoE,EAAI6N,EAAI6mB,EAAI1S,EAAI7gB,EAAI8gB,EAAIjiB,EAAImB,EAAIuzB,EAAIxzB,EAAIkc,EAAI6E,EAAID,EAAI5E,EAAI+qD,EAAIjnE,GAI5EiZ,WAAY,SAAWX,EAAQg7D,GAExBh7D,GAAUA,EAAOy1D,WAEtBlwE,QAAQC,MAAO,+DAIhB,IAAImxE,GAAK32D,EAAO7a,SACf8pE,EAAK3vE,KAAK6F,SAEVuwE,EAAMiB,EAAI,GAAKb,EAAMa,EAAI,GAAKT,EAAMS,EAAI,GACxChB,EAAMgB,EAAI,GAAKZ,EAAMY,EAAI,GAAKR,EAAMQ,EAAI,GACxCf,EAAMe,EAAI,GAAKX,EAAMW,EAAI,GAAKP,EAAMO,EAAI,GAExCsE,EAAM7E,EAAML,EAAMI,EAAMH,EACxBkF,EAAM/E,EAAMP,EAAMQ,EAAMT,EACxBwF,EAAMnF,EAAML,EAAMI,EAAMH,EAExByF,EAAM3F,EAAMuF,EAAMnF,EAAMoF,EAAMhF,EAAMiF,CAErC,IAAa,IAARE,EAAY,CAEhB,GAAIC,GAAM,mEAEV,IAAKN,KAAsB,EAE1B,KAAM,IAAI3sD,OAAOitD,EAQlB,OAJC/1E,SAAQgc,KAAM+5D,GAIRh8E,KAAKo4C,WAGb,GAAI6jC,GAAS,EAAIF,CAcjB,OAZApM,GAAI,GAAMgM,EAAMM,EAChBtM,EAAI,IAAQiH,EAAMF,EAAMI,EAAMN,GAAQyF,EACtCtM,EAAI,IAAQkH,EAAML,EAAMI,EAAMH,GAAQwF,EAEtCtM,EAAI,GAAMiM,EAAMK,EAChBtM,EAAI,IAAQmH,EAAMV,EAAMQ,EAAMN,GAAQ2F,EACtCtM,EAAI,IAAQiH,EAAMP,EAAMQ,EAAMT,GAAQ6F,EAEtCtM,EAAI,GAAMkM,EAAMI,EAChBtM,EAAI,IAAQ6G,EAAMF,EAAMI,EAAMN,GAAQ6F,EACtCtM,EAAI,IAAQ8G,EAAML,EAAMI,EAAMH,GAAQ4F,EAE/Bj8E,MAIRs7E,UAAW,WAEV,GAAIC,GAAK1P,EAAI7rE,KAAK6F,QAMlB,OAJA01E,GAAM1P,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAM0P,EACxCA,EAAM1P,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAM0P,EACxCA,EAAM1P,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAM0P,EAEjCv7E,MAIRw7E,qBAAsB,SAAW90E,EAAO7C,GAKvC,MAHAoC,SAAQgc,KAAM,mFAGPjiB,KAAKiH,QAASP,EAAO7C,IAI7ByoC,gBAAiB,SAAW4mD,GAE3B,MAAOlzF,MAAKizF,eAAgBC,GAAU7xE,WAAYrhB,MAAOs7E,aAI1D6X,mBAAoB,SAAWpsF,GAE9B,GAAI8kE,GAAI7rE,KAAK6F,QAYb,OAVAkB,GAAG,GAAM8kE,EAAG,GACZ9kE,EAAG,GAAM8kE,EAAG,GACZ9kE,EAAG,GAAM8kE,EAAG,GACZ9kE,EAAG,GAAM8kE,EAAG,GACZ9kE,EAAG,GAAM8kE,EAAG,GACZ9kE,EAAG,GAAM8kE,EAAG,GACZ9kE,EAAG,GAAM8kE,EAAG,GACZ9kE,EAAG,GAAM8kE,EAAG,GACZ9kE,EAAG,GAAM8kE,EAAG,GAEL7rE,MAIRolD,UAAW,SAAW1+C,EAAO7C,GAEZT,SAAXS,IAAuBA,EAAS,EAErC,KAAK,GAAIqD,GAAI,EAAO,EAAJA,EAAOA,IAEtBlH,KAAK6F,SAAUqB,GAAMR,EAAOQ,EAAIrD,EAIjC,OAAO7D,OAIRiH,QAAS,SAAWP,EAAO7C,GAEXT,SAAVsD,IAAsBA,MACXtD,SAAXS,IAAuBA,EAAS,EAErC,IAAI8rE,GAAK3vE,KAAK6F,QAcd,OAZAa,GAAO7C,GAAW8rE,EAAI,GACtBjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAE1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAE1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAM8rE,EAAI,GAC1BjpE,EAAO7C,EAAS,GAAO8rE,EAAI,GAEpBjpE,IAiBTuT,GAAM8jD,WAEL1I,YAAap7C,GAEbvN,IAAK,SAAWwN,EAAQC,GAKvB,MAHAna,MAAKka,OAAOhI,KAAMgI,GAClBla,KAAKma,SAAWA,EAETna,MAIRozF,cAAe,SAAWtxF,EAAGC,EAAGyC,EAAGhE,GAKlC,MAHAR,MAAKka,OAAOxN,IAAK5K,EAAGC,EAAGyC,GACvBxE,KAAKma,SAAW3Z,EAETR,MAIRqzF,8BAA+B,SAAWn5E,EAAQie,GAKjD,MAHAn4B,MAAKka,OAAOhI,KAAMgI,GAClBla,KAAKma,UAAage,EAAMw4B,IAAK3wD,KAAKka,QAE3Bla,MAIRszF,sBAAuB,WAEtB,GAAI1qC,GAAK,GAAIjjD,GACTkjD,EAAK,GAAIljD,EAEb,OAAO,UAAgCoP,EAAG1M,EAAGic,GAE5C,GAAIpK,GAAS0uC,EAAG6D,WAAYnoC,EAAGjc,GAAIysE,MAAOjsB,EAAG4D,WAAY13C,EAAG1M,IAAMkwC,WAMlE,OAFAv4C,MAAKqzF,8BAA+Bn5E,EAAQnF,GAErC/U,SAMT4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWs6B,GAKhB,MAHAxsC,MAAKka,OAAOhI,KAAMs6B,EAAMtyB,QACxBla,KAAKma,SAAWqyB,EAAMryB,SAEfna,MAIRu4C,UAAW,WAIV,GAAIg7C,GAAsB,EAAMvzF,KAAKka,OAAOlU,QAI5C,OAHAhG,MAAKka,OAAO0zB,eAAgB2lD,GAC5BvzF,KAAKma,UAAYo5E,EAEVvzF,MAIRm4C,OAAQ,WAKP,MAHAn4C,MAAKma,UAAY,GACjBna,KAAKka,OAAOi+B,SAELn4C,MAIRkxC,gBAAiB,SAAW/Y,GAE3B,MAAOn4B,MAAKka,OAAOy2C,IAAKx4B,GAAUn4B,KAAKma,UAIxCq5E,iBAAkB,SAAW3iD,GAE5B,MAAO7wC,MAAKkxC,gBAAiBL,EAAO/2B,QAAW+2B,EAAO92B,QAIvD05E,aAAc,SAAWt7D,EAAOstD,GAE/B,MAAOzlF,MAAK0zF,WAAYv7D,EAAOstD,GAAiB7tC,IAAKzf,GAAQggB,UAI9Du7C,WAAY,SAAWv7D,EAAOstD,GAE7B,GAAIkO,GAAyB3zF,KAAKkxC,gBAAiB/Y,GAE/C7c,EAASmqE,GAAkB,GAAI9/E,EACnC,OAAO2V,GAAOpJ,KAAMlS,KAAKka,QAAS0zB,eAAgB+lD,IAInDC,cAAe,WAEd,GAAIhrC,GAAK,GAAIjjD,EAEb,OAAO,UAAwBmiE,EAAM2d,GAEpC,GAAInqE,GAASmqE,GAAkB,GAAI9/E,GAE/B6c,EAAYslD,EAAKge,MAAOl9B,GAExBirC,EAAc7zF,KAAKka,OAAOy2C,IAAKnuC,EAEnC,IAAqB,IAAhBqxE,EAGJ,MAA4C,KAAvC7zF,KAAKkxC,gBAAiB42B,EAAK3jD,OAExB7I,EAAOpJ,KAAM41D,EAAK3jD,OAKnB/gB,MAIR,IAAI8mD,KAAQ4d,EAAK3jD,MAAMwsC,IAAK3wD,KAAKka,QAAWla,KAAKma,UAAa05E,CAE9D,OAAS,GAAJ3pC,GAASA,EAAI,EAEV9mD,OAIDkY,EAAOpJ,KAAMsQ,GAAYorB,eAAgBsc,GAAInpC,IAAK+mD,EAAK3jD,WAMhE2vE,eAAgB,SAAWhsB,GAI1B,GAAIisB,GAAY/zF,KAAKkxC,gBAAiB42B,EAAK3jD,OACvC6vE,EAAUh0F,KAAKkxC,gBAAiB42B,EAAK1jD,IAEzC,OAAqB,GAAZ2vE,GAAiBC,EAAU,GAAmB,EAAVA,GAAeD,EAAY,GAIzE7C,cAAe,SAAW1pB,GAEzB,MAAOA,GAAIirB,gBAAiBzyF,OAI7B8wC,iBAAkB,SAAWD,GAE5B,MAAOA,GAAO4hD,gBAAiBzyF,OAIhCi0F,cAAe,SAAWxO,GAEzB,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EACnC,OAAO2V,GAAOpJ,KAAMlS,KAAKka,QAAS0zB,gBAAkB5tC,KAAKma,WAI1DrI,aAAc,WAEb,GAAI82C,GAAK,GAAIjjD,GACTuuF,EAAK,GAAIl6E,GAEb,OAAO,UAAuB0G,EAAQyzE,GAErC,GAAIC,GAAiBp0F,KAAKi0F,cAAerrC,GAAK92C,aAAc4O,GAIxDgD,EAAeywE,GAAwBD,EAAG5nD,gBAAiB5rB,GAC3DxG,EAASla,KAAKka,OAAOq6D,aAAc7wD,GAAe60B,WAKtD,OAFAv4C,MAAKma,UAAai6E,EAAezjC,IAAKz2C,GAE/Bla,SAMTuxF,UAAW,SAAW1tF,GAIrB,MAFA7D,MAAKma,SAAWna,KAAKma,SAAWtW,EAAO8sD,IAAK3wD,KAAKka,QAE1Cla,MAIRoiC,OAAQ,SAAWoK,GAElB,MAAOA,GAAMtyB,OAAOkoB,OAAQpiC,KAAKka,SAAcsyB,EAAMryB,WAAana,KAAKma,WA2BzEC,GAAQ2jD,WAEP1I,YAAaj7C,GAEb1N,IAAK,SAAW2N,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,GAEnC,GAAIC,GAAS3a,KAAK2a,MASlB,OAPAA,GAAQ,GAAIzI,KAAMmI,GAClBM,EAAQ,GAAIzI,KAAMoI,GAClBK,EAAQ,GAAIzI,KAAMqI,GAClBI,EAAQ,GAAIzI,KAAMsI,GAClBG,EAAQ,GAAIzI,KAAMuI,GAClBE,EAAQ,GAAIzI,KAAMwI,GAEX1a,MAIR4c,MAAO;AAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWmiF,GAIhB,IAAM,GAFF15E,GAAS3a,KAAK2a,OAERzT,EAAI,EAAO,EAAJA,EAAOA,IAEvByT,EAAQzT,GAAIgL,KAAMmiF,EAAQ15E,OAAQzT,GAInC,OAAOlH,OAIRuhB,cAAe,SAAWsqD,GAEzB,GAAIlxD,GAAS3a,KAAK2a,OACd08D,EAAKxL,EAAEhmE,SACPyuF,EAAMjd,EAAI,GAAKkd,EAAMld,EAAI,GAAKmd,EAAMnd,EAAI,GAAKod,EAAMpd,EAAI,GACvDqd,EAAMrd,EAAI,GAAKsd,EAAMtd,EAAI,GAAKud,EAAMvd,EAAI,GAAKwd,EAAMxd,EAAI,GACvDyd,EAAMzd,EAAI,GAAK0d,EAAM1d,EAAI,GAAK2d,EAAO3d,EAAI,IAAM4d,EAAO5d,EAAI,IAC1D6d,EAAO7d,EAAI,IAAM8d,EAAO9d,EAAI,IAAM+d,EAAO/d,EAAI,IAAMge,EAAOhe,EAAI,GASlE,OAPA18D,GAAQ,GAAIy4E,cAAeqB,EAAMH,EAAKO,EAAMH,EAAKO,EAAOH,EAAKO,EAAOH,GAAO38C,YAC3E59B,EAAQ,GAAIy4E,cAAeqB,EAAMH,EAAKO,EAAMH,EAAKO,EAAOH,EAAKO,EAAOH,GAAO38C,YAC3E59B,EAAQ,GAAIy4E,cAAeqB,EAAMF,EAAKM,EAAMF,EAAKM,EAAOF,EAAKM,EAAOF,GAAO58C,YAC3E59B,EAAQ,GAAIy4E,cAAeqB,EAAMF,EAAKM,EAAMF,EAAKM,EAAOF,EAAKM,EAAOF,GAAO58C,YAC3E59B,EAAQ,GAAIy4E,cAAeqB,EAAMD,EAAKK,EAAMD,EAAKK,EAAOD,EAAMK,EAAOD,GAAO78C,YAC5E59B,EAAQ,GAAIy4E,cAAeqB,EAAMD,EAAKK,EAAMD,EAAKK,EAAOD,EAAMK,EAAOD,GAAO78C,YAErEv4C,MAIR6d,iBAAkB,WAEjB,GAAIgzB,GAAS,GAAIh3B,GAEjB,OAAO,UAA2BqB,GAEjC,GAAIG,GAAWH,EAAOG,QAQtB,OANiC,QAA5BA,EAASiM,gBACbjM,EAASo1B,wBAEVI,EAAO3+B,KAAMmJ,EAASiM,gBACpBxV,aAAcoJ,EAAOrJ,aAEhB7R,KAAK8wC,iBAAkBD,OAMhCykD,iBAAkB,WAEjB,GAAIzkD,GAAS,GAAIh3B,GAEjB,OAAO,UAA2BzG,GAMjC,MAJAy9B,GAAO/2B,OAAOpN,IAAK,EAAG,EAAG,GACzBmkC,EAAO92B,OAAS,kBAChB82B,EAAO/+B,aAAcsB,EAAOvB,aAErB7R,KAAK8wC,iBAAkBD,OAMhCC,iBAAkB,SAAWD,GAM5B,IAAM,GAJFl2B,GAAS3a,KAAK2a,OACdb,EAAS+2B,EAAO/2B,OAChBy7E,GAAc1kD,EAAO92B,OAEf7S,EAAI,EAAO,EAAJA,EAAOA,IAAO,CAE9B,GAAIwmB,GAAW/S,EAAQzT,GAAIgqC,gBAAiBp3B,EAE5C,IAAgBy7E,EAAX7nE,EAEJ,OAAO,EAMT,OAAO,GAIRwjE,cAAe,WAEd,GAAI52E,GAAK,GAAI3U,GACZ4U,EAAK,GAAI5U,EAEV,OAAO,UAAwB6hE,GAI9B,IAAM,GAFF7sD,GAAS3a,KAAK2a,OAERzT,EAAI,EAAO,EAAJA,EAAQA,IAAO,CAE/B,GAAIslC,GAAQ7xB,EAAQzT,EAEpBoT,GAAGxY,EAAI0qC,EAAMtyB,OAAOpY,EAAI,EAAI0lE,EAAI36D,IAAI/K,EAAI0lE,EAAI16D,IAAIhL,EAChDyY,EAAGzY,EAAI0qC,EAAMtyB,OAAOpY,EAAI,EAAI0lE,EAAI16D,IAAIhL,EAAI0lE,EAAI36D,IAAI/K,EAChDwY,EAAGvY,EAAIyqC,EAAMtyB,OAAOnY,EAAI,EAAIylE,EAAI36D,IAAI9K,EAAIylE,EAAI16D,IAAI/K,EAChDwY,EAAGxY,EAAIyqC,EAAMtyB,OAAOnY,EAAI,EAAIylE,EAAI16D,IAAI/K,EAAIylE,EAAI36D,IAAI9K,EAChDuY,EAAG9V,EAAIgoC,EAAMtyB,OAAO1V,EAAI,EAAIgjE,EAAI36D,IAAIrI,EAAIgjE,EAAI16D,IAAItI,EAChD+V,EAAG/V,EAAIgoC,EAAMtyB,OAAO1V,EAAI,EAAIgjE,EAAI16D,IAAItI,EAAIgjE,EAAI36D,IAAIrI,CAEhD,IAAIgxF,GAAKhpD,EAAM0E,gBAAiB52B,GAC5Bm7E,EAAKjpD,EAAM0E,gBAAiB32B,EAIhC,IAAU,EAALi7E,GAAe,EAALC,EAEd,OAAO,EAMT,OAAO,MAOTtjF,cAAe,SAAWgmB,GAIzB,IAAM,GAFFxd,GAAS3a,KAAK2a,OAERzT,EAAI,EAAO,EAAJA,EAAOA,IAEvB,GAAKyT,EAAQzT,GAAIgqC,gBAAiB/Y,GAAU,EAE3C,OAAO,CAMT,QAAO,IA6cT7V,GAAIy7C,WAEH1I,YAAa/yC,GAEb5V,IAAK,SAAW6V,EAAQC,GAKvB,MAHAxiB,MAAKuiB,OAAOrQ,KAAMqQ,GAClBviB,KAAKwiB,UAAUtQ,KAAMsQ,GAEdxiB,MAIR4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAW2vD,GAKhB,MAHA7hE,MAAKuiB,OAAOrQ,KAAM2vD,EAAIt/C,QACtBviB,KAAKwiB,UAAUtQ,KAAM2vD,EAAIr/C,WAElBxiB,MAIR01F,GAAI,SAAWxrC,EAAGu7B,GAEjB,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EAEnC,OAAO2V,GAAOpJ,KAAMlS,KAAKwiB,WAAYorB,eAAgBsc,GAAInpC,IAAK/gB,KAAKuiB,SAIpEtB,OAAQ,SAAWvZ,GAIlB,MAFA1H,MAAKwiB,UAAUtQ,KAAMxK,GAAIkwC,IAAK53C,KAAKuiB,QAASg2B,YAErCv4C,MAIR21F,OAAQ,WAEP,GAAI/sC,GAAK,GAAIjjD,EAEb,OAAO,UAAiBukD,GAIvB,MAFAlqD,MAAKuiB,OAAOrQ,KAAMlS,KAAK01F,GAAIxrC,EAAGtB,IAEvB5oD,SAMT41F,oBAAqB,SAAWz9D,EAAOstD,GAEtC,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EACnC2V,GAAOmxC,WAAYt0B,EAAOn4B,KAAKuiB,OAC/B,IAAIszE,GAAoBv6E,EAAOq1C,IAAK3wD,KAAKwiB,UAEzC,OAAyB,GAApBqzE,EAEGv6E,EAAOpJ,KAAMlS,KAAKuiB,QAInBjH,EAAOpJ,KAAMlS,KAAKwiB,WAAYorB,eAAgBioD,GAAoB90E,IAAK/gB,KAAKuiB,SAIpF2uB,gBAAiB,SAAW/Y,GAE3B,MAAOn1B,MAAKmhD,KAAMnkD,KAAK81F,kBAAmB39D,KAI3C29D,kBAAmB,WAElB,GAAIltC,GAAK,GAAIjjD,EAEb,OAAO,UAA4BwyB,GAElC,GAAI09D,GAAoBjtC,EAAG6D,WAAYt0B,EAAOn4B,KAAKuiB,QAASouC,IAAK3wD,KAAKwiB,UAItE,OAAyB,GAApBqzE,EAEG71F,KAAKuiB,OAAO4rD,kBAAmBh2C,IAIvCywB,EAAG12C,KAAMlS,KAAKwiB,WAAYorB,eAAgBioD,GAAoB90E,IAAK/gB,KAAKuiB,QAEjEqmC,EAAGulB,kBAAmBh2C,QAM/B49D,oBAAqB,WAEpB,GAAIC,GAAY,GAAIrwF,GAChBswF,EAAS,GAAItwF,GACbuwF,EAAO,GAAIvwF,EAEf,OAAO,UAA8BqzD,EAAIpQ,EAAIutC,EAAoBC,GAShEJ,EAAU9jF,KAAM8mD,GAAKj4C,IAAK6nC,GAAKhb,eAAgB,IAC/CqoD,EAAO/jF,KAAM02C,GAAKhR,IAAKohB,GAAKzgB,YAC5B29C,EAAKhkF,KAAMlS,KAAKuiB,QAASq1B,IAAKo+C,EAE9B,IAMIK,GAAInlB,EAAIolB,EAASC,EANjBC,EAAkC,GAAtBx9B,EAAGkL,WAAYtb,GAC3B6tC,GAAQz2F,KAAKwiB,UAAUmuC,IAAKslC,GAC5BS,EAAKR,EAAKvlC,IAAK3wD,KAAKwiB,WACpBypD,GAAOiqB,EAAKvlC,IAAKslC,GACjB3xE,EAAI4xE,EAAKjoB,WACT8N,EAAM/4E,KAAK+sC,IAAK,EAAI0mD,EAAMA,EAG9B,IAAK1a,EAAM,EAQV,GAJAsa,EAAKI,EAAMxqB,EAAKyqB,EAChBxlB,EAAKulB,EAAMC,EAAKzqB,EAChBsqB,EAASC,EAAYza,EAEhBsa,GAAM,EAEV,GAAKnlB,IAAQqlB,EAEZ,GAAWA,GAANrlB,EAAe,CAKnB,GAAIylB,GAAS,EAAI5a,CACjBsa,IAAMM,EACNzlB,GAAMylB,EACNL,EAAUD,GAAOA,EAAKI,EAAMvlB,EAAK,EAAIwlB,GAAOxlB,GAAOulB,EAAMJ,EAAKnlB,EAAK,EAAIjF,GAAO3nD,MAM9E4sD,GAAKslB,EACLH,EAAKrzF,KAAK8J,IAAK,IAAO2pF,EAAMvlB,EAAKwlB,IACjCJ,GAAYD,EAAKA,EAAKnlB,GAAOA,EAAK,EAAIjF,GAAO3nD,MAQ9C4sD,IAAOslB,EACPH,EAAKrzF,KAAK8J,IAAK,IAAO2pF,EAAMvlB,EAAKwlB,IACjCJ,GAAYD,EAAKA,EAAKnlB,GAAOA,EAAK,EAAIjF,GAAO3nD,OAMjCiyE,GAARrlB,GAIJmlB,EAAKrzF,KAAK8J,IAAK,KAAS2pF,EAAMD,EAAYE,IAC1CxlB,EAAOmlB,EAAK,GAAQG,EAAYxzF,KAAK6J,IAAK7J,KAAK8J,KAAO0pF,GAAavqB,GAAMuqB,GACzEF,GAAYD,EAAKA,EAAKnlB,GAAOA,EAAK,EAAIjF,GAAO3nD,GAE5BiyE,GAANrlB,GAIXmlB,EAAK,EACLnlB,EAAKluE,KAAK6J,IAAK7J,KAAK8J,KAAO0pF,GAAavqB,GAAMuqB,GAC9CF,EAAUplB,GAAOA,EAAK,EAAIjF,GAAO3nD,IAMjC+xE,EAAKrzF,KAAK8J,IAAK,IAAO2pF,EAAMD,EAAYE,IACxCxlB,EAAOmlB,EAAK,EAAMG,EAAYxzF,KAAK6J,IAAK7J,KAAK8J,KAAO0pF,GAAavqB,GAAMuqB,GACvEF,GAAYD,EAAKA,EAAKnlB,GAAOA,EAAK,EAAIjF,GAAO3nD,OAU/C4sD,GAAOulB,EAAM,GAAQD,EAAYA,EACjCH,EAAKrzF,KAAK8J,IAAK,IAAO2pF,EAAMvlB,EAAKwlB,IACjCJ,GAAYD,EAAKA,EAAKnlB,GAAOA,EAAK,EAAIjF,GAAO3nD,CAgB9C,OAZK6xE,IAEJA,EAAmBjkF,KAAMlS,KAAKwiB,WAAYorB,eAAgByoD,GAAKt1E,IAAK/gB,KAAKuiB,QAIrE6zE,GAEJA,EAAuBlkF,KAAM+jF,GAASroD,eAAgBsjC,GAAKnwD,IAAKi1E,GAI1DM,MAMTM,gBAAiB,WAEhB,GAAIhuC,GAAK,GAAIjjD,EAEb,OAAO,UAA0BkrC,EAAQ40C,GAExC78B,EAAG6D,WAAY5b,EAAO/2B,OAAQ9Z,KAAKuiB,OACnC,IAAIs0E,GAAMjuC,EAAG+H,IAAK3wD,KAAKwiB,WACnBizE,EAAK7sC,EAAG+H,IAAK/H,GAAOiuC,EAAMA,EAC1BC,EAAUjmD,EAAO92B,OAAS82B,EAAO92B,MAErC,IAAK07E,EAAKqB,EAAU,MAAO,KAE3B,IAAIC,GAAM/zF,KAAKmhD,KAAM2yC,EAAUrB,GAG3BuB,EAAKH,EAAME,EAGXE,EAAKJ,EAAME,CAGf,OAAU,GAALC,GAAe,EAALC,EAAgB,KAKrB,EAALD,EAAgBh3F,KAAK01F,GAAIuB,EAAIxR,GAG3BzlF,KAAK01F,GAAIsB,EAAIvR,OAMtB30C,iBAAkB,SAAWD,GAE5B,MAAO7wC,MAAKkxC,gBAAiBL,EAAO/2B,SAAY+2B,EAAO92B,QAIxDm9E,gBAAiB,SAAW1qD,GAE3B,GAAIqnD,GAAcrnD,EAAMtyB,OAAOy2C,IAAK3wD,KAAKwiB,UAEzC,IAAqB,IAAhBqxE,EAGJ,MAA8C,KAAzCrnD,EAAM0E,gBAAiBlxC,KAAKuiB,QAEzB,EAMD,IAIR,IAAI2nC,KAAQlqD,KAAKuiB,OAAOouC,IAAKnkB,EAAMtyB,QAAWsyB,EAAMryB,UAAa05E,CAIjE,OAAO3pC,IAAK,EAAIA,EAAK,MAItBitC,eAAgB,SAAW3qD,EAAOi5C,GAEjC,GAAIv7B,GAAIlqD,KAAKk3F,gBAAiB1qD,EAE9B,OAAW,QAAN0d,EAEG,KAIDlqD,KAAK01F,GAAIxrC,EAAGu7B,IAMpBgN,gBAAiB,SAAWjmD,GAI3B,GAAI4qD,GAAc5qD,EAAM0E,gBAAiBlxC,KAAKuiB,OAE9C,IAAqB,IAAhB60E,EAEJ,OAAO,CAIR,IAAIvD,GAAcrnD,EAAMtyB,OAAOy2C,IAAK3wD,KAAKwiB,UAEzC,OAAiC,GAA5BqxE,EAAcuD,GAEX,GAMD,GAIRC,aAAc,SAAW7vB,EAAKie,GAE7B,GAAI6R,GAAMC,EAAMC,EAAOC,EAAOC,EAAOC,EAEjCC,EAAU,EAAI53F,KAAKwiB,UAAU1gB,EAChC+1F,EAAU,EAAI73F,KAAKwiB,UAAUzgB,EAC7B+1F,EAAU,EAAI93F,KAAKwiB,UAAUhe,EAE1B+d,EAASviB,KAAKuiB,MA0BlB,OAxBKq1E,IAAW,GAEfN,GAAS9vB,EAAI36D,IAAI/K,EAAIygB,EAAOzgB,GAAM81F,EAClCL,GAAS/vB,EAAI16D,IAAIhL,EAAIygB,EAAOzgB,GAAM81F,IAIlCN,GAAS9vB,EAAI16D,IAAIhL,EAAIygB,EAAOzgB,GAAM81F,EAClCL,GAAS/vB,EAAI36D,IAAI/K,EAAIygB,EAAOzgB,GAAM81F,GAI9BC,GAAW,GAEfL,GAAUhwB,EAAI36D,IAAI9K,EAAIwgB,EAAOxgB,GAAM81F,EACnCJ,GAAUjwB,EAAI16D,IAAI/K,EAAIwgB,EAAOxgB,GAAM81F,IAInCL,GAAUhwB,EAAI16D,IAAI/K,EAAIwgB,EAAOxgB,GAAM81F,EACnCJ,GAAUjwB,EAAI36D,IAAI9K,EAAIwgB,EAAOxgB,GAAM81F,GAI7BP,EAAOG,GAAaD,EAAQD,EAAgB,OAK9CC,EAAQF,GAAQA,IAASA,KAAOA,EAAOE,IAE/BD,EAARE,GAAgBF,IAASA,KAAOA,EAAOE,GAEvCK,GAAW,GAEfJ,GAAUlwB,EAAI36D,IAAIrI,EAAI+d,EAAO/d,GAAMszF,EACnCH,GAAUnwB,EAAI16D,IAAItI,EAAI+d,EAAO/d,GAAMszF,IAInCJ,GAAUlwB,EAAI16D,IAAItI,EAAI+d,EAAO/d,GAAMszF,EACnCH,GAAUnwB,EAAI36D,IAAIrI,EAAI+d,EAAO/d,GAAMszF,GAI7BR,EAAOK,GAAaD,EAAQH,EAAgB,OAE9CG,EAAQJ,GAAQA,IAASA,KAAOA,EAAOI,IAE/BH,EAARI,GAAgBJ,IAASA,KAAOA,EAAOI,GAIhC,EAAPJ,EAAkB,KAEhBv3F,KAAK01F,GAAI4B,GAAQ,EAAIA,EAAOC,EAAM9R,MAI1CyL,cAAe,WAEd,GAAIxpF,GAAI,GAAI/B,EAEZ,OAAO,UAAwB6hE,GAE9B,MAAuC,QAAhCxnE,KAAKq3F,aAAc7vB,EAAK9/D,OAMjCqwF,kBAAmB,WAGlB,GAAI7B,GAAO,GAAIvwF,GACXqyF,EAAQ,GAAIryF,GACZsyF,EAAQ,GAAItyF,GACZuU,EAAS,GAAIvU,EAEjB,OAAO,UAA4BoP,EAAG1M,EAAGic,EAAG4zE,EAAiBzS,GAI5DuS,EAAMvrC,WAAYpkD,EAAG0M,GACrBkjF,EAAMxrC,WAAYnoC,EAAGvP,GACrBmF,EAAOyyC,aAAcqrC,EAAOC,EAO5B,IACIlmC,GADAomC,EAAMn4F,KAAKwiB,UAAUmuC,IAAKz2C,EAG9B,IAAKi+E,EAAM,EAAI,CAEd,GAAKD,EAAkB,MAAO,KAC9BnmC,GAAO,MAED,CAAA,KAAW,EAANomC,GAOX,MAAO,KALPpmC,GAAO,GACPomC,GAAQA,EAQTjC,EAAKzpC,WAAYzsD,KAAKuiB,OAAQxN,EAC9B,IAAIqjF,GAASrmC,EAAO/xD,KAAKwiB,UAAUmuC,IAAKsnC,EAAMtrC,aAAcupC,EAAM+B,GAGlE,IAAc,EAATG,EAEJ,MAAO,KAIR,IAAIC,GAAStmC,EAAO/xD,KAAKwiB,UAAUmuC,IAAKqnC,EAAMljB,MAAOohB,GAGrD,IAAc,EAATmC,EAEJ,MAAO,KAKR,IAAKD,EAASC,EAASF,EAEtB,MAAO,KAKR,IAAIG,IAAQvmC,EAAOmkC,EAAKvlC,IAAKz2C,EAG7B,OAAW,GAANo+E,EAEG,KAKDt4F,KAAK01F,GAAI4C,EAAMH,EAAK1S,OAM7B3zE,aAAc,SAAWohF,GAOxB,MALAlzF,MAAKwiB,UAAUzB,IAAK/gB,KAAKuiB,QAASzQ,aAAcohF,GAChDlzF,KAAKuiB,OAAOzQ,aAAcohF,GAC1BlzF,KAAKwiB,UAAUo1B,IAAK53C,KAAKuiB,QACzBviB,KAAKwiB,UAAU+1B,YAERv4C,MAIRoiC,OAAQ,SAAWy/B,GAElB,MAAOA,GAAIt/C,OAAO6f,OAAQpiC,KAAKuiB,SAAYs/C,EAAIr/C,UAAU4f,OAAQpiC,KAAKwiB,aAqBxEC,GAAM81E,gBAAmB,MAAO,MAAO,MAAO,MAAO,MAAO,OAE5D91E,GAAMG,aAAe,MAErBH,GAAMs7C,WAEL1I,YAAa5yC,GAEbquD,SAAS,EAETvS,GAAIz8D,KAEH,MAAO9B,MAAKuF,IAIbg5D,GAAIz8D,GAAIe,GAEP7C,KAAKuF,GAAK1C,EACV7C,KAAK4wE,oBAINrS,GAAIx8D,KAEH,MAAO/B,MAAKwF,IAIb+4D,GAAIx8D,GAAIc,GAEP7C,KAAKwF,GAAK3C,EACV7C,KAAK4wE,oBAINrS,GAAI/5D,KAEH,MAAOxE,MAAKyF,IAIb84D,GAAI/5D,GAAI3B,GAEP7C,KAAKyF,GAAK5C,EACV7C,KAAK4wE,oBAINrS,GAAI77C,SAEH,MAAO1iB,MAAK2iB,QAIb47C,GAAI77C,OAAQ7f,GAEX7C,KAAK2iB,OAAS9f,EACd7C,KAAK4wE,oBAINlkE,IAAK,SAAW5K,EAAGC,EAAGyC,EAAGke,GASxB,MAPA1iB,MAAKuF,GAAKzD,EACV9B,KAAKwF,GAAKzD,EACV/B,KAAKyF,GAAKjB,EACVxE,KAAK2iB,OAASD,GAAS1iB,KAAK2iB,OAE5B3iB,KAAK4wE,mBAEE5wE,MAIR4c,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAKuF,GAAIvF,KAAKwF,GAAIxF,KAAKyF,GAAIzF,KAAK2iB,SAI9DzQ,KAAM,SAAW2+D,GAShB,MAPA7wE,MAAKuF,GAAKsrE,EAAMtrE,GAChBvF,KAAKwF,GAAKqrE,EAAMrrE,GAChBxF,KAAKyF,GAAKorE,EAAMprE,GAChBzF,KAAK2iB,OAASkuD,EAAMluD,OAEpB3iB,KAAK4wE,mBAEE5wE,MAIRwxE,sBAAuB,SAAW3F,EAAGnpD,EAAOnC,GAE3C,GAAImvC,GAAQluD,EAAQwB,KAAK0sD,MAIrBigB,EAAK9D,EAAEhmE,SACP+pE,EAAMD,EAAI,GAAKE,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GACxCI,EAAMJ,EAAI,GAAKK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GACxCO,EAAMP,EAAI,GAAKQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,GA8G5C,OA5GAjtD,GAAQA,GAAS1iB,KAAK2iB,OAEP,QAAVD,GAEJ1iB,KAAKwF,GAAKxC,KAAKw1F,KAAM9oC,EAAOogB,EAAK,GAAK,IAEjC9sE,KAAK+sC,IAAK+/B,GAAQ,QAEtB9vE,KAAKuF,GAAKvC,KAAK0mD,OAASumB,EAAKG,GAC7BpwE,KAAKyF,GAAKzC,KAAK0mD,OAASmmB,EAAKD,KAI7B5vE,KAAKuF,GAAKvC,KAAK0mD,MAAOymB,EAAKH,GAC3BhwE,KAAKyF,GAAK,IAIU,QAAVid,GAEX1iB,KAAKuF,GAAKvC,KAAKw1F,MAAQ9oC,EAAOugB,EAAK,GAAK,IAEnCjtE,KAAK+sC,IAAKkgC,GAAQ,QAEtBjwE,KAAKwF,GAAKxC,KAAK0mD,MAAOomB,EAAKM,GAC3BpwE,KAAKyF,GAAKzC,KAAK0mD,MAAOqmB,EAAKC,KAI3BhwE,KAAKwF,GAAKxC,KAAK0mD,OAASwmB,EAAKN,GAC7B5vE,KAAKyF,GAAK,IAIU,QAAVid,GAEX1iB,KAAKuF,GAAKvC,KAAKw1F,KAAM9oC,EAAOygB,EAAK,GAAK,IAEjCntE,KAAK+sC,IAAKogC,GAAQ,QAEtBnwE,KAAKwF,GAAKxC,KAAK0mD,OAASwmB,EAAKE,GAC7BpwE,KAAKyF,GAAKzC,KAAK0mD,OAASmmB,EAAKG,KAI7BhwE,KAAKwF,GAAK,EACVxF,KAAKyF,GAAKzC,KAAK0mD,MAAOqmB,EAAKH,KAIP,QAAVltD,GAEX1iB,KAAKwF,GAAKxC,KAAKw1F,MAAQ9oC,EAAOwgB,EAAK,GAAK,IAEnCltE,KAAK+sC,IAAKmgC,GAAQ,QAEtBlwE,KAAKuF,GAAKvC,KAAK0mD,MAAOymB,EAAKC,GAC3BpwE,KAAKyF,GAAKzC,KAAK0mD,MAAOqmB,EAAKH,KAI3B5vE,KAAKuF,GAAK,EACVvF,KAAKyF,GAAKzC,KAAK0mD,OAASmmB,EAAKG,KAIT,QAAVttD,GAEX1iB,KAAKyF,GAAKzC,KAAKw1F,KAAM9oC,EAAOqgB,EAAK,GAAK,IAEjC/sE,KAAK+sC,IAAKggC,GAAQ,QAEtB/vE,KAAKuF,GAAKvC,KAAK0mD,OAASumB,EAAKD,GAC7BhwE,KAAKwF,GAAKxC,KAAK0mD,OAASwmB,EAAKN,KAI7B5vE,KAAKuF,GAAK,EACVvF,KAAKwF,GAAKxC,KAAK0mD,MAAOomB,EAAKM,KAIP,QAAV1tD,GAEX1iB,KAAKyF,GAAKzC,KAAKw1F,MAAQ9oC,EAAOmgB,EAAK,GAAK,IAEnC7sE,KAAK+sC,IAAK8/B,GAAQ,QAEtB7vE,KAAKuF,GAAKvC,KAAK0mD,MAAOymB,EAAKH,GAC3BhwE,KAAKwF,GAAKxC,KAAK0mD,MAAOomB,EAAKF,KAI3B5vE,KAAKuF,GAAKvC,KAAK0mD,OAASumB,EAAKG,GAC7BpwE,KAAKwF,GAAK,IAMXS,QAAQgc,KAAM,kEAAoES,GAInF1iB,KAAK2iB,OAASD,EAETnC,KAAW,GAAQvgB,KAAK4wE,mBAEtB5wE,MAIRmjB,kBAAmB,WAElB,GAAIzC,EAEJ,OAAO,UAA4BmrC,EAAGnpC,EAAOnC,GAM5C,MAJgBnd,UAAXsd,IAAuBA,EAAS,GAAI9a,IAEzC8a,EAAOi4D,2BAA4B9sB,GAE5B7rD,KAAKwxE,sBAAuB9wD,EAAQgC,EAAOnC,OAMpDk4E,eAAgB,SAAW/wF,EAAGgb,GAE7B,MAAO1iB,MAAK0M,IAAKhF,EAAE5F,EAAG4F,EAAE3F,EAAG2F,EAAElD,EAAGke,GAAS1iB,KAAK2iB,SAI/C+1E,QAAS,WAIR,GAAI7sC,GAAI,GAAIvmD,EAEZ,OAAO,UAAkBqzF,GAIxB,MAFA9sC,GAAE5oC,aAAcjjB,MAETA,KAAKmjB,kBAAmB0oC,EAAG8sC,OAMpCv2D,OAAQ,SAAWyuC,GAElB,MAASA,GAAMtrE,KAAOvF,KAAKuF,IAAUsrE,EAAMrrE,KAAOxF,KAAKwF,IAAUqrE,EAAMprE,KAAOzF,KAAKyF,IAAUorE,EAAMluD,SAAW3iB,KAAK2iB,QAIpHyiC,UAAW,SAAW1+C,GASrB,MAPA1G,MAAKuF,GAAKmB,EAAO,GACjB1G,KAAKwF,GAAKkB,EAAO,GACjB1G,KAAKyF,GAAKiB,EAAO,GACGtD,SAAfsD,EAAO,KAAoB1G,KAAK2iB,OAASjc,EAAO,IAErD1G,KAAK4wE,mBAEE5wE,MAIRiH,QAAS,SAAWP,EAAO7C,GAU1B,MAReT,UAAVsD,IAAsBA,MACXtD,SAAXS,IAAuBA,EAAS,GAErC6C,EAAO7C,GAAW7D,KAAKuF,GACvBmB,EAAO7C,EAAS,GAAM7D,KAAKwF,GAC3BkB,EAAO7C,EAAS,GAAM7D,KAAKyF,GAC3BiB,EAAO7C,EAAS,GAAM7D,KAAK2iB,OAEpBjc,GAIRkyF,UAAW,SAAWC,GAErB,MAAKA,GAEGA,EAAensF,IAAK1M,KAAKuF,GAAIvF,KAAKwF,GAAIxF,KAAKyF,IAI3C,GAAIE,GAAS3F,KAAKuF,GAAIvF,KAAKwF,GAAIxF,KAAKyF,KAM7C8d,SAAU,SAAW0vD,GAIpB,MAFAjzE,MAAK4wE,iBAAmBqC,EAEjBjzE,MAIR4wE,iBAAkB,cAcnB/tD,GAAOk7C,WAEN1I,YAAaxyC,GAEbnW,IAAK,SAAWosF,GAEf94F,KAAKsd,KAAO,GAAKw7E,GAIlBrmF,OAAQ,SAAWqmF,GAElB94F,KAAKsd,MAAQ,GAAKw7E,GAInBC,OAAQ,SAAWD,GAElB94F,KAAKsd,MAAQ,GAAKw7E,GAInBtnF,QAAS,SAAWsnF,GAEnB94F,KAAKsd,QAAY,GAAKw7E,IAIvBE,KAAM,SAAW37E,GAEhB,MAAuC,MAA9Brd,KAAKsd,KAAOD,EAAOC,QA8F9BwF,GAASQ,UAAY,GAAI3d,GAAS,EAAG,EAAG,GACxCmd,GAASc,yBAA0B,EAEnCjhB,OAAO+mE,OAAQ5mD,GAASi7C,UAAWn8D,EAAgBm8D,WAElDk7B,YAAY,EAEZC,YAAa,SAAWx4E,GAEvB1gB,KAAK0gB,OAAO9K,iBAAkB8K,EAAQ1gB,KAAK0gB,QAE3C1gB,KAAK0gB,OAAO1K,UAAWhW,KAAK6T,SAAU7T,KAAKgjB,WAAYhjB,KAAK6P,QAI7DspF,yBAA0B,SAAW7nB,EAAMr5B,GAI1Cj4C,KAAKgjB,WAAWquD,iBAAkBC,EAAMr5B,IAIzCmhD,qBAAsB,SAAWvoB,GAEhC7wE,KAAKgjB,WAAWC,aAAc4tD,GAAO,IAItCwoB,sBAAuB,SAAWxtB,GAIjC7rE,KAAKgjB,WAAWwuD,sBAAuB3F,IAIxCytB,0BAA2B,SAAWztC,GAIrC7rD,KAAKgjB,WAAW9Q,KAAM25C,IAIvB0tC,aAAc,WAKb,GAAIC,GAAK,GAAIl0F,EAEb,OAAO,UAAuBgsE,EAAMr5B,GAMnC,MAJAuhD,GAAGnoB,iBAAkBC,EAAMr5B,GAE3Bj4C,KAAKgjB,WAAW1B,SAAUk4E,GAEnBx5F,SAMTomE,QAAS,WAER,GAAIxd,GAAK,GAAIjjD,GAAS,EAAG,EAAG,EAE5B,OAAO,UAAkBsyC,GAExB,MAAOj4C,MAAKu5F,aAAc3wC,EAAI3Q,OAMhCwhD,QAAS,WAER,GAAI7wC,GAAK,GAAIjjD,GAAS,EAAG,EAAG,EAE5B,OAAO,UAAkBsyC,GAExB,MAAOj4C,MAAKu5F,aAAc3wC,EAAI3Q,OAMhCyhD,QAAS,WAER,GAAI9wC,GAAK,GAAIjjD,GAAS,EAAG,EAAG,EAE5B,OAAO,UAAkBsyC,GAExB,MAAOj4C,MAAKu5F,aAAc3wC,EAAI3Q,OAMhC0hD,gBAAiB,WAKhB,GAAI/wC,GAAK,GAAIjjD,EAEb,OAAO,UAA0B2rE,EAAM5jD,GAMtC,MAJAk7B,GAAG12C,KAAMo/D,GAAO+C,gBAAiBr0E,KAAKgjB,YAEtChjB,KAAK6T,SAASkN,IAAK6nC,EAAGhb,eAAgBlgB,IAE/B1tB,SAMT45F,WAAY,WAEX,GAAIhxC,GAAK,GAAIjjD,GAAS,EAAG,EAAG,EAE5B,OAAO,UAAqB+nB,GAE3B,MAAO1tB,MAAK25F,gBAAiB/wC,EAAIl7B,OAMnCmsE,WAAY,WAEX,GAAIjxC,GAAK,GAAIjjD,GAAS,EAAG,EAAG,EAE5B,OAAO,UAAqB+nB,GAE3B,MAAO1tB,MAAK25F,gBAAiB/wC,EAAIl7B,OAMnCosE,WAAY,WAEX,GAAIlxC,GAAK,GAAIjjD,GAAS,EAAG,EAAG,EAE5B,OAAO,UAAqB+nB,GAE3B,MAAO1tB,MAAK25F,gBAAiB/wC,EAAIl7B,OAMnCqsE,aAAc,SAAW3vE,GAExB,MAAOA,GAAOtY,aAAc9R,KAAK6R,cAIlCmoF,aAAc,WAEb,GAAI9F,GAAK,GAAItuF,EAEb,OAAO,UAAuBwkB,GAE7B,MAAOA,GAAOtY,aAAcoiF,EAAG7yE,WAAYrhB,KAAK6R,kBAMlDoP,OAAQ,WAIP,GAAIizE,GAAK,GAAItuF,EAEb,OAAO,UAAiBwkB,GAEvB8pE,EAAGjzE,OAAQmJ,EAAQpqB,KAAK6T,SAAU7T,KAAKghB,IAEvChhB,KAAKgjB,WAAWwuD,sBAAuB0iB,OAMzCnzE,IAAK,SAAW7F,GAEf,GAAKnV,UAAUC,OAAS,EAAI,CAE3B,IAAM,GAAIkB,GAAI,EAAGA,EAAInB,UAAUC,OAAQkB,IAEtClH,KAAK+gB,IAAKhb,UAAWmB,GAItB,OAAOlH,MAIR,MAAKkb,KAAWlb,MAEfiG,QAAQC,MAAO,kEAAmEgV,GAC3Elb,OAIFkb,GAAUA,EAAO+9E,YAEC,OAAlB/9E,EAAOmI,QAEXnI,EAAOmI,OAAO42E,OAAQ/+E,GAIvBA,EAAOmI,OAASrjB,KAChBkb,EAAOivD,eAAiB3nE,KAAM,UAE9BxC,KAAKe,SAASuK,KAAM4P,IAIpBjV,QAAQC,MAAO,gEAAiEgV,GAI1Elb,OAIRi6F,OAAQ,SAAW/+E,GAElB,GAAKnV,UAAUC,OAAS,EAEvB,IAAM,GAAIkB,GAAI,EAAGA,EAAInB,UAAUC,OAAQkB,IAEtClH,KAAKi6F,OAAQl0F,UAAWmB,GAM1B,IAAImhB,GAAQroB,KAAKe,SAAS63B,QAAS1d,EAEpB,MAAVmN,IAEJnN,EAAOmI,OAAS,KAEhBnI,EAAOivD,eAAiB3nE,KAAM,YAE9BxC,KAAKe,SAASmpE,OAAQ7hD,EAAO,KAM/B6xE,cAAe,SAAWpvF,GAEzB,MAAO9K,MAAKm6F,oBAAqB,KAAMrvF,IAIxCsvF,gBAAiB,SAAWl3F,GAE3B,MAAOlD,MAAKm6F,oBAAqB,OAAQj3F,IAI1Ci3F,oBAAqB,SAAWj3F,EAAML,GAErC,GAAK7C,KAAMkD,KAAWL,EAAQ,MAAO7C,KAErC,KAAM,GAAIkH,GAAI,EAAGyK,EAAI3R,KAAKe,SAASiF,OAAY2L,EAAJzK,EAAOA,IAAO,CAExD,GAAImzF,GAAQr6F,KAAKe,SAAUmG,GACvBgU,EAASm/E,EAAMF,oBAAqBj3F,EAAML,EAE9C,IAAgBO,SAAX8X,EAEJ,MAAOA,GAMT,MAAO9X,SAIRk3F,iBAAkB,SAAW7U,GAE5B,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EAInC,OAFA3F,MAAKohB,mBAAmB,GAEjB9F,EAAOqF,sBAAuB3gB,KAAK6R,cAI3C0oF,mBAAoB,WAEnB,GAAI1mF,GAAW,GAAIlO,GACfkK,EAAQ,GAAIlK,EAEhB,OAAO,UAA6B8/E,GAEnC,GAAInqE,GAASmqE,GAAkB,GAAIngF,EAMnC,OAJAtF,MAAKohB,mBAAmB,GAExBphB,KAAK6R,YAAYmE,UAAWnC,EAAUyH,EAAQzL,GAEvCyL,MAMTk/E,iBAAkB,WAEjB,GAAIx3E,GAAa,GAAI1d,EAErB,OAAO,UAA2BmgF,GAEjC,GAAInqE,GAASmqE,GAAkB,GAAIhjE,GAInC,OAFAziB,MAAKu6F,mBAAoBv3E,GAElB1H,EAAO6H,kBAAmBH,EAAYhjB,KAAK8P,SAAS4S,OAAO,OAMpE+3E,cAAe,WAEd,GAAI5mF,GAAW,GAAIlO,GACfqd,EAAa,GAAI1d,EAErB,OAAO,UAAwBmgF,GAE9B,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EAMnC,OAJA3F,MAAKohB,mBAAmB,GAExBphB,KAAK6R,YAAYmE,UAAWnC,EAAUmP,EAAY1H,GAE3CA,MAMTo/E,kBAAmB,WAElB,GAAI13E,GAAa,GAAI1d,EAErB,OAAO,UAA4BmgF,GAElC,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EAInC,OAFA3F,MAAKu6F,mBAAoBv3E,GAElB1H,EAAO5O,IAAK,EAAG,EAAG,GAAI2nE,gBAAiBrxD,OAMhDs/C,QAAS,aAETiwB,SAAU,SAAWtf,GAEpBA,EAAUjzE,KAIV,KAAM,GAFFe,GAAWf,KAAKe,SAEVmG,EAAI,EAAGyK,EAAI5Q,EAASiF,OAAY2L,EAAJzK,EAAOA,IAE5CnG,EAAUmG,GAAIqrF,SAAUtf,IAM1B0nB,gBAAiB,SAAW1nB,GAE3B,GAAKjzE,KAAK+V,WAAY,EAAtB,CAEAk9D,EAAUjzE,KAIV,KAAM,GAFFe,GAAWf,KAAKe,SAEVmG,EAAI,EAAGyK,EAAI5Q,EAASiF,OAAY2L,EAAJzK,EAAOA,IAE5CnG,EAAUmG,GAAIyzF,gBAAiB1nB,KAMjC2nB,kBAAmB,SAAW3nB,GAE7B,GAAI5vD,GAASrjB,KAAKqjB,MAEF,QAAXA,IAEJ4vD,EAAU5vD,GAEVA,EAAOu3E,kBAAmB3nB,KAM5B3e,aAAc,WAEbt0D,KAAK0gB,OAAOo8D,QAAS98E,KAAK6T,SAAU7T,KAAKgjB,WAAYhjB,KAAK6P,OAE1D7P,KAAK6jB,wBAAyB,GAI/BzC,kBAAmB,SAAWy5E,GAExB76F,KAAK2jB,oBAAqB,GAAO3jB,KAAKs0D,gBAEtCt0D,KAAK6jB,0BAA2B,GAAQg3E,KAAU,KAEjC,OAAhB76F,KAAKqjB,OAETrjB,KAAK6R,YAAYK,KAAMlS,KAAK0gB,QAI5B1gB,KAAK6R,YAAY+D,iBAAkB5V,KAAKqjB,OAAOxR,YAAa7R,KAAK0gB,QAIlE1gB,KAAK6jB,wBAAyB,EAE9Bg3E,GAAQ,EAQT,KAAM,GAFF95F,GAAWf,KAAKe,SAEVmG,EAAI,EAAGyK,EAAI5Q,EAASiF,OAAY2L,EAAJzK,EAAOA,IAE5CnG,EAAUmG,GAAIka,kBAAmBy5E,IAMnCnsB,OAAQ,SAAWC,GAwGlB,QAASgjB,GAAkB7kD,GAE1B,GAAIkpB,KACJ,KAAM,GAAInP,KAAO/Z,GAAQ,CAExB,GAAI1f,GAAO0f,EAAO+Z,SACXz5B,GAAK0hD,SACZ9Y,EAAO1qD,KAAM8hB,GAGd,MAAO4oC,GA/GR,GAAI8kC,GAA0B13F,SAATurE,GAA+B,KAATA,EAEvChF,IAKCmxB,KAGJnsB,GACCx1C,cACAzX,aACAya,YACA/1B,WAGDujE,EAAOmF,UACN1qE,QAAS,IACT5B,KAAM,SACNusE,UAAW,mBAOb,IAAI7zD,KAyCJ,IAvCAA,EAAOnY,KAAO/C,KAAK+C,KACnBmY,EAAO1Y,KAAOxC,KAAKwC,KAEA,KAAdxC,KAAKkD,OAAcgY,EAAOhY,KAAOlD,KAAKkD,MACF,OAApC63F,KAAKC,UAAWh7F,KAAK+jB,YAAsB7I,EAAO6I,SAAW/jB,KAAK+jB,UAClE/jB,KAAK0d,cAAe,IAAOxC,EAAOwC,YAAa,GAC/C1d,KAAK8jB,iBAAkB,IAAO5I,EAAO4I,eAAgB,GACrD9jB,KAAK+V,WAAY,IAAQmF,EAAOnF,SAAU,GAE/CmF,EAAOwF,OAAS1gB,KAAK0gB,OAAOzZ,UAIL7D,SAAlBpD,KAAKqb,WAEsCjY,SAA1CurE,EAAKx1C,WAAYn5B,KAAKqb,SAAStY,QAEnC4rE,EAAKx1C,WAAYn5B,KAAKqb,SAAStY,MAAS/C,KAAKqb,SAASqzD,OAAQC,IAI/DzzD,EAAOG,SAAWrb,KAAKqb,SAAStY,MAIVK,SAAlBpD,KAAK8V,WAEqC1S,SAAzCurE,EAAKjtD,UAAW1hB,KAAK8V,SAAS/S,QAElC4rE,EAAKjtD,UAAW1hB,KAAK8V,SAAS/S,MAAS/C,KAAK8V,SAAS44D,OAAQC,IAI9DzzD,EAAOpF,SAAW9V,KAAK8V,SAAS/S,MAM5B/C,KAAKe,SAASiF,OAAS,EAAI,CAE/BkV,EAAOna,WAEP,KAAM,GAAImG,GAAI,EAAGA,EAAIlH,KAAKe,SAASiF,OAAQkB,IAE1CgU,EAAOna,SAASuK,KAAMtL,KAAKe,SAAUmG,GAAIwnE,OAAQC,GAAOzzD,QAM1D,GAAK4/E,EAAe,CAEnB,GAAI3hE,GAAaw4D,EAAkBhjB,EAAKx1C,YACpCzX,EAAYiwE,EAAkBhjB,EAAKjtD,WACnCya,EAAWw1D,EAAkBhjB,EAAKxyC,UAClC/1B,EAASurF,EAAkBhjB,EAAKvoE,OAE/B+yB,GAAWnzB,OAAS,IAAI2jE,EAAOxwC,WAAaA,GAC5CzX,EAAU1b,OAAS,IAAI2jE,EAAOjoD,UAAYA,GAC1Cya,EAASn2B,OAAS,IAAI2jE,EAAOxtC,SAAWA,GACxC/1B,EAAOJ,OAAS,IAAI2jE,EAAOvjE,OAASA,GAM1C,MAFAujE,GAAOzuD,OAASA,EAETyuD,GAqBR/sD,MAAO,SAAWylD,GAEjB,OAAO,GAAIriE,MAAKq1D,aAAcnjD,KAAMlS,KAAMqiE,IAI3CnwD,KAAM,SAAWmpD,EAAQgH,GA4BxB,GA1BmBj/D,SAAdi/D,IAA0BA,GAAY,GAE3CriE,KAAKkD,KAAOm4D,EAAOn4D,KAEnBlD,KAAKghB,GAAG9O,KAAMmpD,EAAOr6C,IAErBhhB,KAAK6T,SAAS3B,KAAMmpD,EAAOxnD,UAC3B7T,KAAKgjB,WAAW9Q,KAAMmpD,EAAOr4C,YAC7BhjB,KAAK6P,MAAMqC,KAAMmpD,EAAOxrD,OAExB7P,KAAK0gB,OAAOxO,KAAMmpD,EAAO36C,QACzB1gB,KAAK6R,YAAYK,KAAMmpD,EAAOxpD,aAE9B7R,KAAK2jB,iBAAmB03C,EAAO13C,iBAC/B3jB,KAAK6jB,uBAAyBw3C,EAAOx3C,uBAErC7jB,KAAK+V,QAAUslD,EAAOtlD,QAEtB/V,KAAK0d,WAAa29C,EAAO39C,WACzB1d,KAAK8jB,cAAgBu3C,EAAOv3C,cAE5B9jB,KAAK2d,cAAgB09C,EAAO19C,cAC5B3d,KAAKgV,YAAcqmD,EAAOrmD,YAE1BhV,KAAK+jB,SAAWg3E,KAAKE,MAAOF,KAAKC,UAAW3/B,EAAOt3C,WAE9Cs+C,KAAc,EAElB,IAAM,GAAIn7D,GAAI,EAAGA,EAAIm0D,EAAOt6D,SAASiF,OAAQkB,IAAO,CAEnD,GAAImzF,GAAQh/B,EAAOt6D,SAAUmG,EAC7BlH,MAAK+gB,IAAKs5E,EAAMz9E,SAMlB,MAAO5c,QAMT,IAAIikB,IAAU,CAcdC,IAAM65C,WAEL1I,YAAanxC,GAEbxX,IAAK,SAAWyX,EAAOC,GAKtB,MAHApkB,MAAKmkB,MAAMjS,KAAMiS,GACjBnkB,KAAKokB,IAAIlS,KAAMkS,GAERpkB,MAIR4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAW41D,GAKhB,MAHA9nE,MAAKmkB,MAAMjS,KAAM41D,EAAK3jD,OACtBnkB,KAAKokB,IAAIlS,KAAM41D,EAAK1jD,KAEbpkB,MAIR8wF,UAAW,SAAWrL,GAErB,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EACnC,OAAO2V,GAAOoxC,WAAY1sD,KAAKmkB,MAAOnkB,KAAKokB,KAAMwpB,eAAgB,KAIlEk4C,MAAO,SAAWL,GAEjB,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EACnC,OAAO2V,GAAOmxC,WAAYzsD,KAAKokB,IAAKpkB,KAAKmkB,QAI1C+2E,WAAY,WAEX,MAAOl7F,MAAKmkB,MAAMgqD,kBAAmBnuE,KAAKokB,MAI3CsJ,SAAU,WAET,MAAO1tB,MAAKmkB,MAAM+/C,WAAYlkE,KAAKokB,MAIpCsxE,GAAI,SAAWxrC,EAAGu7B,GAEjB,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EAEnC,OAAO3F,MAAK8lF,MAAOxqE,GAASsyB,eAAgBsc,GAAInpC,IAAK/gB,KAAKmkB,QAI3Dg3E,6BAA8B,WAE7B,GAAIC,GAAS,GAAIz1F,GACb01F,EAAW,GAAI11F,EAEnB,OAAO,UAAuCwyB,EAAOmjE,GAEpDF,EAAO3uC,WAAYt0B,EAAOn4B,KAAKmkB,OAC/Bk3E,EAAS5uC,WAAYzsD,KAAKokB,IAAKpkB,KAAKmkB,MAEpC,IAAIo3E,GAAYF,EAAS1qC,IAAK0qC,GAC1BG,EAAkBH,EAAS1qC,IAAKyqC,GAEhClxC,EAAIsxC,EAAkBD,CAQ1B,OANKD,KAEJpxC,EAAI1oD,EAAQwB,KAAK0sD,MAAOxF,EAAG,EAAG,IAIxBA,MAMT0rC,oBAAqB,SAAWz9D,EAAOmjE,EAAa7V,GAEnD,GAAIv7B,GAAIlqD,KAAKm7F,6BAA8BhjE,EAAOmjE,GAE9ChgF,EAASmqE,GAAkB,GAAI9/E,EAEnC,OAAO3F,MAAK8lF,MAAOxqE,GAASsyB,eAAgBsc,GAAInpC,IAAK/gB,KAAKmkB,QAI3DrS,aAAc,SAAW4O,GAKxB,MAHA1gB,MAAKmkB,MAAMrS,aAAc4O,GACzB1gB,KAAKokB,IAAItS,aAAc4O,GAEhB1gB,MAIRoiC,OAAQ,SAAW0lC,GAElB,MAAOA,GAAK3jD,MAAMie,OAAQpiC,KAAKmkB,QAAW2jD,EAAK1jD,IAAIge,OAAQpiC,KAAKokB,OAmBlEC,GAASnK,OAAS,WAEjB,GAAI8+C,GAAK,GAAIrzD,EAEb,OAAO,UAAiBoP,EAAG1M,EAAGic,EAAGmhE,GAEhC,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EAEnC2V,GAAOmxC,WAAYnoC,EAAGjc,GACtB2wD,EAAGvM,WAAY13C,EAAG1M,GAClBiT,EAAOw5D,MAAO9b,EAEd,IAAIyiC,GAAiBngF,EAAO2yD,UAC5B,OAAKwtB,GAAiB,EAEdngF,EAAOsyB,eAAgB,EAAI5qC,KAAKmhD,KAAMs3C,IAIvCngF,EAAO5O,IAAK,EAAG,EAAG,OAQ3B2X,GAASq3E,mBAAqB,WAE7B,GAAI1iC,GAAK,GAAIrzD,GACTijD,EAAK,GAAIjjD,GACTkjD,EAAK,GAAIljD,EAEb,OAAO,UAA6BwyB,EAAOpjB,EAAG1M,EAAGic,EAAGmhE,GAEnDzsB,EAAGvM,WAAYnoC,EAAGvP,GAClB6zC,EAAG6D,WAAYpkD,EAAG0M,GAClB8zC,EAAG4D,WAAYt0B,EAAOpjB,EAEtB,IAAI4mF,GAAQ3iC,EAAGrI,IAAKqI,GAChB4iC,EAAQ5iC,EAAGrI,IAAK/H,GAChBizC,EAAQ7iC,EAAGrI,IAAK9H,GAChBizC,EAAQlzC,EAAG+H,IAAK/H,GAChBmzC,EAAQnzC,EAAG+H,IAAK9H,GAEhBmzC,EAAUL,EAAQG,EAAQF,EAAQA,EAElCtgF,EAASmqE,GAAkB,GAAI9/E,EAGnC,IAAe,IAAVq2F,EAIJ,MAAO1gF,GAAO5O,IAAK,GAAK,GAAK,GAI9B,IAAIuvF,GAAW,EAAID,EACf1yE,GAAMwyE,EAAQD,EAAQD,EAAQG,GAAUE,EACxCv0F,GAAMi0F,EAAQI,EAAQH,EAAQC,GAAUI,CAG5C,OAAO3gF,GAAO5O,IAAK,EAAI4c,EAAI5hB,EAAGA,EAAG4hB,OAMnCjF,GAASlS,cAAgB,WAExB,GAAIy2C,GAAK,GAAIjjD,EAEb,OAAO,UAAwBwyB,EAAOpjB,EAAG1M,EAAGic,GAE3C,GAAIhJ,GAAS+I,GAASq3E,mBAAoBvjE,EAAOpjB,EAAG1M,EAAGic,EAAGskC,EAE1D,OAASttC,GAAOxZ,GAAK,GAASwZ,EAAOvZ,GAAK,GAAWuZ,EAAOxZ,EAAIwZ,EAAOvZ,GAAO,MAMhFsiB,GAAS05C,WAER1I,YAAahxC,GAEb3X,IAAK,SAAWqI,EAAG1M,EAAGic,GAMrB,MAJAtkB,MAAK+U,EAAE7C,KAAM6C,GACb/U,KAAKqI,EAAE6J,KAAM7J,GACbrI,KAAKskB,EAAEpS,KAAMoS,GAENtkB,MAIRk8F,wBAAyB,SAAW59C,EAAQ69C,EAAI1qC,EAAIC,GAMnD,MAJA1xD,MAAK+U,EAAE7C,KAAMosC,EAAQ69C,IACrBn8F,KAAKqI,EAAE6J,KAAMosC,EAAQmT,IACrBzxD,KAAKskB,EAAEpS,KAAMosC,EAAQoT,IAEd1xD,MAIR4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWkqF,GAMhB,MAJAp8F,MAAK+U,EAAE7C,KAAMkqF,EAASrnF,GACtB/U,KAAKqI,EAAE6J,KAAMkqF,EAAS/zF,GACtBrI,KAAKskB,EAAEpS,KAAMkqF,EAAS93E,GAEftkB,MAIRq8F,KAAM,WAEL,GAAIrjC,GAAK,GAAIrzD,GACTijD,EAAK,GAAIjjD,EAEb,OAAO,YAKN,MAHAqzD,GAAGvM,WAAYzsD,KAAKskB,EAAGtkB,KAAKqI,GAC5BugD,EAAG6D,WAAYzsD,KAAK+U,EAAG/U,KAAKqI,GAEK,GAA1B2wD,EAAG8b,MAAOlsB,GAAK5iD,aAMxBs2F,SAAU,SAAW7W,GAEpB,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EACnC,OAAO2V,GAAOoxC,WAAY1sD,KAAK+U,EAAG/U,KAAKqI,GAAI0Y,IAAK/gB,KAAKskB,GAAIspB,eAAgB,EAAI,IAI9E1zB,OAAQ,SAAWurE,GAElB,MAAOphE,IAASnK,OAAQla,KAAK+U,EAAG/U,KAAKqI,EAAGrI,KAAKskB,EAAGmhE,IAIjDj5C,MAAO,SAAWi5C,GAEjB,GAAInqE,GAASmqE,GAAkB,GAAIxrE,GAEnC,OAAOqB,GAAOg4E,sBAAuBtzF,KAAK+U,EAAG/U,KAAKqI,EAAGrI,KAAKskB,IAI3Do3E,mBAAoB,SAAWvjE,EAAOstD,GAErC,MAAOphE,IAASq3E,mBAAoBvjE,EAAOn4B,KAAK+U,EAAG/U,KAAKqI,EAAGrI,KAAKskB,EAAGmhE,IAIpEtzE,cAAe,SAAWgmB,GAEzB,MAAO9T,IAASlS,cAAegmB,EAAOn4B,KAAK+U,EAAG/U,KAAKqI,EAAGrI,KAAKskB,IAI5DsxE,oBAAqB,WAEpB,GAAIppD,GAAO+vD,EAAUC,EAAgBhK,CAErC,OAAO,UAA8Br6D,EAAOstD,GAE5BriF,SAAVopC,IAEJA,EAAQ,GAAIvyB,IACZsiF,GAAa,GAAIr4E,IAAS,GAAIA,IAAS,GAAIA,KAC3Cs4E,EAAiB,GAAI72F,GACrB6sF,EAAe,GAAI7sF,GAIpB,IAAI2V,GAASmqE,GAAkB,GAAI9/E,GAC/B82F,EAAc1vF,EAAAA,CASlB,IALAy/B,EAAM8mD,sBAAuBtzF,KAAK+U,EAAG/U,KAAKqI,EAAGrI,KAAKskB,GAClDkoB,EAAMinD,aAAct7D,EAAOqkE,GAIvBx8F,KAAKmS,cAAeqqF,MAAqB,EAI5ClhF,EAAOpJ,KAAMsqF,OAEP,CAIND,EAAU,GAAI7vF,IAAK1M,KAAK+U,EAAG/U,KAAKqI,GAChCk0F,EAAU,GAAI7vF,IAAK1M,KAAKqI,EAAGrI,KAAKskB,GAChCi4E,EAAU,GAAI7vF,IAAK1M,KAAKskB,EAAGtkB,KAAK+U,EAEhC,KAAK,GAAI7N,GAAI,EAAGA,EAAIq1F,EAASv2F,OAAQkB,IAAO,CAE3Cq1F,EAAUr1F,GAAI0uF,oBAAqB4G,GAAgB,EAAMhK,EAEzD,IAAI9kE,GAAW8uE,EAAeruB,kBAAmBqkB,EAElCiK,GAAX/uE,IAEH+uE,EAAc/uE,EAEdpS,EAAOpJ,KAAMsgF,KAQhB,MAAOl3E,OAMT8mB,OAAQ,SAAWg6D,GAElB,MAAOA,GAASrnF,EAAEqtB,OAAQpiC,KAAK+U,IAAOqnF,EAAS/zF,EAAE+5B,OAAQpiC,KAAKqI,IAAO+zF,EAAS93E,EAAE8d,OAAQpiC,KAAKskB,KA2B/FC,GAAMw5C,WAEL1I,YAAa9wC,GAEb3H,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAWmpD,GAEhBr7D,KAAK+U,EAAIsmD,EAAOtmD,EAChB/U,KAAKqI,EAAIgzD,EAAOhzD,EAChBrI,KAAKskB,EAAI+2C,EAAO/2C,EAEhBtkB,KAAKka,OAAOhI,KAAMmpD,EAAOnhD,QACzBla,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OAExB5P,KAAK+hB,cAAgBs5C,EAAOt5C,aAE5B,KAAM,GAAI7a,GAAI,EAAG2Y,EAAKw7C,EAAO52C,cAAcze,OAAY6Z,EAAJ3Y,EAAQA,IAE1DlH,KAAKykB,cAAevd,GAAMm0D,EAAO52C,cAAevd,GAAI0V,OAIrD,KAAM,GAAI1V,GAAI,EAAG2Y,EAAKw7C,EAAOzkD,aAAa5Q,OAAY6Z,EAAJ3Y,EAAQA,IAEzDlH,KAAK4W,aAAc1P,GAAMm0D,EAAOzkD,aAAc1P,GAAI0V,OAInD,OAAO5c,QA2ET4kB,GAAkBm5C,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACtDn5C,GAAkBm5C,UAAU1I,YAAczwC,GAE1CA,GAAkBm5C,UAAU1pB,qBAAsB,EAElDzvB,GAAkBm5C,UAAU7rD,KAAO,SAAWmpD,GA4B7C,MA1BAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OAExB5P,KAAKwG,IAAM60D,EAAO70D,IAElBxG,KAAK6kB,MAAQw2C,EAAOx2C,MACpB7kB,KAAK8kB,eAAiBu2C,EAAOv2C,eAE7B9kB,KAAK+kB,YAAcs2C,EAAOt2C,YAE1B/kB,KAAKwZ,SAAW6hD,EAAO7hD,SAEvBxZ,KAAKglB,OAASq2C,EAAOr2C,OACrBhlB,KAAKilB,QAAUo2C,EAAOp2C,QACtBjlB,KAAKmlB,aAAek2C,EAAOl2C,aAC3BnlB,KAAKolB,gBAAkBi2C,EAAOj2C,gBAE9BplB,KAAKsY,UAAY+iD,EAAO/iD,UACxBtY,KAAKuY,mBAAqB8iD,EAAO9iD,mBACjCvY,KAAKqlB,iBAAmBg2C,EAAOh2C,iBAC/BrlB,KAAKslB,kBAAoB+1C,EAAO/1C,kBAEhCtlB,KAAKyY,SAAW4iD,EAAO5iD,SACvBzY,KAAK0Y,aAAe2iD,EAAO3iD,aAEpB1Y,MA8BRulB,GAAgBw4C,WAEf1I,YAAa9vC,GAEbm3E,mBAAmB,EAEnBn+B,GAAI1pD,aAAahS,GAEXA,KAAU,GAAO7C,KAAKoE,WAI5ByiB,WAAY,SAAWhkB,GAItB,MAFA7C,MAAK2lB,QAAU9iB,EAER7C,MAIRkS,KAAM,SAAWmpD,GAShB,MAPAr7D,MAAK0G,MAAQ,GAAI20D,GAAO30D,MAAM2uD,YAAagG,EAAO30D,OAClD1G,KAAKwlB,SAAW61C,EAAO71C,SACvBxlB,KAAKsE,MAAQ+2D,EAAO/2D,MACpBtE,KAAKylB,WAAa41C,EAAO51C,WAEzBzlB,KAAK2lB,QAAU01C,EAAO11C,QAEf3lB,MAIR28F,OAAQ,SAAWp1C,EAAQ5tB,EAAWutB,GAErCK,GAAUvnD,KAAKwlB,SACf0hC,GAAUvtB,EAAUnU,QAEpB,KAAM,GAAIte,GAAI,EAAGyK,EAAI3R,KAAKwlB,SAAc7T,EAAJzK,EAAOA,IAE1ClH,KAAK0G,MAAO6gD,EAASrgD,GAAMyyB,EAAUjzB,MAAOwgD,EAAShgD,EAItD,OAAOlH,OAIR48F,UAAW,SAAWl2F,GAIrB,MAFA1G,MAAK0G,MAAMgG,IAAKhG,GAET1G,MAIR68F,gBAAiB,SAAW71E,GAI3B,IAAM,GAFFtgB,GAAQ1G,KAAK0G,MAAO7C,EAAS,EAEvBqD,EAAI,EAAGyK,EAAIqV,EAAOhhB,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjD,GAAI0I,GAAQoX,EAAQ9f,EAEL9D,UAAVwM,IAEJ3J,QAAQgc,KAAM,8DAA+D/a,GAC7E0I,EAAQ,GAAInD,IAIb/F,EAAO7C,KAAc+L,EAAM7I,EAC3BL,EAAO7C,KAAc+L,EAAMxH,EAC3B1B,EAAO7C,KAAc+L,EAAMvH,EAI5B,MAAOrI,OAIR88F,iBAAkB,SAAW90E,GAI5B,IAAM,GAFFthB,GAAQ1G,KAAK0G,MAAO7C,EAAS,EAEvBqD,EAAI,EAAGyK,EAAIqW,EAAQhiB,OAAY2L,EAAJzK,EAAOA,IAAO,CAElD,GAAImhB,GAAQL,EAAS9gB,EAErBR,GAAO7C,KAAcwkB,EAAMtT,EAC3BrO,EAAO7C,KAAcwkB,EAAMhgB,EAC3B3B,EAAO7C,KAAcwkB,EAAM/D,EAI5B,MAAOtkB,OAIR+8F,kBAAmB,SAAWC,GAI7B,IAAM,GAFFt2F,GAAQ1G,KAAK0G,MAAO7C,EAAS,EAEvBqD,EAAI,EAAGyK,EAAIqrF,EAAQh3F,OAAY2L,EAAJzK,EAAOA,IAAO,CAElD,GAAIkjB,GAAS4yE,EAAS91F,EAEN9D,UAAXgnB,IAEJnkB,QAAQgc,KAAM,iEAAkE/a,GAChFkjB,EAAS,GAAIvoB,IAId6E,EAAO7C,KAAcumB,EAAOtoB,EAC5B4E,EAAO7C,KAAcumB,EAAOroB,EAI7B,MAAO/B,OAIRi9F,kBAAmB,SAAWD,GAI7B,IAAM,GAFFt2F,GAAQ1G,KAAK0G,MAAO7C,EAAS,EAEvBqD,EAAI,EAAGyK,EAAIqrF,EAAQh3F,OAAY2L,EAAJzK,EAAOA,IAAO,CAElD,GAAIkjB,GAAS4yE,EAAS91F,EAEN9D,UAAXgnB,IAEJnkB,QAAQgc,KAAM,iEAAkE/a,GAChFkjB,EAAS,GAAIzkB,IAIde,EAAO7C,KAAcumB,EAAOtoB,EAC5B4E,EAAO7C,KAAcumB,EAAOroB,EAC5B2E,EAAO7C,KAAcumB,EAAO5lB,EAI7B,MAAOxE,OAIRk9F,kBAAmB,SAAWF,GAI7B,IAAM,GAFFt2F,GAAQ1G,KAAK0G,MAAO7C,EAAS,EAEvBqD,EAAI,EAAGyK,EAAIqrF,EAAQh3F,OAAY2L,EAAJzK,EAAOA,IAAO,CAElD,GAAIkjB,GAAS4yE,EAAS91F,EAEN9D,UAAXgnB,IAEJnkB,QAAQgc,KAAM,iEAAkE/a,GAChFkjB,EAAS,GAAI7lB,IAIdmC,EAAO7C,KAAcumB,EAAOtoB,EAC5B4E,EAAO7C,KAAcumB,EAAOroB,EAC5B2E,EAAO7C,KAAcumB,EAAO5lB,EAC5BkC,EAAO7C,KAAcumB,EAAO5pB,EAI7B,MAAOR,OAIR0M,IAAK,SAAW7J,EAAOgB,GAMtB,MAJgBT,UAAXS,IAAuBA,EAAS,GAErC7D,KAAK0G,MAAMgG,IAAK7J,EAAOgB,GAEhB7D,MAIRmnD,KAAM,SAAW9+B,GAEhB,MAAOroB,MAAK0G,MAAO2hB,EAAQroB,KAAKwlB,WAIjCsnC,KAAM,SAAWzkC,EAAOvmB,GAIvB,MAFA9B,MAAK0G,MAAO2hB,EAAQroB,KAAKwlB,UAAa1jB,EAE/B9B,MAIRonD,KAAM,SAAW/+B,GAEhB,MAAOroB,MAAK0G,MAAO2hB,EAAQroB,KAAKwlB,SAAW,IAI5C4nD,KAAM,SAAW/kD,EAAOtmB,GAIvB,MAFA/B,MAAK0G,MAAO2hB,EAAQroB,KAAKwlB,SAAW,GAAMzjB,EAEnC/B,MAIRqnD,KAAM,SAAWh/B,GAEhB,MAAOroB,MAAK0G,MAAO2hB,EAAQroB,KAAKwlB,SAAW,IAI5C2pD,KAAM,SAAW9mD,EAAO7jB,GAIvB,MAFAxE,MAAK0G,MAAO2hB,EAAQroB,KAAKwlB,SAAW,GAAMhhB,EAEnCxE,MAIRm9F,KAAM,SAAW90E,GAEhB,MAAOroB,MAAK0G,MAAO2hB,EAAQroB,KAAKwlB,SAAW,IAI5C4pD,KAAM,SAAW/mD,EAAO7nB,GAIvB,MAFAR,MAAK0G,MAAO2hB,EAAQroB,KAAKwlB,SAAW,GAAMhlB,EAEnCR,MAIR6sD,MAAO,SAAWxkC,EAAOvmB,EAAGC,GAO3B,MALAsmB,IAASroB,KAAKwlB,SAEdxlB,KAAK0G,MAAO2hB,EAAQ,GAAMvmB,EAC1B9B,KAAK0G,MAAO2hB,EAAQ,GAAMtmB,EAEnB/B,MAIR4sD,OAAQ,SAAWvkC,EAAOvmB,EAAGC,EAAGyC,GAQ/B,MANA6jB,IAASroB,KAAKwlB,SAEdxlB,KAAK0G,MAAO2hB,EAAQ,GAAMvmB,EAC1B9B,KAAK0G,MAAO2hB,EAAQ,GAAMtmB,EAC1B/B,KAAK0G,MAAO2hB,EAAQ,GAAM7jB,EAEnBxE,MAIRo9F,QAAS,SAAW/0E,EAAOvmB,EAAGC,EAAGyC,EAAGhE,GASnC,MAPA6nB,IAASroB,KAAKwlB,SAEdxlB,KAAK0G,MAAO2hB,EAAQ,GAAMvmB,EAC1B9B,KAAK0G,MAAO2hB,EAAQ,GAAMtmB,EAC1B/B,KAAK0G,MAAO2hB,EAAQ,GAAM7jB,EAC1BxE,KAAK0G,MAAO2hB,EAAQ,GAAM7nB,EAEnBR,MAIR4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,QAqHtC2C,OAAO+mE,OAAQ5iD,GAASi3C,UAAWn8D,EAAgBm8D,WAElD/hD,YAAY,EAEZk9E,YAAa,SAAWx4E,GAIvB,IAAM,GAFFgD,IAAe,GAAI1J,KAAUsyB,gBAAiB5rB,GAExCxZ,EAAI,EAAG2Y,EAAK7f,KAAKmN,SAASnH,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAE1D,GAAImI,GAASrP,KAAKmN,SAAUjG,EAC5BmI,GAAOyC,aAAc4O,GAItB,IAAM,GAAIxZ,GAAI,EAAG2Y,EAAK7f,KAAKoN,MAAMpH,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAEvD,GAAI4Z,GAAO9gB,KAAKoN,MAAOlG,EACvB4Z,GAAK5G,OAAOq6D,aAAc7wD,GAAe60B,WAEzC,KAAM,GAAItlC,GAAI,EAAGC,EAAK4N,EAAK2D,cAAcze,OAAYkN,EAAJD,EAAQA,IAExD6N,EAAK2D,cAAexR,GAAIshE,aAAc7wD,GAAe60B,YAqBvD,MAf0B,QAArBv4C,KAAKqnB,aAETrnB,KAAKq9F,qBAIuB,OAAxBr9F,KAAKsnB,gBAETtnB,KAAKywC,wBAINzwC,KAAKwnB,oBAAqB,EAC1BxnB,KAAK0nB,mBAAoB,EAElB1nB,MAIRomE,QAAS,WAIR,GAAI8tB,EAEJ,OAAO,UAAkBj8C,GAQxB,MANY70C,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAG3X,cAAetkC,GAElBj4C,KAAKk5F,YAAahF,GAEXl0F,SAMTy5F,QAAS,WAIR,GAAIvF,EAEJ,OAAO,UAAkBj8C,GAQxB,MANY70C,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAG1X,cAAevkC,GAElBj4C,KAAKk5F,YAAahF,GAEXl0F,SAMT05F,QAAS,WAIR,GAAIxF,EAEJ,OAAO,UAAkBj8C,GAQxB,MANY70C,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAGzX,cAAexkC,GAElBj4C,KAAKk5F,YAAahF,GAEXl0F,SAMTuxF,UAAW,WAIV,GAAI2C,EAEJ,OAAO,UAAoBpyF,EAAGC,EAAGyC,GAQhC,MANYpB,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAG5X,gBAAiBx6E,EAAGC,EAAGyC,GAE1BxE,KAAKk5F,YAAahF,GAEXl0F,SAMT6P,MAAO,WAIN,GAAIqkF,EAEJ,OAAO,UAAgBpyF,EAAGC,EAAGyC,GAQ5B,MANYpB,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAGrX,UAAW/6E,EAAGC,EAAGyC,GAEpBxE,KAAKk5F,YAAahF,GAEXl0F,SAMTihB,OAAQ,WAEP,GAAIq8E,EAEJ,OAAO,UAAiBlzE,GAEVhnB,SAARk6F,IAAoBA,EAAM,GAAIx6E,KAEnCw6E,EAAIr8E,OAAQmJ,GAEZkzE,EAAIhpC,eAEJt0D,KAAKk5F,YAAaoE,EAAI58E,YAMxBusC,mBAAoB,SAAW5xC,GAiD9B,QAASkiF,GAASxoF,EAAG1M,EAAGic,EAAGvC,GAE1B,GAAI0C,GAA4BrhB,SAAZ6kB,GAA0Bu1E,EAAazoF,GAAI6H,QAAS4gF,EAAan1F,GAAIuU,QAAS4gF,EAAal5E,GAAI1H,YAC/GhG,EAA0BxT,SAAX4jB,GAAyBnK,EAAMmK,OAAQjS,GAAI6H,QAASC,EAAMmK,OAAQ3e,GAAIuU,QAASC,EAAMmK,OAAQ1C,GAAI1H,YAEhHkE,EAAO,GAAIyD,IAAOxP,EAAG1M,EAAGic,EAAGG,EAAe7N,EAAcmL,EAE5DlF,GAAMzP,MAAM9B,KAAMwV,GAEL1d,SAAR8kB,GAEJrL,EAAMoK,cAAe,GAAI3b,MAAQmyF,EAAS1oF,GAAI6H,QAAS6gF,EAASp1F,GAAIuU,QAAS6gF,EAASn5E,GAAI1H,UAI7ExZ,SAAT+kB,GAEJtL,EAAMoK,cAAe,GAAI3b,MAAQoyF,EAAU3oF,GAAI6H,QAAS8gF,EAAUr1F,GAAIuU,QAAS8gF,EAAUp5E,GAAI1H,UAhE/F,GAAIC,GAAQ7c,KAERgoB,EAA6B,OAAnB3M,EAASgN,MAAiBhN,EAASgN,MAAM3hB,MAAQtD,OAC3DgM,EAAaiM,EAASjM,WAEtBo/C,EAAYp/C,EAAWyE,SAASnN,MAChCuhB,EAAgC7kB,SAAtBgM,EAAW8K,OAAuB9K,EAAW8K,OAAOxT,MAAQtD,OACtE4jB,EAA8B5jB,SAArBgM,EAAWQ,MAAsBR,EAAWQ,MAAMlJ,MAAQtD,OACnE8kB,EAAwB9kB,SAAlBgM,EAAWG,GAAmBH,EAAWG,GAAG7I,MAAQtD,OAC1D+kB,EAA0B/kB,SAAnBgM,EAAW8J,IAAoB9J,EAAW8J,IAAIxS,MAAQtD,MAEnDA,UAAT+kB,IAAqBnoB,KAAKinB,cAAe,MAM9C,KAAM,GAJFu2E,MACAC,KACAC,KAEMx2F,EAAI,EAAG+L,EAAI,EAAG/L,EAAIsnD,EAAUxoD,OAAQkB,GAAK,EAAG+L,GAAK,EAE1D4J,EAAM1P,SAAS7B,KAAM,GAAI3F,GAAS6oD,EAAWtnD,GAAKsnD,EAAWtnD,EAAI,GAAKsnD,EAAWtnD,EAAI,KAEpE9D,SAAZ6kB,GAEJu1E,EAAYlyF,KAAM,GAAI3F,GAASsiB,EAAS/gB,GAAK+gB,EAAS/gB,EAAI,GAAK+gB,EAAS/gB,EAAI,KAI7D9D,SAAX4jB,GAEJnK,EAAMmK,OAAO1b,KAAM,GAAImB,GAAOua,EAAQ9f,GAAK8f,EAAQ9f,EAAI,GAAK8f,EAAQ9f,EAAI,KAI5D9D,SAAR8kB,GAEJu1E,EAAQnyF,KAAM,GAAIzJ,GAASqmB,EAAKjV,GAAKiV,EAAKjV,EAAI,KAIjC7P,SAAT+kB,GAEJu1E,EAASpyF,KAAM,GAAIzJ,GAASsmB,EAAMlV,GAAKkV,EAAMlV,EAAI,IA6BnD,IAAiB7P,SAAZ4kB,EAAwB,CAE5B,GAAIvG,GAASpG,EAASoG,MAEtB,IAAKA,EAAOzb,OAAS,EAEpB,IAAM,GAAIkB,GAAI,EAAGA,EAAIua,EAAOzb,OAAQkB,IAOnC,IAAM,GALF2a,GAAQJ,EAAQva,GAEhBid,EAAQtC,EAAMsC,MACd7f,EAAQud,EAAMvd,MAER2O,EAAIkR,EAAOjR,EAAKiR,EAAQ7f,EAAW4O,EAAJD,EAAQA,GAAK,EAErDsqF,EAASv1E,EAAS/U,GAAK+U,EAAS/U,EAAI,GAAK+U,EAAS/U,EAAI,GAAK4O,EAAME,mBAQnE,KAAM,GAAI7a,GAAI,EAAGA,EAAI8gB,EAAQhiB,OAAQkB,GAAK,EAEzCq2F,EAASv1E,EAAS9gB,GAAK8gB,EAAS9gB,EAAI,GAAK8gB,EAAS9gB,EAAI,QAQxD,KAAM,GAAIA,GAAI,EAAGA,EAAIsnD,EAAUxoD,OAAS,EAAGkB,GAAK,EAE/Cq2F,EAASr2F,EAAGA,EAAI,EAAGA,EAAI,EAoBzB,OAdAlH,MAAKkoD,qBAEyB,OAAzB7sC,EAASgM,cAEbrnB,KAAKqnB,YAAchM,EAASgM,YAAYzK,SAIR,OAA5BvB,EAASiM,iBAEbtnB,KAAKsnB,eAAiBjM,EAASiM,eAAe1K,SAIxC5c,MAIR8Z,OAAQ,WAEP9Z,KAAKq9F,oBAEL,IAAIx5F,GAAS7D,KAAKqnB,YAAYypE,YAAY34C,QAI1C,OAFAn4C,MAAKuxF,UAAW1tF,EAAO/B,EAAG+B,EAAO9B,EAAG8B,EAAOW,GAEpCX,GAIR00C,UAAW,WAEVv4C,KAAKywC,uBAEL,IAAI32B,GAAS9Z,KAAKsnB,eAAexN,OAC7BC,EAAS/Z,KAAKsnB,eAAevN,OAE7Bq4C,EAAe,IAAXr4C,EAAe,EAAI,EAAMA,EAE7B2G,EAAS,GAAI9a,EAUjB,OATA8a,GAAOhU,IACN0lD,EAAG,EAAG,GAAKA,EAAIt4C,EAAOhY,EACtB,EAAGswD,EAAG,GAAKA,EAAIt4C,EAAO/X,EACtB,EAAG,EAAGqwD,GAAKA,EAAIt4C,EAAOtV,EACtB,EAAG,EAAG,EAAG,GAGVxE,KAAKk5F,YAAax4E,GAEX1gB,MAIRkoD,mBAAoB,WAInB,IAAM,GAFFy1C,GAAK,GAAIh4F,GAAWi4F,EAAK,GAAIj4F,GAEvBi2B,EAAI,EAAGiiE,EAAK79F,KAAKoN,MAAMpH,OAAY63F,EAAJjiE,EAAQA,IAAO,CAEvD,GAAI9a,GAAO9gB,KAAKoN,MAAOwuB,GAEnBkiE,EAAK99F,KAAKmN,SAAU2T,EAAK/L,GACzBgpF,EAAK/9F,KAAKmN,SAAU2T,EAAKzY,GACzB21F,EAAKh+F,KAAKmN,SAAU2T,EAAKwD,EAE7Bq5E,GAAGlxC,WAAYuxC,EAAID,GACnBH,EAAGnxC,WAAYqxC,EAAIC,GACnBJ,EAAG7oB,MAAO8oB,GAEVD,EAAGplD,YAEHz3B,EAAK5G,OAAOhI,KAAMyrF,KAMpBx1C,qBAAsB,SAAW81C,GAEV76F,SAAjB66F,IAA6BA,GAAe,EAEjD,IAAIv2F,GAAGw2F,EAAItiE,EAAGiiE,EAAI/8E,EAAM3T,CAIxB,KAFAA,EAAW,GAAIuR,OAAO1e,KAAKmN,SAASnH,QAE9B0B,EAAI,EAAGw2F,EAAKl+F,KAAKmN,SAASnH,OAAYk4F,EAAJx2F,EAAQA,IAE/CyF,EAAUzF,GAAM,GAAI/B,EAIrB,IAAKs4F,EAAe,CAKnB,GAAIH,GAAIC,EAAIC,EACRL,EAAK,GAAIh4F,GAAWi4F,EAAK,GAAIj4F,EAEjC,KAAMi2B,EAAI,EAAGiiE,EAAK79F,KAAKoN,MAAMpH,OAAY63F,EAAJjiE,EAAQA,IAE5C9a,EAAO9gB,KAAKoN,MAAOwuB,GAEnBkiE,EAAK99F,KAAKmN,SAAU2T,EAAK/L,GACzBgpF,EAAK/9F,KAAKmN,SAAU2T,EAAKzY,GACzB21F,EAAKh+F,KAAKmN,SAAU2T,EAAKwD,GAEzBq5E,EAAGlxC,WAAYuxC,EAAID,GACnBH,EAAGnxC,WAAYqxC,EAAIC,GACnBJ,EAAG7oB,MAAO8oB,GAEVzwF,EAAU2T,EAAK/L,GAAIgM,IAAK48E,GACxBxwF,EAAU2T,EAAKzY,GAAI0Y,IAAK48E,GACxBxwF,EAAU2T,EAAKwD,GAAIvD,IAAK48E,OAMzB,KAAM/hE,EAAI,EAAGiiE,EAAK79F,KAAKoN,MAAMpH,OAAY63F,EAAJjiE,EAAQA,IAE5C9a,EAAO9gB,KAAKoN,MAAOwuB,GAEnBzuB,EAAU2T,EAAK/L,GAAIgM,IAAKD,EAAK5G,QAC7B/M,EAAU2T,EAAKzY,GAAI0Y,IAAKD,EAAK5G,QAC7B/M,EAAU2T,EAAKwD,GAAIvD,IAAKD,EAAK5G,OAM/B,KAAMxS,EAAI,EAAGw2F,EAAKl+F,KAAKmN,SAASnH,OAAYk4F,EAAJx2F,EAAQA,IAE/CyF,EAAUzF,GAAI6wC,WAIf,KAAM3c,EAAI,EAAGiiE,EAAK79F,KAAKoN,MAAMpH,OAAY63F,EAAJjiE,EAAQA,IAAO,CAEnD9a,EAAO9gB,KAAKoN,MAAOwuB,EAEnB,IAAInX,GAAgB3D,EAAK2D,aAEK,KAAzBA,EAAcze,QAElBye,EAAe,GAAIvS,KAAM/E,EAAU2T,EAAK/L,IACxC0P,EAAe,GAAIvS,KAAM/E,EAAU2T,EAAKzY,IACxCoc,EAAe,GAAIvS,KAAM/E,EAAU2T,EAAKwD,MAIxCG,EAAe,GAAMtX,EAAU2T,EAAK/L,GAAI6H,QACxC6H,EAAe,GAAMtX,EAAU2T,EAAKzY,GAAIuU,QACxC6H,EAAe,GAAMtX,EAAU2T,EAAKwD,GAAI1H,SAMrC5c,KAAKoN,MAAMpH,OAAS,IAExBhG,KAAK0nB,mBAAoB,IAM3By2E,oBAAqB,WAEpB,GAAIj3F,GAAG2Y,EAAI+b,EAAGiiE,EAAI/8E,CAMlB,KAAM8a,EAAI,EAAGiiE,EAAK79F,KAAKoN,MAAMpH,OAAY63F,EAAJjiE,EAAQA,IAgB5C,IAdA9a,EAAO9gB,KAAKoN,MAAOwuB,GAEZ9a,EAAKs9E,qBAMXt9E,EAAKs9E,qBAAqBlsF,KAAM4O,EAAK5G,QAJrC4G,EAAKs9E,qBAAuBt9E,EAAK5G,OAAO0C,QAQlCkE,EAAKu9E,0BAA0Bv9E,EAAKu9E,4BAErCn3F,EAAI,EAAG2Y,EAAKiB,EAAK2D,cAAcze,OAAY6Z,EAAJ3Y,EAAQA,IAE7C4Z,EAAKu9E,wBAAyBn3F,GAMpC4Z,EAAKu9E,wBAAyBn3F,GAAIgL,KAAM4O,EAAK2D,cAAevd,IAJ5D4Z,EAAKu9E,wBAAyBn3F,GAAM4Z,EAAK2D,cAAevd,GAAI0V,OAc/D,IAAI0hF,GAAS,GAAIx3E,GAGjB,KAFAw3E,EAAOlxF,MAAQpN,KAAKoN,MAEdlG,EAAI,EAAG2Y,EAAK7f,KAAK0Y,aAAa1S,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAI1D,IAAOlH,KAAK2Y,aAAczR,GAAM,CAE/BlH,KAAK2Y,aAAczR,MACnBlH,KAAK2Y,aAAczR,GAAIq3F,eACvBv+F,KAAK2Y,aAAczR,GAAIud,gBAEvB,IAGI+5E,GAAY/5E,EAHZg6E,EAAiBz+F,KAAK2Y,aAAczR,GAAIq3F,YACxCG,EAAmB1+F,KAAK2Y,aAAczR,GAAIud,aAI9C,KAAMmX,EAAI,EAAGiiE,EAAK79F,KAAKoN,MAAMpH,OAAY63F,EAAJjiE,EAAQA,IAE5C4iE,EAAa,GAAI74F,GACjB8e,GAAkB1P,EAAG,GAAIpP,GAAW0C,EAAG,GAAI1C,GAAW2e,EAAG,GAAI3e,IAE7D84F,EAAenzF,KAAMkzF,GACrBE,EAAiBpzF,KAAMmZ,GAMzB,GAAI9L,GAAe3Y,KAAK2Y,aAAczR,EAItCo3F,GAAOnxF,SAAWnN,KAAK0Y,aAAcxR,GAAIiG,SAIzCmxF,EAAOp2C,qBACPo2C,EAAOn2C,sBAIP,IAAIq2C,GAAY/5E,CAEhB,KAAMmX,EAAI,EAAGiiE,EAAK79F,KAAKoN,MAAMpH,OAAY63F,EAAJjiE,EAAQA,IAE5C9a,EAAO9gB,KAAKoN,MAAOwuB,GAEnB4iE,EAAa7lF,EAAa4lF,YAAa3iE,GACvCnX,EAAgB9L,EAAa8L,cAAemX,GAE5C4iE,EAAWtsF,KAAM4O,EAAK5G,QAEtBuK,EAAc1P,EAAE7C,KAAM4O,EAAK2D,cAAe,IAC1CA,EAAcpc,EAAE6J,KAAM4O,EAAK2D,cAAe,IAC1CA,EAAcH,EAAEpS,KAAM4O,EAAK2D,cAAe,IAQ5C,IAAMmX,EAAI,EAAGiiE,EAAK79F,KAAKoN,MAAMpH,OAAY63F,EAAJjiE,EAAQA,IAE5C9a,EAAO9gB,KAAKoN,MAAOwuB,GAEnB9a,EAAK5G,OAAS4G,EAAKs9E,qBACnBt9E,EAAK2D,cAAgB3D,EAAKu9E,yBAM5BM,gBAAiB,WAEhB14F,QAAQgc,KAAM,yDAIf28E,qBAAsB,WAKrB,IAAM,GAHFz1E,GAAI,EACJhc,EAAWnN,KAAKmN,SAEVjG,EAAI,EAAG2Y,EAAK1S,EAASnH,OAAY6Z,EAAJ3Y,EAAQA,IAEzCA,EAAI,IAERiiB,GAAKhc,EAAUjG,GAAIg9D,WAAY/2D,EAAUjG,EAAI,KAI9ClH,KAAKonB,cAAelgB,GAAMiiB,GAM5Bk0E,mBAAoB,WAEO,OAArBr9F,KAAKqnB,cAETrnB,KAAKqnB,YAAc,GAAIzN,KAIxB5Z,KAAKqnB,YAAYmpE,cAAexwF,KAAKmN,WAItCsjC,sBAAuB,WAEO,OAAxBzwC,KAAKsnB,iBAETtnB,KAAKsnB,eAAiB,GAAIzN,KAI3B7Z,KAAKsnB,eAAekpE,cAAexwF,KAAKmN,WAIzCslD,MAAO,SAAWp3C,EAAUqF,EAAQm+E,GAEnC,IAAMxjF,GAAYA,EAASW,eAAgB,EAG1C,WADA/V,SAAQC,MAAO,sEAAuEmV,EAKvF,IAAIqI,GACJo7E,EAAe9+F,KAAKmN,SAASnH,OAC7B+4F,EAAY/+F,KAAKmN,SACjB6xF,EAAY3jF,EAASlO,SACrB8xF,EAASj/F,KAAKoN,MACd8xF,EAAS7jF,EAASjO,MAClB+xF,EAAOn/F,KAAKinB,cAAe,GAC3BkB,EAAO9M,EAAS4L,cAAe,GAC/Bm4E,EAAUp/F,KAAKgnB,OACfq4E,EAAUhkF,EAAS2L,MAEU5jB,UAAxBy7F,IAAoCA,EAAsB,GAE/Cz7F,SAAXsd,IAEJgD,GAAe,GAAI1J,KAAUsyB,gBAAiB5rB,GAM/C,KAAM,GAAIxZ,GAAI,EAAG2Y,EAAKm/E,EAAUh5F,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAEtD,GAAImI,GAAS2vF,EAAW93F,GAEpBo4F,EAAajwF,EAAOuN,OAERxZ,UAAXsd,GAAuB4+E,EAAWxtF,aAAc4O,GAErDq+E,EAAUzzF,KAAMg0F,GAMjB,IAAM,GAAIp4F,GAAI,EAAG2Y,EAAKw/E,EAAQr5F,OAAY6Z,EAAJ3Y,EAAQA,IAE7Ck4F,EAAQ9zF,KAAM+zF,EAASn4F,GAAI0V,QAM5B,KAAM1V,EAAI,EAAG2Y,EAAKq/E,EAAOl5F,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAE/C,GAAwBq4F,GAAUrlF,EAAQtK,EAAtCkR,EAAOo+E,EAAQh4F,GACnBs4F,EAAoB1+E,EAAK2D,cACzBg7E,EAAmB3+E,EAAKlK,YAExB2oF,GAAW,GAAIh7E,IAAOzD,EAAK/L,EAAI+pF,EAAch+E,EAAKzY,EAAIy2F,EAAch+E,EAAKwD,EAAIw6E,GAC7ES,EAASrlF,OAAOhI,KAAM4O,EAAK5G,QAEL9W,SAAjBsgB,GAEJ67E,EAASrlF,OAAOq6D,aAAc7wD,GAAe60B,WAI9C,KAAM,GAAItlC,GAAI,EAAGC,EAAKssF,EAAkBx5F,OAAYkN,EAAJD,EAAQA,IAEvDiH,EAASslF,EAAmBvsF,GAAI2J,QAEVxZ,SAAjBsgB,GAEJxJ,EAAOq6D,aAAc7wD,GAAe60B,YAIrCgnD,EAAS96E,cAAcnZ,KAAM4O,EAI9BqlF,GAAS3vF,MAAMsC,KAAM4O,EAAKlR,MAE1B,KAAM,GAAIqD,GAAI,EAAGC,EAAKusF,EAAiBz5F,OAAYkN,EAAJD,EAAQA,IAEtDrD,EAAQ6vF,EAAkBxsF,GAC1BssF,EAAS3oF,aAAatL,KAAMsE,EAAMgN,QAInC2iF,GAASx9E,cAAgBjB,EAAKiB,cAAgB88E,EAE9CI,EAAO3zF,KAAMi0F,GAMd,IAAMr4F,EAAI,EAAG2Y,EAAKsI,EAAKniB,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAE7C,GAAIqI,GAAK4Y,EAAMjhB,GAAKw4F,IAEpB,IAAYt8F,SAAPmM,EAAL,CAMA,IAAM,GAAI0D,GAAI,EAAGC,EAAK3D,EAAGvJ,OAAYkN,EAAJD,EAAQA,IAExCysF,EAAOp0F,KAAMiE,EAAI0D,GAAI2J,QAItBuiF,GAAK7zF,KAAMo0F,MAMbC,UAAW,SAAWC,GAErB,OAAMA,GAAQA,EAAKriF,WAAY,MAE9BtX,SAAQC,MAAO,kEAAmE05F,IAKnFA,EAAKj8E,kBAAoBi8E,EAAKtrC,mBAE9Bt0D,MAAKyyD,MAAOmtC,EAAKvkF,SAAUukF,EAAKl/E,UAUjCopC,cAAe,WAEd,GAGIpiD,GAAGm/C,EAGH3/C,EAAG2Y,EAAIiB,EACPkH,EAAS/U,EAAGC,EAPZ2sF,KACAC,KAAaC,KAGbC,EAAkB,EAClBtoF,EAAY1U,KAAKqmD,IAAK,GAAI22C,EAI9B,KAAM94F,EAAI,EAAG2Y,EAAK7f,KAAKmN,SAASnH,OAAY6Z,EAAJ3Y,EAAQA,IAE/CQ,EAAI1H,KAAKmN,SAAUjG,GACnB2/C,EAAM7jD,KAAKgqE,MAAOtlE,EAAE5F,EAAI4V,GAAc,IAAM1U,KAAKgqE,MAAOtlE,EAAE3F,EAAI2V,GAAc,IAAM1U,KAAKgqE,MAAOtlE,EAAElD,EAAIkT,GAExEtU,SAAvBy8F,EAAah5C,IAEjBg5C,EAAah5C,GAAQ3/C,EACrB44F,EAAOx0F,KAAMtL,KAAKmN,SAAUjG,IAC5B64F,EAAS74F,GAAM44F,EAAO95F,OAAS,GAK/B+5F,EAAS74F,GAAM64F,EAASF,EAAah5C,GASvC,IAAIo5C,KAEJ,KAAM/4F,EAAI,EAAG2Y,EAAK7f,KAAKoN,MAAMpH,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAEnD4Z,EAAO9gB,KAAKoN,MAAOlG,GAEnB4Z,EAAK/L,EAAIgrF,EAASj/E,EAAK/L,GACvB+L,EAAKzY,EAAI03F,EAASj/E,EAAKzY,GACvByY,EAAKwD,EAAIy7E,EAASj/E,EAAKwD,GAEvB0D,GAAYlH,EAAK/L,EAAG+L,EAAKzY,EAAGyY,EAAKwD,EAMjC,KAAM,GAJF47E,GAAW,GAILp5F,EAAI,EAAO,EAAJA,EAAOA,IAEvB,GAAKkhB,EAASlhB,KAAQkhB,GAAWlhB,EAAI,GAAM,GAAM,CAEhDo5F,EAAWp5F,EACXm5F,EAAoB30F,KAAMpE,EAC1B,QAQH,IAAMA,EAAI+4F,EAAoBj6F,OAAS,EAAGkB,GAAK,EAAGA,IAAO,CAExD,GAAIi5F,GAAMF,EAAqB/4F,EAI/B,KAFAlH,KAAKoN,MAAM88D,OAAQi2B,EAAK,GAElBltF,EAAI,EAAGC,EAAKlT,KAAKinB,cAAcjhB,OAAYkN,EAAJD,EAAQA,IAEpDjT,KAAKinB,cAAehU,GAAIi3D,OAAQi2B,EAAK,GAQvC,GAAIjK,GAAOl2F,KAAKmN,SAASnH,OAAS85F,EAAO95F,MAEzC,OADAhG,MAAKmN,SAAW2yF,EACT5J,GAIRkK,yBAA0B,WAezB,QAASC,GAAmBtrF,EAAG1M,GAE9B,MAAO0M,GAAEgN,cAAgB1Z,EAAE0Z,cAV5B,IAAM,GALF3U,GAAQpN,KAAKoN,MACbpH,EAASoH,EAAMpH,OAITkB,EAAI,EAAOlB,EAAJkB,EAAYA,IAE5BkG,EAAOlG,GAAIo5F,IAAMp5F,CAYlBkG,GAAMyI,KAAMwqF,EAIZ,IAGIE,GAASC,EAHTrB,EAAOn/F,KAAKinB,cAAe,GAC3BkB,EAAOnoB,KAAKinB,cAAe,EAI1Bk4E,IAAQA,EAAKn5F,SAAWA,IAASu6F,MACjCp4E,GAAQA,EAAKniB,SAAWA,IAASw6F,KAEtC,KAAM,GAAIt5F,GAAI,EAAOlB,EAAJkB,EAAYA,IAAO,CAEnC,GAAI4D,GAAKsC,EAAOlG,GAAIo5F,GAEfC,IAAUA,EAAQj1F,KAAM6zF,EAAMr0F,IAC9B01F,GAAUA,EAAQl1F,KAAM6c,EAAMrd,IAI/By1F,IAAUvgG,KAAKinB,cAAe,GAAMs5E,GACpCC,IAAUxgG,KAAKinB,cAAe,GAAMu5E,IAI1C9xB,OAAQ,WA4HP,QAAS+xB,GAAQ59F,EAAOgR,EAAU0L,GAEjC,MAAOA,GAAU1c,EAAU,GAAKgR,EAAahR,IAAc,GAAKgR,GAIjE,QAAS6sF,GAAgBxmF,GAExB,GAAIk4B,GAAOl4B,EAAOpY,EAAEglD,WAAa5sC,EAAOnY,EAAE+kD,WAAa5sC,EAAO1V,EAAEsiD,UAEhE,OAA6B1jD,UAAxBu9F,EAAavuD,GAEVuuD,EAAavuD,IAIrBuuD,EAAavuD,GAASnqB,EAAQjiB,OAAS,EACvCiiB,EAAQ3c,KAAM4O,EAAOpY,EAAGoY,EAAOnY,EAAGmY,EAAO1V,GAElCm8F,EAAavuD,IAIrB,QAASwuD,GAAehxF,GAEvB,GAAIwiC,GAAOxiC,EAAM7I,EAAE+/C,WAAal3C,EAAMxH,EAAE0+C,WAAal3C,EAAMvH,EAAEy+C,UAE7D,OAA4B1jD,UAAvBy9F,EAAYzuD,GAETyuD,EAAYzuD,IAIpByuD,EAAYzuD,GAASprB,EAAOhhB,OAC5BghB,EAAO1b,KAAMsE,EAAM01E,UAEZub,EAAYzuD,IAIpB,QAAS0uD,GAAYvxF,GAEpB,GAAI6iC,GAAO7iC,EAAGzN,EAAEglD,WAAav3C,EAAGxN,EAAE+kD,UAElC,OAAyB1jD,UAApB29F,EAAS3uD,GAEN2uD,EAAS3uD,IAIjB2uD,EAAS3uD,GAASlqB,EAAIliB,OAAS,EAC/BkiB,EAAI5c,KAAMiE,EAAGzN,EAAGyN,EAAGxN,GAEZg/F,EAAS3uD,IA/KjB,GAAIhlB,IACH0hD,UACC1qE,QAAS,IACT5B,KAAM,WACNusE,UAAW,mBAUb,IAJA3hD,EAAKrqB,KAAO/C,KAAK+C,KACjBqqB,EAAK5qB,KAAOxC,KAAKwC,KACE,KAAdxC,KAAKkD,OAAckqB,EAAKlqB,KAAOlD,KAAKkD,MAEhBE,SAApBpD,KAAKmY,WAA2B,CAEpC,GAAIA,GAAanY,KAAKmY,UAEtB,KAAM,GAAI0uC,KAAO1uC,GAEW/U,SAAtB+U,EAAY0uC,KAAsBz5B,EAAMy5B,GAAQ1uC,EAAY0uC,GAIlE,OAAOz5B,GAMR,IAAM,GAFFjgB,MAEMjG,EAAI,EAAGA,EAAIlH,KAAKmN,SAASnH,OAAQkB,IAAO,CAEjD,GAAImI,GAASrP,KAAKmN,SAAUjG,EAC5BiG,GAAS7B,KAAM+D,EAAOvN,EAAGuN,EAAOtN,EAAGsN,EAAO7K,GAY3C,IAAM,GARF4I,MACA6a,KACA04E,KACA35E,KACA65E,KACA34E,KACA64E,KAEM75F,EAAI,EAAGA,EAAIlH,KAAKoN,MAAMpH,OAAQkB,IAAO,CAE9C,GAAI4Z,GAAO9gB,KAAKoN,MAAOlG,GAEnB85F,GAAc,EACdC,GAAY,EACZC,EAAmD99F,SAAjCpD,KAAKinB,cAAe,GAAK/f,GAC3Ci6F,EAAgBrgF,EAAK5G,OAAOlU,SAAW,EACvCo7F,EAAsBtgF,EAAK2D,cAAcze,OAAS,EAClDq7F,EAAgC,IAAjBvgF,EAAKlR,MAAM7I,GAA4B,IAAjB+Z,EAAKlR,MAAMxH,GAA4B,IAAjB0Y,EAAKlR,MAAMvH,EACtEi5F,EAAqBxgF,EAAKlK,aAAa5Q,OAAS,EAEhDu7F,EAAW,CAef,IAbAA,EAAWd,EAAQc,EAAU,EAAG,GAChCA,EAAWd,EAAQc,EAAU,EAAGP,GAChCO,EAAWd,EAAQc,EAAU,EAAGN,GAChCM,EAAWd,EAAQc,EAAU,EAAGL,GAChCK,EAAWd,EAAQc,EAAU,EAAGJ,GAChCI,EAAWd,EAAQc,EAAU,EAAGH,GAChCG,EAAWd,EAAQc,EAAU,EAAGF,GAChCE,EAAWd,EAAQc,EAAU,EAAGD,GAEhCl0F,EAAM9B,KAAMi2F,GACZn0F,EAAM9B,KAAMwV,EAAK/L,EAAG+L,EAAKzY,EAAGyY,EAAKwD,GACjClX,EAAM9B,KAAMwV,EAAKiB,eAEZm/E,EAAkB,CAEtB,GAAIj6E,GAAgBjnB,KAAKinB,cAAe,GAAK/f,EAE7CkG,GAAM9B,KACLw1F,EAAY75E,EAAe,IAC3B65E,EAAY75E,EAAe,IAC3B65E,EAAY75E,EAAe,KAW7B,GANKk6E,GAEJ/zF,EAAM9B,KAAMo1F,EAAgB5/E,EAAK5G,SAI7BknF,EAAsB,CAE1B,GAAI38E,GAAgB3D,EAAK2D,aAEzBrX,GAAM9B,KACLo1F,EAAgBj8E,EAAe,IAC/Bi8E,EAAgBj8E,EAAe,IAC/Bi8E,EAAgBj8E,EAAe,KAWjC,GANK48E,GAEJj0F,EAAM9B,KAAMs1F,EAAe9/E,EAAKlR,QAI5B0xF,EAAqB,CAEzB,GAAI1qF,GAAekK,EAAKlK,YAExBxJ,GAAM9B,KACLs1F,EAAehqF,EAAc,IAC7BgqF,EAAehqF,EAAc,IAC7BgqF,EAAehqF,EAAc,MAwEhC,MARAwW,GAAKA,QAELA,EAAKA,KAAKjgB,SAAWA,EACrBigB,EAAKA,KAAKnF,QAAUA,EACfjB,EAAOhhB,OAAS,IAAIonB,EAAKA,KAAKpG,OAASA,GACvCkB,EAAIliB,OAAS,IAAIonB,EAAKA,KAAKlF,KAAQA,IACxCkF,EAAKA,KAAKhgB,MAAQA,EAEXggB,GAIRxQ,MAAO,WA0BN,OAAO,GAAIkK,KAAW5U,KAAMlS,OAI7BkS,KAAM,SAAWmpD,GAEhBr7D,KAAKmN,YACLnN,KAAKoN,SACLpN,KAAKinB,mBACLjnB,KAAKgnB,SAIL,KAAM,GAFF7Z,GAAWkuD,EAAOluD,SAEZjG,EAAI,EAAG2Y,EAAK1S,EAASnH,OAAY6Z,EAAJ3Y,EAAQA,IAE9ClH,KAAKmN,SAAS7B,KAAM6B,EAAUjG,GAAI0V,QAMnC,KAAM,GAFFoK,GAASq0C,EAAOr0C,OAEV9f,EAAI,EAAG2Y,EAAKmH,EAAOhhB,OAAY6Z,EAAJ3Y,EAAQA,IAE5ClH,KAAKgnB,OAAO1b,KAAM0b,EAAQ9f,GAAI0V,QAM/B,KAAM,GAFFxP,GAAQiuD,EAAOjuD,MAETlG,EAAI,EAAG2Y,EAAKzS,EAAMpH,OAAY6Z,EAAJ3Y,EAAQA,IAE3ClH,KAAKoN,MAAM9B,KAAM8B,EAAOlG,GAAI0V,QAI7B,KAAM,GAAI1V,GAAI,EAAG2Y,EAAKw7C,EAAOp0C,cAAcjhB,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAEjE,GAAI+f,GAAgBo0C,EAAOp0C,cAAe/f,EAET9D,UAA5BpD,KAAKinB,cAAe/f,KAExBlH,KAAKinB,cAAe/f,MAIrB,KAAM,GAAI+L,GAAI,EAAGC,EAAK+T,EAAcjhB,OAAYkN,EAAJD,EAAQA,IAAO,CAI1D,IAAM,GAFFiV,GAAMjB,EAAehU,GAAKuuF,KAEpB7/E,EAAI,EAAGC,EAAKsG,EAAIliB,OAAY4b,EAAJD,EAAQA,IAAO,CAEhD,GAAIpS,GAAK2Y,EAAKvG,EAEd6/E,GAAQl2F,KAAMiE,EAAGqN,SAIlB5c,KAAKinB,cAAe/f,GAAIoE,KAAMk2F;EAMhC,MAAOxhG,OAIR68B,QAAS,WAER78B,KAAKmqE,eAAiB3nE,KAAM,cAM9B,IAAIslB,IAAU,CA6CdnlB,QAAO+mE,OAAQ3hD,GAAeg2C,UAAWn8D,EAAgBm8D,WAExDs/B,mBAAoBv2E,GAASi3C,UAAUs/B,mBACvC5sD,sBAAuB3pB,GAASi3C,UAAUttB,sBAE1CyX,mBAAoB,WAEnBjiD,QAAQgc,KAAM,yFAIfkmC,qBAAsB,WAErBliD,QAAQgc,KAAM,2FAIfw/E,cAAe,SAAWpmF,GAQzB,IAAM,GANFwG,GAEAE,EADAN,KAGArU,EAAQiO,EAASjO,MAEXlG,EAAI,EAAGA,EAAIkG,EAAMpH,OAAQkB,IAAO,CAEzC,GAAI4Z,GAAO1T,EAAOlG,EAIb4Z,GAAKiB,gBAAkBA,IAE3BA,EAAgBjB,EAAKiB,cAEN3e,SAAVye,IAEJA,EAAMvd,MAAc,EAAJ4C,EAAU2a,EAAMsC,MAChC1C,EAAOnW,KAAMuW,IAIdA,GACCsC,MAAW,EAAJjd,EACP6a,cAAeA,IAOH3e,SAAVye,IAEJA,EAAMvd,MAAc,EAAJ4C,EAAU2a,EAAMsC,MAChC1C,EAAOnW,KAAMuW,IAId7hB,KAAKyhB,OAASA,GAIfigF,aAAc,SAAWrmF,GAExB,GAYIsmF,GAZAv0F,EAAQiO,EAASjO,MACjBD,EAAWkO,EAASlO,SACpB8Z,EAAgB5L,EAAS4L,cAEzBi6E,EAAkBj6E,EAAe,IAAOA,EAAe,GAAIjhB,OAAS,EACpE47F,EAAmB36E,EAAe,IAAOA,EAAe,GAAIjhB,OAAS,EAIrE0S,EAAe2C,EAAS3C,aACxBmpF,EAAqBnpF,EAAa1S,MAItC,IAAK67F,EAAqB,EAAI,CAE7BF,IAEA,KAAM,GAAIz6F,GAAI,EAAO26F,EAAJ36F,EAAwBA,IAExCy6F,EAAsBz6F,KAIvBlH,MAAK0Y,aAAa7E,SAAW8tF,EAI9B,GAGIG,GAHAnpF,EAAe0C,EAAS1C,aACxBopF,EAAqBppF,EAAa3S,MAItC,IAAK+7F,EAAqB,EAAI,CAE7BD,IAEA,KAAM,GAAI56F,GAAI,EAAO66F,EAAJ76F,EAAwBA,IAExC46F,EAAoB56F,KAIrBlH,MAAK0Y,aAAawB,OAAS4nF,EAc5B,IAAM,GARF36E,GAAc9L,EAAS8L,YACvBD,EAAc7L,EAAS6L,YAEvB86E,EAAiB76E,EAAYnhB,SAAWmH,EAASnH,OACjDi8F,EAAiB/6E,EAAYlhB,SAAWmH,EAASnH,OAI3CkB,EAAI,EAAGA,EAAIkG,EAAMpH,OAAQkB,IAAO,CAEzC,GAAI4Z,GAAO1T,EAAOlG,EAElBlH,MAAKmN,SAAS7B,KAAM6B,EAAU2T,EAAK/L,GAAK5H,EAAU2T,EAAKzY,GAAK8E,EAAU2T,EAAKwD,GAE3E,IAAIG,GAAgB3D,EAAK2D,aAEzB,IAA8B,IAAzBA,EAAcze,OAElBhG,KAAKioB,QAAQ3c,KAAMmZ,EAAe,GAAKA,EAAe,GAAKA,EAAe,QAEpE,CAEN,GAAIvK,GAAS4G,EAAK5G,MAElBla,MAAKioB,QAAQ3c,KAAM4O,EAAQA,EAAQA,GAIpC,GAAItD,GAAekK,EAAKlK,YAExB,IAA6B,IAAxBA,EAAa5Q,OAEjBhG,KAAKgnB,OAAO1b,KAAMsL,EAAc,GAAKA,EAAc,GAAKA,EAAc,QAEhE,CAEN,GAAIhH,GAAQkR,EAAKlR,KAEjB5P,MAAKgnB,OAAO1b,KAAMsE,EAAOA,EAAOA,GAIjC,GAAKsxF,KAAoB,EAAO,CAE/B,GAAIgB,GAAYj7E,EAAe,GAAK/f,EAEjB9D,UAAd8+F,EAEJliG,KAAKkoB,IAAI5c,KAAM42F,EAAW,GAAKA,EAAW,GAAKA,EAAW,KAI1Dj8F,QAAQgc,KAAM,2DAA4D/a,GAE1ElH,KAAKkoB,IAAI5c,KAAM,GAAIzJ,GAAW,GAAIA,GAAW,GAAIA,KAMnD,GAAK+/F,KAAqB,EAAO,CAEhC,GAAIM,GAAYj7E,EAAe,GAAK/f,EAEjB9D,UAAd8+F,EAEJliG,KAAKmoB,KAAK7c,KAAM42F,EAAW,GAAKA,EAAW,GAAKA,EAAW,KAI3Dj8F,QAAQgc,KAAM,4DAA6D/a,GAE3ElH,KAAKmoB,KAAK7c,KAAM,GAAIzJ,GAAW,GAAIA,GAAW,GAAIA,KAQpD,IAAM,GAAIoR,GAAI,EAAO4uF,EAAJ5uF,EAAwBA,IAAO,CAE/C,GAAIkvF,GAAczpF,EAAczF,GAAI9F,QAEpCw0F,GAAsB1uF,GAAI3H,KAAM62F,EAAarhF,EAAK/L,GAAKotF,EAAarhF,EAAKzY,GAAK85F,EAAarhF,EAAKwD,IAIjG,IAAM,GAAIrR,GAAI,EAAO8uF,EAAJ9uF,EAAwBA,IAAO,CAE/C,GAAImvF,GAAczpF,EAAc1F,GAAIwR,cAAevd,EAEnD46F,GAAoB7uF,GAAI3H,KAAM82F,EAAYrtF,EAAGqtF,EAAY/5F,EAAG+5F,EAAY99E,GAMpE09E,GAEJhiG,KAAKmnB,YAAY7b,KAAM6b,EAAarG,EAAK/L,GAAKoS,EAAarG,EAAKzY,GAAK8e,EAAarG,EAAKwD,IAInF29E,GAEJjiG,KAAKknB,YAAY5b,KAAM4b,EAAapG,EAAK/L,GAAKmS,EAAapG,EAAKzY,GAAK6e,EAAapG,EAAKwD,IAczF,MARAtkB,MAAKyhG,cAAepmF,GAEpBrb,KAAKwnB,mBAAqBnM,EAASmM,mBACnCxnB,KAAK0nB,kBAAoBrM,EAASqM,kBAClC1nB,KAAK2nB,iBAAmBtM,EAASsM,iBACjC3nB,KAAKynB,cAAgBpM,EAASoM,cAC9BznB,KAAK6nB,iBAAmBxM,EAASwM,iBAE1B7nB,MAIR68B,QAAS,WAER78B,KAAKmqE,eAAiB3nE,KAAM,eAkC9BG,OAAO+mE,OAAQthD,GAAe21C,UAAWn8D,EAAgBm8D,WAExDjiD,kBAAkB,EAElBumF,SAAU,WAET,MAAOriG,MAAKqoB,OAIb2C,SAAU,SAAW3C,GAEpBroB,KAAKqoB,MAAQA,GAId4C,aAAc,SAAW/nB,EAAMy2B,GAE9B,OAAMA,GAAaA,EAAU+iE,sBAAuB,IAAU/iE,GAAaA,EAAUxM,iCAAkC,GAEtHlnB,QAAQgc,KAAM,8EAEdjiB,MAAKirB,aAAc/nB,EAAM,GAAIqiB,IAAiBxf,UAAW,GAAKA,UAAW,MAM5D,UAAT7C,GAEJ+C,QAAQgc,KAAM,+EACdjiB,MAAKgrB,SAAU2O,KAMhB35B,KAAKoP,WAAYlM,GAASy2B,EAEnB35B,OAIRsiG,aAAc,SAAWp/F,GAExB,MAAOlD,MAAKoP,WAAYlM,IAIzBm+C,gBAAiB,SAAWn+C,GAI3B,aAFOlD,MAAKoP,WAAYlM,GAEjBlD,MAIR2qB,SAAU,SAAWxG,EAAO7f,EAAOyd,GAElC/hB,KAAKyhB,OAAOnW,MAEX6Y,MAAOA,EACP7f,MAAOA,EACPyd,cAAiC3e,SAAlB2e,EAA8BA,EAAgB,KAM/DwgF,YAAa,WAEZviG,KAAKyhB,WAIN+gF,aAAc,SAAWr+E,EAAO7f,GAE/BtE,KAAKsoB,UAAUnE,MAAQA,EACvBnkB,KAAKsoB,UAAUhkB,MAAQA,GAIxB40F,YAAa,SAAWx4E,GAEvB,GAAI7M,GAAW7T,KAAKoP,WAAWyE,QAEbzQ,UAAbyQ,IAEJ6M,EAAOy6D,oBAAqBtnE,EAASnN,OACrCmN,EAASgB,aAAc,EAIxB,IAAIqF,GAASla,KAAKoP,WAAW8K,MAE7B,IAAgB9W,SAAX8W,EAAuB,CAE3B,GAAIwJ,IAAe,GAAI1J,KAAUsyB,gBAAiB5rB,EAElDgD,GAAay3D,oBAAqBjhE,EAAOxT,OACzCwT,EAAOrF,aAAc,EAgBtB,MAZ0B,QAArB7U,KAAKqnB,aAETrnB,KAAKq9F,qBAIuB,OAAxBr9F,KAAKsnB,gBAETtnB,KAAKywC,wBAICzwC,MAIRomE,QAAS,WAIR,GAAI8tB,EAEJ,OAAO,UAAkBj8C,GAQxB,MANY70C,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAG3X,cAAetkC,GAElBj4C,KAAKk5F,YAAahF,GAEXl0F,SAMTy5F,QAAS,WAIR,GAAIvF,EAEJ,OAAO,UAAkBj8C,GAQxB,MANY70C,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAG1X,cAAevkC,GAElBj4C,KAAKk5F,YAAahF,GAEXl0F,SAMT05F,QAAS,WAIR,GAAIxF,EAEJ,OAAO,UAAkBj8C,GAQxB,MANY70C,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAGzX,cAAexkC,GAElBj4C,KAAKk5F,YAAahF,GAEXl0F,SAMTuxF,UAAW,WAIV,GAAI2C,EAEJ,OAAO,UAAoBpyF,EAAGC,EAAGyC,GAQhC,MANYpB,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAG5X,gBAAiBx6E,EAAGC,EAAGyC,GAE1BxE,KAAKk5F,YAAahF,GAEXl0F,SAMT6P,MAAO,WAIN,GAAIqkF,EAEJ,OAAO,UAAgBpyF,EAAGC,EAAGyC,GAQ5B,MANYpB,UAAP8wF,IAAmBA,EAAK,GAAItuF,IAEjCsuF,EAAGrX,UAAW/6E,EAAGC,EAAGyC,GAEpBxE,KAAKk5F,YAAahF,GAEXl0F,SAMTihB,OAAQ,WAEP,GAAIq8E,EAEJ,OAAO,UAAiBlzE,GAEVhnB,SAARk6F,IAAoBA,EAAM,GAAIx6E,KAEnCw6E,EAAIr8E,OAAQmJ,GAEZkzE,EAAIhpC,eAEJt0D,KAAKk5F,YAAaoE,EAAI58E,YAMxB5G,OAAQ,WAEP9Z,KAAKq9F,oBAEL,IAAIx5F,GAAS7D,KAAKqnB,YAAYypE,YAAY34C,QAI1C,OAFAn4C,MAAKuxF,UAAW1tF,EAAO/B,EAAG+B,EAAO9B,EAAG8B,EAAOW,GAEpCX,GAIRq2B,cAAe,SAAWhf,GAIzB,GAAIG,GAAWH,EAAOG,QAEtB,IAAMH,GAAUA,EAAOuC,UAAcvC,GAAUA,EAAOsC,OAAU,CAE/D,GAAIgxC,GAAY,GAAI/nC,IAA6C,EAA3BpL,EAASlO,SAASnH,OAAY,GAChEghB,EAAS,GAAIP,IAA2C,EAAzBpL,EAAS2L,OAAOhhB,OAAY,EAK/D,IAHAhG,KAAKirB,aAAc,WAAYujC,EAAUyuC,kBAAmB5hF,EAASlO,WACrEnN,KAAKirB,aAAc,QAASjE,EAAO61E,gBAAiBxhF,EAAS2L,SAExD3L,EAAS+L,eAAiB/L,EAAS+L,cAAcphB,SAAWqV,EAASlO,SAASnH,OAAS,CAE3F,GAAIohB,GAAgB,GAAIX,IAAkBpL,EAAS+L,cAAcphB,OAAQ,EAEzEhG,MAAKirB,aAAc,eAAgB7D,EAAcw1E,UAAWvhF,EAAS+L,gBAIrC,OAA5B/L,EAASiM,iBAEbtnB,KAAKsnB,eAAiBjM,EAASiM,eAAe1K,SAIjB,OAAzBvB,EAASgM,cAEbrnB,KAAKqnB,YAAchM,EAASgM,YAAYzK,aAI7B1B,IAAUA,EAAOqC,QAEvBlC,GAAYA,EAASW,YAE1Bhc,KAAK0hG,aAAcrmF,EAMrB,OAAOrb,OAIRo6B,iBAAkB,SAAWlf,GAE5B,GAAIG,GAAWH,EAAOG,QAEtB,IAAMH,GAAUA,EAAOqC,OAAU,CAEhC,GAAIklF,GAASpnF,EAASqnF,gBAStB,IAPKrnF,EAASkM,sBAAuB,IAEpCk7E,EAASr/F,OACTiY,EAASkM,oBAAqB,GAIfnkB,SAAXq/F,EAEJ,MAAOziG,MAAK0hG,aAAcrmF,EAI3BonF,GAAOj7E,mBAAqBnM,EAASmM,mBACrCi7E,EAAO/6E,kBAAoBrM,EAASqM,kBACpC+6E,EAAO96E,iBAAmBtM,EAASsM,iBACnC86E,EAAOh7E,cAAgBpM,EAASoM,cAChCg7E,EAAO56E,iBAAmBxM,EAASwM,iBAEnCxM,EAASmM,oBAAqB,EAC9BnM,EAASqM,mBAAoB,EAC7BrM,EAASsM,kBAAmB,EAC5BtM,EAASoM,eAAgB,EACzBpM,EAASwM,kBAAmB,EAE5BxM,EAAWonF,EAIZ,GAAI9oE,EAsFJ,OApFKte,GAASmM,sBAAuB,IAEpCmS,EAAY35B,KAAKoP,WAAWyE,SAETzQ,SAAdu2B,IAEJA,EAAUsjE,kBAAmB5hF,EAASlO,UACtCwsB,EAAU9kB,aAAc,GAIzBwG,EAASmM,oBAAqB,GAI1BnM,EAASqM,qBAAsB,IAEnCiS,EAAY35B,KAAKoP,WAAW8K,OAET9W,SAAdu2B,IAEJA,EAAUsjE,kBAAmB5hF,EAAS4M,SACtC0R,EAAU9kB,aAAc,GAIzBwG,EAASqM,mBAAoB,GAIzBrM,EAASsM,oBAAqB,IAElCgS,EAAY35B,KAAKoP,WAAWQ,MAETxM,SAAdu2B,IAEJA,EAAUkjE,gBAAiBxhF,EAAS2L,QACpC2S,EAAU9kB,aAAc,GAIzBwG,EAASsM,kBAAmB,GAIxBtM,EAASoM,gBAEbkS,EAAY35B,KAAKoP,WAAWG,GAETnM,SAAdu2B,IAEJA,EAAUojE,kBAAmB1hF,EAAS6M,KACtCyR,EAAU9kB,aAAc,GAIzBwG,EAASoM,eAAgB,GAIrBpM,EAASuM,0BAEb+R,EAAY35B,KAAKoP,WAAWuzF,aAETv/F,SAAdu2B,IAEJA,EAAUijE,UAAWvhF,EAAS+L,eAC9BuS,EAAU9kB,aAAc,GAIzBwG,EAASuM,yBAA0B,GAI/BvM,EAASwM,mBAEbxM,EAASomF,cAAevmF,EAAOG,UAC/Brb,KAAKyhB,OAASpG,EAASoG,OAEvBpG,EAASwM,kBAAmB,GAItB7nB,MAIR0hG,aAAc,SAAWrmF,GAIxB,MAFAA,GAASqnF,kBAAmB,GAAI36E,KAAiB25E,aAAcrmF,GAExDrb,KAAK4iG,mBAAoBvnF,EAASqnF,mBAI1CE,mBAAoB,SAAWvnF,GAE9B,GAAImzC,GAAY,GAAI1oD,cAAyC,EAA3BuV,EAASlO,SAASnH,OAGpD,IAFAhG,KAAKirB,aAAc,WAAY,GAAI1F,IAAiBipC,EAAW,GAAIyuC,kBAAmB5hF,EAASlO,WAE1FkO,EAAS4M,QAAQjiB,OAAS,EAAI,CAElC,GAAIiiB,GAAU,GAAIniB,cAAwC,EAA1BuV,EAAS4M,QAAQjiB,OACjDhG,MAAKirB,aAAc,SAAU,GAAI1F,IAAiB0C,EAAS,GAAIg1E,kBAAmB5hF,EAAS4M,UAI5F,GAAK5M,EAAS2L,OAAOhhB,OAAS,EAAI,CAEjC,GAAIghB,GAAS,GAAIlhB,cAAuC,EAAzBuV,EAAS2L,OAAOhhB,OAC/ChG,MAAKirB,aAAc,QAAS,GAAI1F,IAAiByB,EAAQ,GAAI61E,gBAAiBxhF,EAAS2L,SAIxF,GAAK3L,EAAS6M,IAAIliB,OAAS,EAAI,CAE9B,GAAIkiB,GAAM,GAAIpiB,cAAoC,EAAtBuV,EAAS6M,IAAIliB,OACzChG,MAAKirB,aAAc,KAAM,GAAI1F,IAAiB2C,EAAK,GAAI60E,kBAAmB1hF,EAAS6M,MAIpF,GAAK7M,EAAS8M,KAAKniB,OAAS,EAAI,CAE/B,GAAImiB,GAAO,GAAIriB,cAAqC,EAAvBuV,EAAS8M,KAAKniB,OAC3ChG,MAAKirB,aAAc,MAAO,GAAI1F,IAAiB4C,EAAM,GAAI40E,kBAAmB1hF,EAAS8M,OAItF,GAAK9M,EAAS2M,QAAQhiB,OAAS,EAAI,CAElC,GAAI+0B,GAAY1f,EAASlO,SAASnH,OAAS,MAAQwgB,YAAcnZ,YAC7D2a,EAAU,GAAI+S,GAAqC,EAA1B1f,EAAS2M,QAAQhiB,OAC9ChG,MAAKgrB,SAAU,GAAIzF,IAAiByC,EAAS,GAAI80E,iBAAkBzhF,EAAS2M,UAM7EhoB,KAAKyhB,OAASpG,EAASoG,MAIvB,KAAM,GAAIve,KAAQmY,GAAS3C,aAAe,CAKzC,IAAM,GAHFhS,MACAgS,EAAe2C,EAAS3C,aAAcxV,GAEhCgE,EAAI,EAAGyK,EAAI+G,EAAa1S,OAAY2L,EAAJzK,EAAOA,IAAO,CAEvD,GAAIi7F,GAAczpF,EAAcxR,GAE5ByyB,EAAY,GAAIlT,IAAuC,EAArB07E,EAAYn8F,OAAY,EAE9DU,GAAM4E,KAAMquB,EAAUsjE,kBAAmBkF,IAI1CniG,KAAK+b,gBAAiB7Y,GAASwD,EAMhC,GAAK2U,EAAS8L,YAAYnhB,OAAS,EAAI,CAEtC,GAAImhB,GAAc,GAAIV,IAAgD,EAA9BpL,EAAS8L,YAAYnhB,OAAY,EACzEhG,MAAKirB,aAAc,YAAa9D,EAAY+1E,kBAAmB7hF,EAAS8L,cAIzE,GAAK9L,EAAS6L,YAAYlhB,OAAS,EAAI,CAEtC,GAAIkhB,GAAc,GAAIT,IAAgD,EAA9BpL,EAAS6L,YAAYlhB,OAAY,EACzEhG,MAAKirB,aAAc,aAAc/D,EAAYg2E,kBAAmB7hF,EAAS6L,cAkB1E,MAZiC,QAA5B7L,EAASiM,iBAEbtnB,KAAKsnB,eAAiBjM,EAASiM,eAAe1K,SAIjB,OAAzBvB,EAASgM,cAEbrnB,KAAKqnB,YAAchM,EAASgM,YAAYzK,SAIlC5c,MAIRq9F,mBAAoB,WAEO,OAArBr9F,KAAKqnB,cAETrnB,KAAKqnB,YAAc,GAAIzN,IAIxB,IAAI40C,GAAYxuD,KAAKoP,WAAWyE,SAASnN,KAEtBtD,UAAdorD,EAEJxuD,KAAKqnB,YAAY2qE,aAAcxjC,GAI/BxuD,KAAKqnB,YAAYopE,aAIboS,MAAO7iG,KAAKqnB,YAAYxa,IAAI/K,IAAO+gG,MAAO7iG,KAAKqnB,YAAYxa,IAAI9K,IAAO8gG,MAAO7iG,KAAKqnB,YAAYxa,IAAIrI,KAEtGyB,QAAQC,MAAO,oIAAqIlG,OAMtJywC,sBAAuB,WAEtB,GAAI+2B,GAAM,GAAI5tD,IACVwQ,EAAS,GAAIzkB,EAEjB,OAAO,YAEuB,OAAxB3F,KAAKsnB,iBAETtnB,KAAKsnB,eAAiB,GAAIzN,IAI3B,IAAI20C,GAAYxuD,KAAKoP,WAAWyE,QAEhC,IAAK26C,EAAY,CAEhB,GAAI9nD,GAAQ8nD,EAAU9nD,MAClBoT,EAAS9Z,KAAKsnB,eAAexN,MAEjC0tD,GAAIwqB,aAActrF,GAClB8gE,EAAIspB,UAAWh3E,EAOf,KAAM,GAFF84E,GAAc,EAER1rF,EAAI,EAAG2Y,EAAKnZ,EAAMV,OAAY6Z,EAAJ3Y,EAAQA,GAAK,EAEhDkjB,EAAOg7B,UAAW1+C,EAAOQ,GACzB0rF,EAAc5vF,KAAK8J,IAAK8lF,EAAa94E,EAAOq0D,kBAAmB/jD,GAIhEpqB,MAAKsnB,eAAevN,OAAS/W,KAAKmhD,KAAMyuC,GAEnCiQ,MAAO7iG,KAAKsnB,eAAevN,SAE/B9T,QAAQC,MAAO,+HAAgIlG,WAUnJkoD,mBAAoB,aAMpBC,qBAAsB,WAErB,GAAI9/B,GAAQroB,KAAKqoB,MACbjZ,EAAapP,KAAKoP,WAClBqS,EAASzhB,KAAKyhB,MAElB,IAAKrS,EAAWyE,SAAW,CAE1B,GAAI26C,GAAYp/C,EAAWyE,SAASnN,KAEpC,IAA2BtD,SAAtBgM,EAAW8K,OAEfla,KAAKirB,aAAc,SAAU,GAAI1F,IAAiB,GAAIzf,cAAc0oD,EAAUxoD,QAAU,QAQxF,KAAM,GAFFU,GAAQ0I,EAAW8K,OAAOxT,MAEpBQ,EAAI,EAAG2Y,EAAKnZ,EAAMV,OAAY6Z,EAAJ3Y,EAAQA,IAE3CR,EAAOQ,GAAM,CAMf,IAEI42F,GAAIC,EAAIC,EAFR/1E,EAAU7Y,EAAW8K,OAAOxT,MAIhCo8F,EAAK,GAAIn9F,GACTo9F,EAAK,GAAIp9F,GACTq9F,EAAK,GAAIr9F,GAETg4F,EAAK,GAAIh4F,GACTi4F,EAAK,GAAIj4F,EAIT,IAAK0iB,EAAQ,CAEZ,GAAIL,GAAUK,EAAM3hB,KAEG,KAAlB+a,EAAOzb,QAEXhG,KAAK2qB,SAAU,EAAG3C,EAAQhiB,OAI3B,KAAM,GAAIiN,GAAI,EAAGC,EAAKuO,EAAOzb,OAAYkN,EAAJD,IAAWA,EAO/C,IAAM,GALF4O,GAAQJ,EAAQxO,GAEhBkR,EAAQtC,EAAMsC,MACd7f,EAAQud,EAAMvd,MAER4C,EAAIid,EAAOtE,EAAKsE,EAAQ7f,EAAWub,EAAJ3Y,EAAQA,GAAK,EAErD42F,EAAwB,EAAnB91E,EAAS9gB,EAAI,GAClB62F,EAAwB,EAAnB/1E,EAAS9gB,EAAI,GAClB82F,EAAwB,EAAnBh2E,EAAS9gB,EAAI,GAElB47F,EAAG19C,UAAWoJ,EAAWsvC,GACzBiF,EAAG39C,UAAWoJ,EAAWuvC,GACzBiF,EAAG59C,UAAWoJ,EAAWwvC,GAEzBL,EAAGlxC,WAAYu2C,EAAID,GACnBnF,EAAGnxC,WAAYq2C,EAAIC,GACnBpF,EAAG7oB,MAAO8oB,GAEV31E,EAAS61E,IAAQH,EAAG77F,EACpBmmB,EAAS61E,EAAK,IAAOH,EAAG57F,EACxBkmB,EAAS61E,EAAK,IAAOH,EAAGn5F,EAExByjB,EAAS81E,IAAQJ,EAAG77F,EACpBmmB,EAAS81E,EAAK,IAAOJ,EAAG57F,EACxBkmB,EAAS81E,EAAK,IAAOJ,EAAGn5F,EAExByjB,EAAS+1E,IAAQL,EAAG77F,EACpBmmB,EAAS+1E,EAAK,IAAOL,EAAG57F,EACxBkmB,EAAS+1E,EAAK,IAAOL,EAAGn5F,MAU1B,KAAM,GAAI0C,GAAI,EAAG2Y,EAAK2uC,EAAUxoD,OAAY6Z,EAAJ3Y,EAAQA,GAAK,EAEpD47F,EAAG19C,UAAWoJ,EAAWtnD,GACzB67F,EAAG39C,UAAWoJ,EAAWtnD,EAAI,GAC7B87F,EAAG59C,UAAWoJ,EAAWtnD,EAAI,GAE7By2F,EAAGlxC,WAAYu2C,EAAID,GACnBnF,EAAGnxC,WAAYq2C,EAAIC,GACnBpF,EAAG7oB,MAAO8oB,GAEV31E,EAAS/gB,GAAMy2F,EAAG77F,EAClBmmB,EAAS/gB,EAAI,GAAMy2F,EAAG57F,EACtBkmB,EAAS/gB,EAAI,GAAMy2F,EAAGn5F,EAEtByjB,EAAS/gB,EAAI,GAAMy2F,EAAG77F,EACtBmmB,EAAS/gB,EAAI,GAAMy2F,EAAG57F,EACtBkmB,EAAS/gB,EAAI,GAAMy2F,EAAGn5F,EAEtByjB,EAAS/gB,EAAI,GAAMy2F,EAAG77F,EACtBmmB,EAAS/gB,EAAI,GAAMy2F,EAAG57F,EACtBkmB,EAAS/gB,EAAI,GAAMy2F,EAAGn5F,CAMxBxE,MAAKijG,mBAEL7zF,EAAW8K,OAAOrF,aAAc,IAMlC49C,MAAO,SAAWp3C,EAAUxX,GAE3B,IAAMwX,GAAYA,EAASS,qBAAsB,EAGhD,WADA7V,SAAQC,MAAO,kFAAmFmV,EAKnFjY,UAAXS,IAAuBA,EAAS,EAErC,IAAIuL,GAAapP,KAAKoP,UAEtB,KAAM,GAAIy3C,KAAOz3C,GAEhB,GAAoChM,SAA/BiY,EAASjM,WAAYy3C,GAU1B,IAAM,GARFq8C,GAAa9zF,EAAYy3C,GACzBs8C,EAAkBD,EAAWx8F,MAE7B08F,EAAa/nF,EAASjM,WAAYy3C,GAClCw8C,EAAkBD,EAAW18F,MAE7B48F,EAAgBF,EAAW59E,SAErBte,EAAI,EAAG+L,EAAIqwF,EAAgBz/F,EAAQqD,EAAIm8F,EAAgBr9F,OAAQkB,IAAM+L,IAE9EkwF,EAAiBlwF,GAAMowF,EAAiBn8F,EAM1C,OAAOlH,OAIRijG,iBAAkB,WAMjB,IAAM,GAFFnhG,GAAGC,EAAGyC,EAAGsC,EAFTmhB,EAAUjoB,KAAKoP,WAAW8K,OAAOxT,MAI3BQ,EAAI,EAAG2Y,EAAKoI,EAAQjiB,OAAY6Z,EAAJ3Y,EAAQA,GAAK,EAElDpF,EAAImmB,EAAS/gB,GACbnF,EAAIkmB,EAAS/gB,EAAI,GACjB1C,EAAIyjB,EAAS/gB,EAAI,GAEjBJ,EAAI,EAAM9D,KAAKmhD,KAAMriD,EAAIA,EAAIC,EAAIA,EAAIyC,EAAIA,GAEzCyjB,EAAS/gB,IAAOJ,EAChBmhB,EAAS/gB,EAAI,IAAOJ,EACpBmhB,EAAS/gB,EAAI,IAAOJ,GAMtBy8F,aAAc,WAEb,GAAoB,OAAfvjG,KAAKqoB,MAGT,MADApiB,SAAQgc,KAAM,yEACPjiB,IAIR,IAAIowD,GAAY,GAAIhoC,IAEhBJ,EAAUhoB,KAAKqoB,MAAM3hB,MACrB0I,EAAapP,KAAKoP,UAEtB,KAAM,GAAIlM,KAAQkM,GAAa,CAW9B,IAAM,GATFuqB,GAAYvqB,EAAYlM,GAExBwD,EAAQizB,EAAUjzB,MAClB8e,EAAWmU,EAAUnU,SAErBg+E,EAAS,GAAI98F,GAAM2uD,YAAartC,EAAQhiB,OAASwf,GAEjD6C,EAAQ,EAAG6+B,EAAS,EAEdhgD,EAAI,EAAGyK,EAAIqW,EAAQhiB,OAAY2L,EAAJzK,EAAOA,IAAO,CAElDmhB,EAAQL,EAAS9gB,GAAMse,CAEvB,KAAM,GAAIvS,GAAI,EAAOuS,EAAJvS,EAAcA,IAE9BuwF,EAAQt8C,KAAcxgD,EAAO2hB,KAM/B+nC,EAAUnlC,aAAc/nB,EAAM,GAAIqiB,IAAiBi+E,EAAQh+E,IAI5D,MAAO4qC,IAIRse,OAAQ,WAEP,GAAIthD,IACH0hD,UACC1qE,QAAS,IACT5B,KAAM,iBACNusE,UAAW,yBAUb,IAJA3hD,EAAKrqB,KAAO/C,KAAK+C,KACjBqqB,EAAK5qB,KAAOxC,KAAKwC,KACE,KAAdxC,KAAKkD,OAAckqB,EAAKlqB,KAAOlD,KAAKkD,MAEhBE,SAApBpD,KAAKmY,WAA2B,CAEpC,GAAIA,GAAanY,KAAKmY,UAEtB,KAAM,GAAI0uC,KAAO1uC,GAEW/U,SAAtB+U,EAAY0uC,KAAsBz5B,EAAMy5B,GAAQ1uC,EAAY0uC,GAIlE,OAAOz5B,GAIRA,EAAKA,MAAShe,cAEd,IAAIiZ,GAAQroB,KAAKqoB,KAEjB,IAAe,OAAVA,EAAiB,CAErB,GAAI3hB,GAAQgY,MAAMq/C,UAAU7Z,MAAM/+C,KAAMkjB,EAAM3hB,MAE9C0mB,GAAKA,KAAK/E,OACT7lB,KAAM6lB,EAAM3hB,MAAM2uD,YAAYnyD,KAC9BwD,MAAOA,GAKT,GAAI0I,GAAapP,KAAKoP,UAEtB,KAAM,GAAIy3C,KAAOz3C,GAAa,CAE7B,GAAIuqB,GAAYvqB,EAAYy3C,GAExBngD,EAAQgY,MAAMq/C,UAAU7Z,MAAM/+C,KAAMw0B,EAAUjzB,MAElD0mB,GAAKA,KAAKhe,WAAYy3C,IACrBrhC,SAAUmU,EAAUnU,SACpBhjB,KAAMm3B,EAAUjzB,MAAM2uD,YAAYnyD,KAClCwD,MAAOA,EACP+e,WAAYkU,EAAUlU,YAKxB,GAAIhE,GAASzhB,KAAKyhB,MAEbA,GAAOzb,OAAS,IAEpBonB,EAAKA,KAAK3L,OAASs5E,KAAKE,MAAOF,KAAKC,UAAWv5E,IAIhD,IAAI6F,GAAiBtnB,KAAKsnB,cAW1B,OATwB,QAAnBA,IAEJ8F,EAAKA,KAAK9F,gBACTxN,OAAQwN,EAAexN,OAAO7S,UAC9B8S,OAAQuN,EAAevN,SAKlBqT,GAIRxQ,MAAO,WA0BN,OAAO,GAAIwL,KAAiBlW,KAAMlS,OAInCkS,KAAM,SAAWmpD,GAEhB,GAAIhzC,GAAQgzC,EAAOhzC,KAEJ,QAAVA,GAEJroB,KAAKgrB,SAAU3C,EAAMzL,QAItB,IAAIxN,GAAaisD,EAAOjsD,UAExB,KAAM,GAAIlM,KAAQkM,GAAa,CAE9B,GAAIuqB,GAAYvqB,EAAYlM,EAC5BlD,MAAKirB,aAAc/nB,EAAMy2B,EAAU/c,SAMpC,IAAM,GAFF6E,GAAS45C,EAAO55C,OAEVva,EAAI,EAAGyK,EAAI8P,EAAOzb,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjD,GAAI2a,GAAQJ,EAAQva,EACpBlH,MAAK2qB,SAAU9I,EAAMsC,MAAOtC,EAAMvd,MAAOud,EAAME,eAIhD,MAAO/hB,OAIR68B,QAAS,WAER78B,KAAKmqE,eAAiB3nE,KAAM,eAM9B4lB,GAAeq2B,SAAW,MAwB1Bl2B,GAAKw1C,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAEvD1I,YAAa9sC,GAEbhL,QAAQ,EAERkmF,YAAa,SAAW5gG,GAEvB7C,KAAKyoB,SAAW5lB,GAIjBqP,KAAM,SAAWmpD,GAMhB,MAJAv4C,IAASi7C,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAKyoB,SAAW4yC,EAAO5yC,SAEhBzoB,MAIR2oB,mBAAoB,WAEnB,GAAIjQ,GAAe1Y,KAAKqb,SAAS3C,YAEjC,IAAsBtV,SAAjBsV,GAA8BA,EAAa1S,OAAS,EAAI,CAE5DhG,KAAKkhD,yBACLlhD,KAAK0jG,wBAEL,KAAM,GAAI73B,GAAI,EAAG83B,EAAKjrF,EAAa1S,OAAY29F,EAAJ93B,EAAQA,IAElD7rE,KAAKkhD,sBAAsB51C,KAAM,GACjCtL,KAAK0jG,sBAAuBhrF,EAAcmzD,GAAI3oE,MAAS2oE,IAQ1DvJ,QAAW,WAuBV,QAASshC,GAAgBzrE,EAAO7d,EAAIC,EAAIC,EAAIqpF,EAAK3qF,EAAK4qF,GAUrD,MARAz/E,IAASq3E,mBAAoBvjE,EAAO7d,EAAIC,EAAIC,EAAIupF,GAEhDF,EAAIj2D,eAAgBm2D,EAAUjiG,GAC9BoX,EAAI00B,eAAgBm2D,EAAUhiG,GAC9B+hG,EAAIl2D,eAAgBm2D,EAAUv/F,GAE9Bq/F,EAAI9iF,IAAK7H,GAAM6H,IAAK+iF,GAEbD,EAAIjnF,QAIZ,QAASonF,GAAmB9oF,EAAQinD,EAAWN,EAAKihC,EAAIC,EAAIC,EAAI7qE,GAE/D,GAAIk5D,GACAv7E,EAAWoF,EAAOpF,QAYtB,IARCu7E,EAFIv7E,EAASU,OAASyG,GAEV4kD,EAAIk2B,kBAAmBiL,EAAID,EAAID,GAAI,EAAM3qE,GAIzC0pC,EAAIk2B,kBAAmB+K,EAAIC,EAAIC,EAAIltF,EAASU,OAASuG,GAAYob,GAI3D,OAAdk5D,EAAqB,MAAO,KAEjC4S,GAAuB/xF,KAAMimB,GAC7B8rE,EAAuBnyF,aAAcoJ,EAAOrJ,YAE5C,IAAI6b,GAAWy0C,EAAUN,IAAIt/C,OAAO2hD,WAAY+/B,EAEhD,OAAKv2E,GAAWy0C,EAAU3sD,MAAQkY,EAAWy0C,EAAU1sD,IAAa,MAGnEiY,SAAUA,EACVyK,MAAO8rE,EAAuBrnF,QAC9B1B,OAAQA,GAKV,QAASgpF,GAAiChpF,EAAQinD,EAAWN,EAAKrT,EAAWtmC,EAAKnT,EAAG1M,EAAGic,GAEvFw5E,EAAG14C,UAAWoJ,EAAe,EAAJz5C,GACzBgpF,EAAG34C,UAAWoJ,EAAe,EAAJnmD,GACzB21F,EAAG54C,UAAWoJ,EAAe,EAAJlqC,EAEzB,IAAI6/E,GAAeH,EAAmB9oF,EAAQinD,EAAWN,EAAKi8B,EAAIC,EAAIC,EAAIoG,EAmB1E,OAjBKD,KAECj8E,IAEJm8E,EAAIj/C,UAAWl9B,EAAS,EAAJnT,GACpBuvF,EAAIl/C,UAAWl9B,EAAS,EAAJ7f,GACpBk8F,EAAIn/C,UAAWl9B,EAAS,EAAJ5D,GAEpB6/E,EAAa50F,GAAKq0F,EAAgBQ,EAAoBtG,EAAIC,EAAIC,EAAKqG,EAAKC,EAAKC,IAI9EJ,EAAarjF,KAAO,GAAIyD,IAAOxP,EAAG1M,EAAGic,EAAGD,GAASnK,OAAQ4jF,EAAIC,EAAIC,IACjEmG,EAAaK,UAAYzvF,GAInBovF,EA5FR,GAAIM,GAAgB,GAAI7+F,GACpBi8D,EAAM,GAAIv/C,IACVuuB,EAAS,GAAIh3B,IAEbikF,EAAK,GAAIn4F,GACTo4F,EAAK,GAAIp4F,GACTq4F,EAAK,GAAIr4F,GAET++F,EAAQ,GAAI/+F,GACZg/F,EAAQ,GAAIh/F,GACZi/F,EAAQ,GAAIj/F,GAEZ0+F,EAAM,GAAIxiG,GACVyiG,EAAM,GAAIziG,GACV0iG,EAAM,GAAI1iG,GAEVkiG,EAAY,GAAIp+F,GAEhBy+F,EAAoB,GAAIz+F,GACxBs+F,EAAyB,GAAIt+F,EA6EjC,OAAO,UAAkBw8D,EAAWC,GAEnC,GAAI/mD,GAAWrb,KAAKqb,SAChBvF,EAAW9V,KAAK8V,SAChBjE,EAAc7R,KAAK6R,WAEvB,IAAkBzO,SAAb0S,IAI4B,OAA5BuF,EAASiM,gBAA0BjM,EAASo1B,wBAEjDI,EAAO3+B,KAAMmJ,EAASiM,gBACtBupB,EAAO/+B,aAAcD,GAEhBswD,EAAUN,IAAI/wB,iBAAkBD,MAAa,IAIlD4zD,EAAcpjF,WAAYxP,GAC1BgwD,EAAI3vD,KAAMiwD,EAAUN,KAAM/vD,aAAc2yF,GAIV,OAAzBppF,EAASgM,aAERw6C,EAAIqvB,cAAe71E,EAASgM,gBAAkB,IAFpD,CAMA,GAAIa,GAAKi8E,CAET,IAAM9oF,GAAYA,EAASS,iBAAoB,CAE9C,GAAI/G,GAAG1M,EAAGic,EACN+D,EAAQhN,EAASgN,MACjBjZ,EAAaiM,EAASjM,WACtBo/C,EAAYp/C,EAAWyE,SAASnN,KAQpC,IANuBtD,SAAlBgM,EAAWG,KAEf2Y,EAAM9Y,EAAWG,GAAG7I,OAIN,OAAV2hB,EAIJ,IAAM,GAFFL,GAAUK,EAAM3hB,MAEVQ,EAAI,EAAGyK,EAAIqW,EAAQhiB,OAAY2L,EAAJzK,EAAOA,GAAK,EAEhD6N,EAAIiT,EAAS9gB,GACbmB,EAAI2f,EAAS9gB,EAAI,GACjBod,EAAI0D,EAAS9gB,EAAI,GAEjBi9F,EAAeD,EAAiClkG,KAAMmiE,EAAWN,EAAKrT,EAAWtmC,EAAKnT,EAAG1M,EAAGic,GAEvF6/E,IAEJA,EAAaK,UAAYxhG,KAAK6nB,MAAO3jB,EAAI,GACzCk7D,EAAW92D,KAAM64F,QASnB,KAAM,GAAIj9F,GAAI,EAAGyK,EAAI68C,EAAUxoD,OAAY2L,EAAJzK,EAAOA,GAAK,EAElD6N,EAAI7N,EAAI,EACRmB,EAAI0M,EAAI,EACRuP,EAAIvP,EAAI,EAERovF,EAAeD,EAAiClkG,KAAMmiE,EAAWN,EAAKrT,EAAWtmC,EAAKnT,EAAG1M,EAAGic,GAEvF6/E,IAEJA,EAAa97E,MAAQtT,EACrBqtD,EAAW92D,KAAM64F,QAQd,IAAM9oF,GAAYA,EAASW,WAAc,CAE/C,GAAI6oF,GAAKC,EAAKC,EACVC,EAAkBlvF,GAAYA,EAAS0L,gBACvCE,EAAYsjF,KAAmB,EAAOlvF,EAAS4L,UAAY,KAE3DvU,EAAWkO,EAASlO,SACpBC,EAAQiO,EAASjO,MACjB6Z,EAAgB5L,EAAS4L,cAAe,EACvCA,GAAcjhB,OAAS,IAAIkiB,EAAMjB,EAEtC,KAAM,GAAI2U,GAAI,EAAGiiE,EAAKzwF,EAAMpH,OAAY63F,EAAJjiE,EAAQA,IAAO,CAElD,GAAI9a,GAAO1T,EAAOwuB,GACdqpE,EAAeD,KAAmB,EAAOtjF,EAAWZ,EAAKiB,eAAkBjM,CAE/E,IAAsB1S,SAAjB6hG,EAAL,CAMA,GAJAJ,EAAM13F,EAAU2T,EAAK/L,GACrB+vF,EAAM33F,EAAU2T,EAAKzY,GACrB08F,EAAM53F,EAAU2T,EAAKwD,GAEhB2gF,EAAavsF,gBAAiB,EAAO,CAEzC,GAAIA,GAAe2C,EAAS3C,aACxB8kC,EAAkBx9C,KAAKkhD,qBAE3B48C,GAAGpxF,IAAK,EAAG,EAAG,GACdqxF,EAAGrxF,IAAK,EAAG,EAAG,GACdsxF,EAAGtxF,IAAK,EAAG,EAAG,EAEd,KAAM,GAAIw9C,GAAI,EAAGg7C,EAAKxsF,EAAa1S,OAAYk/F,EAAJh7C,EAAQA,IAAO,CAEzD,GAAI9I,GAAY5D,EAAiB0M,EAEjC,IAAmB,IAAd9I,EAAL,CAEA,GAAI+jD,GAAUzsF,EAAcwxC,GAAI/8C,QAEhC2wF,GAAGtwB,gBAAiBk3B,EAAMj4C,WAAY04C,EAASrkF,EAAK/L,GAAK8vF,GAAOzjD,GAChE28C,EAAGvwB,gBAAiBm3B,EAAMl4C,WAAY04C,EAASrkF,EAAKzY,GAAKy8F,GAAO1jD,GAChE48C,EAAGxwB,gBAAiBo3B,EAAMn4C,WAAY04C,EAASrkF,EAAKwD,GAAKygF,GAAO3jD,IAIjE08C,EAAG/8E,IAAK8jF,GACR9G,EAAGh9E,IAAK+jF,GACR9G,EAAGj9E,IAAKgkF,GAERF,EAAM/G,EACNgH,EAAM/G,EACNgH,EAAM/G,EAMP,GAFAmG,EAAeH,EAAmBhkG,KAAMmiE,EAAWN,EAAKgjC,EAAKC,EAAKC,EAAKX,GAEnD,CAEnB,GAAKl8E,EAAM,CAEV,GAAIk9E,GAAQl9E,EAAK0T,EACjByoE,GAAInyF,KAAMkzF,EAAO,IACjBd,EAAIpyF,KAAMkzF,EAAO,IACjBb,EAAIryF,KAAMkzF,EAAO,IAEjBjB,EAAa50F,GAAKq0F,EAAgBQ,EAAmBS,EAAKC,EAAKC,EAAKV,EAAKC,EAAKC,GAI/EJ,EAAarjF,KAAOA,EACpBqjF,EAAaK,UAAY5oE,EACzBwmC,EAAW92D,KAAM64F,YAYtBvnF,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAKqb,SAAUrb,KAAK8V,UAAW5D,KAAMlS,SAsMpE4oB,GAAkBm1C,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC5Dn1C,GAAkBm1C,UAAU1I,YAAczsC,GAgG1CsC,GAAoB6yC,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC9D7yC,GAAoB6yC,UAAU1I,YAAcnqC,GAmB5CM,GAAOuyC,UAAYp7D,OAAOguE,OAAQ7tD,GAASi7C,WAC3CvyC,GAAOuyC,UAAU1I,YAAc7pC,GAE/BA,GAAOuyC,UAAUzb,UAAW,EAE5B92B,GAAOuyC,UAAU28B,kBAAoB,WAEpC,GAAI13E,GAAa,GAAI1d,EAErB,OAAO,UAA4BmgF,GAElC,GAAInqE,GAASmqE,GAAkB,GAAI9/E,EAInC,OAFA3F,MAAKu6F,mBAAoBv3E,GAElB1H,EAAO5O,IAAK,EAAG,EAAG,IAAM2nE,gBAAiBrxD,OAMlDwI,GAAOuyC,UAAU98C,OAAS,WAIzB,GAAIizE,GAAK,GAAItuF,EAEb,OAAO,UAAiBwkB,GAEvB8pE,EAAGjzE,OAAQjhB,KAAK6T,SAAUuW,EAAQpqB,KAAKghB,IAEvChhB,KAAKgjB,WAAWwuD,sBAAuB0iB,OAMzC1oE,GAAOuyC,UAAUnhD,MAAQ,WAExB,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCwrB,GAAOuyC,UAAU7rD,KAAO,SAAWmpD,GAOlC,MALAv4C,IAASi7C,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK+R,mBAAmBG,KAAMmpD,EAAOtpD,oBACrC/R,KAAKiS,iBAAiBC,KAAMmpD,EAAOppD,kBAE5BjS,MAkCRyrB,GAAkBsyC,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQnlD,GAAOuyC,YAElE1I,YAAa5pC,GAEb45E,qBAAqB,EAErBnzF,KAAM,SAAWmpD,GAiBhB,MAfA7vC,IAAOuyC,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAElCr7D,KAAK0rB,IAAM2vC,EAAO3vC,IAClB1rB,KAAK4rB,KAAOyvC,EAAOzvC,KAEnB5rB,KAAKwV,KAAO6lD,EAAO7lD,KACnBxV,KAAKyV,IAAM4lD,EAAO5lD,IAClBzV,KAAK6rB,MAAQwvC,EAAOxvC,MAEpB7rB,KAAK2rB,OAAS0vC,EAAO1vC,OACrB3rB,KAAK8rB,KAAuB,OAAhBuvC,EAAOvvC,KAAgB,KAAOnpB,OAAO+mE,UAAYrO,EAAOvvC,MAEpE9rB,KAAK+rB,UAAYsvC,EAAOtvC,UACxB/rB,KAAKgsB,WAAaqvC,EAAOrvC,WAElBhsB,MAYRslG,eAAgB,SAAWC,GAG1B,GAAIC,GAAe,GAAMxlG,KAAKylG,gBAAkBF,CAEhDvlG,MAAK0rB,IAA6B,EAAvBlqB,EAAQwB,KAAKyoE,QAAczoE,KAAK0iG,KAAMF,GACjDxlG,KAAKqgB,0BAONslF,eAAgB,WAEf,GAAIH,GAAexiG,KAAKq6E,IAA4B,GAAvB77E,EAAQwB,KAAKstD,QAAgBtwD,KAAK0rB,IAE/D,OAAO,GAAM1rB,KAAKylG,gBAAkBD,GAIrCI,gBAAiB,WAEhB,MAA8B,GAAvBpkG,EAAQwB,KAAKyoE,QAAczoE,KAAK0iG,KACrC1iG,KAAKq6E,IAA4B,GAAvB77E,EAAQwB,KAAKstD,QAAgBtwD,KAAK0rB,KAAQ1rB,KAAK4rB,OAI5Di6E,aAAc,WAGb,MAAO7lG,MAAK+rB,UAAY/oB,KAAK6J,IAAK7M,KAAK2rB,OAAQ,IAIhD85E,cAAe,WAGd,MAAOzlG,MAAK+rB,UAAY/oB,KAAK8J,IAAK9M,KAAK2rB,OAAQ,IAuChDm6E,cAAe,SAAWC,EAAWC,EAAYlkG,EAAGC,EAAG1B,EAAOC,GAE7DN,KAAK2rB,OAASo6E,EAAYC,EAE1BhmG,KAAK8rB,MACJi6E,UAAWA,EACXC,WAAYA,EACZC,QAASnkG,EACTokG,QAASnkG,EACT1B,MAAOA,EACPC,OAAQA,GAGTN,KAAKqgB,0BAIN8lF,gBAAiB,WAEhBnmG,KAAK8rB,KAAO,KACZ9rB,KAAKqgB,0BAINA,uBAAwB,WAEvB,GAAI7K,GAAOxV,KAAKwV,KACf4W,EAAM5W,EAAOxS,KAAKq6E,IACO,GAAvB77E,EAAQwB,KAAKstD,QAAgBtwD,KAAK0rB,KAAQ1rB,KAAK4rB,KACjDtrB,EAAS,EAAI8rB,EACb/rB,EAAQL,KAAK2rB,OAASrrB,EACtB4rB,GAAS,GAAM7rB,EACfyrB,EAAO9rB,KAAK8rB,IAEb,IAAc,OAATA,EAAgB,CAEpB,GAAIi6E,GAAYj6E,EAAKi6E,UACpBC,EAAal6E,EAAKk6E,UAEnB95E,IAAQJ,EAAKm6E,QAAU5lG,EAAQ0lG,EAC/B35E,GAAON,EAAKo6E,QAAU5lG,EAAS0lG,EAC/B3lG,GAASyrB,EAAKzrB,MAAQ0lG,EACtBzlG,GAAUwrB,EAAKxrB,OAAS0lG,EAIzB,GAAII,GAAOpmG,KAAKgsB,UACF,KAATo6E,IAAal6E,GAAQ1W,EAAO4wF,EAAOpmG,KAAK6lG,gBAE7C7lG,KAAKiS,iBAAiBirE,YACpBhxD,EAAMA,EAAO7rB,EAAO+rB,EAAM9rB,EAAQ8rB,EAAK5W,EAAMxV,KAAKyV,MAIrDi5D,OAAQ,SAAWC,GAElB,GAAIvhD,GAAOtK,GAASi7C,UAAU2Q,OAAOvpE,KAAMnF,KAAM2uE,EAgBjD,OAdAvhD,GAAKlS,OAAOwQ,IAAM1rB,KAAK0rB,IACvB0B,EAAKlS,OAAO0Q,KAAO5rB,KAAK4rB,KAExBwB,EAAKlS,OAAO1F,KAAOxV,KAAKwV,KACxB4X,EAAKlS,OAAOzF,IAAMzV,KAAKyV,IACvB2X,EAAKlS,OAAO2Q,MAAQ7rB,KAAK6rB,MAEzBuB,EAAKlS,OAAOyQ,OAAS3rB,KAAK2rB,OAEP,OAAd3rB,KAAK8rB,OAAgBsB,EAAKlS,OAAO4Q,KAAOnpB,OAAO+mE,UAAY1pE,KAAK8rB,OAErEsB,EAAKlS,OAAO6Q,UAAY/rB,KAAK+rB,UAC7BqB,EAAKlS,OAAO8Q,WAAahsB,KAAKgsB,WAEvBoB,KAgCTnB,GAAmB8xC,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQnlD,GAAOuyC,YAEnE1I,YAAappC,GAEbo6E,sBAAsB,EAEtBn0F,KAAM,SAAWmpD,GAchB,MAZA7vC,IAAOuyC,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAElCr7D,KAAKksB,KAAOmvC,EAAOnvC,KACnBlsB,KAAKmsB,MAAQkvC,EAAOlvC,MACpBnsB,KAAKosB,IAAMivC,EAAOjvC,IAClBpsB,KAAKqsB,OAASgvC,EAAOhvC,OACrBrsB,KAAKwV,KAAO6lD,EAAO7lD,KACnBxV,KAAKyV,IAAM4lD,EAAO5lD,IAElBzV,KAAK4rB,KAAOyvC,EAAOzvC,KACnB5rB,KAAK8rB,KAAuB,OAAhBuvC,EAAOvvC,KAAgB,KAAOnpB,OAAO+mE,UAAYrO,EAAOvvC,MAE7D9rB,MAIR8lG,cAAe,SAAUC,EAAWC,EAAYlkG,EAAGC,EAAG1B,EAAOC,GAE5DN,KAAK8rB,MACJi6E,UAAWA,EACXC,WAAYA,EACZC,QAASnkG,EACTokG,QAASnkG,EACT1B,MAAOA,EACPC,OAAQA,GAGTN,KAAKqgB,0BAIN8lF,gBAAiB,WAEhBnmG,KAAK8rB,KAAO,KACZ9rB,KAAKqgB,0BAINA,uBAAwB,WAEvB,GAAI+tD,IAAOpuE,KAAKmsB,MAAQnsB,KAAKksB,OAAW,EAAIlsB,KAAK4rB,MAC7CyiD,GAAOruE,KAAKosB,IAAMpsB,KAAKqsB,SAAa,EAAIrsB,KAAK4rB,MAC7Ci/B,GAAO7qD,KAAKmsB,MAAQnsB,KAAKksB,MAAS,EAClC4+B,GAAO9qD,KAAKosB,IAAMpsB,KAAKqsB,QAAW,EAElCH,EAAO2+B,EAAKujB,EACZjiD,EAAQ0+B,EAAKujB,EACbhiD,EAAM0+B,EAAKujB,EACXhiD,EAASy+B,EAAKujB,CAElB,IAAmB,OAAdruE,KAAK8rB,KAAgB,CAEzB,GAAIw6E,GAAQtmG,KAAK4rB,MAAS5rB,KAAK8rB,KAAKzrB,MAAQL,KAAK8rB,KAAKi6E,WAClDQ,EAAQvmG,KAAK4rB,MAAS5rB,KAAK8rB,KAAKxrB,OAASN,KAAK8rB,KAAKk6E,YACnDQ,GAAWxmG,KAAKmsB,MAAQnsB,KAAKksB,MAASlsB,KAAK8rB,KAAKzrB,MAChDomG,GAAWzmG,KAAKosB,IAAMpsB,KAAKqsB,QAAWrsB,KAAK8rB,KAAKxrB,MAEpD4rB,IAAQs6E,GAAWxmG,KAAK8rB,KAAKm6E,QAAUK,GACvCn6E,EAAQD,EAAOs6E,GAAWxmG,KAAK8rB,KAAKzrB,MAAQimG,GAC5Cl6E,GAAOq6E,GAAWzmG,KAAK8rB,KAAKo6E,QAAUK,GACtCl6E,EAASD,EAAMq6E,GAAWzmG,KAAK8rB,KAAKxrB,OAASimG,GAI9CvmG,KAAKiS,iBAAiBwrE,iBAAkBvxD,EAAMC,EAAOC,EAAKC,EAAQrsB,KAAKwV,KAAMxV,KAAKyV,MAInFi5D,OAAQ,SAAWC,GAElB,GAAIvhD,GAAOtK,GAASi7C,UAAU2Q,OAAOvpE,KAAMnF,KAAM2uE,EAYjD,OAVAvhD,GAAKlS,OAAO0Q,KAAO5rB,KAAK4rB,KACxBwB,EAAKlS,OAAOgR,KAAOlsB,KAAKksB,KACxBkB,EAAKlS,OAAOiR,MAAQnsB,KAAKmsB,MACzBiB,EAAKlS,OAAOkR,IAAMpsB,KAAKosB,IACvBgB,EAAKlS,OAAOmR,OAASrsB,KAAKqsB,OAC1Be,EAAKlS,OAAO1F,KAAOxV,KAAKwV,KACxB4X,EAAKlS,OAAOzF,IAAMzV,KAAKyV,IAEJ,OAAdzV,KAAK8rB,OAAgBsB,EAAKlS,OAAO4Q,KAAOnpB,OAAO+mE,UAAY1pE,KAAK8rB,OAE9DsB,IAkRT,IAAIwI,IAAiB,CAsjMrB0tB,IAAQya,UAAUroD,WAAY,EAE9B4tC,GAAQya,UAAUnhD,MAAQ,WAEzB,MAAO,IAAI0mC,IAAStjD,KAAK4P,MAAM01E,SAAUtlF,KAAK2V,UAI/C2tC,GAAQya,UAAU2Q,OAAS,SAAWC,GAErC,OACCnsE,KAAM,UACNoN,MAAO5P,KAAK4P,MAAM01E,SAClB3vE,QAAS3V,KAAK2V,UAqBhB4tC,GAAIwa,UAAUxoD,OAAQ,EAEtBguC,GAAIwa,UAAUnhD,MAAQ,WAErB,MAAO,IAAI2mC,IAAKvjD,KAAK4P,MAAM01E,SAAUtlF,KAAKwV,KAAMxV,KAAKyV,MAItD8tC,GAAIwa,UAAU2Q,OAAS,SAAWC,GAEjC,OACCnsE,KAAM,MACNoN,MAAO5P,KAAK4P,MAAM01E,SAClB9vE,KAAMxV,KAAKwV,KACXC,IAAKzV,KAAKyV,MAuBZ+tC,GAAMua,UAAYp7D,OAAOguE,OAAQ7tD,GAASi7C,WAE1Cva,GAAMua,UAAU1I,YAAc7R,GAE9BA,GAAMua,UAAU7rD,KAAO,SAAWmpD,EAAQgH,GAWzC,MATAv/C,IAASi7C,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,EAAQgH,GAEjB,OAAtBhH,EAAO9Y,aAAsBviD,KAAKuiD,WAAa8Y,EAAO9Y,WAAW3lC,SAClD,OAAfy+C,EAAO/lD,MAAetV,KAAKsV,IAAM+lD,EAAO/lD,IAAIsH,SAChB,OAA5By+C,EAAO3pB,mBAA4B1xC,KAAK0xC,iBAAmB2pB,EAAO3pB,iBAAiB90B,SAExF5c,KAAKwf,WAAa67C,EAAO77C,WACzBxf,KAAK2jB,iBAAmB03C,EAAO13C,iBAExB3jB,MAIRwjD,GAAMua,UAAU2Q,OAAS,SAAWC,GAEnC,GAAIvhD,GAAOtK,GAASi7C,UAAU2Q,OAAOvpE,KAAMnF,KAAM2uE,EAKjD,OAHyB,QAApB3uE,KAAKuiD,aAAsBn1B,EAAKlS,OAAOqnC,WAAaviD,KAAKuiD,WAAWmsB,OAAQC,IAC/D,OAAb3uE,KAAKsV,MAAe8X,EAAKlS,OAAO5F,IAAMtV,KAAKsV,IAAIo5D,UAE7CthD,GA0BRq2B,GAAUsa,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAE5D1I,YAAa5R,GAEbpS,aAAa,EAEbn/B,KAAM,SAAWmpD,GAEhBv4C,GAASi7C,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK8S,eAAeZ,KAAMmpD,EAAOvoD,gBACjC9S,KAAK+S,qBAAuBsoD,EAAOtoD,oBAEnC,KAAM,GAAI7L,GAAI,EAAGyK,EAAI0pD,EAAOloD,WAAWnN,OAAY2L,EAAJzK,EAAOA,IAErDlH,KAAKmT,WAAW7H,KAAM+vD,EAAOloD,WAAYjM,GAI1C,OAAOlH,OAIR+gB,IAAK,SAAWjc,EAASqF,EAAMujB,EAAUpa,EAAU1D,EAAOD,GAE3CvM,SAAT+G,IAAqBA,EAAO,IACf/G,SAAbsqB,IAAyBA,EAAW,GACxBtqB,SAAZuM,IAAwBA,EAAU,GACxBvM,SAAVwM,IAAsBA,EAAQ,GAAInD,GAAO,WAC5BrJ,SAAbkQ,IAAyBA,EAAWiD,IAEzCmX,EAAW1qB,KAAK6J,IAAK6gB,EAAU1qB,KAAK8J,IAAK,EAAG4gB,IAE5C1tB,KAAKmT,WAAW7H,MACfxG,QAASA,EACTqF,KAAMA,EACNujB,SAAUA,EACV5rB,EAAG,EAAGC,EAAG,EAAGyC,EAAG,EACfqL,MAAO,EACPC,SAAU,EACVH,QAASA,EACTC,MAAOA,EACP0D,SAAUA,KAUZN,iBAAkB,WAEjB,GAAI4oB,GACAhqB,EADGisF,EAAK79F,KAAKmT,WAAWnN,OAExB0gG,EAAiC,GAAxB1mG,KAAK8S,eAAehR,EAC7B6kG,EAAiC,GAAxB3mG,KAAK8S,eAAe/Q,CAEjC,KAAM65B,EAAI,EAAOiiE,EAAJjiE,EAAQA,IAEpBhqB,EAAQ5R,KAAKmT,WAAYyoB,GAEzBhqB,EAAM9P,EAAI9B,KAAK8S,eAAehR,EAAI4kG,EAAO90F,EAAM8b,SAC/C9b,EAAM7P,EAAI/B,KAAK8S,eAAe/Q,EAAI4kG,EAAO/0F,EAAM8b,SAE/C9b,EAAMg1F,eAAiBh1F,EAAM9P,EAAIkB,KAAKylD,GAAK,IAC3C72C,EAAM9B,UAAwD,KAA1C8B,EAAMg1F,eAAiBh1F,EAAM9B,aAuCpD4zC,GAAeqa,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACnDra,GAAeqa,UAAU1I,YAAc3R,GAEvCA,GAAeqa,UAAU7rD,KAAO,SAAWmpD,GAS1C,MAPAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OACxB5P,KAAKwG,IAAM60D,EAAO70D,IAElBxG,KAAK8P,SAAWurD,EAAOvrD,SAEhB9P,MAmBR2jD,GAAOoa,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAEzD1I,YAAa1R,GAEbvS,UAAU,EAEVkxB,QAAW,WAEV,GAAIukC,GAAiB,GAAIlhG,EAEzB,OAAO,UAAkBw8D,EAAWC,GAEnCykC,EAAelmF,sBAAuB3gB,KAAK6R,YAE3C,IAAIqpF,GAAa/4B,EAAUN,IAAIi0B,kBAAmB+Q,GAC9CC,EAAc9mG,KAAK6P,MAAM/N,EAAI9B,KAAK6P,MAAM9N,EAAI,CAE3Cm5F,GAAa4L,GAMlB1kC,EAAW92D,MAEVoiB,SAAU1qB,KAAKmhD,KAAM+2C,GACrB/iE,MAAOn4B,KAAK6T,SACZiN,KAAM,KACN5F,OAAQlb,WAQX4c,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAK8V,UAAW5D,KAAMlS,SA4BrD4jD,GAAIma,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAEtD1I,YAAazR,GAEb1xC,KAAM,SAAWmpD,GAEhBv4C,GAASi7C,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAAQ,EAI5C,KAAM,GAFFxX,GAASwX,EAAOxX,OAEV38C,EAAI,EAAGyK,EAAIkyC,EAAO79C,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjD,GAAI6/F,GAAQljD,EAAQ38C,EAEpBlH,MAAKgnG,SAAUD,EAAM7rF,OAAO0B,QAASmqF,EAAMr5E,UAI5C,MAAO1tB,OAIRgnG,SAAU,SAAW9rF,EAAQwS,GAEVtqB,SAAbsqB,IAAyBA,EAAW,GAEzCA,EAAW1qB,KAAK+sC,IAAKriB,EAIrB,KAAM,GAFFm2B,GAAS7jD,KAAK6jD,OAERlyC,EAAI,EAAGA,EAAIkyC,EAAO79C,UAEtB0nB,EAAWm2B,EAAQlyC,GAAI+b,UAFO/b,KAUpCkyC,EAAOqmB,OAAQv4D,EAAG,GAAK+b,SAAUA,EAAUxS,OAAQA,IAEnDlb,KAAK+gB,IAAK7F,IAIX+rF,qBAAsB,SAAWv5E,GAIhC,IAAM,GAFFm2B,GAAS7jD,KAAK6jD,OAER38C,EAAI,EAAGyK,EAAIkyC,EAAO79C,OAAY2L,EAAJzK,KAE9BwmB,EAAWm2B,EAAQ38C,GAAIwmB,UAFcxmB,KAU3C,MAAO28C,GAAQ38C,EAAI,GAAIgU,QAIxBonD,QAAW,WAEV,GAAIukC,GAAiB,GAAIlhG,EAEzB,OAAO,UAAkBw8D,EAAWC,GAEnCykC,EAAelmF,sBAAuB3gB,KAAK6R,YAE3C,IAAI6b,GAAWy0C,EAAUN,IAAIt/C,OAAO2hD,WAAY2iC,EAEhD7mG,MAAKinG,qBAAsBv5E,GAAW40C,QAASH,EAAWC,OAM5D7hD,OAAQ,WAEP,GAAIqoC,GAAK,GAAIjjD,GACTkjD,EAAK,GAAIljD,EAEb,OAAO,UAAiBgL,GAEvB,GAAIkzC,GAAS7jD,KAAK6jD,MAElB,IAAKA,EAAO79C,OAAS,EAAI,CAExB4iD,EAAGjoC,sBAAuBhQ,EAAOkB,aACjCg3C,EAAGloC,sBAAuB3gB,KAAK6R,YAE/B,IAAI6b,GAAWk7B,EAAGsb,WAAYrb,EAE9BhF,GAAQ,GAAI3oC,OAAOnF,SAAU,CAE7B,KAAM,GAAI7O,GAAI,EAAGyK,EAAIkyC,EAAO79C,OAAY2L,EAAJzK,GAE9BwmB,GAAYm2B,EAAQ38C,GAAIwmB,SAFaxmB,IAIzC28C,EAAQ38C,EAAI,GAAIgU,OAAOnF,SAAU,EACjC8tC,EAAQ38C,GAAIgU,OAAOnF,SAAU,CAU/B,MAAYpE,EAAJzK,EAAOA,IAEd28C,EAAQ38C,GAAIgU,OAAOnF,SAAU,OAUjC24D,OAAQ,SAAWC,GAElB,GAAIvhD,GAAOtK,GAASi7C,UAAU2Q,OAAOvpE,KAAMnF,KAAM2uE,EAEjDvhD,GAAKlS,OAAO2oC,SAIZ,KAAM,GAFFA,GAAS7jD,KAAK6jD,OAER38C,EAAI,EAAGyK,EAAIkyC,EAAO79C,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjD,GAAI6/F,GAAQljD,EAAQ38C,EAEpBkmB,GAAKlS,OAAO2oC,OAAOv4C,MAClB4P,OAAQ6rF,EAAM7rF,OAAOnY,KACrB2qB,SAAUq5E,EAAMr5E,WAKlB,MAAON,MAwBT02B,GAAYia,UAAYp7D,OAAOguE,OAAQ3uE,EAAQ+7D,WAC/Cja,GAAYia,UAAU1I,YAAcvR,GAEpCA,GAAYia,UAAUngC,eAAgB,EA+EtCj7B,OAAO+mE,OAAQ3lB,GAASga,WAEvBrZ,kBAAmB,WAElB1kD,KAAKgkD,eAEL,KAAM,GAAI37C,GAAI,EAAGs8C,EAAK3kD,KAAKq2B,MAAMrwB,OAAY2+C,EAAJt8C,EAAQA,IAAO,CAEvD,GAAIypE,GAAU,GAAIlsE,EAEb5F,MAAKq2B,MAAOhuB,IAEhBypE,EAAQzwD,WAAYrhB,KAAKq2B,MAAOhuB,GAAIwJ,aAIrC7R,KAAKgkD,aAAa14C,KAAMwmE,KAM1Bo1B,KAAM,WAML,IAAM,GAJFhiD,GAIM78C,EAAI,EAAGs8C,EAAK3kD,KAAKq2B,MAAMrwB,OAAY2+C,EAAJt8C,EAAQA,IAEhD68C,EAAOllD,KAAKq2B,MAAOhuB,GAEd68C,GAEJA,EAAKrzC,YAAYwP,WAAYrhB,KAAKgkD,aAAc37C,GAQlD,KAAM,GAAIA,GAAI,EAAGs8C,EAAK3kD,KAAKq2B,MAAMrwB,OAAY2+C,EAAJt8C,EAAQA,IAEhD68C,EAAOllD,KAAKq2B,MAAOhuB,GAEd68C,IAEEA,EAAK7hC,QAAU6hC,EAAK7hC,OAAO0iD,QAEhC7gB,EAAKxkC,OAAOW,WAAY6jC,EAAK7hC,OAAOxR,aACpCqzC,EAAKxkC,OAAOY,SAAU4jC,EAAKrzC,cAI3BqzC,EAAKxkC,OAAOxO,KAAMgzC,EAAKrzC,aAIxBqzC,EAAKxkC,OAAO1K,UAAWkvC,EAAKrxC,SAAUqxC,EAAKliC,WAAYkiC,EAAKr1C,SAQ/D0Q,OAAQ,WAEP,GAAI4mF,GAAe,GAAIvhG,EAEvB,OAAO,YAIN,IAAM,GAAIyC,GAAI,EAAGs8C,EAAK3kD,KAAKq2B,MAAMrwB,OAAY2+C,EAAJt8C,EAAQA,IAAO,CAIvD,GAAIqY,GAAS1gB,KAAKq2B,MAAOhuB,GAAMrI,KAAKq2B,MAAOhuB,GAAIwJ,YAAc7R,KAAKikD,cAElEkjD,GAAavxF,iBAAkB8K,EAAQ1gB,KAAKgkD,aAAc37C,IAC1D8+F,EAAalgG,QAASjH,KAAKwkD,aAAkB,GAAJn8C,GAIrCrI,KAAKszB,mBAETtzB,KAAKykD,YAAY5vC,aAAc,OAQlC+H,MAAO,WAEN,MAAO,IAAImnC,IAAU/jD,KAAKq2B,MAAOr2B,KAAKgkD,aAAchkD,KAAKszB,qBAsB3DsxB,GAAKmZ,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAEvD1I,YAAazQ,GAEbmhB,QAAQ,EAER7zD,KAAM,SAAWmpD,GAMhB,MAJAv4C,IAASi7C,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK6kD,KAAOwW,EAAOxW,KAEZ7kD,QA0ET8kD,GAAYiZ,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQpoD,GAAKw1C,YAE1D1I,YAAavQ,GAEb5oC,eAAe,EAEfxb,KAAM,SAAUu1B,EAAU+uB,GAEzBhlD,KAAKi2B,SAAWA,EAEI7yB,SAAf4hD,IAEJhlD,KAAKohB,mBAAmB,GAExBphB,KAAKi2B,SAASyuB,oBAEdM,EAAahlD,KAAK6R,aAInB7R,KAAKglD,WAAW9yC,KAAM8yC,GACtBhlD,KAAKilD,kBAAkB5jC,WAAY2jC,IAIpCkiD,KAAM,WAELlnG,KAAKi2B,SAASixE,QAIf1hD,qBAAsB,WAErB,GAAMxlD,KAAKqb,UAAYrb,KAAKqb,SAASW,WAEpC,IAAM,GAAI9U,GAAI,EAAGA,EAAIlH,KAAKqb,SAAS6L,YAAYlhB,OAAQkB,IAAO,CAE7D,GAAIkgG,GAAKpnG,KAAKqb,SAAS6L,YAAahgB,GAEhC2I,EAAQ,EAAMu3F,EAAGl5B,iBAEhBr+D,KAAU9C,EAAAA,EAEdq6F,EAAGx5D,eAAgB/9B,GAInBu3F,EAAG16F,IAAK,EAAG,EAAG,EAAG,OAMb,IAAM1M,KAAKqb,UAAYrb,KAAKqb,SAASS,iBAM3C,IAAM,GAJFurF,GAAM,GAAI9iG,GAEV+iG,EAAatnG,KAAKqb,SAASjM,WAAWk4F,WAEhCpgG,EAAI,EAAGA,EAAIogG,EAAWhjG,MAAO4C,IAAO,CAE7CmgG,EAAIvlG,EAAIwlG,EAAWngD,KAAMjgD,GACzBmgG,EAAItlG,EAAIulG,EAAWlgD,KAAMlgD,GACzBmgG,EAAI7iG,EAAI8iG,EAAWjgD,KAAMngD,GACzBmgG,EAAI7mG,EAAI8mG,EAAWnK,KAAMj2F,EAEzB,IAAI2I,GAAQ,EAAMw3F,EAAIn5B,iBAEjBr+D,KAAU9C,EAAAA,EAEds6F,EAAIz5D,eAAgB/9B,GAIpBw3F,EAAI36F,IAAK,EAAG,EAAG,EAAG,GAInB46F,EAAWlK,QAASl2F,EAAGmgG,EAAIvlG,EAAGulG,EAAItlG,EAAGslG,EAAI7iG,EAAG6iG,EAAI7mG,KAQnD4gB,kBAAmB,SAAUy5E,GAE5BtyE,GAAKw1C,UAAU38C,kBAAkBjc,KAAMnF,MAAM,GAEtB,aAAlBA,KAAK+kD,SAET/kD,KAAKilD,kBAAkB5jC,WAAYrhB,KAAK6R,aAEX,aAAlB7R,KAAK+kD,SAEhB/kD,KAAKilD,kBAAkB5jC,WAAYrhB,KAAKglD,YAIxC/+C,QAAQgc,KAAM,4CAA8CjiB,KAAK+kD,WAMnEnoC,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAKqb,SAAUrb,KAAK8V,SAAU9V,KAAKi2B,SAAS3C,kBAAmBphB,KAAMlS,SAsCpGi3B,GAAkB8mC,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACtD9mC,GAAkB8mC,UAAU1I,YAAcp+B,GAE1CA,GAAkB8mC,UAAUppB,qBAAsB,EAElD1d,GAAkB8mC,UAAU7rD,KAAO,SAAWmpD,GAU7C,MARAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OAExB5P,KAAKqY,UAAYgjD,EAAOhjD,UACxBrY,KAAKylD,QAAU4V,EAAO5V,QACtBzlD,KAAK0lD,SAAW2V,EAAO3V,SAEhB1lD,MA0BR2lD,GAAKoY,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAEvD1I,YAAa1P,GAEbnoC,QAAQ,EAER8kD,QAAW,WAEV,GAAImiC,GAAgB,GAAI7+F,GACpBi8D,EAAM,GAAIv/C,IACVuuB,EAAS,GAAIh3B,GAEjB,OAAO,UAAkBsoD,EAAWC,GAEnC,GAAI1qD,GAAYyqD,EAAUolC,cACtBC,EAAc9vF,EAAYA,EAE1B2D,EAAWrb,KAAKqb,SAChBxJ,EAAc7R,KAAK6R,WASvB,IALiC,OAA5BwJ,EAASiM,gBAA0BjM,EAASo1B,wBAEjDI,EAAO3+B,KAAMmJ,EAASiM,gBACtBupB,EAAO/+B,aAAcD,GAEhBswD,EAAUN,IAAI/wB,iBAAkBD,MAAa,EAAlD,CAIA4zD,EAAcpjF,WAAYxP,GAC1BgwD,EAAI3vD,KAAMiwD,EAAUN,KAAM/vD,aAAc2yF,EAExC,IAAIgD,GAAS,GAAI9hG,GACb+hG,EAAO,GAAI/hG,GACXgiG,EAAe,GAAIhiG,GACnBiiG,EAAW,GAAIjiG,GACfghE,EAAQ3mE,MAAQA,KAAKkiD,eAAkB,EAAI,CAE/C,IAAM7mC,GAAYA,EAASS,iBAAoB,CAE9C,GAAIuM,GAAQhN,EAASgN,MACjBjZ,EAAaiM,EAASjM,WACtBo/C,EAAYp/C,EAAWyE,SAASnN,KAEpC,IAAe,OAAV2hB,EAIJ,IAAM,GAFFL,GAAUK,EAAM3hB,MAEVQ,EAAI,EAAGyK,EAAIqW,EAAQhiB,OAAS,EAAO2L,EAAJzK,EAAOA,GAAKy/D,EAAO,CAE3D,GAAI5xD,GAAIiT,EAAS9gB,GACbmB,EAAI2f,EAAS9gB,EAAI,EAErBugG,GAAOriD,UAAWoJ,EAAe,EAAJz5C,GAC7B2yF,EAAKtiD,UAAWoJ,EAAe,EAAJnmD,EAE3B,IAAIw/F,GAAShmC,EAAIk0B,oBAAqB0R,EAAQC,EAAME,EAAUD,EAE9D,MAAKE,EAASL,GAAd,CAEAI,EAAS91F,aAAc9R,KAAK6R,YAE5B,IAAI6b,GAAWy0C,EAAUN,IAAIt/C,OAAO2hD,WAAY0jC,EAE3Cl6E,GAAWy0C,EAAU3sD,MAAQkY,EAAWy0C,EAAU1sD,KAEvD2sD,EAAW92D,MAEVoiB,SAAUA,EAGVyK,MAAOwvE,EAAa/qF,QAAQ9K,aAAc9R,KAAK6R,aAC/CwW,MAAOnhB,EACP4Z,KAAM,KACN0jF,UAAW,KACXtpF,OAAQlb,YAQV,KAAM,GAAIkH,GAAI,EAAGyK,EAAI68C,EAAUxoD,OAAS,EAAI,EAAO2L,EAAJzK,EAAOA,GAAKy/D,EAAO,CAEjE8gC,EAAOriD,UAAWoJ,EAAW,EAAItnD,GACjCwgG,EAAKtiD,UAAWoJ,EAAW,EAAItnD,EAAI,EAEnC,IAAI2gG,GAAShmC,EAAIk0B,oBAAqB0R,EAAQC,EAAME,EAAUD,EAE9D,MAAKE,EAASL,GAAd,CAEAI,EAAS91F,aAAc9R,KAAK6R,YAE5B,IAAI6b,GAAWy0C,EAAUN,IAAIt/C,OAAO2hD,WAAY0jC,EAE3Cl6E,GAAWy0C,EAAU3sD,MAAQkY,EAAWy0C,EAAU1sD,KAEvD2sD,EAAW92D,MAEVoiB,SAAUA,EAGVyK,MAAOwvE,EAAa/qF,QAAQ9K,aAAc9R,KAAK6R,aAC/CwW,MAAOnhB,EACP4Z,KAAM,KACN0jF,UAAW,KACXtpF,OAAQlb,aAQL,IAAMqb,GAAYA,EAASW,WAKjC,IAAM,GAHF7O,GAAWkO,EAASlO,SACpB26F,EAAa36F,EAASnH,OAEhBkB,EAAI,EAAO4gG,EAAa,EAAjB5gG,EAAoBA,GAAKy/D,EAAO,CAEhD,GAAIkhC,GAAShmC,EAAIk0B,oBAAqB5oF,EAAUjG,GAAKiG,EAAUjG,EAAI,GAAK0gG,EAAUD,EAElF,MAAKE,EAASL,GAAd,CAEAI,EAAS91F,aAAc9R,KAAK6R,YAE5B,IAAI6b,GAAWy0C,EAAUN,IAAIt/C,OAAO2hD,WAAY0jC,EAE3Cl6E,GAAWy0C,EAAU3sD,MAAQkY,EAAWy0C,EAAU1sD,KAEvD2sD,EAAW92D,MAEVoiB,SAAUA,EAGVyK,MAAOwvE,EAAa/qF,QAAQ9K,aAAc9R,KAAK6R,aAC/CwW,MAAOnhB,EACP4Z,KAAM,KACN0jF,UAAW,KACXtpF,OAAQlb,cAYb4c,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAKqb,SAAUrb,KAAK8V,UAAW5D,KAAMlS,SAkBpE4lD,GAAamY,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQhrB,GAAKoY,YAE3D1I,YAAazP,GAEb1D,gBAAgB,IAqCjB/qB,GAAe4mC,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACnD5mC,GAAe4mC,UAAU1I,YAAcl+B,GAEvCA,GAAe4mC,UAAUhpB,kBAAmB,EAE5C5d,GAAe4mC,UAAU7rD,KAAO,SAAWmpD,GAW1C,MATAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OAExB5P,KAAKwG,IAAM60D,EAAO70D,IAElBxG,KAAKmK,KAAOkxD,EAAOlxD,KACnBnK,KAAK2zB,gBAAkB0nC,EAAO1nC,gBAEvB3zB,MAmBR6lD,GAAOkY,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAEzD1I,YAAaxP,GAEbpoC,UAAU,EAEV6kD,QAAW,WAEV,GAAImiC,GAAgB,GAAI7+F,GACpBi8D,EAAM,GAAIv/C,IACVuuB,EAAS,GAAIh3B,GAEjB,OAAO,UAAkBsoD,EAAWC,GAyBnC,QAAS2lC,GAAW5vE,EAAO9P,GAE1B,GAAI2/E,GAAqBnmC,EAAIi0B,kBAAmB39D,EAEhD,IAA0B8vE,EAArBD,EAAwC,CAE5C,GAAIE,GAAiBrmC,EAAI+zB,oBAAqBz9D,EAC9C+vE,GAAep2F,aAAcD,EAE7B,IAAI6b,GAAWy0C,EAAUN,IAAIt/C,OAAO2hD,WAAYgkC,EAEhD,IAAKx6E,EAAWy0C,EAAU3sD,MAAQkY,EAAWy0C,EAAU1sD,IAAM,MAE7D2sD,GAAW92D,MAEVoiB,SAAUA,EACVy6E,cAAenlG,KAAKmhD,KAAM6jD,GAC1B7vE,MAAO+vE,EAAetrF,QACtByL,MAAOA,EACPvH,KAAM,KACN5F,OAAQA,KA3CX,GAAIA,GAASlb,KACTqb,EAAWrb,KAAKqb,SAChBxJ,EAAc7R,KAAK6R,YACnBkwD,EAAYI,EAAUL,OAAOjc,OAAOkc,SASxC,IALiC,OAA5B1mD,EAASiM,gBAA0BjM,EAASo1B,wBAEjDI,EAAO3+B,KAAMmJ,EAASiM,gBACtBupB,EAAO/+B,aAAcD,GAEhBswD,EAAUN,IAAI/wB,iBAAkBD,MAAa,EAAlD,CAIA4zD,EAAcpjF,WAAYxP,GAC1BgwD,EAAI3vD,KAAMiwD,EAAUN,KAAM/vD,aAAc2yF,EAExC,IAAI2D,GAAiBrmC,IAAgB/hE,KAAK6P,MAAM/N,EAAI9B,KAAK6P,MAAM9N,EAAI/B,KAAK6P,MAAMrL,GAAM,GAChFyjG,EAAmBG,EAAiBA,EACpCv0F,EAAW,GAAIlO,EA8BnB,IAAM0V,GAAYA,EAASS,iBAAoB,CAE9C,GAAIuM,GAAQhN,EAASgN,MACjBjZ,EAAaiM,EAASjM,WACtBo/C,EAAYp/C,EAAWyE,SAASnN,KAEpC,IAAe,OAAV2hB,EAIJ,IAAM,GAFFL,GAAUK,EAAM3hB,MAEVQ,EAAI,EAAG2Y,EAAKmI,EAAQhiB,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAEpD,GAAI6N,GAAIiT,EAAS9gB,EAEjB2M,GAASuxC,UAAWoJ,EAAe,EAAJz5C,GAE/BgzF,EAAWl0F,EAAUkB,OAMtB,KAAM,GAAI7N,GAAI,EAAGyK,EAAI68C,EAAUxoD,OAAS,EAAO2L,EAAJzK,EAAOA,IAEjD2M,EAASuxC,UAAWoJ,EAAe,EAAJtnD,GAE/B6gG,EAAWl0F,EAAU3M,OAUvB,KAAM,GAFFiG,GAAWkO,EAASlO,SAEdjG,EAAI,EAAGyK,EAAIxE,EAASnH,OAAY2L,EAAJzK,EAAOA,IAE5C6gG,EAAW56F,EAAUjG,GAAKA,QAU9B0V,MAAO,WAEN,MAAO,IAAI5c,MAAKq1D,YAAar1D,KAAKqb,SAAUrb,KAAK8V,UAAW5D,KAAMlS,SAkBpE8lD,GAAMiY,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAExD1I,YAAavP,KAgCdC,GAAagY,UAAYp7D,OAAOguE,OAAQ3uE,EAAQ+7D,WAChDhY,GAAagY,UAAU1I,YAActP,GAyBrCK,GAAkB2X,UAAYp7D,OAAOguE,OAAQ3uE,EAAQ+7D,WACrD3X,GAAkB2X,UAAU1I,YAAcjP,GAE1CA,GAAkB2X,UAAUpgC,qBAAsB,EAclD0oB,GAAc0X,UAAYp7D,OAAOguE,OAAQ3uE,EAAQ+7D,WACjD1X,GAAc0X,UAAU1I,YAAchP,GA+BtCC,GAAayX,UAAYp7D,OAAOguE,OAAQ3uE,EAAQ+7D,WAChDzX,GAAayX,UAAU1I,YAAc/O,GACrCA,GAAayX,UAAU5+B,gBAAiB,EAsLxConB,GAAkBwX,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC5DxX,GAAkBwX,UAAU1I,YAAc9O,GAqF1CiB,GAAmBuW,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACvDvW,GAAmBuW,UAAU1I,YAAc7N,GA4O3CY,GAAmB2V,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACvD3V,GAAmB2V,UAAU1I,YAAcjN,GA2B3C2B,GAAoBgU,UAAYp7D,OAAOguE,OAAQvoB,GAAmB2V,WAClEhU,GAAoBgU,UAAU1I,YAActL,GA2B5CC,GAAmB+T,UAAYp7D,OAAOguE,OAAQvoB,GAAmB2V,WACjE/T,GAAmB+T,UAAU1I,YAAcrL,GAkC3CC,GAAoB8T,UAAYp7D,OAAOguE,OAAQvoB,GAAmB2V,WAClE9T,GAAoB8T,UAAU1I,YAAcpL,GA0D5CE,GAAqB4T,UAAYp7D,OAAOguE,OAAQvoB,GAAmB2V,WACnE5T,GAAqB4T,UAAU1I,YAAclL,GA6I7CC,GAAa2T,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACjD3T,GAAa2T,UAAU1I,YAAcjL,GAErCA,GAAaM,QAAU,SAAWphC,GAEjC,MAAO,IAIR8gC,GAAai+C,gBAAkB,SAAW/+E,GAEzC,MAAOtmB,MAAKyoD,IAAKzoD,KAAKylD,GAAKn/B,IAK5B8gC,GAAaiB,aAAe,SAAW7/C,EAAM6+C,EAAUE,GA6DtD,QAAS+9C,KAKRrgF,EAAS,GAAM,GAAItiB,GACnB4lD,EAAW,GAAM,GAAI5lD,GACrB4iG,EAAWh/B,OAAOi/B,UAClB7rB,EAAK35E,KAAK+sC,IAAKub,EAAU,GAAIxpD,GAC7B86E,EAAK55E,KAAK+sC,IAAKub,EAAU,GAAIvpD,GAC7B0mG,EAAKzlG,KAAK+sC,IAAKub,EAAU,GAAI9mD,GAElB+jG,GAAN5rB,IAEJ4rB,EAAW5rB,EACXziE,EAAOxN,IAAK,EAAG,EAAG,IAIR67F,GAAN3rB,IAEJ2rB,EAAW3rB,EACX1iE,EAAOxN,IAAK,EAAG,EAAG,IAIR67F,GAANE,GAEJvuF,EAAOxN,IAAK,EAAG,EAAG,GAInB26F,EAAI16C,aAAcrB,EAAU,GAAKpxC,GAASq+B,YAE1CtwB,EAAS,GAAI0kC,aAAcrB,EAAU,GAAK+7C,GAC1C97C,EAAW,GAAIoB,aAAcrB,EAAU,GAAKrjC,EAAS,IA9FtD,GAUCmpC,GACAm3C,EAEA5rB,EAAIC,EAAI6rB,EACRvhG,EAAGoiB,EAdApP,EAAS,GAAIvU,GAEhB2lD,KACArjC,KACAsjC,KAEA87C,EAAM,GAAI1hG,GACV+iG,EAAM,GAAI9iG,GAEVslD,EAAYb,EAAW,CAexB,KANArqD,KAAKsrD,SAAWA,EAChBtrD,KAAKioB,QAAUA,EACfjoB,KAAKurD,UAAYA,EAIXrkD,EAAI,EAAOgkD,EAAJhkD,EAAeA,IAE3BoiB,EAAIpiB,GAAMgkD,EAAY,GAEtBI,EAAUpkD,GAAMsE,EAAKm9F,aAAcr/E,GACnCgiC,EAAUpkD,GAAIqxC,WAwEf,KApEA+vD,IAoEMphG,EAAI,EAAOgkD,EAAJhkD,EAAeA,IAE3B+gB,EAAS/gB,GAAM+gB,EAAS/gB,EAAI,GAAI0V,QAEhC2uC,EAAWrkD,GAAMqkD,EAAWrkD,EAAI,GAAI0V,QAEpCyqF,EAAI16C,aAAcrB,EAAUpkD,EAAI,GAAKokD,EAAUpkD,IAE1CmgG,EAAIrhG,SAAWujE,OAAOC,UAE1B69B,EAAI9uD,YAEJ6Y,EAAQpuD,KAAKusE,KAAM/tE,EAAQwB,KAAK0sD,MAAOpE,EAAUpkD,EAAI,GAAIypD,IAAKrF,EAAUpkD,IAAO,GAAK,IAEpF+gB,EAAS/gB,GAAI4K,aAAc42F,EAAIhsB,iBAAkB2qB,EAAKj2C,KAIvD7F,EAAWrkD,GAAIylD,aAAcrB,EAAUpkD,GAAK+gB,EAAS/gB,GAOtD,IAAKqjD,EAWJ,IATA6G,EAAQpuD,KAAKusE,KAAM/tE,EAAQwB,KAAK0sD,MAAOznC,EAAS,GAAI0oC,IAAK1oC,EAASijC,EAAY,IAAO,GAAK,IAC1FkG,GAAWlG,EAAY,EAElBI,EAAU,GAAIqF,IAAK02C,EAAI16C,aAAc1kC,EAAS,GAAKA,EAASijC,EAAY,KAAU,IAEtFkG,GAAUA,GAILlqD,EAAI,EAAOgkD,EAAJhkD,EAAeA,IAG3B+gB,EAAS/gB,GAAI4K,aAAc42F,EAAIhsB,iBAAkBpxB,EAAUpkD,GAAKkqD,EAAQlqD,IACxEqkD,EAAWrkD,GAAIylD,aAAcrB,EAAUpkD,GAAK+gB,EAAS/gB,KA0KxDwkD,GAAwBqS,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAClErS,GAAwBqS,UAAU1I,YAAc3J,GA4BhDqB,GAAkBgR,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACtDhR,GAAkBgR,UAAU1I,YAActI,GA8H1CG,GAAoB6Q,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC9D7Q,GAAoB6Q,UAAU1I,YAAcnI,GA0B5CE,GAAc2Q,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WAClD3Q,GAAc2Q,UAAU1I,YAAcjI,GAMtC5rD,EAAQonG,YAIPvM,KAAM,SAAWwM,GAKhB,IAAM,GAHF/hG,GAAI+hG,EAAQ7iG,OACZ+O,EAAI,EAEEyjB,EAAI1xB,EAAI,EAAG+kD,EAAI,EAAO/kD,EAAJ+kD,EAAOrzB,EAAIqzB,IAEtC92C,GAAK8zF,EAASrwE,GAAI12B,EAAI+mG,EAASh9C,GAAI9pD,EAAI8mG,EAASh9C,GAAI/pD,EAAI+mG,EAASrwE,GAAIz2B,CAItE,OAAW,GAAJgT,GAIR+zF,YAAa,WAgBZ,QAASC,GAAMF,EAASv/E,EAAG5hB,EAAGlH,EAAGsG,EAAG8gD,GAEnC,GAAIpvB,GACAu8C,EAAIC,EAAIE,EAAIC,EACZtqB,EAAIC,EAAI4D,EAAIC,CAWhB,IATAomB,EAAK8zB,EAASjhD,EAAOt+B,IAAMxnB,EAC3BkzE,EAAK6zB,EAASjhD,EAAOt+B,IAAMvnB,EAE3BmzE,EAAK2zB,EAASjhD,EAAOlgD,IAAM5F,EAC3BqzE,EAAK0zB,EAASjhD,EAAOlgD,IAAM3F,EAE3B8oD,EAAKg+C,EAASjhD,EAAOpnD,IAAMsB,EAC3BgpD,EAAK+9C,EAASjhD,EAAOpnD,IAAMuB,EAEtBwnE,OAAOC,SAAgB0L,EAAKH,IAASjqB,EAAKkqB,IAAaG,EAAKH,IAASnqB,EAAKkqB,GAAW,OAAO,CAEjG,IAAIzc,GAAIC,EAAIywC,EAAIC,EAAIC,EAAIC,EACpBC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EACzBC,EAAUC,EAAUC,CAMxB,KAJAtxC,EAAKzN,EAAKqqB,EAAK3c,EAAKzN,EAAKqqB,EACzB6zB,EAAKj0B,EAAKlqB,EAAKo+C,EAAKj0B,EAAKlqB,EACzBo+C,EAAKh0B,EAAKH,EAAKo0B,EAAKh0B,EAAKH,EAEnBx8C,EAAI,EAAO1xB,EAAJ0xB,EAAOA,IAKnB,GAHAk2B,EAAKm6C,EAASjhD,EAAOpvB,IAAM12B,EAC3B6sD,EAAKk6C,EAASjhD,EAAOpvB,IAAMz2B,IAElB2sD,IAAOqmB,GAAUpmB,IAAOqmB,GAC3BtmB,IAAOwmB,GAAUvmB,IAAOwmB,GACxBzmB,IAAO7D,GAAU8D,IAAO7D,KAE9Bs+C,EAAM16C,EAAKqmB,EAAKs0B,EAAM16C,EAAKqmB,EAC3Bs0B,EAAM56C,EAAKwmB,EAAKq0B,EAAM56C,EAAKwmB,EAC3Bq0B,EAAM96C,EAAK7D,EAAK4+C,EAAM96C,EAAK7D,EAI3B8+C,EAAWtxC,EAAKixC,EAAMhxC,EAAK+wC,EAC3BI,EAAWR,EAAKG,EAAMF,EAAKC,EAC3BO,EAAWX,EAAKS,EAAMR,EAAKO,EAEpBI,IAAcrgC,OAAOC,SAAemgC,IAAcpgC,OAAOC,SAAekgC,IAAcngC,OAAOC,SAAY,OAAO,CAIxH,QAAO,EAMR,MAAO,UAAsBq/B,EAAS7gF,GAErC,GAAIlhB,GAAI+hG,EAAQ7iG,MAEhB,IAAS,EAAJc,EAAQ,MAAO,KAEpB,IAMIwiB,GAAG5hB,EAAGlH,EANN8a,KACHssC,KACAiiD,IAMD,IAAKroG,EAAQonG,WAAWvM,KAAMwM,GAAY,EAEzC,IAAMnhG,EAAI,EAAOZ,EAAJY,EAAOA,IAAOkgD,EAAOlgD,GAAMA,MAIxC,KAAMA,EAAI,EAAOZ,EAAJY,EAAOA,IAAOkgD,EAAOlgD,GAAQZ,EAAI,EAAMY,CAIrD,IAAIoiG,GAAKhjG,EAILxC,EAAQ,EAAIwlG,CAEhB,KAAMpiG,EAAIoiG,EAAK,EAAGA,EAAK,GAAK,CAI3B,GAAOxlG,KAAc,EASpB,MAFA2B,SAAQgc,KAAM,qEAET+F,EAAiB6hF,EACfvuF,CAUR,IAJAgO,EAAI5hB,EAAiB4hB,GAANwgF,IAAUxgF,EAAI,GAC7B5hB,EAAI4hB,EAAI,EAAe5hB,GAANoiG,IAAUpiG,EAAI,GAC/BlH,EAAIkH,EAAI,EAAelH,GAANspG,IAAUtpG,EAAI,GAE1BuoG,EAAMF,EAASv/E,EAAG5hB,EAAGlH,EAAGspG,EAAIliD,GAAU,CAE1C,GAAI7yC,GAAG1M,EAAGic,EAAG8tC,EAAGlI,CAmBhB,KAfAn1C,EAAI6yC,EAAOt+B,GACXjhB,EAAIu/C,EAAOlgD,GACX4c,EAAIsjC,EAAOpnD,GAIX8a,EAAOhQ,MAAQu9F,EAAS9zF,GACvB8zF,EAASxgG,GACTwgG,EAASvkF,KAGVulF,EAAYv+F,MAAQs8C,EAAOt+B,GAAKs+B,EAAOlgD,GAAKkgD,EAAOpnD,KAI7C4xD,EAAI1qD,EAAGwiD,EAAIxiD,EAAI,EAAOoiG,EAAJ5/C,EAAQkI,IAAMlI,IAErCtC,EAAOwK,GAAMxK,EAAOsC,EAIrB4/C,KAIAxlG,EAAQ,EAAIwlG,GAMd,MAAK9hF,GAAiB6hF,EACfvuF,MAMTyuF,iBAAkB,SAAWlB,EAASzvC;AAErC,QAAS4wC,GAAgB1rD,GAExB,GAAI3sC,GAAI2sC,EAAOt4C,MAEV2L,GAAI,GAAK2sC,EAAQ3sC,EAAI,GAAIywB,OAAQkc,EAAQ,KAE7CA,EAAOzlB,MAST,QAASoxE,GAA2BC,EAAUC,EAAUC,GAGvD,MAAKF,GAASpoG,IAAMqoG,EAASroG,EAEvBooG,EAASpoG,EAAIqoG,EAASroG,EAEfooG,EAASpoG,GAAKsoG,EAAUtoG,GAASsoG,EAAUtoG,GAAKqoG,EAASroG,EAIzDqoG,EAASroG,GAAKsoG,EAAUtoG,GAASsoG,EAAUtoG,GAAKooG,EAASpoG,EAMhEooG,EAASnoG,EAAIooG,EAASpoG,EAEfmoG,EAASnoG,GAAKqoG,EAAUroG,GAASqoG,EAAUroG,GAAKooG,EAASpoG,EAIzDooG,EAASpoG,GAAKqoG,EAAUroG,GAASqoG,EAAUroG,GAAKmoG,EAASnoG,EAQvE,QAASsoG,GAAuBC,EAAWC,EAAWC,EAAWC,EAAWC,GAE3E,GAAIC,GAASJ,EAAUzoG,EAAIwoG,EAAUxoG,EAAK8oG,EAASL,EAAUxoG,EAAIuoG,EAAUvoG,EACvE8oG,EAASJ,EAAU3oG,EAAI0oG,EAAU1oG,EAAKgpG,EAASL,EAAU1oG,EAAIyoG,EAAUzoG,EAEvEgpG,EAAaT,EAAUxoG,EAAI0oG,EAAU1oG,EACrCkpG,EAAaV,EAAUvoG,EAAIyoG,EAAUzoG,EAErCkpG,EAASL,EAASC,EAASF,EAASG,EACpCI,EAAWN,EAASG,EAAaJ,EAASK,CAE9C,IAAKhoG,KAAK+sC,IAAKk7D,GAAU1hC,OAAOC,QAAU,CAIzC,GAAI2hC,EACJ,IAAKF,EAAQ,EAAI,CAEhB,GAAkB,EAAXC,GAAoBA,EAAWD,EAAY,QAElD,IADAE,EAAWL,EAASC,EAAaF,EAASG,EACxB,EAAXG,GAAoBA,EAAWF,EAAY,aAE5C,CAEN,GAAOC,EAAW,GAAoBD,EAAXC,EAAuB,QAElD,IADAC,EAAWL,EAASC,EAAaF,EAASG,EACnCG,EAAW,GAAoBF,EAAXE,EAAuB,SAMnD,GAAkB,IAAbA,EAEJ,OAAK,GACc,IAAbD,GAAsBA,IAAaD,GAChCX,KAGV,IAAKa,IAAaF,EAEjB,OAAK,GACc,IAAbC,GAAsBA,IAAaD,GAChCV,KAIV,IAAkB,IAAbW,EAAkB,OAASV,EAChC,IAAKU,IAAaD,EAAQ,OAASR,EAGnC,IAAIW,GAAaD,EAAWF,CAC5B,SAAWnpG,EAAGwoG,EAAUxoG,EAAIspG,EAAaT,EACtC5oG,EAAGuoG,EAAUvoG,EAAIqpG,EAAaR,IAKjC,GAAoB,IAAbM,GACHJ,EAASC,IAAeF,EAASG,EAAkB,QAGvD,IAAIK,GAAwB,IAAXV,GAA+B,IAAXC,EACjCU,EAAwB,IAAXT,GAA+B,IAAXC,CAErC,IAAKO,GAAUC,EAEd,MAAOhB,GAAUxoG,IAAM0oG,EAAU1oG,GAC7BwoG,EAAUvoG,IAAMyoG,EAAUzoG,MACrBuoG,EAIV,IAAKe,EAEJ,MAAOpB,GAA2BO,EAAWC,EAAWH,IAC/CA,KAIV,IAAKgB,EAEJ,MAAOrB,GAA2BK,EAAWC,EAAWC,IAC/CA,KAKV,IAAIe,GAASC,EAASC,EAAYC,EAC9BC,EAASC,EAASC,EAAYC,CAsDlC,OArDgB,KAAXnB,GAGCL,EAAUxoG,EAAIyoG,EAAUzoG,GAE5BypG,EAAUjB,EAAWmB,EAAanB,EAAUxoG,EAC5C0pG,EAAUjB,EAAWmB,EAAanB,EAAUzoG,IAI5CypG,EAAUhB,EAAWkB,EAAalB,EAAUzoG,EAC5C0pG,EAAUlB,EAAWoB,EAAapB,EAAUxoG,GAGxC0oG,EAAU1oG,EAAI2oG,EAAU3oG,GAE5B6pG,EAAUnB,EAAWqB,EAAarB,EAAU1oG,EAC5C8pG,EAAUnB,EAAWqB,EAAarB,EAAU3oG,IAI5C6pG,EAAUlB,EAAWoB,EAAapB,EAAU3oG,EAC5C8pG,EAAUpB,EAAWsB,EAAatB,EAAU1oG,KAOxCwoG,EAAUvoG,EAAIwoG,EAAUxoG,GAE5BwpG,EAAUjB,EAAWmB,EAAanB,EAAUvoG,EAC5CypG,EAAUjB,EAAWmB,EAAanB,EAAUxoG,IAI5CwpG,EAAUhB,EAAWkB,EAAalB,EAAUxoG,EAC5CypG,EAAUlB,EAAWoB,EAAapB,EAAUvoG,GAGxCyoG,EAAUzoG,EAAI0oG,EAAU1oG,GAE5B4pG,EAAUnB,EAAWqB,EAAarB,EAAUzoG,EAC5C6pG,EAAUnB,EAAWqB,EAAarB,EAAU1oG,IAI5C4pG,EAAUlB,EAAWoB,EAAapB,EAAU1oG,EAC5C6pG,EAAUpB,EAAWsB,EAAatB,EAAUzoG,IAK3B8pG,GAAdJ,EAEeI,EAAdH,KACAA,IAAeG,EAEdnB,MACIiB,GAGSG,GAAdJ,GAAoCC,EAASH,IACzCG,EAASC,GAIbH,EAAcK,KACdL,IAAeK,EAEdpB,MACIa,GAGSO,GAAdJ,GAAoCH,EAASC,IACzCD,EAASK,GAQrB,QAASG,GAAoBC,EAAUC,EAAaC,EAAW9B,GAK9D,GAAI+B,GAAaF,EAAYnqG,EAAIkqG,EAASlqG,EAAIsqG,EAAaH,EAAYlqG,EAAIiqG,EAASjqG,EAChFsqG,EAAWH,EAAUpqG,EAAIkqG,EAASlqG,EAAIwqG,EAAYJ,EAAUnqG,EAAIiqG,EAASjqG,EACzEwqG,EAAWnC,EAAUtoG,EAAIkqG,EAASlqG,EAAI0qG,EAAYpC,EAAUroG,EAAIiqG,EAASjqG,EAGzE0qG,EAAeN,EAAaG,EAAWF,EAAaC,EACpDK,EAAkBP,EAAaK,EAAWJ,EAAaG,CAE3D,IAAKvpG,KAAK+sC,IAAK08D,GAAiBljC,OAAOC,QAAU,CAIhD,GAAImjC,GAAiBJ,EAAWD,EAAWE,EAAWH,CAGtD,OAAKI,GAAe,EAGRC,GAAmB,GAASC,GAAiB,EAK7CD,GAAmB,GAASC,GAAiB,EAQzD,MAASD,GAAkB,EAO7B,QAASE,GAAa/D,EAASzvC,GAK9B,QAASyzC,GAAuBC,EAAYC,GAG3C,GAAIC,GAAeC,EAAMjnG,OAAS,EAE9BknG,EAAeJ,EAAa,CACZ,GAAfI,IAAqBA,EAAeF,EAEzC,IAAIG,GAAeL,EAAa,CAC3BK,GAAeH,IAAeG,EAAe,EAElD,IAAIC,GAAcrB,EAAoBkB,EAAOH,GAAcG,EAAOC,GAAgBD,EAAOE,GAAgBE,EAAMN,GAC/G,KAAOK,EAGN,OAAO,CAKR,IAAIE,GAAcD,EAAKrnG,OAAS,EAE5BunG,EAAcR,EAAY,CACX,GAAdQ,IAAoBA,EAAcD,EAEvC,IAAIE,GAAcT,EAAY,CAI9B,OAHKS,GAAcF,IAAcE,EAAc,GAE/CJ,EAAcrB,EAAoBsB,EAAMN,GAAaM,EAAME,GAAeF,EAAMG,GAAeP,EAAOH,IAC/FM,GAOA,GAJC,EAQT,QAASK,GAAqBC,EAAWC,GAGxC,GAAIC,GAAMC,EAAS1J,CACnB,KAAMyJ,EAAO,EAAGA,EAAOX,EAAMjnG,OAAQ4nG,IAIpC,GAFAC,EAAUD,EAAO,EAAGC,GAAWZ,EAAMjnG,OACrCm+F,EAAekG,EAAuBqD,EAAWC,EAAUV,EAAOW,GAAQX,EAAOY,IAAW,GACvF1J,EAAan+F,OAAS,EAAK,OAAO,CAIxC,QAAO,EAMR,QAAS8nG,GAAoBJ,EAAWC,GAGvC,GAAII,GAAOC,EACVC,EAAMJ,EAAS1J,CAChB,KAAM4J,EAAQ,EAAGA,EAAQG,EAAWloG,OAAQ+nG,IAG3C,IADAC,EAAU50C,EAAO80C,EAAYH,IACvBE,EAAO,EAAGA,EAAOD,EAAQhoG,OAAQioG,IAItC,GAFAJ,EAAUI,EAAO,EAAGJ,GAAWG,EAAQhoG,OACvCm+F,EAAekG,EAAuBqD,EAAWC,EAAUK,EAASC,GAAQD,EAASH,IAAW,GAC3F1J,EAAan+F,OAAS,EAAK,OAAO,CAKzC,QAAO,EAUR,IAAM,GAvFFqnG,GAiFAc,EAAWC,EACdC,EAASC,EACTC,EAASC,EACTC,EAAWC,EACXC,EAAUC,EAtFP3B,EAAQpE,EAAQgG,SA2DhBX,KAyBcY,KAIR5lF,EAAI,EAAG6lF,EAAK31C,EAAMpzD,OAAY+oG,EAAJ7lF,EAAQA,IAE3CglF,EAAW5iG,KAAM4d,EAMlB,KAFA,GAAI8lF,GAAgB,EAChBC,EAA8B,EAApBf,EAAWloG,OACjBkoG,EAAWloG,OAAS,GAAI,CAG/B,GADAipG,IACe,EAAVA,EAAc,CAElBhpG,QAAQmvB,IAAK,6BAA+B84E,EAAWloG,OAAS,iCAChE,OAMD,IAAMooG,EAAaY,EAAeZ,EAAanB,EAAMjnG,OAAQooG,IAAgB,CAE5EC,EAAUpB,EAAOmB,GACjBD,EAAY,EAGZ,KAAM,GAAIjlF,GAAI,EAAGA,EAAIglF,EAAWloG,OAAQkjB,IAMvC,GAJAqlF,EAAUL,EAAYhlF,GAGtBslF,EAASH,EAAQvsG,EAAI,IAAMusG,EAAQtsG,EAAI,IAAMwsG,EACfnrG,SAAzB0rG,EAAYN,GAAjB,CAEAnB,EAAOj0C,EAAOm1C,EACd,KAAM,GAAIW,GAAK,EAAGA,EAAK7B,EAAKrnG,OAAQkpG,IAGnC,GADAZ,EAASjB,EAAM6B,GACRrC,EAAuBuB,EAAYc,KACrCzB,EAAqBY,EAASC,KAC9BR,EAAoBO,EAASC,GAAlC,CAEAH,EAAYe,EACZhB,EAAWhkC,OAAQhhD,EAAG,GAEtBulF,EAAYxB,EAAM/oD,MAAO,EAAGkqD,EAAa,GACzCM,EAAYzB,EAAM/oD,MAAOkqD,GACzBO,EAAWtB,EAAKnpD,MAAOiqD,GACvBS,EAAWvB,EAAKnpD,MAAO,EAAGiqD,EAAY,GAEtClB,EAAQwB,EAAUI,OAAQF,GAAWE,OAAQD,GAAWC,OAAQH,GAEhEM,EAAgBZ,CAKhB,OAGD,GAAKD,GAAa,EAAI,KAEtBW,GAAYN,IAAW,EAGxB,GAAKL,GAAa,EAAI,OAMxB,MAAOlB,GA3ZRjD,EAAiBnB,GACjBzvC,EAAM+1C,QAASnF,EAuaf,KAAM,GARF9iG,GAAG2Y,EAAI+b,EAAG9a,EACb+lC,EAAKx+B,EACL+mF,KAIGC,EAAYxG,EAAQgG,SAEd3lF,EAAI,EAAG6lF,EAAK31C,EAAMpzD,OAAY+oG,EAAJ7lF,EAAQA,IAE3CxK,MAAMq/C,UAAUzyD,KAAKu+B,MAAOwlE,EAAWj2C,EAAOlwC,GAQ/C,KAAMhiB,EAAI,EAAG2Y,EAAKwvF,EAAUrpG,OAAY6Z,EAAJ3Y,EAAQA,IAE3C2/C,EAAMwoD,EAAWnoG,GAAIpF,EAAI,IAAMutG,EAAWnoG,GAAInF,EAEjBqB,SAAxBgsG,EAAcvoD,IAElB5gD,QAAQgc,KAAM,oCAAqC4kC,EAAK3/C,GAIzDkoG,EAAcvoD,GAAQ3/C,CAKvB,IAAIooG,GAAoB1C,EAAa/D,EAASzvC,GAE1Cm2C,EAAY/tG,EAAQonG,WAAWE,YAAawG,GAAmB,EAKnE,KAAMpoG,EAAI,EAAG2Y,EAAK0vF,EAAUvpG,OAAY6Z,EAAJ3Y,EAAQA,IAI3C,IAFA4Z,EAAOyuF,EAAWroG,GAEZ00B,EAAI,EAAO,EAAJA,EAAOA,IAEnBirB,EAAM/lC,EAAM8a,GAAI95B,EAAI,IAAMgf,EAAM8a,GAAI75B,EAEpCsmB,EAAQ+mF,EAAcvoD,GAEPzjD,SAAVilB,IAEJvH,EAAM8a,GAAMvT,EAQf,OAAOknF,GAAUV,UAIlBW,YAAa,SAAWC,GAEvB,MAAOjuG,GAAQonG,WAAWvM,KAAMoT,GAAQ,GASzCvjC,GAAI,WAEH,QAASwjC,GAAMxlD,EAAG1xB,GAEjB,GAAI7W,GAAI,EAAIuoC,CACZ,OAAOvoC,GAAIA,EAAI6W,EAIhB,QAASm3E,GAAMzlD,EAAG1xB,GAEjB,MAAO,IAAM,EAAI0xB,GAAMA,EAAI1xB,EAI5B,QAASo3E,GAAM1lD,EAAG1xB,GAEjB,MAAO0xB,GAAIA,EAAI1xB,EAIhB,MAAO,UAAa0xB,EAAG7vC,EAAIC,EAAIC,GAE9B,MAAOm1F,GAAMxlD,EAAG7vC,GAAOs1F,EAAMzlD,EAAG5vC,GAAOs1F,EAAM1lD,EAAG3vC,OAQlDs1F,GAAI,WAEH,QAASC,GAAM5lD,EAAG1xB,GAEjB,GAAI7W,GAAI,EAAIuoC,CACZ,OAAOvoC,GAAIA,EAAIA,EAAI6W,EAIpB,QAASu3E,GAAM7lD,EAAG1xB,GAEjB,GAAI7W,GAAI,EAAIuoC,CACZ,OAAO,GAAIvoC,EAAIA,EAAIuoC,EAAI1xB,EAIxB,QAASw3E,GAAM9lD,EAAG1xB,GAEjB,GAAI7W,GAAI,EAAIuoC,CACZ,OAAO,GAAIvoC,EAAIuoC,EAAIA,EAAI1xB,EAIxB,QAASy3E,GAAM/lD,EAAG1xB,GAEjB,MAAO0xB,GAAIA,EAAIA,EAAI1xB,EAIpB,MAAO,UAAa0xB,EAAG7vC,EAAIC,EAAIC,EAAIC,GAElC,MAAOs1F,GAAM5lD,EAAG7vC,GAAO01F,EAAM7lD,EAAG5vC,GAAO01F,EAAM9lD,EAAG3vC,GAAO01F,EAAM/lD,EAAG1vC,QA6DnE6yC,GAAgB0Q,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACpD1Q,GAAgB0Q,UAAU1I,YAAchI,GAExCA,GAAgB0Q,UAAUxQ,aAAe,SAAWD,EAAQ5oD,GAI3D,IAAM,GAFFggE,GAAKpX,EAAOtnD,OAENosD,EAAI,EAAOsS,EAAJtS,EAAQA,IAAO,CAE/B,GAAI66C,GAAQ3/C,EAAQ8E,EACpBpyD,MAAKkwG,SAAUjD,EAAOvoG,KAMxB2oD,GAAgB0Q,UAAUmyC,SAAW,SAAWjD,EAAOvoG,GAyGtD,QAASyrG,GAAUC,EAAI/I,EAAKl9F,GAI3B,MAFOk9F,IAAMphG,QAAQC,MAAO,6CAErBmhG,EAAIzqF,QAAQgxB,eAAgBzjC,GAAO4W,IAAKqvF,GAYhD,QAASC,GAAaC,EAAMC,EAAQC,GASnC,GAAIC,GAAWC,EAAWC,EAAY,EAKlCC,EAAWN,EAAKxuG,EAAIyuG,EAAOzuG,EAAG+uG,EAAWP,EAAKvuG,EAAIwuG,EAAOxuG,EACzD+uG,EAAWN,EAAO1uG,EAAIwuG,EAAKxuG,EAAGivG,EAAWP,EAAOzuG,EAAIuuG,EAAKvuG,EAEzDivG,EAAiBJ,EAAWA,EAAWC,EAAWA,EAGlDI,EAAeL,EAAWG,EAAWF,EAAWC,CAEpD,IAAK9tG,KAAK+sC,IAAKkhE,GAAe1nC,OAAOC,QAAU,CAM9C,GAAI0nC,GAAaluG,KAAKmhD,KAAM6sD,GACxBG,EAAanuG,KAAKmhD,KAAM2sD,EAAWA,EAAWC,EAAWA,GAIzDK,EAAkBb,EAAOzuG,EAAI+uG,EAAWK,EACxCG,EAAkBd,EAAOxuG,EAAI6uG,EAAWM,EAExCI,EAAkBd,EAAO1uG,EAAIivG,EAAWI,EACxCI,EAAkBf,EAAOzuG,EAAI+uG,EAAWK,EAIxCK,IAAUF,EAAgBF,GAAkBL,GAC3CQ,EAAgBF,GAAkBP,IACjCF,EAAWG,EAAWF,EAAWC,EAIvCL,GAAcW,EAAgBR,EAAWY,EAAKlB,EAAKxuG,EACnD4uG,EAAcW,EAAgBR,EAAWW,EAAKlB,EAAKvuG,CAInD,IAAI0vG,GAAkBhB,EAAYA,EAAYC,EAAYA,CAC1D,IAAsB,GAAjBe,EAEJ,MAAO,IAAI5vG,GAAS4uG,EAAWC,EAI/BC,GAAY3tG,KAAKmhD,KAAMstD,EAAgB,OAIlC,CAIN,GAAIC,IAAe,CACdd,GAAWrnC,OAAOC,QAEjBsnC,EAAWvnC,OAAOC,UAEtBkoC,GAAe,GAMXd,GAAarnC,OAAOC,QAEnBsnC,GAAavnC,OAAOC,UAExBkoC,GAAe,GAMX1uG,KAAK+uD,KAAM8+C,KAAe7tG,KAAK+uD,KAAMg/C,KAEzCW,GAAe,GAQbA,GAGJjB,GAAcI,EACdH,EAAaE,EACbD,EAAY3tG,KAAKmhD,KAAM6sD,KAKvBP,EAAYG,EACZF,EAAYG,EACZF,EAAY3tG,KAAKmhD,KAAM6sD,EAAe,IAMxC,MAAO,IAAInvG,GAAS4uG,EAAYE,EAAWD,EAAYC,GAwMxD,QAASgB,KAER,GAAK1jD,EAAe,CAEnB,GAAI2jD,GAAQ,EACR/tG,EAASguG,EAAOD,CAIpB,KAAM1qG,EAAI,EAAO4qG,EAAJ5qG,EAAUA,IAEtB4Z,EAAO1T,EAAOlG,GACd6qG,EAAIjxF,EAAM,GAAMjd,EAAQid,EAAM,GAAMjd,EAAQid,EAAM,GAAMjd,EASzD,KALA+tG,EAAQI,EAAwB,EAAhBC,EAChBpuG,EAASguG,EAAOD,EAIV1qG,EAAI,EAAO4qG,EAAJ5qG,EAAUA,IAEtB4Z,EAAO1T,EAAOlG,GACd6qG,EAAIjxF,EAAM,GAAMjd,EAAQid,EAAM,GAAMjd,EAAQid,EAAM,GAAMjd,OAInD,CAIN,IAAMqD,EAAI,EAAO4qG,EAAJ5qG,EAAUA,IAEtB4Z,EAAO1T,EAAOlG,GACd6qG,EAAIjxF,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAMjC,KAAM5Z,EAAI,EAAO4qG,EAAJ5qG,EAAUA,IAEtB4Z,EAAO1T,EAAOlG,GACd6qG,EAAIjxF,EAAM,GAAM+wF,EAAOG,EAAOlxF,EAAM,GAAM+wF,EAAOG,EAAOlxF,EAAM,GAAM+wF,EAAOG,IAU9E,QAASE,KAER,GAAIC,GAAc,CAIlB,KAHAC,EAAWvJ,EAASsJ,GACpBA,GAAetJ,EAAQ7iG,OAEjBkjB,EAAI,EAAG6lF,EAAK31C,EAAMpzD,OAAY+oG,EAAJ7lF,EAAQA,IAEvCmpF,EAAQj5C,EAAOlwC,GACfkpF,EAAWC,EAAOF,GAGlBA,GAAeE,EAAMrsG,OAMvB,QAASosG,GAAWvJ,EAASsJ,GAE5B,GAAIl/F,GAAG0O,CAGP,KAFAza,EAAI2hG,EAAQ7iG,SAEDkB,GAAK,GAAI,CAEnB+L,EAAI/L,EACJya,EAAIza,EAAI,EACC,EAAJya,IAAQA,EAAIknF,EAAQ7iG,OAAS,EAIlC,IAAIosD,GAAI,EAAGsS,EAAKstC,EAAyB,EAAhBC,CAEzB,KAAM7/C,EAAI,EAAOsS,EAAJtS,EAAQA,IAAO,CAE3B,GAAIkgD,GAAQT,EAAOz/C,EACfmgD,EAAQV,GAASz/C,EAAI,GAErBr9C,EAAIo9F,EAAcl/F,EAAIq/F,EACzBjqG,EAAI8pG,EAAcxwF,EAAI2wF,EACtBhuF,EAAI6tF,EAAcxwF,EAAI4wF,EACtBppF,EAAIgpF,EAAcl/F,EAAIs/F,CAEvBC,GAAIz9F,EAAG1M,EAAGic,EAAG6E,EAAG0/E,EAASz2C,EAAGsS,EAAIzxD,EAAG0O,KAStC,QAASja,GAAG5F,EAAGC,EAAGyC,GAEjBqY,EAAM1P,SAAS7B,KAAM,GAAI3F,GAAS7D,EAAGC,EAAGyC,IAIzC,QAASutG,GAAIh9F,EAAG1M,EAAGic,GAElBvP,GAAK09F,EACLpqG,GAAKoqG,EACLnuF,GAAKmuF,EAEL51F,EAAMzP,MAAM9B,KAAM,GAAIiZ,IAAOxP,EAAG1M,EAAGic,EAAG,KAAM,KAAM,GAElD,IAAI4D,GAAMwqF,EAAMC,cAAe91F,EAAO9H,EAAG1M,EAAGic,EAE5CzH,GAAMoK,cAAe,GAAI3b,KAAM4c,GAIhC,QAASsqF,GAAIz9F,EAAG1M,EAAGic,EAAG6E,EAAGypF,EAAaC,EAAWC,EAAaC,EAAeC,GAE5Ej+F,GAAK09F,EACLpqG,GAAKoqG,EACLnuF,GAAKmuF,EACLtpF,GAAKspF,EAEL51F,EAAMzP,MAAM9B,KAAM,GAAIiZ,IAAOxP,EAAG1M,EAAG8gB,EAAG,KAAM,KAAM,IAClDtM,EAAMzP,MAAM9B,KAAM,GAAIiZ,IAAOlc,EAAGic,EAAG6E,EAAG,KAAM,KAAM,GAElD,IAAIjB,GAAMwqF,EAAMO,mBAAoBp2F,EAAO9H,EAAG1M,EAAGic,EAAG6E,EAEpDtM,GAAMoK,cAAe,GAAI3b,MAAQ4c,EAAK,GAAKA,EAAK,GAAKA,EAAK,KAC1DrL,EAAMoK,cAAe,GAAI3b,MAAQ4c,EAAK,GAAKA,EAAK,GAAKA,EAAK,KA9jB3D,GAaIgrF,GAKAC,EAAYvoD,EAAU1wC,EAAQk5F,EAlB9BtlD,EAA4B1qD,SAAnBsB,EAAQopD,OAAuBppD,EAAQopD,OAAS,IAEzDC,EAA4C3qD,SAA3BsB,EAAQqpD,eAA+BrpD,EAAQqpD,eAAiB,EACjFC,EAAkC5qD,SAAtBsB,EAAQspD,UAA0BtpD,EAAQspD,UAAYD,EAAiB,EACnFkkD,EAA0C7uG,SAA1BsB,EAAQutG,cAA8BvtG,EAAQutG,cAAgB,EAE9EhkD,EAAwC7qD,SAAzBsB,EAAQupD,aAA6BvpD,EAAQupD,cAAe,EAE3EJ,EAA0CzqD,SAA1BsB,EAAQmpD,cAA8BnpD,EAAQmpD,cAAgB,GAE9EmkD,EAA0B5uG,SAAlBsB,EAAQstG,MAAsBttG,EAAQstG,MAAQ,EAEtDqB,EAAc3uG,EAAQ2uG,YACVC,GAAgB,EAG5BZ,EAAgCtvG,SAAxBsB,EAAQ6uG,YAA4B7uG,EAAQ6uG,YAAclmD,GAAgBmmD,gBAGjFH,KAEJH,EAAaG,EAAYI,gBAAiBzB,GAE1CsB,GAAgB,EAChBrlD,GAAe,EAOfklD,EAAgC/vG,SAAnBsB,EAAQ0mD,OAAuB1mD,EAAQ0mD,OAAS,GAAIhB,IAAaiB,aAAcgoD,EAAarB,GAAO,GAIhHpnD,EAAW,GAAIjlD,GACfuU,EAAS,GAAIvU,GACbytG,EAAY,GAAIztG,IAMVsoD,IAENgkD,EAAgB,EAChBlkD,EAAiB,EACjBC,EAAY,EAMb,IAAIqkD,GAAOnpF,EAAG6lF,EACVlyF,EAAQ7c,KAERyyG,EAAezyG,KAAKmN,SAASnH,OAE7B0tG,EAAczG,EAAM0G,cAAe9lD,GAEnC1gD,EAAWumG,EAAYzG,MACvB7zC,EAAQs6C,EAAYt6C,MAEpBw6C,GAAYpyG,EAAQonG,WAAW4G,YAAariG,EAEhD,IAAKymG,EAAU,CAMd,IAJAzmG,EAAWA,EAASymG,UAId1qF,EAAI,EAAG6lF,EAAK31C,EAAMpzD,OAAY+oG,EAAJ7lF,EAAQA,IAEvCmpF,EAAQj5C,EAAOlwC,GAEV1nB,EAAQonG,WAAW4G,YAAa6C,KAEpCj5C,EAAOlwC,GAAMmpF,EAAMuB,UAMrBA,IAAU,EAKX,GAAIxmG,GAAQ5L,EAAQonG,WAAWmB,iBAAkB58F,EAAUisD,GAIvDyvC,EAAU17F,CAEd,KAAM+b,EAAI,EAAG6lF,EAAK31C,EAAMpzD,OAAY+oG,EAAJ7lF,EAAQA,IAEvCmpF,EAAQj5C,EAAOlwC,GAEf/b,EAAWA,EAAS0hG,OAAQwD,EAgJ7B,KAAM,GAnIFhqG,GAAGwrG,EAAI3pD,EAAG1lD,EACbimD,EACA3pC,EADM+wF,EAAO1kG,EAASnH,OAChB8rG,EAAO1kG,EAAMpH,OA+HhB8tG,KAEM5sG,EAAI,EAAG2Y,EAAKgpF,EAAQ7iG,OAAQiN,EAAI4M,EAAK,EAAG8B,EAAIza,EAAI,EAAO2Y,EAAJ3Y,EAAQA,IAAM+L,IAAM0O,IAE3E1O,IAAM4M,IAAK5M,EAAI,GACf0O,IAAM9B,IAAK8B,EAAI,GAKpBmyF,EAAkB5sG,GAAMmpG,EAAaxH,EAAS3hG,GAAK2hG,EAAS51F,GAAK41F,EAASlnF,GAI3E,IAAyBoyF,GAArBC,KAAuCC,GAAoBH,EAAiBjF,QAEhF,KAAM3lF,EAAI,EAAG6lF,EAAK31C,EAAMpzD,OAAY+oG,EAAJ7lF,EAAQA,IAAO,CAM9C,IAJAmpF,EAAQj5C,EAAOlwC,GAEf6qF,KAEM7sG,EAAI,EAAG2Y,EAAKwyF,EAAMrsG,OAAQiN,EAAI4M,EAAK,EAAG8B,EAAIza,EAAI,EAAO2Y,EAAJ3Y,EAAQA,IAAM+L,IAAM0O,IAErE1O,IAAM4M,IAAK5M,EAAI,GACf0O,IAAM9B,IAAK8B,EAAI,GAGpBoyF,EAAkB7sG,GAAMmpG,EAAagC,EAAOnrG,GAAKmrG,EAAOp/F,GAAKo/F,EAAO1wF,GAIrEqyF,GAAe1oG,KAAMyoG,GACrBE,GAAoBA,GAAkBpF,OAAQkF,GAO/C,IAAM1rG,EAAI,EAAO4pG,EAAJ5pG,EAAmBA,IAAO,CAUtC,IANA6hD,EAAI7hD,EAAI4pG,EACRztG,EAAIupD,EAAiB/qD,KAAKg1C,IAAKkS,EAAIlnD,KAAKylD,GAAK,GAC7CorD,EAAK7lD,EAAYhrD,KAAKyoD,IAAKvB,EAAIlnD,KAAKylD,GAAK,GAInCvhD,EAAI,EAAG2Y,EAAKgpF,EAAQ7iG,OAAY6Z,EAAJ3Y,EAAQA,IAEzCujD,EAAO0lD,EAAUtH,EAAS3hG,GAAK4sG,EAAkB5sG,GAAK2sG,GAEtDnsG,EAAG+iD,EAAK3oD,EAAG2oD,EAAK1oD,GAAMyC,EAMvB,KAAM0kB,EAAI,EAAG6lF,EAAK31C,EAAMpzD,OAAY+oG,EAAJ7lF,EAAQA,IAKvC,IAHAmpF,EAAQj5C,EAAOlwC,GACf6qF,EAAmBC,EAAgB9qF,GAE7BhiB,EAAI,EAAG2Y,EAAKwyF,EAAMrsG,OAAY6Z,EAAJ3Y,EAAQA,IAEvCujD,EAAO0lD,EAAUkC,EAAOnrG,GAAK6sG,EAAkB7sG,GAAK2sG,GAEpDnsG,EAAG+iD,EAAK3oD,EAAG2oD,EAAK1oD,GAAMyC,GAYzB,IAJAqvG,EAAK7lD,EAIC9mD,EAAI,EAAO2qG,EAAJ3qG,EAAUA,IAEtBujD,EAAOwD,EAAekiD,EAAUhjG,EAAUjG,GAAK+sG,GAAmB/sG,GAAK2sG,GAAO1mG,EAAUjG,GAEjFosG,GAQNp5F,EAAOhI,KAAMihG,EAAWlrF,QAAS,IAAM2lB,eAAgB6c,EAAK3oD,GAC5D8oD,EAAS14C,KAAMihG,EAAW5nD,UAAW,IAAM3d,eAAgB6c,EAAK1oD,GAEhEqxG,EAAUlhG,KAAMghG,EAAY,IAAMnyF,IAAK7G,GAAS6G,IAAK6pC,GAErDljD,EAAG0rG,EAAUtxG,EAAGsxG,EAAUrxG,EAAGqxG,EAAU5uG,IAXvCkD,EAAG+iD,EAAK3oD,EAAG2oD,EAAK1oD,EAAG,EAoBrB,IAAIqwD,GAEJ,KAAMA,GAAI,EAAQ4/C,GAAL5/C,GAAYA,KAExB,IAAMlrD,EAAI,EAAO2qG,EAAJ3qG,EAAUA,IAEtBujD,EAAOwD,EAAekiD,EAAUhjG,EAAUjG,GAAK+sG,GAAmB/sG,GAAK2sG,GAAO1mG,EAAUjG,GAEjFosG,GAQNp5F,EAAOhI,KAAMihG,EAAWlrF,QAASmqC,KAAMxkB,eAAgB6c,EAAK3oD,GAC5D8oD,EAAS14C,KAAMihG,EAAW5nD,UAAW6G,KAAMxkB,eAAgB6c,EAAK1oD,GAEhEqxG,EAAUlhG,KAAMghG,EAAY9gD,KAAMrxC,IAAK7G,GAAS6G,IAAK6pC,GAErDljD,EAAG0rG,EAAUtxG,EAAGsxG,EAAUrxG,EAAGqxG,EAAU5uG,IAXvCkD,EAAG+iD,EAAK3oD,EAAG2oD,EAAK1oD,EAAG+rD,EAASkkD,EAAQ5/C,GAuBvC,KAAM/pD,EAAI4pG,EAAgB,EAAG5pG,GAAK,EAAGA,IAAO,CAQ3C,IANA6hD,EAAI7hD,EAAI4pG,EACRztG,EAAIupD,EAAiB/qD,KAAKg1C,IAAMkS,EAAIlnD,KAAKylD,GAAK,GAC9CorD,EAAK7lD,EAAYhrD,KAAKyoD,IAAKvB,EAAIlnD,KAAKylD,GAAK,GAInCvhD,EAAI,EAAG2Y,EAAKgpF,EAAQ7iG,OAAY6Z,EAAJ3Y,EAAQA,IAEzCujD,EAAO0lD,EAAUtH,EAAS3hG,GAAK4sG,EAAkB5sG,GAAK2sG,GACtDnsG,EAAG+iD,EAAK3oD,EAAG2oD,EAAK1oD,EAAI+rD,EAAStpD,EAM9B,KAAM0kB,EAAI,EAAG6lF,EAAK31C,EAAMpzD,OAAY+oG,EAAJ7lF,EAAQA,IAKvC,IAHAmpF,EAAQj5C,EAAOlwC,GACf6qF,EAAmBC,EAAgB9qF,GAE7BhiB,EAAI,EAAG2Y,EAAKwyF,EAAMrsG,OAAY6Z,EAAJ3Y,EAAQA,IAEvCujD,EAAO0lD,EAAUkC,EAAOnrG,GAAK6sG,EAAkB7sG,GAAK2sG,GAE7CP,EAMN5rG,EAAG+iD,EAAK3oD,EAAG2oD,EAAK1oD,EAAImxG,EAAYlB,EAAQ,GAAIjwG,EAAGmxG,EAAYlB,EAAQ,GAAIlwG,EAAI0C,GAJ3EkD,EAAG+iD,EAAK3oD,EAAG2oD,EAAK1oD,EAAI+rD,EAAStpD,GAkBjCmtG,IAIAO,KAsJD7kD,GAAgBmmD,kBAEfb,cAAe,SAAWt3F,EAAU64F,EAAQC,EAAQC,GAEnD,GAAIjnG,GAAWkO,EAASlO,SAEpB4H,EAAI5H,EAAU+mG,GACd7rG,EAAI8E,EAAUgnG,GACd7vF,EAAInX,EAAUinG,EAElB,QACC,GAAIvyG,GAASkT,EAAEjT,EAAGiT,EAAEhT,GACpB,GAAIF,GAASwG,EAAEvG,EAAGuG,EAAEtG,GACpB,GAAIF,GAASyiB,EAAExiB,EAAGwiB,EAAEviB,KAKtBkxG,mBAAoB,SAAW53F,EAAU64F,EAAQC,EAAQC,EAAQC,GAEhE,GAAIlnG,GAAWkO,EAASlO,SAEpB4H,EAAI5H,EAAU+mG,GACd7rG,EAAI8E,EAAUgnG,GACd7vF,EAAInX,EAAUinG,GACdjrF,EAAIhc,EAAUknG,EAElB,OAAKrxG,MAAK+sC,IAAKh7B,EAAEhT,EAAIsG,EAAEtG,GAAM,KAG3B,GAAIF,GAASkT,EAAEjT,EAAG,EAAIiT,EAAEvQ,GACxB,GAAI3C,GAASwG,EAAEvG,EAAG,EAAIuG,EAAE7D,GACxB,GAAI3C,GAASyiB,EAAExiB,EAAG,EAAIwiB,EAAE9f,GACxB,GAAI3C,GAASsnB,EAAErnB,EAAG,EAAIqnB,EAAE3kB,KAMxB,GAAI3C,GAASkT,EAAEhT,EAAG,EAAIgT,EAAEvQ,GACxB,GAAI3C,GAASwG,EAAEtG,EAAG,EAAIsG,EAAE7D,GACxB,GAAI3C,GAASyiB,EAAEviB,EAAG,EAAIuiB,EAAE9f,GACxB,GAAI3C,GAASsnB,EAAEpnB,EAAG,EAAIonB,EAAE3kB,MA0D5BgpD,GAAauQ,UAAYp7D,OAAOguE,OAAQtjB,GAAgB0Q,WACxDvQ,GAAauQ,UAAU1I,YAAc7H,GAqGrCU,GAAqB6P,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC/D7P,GAAqB6P,UAAU1I,YAAcnH,GA0B7CY,GAAeiP,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACnDjP,GAAeiP,UAAU1I,YAAcvG,GAwHvCC,GAAmBgP,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC7DhP,GAAmBgP,UAAU1I,YAActG,GAyB3CQ,GAAawO,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACjDxO,GAAawO,UAAU1I,YAAc9F,GAwBrCC,GAAcuO,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WAClDvO,GAAcuO,UAAU1I,YAAc7F,GA2JtCC,GAAoBsO,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC9DtO,GAAoBsO,UAAU1I,YAAc5F,GAiC5CO,GAAc+N,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WAClD/N,GAAc+N,UAAU1I,YAAcrF,GAgCtCC,GAAc8N,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WAClD9N,GAAc8N,UAAU1I,YAAcpF,GAKtCA,GAAc8N,UAAUxQ,aAAe,SAAWD,EAAQ5oD,GAEzD,IAAM,GAAIwC,GAAI,EAAGyK,EAAI27C,EAAOtnD,OAAY2L,EAAJzK,EAAOA,IAE1ClH,KAAKkwG,SAAU5iD,EAAQpmD,GAAKxC,EAI7B,OAAO1E,OAORiwD,GAAc8N,UAAUmyC,SAAW,SAAWjD,EAAOvoG,GAEnCtB,SAAZsB,IAAwBA,KAC7B,IAOIwC,GAAGyK,EAAG07F,EAPNx/C,EAA0CzqD,SAA1BsB,EAAQmpD,cAA8BnpD,EAAQmpD,cAAgB,GAE9E/3C,EAAWpR,EAAQoR,SACnB48F,EAAgCtvG,SAAxBsB,EAAQ6uG,YAA4BlmD,GAAgBmmD,iBAAmB9uG,EAAQ6uG,YAMvFd,EAAezyG,KAAKmN,SAASnH,OAC7B0tG,EAAczG,EAAM0G,cAAe9lD,GAEnC1gD,EAAWumG,EAAYzG,MACvB7zC,EAAQs6C,EAAYt6C,MAEpBw6C,GAAYpyG,EAAQonG,WAAW4G,YAAariG,EAEhD,IAAKymG,EAAU,CAMd,IAJAzmG,EAAWA,EAASymG,UAId1sG,EAAI,EAAGyK,EAAIynD,EAAMpzD,OAAY2L,EAAJzK,EAAOA,IAErCmmG,EAAOj0C,EAAOlyD,GAET1F,EAAQonG,WAAW4G,YAAanC,KAEpCj0C,EAAOlyD,GAAMmmG,EAAKuG,UAMpBA,IAAU,EAIX,GAAIxmG,GAAQ5L,EAAQonG,WAAWmB,iBAAkB58F,EAAUisD,EAI3D,KAAMlyD,EAAI,EAAGyK,EAAIynD,EAAMpzD,OAAY2L,EAAJzK,EAAOA,IAErCmmG,EAAOj0C,EAAOlyD,GACdiG,EAAWA,EAAS0hG,OAAQxB,EAM7B,IAAI5iD,GACA3pC,EADM+wF,EAAO1kG,EAASnH,OAChB8rG,EAAO1kG,EAAMpH,MAEvB,KAAMkB,EAAI,EAAO2qG,EAAJ3qG,EAAUA,IAEtBujD,EAAOt9C,EAAUjG,GAEjBlH,KAAKmN,SAAS7B,KAAM,GAAI3F,GAAS8kD,EAAK3oD,EAAG2oD,EAAK1oD,EAAG,GAIlD,KAAMmF,EAAI,EAAO4qG,EAAJ5qG,EAAUA,IAAO,CAE7B4Z,EAAO1T,EAAOlG,EAEd,IAAI6N,GAAI+L,EAAM,GAAM2xF,EAChBpqG,EAAIyY,EAAM,GAAM2xF,EAChBnuF,EAAIxD,EAAM,GAAM2xF,CAEpBzyG,MAAKoN,MAAM9B,KAAM,GAAIiZ,IAAOxP,EAAG1M,EAAGic,EAAG,KAAM,KAAMxO,IACjD9V,KAAKinB,cAAe,GAAI3b,KAAMonG,EAAMC,cAAe3yG,KAAM+U,EAAG1M,EAAGic,MAmGjE4rC,GAAc6N,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WACxD7N,GAAc6N,UAAU1I,YAAcnF,GA6TtCU,GAAuBmN,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WACjEnN,GAAuBmN,UAAU1I,YAAczE,GA4B/CoB,GAAiB+L,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACrD/L,GAAiB+L,UAAU1I,YAAcrD,GA8BzCC,GAAa8L,UAAYp7D,OAAOguE,OAAQ3e,GAAiB+L,WACzD9L,GAAa8L,UAAU1I,YAAcpD,GA6BrCC,GAAmB6L,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC7D7L,GAAmB6L,UAAU1I,YAAcnD,GAmE3CC,GAAqB4L,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAC/D5L,GAAqB4L,UAAU1I,YAAclD,GAuB7CG,GAAeyL,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WACnDzL,GAAeyL,UAAU1I,YAAc/C,GA2BvCC,GAAYwL,UAAYp7D,OAAOguE,OAAQ7pD,GAASi3C,WAChDxL,GAAYwL,UAAU1I,YAAc9C,EAIpC,IAAI+hD,IAAa3xG,OAAO4xG,QACvBhuD,kBAAmBA,GACnBiB,mBAAoBA,GACpBuC,oBAAqBA,GACrBC,mBAAoBA,GACpBC,oBAAqBA,GACrBE,qBAAsBA,GACtB/B,mBAAoBA,GACpBgC,aAAcA,GACd2C,kBAAmBA,GACnBrB,wBAAyBA,GACzB0B,cAAeA,GACfF,oBAAqBA,GACrBM,aAAcA,GACdU,qBAAsBA,GACtBY,eAAgBA,GAChBS,aAAcA,GACdR,mBAAoBA,GACpB7jC,oBAAqBA,GACrBskC,cAAeA,GACfQ,cAAeA,GACfP,oBAAqBA,GACrBQ,cAAeA,GACf5C,gBAAiBA,GACjB6C,cAAeA,GACf+B,aAAcA,GACdC,mBAAoBA,GACpBF,iBAAkBA,GAClBpB,uBAAwBA,GACxBuB,qBAAsBA,GACtBG,eAAgBA,GAChB1pC,kBAAmBA,GACnB2pC,YAAaA,IAqCdC,IAAeuL,UAAYp7D,OAAOguE,OAAQz4D,EAAe6lD,WACzDvL,GAAeuL,UAAU1I,YAAc7C,GAEvCA,GAAeuL,UAAUy2C,kBAAmB,EAc5C7hD,GAAkBoL,UAAYp7D,OAAOguE,OAAQz4D,EAAe6lD,WAC5DpL,GAAkBoL,UAAU1I,YAAc1C,GAE1CA,GAAkBoL,UAAUhrC,qBAAsB,EAkBlD6/B,GAAcmL,WAEb1I,YAAazC,GAEbpxC,iBAAiB,EAEjBktD,OAAQ,SAAWC,GAelB,IAAM,GAbFhF,IACHmF,UACC1qE,QAAS,IACT5B,KAAM,WACNusE,UAAW,oBAEZhsE,KAAM/C,KAAK+C,KACXP,KAAMxC,KAAKwC,KACXkf,cAGGA,EAAY1hB,KAAK0hB,UAEXxa,EAAI,EAAGyK,EAAI+P,EAAU1b,OAAY2L,EAAJzK,EAAOA,IAAO,CAEpD,GAAI4O,GAAW4L,EAAWxa,GAAIwnE,OAAQC,SAC/B74D,GAASg5D,SAEhBnF,EAAOjoD,UAAUpW,KAAMwK,GAMxB,MAFA6zD,GAAO5zD,QAAU/V,KAAK+V,QAEf4zD,GAIR/sD,MAAO,WAIN,IAAM,GAFF9G,GAAW,GAAI9V,MAAKq1D,YAEdnuD,EAAI,EAAGA,EAAIlH,KAAK0hB,UAAU1b,OAAQkB,IAE3C4O,EAAS4L,UAAUpW,KAAMtL,KAAK0hB,UAAWxa,GAAI0V,QAM9C,OAFA9G,GAASC,QAAU/V,KAAK+V,QAEjBD,IAmHTihB,GAAqBgnC,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACzDhnC,GAAqBgnC,UAAU1I,YAAct+B,GAE7CA,GAAqBgnC,UAAU9pB,wBAAyB,EAExDld,GAAqBgnC,UAAU7rD,KAAO,SAAWmpD,GAoDhD,MAlDAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAKoY,SAAYy6C,SAAY,IAE7B7yD,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OACxB5P,KAAK22C,UAAY0kB,EAAO1kB,UACxB32C,KAAK42C,UAAYykB,EAAOzkB,UAExB52C,KAAKwG,IAAM60D,EAAO70D,IAElBxG,KAAKkzB,SAAWmoC,EAAOnoC,SACvBlzB,KAAKs2C,kBAAoB+kB,EAAO/kB,kBAEhCt2C,KAAK6kB,MAAQw2C,EAAOx2C,MACpB7kB,KAAK8kB,eAAiBu2C,EAAOv2C,eAE7B9kB,KAAK21C,SAASzjC,KAAMmpD,EAAO1lB,UAC3B31C,KAAKmzB,YAAckoC,EAAOloC,YAC1BnzB,KAAK41C,kBAAoBylB,EAAOzlB,kBAEhC51C,KAAK+vB,QAAUsrC,EAAOtrC,QACtB/vB,KAAKy2C,UAAY4kB,EAAO5kB,UAExBz2C,KAAKgwB,UAAYqrC,EAAOrrC,UACxBhwB,KAAK02C,YAAYxkC,KAAMmpD,EAAO3kB,aAE9B12C,KAAKyZ,gBAAkB4hD,EAAO5hD,gBAC9BzZ,KAAK0Z,kBAAoB2hD,EAAO3hD,kBAChC1Z,KAAK2Z,iBAAmB0hD,EAAO1hD,iBAE/B3Z,KAAKozB,aAAeioC,EAAOjoC,aAE3BpzB,KAAKqzB,aAAegoC,EAAOhoC,aAE3BrzB,KAAKwZ,SAAW6hD,EAAO7hD,SAEvBxZ,KAAKglB,OAASq2C,EAAOr2C,OACrBhlB,KAAK62C,gBAAkBwkB,EAAOxkB,gBAE9B72C,KAAKolB,gBAAkBi2C,EAAOj2C,gBAE9BplB,KAAKsY,UAAY+iD,EAAO/iD,UACxBtY,KAAKuY,mBAAqB8iD,EAAO9iD,mBACjCvY,KAAKqlB,iBAAmBg2C,EAAOh2C,iBAC/BrlB,KAAKslB,kBAAoB+1C,EAAO/1C,kBAEhCtlB,KAAKyY,SAAW4iD,EAAO5iD,SACvBzY,KAAK0Y,aAAe2iD,EAAO3iD,aAC3B1Y,KAAK2Y,aAAe0iD,EAAO1iD,aAEpB3Y,MA6BRg3B,GAAqB+mC,UAAYp7D,OAAOguE,OAAQ55C,GAAqBgnC,WACrE/mC,GAAqB+mC,UAAU1I,YAAcr+B,GAE7CA,GAAqB+mC,UAAU5oB,wBAAyB,EAExDne,GAAqB+mC,UAAU7rD,KAAO,SAAWmpD,GAWhD,MATAtkC,IAAqBgnC,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEhDr7D,KAAKoY,SAAY06C,SAAY,IAE7B9yD,KAAKmlB,aAAek2C,EAAOl2C,aAE3BnlB,KAAK82C,UAAYukB,EAAOvkB,UACxB92C,KAAK+2C,mBAAqBskB,EAAOtkB,mBAE1B/2C,MA4GR82B,GAAkBinC,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACtDjnC,GAAkBinC,UAAU1I,YAAcv+B,GAE1CA,GAAkBinC,UAAU/pB,qBAAsB,EAElDld,GAAkBinC,UAAU7rD,KAAO,SAAWmpD,GAgD7C,MA9CAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OACxB5P,KAAKu2C,SAASrkC,KAAMmpD,EAAO9kB,UAC3Bv2C,KAAKw2C,UAAY6kB,EAAO7kB,UAExBx2C,KAAKwG,IAAM60D,EAAO70D,IAElBxG,KAAKkzB,SAAWmoC,EAAOnoC,SACvBlzB,KAAKs2C,kBAAoB+kB,EAAO/kB,kBAEhCt2C,KAAK6kB,MAAQw2C,EAAOx2C,MACpB7kB,KAAK8kB,eAAiBu2C,EAAOv2C,eAE7B9kB,KAAK21C,SAASzjC,KAAMmpD,EAAO1lB,UAC3B31C,KAAKmzB,YAAckoC,EAAOloC,YAC1BnzB,KAAK41C,kBAAoBylB,EAAOzlB,kBAEhC51C,KAAK+vB,QAAUsrC,EAAOtrC,QACtB/vB,KAAKy2C,UAAY4kB,EAAO5kB,UAExBz2C,KAAKgwB,UAAYqrC,EAAOrrC,UACxBhwB,KAAK02C,YAAYxkC,KAAMmpD,EAAO3kB,aAE9B12C,KAAKyZ,gBAAkB4hD,EAAO5hD,gBAC9BzZ,KAAK0Z,kBAAoB2hD,EAAO3hD,kBAChC1Z,KAAK2Z,iBAAmB0hD,EAAO1hD,iBAE/B3Z,KAAK+kB,YAAcs2C,EAAOt2C,YAE1B/kB,KAAKwZ,SAAW6hD,EAAO7hD,SAEvBxZ,KAAKglB,OAASq2C,EAAOr2C,OACrBhlB,KAAKilB,QAAUo2C,EAAOp2C,QACtBjlB,KAAKmlB,aAAek2C,EAAOl2C,aAC3BnlB,KAAKolB,gBAAkBi2C,EAAOj2C,gBAE9BplB,KAAKsY,UAAY+iD,EAAO/iD,UACxBtY,KAAKuY,mBAAqB8iD,EAAO9iD,mBACjCvY,KAAKqlB,iBAAmBg2C,EAAOh2C,iBAC/BrlB,KAAKslB,kBAAoB+1C,EAAO/1C,kBAEhCtlB,KAAKyY,SAAW4iD,EAAO5iD,SACvBzY,KAAK0Y,aAAe2iD,EAAO3iD,aAC3B1Y,KAAK2Y,aAAe0iD,EAAO1iD,aAEpB3Y,MAgCR42B,GAAmBmnC,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACvDnnC,GAAmBmnC,UAAU1I,YAAcz+B,GAE3CA,GAAmBmnC,UAAUzoB,sBAAuB,EAEpD1e,GAAmBmnC,UAAU7rD,KAAO,SAAWmpD,GAO9C,MALAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAKsY,UAAY+iD,EAAO/iD,UACxBtY,KAAKuY,mBAAqB8iD,EAAO9iD,mBAE1BvY,MAoFR62B,GAAoBknC,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACxDlnC,GAAoBknC,UAAU1I,YAAcx+B,GAE5CA,GAAoBknC,UAAU3pB,uBAAwB,EAEtDvd,GAAoBknC,UAAU7rD,KAAO,SAAWmpD,GAoC/C,MAlCAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OAExB5P,KAAKwG,IAAM60D,EAAO70D,IAElBxG,KAAKkzB,SAAWmoC,EAAOnoC,SACvBlzB,KAAKs2C,kBAAoB+kB,EAAO/kB,kBAEhCt2C,KAAK6kB,MAAQw2C,EAAOx2C,MACpB7kB,KAAK8kB,eAAiBu2C,EAAOv2C,eAE7B9kB,KAAK21C,SAASzjC,KAAMmpD,EAAO1lB,UAC3B31C,KAAKmzB,YAAckoC,EAAOloC,YAC1BnzB,KAAK41C,kBAAoBylB,EAAOzlB,kBAEhC51C,KAAK+kB,YAAcs2C,EAAOt2C,YAE1B/kB,KAAKwZ,SAAW6hD,EAAO7hD,SAEvBxZ,KAAKglB,OAASq2C,EAAOr2C,OACrBhlB,KAAKilB,QAAUo2C,EAAOp2C,QACtBjlB,KAAKmlB,aAAek2C,EAAOl2C,aAC3BnlB,KAAKolB,gBAAkBi2C,EAAOj2C,gBAE9BplB,KAAKsY,UAAY+iD,EAAO/iD,UACxBtY,KAAKuY,mBAAqB8iD,EAAO9iD,mBACjCvY,KAAKqlB,iBAAmBg2C,EAAOh2C,iBAC/BrlB,KAAKslB,kBAAoB+1C,EAAO/1C,kBAEhCtlB,KAAKyY,SAAW4iD,EAAO5iD,SACvBzY,KAAK0Y,aAAe2iD,EAAO3iD,aAC3B1Y,KAAK2Y,aAAe0iD,EAAO1iD,aAEpB3Y,MAuCRk3B,GAAmB6mC,UAAYp7D,OAAOguE,OAAQv6D,EAAS2nD,WACvD7mC,GAAmB6mC,UAAU1I,YAAcn+B,GAE3CA,GAAmB6mC,UAAUlpB,sBAAuB,EAEpD3d,GAAmB6mC,UAAU7rD,KAAO,SAAWmpD,GAY9C,MAVAjlD,GAAS2nD,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OAExB5P,KAAKqY,UAAYgjD,EAAOhjD,UAExBrY,KAAK6P,MAAQwrD,EAAOxrD,MACpB7P,KAAKi2C,SAAWolB,EAAOplB,SACvBj2C,KAAKm2C,QAAUklB,EAAOllB,QAEfn2C,KAMR,IAAIy0G,IAAY9xG,OAAO4xG,QACtB/hD,eAAgBA,GAChB9O,eAAgBA,GAChBiP,kBAAmBA,GACnBz6C,eAAgBA,EAChBif,eAAgBA,GAChBy7B,cAAeA,GACf57B,qBAAsBA,GACtBD,qBAAsBA,GACtBD,kBAAmBA,GACnBF,mBAAoBA,GACpBC,oBAAqBA,GACrBxd,kBAAmBA,EACnBuL,kBAAmBA,GACnBsS,mBAAoBA,GACpBD,kBAAmBA,GACnB7gB,SAAUA,GAOX5U,GAAQkzG,OAEPn1F,SAAS,EAETo1F,SAEA5zF,IAAK,SAAW8lC,EAAK+tD,GAEf50G,KAAKuf,WAAY,IAItBvf,KAAK20G,MAAO9tD,GAAQ+tD,IAIrBloF,IAAK,SAAWm6B,GAEf,MAAK7mD,MAAKuf,WAAY,EAIfvf,KAAK20G,MAAO9tD,GAJnB,QAQDozC,OAAQ,SAAWpzC,SAEX7mD,MAAK20G,MAAO9tD,IAIpBhmC,MAAO,WAEN7gB,KAAK20G,WA2EPnzG,EAAQqyD,sBAAwB,GAAId,IAYpCpwD,OAAO+mE,OAAQ/V,GAAUoK,WAExB82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEtB9vD,SAAdpD,KAAKwL,OAAqBgoD,EAAMxzD,KAAKwL,KAAOgoD,EAEjD,IAAI32C,GAAQ7c,KAER80G,EAAStzG,EAAQkzG,MAAMhoF,IAAK8mC,EAEhC,IAAgBpwD,SAAX0xG,EAYJ,MAVAj4F,GAAM+2C,QAAQL,UAAWC,GAEzBuhD,WAAY,WAEN/hD,GAASA,EAAQ8hD,GAEtBj4F,EAAM+2C,QAAQH,QAASD,IAErB,GAEIshD,CAIR,IAAIE,GAAU,GAAIC,eA+DlB,OA9DAD,GAAQE,KAAM,MAAO1hD,GAAK,GAE1BwhD,EAAQh7E,iBAAkB,OAAQ,SAAWf,GAE5C,GAAIk8E,GAAWl8E,EAAM9X,OAAOg0F,QAE5B3zG,GAAQkzG,MAAM3zF,IAAKyyC,EAAK2hD,GAEH,MAAhBn1G,KAAKo1G,QAEJpiD,GAASA,EAAQmiD,GAEtBt4F,EAAM+2C,QAAQH,QAASD,IAEI,IAAhBxzD,KAAKo1G,QAKhBnvG,QAAQgc,KAAM,4CAET+wC,GAASA,EAAQmiD,GAEtBt4F,EAAM+2C,QAAQH,QAASD,KAIlBN,GAAUA,EAASj6B,GAExBpc,EAAM+2C,QAAQF,UAAWF,MAIxB,GAEiBpwD,SAAf6vD,GAEJ+hD,EAAQh7E,iBAAkB,WAAY,SAAWf,GAEhDg6B,EAAYh6B,KAEV,GAIJ+7E,EAAQh7E,iBAAkB,QAAS,SAAWf,GAExCi6B,GAAUA,EAASj6B,GAExBpc,EAAM+2C,QAAQF,UAAWF,KAEvB,GAEwBpwD,SAAtBpD,KAAKq1G,eAA6BL,EAAQK,aAAer1G,KAAKq1G,cACrCjyG,SAAzBpD,KAAK63D,kBAAgCm9C,EAAQn9C,gBAAkB73D,KAAK63D,iBAEpEm9C,EAAQM,kBAAmBN,EAAQM,iBAAkB,cAE1DN,EAAQO,KAAM,MAEd14F,EAAM+2C,QAAQL,UAAWC,GAElBwhD,GAIRQ,QAAS,SAAW3yG,GAGnB,MADA7C,MAAKwL,KAAO3I,EACL7C,MAIRy1G,gBAAiB,SAAW5yG,GAG3B,MADA7C,MAAKq1G,aAAexyG,EACb7C,MAIR01G,mBAAoB,SAAW7yG,GAG9B,MADA7C,MAAK63D,gBAAkBh1D,EAChB7C,QAqBT2C,OAAO+mE,OAAQ5V,GAAwBiK,WAEtC82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAazC,QAASyiD,GAAazuG,GAErB0uG,EAAOf,KAAMrhD,EAAKtsD,GAAK,SAAW2yB,GAEjC,GAAIg8E,GAAWh5F,EAAMk3C,QAASl6B,GAAQ,EAEtCzzB,GAAQc,IACP7G,MAAOw1G,EAASx1G,MAChBC,OAAQu1G,EAASv1G,OACjBiC,OAAQszG,EAAStzG,OACjBe,QAASuyG,EAASvyG,SAGnBwyG,GAAU,EAEM,IAAXA,IAE0B,IAAzBD,EAASE,cACbjxG,EAAQxC,UAAYmB,IAErBqB,EAAQvC,OAASszG,EAAStzG,OAC1BuC,EAAQ+P,aAAc,EAEjBm+C,GAASA,EAAQluD,KAIrBmuD,EAAYC,GAtChB,GAAIr2C,GAAQ7c,KAERoG,KAEAtB,EAAU,GAAIshD,GAClBthD,GAAQ7C,MAAQmE,CAEhB,IAAIwvG,GAAS,GAAIjiD,IAAW3zD,KAAK4zD,QAmCjC,IAlCAgiD,EAAOJ,QAASx1G,KAAKwL,MACrBoqG,EAAOH,gBAAiB,eAiCnB/2F,MAAMgG,QAAS8uC,GAInB,IAAM,GAFFsiD,GAAS,EAEH5uG,EAAI,EAAG2Y,EAAK2zC,EAAIxtD,OAAY6Z,EAAJ3Y,IAAWA,EAE5CyuG,EAAazuG,OAQd0uG,GAAOf,KAAMrhD,EAAK,SAAW35B,GAE5B,GAAIg8E,GAAWh5F,EAAMk3C,QAASl6B,GAAQ,EAEtC,IAAKg8E,EAASG,UAIb,IAAM,GAFF5oG,GAAQyoG,EAASvyG,QAAQ0C,OAAS6vG,EAASE,YAErCn6E,EAAI,EAAOxuB,EAAJwuB,EAAWA,IAAO,CAElCx1B,EAAQw1B,IAAQt4B,WAEhB,KAAM,GAAI4D,GAAI,EAAGA,EAAI2uG,EAASE,YAAa7uG,IAE1Cd,EAAQw1B,GAAIt4B,QAAQgI,KAAMuqG,EAASvyG,QAASs4B,EAAIi6E,EAASE,YAAc7uG,IACvEd,EAAQw1B,GAAIr5B,OAASszG,EAAStzG,OAC9B6D,EAAQw1B,GAAIv7B,MAAQw1G,EAASx1G,MAC7B+F,EAAQw1B,GAAIt7B,OAASu1G,EAASv1G,WAQhCwE,GAAQ7C,MAAM5B,MAAQw1G,EAASx1G,MAC/ByE,EAAQ7C,MAAM3B,OAASu1G,EAASv1G,OAChCwE,EAAQxB,QAAUuyG,EAASvyG,OAIE,KAAzBuyG,EAASE,cAEbjxG,EAAQxC,UAAYmB,IAIrBqB,EAAQvC,OAASszG,EAAStzG,OAC1BuC,EAAQ+P,aAAc,EAEjBm+C,GAASA,EAAQluD,IAEpBmuD,EAAYC,EAIhB,OAAOpuD,IAIR0wG,QAAS,SAAW3yG,GAGnB,MADA7C,MAAKwL,KAAO3I,EACL7C,OAYT,IAAIi2G,IAAoBjiD,EAUxBrxD,QAAO+mE,OAAQ1V,GAAoB+J,WAElC82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEzC,GAAIr2C,GAAQ7c,KAER8E,EAAU,GAAIg/C,IAEd8xD,EAAS,GAAIjiD,IAAW3zD,KAAK4zD,QA2DjC,OA1DAgiD,GAAOH,gBAAiB,eAExBG,EAAOf,KAAMrhD,EAAK,SAAW35B,GAE5B,GAAIq8E,GAAUr5F,EAAMk3C,QAASl6B,EAEtBq8E,KAEF9yG,SAAc8yG,EAAQj0G,MAE1B6C,EAAQ7C,MAAQi0G,EAAQj0G,MAEbmB,SAAc8yG,EAAQ9oF,OAEjCtoB,EAAQ7C,MAAM5B,MAAQ61G,EAAQ71G,MAC9ByE,EAAQ7C,MAAM3B,OAAS41G,EAAQ51G,OAC/BwE,EAAQ7C,MAAMmrB,KAAO8oF,EAAQ9oF,MAI9BtoB,EAAQ3C,MAAQiB,SAAc8yG,EAAQ/zG,MAAQ+zG,EAAQ/zG,MAAQqB,GAC9DsB,EAAQ1C,MAAQgB,SAAc8yG,EAAQ9zG,MAAQ8zG,EAAQ9zG,MAAQoB,GAE9DsB,EAAQzC,UAAYe,SAAc8yG,EAAQ7zG,UAAY6zG,EAAQ7zG,UAAYoB,GAC1EqB,EAAQxC,UAAYc,SAAc8yG,EAAQ5zG,UAAY4zG,EAAQ5zG,UAAYoB,GAE1EoB,EAAQrC,WAAaW,SAAc8yG,EAAQzzG,WAAayzG,EAAQzzG,WAAa,EAExEW,SAAc8yG,EAAQ3zG,SAE1BuC,EAAQvC,OAAS2zG,EAAQ3zG,QAGrBa,SAAc8yG,EAAQ1zG,OAE1BsC,EAAQtC,KAAO0zG,EAAQ1zG,MAInBY,SAAc8yG,EAAQ5yG,UAE1BwB,EAAQxB,QAAU4yG,EAAQ5yG,SAItB,IAAM4yG,EAAQH,cAElBjxG,EAAQxC,UAAYmB,IAIrBqB,EAAQ+P,aAAc,EAEjBm+C,GAASA,EAAQluD,EAASoxG,KAE7BjjD,EAAYC,GAGRpuD,KAgBTnC,OAAO+mE,OAAQzV,GAAY8J,WAE1B82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEzC,GAAIr2C,GAAQ7c,KAERiC,EAAQuS,SAASC,gBAAiB,+BAAgC,MAatE,IAZAxS,EAAMk0G,OAAS,WAEdl0G,EAAMk0G,OAAS,KAEfC,IAAIC,gBAAiBp0G,EAAMq0G,KAEtBtjD,GAASA,EAAQ/wD,GAEtB4a,EAAM+2C,QAAQH,QAASD,IAIQ,IAA3BA,EAAI56B,QAAS,SAEjB32B,EAAMq0G,IAAM9iD,MAEN,CAEN,GAAIoiD,GAAS,GAAIjiD,GACjBiiD,GAAOJ,QAASx1G,KAAKwL,MACrBoqG,EAAOH,gBAAiB,QACxBG,EAAOF,mBAAoB11G,KAAK63D,iBAChC+9C,EAAOf,KAAMrhD,EAAK,SAAW+iD,GAE5Bt0G,EAAMq0G,IAAMF,IAAII,gBAAiBD,IAE/BtjD,EAAYC,GAMhB,MAFAr2C,GAAM+2C,QAAQL,UAAWC,GAElBvxD,GAIRw0G,eAAgB,SAAW5zG,GAG1B,MADA7C,MAAK02G,YAAc7zG,EACZ7C,MAIR01G,mBAAoB,SAAW7yG,GAG9B,MADA7C,MAAK63D,gBAAkBh1D,EAChB7C,MAIRw1G,QAAS,SAAW3yG,GAGnB,MADA7C,MAAKwL,KAAO3I,EACL7C,QAgBT2C,OAAO+mE,OAAQxV,GAAkB6J,WAEhC82C,KAAM,SAAW8B,EAAM3jD,EAAQC,EAAYC,GAU1C,QAASyiD,GAAazuG,GAErB0uG,EAAOf,KAAM8B,EAAMzvG,GAAK,SAAWjF,GAElC6C,EAAQsB,OAAQc,GAAMjF,EAEtB6zG,IAEgB,IAAXA,IAEJhxG,EAAQ+P,aAAc,EAEjBm+C,GAASA,EAAQluD,KAIrB1B,OAAW8vD,GAxBf,GAAIpuD,GAAU,GAAIqB,GAEdyvG,EAAS,GAAI3hD,IAAaj0D,KAAK4zD,QACnCgiD,GAAOa,eAAgBz2G,KAAK02G,aAC5Bd,EAAOJ,QAASx1G,KAAKwL,KAwBrB,KAAM,GAtBFsqG,GAAS,EAsBH5uG,EAAI,EAAGA,EAAIyvG,EAAK3wG,SAAWkB,EAEpCyuG,EAAazuG,EAId,OAAOpC,IAIR2xG,eAAgB,SAAW5zG,GAG1B,MADA7C,MAAK02G,YAAc7zG,EACZ7C,MAIRw1G,QAAS,SAAW3yG,GAGnB,MADA7C,MAAKwL,KAAO3I,EACL7C,QAgBT2C,OAAO+mE,OAAQvV,GAAc4J,WAE5B82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEzC,GAAIpuD,GAAU,GAAI9C,GAEd4zG,EAAS,GAAI3hD,IAAaj0D,KAAK4zD,QAqBnC,OApBAgiD,GAAOa,eAAgBz2G,KAAK02G,aAC5Bd,EAAOF,mBAAoB11G,KAAK63D,iBAChC+9C,EAAOJ,QAASx1G,KAAKwL,MACrBoqG,EAAOf,KAAMrhD,EAAK,SAAWvxD,GAG5B,GAAI20G,GAASpjD,EAAIqjD,OAAQ,iBAAoB,GAA4C,IAAvCrjD,EAAIqjD,OAAQ,qBAE9D/xG,GAAQvC,OAASq0G,EAASx4E,GAAYz6B,GACtCmB,EAAQ7C,MAAQA,EAChB6C,EAAQ+P,aAAc,EAENzR,SAAX4vD,GAEJA,EAAQluD,IAIPmuD,EAAYC,GAERpuD,GAIR2xG,eAAgB,SAAW5zG,GAG1B,MADA7C,MAAK02G,YAAc7zG,EACZ7C,MAIR01G,mBAAoB,SAAW7yG,GAG9B,MADA7C,MAAK63D,gBAAkBh1D,EAChB7C,MAIRw1G,QAAS,SAAW3yG,GAGnB,MADA7C,MAAKwL,KAAO3I,EACL7C,QA0BTo0D,GAAM2J,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAExD1I,YAAajB,GAEbjjB,SAAS,EAETj/B,KAAM,SAAWmpD,GAOhB,MALAv4C,IAASi7C,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEpCr7D,KAAK4P,MAAMsC,KAAMmpD,EAAOzrD,OACxB5P,KAAKo3C,UAAYikB,EAAOjkB,UAEjBp3C,MAIR0uE,OAAQ,SAAWC,GAElB,GAAIvhD,GAAOtK,GAASi7C,UAAU2Q,OAAOvpE,KAAMnF,KAAM2uE,EAcjD,OAZAvhD,GAAKlS,OAAOtL,MAAQ5P,KAAK4P,MAAM01E,SAC/Bl4D,EAAKlS,OAAOk8B,UAAYp3C,KAAKo3C,UAEHh0C,SAArBpD,KAAK+tB,cAA4BX,EAAKlS,OAAO6S,YAAc/tB,KAAK+tB,YAAYu3D,UAE1DliF,SAAlBpD,KAAK0tB,WAAyBN,EAAKlS,OAAOwS,SAAW1tB,KAAK0tB,UAC3CtqB,SAAfpD,KAAKi4C,QAAsB7qB,EAAKlS,OAAO+8B,MAAQj4C,KAAKi4C,OACrC70C,SAAfpD,KAAK6tB,QAAsBT,EAAKlS,OAAO2S,MAAQ7tB,KAAK6tB,OAClCzqB,SAAlBpD,KAAKk4C,WAAyB9qB,EAAKlS,OAAOg9B,SAAWl4C,KAAKk4C,UAE1C90C,SAAhBpD,KAAK+f,SAAuBqN,EAAKlS,OAAO6E,OAAS/f,KAAK+f,OAAO2uD,UAE3DthD,KAyBTinC,GAAgB0J,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQvc,GAAM2J,YAE/D1I,YAAahB,GAEb/b,mBAAmB,EAEnBpmC,KAAM,SAAWmpD,GAMhB,MAJAjH,IAAM2J,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEjCr7D,KAAK+tB,YAAY7b,KAAMmpD,EAAOttC,aAEvB/tB,QAwBT2C,OAAO+mE,OAAQnV,GAAYwJ,WAE1B7rD,KAAM,SAAWmpD,GAShB,MAPAr7D,MAAK2Q,OAAS0qD,EAAO1qD,OAAOiM,QAE5B5c,KAAK83C,KAAOujB,EAAOvjB,KACnB93C,KAAK+Z,OAASshD,EAAOthD,OAErB/Z,KAAKggB,QAAQ9N,KAAMmpD,EAAOr7C,SAEnBhgB,MAIR4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrC0uE,OAAQ,WAEP,GAAIxzD,KASJ,OAPmB,KAAdlb,KAAK83C,OAAa58B,EAAO48B,KAAO93C,KAAK83C,MACrB,IAAhB93C,KAAK+Z,SAAemB,EAAOnB,OAAS/Z,KAAK+Z,SACtB,MAAnB/Z,KAAKggB,QAAQle,GAAgC,MAAnB9B,KAAKggB,QAAQje,KAAYmZ,EAAO8E,QAAUhgB,KAAKggB,QAAQ/Y,WAEtFiU,EAAOvK,OAAS3Q,KAAK2Q,OAAO+9D,QAAQ,GAAQxzD,aACrCA,GAAOvK,OAAO+P,OAEdxF,KAgBTs5C,GAAgBuJ,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQpc,GAAYwJ,YAErE1I,YAAab,GAEbl0C,mBAAmB,EAEnBC,OAAQ,SAAWT,GAElB,GAAI4L,GAA6B,EAAvBlqB,EAAQwB,KAAKyoE,QAAc3rD,EAAMm4B,MACvCtsB,EAAS3rB,KAAKggB,QAAQ3f,MAAQL,KAAKggB,QAAQ1f,OAC3CmV,EAAMqK,EAAM4N,UAAY,IAExB/c,EAAS3Q,KAAK2Q,QAEb+a,IAAQ/a,EAAO+a,KAAOC,IAAWhb,EAAOgb,QAAUlW,IAAQ9E,EAAO8E,OAErE9E,EAAO+a,IAAMA,EACb/a,EAAOgb,OAASA,EAChBhb,EAAO8E,IAAMA,EACb9E,EAAO0P,6BA6CVo0C,GAAUsJ,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQvc,GAAM2J,YAEzD1I,YAAaZ,GAEb1c,aAAa,EAEb7lC,KAAM,SAAWmpD,GAahB,MAXAjH,IAAM2J,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEjCr7D,KAAK0tB,SAAW2tC,EAAO3tC,SACvB1tB,KAAKi4C,MAAQojB,EAAOpjB,MACpBj4C,KAAKk4C,SAAWmjB,EAAOnjB,SACvBl4C,KAAK6tB,MAAQwtC,EAAOxtC,MAEpB7tB,KAAKmhB,OAASk6C,EAAOl6C,OAAOvE,QAE5B5c,KAAK+f,OAASs7C,EAAOt7C,OAAOnD,QAErB5c,QAsCT20D,GAAWoJ,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQvc,GAAM2J,YAE1D1I,YAAaV,GAEbx5C,cAAc,EAEdjJ,KAAM,SAAWmpD,GAShB,MAPAjH,IAAM2J,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEjCr7D,KAAK0tB,SAAW2tC,EAAO3tC,SACvB1tB,KAAK6tB,MAAQwtC,EAAOxtC,MAEpB7tB,KAAK+f,OAASs7C,EAAOt7C,OAAOnD,QAErB5c,QAgBT40D,GAAuBmJ,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQpc,GAAYwJ,YAE5E1I,YAAaT,KAwBdC,GAAiBkJ,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQvc,GAAM2J,YAEhE1I,YAAaR,GAEbnd,oBAAoB,EAEpBxlC,KAAM,SAAWmpD,GAQhB,MANAjH,IAAM2J,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAEjCr7D,KAAKmhB,OAASk6C,EAAOl6C,OAAOvE,QAE5B5c,KAAK+f,OAASs7C,EAAOt7C,OAAOnD,QAErB5c,QAoBT80D,GAAaiJ,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQvc,GAAM2J,YAE5D1I,YAAaP,GAEbrd,gBAAgB,IAUjBj2C,EAAQ00D,gBAGP4gD,WAAY,SAAUpwG,EAAOqwG,EAAMC,GAElC,MAAKx1G,GAAQ00D,eAAe+gD,aAAcvwG,GAElC,GAAIA,GAAM2uD,YAAa3uD,EAAMm0B,SAAUk8E,EAAMC,IAI9CtwG,EAAMw9C,MAAO6yD,EAAMC,IAK3B7gD,aAAc,SAAUzvD,EAAOlE,EAAM00G,GAEpC,OAAOxwG,IACHwwG,GAAcxwG,EAAM2uD,cAAgB7yD,EAAckE,EAEf,gBAA3BlE,GAAKo4B,kBAET,GAAIp4B,GAAMkE,GAIXgY,MAAMq/C,UAAU7Z,MAAM/+C,KAAMuB,IAIpCuwG,aAAc,SAAU/7F,GAEvB,MAAOi8F,aAAYC,OAAQl8F,MACrBA,YAAkBm8F,YAKzBC,iBAAkB,SAAUvhD,GAE3B,QAASwhD,GAAarwG,EAAG+L,GAExB,MAAO8iD,GAAO7uD,GAAM6uD,EAAO9iD,GAM5B,IAAM,GAFFnM,GAAIivD,EAAM/vD,OACVsV,EAAS,GAAIoD,OAAO5X,GACdI,EAAI,EAAGA,IAAMJ,IAAMI,EAAIoU,EAAQpU,GAAMA,CAI/C,OAFAoU,GAAOzF,KAAM0hG,GAENj8F,GAKRk8F,YAAa,SAAUxhD,EAAQzmB,EAAQ7sB,GAKtC,IAAM,GAHF+0F,GAAUzhD,EAAOhwD,OACjBsV,EAAS,GAAI06C,GAAOX,YAAaoiD,GAE3BvwG,EAAI,EAAG6kC,EAAY,EAAGA,IAAc0rE,IAAYvwG,EAIzD,IAAM,GAFFwwG,GAAYh1F,EAAOxb,GAAMqoC,EAEnBt8B,EAAI,EAAGA,IAAMs8B,IAAWt8B,EAEjCqI,EAAQywB,KAAiBiqB,EAAQ0hD,EAAYzkG,EAM/C,OAAOqI,IAKRq8F,YAAa,SAAUC,EAAU7hD,EAAOC,EAAQ6hD,GAI/C,IAFA,GAAI3wG,GAAI,EAAG2/C,EAAM+wD,EAAU,GAEXx0G,SAARyjD,GAAkDzjD,SAA7ByjD,EAAKgxD,IAEjChxD,EAAM+wD,EAAU1wG,IAIjB,IAAa9D,SAARyjD,EAAL,CAEA,GAAIhkD,GAAQgkD,EAAKgxD,EACjB,IAAez0G,SAAVP,EAEL,GAAK6b,MAAMgG,QAAS7hB,IAEnB,EAECA,GAAQgkD,EAAKgxD,GAEEz0G,SAAVP,IAEJkzD,EAAMzqD,KAAMu7C,EAAIyZ,MAChBtK,EAAO1qD,KAAKu+B,MAAOmsB,EAAQnzD,IAI5BgkD,EAAM+wD,EAAU1wG,WAEC9D,SAARyjD,OAEJ,IAAuBzjD,SAAlBP,EAAMoE,SAGjB,EAECpE,GAAQgkD,EAAKgxD,GAEEz0G,SAAVP,IAEJkzD,EAAMzqD,KAAMu7C,EAAIyZ,MAChBz9D,EAAMoE,QAAS+uD,EAAQA,EAAOhwD,SAI/B6gD,EAAM+wD,EAAU1wG,WAEC9D,SAARyjD,OAKV,GAEChkD,GAAQgkD,EAAKgxD,GAEEz0G,SAAVP,IAEJkzD,EAAMzqD,KAAMu7C,EAAIyZ,MAChBtK,EAAO1qD,KAAMzI,IAIdgkD,EAAM+wD,EAAU1wG,WAEC9D,SAARyjD,MA2CbkO,GAAYgJ,WAEX1I,YAAaN,GAEb+iD,SAAU,SAAU5tD,GAEnB,GAAI6tD,GAAK/3G,KAAKg1D,mBACbvD,EAAKzxD,KAAKo1D,aAEV6hC,EAAK8gB,EAAMtmD,GACXulC,EAAK+gB,EAAItmD,EAAK,EAEfumD,GAAmB,CAElBC,EAAM,CAEL,GAAI9rF,EAEJ+rF,GAAa,CAKZC,EAAc,KAAalhB,EAAJ/sC,GAAW,CAEjC,IAAM,GAAIkuD,GAAW3mD,EAAK,IAAM,CAE/B,GAAYruD,SAAP6zF,EAAmB,CAEvB,GAASD,EAAJ9sC,EAAS,KAAMiuD,EAMpB,OAFA1mD,GAAKsmD,EAAG/xG,OACRhG,KAAKo1D,aAAe3D,EACbzxD,KAAKq4G,UAAW5mD,EAAK,EAAGvH,EAAG8sC,GAInC,GAAKvlC,IAAO2mD,EAAW,KAKvB,IAHAphB,EAAKC,EACLA,EAAK8gB,IAAOtmD,GAEHwlC,EAAJ/sC,EAGJ,KAAM+tD,GAOR9rF,EAAQ4rF,EAAG/xG,MACX,MAAMkyG,GAMP,CAAA,GAAShuD,GAAK8sC,EAiDd,KAAMghB,EA7CL,IAAIM,GAAWP,EAAI,EAEVO,GAAJpuD,IAEJuH,EAAK,EACLulC,EAAKshB,EAMN,KAAM,GAAIF,GAAW3mD,EAAK,IAAM,CAE/B,GAAYruD,SAAP4zF,EAKJ,MADAh3F,MAAKo1D,aAAe,EACbp1D,KAAKu4G,aAAc,EAAGruD,EAAG+sC,EAIjC,IAAKxlC,IAAO2mD,EAAW,KAKvB,IAHAnhB,EAAKD,EACLA,EAAK+gB,IAAOtmD,EAAK,GAEZvH,GAAK8sC,EAGT,KAAMihB,GAOR9rF,EAAQslC,EACRA,EAAK,GAaP,KAAatlC,EAALslC,GAAa,CAEpB,GAAI+mD,GAAQ/mD,EAAKtlC,IAAY,CAExB+9B,GAAI6tD,EAAIS,GAEZrsF,EAAQqsF,EAIR/mD,EAAK+mD,EAAM,EAWb,GALAvhB,EAAK8gB,EAAMtmD,GACXulC,EAAK+gB,EAAItmD,EAAK,GAIFruD,SAAP4zF,EAGJ,MADAh3F,MAAKo1D,aAAe,EACbp1D,KAAKu4G,aAAc,EAAGruD,EAAG+sC,EAIjC,IAAY7zF,SAAP6zF,EAIJ,MAFAxlC,GAAKsmD,EAAG/xG,OACRhG,KAAKo1D,aAAe3D,EACbzxD,KAAKq4G,UAAW5mD,EAAK,EAAGulC,EAAI9sC,GAMrClqD,KAAKo1D,aAAe3D,EAEpBzxD,KAAKy4G,iBAAkBhnD,EAAIulC,EAAIC,GAIhC,MAAOj3F,MAAK04G,aAAcjnD,EAAIulC,EAAI9sC,EAAG+sC,IAItCv3B,SAAU,KAKVi5C,oBAEAC,aAAc,WAEb,MAAO54G,MAAK0/D,UAAY1/D,KAAK24G,kBAI9BE,iBAAkB,SAAUxwF,GAS3B,IAAM,GALF/M,GAAStb,KAAKm1D,aACjBa,EAASh2D,KAAKi1D,aACd1lB,EAASvvC,KAAKs1D,UACdzxD,EAASwkB,EAAQknB,EAERroC,EAAI,EAAGA,IAAMqoC,IAAWroC,EAEjCoU,EAAQpU,GAAM8uD,EAAQnyD,EAASqD,EAIhC,OAAOoU,IAMRo9F,aAAc,SAAUjnD,EAAIulC,EAAI9sC,EAAG+sC,GAElC,KAAM,IAAIloE,OAAO,4BAKlB0pF,iBAAkB,SAAUhnD,EAAIulC,EAAIC,MAQrCt0F,OAAO+mE,OAAQ3U,GAAYgJ,WAE1Bw6C,aACCxjD,GAAYgJ,UAAU86C,iBAEvBR,UACCtjD,GAAYgJ,UAAU86C,mBA2BxBtjD,GAAiBwI,UACfp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ5b,GAAYgJ,YAE3C1I,YAAaE,GAEbojD,kBAECt5C,YAAcC,GACdC,UAAYD,IAIbm5C,iBAAkB,SAAUhnD,EAAIulC,EAAIC,GAEnC,GAAI8gB,GAAK/3G,KAAKg1D,mBACb8jD,EAAQrnD,EAAK,EACbsnD,EAAQtnD,EAAK,EAEbunD,EAAQjB,EAAIe,GACZG,EAAQlB,EAAIgB,EAEb,IAAe31G,SAAV41G,EAEJ,OAASh5G,KAAK44G,eAAev5C,aAE5B,IAAKiM,IAGJwtC,EAAQrnD,EACRunD,EAAQ,EAAIhiB,EAAKC,CAEjB,MAED,KAAK1rB,IAGJutC,EAAQf,EAAG/xG,OAAS,EACpBgzG,EAAQhiB,EAAK+gB,EAAIe,GAAUf,EAAIe,EAAQ,EAEvC,MAED,SAGCA,EAAQrnD,EACRunD,EAAQ/hB,EAMX,GAAe7zF,SAAV61G,EAEJ,OAASj5G,KAAK44G,eAAer5C,WAE5B,IAAK+L,IAGJytC,EAAQtnD,EACRwnD,EAAQ,EAAIhiB,EAAKD,CAEjB,MAED,KAAKzrB,IAGJwtC,EAAQ,EACRE,EAAQhiB,EAAK8gB,EAAI,GAAMA,EAAI,EAE3B,MAED,SAGCgB,EAAQtnD,EAAK,EACbwnD,EAAQjiB,EAMX,GAAIkiB,GAAuB,IAAZjiB,EAAKD,GACnBznD,EAASvvC,KAAKs1D,SAEft1D,MAAKw1D,YAAc0jD,GAAWliB,EAAKgiB,GACnCh5G,KAAK01D,YAAcwjD,GAAWD,EAAQhiB,GACtCj3F,KAAKy1D,YAAcqjD,EAAQvpE,EAC3BvvC,KAAK21D,YAAcojD,EAAQxpE,GAI5BmpE,aAAc,SAAUjnD,EAAIulC,EAAI9sC,EAAG+sC,GAuBlC,IAAM,GArBF37E,GAAStb,KAAKm1D,aACjBa,EAASh2D,KAAKi1D,aACd1lB,EAASvvC,KAAKs1D,UAEd6jD,EAAK1nD,EAAKliB,EAAS6pE,EAAKD,EAAK5pE,EAC7B8pE,EAAKr5G,KAAKy1D,YAAc6jD,EAAKt5G,KAAK21D,YAClC4jD,EAAKv5G,KAAKw1D,YAAagkD,EAAKx5G,KAAK01D,YAEjCl9B,GAAM0xB,EAAI8sC,IAASC,EAAKD,GACxB+gB,EAAKv/E,EAAIA,EACTihF,EAAM1B,EAAKv/E,EAIRkhF,GAAWH,EAAOE,EAAgB,EAAIF,EAAQxB,EAAiBwB,EAAO/gF,EACtE69D,GAAO,EAAIkjB,GAAOE,GAAS,KAAO,EAAIF,GAAQxB,IAAW,GAAMwB,GAAO/gF,EAAQ,EAC9E04C,GAAM,GAAKsoC,GAAOC,GAAU,IAAQD,GAAUzB,EAAW,GAAav/E,EACtEmhF,EAAWH,EAAOC,EAAkBD,EAAUzB,EAIxC7wG,EAAI,EAAGA,IAAMqoC,IAAWroC,EAEjCoU,EAAQpU,GACNwyG,EAAK1jD,EAAQqjD,EAAKnyG,GAClBmvF,EAAKrgC,EAAQojD,EAAKlyG,GAClBgqE,EAAKlb,EAAQmjD,EAAKjyG,GAClByyG,EAAK3jD,EAAQsjD,EAAKpyG,EAIrB,OAAOoU,MAkBTs6C,GAAkBmI,UAChBp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ5b,GAAYgJ,YAE3C1I,YAAaO,GAEb8iD,aAAc,SAAUjnD,EAAIulC,EAAI9sC,EAAG+sC,GAYlC,IAAM,GAVF37E,GAAStb,KAAKm1D,aACjBa,EAASh2D,KAAKi1D,aACd1lB,EAASvvC,KAAKs1D,UAEdskD,EAAUnoD,EAAKliB,EACfsqE,EAAUD,EAAUrqE,EAEpBuqE,GAAY5vD,EAAI8sC,IAASC,EAAKD,GAC9B+iB,EAAU,EAAID,EAEL5yG,EAAI,EAAGA,IAAMqoC,IAAWroC,EAEjCoU,EAAQpU,GACN8uD,EAAQ6jD,EAAU3yG,GAAM6yG,EACxB/jD,EAAQ4jD,EAAU1yG,GAAM4yG,CAI3B,OAAOx+F,MAsBTu6C,GAAoBkI,UAClBp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ5b,GAAYgJ,YAE3C1I,YAAaQ,GAEb6iD,aAAc,SAAUjnD,EAAIulC,EAAI9sC,EAAG+sC,GAElC,MAAOj3F,MAAK64G,iBAAkBpnD,EAAK,KAMrC,IAAIuoD,GAEJA,KAEC5jD,eAAgBtwD,aAChBuwD,gBAAiBvwD,aAEjBywD,qBAAsB6U,GAEtB6uC,iCAAkC,SAAU3+F,GAE3C,MAAO,IAAIu6C,IACT71D,KAAK+1D,MAAO/1D,KAAKg2D,OAAQh2D,KAAKk6G,eAAgB5+F,IAIjD6+F,+BAAgC,SAAU7+F,GAEzC,MAAO,IAAIs6C,IACT51D,KAAK+1D,MAAO/1D,KAAKg2D,OAAQh2D,KAAKk6G,eAAgB5+F,IAIjD8+F,+BAAgC,SAAU9+F,GAEzC,MAAO,IAAIi6C,IACTv1D,KAAK+1D,MAAO/1D,KAAKg2D,OAAQh2D,KAAKk6G,eAAgB5+F,IAIjDg7C,iBAAkB,SAAUL,GAE3B,GAAIokD,EAEJ,QAASpkD,GAER,IAAKkV,IAEJkvC,EAAgBr6G,KAAKi6G,gCAErB,MAED,KAAK7uC,IAEJivC,EAAgBr6G,KAAKm6G,8BAErB,MAED,KAAK9uC,IAEJgvC,EAAgBr6G,KAAKo6G,+BAMvB,GAAuBh3G,SAAlBi3G,EAA8B,CAElC,GAAIC,GAAU,iCACZt6G,KAAKu6G,cAAgB,yBAA2Bv6G,KAAKkD,IAEvD,IAAgCE,SAA3BpD,KAAKy/D,kBAAkC,CAG3C,GAAKxJ,IAAkBj2D,KAAKu2D,qBAM3B,KAAM,IAAIxnC,OAAOurF,EAJjBt6G,MAAKs2D,iBAAkBt2D,KAAKu2D,sBAW9B,WADAtwD,SAAQgc,KAAMq4F,GAKft6G,KAAKy/D,kBAAoB46C,GAI1BG,iBAAkB,WAEjB,OAASx6G,KAAKy/D,mBAEb,IAAKz/D,MAAKi6G,iCAET,MAAO9uC,GAER,KAAKnrE,MAAKm6G,+BAET,MAAO/uC,GAER,KAAKprE,MAAKo6G,+BAET,MAAO/uC,MAMV6uC,aAAc,WAEb,MAAOl6G,MAAKg2D,OAAOhwD,OAAShG,KAAK+1D,MAAM/vD,QAKxCy0G,MAAO,SAAUC,GAEhB,GAAmB,IAAfA,EAIH,IAAK,GAFD3kD,GAAQ/1D,KAAK+1D,MAER7uD,EAAI,EAAGJ,EAAIivD,EAAM/vD,OAAQkB,IAAMJ,IAAMI,EAE7C6uD,EAAO7uD,IAAOwzG,CAMhB,OAAO16G,OAKR6P,MAAO,SAAU0wD,GAEhB,GAAkB,IAAdA,EAIH,IAAK,GAFDxK,GAAQ/1D,KAAK+1D,MAER7uD,EAAI,EAAGJ,EAAIivD,EAAM/vD,OAAQkB,IAAMJ,IAAMI,EAE7C6uD,EAAO7uD,IAAOq5D,CAMhB,OAAOvgE,OAMR26G,KAAM,SAAUh/C,EAAWi/C,GAO1B,IALA,GAAI7kD,GAAQ/1D,KAAK+1D,MAChB8kD,EAAQ9kD,EAAM/vD,OACd+wG,EAAO,EACPC,EAAK6D,EAAQ,EAEN9D,IAAS8D,GAAS9kD,EAAOghD,GAASp7C,KAAeo7C,CACzD,MAAe,KAAPC,GAAajhD,EAAOihD,GAAO4D,KAAa5D,CAIhD,MAFGA,EAEU,IAATD,GAAcC,IAAO6D,EAAQ,CAG3B9D,GAAQC,IAAKA,EAAKh0G,KAAK8J,IAAKkqG,EAAK,GAAKD,EAAOC,EAAK,EAEvD,IAAIznE,GAASvvC,KAAKk6G,cAClBl6G,MAAK+1D,MAAQv0D,EAAQ00D,eAAe4gD,WAAY/gD,EAAOghD,EAAMC,GAC7Dh3G,KAAKg2D,OAASx0D,EAAQ00D,eACpB4gD,WAAY92G,KAAKg2D,OAAQ+gD,EAAOxnE,EAAQynE,EAAKznE,GAIhD,MAAOvvC,OAKRw2D,SAAU,WAET,GAAIskD,IAAQ,EAERxlD,EAAYt1D,KAAKk6G,cAChB5kD,GAAYtyD,KAAK6nB,MAAOyqC,KAAgB,IAE5CrvD,QAAQC,MAAO,8BAA+BlG,MAC9C86G,GAAQ,EAIT,IAAI/kD,GAAQ/1D,KAAK+1D,MAChBC,EAASh2D,KAAKg2D,OAEd6kD,EAAQ9kD,EAAM/vD,MAED,KAAV60G,IAEH50G,QAAQC,MAAO,iBAAkBlG,MACjC86G,GAAQ,EAMT,KAAK,GAFDC,GAAW,KAEN7zG,EAAI,EAAGA,IAAM2zG,EAAO3zG,IAAO,CAEnC,GAAI8zG,GAAWjlD,EAAO7uD,EAEtB,IAAyB,gBAAb8zG,IAAyBnY,MAAOmY,GAAa,CAExD/0G,QAAQC,MAAO,6BAA8BlG,KAAMkH,EAAG8zG,GACtDF,GAAQ,CACR,OAID,GAAiB,OAAbC,GAAqBA,EAAWC,EAAW,CAE9C/0G,QAAQC,MAAO,oBAAqBlG,KAAMkH,EAAG8zG,EAAUD,GACvDD,GAAQ,CACR,OAIDC,EAAWC,EAIZ,GAAgB53G,SAAX4yD,GAECx0D,EAAQ00D,eAAe+gD,aAAcjhD,GAEzC,IAAM,GAAI9uD,GAAI,EAAGJ,EAAIkvD,EAAOhwD,OAAQkB,IAAMJ,IAAMI,EAAI,CAEnD,GAAIrE,GAAQmzD,EAAQ9uD,EAEpB,IAAK27F,MAAOhgG,GAAU,CAErBoD,QAAQC,MAAO,8BAA+BlG,KAAMkH,EAAGrE,GACvDi4G,GAAQ,CACR,QAUJ,MAAOA,IAMRrkD,SAAU,WAWT,IAAK,GATDV,GAAQ/1D,KAAK+1D,MAChBC,EAASh2D,KAAKg2D,OACdzmB,EAASvvC,KAAKk6G,eAEde,EAAsBj7G,KAAKw6G,qBAAuBnvC,GAElD6vC,EAAa,EACbvvG,EAAYoqD,EAAM/vD,OAAS,EAEnBkB,EAAI,EAAOyE,EAAJzE,IAAkBA,EAAI,CAErC,GAAIi0G,IAAO,EAEP76C,EAAOvK,EAAO7uD,GACdk0G,EAAWrlD,EAAO7uD,EAAI,EAI1B,IAAKo5D,IAAS86C,IAAoB,IAANl0G,GAAWo5D,IAASA,EAAM,IAErD,GAAO26C,EAsBAE,GAAO,MAdb,KAAM,GAJFt3G,GAASqD,EAAIqoC,EAChB8rE,EAAUx3G,EAAS0rC,EACnB+rE,EAAUz3G,EAAS0rC,EAEVt8B,EAAI,EAAGA,IAAMs8B,IAAWt8B,EAAI,CAErC,GAAIpQ,GAAQmzD,EAAQnyD,EAASoP,EAE7B,IAAKpQ,IAAUmzD,EAAQqlD,EAAUpoG,IAC/BpQ,IAAUmzD,EAAQslD,EAAUroG,GAAM,CAEnCkoG,GAAO,CACP,QAYJ,GAAKA,EAAO,CAEX,GAAKj0G,IAAMg0G,EAAa,CAEvBnlD,EAAOmlD,GAAenlD,EAAO7uD,EAK7B,KAAM,GAHFq0G,GAAar0G,EAAIqoC,EACpBisE,EAAcN,EAAa3rE,EAElBt8B,EAAI,EAAGA,IAAMs8B,IAAWt8B,EAEjC+iD,EAAQwlD,EAAcvoG,GAAM+iD,EAAQulD,EAAatoG,KAIhDioG,GAQL,GAAKvvG,EAAY,EAAI,CAEpBoqD,EAAOmlD,GAAenlD,EAAOpqD,EAE7B,KAAM,GAAI4vG,GAAa5vG,EAAY4jC,EAAQisE,EAAcN,EAAa3rE,EAAQt8B,EAAI,EAAGA,IAAMs8B,IAAWt8B,EAErG+iD,EAAQwlD,EAAcvoG,GAAM+iD,EAAQulD,EAAatoG,KAE/CioG,EAWJ,MAPKA,KAAenlD,EAAM/vD,SAEzBhG,KAAK+1D,MAAQv0D,EAAQ00D,eAAe4gD,WAAY/gD,EAAO,EAAGmlD,GAC1Dl7G,KAAKg2D,OAASx0D,EAAQ00D,eAAe4gD,WAAY9gD,EAAQ,EAAGklD,EAAa3rE,IAInEvvC,OA4CT02D,GAAoBqH,UAClBp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQqpC,KAE/B3kD,YAAaqB,GAEb6jD,cAAe,WAsBhB5jD,GAA4BoH,UAC1Bp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ5b,GAAYgJ,YAE3C1I,YAAasB,GAEb+hD,aAAc,SAAUjnD,EAAIulC,EAAI9sC,EAAG+sC,GAUlC,IAAM,GARF37E,GAAStb,KAAKm1D,aACjBa,EAASh2D,KAAKi1D,aACd1lB,EAASvvC,KAAKs1D,UAEdzxD,EAAS4tD,EAAKliB,EAEd0N,GAAUiN,EAAI8sC,IAASC,EAAKD,GAEnB5yE,EAAMvgB,EAAS0rC,EAAQ1rC,IAAWugB,EAAKvgB,GAAU,EAE1DyB,EAAW8tE,UAAW93D,EAAQ,EAC5B06C,EAAQnyD,EAAS0rC,EAAQymB,EAAQnyD,EAAQo5C,EAI5C,OAAO3hC,MAqBTs7C,GAAwBmH,UACtBp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQqpC,KAE/B3kD,YAAauB,GAEb2jD,cAAe,aAIfhkD,qBAAsB6U,GAEtB+uC,+BAAgC,SAAU7+F,GAEzC,MAAO,IAAIq7C,IACT32D,KAAK+1D,MAAO/1D,KAAKg2D,OAAQh2D,KAAKk6G,eAAgB5+F,IAIjD8+F,+BAAgCh3G,SAmBjCyzD,GAAoBkH,UAClBp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQqpC,KAE/B3kD,YAAawB,GAEb0jD,cAAe,WAwBhBzjD,GAAoBiH,UAClBp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQqpC,KAE/B3kD,YAAayB,GAEbyjD,cAAe,SACflkD,gBAAiB33C,MAEjB63C,qBAAsB4U,GAEtBgvC,+BAAgC/2G,OAEhCg3G,+BAAgCh3G,SAoBjC2zD,GAAqBgH,UACnBp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQqpC,KAE/B3kD,YAAa0B,GAEbwjD,cAAe,OACflkD,gBAAiB33C,MAEjB63C,qBAAsB4U,GAEtBgvC,+BAAgC/2G,OAChCg3G,+BAAgCh3G,SAwBjC4zD,GAAmB+G,UACjBp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQqpC,KAE/B3kD,YAAa2B,GAEbujD,cAAe,UA4BhBtjD,GAAc8G,UAAYi8C,GAC1BA,GAAuB3kD,YAAc4B,GAIrCt0D,OAAO+mE,OAAQzS,IAKdgkC,MAAO,SAAUwgB,GAEhB,GAAkBr4G,SAAdq4G,EAAKj5G,KAER,KAAM,IAAIusB,OAAO,sCAIlB,IAAI2sF,GAAYzkD,GAAc0kD,8BAA+BF,EAAKj5G,KAElE,IAAoBY,SAAfq4G,EAAK1lD,MAAsB,CAE/B,GAAIA,MAAYC,IAEhBx0D,GAAQ00D,eAAeyhD,YAAa8D,EAAK/0D,KAAMqP,EAAOC,EAAQ,SAE9DylD,EAAK1lD,MAAQA,EACb0lD,EAAKzlD,OAASA,EAKf,MAAyB5yD,UAApBs4G,EAAUzgB,MAEPygB,EAAUzgB,MAAOwgB,GAKjB,GAAIC,GACTD,EAAKv4G,KAAMu4G,EAAK1lD,MAAO0lD,EAAKzlD,OAAQylD,EAAKxlD,gBAM7CyY,OAAQ,SAAUktC,GAEjB,GAEIH,GAFAC,EAAYE,EAAMvmD,WAKtB,IAA0BjyD,SAArBs4G,EAAUhtC,OAEd+sC,EAAOC,EAAUhtC,OAAQktC,OAEnB,CAGNH,GAECv4G,KAAQ04G,EAAM14G,KACd6yD,MAASv0D,EAAQ00D,eAAeC,aAAcylD,EAAM7lD,MAAOr3C,OAC3Ds3C,OAAUx0D,EAAQ00D,eAAeC,aAAcylD,EAAM5lD,OAAQt3C,OAI9D,IAAIu3C,GAAgB2lD,EAAMpB,kBAErBvkD,KAAkB2lD,EAAMrlD,uBAE5BklD,EAAKxlD,cAAgBA,GAQvB,MAFAwlD,GAAKj5G,KAAOo5G,EAAMrB,cAEXkB,GAIRE,8BAA+B,SAAU9+C,GAExC,OAAQA,EAASg/C,eAEhB,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,UAEJ,MAAOhlD,GAER,KAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,UAEJ,MAAOH,GAER,KAAK,QAEJ,MAAOM,GAER,KAAK,aAEJ,MAAOJ,GAER,KAAK,OACL,IAAK,UAEJ,MAAOG,GAER,KAAK,SAEJ,MAAOD,IAIT,KAAM,IAAI/nC,OAAO,yBAA2B8tC,MAiC9C3F,GAAc6G,WAEb1I,YAAa6B,GAEbG,cAAe,WAKd,IAAM,GAHFD,GAASp3D,KAAKo3D,OACjBD,EAAW,EAEFjwD,EAAI,EAAGJ,EAAIswD,EAAOpxD,OAAQkB,IAAMJ,IAAMI,EAAI,CAEnD,GAAI00G,GAAQ57G,KAAKo3D,OAAQlwD,EAEzBiwD,GAAWn0D,KAAK8J,IACdqqD,EAAUykD,EAAM7lD,MAAO6lD,EAAM7lD,MAAM/vD,OAAS,IAI/ChG,KAAKm3D,SAAWA,GAIjBwjD,KAAM,WAEL,IAAM,GAAIzzG,GAAI,EAAGA,EAAIlH,KAAKo3D,OAAOpxD,OAAQkB,IAExClH,KAAKo3D,OAAQlwD,GAAIyzG,KAAM,EAAG36G,KAAKm3D,SAIhC,OAAOn3D,OAIRy2D,SAAU,WAET,IAAM,GAAIvvD,GAAI,EAAGA,EAAIlH,KAAKo3D,OAAOpxD,OAAQkB,IAExClH,KAAKo3D,OAAQlwD,GAAIuvD,UAIlB,OAAOz2D,QAQT2C,OAAO+mE,OAAQxS,IAEd+jC,MAAO,SAAUwgB,GAMhB,IAAM,GAJFrkD,MACH0kD,EAAaL,EAAKrkD,OAClB2kD,EAAY,GAAQN,EAAKv2C,KAAO,GAEvBh+D,EAAI,EAAGJ,EAAIg1G,EAAW91G,OAAQkB,IAAMJ,IAAMI,EAEnDkwD,EAAO9rD,KAAM2rD,GAAcgkC,MAAO6gB,EAAY50G,IAAM2I,MAAOksG,GAI5D,OAAO,IAAI7kD,IAAeukD,EAAKv4G,KAAMu4G,EAAKtkD,SAAUC,IAKrDsX,OAAQ,SAAU7P,GAajB,IAAM,GAXFzH,MACH4kD,EAAan9C,EAAKzH,OAEfqkD,GAEHv4G,KAAQ27D,EAAK37D,KACbi0D,SAAY0H,EAAK1H,SACjBC,OAAUA,GAIDlwD,EAAI,EAAGJ,EAAIk1G,EAAWh2G,OAAQkB,IAAMJ,IAAMI,EAEnDkwD,EAAO9rD,KAAM2rD,GAAcyX,OAAQstC,EAAY90G,IAIhD,OAAOu0G,IAKRQ,8BAA+B,SAAU/4G,EAAMg5G,EAAqBh3C,EAAKi3C,GAKxE,IAAM,GAHFC,GAAkBF,EAAoBl2G,OACtCoxD,KAEMlwD,EAAI,EAAOk1G,EAAJl1G,EAAqBA,IAAO,CAE5C,GAAI6uD,MACAC,IAEJD,GAAMzqD,MACFpE,EAAIk1G,EAAkB,GAAMA,EAC9Bl1G,GACEA,EAAI,GAAMk1G,GAEdpmD,EAAO1qD,KAAM,EAAG,EAAG,EAEnB,IAAIoX,GAAQlhB,EAAQ00D,eAAeohD,iBAAkBvhD;AACrDA,EAAQv0D,EAAQ00D,eAAeshD,YAAazhD,EAAO,EAAGrzC,GACtDszC,EAASx0D,EAAQ00D,eAAeshD,YAAaxhD,EAAQ,EAAGtzC,GAIjDy5F,GAAyB,IAAfpmD,EAAO,KAEvBA,EAAMzqD,KAAM8wG,GACZpmD,EAAO1qD,KAAM0qD,EAAQ,KAItBoB,EAAO9rD,KACL,GAAIurD,IACH,0BAA4BqlD,EAAqBh1G,GAAIhE,KAAO,IAC5D6yD,EAAOC,GACNnmD,MAAO,EAAMq1D,IAGlB,MAAO,IAAIhO,IAAeh0D,EAAM,GAAIk0D,IAIrCilD,WAAY,SAAUC,EAAmBp5G,GAExC,GAAIq5G,GAAYD,CAEhB,KAAO59F,MAAMgG,QAAS43F,GAAsB,CAE3C,GAAIt1D,GAAIs1D,CACRC,GAAYv1D,EAAE3rC,UAAY2rC,EAAE3rC,SAASmhG,YAAcx1D,EAAEw1D,WAItD,IAAM,GAAIt1G,GAAI,EAAGA,EAAIq1G,EAAUv2G,OAAQkB,IAEtC,GAAKq1G,EAAWr1G,GAAIhE,OAASA,EAE5B,MAAOq5G,GAAWr1G,EAKpB,OAAO,OAIRu1G,oCAAqC,SAAU/jG,EAAcwsD,EAAKi3C,GAUjE,IAAM,GARFO,MAIAvrF,EAAU,qBAIJjqB,EAAI,EAAG2Y,EAAKnH,EAAa1S,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAEzD,GAAIi7F,GAAczpF,EAAcxR,GAC5By1G,EAAQxa,EAAYj/F,KAAK0I,MAAOulB,EAEpC,IAAKwrF,GAASA,EAAM32G,OAAS,EAAI,CAEhC,GAAI9C,GAAOy5G,EAAO,GAEdC,EAAwBF,EAAyBx5G,EAC9C05G,KAENF,EAAyBx5G,GAAS05G,MAInCA,EAAsBtxG,KAAM62F,IAM9B,GAAI0a,KAEJ,KAAM,GAAI35G,KAAQw5G,GAEjBG,EAAMvxG,KAAM4rD,GAAc+kD,8BAA+B/4G,EAAMw5G,EAAyBx5G,GAAQgiE,EAAKi3C,GAItG,OAAOU,IAKRC,eAAgB,SAAUC,EAAW1mF,GAEpC,IAAO0mF,EAGN,MADA92G,SAAQC,MAAO,qCACR,IAoCR,KAAM,GAhCF82G,GAAmB,SACrBtB,EAAWuB,EAAWC,EAAeC,EAAcC,GAGpD,GAA8B,IAAzBF,EAAcl3G,OAAe,CAEjC,GAAI+vD,MACAC,IAEJx0D,GAAQ00D,eAAeyhD,YACrBuF,EAAennD,EAAOC,EAAQmnD,GAGV,IAAjBpnD,EAAM/vD,QAEVo3G,EAAW9xG,KAAM,GAAIowG,GAAWuB,EAAWlnD,EAAOC,MAQjDoB,KAEAimD,EAAWN,EAAU75G,MAAQ,UAE7Bi0D,EAAW4lD,EAAU/2G,QAAU,GAC/Bk/D,EAAM63C,EAAU73C,KAAO,GAEvBo4C,EAAkBP,EAAUQ,cAEtBr0F,EAAI,EAAGA,EAAIo0F,EAAgBt3G,OAAQkjB,IAAO,CAEnD,GAAIg0F,GAAgBI,EAAiBp0F,GAAIw9B,IAGzC,IAAOw2D,GAA0C,IAAzBA,EAAcl3G,OAItC,GAAKk3G,EAAc,GAAGxkG,aAAe,CAIpC,IAAM,GADF8kG,MACM77F,EAAI,EAAGA,EAAIu7F,EAAcl3G,OAAQ2b,IAE1C,GAAKu7F,EAAcv7F,GAAGjJ,aAErB,IAAM,GAAImzD,GAAI,EAAGA,EAAIqxC,EAAcv7F,GAAGjJ,aAAa1S,OAAQ6lE,IAE1D2xC,EAAkBN,EAAcv7F,GAAGjJ,aAAamzD,IAAO,EAU1D,KAAM,GAAI4xC,KAAmBD,GAAmB,CAK/C,IAAM,GAHFznD,MACAC,KAEM6V,EAAI,EACZA,IAAMqxC,EAAcv7F,GAAGjJ,aAAa1S,SAAW6lE,EAAI,CAEpD,GAAI6xC,GAAeR,EAAcv7F,EAEjCo0C,GAAMzqD,KAAMoyG,EAAap9C,MACzBtK,EAAO1qD,KAAQoyG,EAAavb,cAAgBsb,EAAoB,EAAI,GAIrErmD,EAAO9rD,KAAM,GAAIurD,IACf,yBAA2B4mD,EAAkB,IAAK1nD,EAAOC,IAI5DmB,EAAWqmD,EAAiBx3G,QAAWk/D,GAAO,OAExC,CAGN,GAAIy4C,GAAW,UAAYtnF,EAAOnN,GAAIhmB,KAAO,GAE7C85G,GACEtmD,GAAqBinD,EAAW,YAChCT,EAAe,MAAO9lD,GAExB4lD,EACEpmD,GAAyB+mD,EAAW,cACpCT,EAAe,MAAO9lD,GAExB4lD,EACEtmD,GAAqBinD,EAAW,SAChCT,EAAe,MAAO9lD,IAM1B,GAAuB,IAAlBA,EAAOpxD,OAEX,MAAO,KAIR,IAAI64D,GAAO,GAAI3H,IAAemmD,EAAUlmD,EAAUC,EAElD,OAAOyH,MAiBTl8D,OAAO+mE,OAAQpS,GAAeyG,WAE7B82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEzC,GAAIr2C,GAAQ7c,KAER41G,EAAS,GAAIjiD,IAAW92C,EAAM+2C,QAClCgiD,GAAOf,KAAMrhD,EAAK,SAAW/F,GAE5BuF,EAAQn2C,EAAMo+E,MAAOF,KAAKE,MAAOxtC,MAE/BwF,EAAYC,IAIhB0qD,YAAa,SAAW/6G,GAEvB7C,KAAKm8B,SAAWt5B,GAIjBo4F,MAAO,SAAWwgB,GAIjB,QAASoC,GAAY36G,GAQpB,MAN0BE,UAArB+4B,EAAUj5B,IAEd+C,QAAQgc,KAAM,0CAA2C/e,GAInDi5B,EAAUj5B,GAVlB,GAAIi5B,GAAWn8B,KAAKm8B,SAchBrmB,EAAW,GAAI2+F,IAAWgH,EAAKj5G,KAmDnC,IAjDmBY,SAAdq4G,EAAK14G,OAAqB+S,EAAS/S,KAAO04G,EAAK14G,MACjCK,SAAdq4G,EAAKv4G,OAAqB4S,EAAS5S,KAAOu4G,EAAKv4G,MAChCE,SAAfq4G,EAAK7rG,OAAsBkG,EAASlG,MAAM60E,OAAQg3B,EAAK7rG,OACpCxM,SAAnBq4G,EAAK9kE,YAA0B7gC,EAAS6gC,UAAY8kE,EAAK9kE,WACtCvzC,SAAnBq4G,EAAK7kE,YAA0B9gC,EAAS8gC,UAAY6kE,EAAK7kE,WACvCxzC,SAAlBq4G,EAAK9lE,UAAyB7/B,EAAS6/B,SAAS8uC,OAAQg3B,EAAK9lE,UAC3CvyC,SAAlBq4G,EAAKllE,UAAyBzgC,EAASygC,SAASkuC,OAAQg3B,EAAKllE,UAC1CnzC,SAAnBq4G,EAAKjlE,YAA0B1gC,EAAS0gC,UAAYilE,EAAKjlE,WACvCpzC,SAAlBq4G,EAAKjsG,WAAyBsG,EAAStG,SAAWisG,EAAKjsG,UACjCpM,SAAtBq4G,EAAKzsG,eAA6B8G,EAAS9G,aAAeysG,EAAKzsG,cACvC5L,SAAxBq4G,EAAKvsG,iBAA+B4G,EAAS5G,eAAiBusG,EAAKvsG,gBAC7C9L,SAAtBq4G,EAAK7kG,eAA6Bd,EAASc,aAAe6kG,EAAK7kG,cAClDxT,SAAbq4G,EAAKnmG,MAAoBQ,EAASR,IAAMmmG,EAAKnmG,KAC5BlS,SAAjBq4G,EAAK/kG,UAAwBZ,EAASY,QAAU+kG,EAAK/kG,SACnCtT,SAAlBq4G,EAAKnoG,WAAyBwC,EAASxC,SAAWmoG,EAAKnoG,UACzClQ,SAAdq4G,EAAKjlG,OAAqBV,EAASU,KAAOilG,EAAKjlG,MAC9BpT,SAAjBq4G,EAAK9rG,UAAwBmG,EAASnG,QAAU8rG,EAAK9rG,SAChCvM,SAArBq4G,EAAK3kG,cAA4BhB,EAASgB,YAAc2kG,EAAK3kG,aAC1C1T,SAAnBq4G,EAAKnnG,YAA0BwB,EAASxB,UAAYmnG,EAAKnnG,WACtClR,SAAnBq4G,EAAKvlG,YAA0BJ,EAASI,UAAYulG,EAAKvlG,WACrC9S,SAApBq4G,EAAKtlG,aAA2BL,EAASK,WAAaslG,EAAKtlG,YACvC/S,SAApBq4G,EAAKhkG,aAA2B3B,EAAS2B,WAAagkG,EAAKhkG,YACxCrU,SAAnBq4G,EAAKnjG,YAA0BxC,EAASwC,UAAYmjG,EAAKnjG,WAC7BlV,SAA5Bq4G,EAAKljG,qBAAmCzC,EAASyC,mBAAqBkjG,EAAKljG,oBACjDnV,SAA1Bq4G,EAAKp2F,mBAAiCvP,EAASuP,iBAAmBo2F,EAAKp2F,kBAC5CjiB,SAA3Bq4G,EAAKn2F,oBAAkCxP,EAASwP,kBAAoBm2F,EAAKn2F,mBACvDliB,SAAlBq4G,EAAKhjG,WAAyB3C,EAAS2C,SAAWgjG,EAAKhjG,UACjCrV,SAAtBq4G,EAAK/iG,eAA6B5C,EAAS4C,aAAe+iG,EAAK/iG,cAIjDtV,SAAdq4G,EAAKtxG,OAAqB2L,EAAS3L,KAAOsxG,EAAKtxG,MACtB/G,SAAzBq4G,EAAK9nF,kBAAgC7d,EAAS6d,gBAAkB8nF,EAAK9nF,iBAIxDvwB,SAAbq4G,EAAKj1G,MAAoBsP,EAAStP,IAAMq3G,EAAYpC,EAAKj1G,MAEvCpD,SAAlBq4G,EAAKjiG,WAET1D,EAAS0D,SAAWqkG,EAAYpC,EAAKjiG,UACrC1D,EAASgB,aAAc,GAIF1T,SAAjBq4G,EAAK1rF,UAAwBja,EAASia,QAAU8tF,EAAYpC,EAAK1rF,UAC9C3sB,SAAnBq4G,EAAKhlE,YAA0B3gC,EAAS2gC,UAAYglE,EAAKhlE,WAEtCrzC,SAAnBq4G,EAAKzrF,YAA0Bla,EAASka,UAAY6tF,EAAYpC,EAAKzrF,YAChD5sB,SAArBq4G,EAAK/kE,YAA4B,CAErC,GAAIA,GAAc+kE,EAAK/kE,WAElBh4B,OAAMgG,QAASgyB,MAAkB,IAIrCA,GAAgBA,EAAaA,IAI9B5gC,EAAS4gC,aAAc,GAAI70C,IAAUujD,UAAW1O,GA4BjD,GAxB8BtzC,SAAzBq4G,EAAKhiG,kBAAgC3D,EAAS2D,gBAAkBokG,EAAYpC,EAAKhiG,kBACtDrW,SAA3Bq4G,EAAK/hG,oBAAkC5D,EAAS4D,kBAAoB+hG,EAAK/hG,mBAC/CtW,SAA1Bq4G,EAAK9hG,mBAAiC7D,EAAS6D,iBAAmB8hG,EAAK9hG,kBAEjDvW,SAAtBq4G,EAAKroF,eAA6Btd,EAASsd,aAAeyqF,EAAYpC,EAAKroF,eACrDhwB,SAAtBq4G,EAAKpoF,eAA6Bvd,EAASud,aAAewqF,EAAYpC,EAAKpoF,eAEtDjwB,SAArBq4G,EAAKtoF,cAA4Brd,EAASqd,YAAc0qF,EAAYpC,EAAKtoF,cAC9C/vB,SAA3Bq4G,EAAK7lE,oBAAkC9/B,EAAS8/B,kBAAoB6lE,EAAK7lE,mBAEpDxyC,SAArBq4G,EAAK12F,cAA4BjP,EAASiP,YAAc84F,EAAYpC,EAAK12F,cAEzD3hB,SAAhBq4G,EAAKz2F,SAAuBlP,EAASkP,OAAS64F,EAAYpC,EAAKz2F,SAEzC5hB,SAAtBq4G,EAAKt2F,eAA6BrP,EAASqP,aAAes2F,EAAKt2F,cAE7C/hB,SAAlBq4G,EAAKvoF,WAAyBpd,EAASod,SAAW2qF,EAAYpC,EAAKvoF,WACxC9vB,SAA3Bq4G,EAAKnlE,oBAAkCxgC,EAASwgC,kBAAoBmlE,EAAKnlE,mBAE1DlzC,SAAfq4G,EAAK52F,QAAsB/O,EAAS+O,MAAQg5F,EAAYpC,EAAK52F,QACrCzhB,SAAxBq4G,EAAK32F,iBAA+BhP,EAASgP,eAAiB22F,EAAK32F,gBAIhD1hB,SAAnBq4G,EAAK/5F,UAET,IAAM,GAAIxa,GAAI,EAAGyK,EAAI8pG,EAAK/5F,UAAU1b,OAAY2L,EAAJzK,EAAOA,IAElD4O,EAAS4L,UAAUpW,KAAMtL,KAAKi7F,MAAOwgB,EAAK/5F,UAAWxa,IAMvD,OAAO4O,MAgBTnT,OAAO+mE,OAAQnS,GAAqBwG,WAEnC82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEzC,GAAIr2C,GAAQ7c,KAER41G,EAAS,GAAIjiD,IAAW92C,EAAM+2C,QAClCgiD,GAAOf,KAAMrhD,EAAK,SAAW/F,GAE5BuF,EAAQn2C,EAAMo+E,MAAOF,KAAKE,MAAOxtC,MAE/BwF,EAAYC,IAIhB+nC,MAAO,SAAWwgB,GAEjB,GAAIpgG,GAAW,GAAI+M,IAEfC,EAAQozF,EAAKruF,KAAK/E,MAElBy1F,GACHh4F,UAAaA,UACbE,WAAcA,WACdE,kBAAqBA,kBACrBE,WAAcA,WACd/Y,YAAeA,YACf/F,WAAcA,WACdkf,YAAeA,YACf1gB,aAAgBA,aAChB6gB,aAAgBA,aAGjB,IAAevjB,SAAVilB,EAAsB,CAE1B,GAAI01F,GAAa,GAAID,GAAcz1F,EAAM7lB,MAAQ6lB,EAAM3hB,MACvD2U,GAAS2P,SAAU,GAAIzF,IAAiBw4F,EAAY,IAIrD,GAAI3uG,GAAaqsG,EAAKruF,KAAKhe,UAE3B,KAAM,GAAIy3C,KAAOz3C,GAAa,CAE7B,GAAIuqB,GAAYvqB,EAAYy3C,GACxBk3D,EAAa,GAAID,GAAcnkF,EAAUn3B,MAAQm3B,EAAUjzB,MAE/D2U,GAAS4P,aAAc47B,EAAK,GAAIthC,IAAiBw4F,EAAYpkF,EAAUnU,SAAUmU,EAAUlU,aAI5F,GAAIhE,GAASg6F,EAAKruF,KAAK3L,QAAUg6F,EAAKruF,KAAK4wF,WAAavC,EAAKruF,KAAK6wF,OAElE,IAAgB76G,SAAXqe,EAEJ,IAAM,GAAIva,GAAI,EAAGJ,EAAI2a,EAAOzb,OAAQkB,IAAMJ,IAAMI,EAAI,CAEnD,GAAI2a,GAAQJ,EAAQva,EAEpBmU,GAASsP,SAAU9I,EAAMsC,MAAOtC,EAAMvd,MAAOud,EAAME,eAMrD,GAAIuF,GAAiBm0F,EAAKruF,KAAK9F,cAE/B,IAAwBlkB,SAAnBkkB,EAA+B,CAEnC,GAAIxN,GAAS,GAAInU,EAEcvC,UAA1BkkB,EAAexN,QAEnBA,EAAOsrC,UAAW99B,EAAexN,QAIlCuB,EAASiM,eAAiB,GAAIzN,IAAQC,EAAQwN,EAAevN,QAI9D,MAAOsB,MAkBTm8C,GAAOuG,WAEN1I,YAAamC,GAEbk/C,YAAatzG,OAEb86G,eAAgB,SAAW1qD,GAE1B,GAAImpD,GAAQnpD,EAAIrlC,MAAO,IAEvB,OAAsB,KAAjBwuF,EAAM32G,OAAsB,MAEjC22G,EAAM9jF,MAEC8jF,EAAM1tG,KAAM,KAAQ,MAI5BkvG,cAAe,SAAWz8F,EAAWq2C,EAAa2+C,GAIjD,IAAM,GAFFhwG,MAEMQ,EAAI,EAAGA,EAAIwa,EAAU1b,SAAWkB,EAEzCR,EAAOQ,GAAMlH,KAAKo+G,eAAgB18F,EAAWxa,GAAK6wD,EAAa2+C,EAIhE,OAAOhwG,IAIR03G,eAAgB,WAEf,GAAIxuG,GAAOyuG,EAAeC,CAE1B,OAAO,UAAyBzyC,EAAG9T,EAAa2+C,GAU/C,QAASf,GAAanqG,EAAM1H,EAAQD,EAAQmrE,EAAMvsE,GAEjD,GAGIqC,GAHAy5G,EAAWxmD,EAAcvsD,EACzBoqG,EAASp+C,GAAOgnD,SAAS9xF,IAAK6xF,EAIlB,QAAX3I,EAEJ9wG,EAAU8wG,EAAOf,KAAM0J,IAIvBF,EAAc5H,eAAgBC,GAC9B5xG,EAAUu5G,EAAcxJ,KAAM0J,IAIfn7G,SAAXU,IAEJgB,EAAQhB,OAAOshD,UAAWthD,GAEL,IAAhBA,EAAQ,KAAYgB,EAAQ3C,MAAQs2C,IACpB,IAAhB30C,EAAQ,KAAYgB,EAAQ1C,MAAQq2C,KAI1Br1C,SAAXS,GAEJiB,EAAQjB,OAAOuhD,UAAWvhD,GAIbT,SAAT4rE,IAEe,WAAdA,EAAM,KAAmBlqE,EAAQ3C,MAAQs2C,IAC3B,WAAdu2B,EAAM,KAAmBlqE,EAAQ3C,MAAQw2C,IAE3B,WAAdq2B,EAAM,KAAmBlqE,EAAQ1C,MAAQq2C,IAC3B,WAAdu2B,EAAM,KAAmBlqE,EAAQ1C,MAAQu2C,KAI3Bv1C,SAAfX,IAEJqC,EAAQrC,WAAaA,EAItB,IAAIM,GAAOvB,EAAQwB,KAAKC,cAIxB,OAFAk5B,GAAUp5B,GAAS+B,EAEZ/B,EA7DOK,SAAVwM,IAAsBA,EAAQ,GAAInD,IAChBrJ,SAAlBi7G,IAA8BA,EAAgB,GAAIlqD,KAC/B/wD,SAAnBk7G,IAA+BA,EAAiB,GAAIhnD,IAIzD,IAAIn7B,MA6DAs/E,GACH14G,KAAMvB,EAAQwB,KAAKC,eACnBT,KAAM,sBAGP,KAAM,GAAIU,KAAQ2oE,GAAI,CAErB,GAAIhpE,GAAQgpE,EAAG3oE,EAEf,QAASA,GACR,IAAK,WACL,IAAK,WACL,IAAK,iBACL,IAAK,eACJ,KACD,KAAK,UACJu4G,EAAKv4G,KAAOL,CACZ,MACD,KAAK,WACJ44G,EAAKnoG,SAAWq3D,GAAc9nE,EAC9B,MACD,KAAK,eACL,IAAK,aACJoD,QAAQgc,KAAM,+BAAgC/e,EAAM,0BACpD,MACD,KAAK,eACJu4G,EAAK7rG,MAAQA,EAAMw1C,UAAWviD,GAAQyiF,QACtC,MACD,KAAK,gBACJm2B,EAAKllE,SAAW3mC,EAAMw1C,UAAWviD,GAAQyiF,QACzC,MACD,KAAK,gBACJm2B,EAAK9lE,SAAW/lC,EAAMw1C,UAAWviD,GAAQyiF,QACzC,MACD,KAAK,eACJm2B,EAAKjlE,UAAY3zC,CACjB,MACD,KAAK,UACyB,UAAxBA,EAAMg5G,gBAA4BJ,EAAKj5G,KAAO,qBACtB,UAAxBK,EAAMg5G,gBAA4BJ,EAAKj5G,KAAO,qBACtB,aAAxBK,EAAMg5G,gBAA+BJ,EAAKj5G,KAAO,uBACtD,MACD,KAAK,aACJi5G,EAAKj1G,IAAMmvG,EAAa9yG,EAAOgpE,EAAE4yC,iBAAkB5yC,EAAE6yC,iBAAkB7yC,EAAE8yC,eAAgB9yC,EAAE+yC,qBAC3F,MACD,KAAK,mBACL,IAAK,mBACL,IAAK,iBACL,IAAK,uBACJ,KACD,KAAK,cACJnD,EAAKtoF,YAAcwiF,EAAa9yG,EAAOgpE,EAAEgzC,kBAAmBhzC,EAAEizC,kBAAmBjzC,EAAEkzC,gBAAiBlzC,EAAEmzC,sBACtG,MACD,KAAK,oBACL,IAAK,oBACL,IAAK,kBACL,IAAK,wBACJ,KACD,KAAK,WACJvD,EAAKvoF,SAAWyiF,EAAa9yG,EAAOgpE,EAAEozC,eAAgBpzC,EAAEqzC,eAAgBrzC,EAAEszC,aAActzC,EAAEuzC,mBAC1F,MACD,KAAK,iBACL,IAAK,iBACL,IAAK,eACL,IAAK,qBACJ,KACD,KAAK,QACJ3D,EAAK52F,MAAQ8wF,EAAa9yG,EAAOgpE,EAAEwzC,YAAaxzC,EAAEyzC,YAAazzC,EAAE0zC,UAAW1zC,EAAE2zC,gBAC9E,MACD,KAAK,cACL,IAAK,cACL,IAAK,YACL,IAAK,kBACJ,KACD,KAAK,UACJ/D,EAAK1rF,QAAU4lF,EAAa9yG,EAAOgpE,EAAE4zC,cAAe5zC,EAAE6zC,cAAe7zC,EAAE8zC,YAAa9zC,EAAE+zC,kBACtF,MACD,KAAK,eACJnE,EAAKhlE,UAAY5zC,CACjB,MACD,KAAK,gBACL,IAAK,gBACL,IAAK,cACL,IAAK,oBACJ,KACD,KAAK,YACJ44G,EAAKzrF,UAAY2lF,EAAa9yG,EAAOgpE,EAAEg0C,gBAAiBh0C,EAAEi0C,gBAAiBj0C,EAAEk0C,cAAel0C,EAAEm0C,oBAC9F,MACD,KAAK,kBACJvE,EAAK/kE,aAAgB7zC,EAAOA,EAC5B,MACD,KAAK,kBACL,IAAK,kBACL,IAAK,gBACL,IAAK,sBACJ,KACD,KAAK,cACJ44G,EAAK12F,YAAc4wF,EAAa9yG,EAAOgpE,EAAEo0C,kBAAmBp0C,EAAEq0C,kBAAmBr0C,EAAEs0C,gBAAiBt0C,EAAEu0C,sBACtG,MACD,KAAK,oBACL,IAAK,oBACL,IAAK,kBACL,IAAK,wBACJ,KACD,KAAK,eACJ3E,EAAKpoF,aAAesiF,EAAa9yG,EAAOgpE,EAAEw0C,mBAAoBx0C,EAAEy0C,mBAAoBz0C,EAAE00C,iBAAkB10C,EAAE20C,uBAC1G,MACD,KAAK,qBACL,IAAK,qBACL,IAAK,mBACL,IAAK,yBACJ,KACD,KAAK,eACJ/E,EAAKroF,aAAeuiF,EAAa9yG,EAAOgpE,EAAE40C,mBAAoB50C,EAAE60C,mBAAoB70C,EAAE80C,iBAAkB90C,EAAE+0C,uBAC1G,MACD,KAAK,qBACL,IAAK,qBACL,IAAK,mBACL,IAAK,yBACJ,KACD,KAAK,WACJnF,EAAKjiG,SAAWm8F,EAAa9yG,EAAOgpE,EAAEg1C,eAAgBh1C,EAAEi1C,eAAgBj1C,EAAEk1C,aAAcl1C,EAAEm1C,mBAC1F,MACD,KAAK,iBACL,IAAK,iBACL,IAAK,eACL,IAAK,qBACJ,KACD,KAAK,YACJvF,EAAKjlG,KAAOyG,EACZ,MACD,KAAK,cACJw+F,EAAKjlG,KAAOuG,EACZ,MACD,KAAK,eACJ9W,QAAQgc,KAAM,yEACdw5F,EAAK9rG,QAAU9M,CACf,MACD,KAAK,YACL,IAAK,aACL,IAAK,aACL,IAAK,UACL,IAAK,eACL,IAAK,cACL,IAAK,UACL,IAAK,YACJ44G,EAAMv4G,GAASL,CACf,MACD,KAAK,eACCA,KAAU,IAAO44G,EAAK7kG,aAAeovD,IAC3B,SAAVnjE,IAAmB44G,EAAK7kG,aAAeyvD,GAC5C,MACD,SACCpgE,QAAQC,MAAO,2CAA4ChD,EAAML,IAapE,MAPmB,sBAAd44G,EAAKj5G,YAAsCi5G,GAAK9lE,SAClC,sBAAd8lE,EAAKj5G,YAAsCi5G,GAAKllE,SAEhDklE,EAAK9rG,QAAU,IAAI8rG,EAAK3kG,aAAc,GAE3CwnG,EAAeV,YAAazhF,GAErBmiF,EAAerjB,MAAOwgB,QAQhCjkD,GAAOgnD,UAENyC,YAEAlgG,IAAK,SAAWmgG,EAAOtL,GAEtB51G,KAAKihH,SAAS31G,KAAM41G,EAAOtL,IAI5BlpF,IAAK,SAAWkoF,GAIf,IAAM,GAFFqM,GAAWjhH,KAAKihH,SAEV/5G,EAAI,EAAGyK,EAAIsvG,EAASj7G,OAAY2L,EAAJzK,EAAOA,GAAK,EAAI,CAErD,GAAIg6G,GAAQD,EAAU/5G,GAClB0uG,EAAUqL,EAAU/5G,EAAI,EAE5B,IAAKg6G,EAAMloB,KAAM4b,GAEhB,MAAOgB,GAMT,MAAO,QA0BTjzG,OAAO+mE,OAAQ9R,GAAWmG,WAEzB82C,KAAM,SAAUrhD,EAAKR,EAAQC,EAAYC,GAExC,GAAIr2C,GAAQ7c,KAER+3D,EAAc/3D,KAAK+3D,aAA6C,gBAArB/3D,MAAK+3D,YAA6B/3D,KAAK+3D,YAAcP,GAAOuG,UAAUmgD,eAAgB1qD,GAEjIoiD,EAAS,GAAIjiD,IAAW3zD,KAAK4zD,QACjCgiD,GAAOF,mBAAoB11G,KAAK63D,iBAChC+9C,EAAOf,KAAMrhD,EAAK,SAAW/F,GAE5B,GAAIguD,GAAO1gB,KAAKE,MAAOxtC,GACnBqhB,EAAW2sC,EAAK3sC,QAEpB,IAAkB1rE,SAAb0rE,EAAyB,CAE7B,GAAItsE,GAAOssE,EAAStsE,IAEpB,IAAcY,SAATZ,EAAqB,CAEzB,GAA4B,WAAvBA,EAAKq5G,cAGT,WADA51G,SAAQC,MAAO,qBAAuBstD,EAAM,qDAK7C,IAA4B,UAAvBhxD,EAAKq5G,cAGT,WADA51G,SAAQC,MAAO,qBAAuBstD,EAAM,sDAS/C,GAAIt4C,GAAS2B,EAAMo+E,MAAOwgB,EAAM1jD,EAChC/E,GAAQ93C,EAAOG,SAAUH,EAAOwG,YAE9BuxC,EAAYC,IAIhBiuD,eAAgB,SAAWt+G,GAE1B7C,KAAK+3D,YAAcl1D,GAIpBo4F,MAAO,SAAWwgB,EAAM1jD,GAcvB,QAASqpD,GAAYvxG,GAEpB,QAASwxG,GAAUx+G,EAAOgR,GAEzB,MAAOhR,GAAU,GAAKgR,EAIvB,GAAI3M,GAAG+L,EAAGquG,EAEVz9G,EAAQ09G,EAETC,EAAYC,EAAaC,EAAS3/F,EAEjCvf,EACAm/G,EACA3gB,EACAE,EACAC,EAAeC,EACfC,EAAcC,EAEfjyF,EAAQyR,EAAM8gG,EAAOC,EAAOr8C,EAAKtrD,EAEhC4nG,EAASvyG,EAAI+Z,EAAG5hB,EAEhB0F,EAAQquG,EAAKruG,MACbD,EAAWsuG,EAAKtuG,SAChB8a,EAAUwzF,EAAKxzF,QACfjB,EAASy0F,EAAKz0F,OAEd+6F,EAAY,CAEZ,IAAkB3+G,SAAbq4G,EAAKvzF,IAAoB,CAI7B,IAAMhhB,EAAI,EAAGA,EAAIu0G,EAAKvzF,IAAIliB,OAAQkB,IAE5Bu0G,EAAKvzF,IAAKhhB,GAAIlB,QAAS+7G,GAI7B,KAAM76G,EAAI,EAAO66G,EAAJ76G,EAAeA,IAE3BmU,EAAS4L,cAAe/f,MAS1B,IAHArD,EAAS,EACT09G,EAAUp0G,EAASnH,OAEFu7G,EAAT19G,GAEPwL,EAAS,GAAI1J,GAEb0J,EAAOvN,EAAIqL,EAAUtJ,KAAcgM,EACnCR,EAAOtN,EAAIoL,EAAUtJ,KAAcgM,EACnCR,EAAO7K,EAAI2I,EAAUtJ,KAAcgM,EAEnCwL,EAASlO,SAAS7B,KAAM+D,EAOzB,KAHAxL,EAAS,EACT09G,EAAUn0G,EAAMpH,OAECu7G,EAAT19G,GAeP,GAbArB,EAAO4K,EAAOvJ,KAGd89G,EAAsBN,EAAU7+G,EAAM,GACtCw+F,EAAsBqgB,EAAU7+G,EAAM,GACtC0+F,EAAsBmgB,EAAU7+G,EAAM,GACtC2+F,EAAsBkgB,EAAU7+G,EAAM,GACtC4+F,EAAsBigB,EAAU7+G,EAAM,GACtC6+F,EAAoBggB,EAAU7+G,EAAM,GACpC8+F,EAAsB+f,EAAU7+G,EAAM,GAIjCm/G,EAAS,CA0Bb,GAxBAC,EAAQ,GAAIr9F,IACZq9F,EAAM7sG,EAAI3H,EAAOvJ,GACjB+9G,EAAMv5G,EAAI+E,EAAOvJ,EAAS,GAC1B+9G,EAAMt9F,EAAIlX,EAAOvJ,EAAS,GAE1Bg+G,EAAQ,GAAIt9F,IACZs9F,EAAM9sG,EAAI3H,EAAOvJ,EAAS,GAC1Bg+G,EAAMx5G,EAAI+E,EAAOvJ,EAAS,GAC1Bg+G,EAAMv9F,EAAIlX,EAAOvJ,EAAS,GAE1BA,GAAU,EAELm9F,IAEJj/E,EAAgB3U,EAAOvJ,KACvB+9G,EAAM7/F,cAAgBA,EACtB8/F,EAAM9/F,cAAgBA,GAMvBu/F,EAAKjmG,EAASjO,MAAMpH,OAEfk7F,EAEJ,IAAMh6F,EAAI,EAAO66G,EAAJ76G,EAAeA,IAO3B,IALA46G,EAAUrG,EAAKvzF,IAAKhhB,GAEpBmU,EAAS4L,cAAe/f,GAAKo6G,MAC7BjmG,EAAS4L,cAAe/f,GAAKo6G,EAAK,MAE5BruG,EAAI,EAAO,EAAJA,EAAOA,IAEnByuG,EAAUt0G,EAAOvJ,KAEjBylB,EAAIw4F,EAAmB,EAAVJ,GACbh6G,EAAIo6G,EAAmB,EAAVJ,EAAc,GAE3BnyG,EAAK,GAAI1N,GAASynB,EAAG5hB,GAEV,IAANuL,GAAUoI,EAAS4L,cAAe/f,GAAKo6G,GAAKh2G,KAAMiE,GAC5C,IAAN0D,GAAUoI,EAAS4L,cAAe/f,GAAKo6G,EAAK,GAAIh2G,KAAMiE,EAsB9D,IAdK4xF,IAEJsgB,EAAmC,EAArBr0G,EAAOvJ,KAErB+9G,EAAM1nG,OAAOxN,IACZub,EAASw5F,KACTx5F,EAASw5F,KACTx5F,EAASw5F,IAGVI,EAAM3nG,OAAOhI,KAAM0vG,EAAM1nG,SAIrBknF,EAEJ,IAAMl6F,EAAI,EAAO,EAAJA,EAAOA,IAEnBu6G,EAAmC,EAArBr0G,EAAOvJ,KAErBqW,EAAS,GAAIvU,GACZsiB,EAASw5F,KACTx5F,EAASw5F,KACTx5F,EAASw5F,IAIC,IAANv6G,GAAU06G,EAAMn9F,cAAcnZ,KAAM4O,GAC9B,IAANhT,GAAU26G,EAAMp9F,cAAcnZ,KAAM4O,EAkB3C,IAXKmnF,IAEJmgB,EAAap0G,EAAOvJ,KACpB2hE,EAAMx+C,EAAQw6F,GAEdI,EAAMhyG,MAAM60E,OAAQjf,GACpBq8C,EAAMjyG,MAAM60E,OAAQjf,IAKhB87B,EAEJ,IAAMp6F,EAAI,EAAO,EAAJA,EAAOA,IAEnBs6G,EAAap0G,EAAOvJ,KACpB2hE,EAAMx+C,EAAQw6F,GAEH,IAANt6G,GAAU06G,EAAMhrG,aAAatL,KAAM,GAAImB,GAAO+4D,IACxC,IAANt+D,GAAU26G,EAAMjrG,aAAatL,KAAM,GAAImB,GAAO+4D,GAMrDnqD,GAASjO,MAAM9B,KAAMs2G,GACrBvmG,EAASjO,MAAM9B,KAAMu2G,OAEf,CAkBN,GAhBA/gG,EAAO,GAAIyD,IACXzD,EAAK/L,EAAI3H,EAAOvJ,KAChBid,EAAKzY,EAAI+E,EAAOvJ,KAChBid,EAAKwD,EAAIlX,EAAOvJ,KAEXm9F,IAEJj/E,EAAgB3U,EAAOvJ,KACvBid,EAAKiB,cAAgBA,GAMtBu/F,EAAKjmG,EAASjO,MAAMpH,OAEfk7F,EAEJ,IAAMh6F,EAAI,EAAO66G,EAAJ76G,EAAeA,IAM3B,IAJA46G,EAAUrG,EAAKvzF,IAAKhhB,GAEpBmU,EAAS4L,cAAe/f,GAAKo6G,MAEvBruG,EAAI,EAAO,EAAJA,EAAOA,IAEnByuG,EAAUt0G,EAAOvJ,KAEjBylB,EAAIw4F,EAAmB,EAAVJ,GACbh6G,EAAIo6G,EAAmB,EAAVJ,EAAc,GAE3BnyG,EAAK,GAAI1N,GAASynB,EAAG5hB,GAErB2T,EAAS4L,cAAe/f,GAAKo6G,GAAKh2G,KAAMiE,EAoB3C,IAZK4xF,IAEJsgB,EAAmC,EAArBr0G,EAAOvJ,KAErBid,EAAK5G,OAAOxN,IACXub,EAASw5F,KACTx5F,EAASw5F,KACTx5F,EAASw5F,KAKNrgB,EAEJ,IAAMl6F,EAAI,EAAO,EAAJA,EAAOA,IAEnBu6G,EAAmC,EAArBr0G,EAAOvJ,KAErBqW,EAAS,GAAIvU,GACZsiB,EAASw5F,KACTx5F,EAASw5F,KACTx5F,EAASw5F,IAGV3gG,EAAK2D,cAAcnZ,KAAM4O,EAe3B,IARKmnF,IAEJmgB,EAAap0G,EAAOvJ,KACpBid,EAAKlR,MAAM60E,OAAQz9D,EAAQw6F,KAKvBlgB,EAEJ,IAAMp6F,EAAI,EAAO,EAAJA,EAAOA,IAEnBs6G,EAAap0G,EAAOvJ,KACpBid,EAAKlK,aAAatL,KAAM,GAAImB,GAAOua,EAAQw6F,IAM7CnmG,GAASjO,MAAM9B,KAAMwV,IAQxB,QAASkhG,KAER,GAAIC,GAAqD7+G,SAA7Bq4G,EAAKwG,oBAAsCxG,EAAKwG,oBAAsB,CAElG,IAAKxG,EAAKv0F,YAET,IAAM,GAAIhgB,GAAI,EAAGyK,EAAI8pG,EAAKv0F,YAAYlhB,OAAY2L,EAAJzK,EAAOA,GAAK+6G,EAAsB,CAE/E,GAAIngH,GAAkC25G,EAAKv0F,YAAahgB,GACpDnF,EAAMkgH,EAAsB,EAAMxG,EAAKv0F,YAAahgB,EAAI,GAAM,EAC9D1C,EAAMy9G,EAAsB,EAAMxG,EAAKv0F,YAAahgB,EAAI,GAAM,EAC9D1G,EAAMyhH,EAAsB,EAAMxG,EAAKv0F,YAAahgB,EAAI,GAAM,CAElEmU,GAAS6L,YAAY5b,KAAM,GAAI/G,GAASzC,EAAGC,EAAGyC,EAAGhE,IAMnD,GAAKi7G,EAAKt0F,YAET,IAAM,GAAIjgB,GAAI,EAAGyK,EAAI8pG,EAAKt0F,YAAYnhB,OAAY2L,EAAJzK,EAAOA,GAAK+6G,EAAsB,CAE/E,GAAIltG,GAAkC0mG,EAAKt0F,YAAajgB,GACpDmB,EAAM45G,EAAsB,EAAMxG,EAAKt0F,YAAajgB,EAAI,GAAM,EAC9Dod,EAAM29F,EAAsB,EAAMxG,EAAKt0F,YAAajgB,EAAI,GAAM,EAC9DiiB,EAAM84F,EAAsB,EAAMxG,EAAKt0F,YAAajgB,EAAI,GAAM,CAElEmU,GAAS8L,YAAY7b,KAAM,GAAI/G,GAASwQ,EAAG1M,EAAGic,EAAG6E,IAMnD9N,EAASgb,MAAQolF,EAAKplF,MAEjBhb,EAASgb,OAAShb,EAASgb,MAAMrwB,OAAS,IAAOqV,EAAS6L,YAAYlhB,SAAWqV,EAAS8L,YAAYnhB,QAAUqV,EAAS8L,YAAYnhB,SAAWqV,EAASlO,SAASnH,SAEtKC,QAAQgc,KAAM,sCAAwC5G,EAASlO,SAASnH,OAAS,mBAChFqV,EAAS8L,YAAYnhB,OAAS,uBAAyBqV,EAAS6L,YAAYlhB,OAAS,mBAMxF,QAASk8G,GAAeryG,GAEvB,GAA2BzM,SAAtBq4G,EAAK/iG,aAET,IAAM,GAAIxR,GAAI,EAAGyK,EAAI8pG,EAAK/iG,aAAa1S,OAAY2L,EAAJzK,EAAOA,IAAO,CAE5DmU,EAAS3C,aAAcxR,MACvBmU,EAAS3C,aAAcxR,GAAIhE,KAAOu4G,EAAK/iG,aAAcxR,GAAIhE,KACzDmY,EAAS3C,aAAcxR,GAAIiG,WAK3B,KAAM,GAHFg1G,GAAc9mG,EAAS3C,aAAcxR,GAAIiG,SACzCi1G,EAAc3G,EAAK/iG,aAAcxR,GAAIiG,SAE/BzF,EAAI,EAAGw2F,EAAKkkB,EAAYp8G,OAAYk4F,EAAJx2F,EAAQA,GAAK,EAAI,CAE1D,GAAI2H,GAAS,GAAI1J,EACjB0J,GAAOvN,EAAIsgH,EAAa16G,GAAMmI,EAC9BR,EAAOtN,EAAIqgH,EAAa16G,EAAI,GAAMmI,EAClCR,EAAO7K,EAAI49G,EAAa16G,EAAI,GAAMmI,EAElCsyG,EAAY72G,KAAM+D,IAQrB,GAA0BjM,SAArBq4G,EAAK4G,aAA6B5G,EAAK4G,YAAYr8G,OAAS,EAAI,CAEpEC,QAAQgc,KAAM,kFAKd,KAAM,GAHF7U,GAAQiO,EAASjO,MACjBi1G,EAAc5G,EAAK4G,YAAa,GAAIr7F,OAE9B9f,EAAI,EAAGyK,EAAIvE,EAAMpH,OAAY2L,EAAJzK,EAAOA,IAEzCkG,EAAOlG,GAAI0I,MAAMw1C,UAAWi9D,EAAiB,EAAJn7G,IAQ5C,QAASo7G,KAER,GAAIC,MAGA/F,IAEoBp5G,UAAnBq4G,EAAKsB,WAETP,EAAWlxG,KAAMmwG,EAAKsB,WAIE35G,SAApBq4G,EAAKe,aAEJf,EAAKe,WAAWx2G,OAEpBw2G,EAAaA,EAAW3N,OAAQ4M,EAAKe,YAIrCA,EAAWlxG,KAAMmwG,EAAKe,YAMxB,KAAM,GAAIt1G,GAAI,EAAGA,EAAIs1G,EAAWx2G,OAAQkB,IAAO,CAE9C,GAAI23D,GAAO3H,GAAc4lD,eAAgBN,EAAYt1G,GAAKmU,EAASgb,MAC9DwoC,IAAO0jD,EAAiBj3G,KAAMuzD,GAKpC,GAAKxjD,EAAS3C,aAAe,CAG5B,GAAI8pG,GAAsBtrD,GAAculD,oCAAqCphG,EAAS3C,aAAc,GACpG6pG,GAAmBA,EAAiB1T,OAAQ2T,GAIxCD,EAAiBv8G,OAAS,IAAIqV,EAASmhG,WAAa+F,GA7b1D,GAAIlnG,GAAW,GAAIyL,IACnBjX,EAAyBzM,SAAfq4G,EAAK5rG,MAAwB,EAAM4rG,EAAK5rG,MAAQ,CAgc1D,IA9bAuxG,EAAYvxG,GAEZmyG,IACAE,EAAeryG,GACfyyG,IAEAjnG,EAAS6sC,qBACT7sC,EAASo1B,wBAubertC,SAAnBq4G,EAAK/5F,WAAqD,IAA1B+5F,EAAK/5F,UAAU1b,OAEnD,OAASqV,SAAUA,EAInB,IAAIqG,GAAY81C,GAAOuG,UAAUogD,cAAe1C,EAAK/5F,UAAWq2C,EAAa/3D,KAAK02G,YAElF,QAASr7F,SAAUA,EAAUqG,UAAWA,MAmB3C/e,OAAO+mE,OAAQ5R,GAAaiG,WAE3B82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEf,KAArBlzD,KAAK+3D,cAET/3D,KAAK+3D,YAAcvE,EAAIivD,UAAW,EAAGjvD,EAAIkvD,YAAa,KAAQ,GAI/D,IAAI7lG,GAAQ7c,KAER41G,EAAS,GAAIjiD,IAAW92C,EAAM+2C,QAClCgiD,GAAOf,KAAMrhD,EAAK,SAAW/F,GAE5B5wC,EAAMo+E,MAAOF,KAAKE,MAAOxtC,GAAQuF,IAE/BC,EAAYC,IAIhBiuD,eAAgB,SAAWt+G,GAE1B7C,KAAK+3D,YAAcl1D,GAIpB4zG,eAAgB,SAAW5zG,GAE1B7C,KAAK02G,YAAc7zG,GAIpBo4F,MAAO,SAAWwgB,EAAMzoD,GAEvB,GAAI75B,GAAan5B,KAAK2iH,gBAAiBlH,EAAKtiF,YAExC/yB,EAASpG,KAAK4iH,YAAanH,EAAKr1G,OAAQ,WAE3BhD,SAAX4vD,GAAuBA,EAAQ93C,KAIjCihB,EAAYn8B,KAAK6iH,cAAepH,EAAKt/E,SAAU/1B,GAC/Csb,EAAY1hB,KAAK8iH,eAAgBrH,EAAK/5F,UAAWya,GAEjDjhB,EAASlb,KAAK+iH,YAAatH,EAAKvgG,OAAQie,EAAYzX,EAcxD,OAZK+5F,GAAKe,aAETthG,EAAOshG,WAAax8G,KAAKsiH,gBAAiB7G,EAAKe,cAI3Bp5G,SAAhBq4G,EAAKr1G,QAA+C,IAAvBq1G,EAAKr1G,OAAOJ,SAE7B5C,SAAX4vD,GAAuBA,EAAQ93C,GAI9BA,GAIRynG,gBAAiB,SAAWlH,GAE3B,GAAItiF,KAEJ,IAAc/1B,SAATq4G,EAKJ,IAAM,GAHFuH,GAAiB,GAAIprD,IACrBqrD,EAAuB,GAAI1rD,IAErBrwD,EAAI,EAAGyK,EAAI8pG,EAAKz1G,OAAY2L,EAAJzK,EAAOA,IAAO,CAE/C,GAAImU,GACA+R,EAAOquF,EAAMv0G,EAEjB,QAASkmB,EAAK5qB,MAEb,IAAK,gBACL,IAAK,sBAEJ6Y,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAK/sB,MACL+sB,EAAK9sB,OACL8sB,EAAKtE,cACLsE,EAAKrE,eAGN,MAED,KAAK,cACL,IAAK,oBACL,IAAK,eAEJ1N,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAK/sB,MACL+sB,EAAK9sB,OACL8sB,EAAKvE,MACLuE,EAAKtE,cACLsE,EAAKrE,eACLqE,EAAKpE,cAGN,MAED,KAAK,iBACL,IAAK,uBAEJ3N,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAKrT,OACLqT,EAAKi9B,SACLj9B,EAAKihC,WACLjhC,EAAKkhC,YAGN,MAED,KAAK,mBACL,IAAK,yBAEJjzC,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAKyjC,UACLzjC,EAAK0jC,aACL1jC,EAAK9sB,OACL8sB,EAAKk9B,eACLl9B,EAAKrE,eACLqE,EAAK2jC,UACL3jC,EAAKihC,WACLjhC,EAAKkhC,YAGN,MAED,KAAK,eACL,IAAK,qBAEJjzC,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAKrT,OACLqT,EAAK9sB,OACL8sB,EAAKk9B,eACLl9B,EAAKrE,eACLqE,EAAK2jC,UACL3jC,EAAKihC,WACLjhC,EAAKkhC,YAGN,MAED,KAAK,iBACL,IAAK,uBAEJjzC,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAKrT,OACLqT,EAAKtE,cACLsE,EAAKrE,eACLqE,EAAK+gC,SACL/gC,EAAKghC,UACLhhC,EAAKihC,WACLjhC,EAAKkhC,YAGN,MAED,KAAK,uBACL,IAAK,sBACL,IAAK,qBACL,IAAK,sBAEJjzC,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAKrT,OACLqT,EAAKi7B,OAGN,MAED,KAAK,eACL,IAAK,qBAEJhtC,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAK4hC,YACL5hC,EAAK6hC,YACL7hC,EAAK8hC,cACL9hC,EAAK+hC,YACL/hC,EAAKihC,WACLjhC,EAAKkhC,YAGN,MAED,KAAK,gBACL,IAAK,sBAEJjzC,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAKrT,OACLqT,EAAKu+B,KACLv+B,EAAKk9B,eACLl9B,EAAKw+B,gBACLx+B,EAAK+/B,IAGN,MAED,KAAK,oBACL,IAAK,0BAEJ9xC,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAKrT,OACLqT,EAAKu+B,KACLv+B,EAAKw+B,gBACLx+B,EAAKk9B,eACLl9B,EAAKoL,EACLpL,EAAKy+B,EAGN,MAED,KAAK,gBACL,IAAK,sBAEJxwC,EAAW,GAAIi5F,IAAYlnF,EAAK5qB,MAC/B4qB,EAAKkxB,OACLlxB,EAAKi9B,SACLj9B,EAAK+gC,SACL/gC,EAAKghC,UAGN,MAED,KAAK,iBAEJ/yC,EAAW4nG,EAAqBhoB,MAAO7tE,EAEvC,MAED,KAAK,WAEJ/R,EAAW2nG,EAAe/nB,MAAO7tE,EAAKA,KAAMptB,KAAK+3D,aAAc18C,QAE/D,MAED,SAECpV,QAAQgc,KAAM,kDAAoDmL,EAAK5qB,KAAO,IAE9E,UAIF6Y,EAAStY,KAAOqqB,EAAKrqB,KAEFK,SAAdgqB,EAAKlqB,OAAqBmY,EAASnY,KAAOkqB,EAAKlqB,MAEpDi2B,EAAY/L,EAAKrqB,MAASsY,EAM5B,MAAO8d,IAIR2pF,eAAgB,SAAWrH,EAAMt/E,GAEhC,GAAIza,KAEJ,IAActe,SAATq4G,EAAqB,CAEzB,GAAI7F,GAAS,GAAIt+C,GACjBs+C,GAAOgI,YAAazhF,EAEpB,KAAM,GAAIj1B,GAAI,EAAGyK,EAAI8pG,EAAKz1G,OAAY2L,EAAJzK,EAAOA,IAAO,CAE/C,GAAI4O,GAAW8/F,EAAO3a,MAAOwgB,EAAMv0G,GACnCwa,GAAW5L,EAAS/S,MAAS+S,GAM/B,MAAO4L,IAIR4gG,gBAAiB,SAAW7G,GAI3B,IAAM,GAFFe,MAEMt1G,EAAI,EAAGA,EAAIu0G,EAAKz1G,OAAQkB,IAAO,CAExC,GAAI23D,GAAO3H,GAAc+jC,MAAOwgB,EAAMv0G,GAEtCs1G,GAAWlxG,KAAMuzD,GAIlB,MAAO29C,IAIRoG,YAAa,SAAWnH,EAAMzoD,GAK7B,QAASkwD,GAAW1vD,GAInB,MAFA32C,GAAM+2C,QAAQL,UAAWC,GAElBoiD,EAAOf,KAAMrhD,EAAK,WAExB32C,EAAM+2C,QAAQH,QAASD,IAErBpwD,OAAW,WAEbyZ,EAAM+2C,QAAQF,UAAWF,KAb3B,GAAI32C,GAAQ7c,KACRoG,IAkBJ,IAAchD,SAATq4G,GAAsBA,EAAKz1G,OAAS,EAAI,CAE5C,GAAI4tD,GAAU,GAAIb,IAAgBC,GAE9B4iD,EAAS,GAAI3hD,IAAaL,EAC9BgiD,GAAOa,eAAgBz2G,KAAK02G,YAE5B,KAAM,GAAIxvG,GAAI,EAAGyK,EAAI8pG,EAAKz1G,OAAY2L,EAAJzK,EAAOA,IAAO,CAE/C,GAAIjF,GAAQw5G,EAAMv0G,GACdsE,EAAO,4BAA4BwtF,KAAM/2F,EAAMuxD,KAAQvxD,EAAMuxD,IAAM32C,EAAMk7C,YAAc91D,EAAMuxD,GAEjGptD,GAAQnE,EAAMc,MAASmgH,EAAW13G,IAMpC,MAAOpF,IAIRy8G,cAAe,SAAWpH,EAAMr1G,GAE/B,QAAS+8G,GAAetgH,EAAOL,GAE9B,MAAyB,gBAApB,GAAsCK,GAE3CoD,QAAQgc,KAAM,uEAAwEpf,GAE/EL,EAAMK,IAId,GAAIs5B,KAEJ,IAAc/4B,SAATq4G,EAEJ,IAAM,GAAIv0G,GAAI,EAAGyK,EAAI8pG,EAAKz1G,OAAY2L,EAAJzK,EAAOA,IAAO,CAE/C,GAAIkmB,GAAOquF,EAAMv0G,EAEG9D,UAAfgqB,EAAKnrB,OAETgE,QAAQgc,KAAM,+CAAgDmL,EAAKrqB,MAItCK,SAAzBgD,EAAQgnB,EAAKnrB,QAEjBgE,QAAQgc,KAAM,sCAAuCmL,EAAKnrB,MAI3D,IAAI6C,GAAU,GAAI9C,GAASoE,EAAQgnB,EAAKnrB,OACxC6C,GAAQ+P,aAAc,EAEtB/P,EAAQ/B,KAAOqqB,EAAKrqB,KAEDK,SAAdgqB,EAAKlqB,OAAqB4B,EAAQ5B,KAAOkqB,EAAKlqB,MAE7BE,SAAjBgqB,EAAKlrB,UAAwB4C,EAAQ5C,QAAUihH,EAAe/1F,EAAKlrB,QAAS2oE,KAE5DznE,SAAhBgqB,EAAKvpB,QAAuBiB,EAAQjB,OAAOuhD,UAAWh4B,EAAKvpB,QAC3CT,SAAhBgqB,EAAKtpB,QAAuBgB,EAAQhB,OAAOshD,UAAWh4B,EAAKtpB,QAC7CV,SAAdgqB,EAAK4hD,OAETlqE,EAAQ3C,MAAQghH,EAAe/1F,EAAK4hD,KAAM,GAAKlE,IAC/ChmE,EAAQ1C,MAAQ+gH,EAAe/1F,EAAK4hD,KAAM,GAAKlE,KAIxB1nE,SAAnBgqB,EAAK9qB,YAA0BwC,EAAQxC,UAAY6gH,EAAe/1F,EAAK9qB,UAAWyoE,KAC/D3nE,SAAnBgqB,EAAK/qB,YAA0ByC,EAAQzC,UAAY8gH,EAAe/1F,EAAK/qB,UAAW0oE,KAC9D3nE,SAApBgqB,EAAK3qB,aAA2BqC,EAAQrC,WAAa2qB,EAAK3qB,YAE3CW,SAAfgqB,EAAKnpB,QAAsBa,EAAQb,MAAQmpB,EAAKnpB,OAErDk4B,EAAU/O,EAAKrqB,MAAS+B,EAM1B,MAAOq3B,IAIR4mF,YAAa,WAEZ,GAAIriG,GAAS,GAAI9a,EAEjB,OAAO,UAAsBwnB,EAAM+L,EAAYzX,GAI9C,QAAS0hG,GAAalgH,GAQrB,MAN4BE,UAAvB+1B,EAAYj2B,IAEhB+C,QAAQgc,KAAM,yCAA0C/e,GAIlDi2B,EAAYj2B,GAIpB,QAASmgH,GAAangH,GAErB,MAAcE,UAATF,EAA4BE,QAENA,SAAtBse,EAAWxe,IAEf+C,QAAQgc,KAAM,yCAA0C/e,GAIlDwe,EAAWxe,IAxBnB,GAAIgY,EA4BJ,QAASkS,EAAK5qB,MAEb,IAAK,QAEJ0Y,EAAS,GAAIsoC,IAEYpgD,SAApBgqB,EAAKm1B,YAEJgnB,OAAO+5C,UAAWl2F,EAAKm1B,cAE3BrnC,EAAOqnC,WAAa,GAAI91C,GAAO2gB,EAAKm1B,aAMpBn/C,SAAbgqB,EAAK9X,MAEc,QAAlB8X,EAAK9X,IAAI9S,KAEb0Y,EAAO5F,IAAM,GAAIiuC,IAAKn2B,EAAK9X,IAAI1F,MAAOwd,EAAK9X,IAAIE,KAAM4X,EAAK9X,IAAIG,KAEjC,YAAlB2X,EAAK9X,IAAI9S,OAEpB0Y,EAAO5F,IAAM,GAAIguC,IAASl2B,EAAK9X,IAAI1F,MAAOwd,EAAK9X,IAAIK,UAMrD,MAED,KAAK,oBAEJuF,EAAS,GAAIuQ,IAAmB2B,EAAK1B,IAAK0B,EAAKzB,OAAQyB,EAAK5X,KAAM4X,EAAK3X,KAEnDrS,SAAfgqB,EAAKvB,QAAsB3Q,EAAO2Q,MAAQuB,EAAKvB,OACjCzoB,SAAdgqB,EAAKxB,OAAqB1Q,EAAO0Q,KAAOwB,EAAKxB,MAC1BxoB,SAAnBgqB,EAAKrB,YAA0B7Q,EAAO6Q,UAAYqB,EAAKrB,WACnC3oB,SAApBgqB,EAAKpB,aAA2B9Q,EAAO8Q,WAAaoB,EAAKpB,YAC3C5oB,SAAdgqB,EAAKtB,OAAqB5Q,EAAO4Q,KAAOnpB,OAAO+mE,UAAYt8C,EAAKtB,MAErE,MAED,KAAK,qBAEJ5Q,EAAS,GAAI+Q,IAAoBmB,EAAKlB,KAAMkB,EAAKjB,MAAOiB,EAAKhB,IAAKgB,EAAKf,OAAQe,EAAK5X,KAAM4X,EAAK3X,IAE/F,MAED,KAAK,eAEJyF,EAAS,GAAI45C,IAAc1nC,EAAKxd,MAAOwd,EAAKgqB,UAE5C,MAED,KAAK,mBAEJl8B,EAAS,GAAI25C,IAAkBznC,EAAKxd,MAAOwd,EAAKgqB,UAEhD,MAED,KAAK,aAEJl8B,EAAS,GAAIy5C,IAAYvnC,EAAKxd,MAAOwd,EAAKgqB,UAAWhqB,EAAKM,SAAUN,EAAKS,MAEzE,MAED,KAAK,YAEJ3S,EAAS,GAAIu5C,IAAWrnC,EAAKxd,MAAOwd,EAAKgqB,UAAWhqB,EAAKM,SAAUN,EAAK6qB,MAAO7qB,EAAK8qB,SAAU9qB,EAAKS,MAEnG,MAED,KAAK,kBAEJ3S,EAAS,GAAIm5C,IAAiBjnC,EAAKxd,MAAOwd,EAAKW,YAAaX,EAAKgqB,UAEjE,MAED,KAAK,OAEJ,GAAI/7B,GAAW+nG,EAAah2F,EAAK/R,UAC7BvF,EAAWutG,EAAaj2F,EAAKtX,SAIhCoF,GAFIG,EAASgb,OAAShb,EAASgb,MAAMrwB,OAAS,EAErC,GAAI8+C,IAAazpC,EAAUvF,GAI3B,GAAIyS,IAAMlN,EAAUvF,EAI9B,MAED,KAAK,MAEJoF,EAAS,GAAI0oC,GAEb,MAED,KAAK,OAEJ1oC,EAAS,GAAIyqC,IAAMy9D,EAAah2F,EAAK/R,UAAYgoG,EAAaj2F,EAAKtX,UAAYsX,EAAKX,KAEpF,MAED,KAAK,eAEJvR,EAAS,GAAI0qC,IAAcw9D,EAAah2F,EAAK/R,UAAYgoG,EAAaj2F,EAAKtX,UAE3E,MAED,KAAK,aACL,IAAK,SAEJoF,EAAS,GAAI2qC,IAAQu9D,EAAah2F,EAAK/R,UAAYgoG,EAAaj2F,EAAKtX,UAErE,MAED,KAAK,SAEJoF,EAAS,GAAIyoC,IAAQ0/D,EAAaj2F,EAAKtX,UAEvC,MAED,KAAK,QAEJoF,EAAS,GAAI4qC,GAEb,MAED,SAEC5qC,EAAS,GAAI4H,IAoCf,GAhCA5H,EAAOnY,KAAOqqB,EAAKrqB,KAEAK,SAAdgqB,EAAKlqB,OAAqBgY,EAAOhY,KAAOkqB,EAAKlqB,MAC7BE,SAAhBgqB,EAAK1M,QAETA,EAAO0kC,UAAWh4B,EAAK1M,QACvBA,EAAO1K,UAAWkF,EAAOrH,SAAUqH,EAAO8H,WAAY9H,EAAOrL,SAItCzM,SAAlBgqB,EAAKvZ,UAAyBqH,EAAOrH,SAASuxC,UAAWh4B,EAAKvZ,UAC5CzQ,SAAlBgqB,EAAKtd,UAAyBoL,EAAOpL,SAASs1C,UAAWh4B,EAAKtd,UAC1C1M,SAApBgqB,EAAKpK,YAA2B9H,EAAO8H,WAAWoiC,UAAWh4B,EAAKpK,YACnD5f,SAAfgqB,EAAKvd,OAAsBqL,EAAOrL,MAAMu1C,UAAWh4B,EAAKvd,QAIrCzM,SAApBgqB,EAAK1P,aAA2BxC,EAAOwC,WAAa0P,EAAK1P,YAClCta,SAAvBgqB,EAAKtJ,gBAA8B5I,EAAO4I,cAAgBsJ,EAAKtJ,eAE/DsJ,EAAKrN,SAEiB3c,SAArBgqB,EAAKrN,OAAO+3B,OAAqB58B,EAAO6E,OAAO+3B,KAAO1qB,EAAKrN,OAAO+3B,MAC3C10C,SAAvBgqB,EAAKrN,OAAOhG,SAAuBmB,EAAO6E,OAAOhG,OAASqT,EAAKrN,OAAOhG,QAC9C3W,SAAxBgqB,EAAKrN,OAAOC,SAAwB9E,EAAO6E,OAAOC,QAAQolC,UAAWh4B,EAAKrN,OAAOC,SAC1D5c,SAAvBgqB,EAAKrN,OAAOpP,SAAuBuK,EAAO6E,OAAOpP,OAAS3Q,KAAK+iH,YAAa31F,EAAKrN,OAAOpP,UAIxEvN,SAAjBgqB,EAAKrX,UAAwBmF,EAAOnF,QAAUqX,EAAKrX,SACjC3S,SAAlBgqB,EAAKrJ,WAAyB7I,EAAO6I,SAAWqJ,EAAKrJ,UAEnC3gB,SAAlBgqB,EAAKrsB,SAET,IAAM,GAAIs5F,KAASjtE,GAAKrsB,SAEvBma,EAAO6F,IAAK/gB,KAAK+iH,YAAa31F,EAAKrsB,SAAUs5F,GAASlhE,EAAYzX,GAMpE,IAAmB,QAAd0L,EAAK5qB,KAIT,IAAM,GAFFqhD,GAASz2B,EAAKy2B,OAERlyC,EAAI,EAAGA,EAAIkyC,EAAO79C,OAAQ2L,IAAO,CAE1C,GAAIo1F,GAAQljD,EAAQlyC,GAChB0oF,EAAQn/E,EAAOi/E,oBAAqB,OAAQ4M,EAAM7rF,OAEvC9X,UAAVi3F,GAEJn/E,EAAO8rF,SAAU3M,EAAO0M,EAAMr5E,UAQjC,MAAOxS,SA6CV88C,GAAM+F,WAEL1I,YAAa2C,GAKbwL,SAAU,SAAWtZ,GAGpB,MADAjkD,SAAQgc,KAAM,qDACP,MAORupC,WAAY,SAAWliC,GAEtB,GAAI4gC,GAAIlqD,KAAKujH,eAAgBj6F,EAC7B,OAAOtpB,MAAKwjE,SAAUtZ,IAMvBs5D,UAAW,SAAWh9C,GAEdA,IAAYA,EAAY,EAI/B,KAAM,GAFFloB,MAEMn1B,EAAI,EAAQq9C,GAALr9C,EAAgBA,IAEhCm1B,EAAOhzC,KAAMtL,KAAKwjE,SAAUr6C,EAAIq9C,GAIjC,OAAOloB,IAMRm1D,gBAAiB,SAAWjtC,GAEpBA,IAAYA,EAAY,EAI/B,KAAM,GAFFloB,MAEMn1B,EAAI,EAAQq9C,GAALr9C,EAAgBA,IAEhCm1B,EAAOhzC,KAAMtL,KAAKwrD,WAAYriC,EAAIq9C,GAInC,OAAOloB,IAMRolB,UAAW,WAEV,GAAI+/C,GAAUzjH,KAAK0jH,YACnB,OAAOD,GAASA,EAAQz9G,OAAS,IAMlC09G,WAAY,SAAWl9C,GAItB,GAFOA,IAAYA,EAAcxmE,KAAK,qBAA2BA,KAAK,qBAAyB,KAE1FA,KAAK2jH,iBACJ3jH,KAAK2jH,gBAAgB39G,SAAWwgE,EAAY,IAC5CxmE,KAAK6U,YAGV,MAAO7U,MAAK2jH,eAIb3jH,MAAK6U,aAAc,CAEnB,IACI+uG,GACAprF,EAFAsU,KACS+2E,EAAO7jH,KAAKwjE,SAAU,GAC5BsgD,EAAM,CAIb,KAFAh3E,EAAMxhC,KAAM,GAENktB,EAAI,EAAQguC,GAALhuC,EAAgBA,IAE5BorF,EAAU5jH,KAAKwjE,SAAWhrC,EAAIguC,GAC9Bs9C,GAAOF,EAAQ1/C,WAAY2/C,GAC3B/2E,EAAMxhC,KAAMw4G,GACZD,EAAOD,CAMR,OAFA5jH,MAAK2jH,gBAAkB72E,EAEhBA,GAIRi3E,iBAAkB,WAEjB/jH,KAAK6U,aAAc,EACnB7U,KAAK0jH,cAMNH,eAAgB,SAAWj6F,EAAGoE,GAE7B,GAIIs2F,GAJAC,EAAajkH,KAAK0jH,aAElBx8G,EAAI,EAAG2Y,EAAKokG,EAAWj+G,MAM1Bg+G,GAFIt2F,EAEcA,EAIApE,EAAI26F,EAAYpkG,EAAK,EAUxC,KAFA,GAA4BqkG,GAAxB33C,EAAM,EAAGC,EAAO3sD,EAAK,EAEV2sD,GAAPD,GAMP,GAJArlE,EAAIlE,KAAK6nB,MAAO0hD,GAAQC,EAAOD,GAAQ,GAEvC23C,EAAaD,EAAY/8G,GAAM88G,EAEb,EAAbE,EAEJ33C,EAAMrlE,EAAI,MAEJ,CAAA,KAAKg9G,EAAa,GAIlB,CAEN13C,EAAOtlE,CACP,OALAslE,EAAOtlE,EAAI,EAiBb,GAJAA,EAAIslE,EAICy3C,EAAY/8G,KAAQ88G,EAAkB,CAE1C,GAAI95D,GAAIhjD,GAAM2Y,EAAK,EACnB,OAAOqqC,GAMR,GAAIi6D,GAAeF,EAAY/8G,GAC3Bk9G,EAAcH,EAAY/8G,EAAI,GAE9Bm9G,EAAgBD,EAAcD,EAI9BG,GAAoBN,EAAkBG,GAAiBE,EAIvDn6D,GAAMhjD,EAAIo9G,IAAsBzkG,EAAK,EAEzC,OAAOqqC,IASRq6D,WAAY,SAAUr6D,GAErB,GAAI47B,GAAQ,KACRmR,EAAK/sC,EAAI47B,EACThjB,EAAK5Y,EAAI47B,CAIH,GAALmR,IAASA,EAAK,GACdn0B,EAAK,IAAIA,EAAK,EAEnB,IAAI0hD,GAAMxkH,KAAKwjE,SAAUyzB,GACrBwtB,EAAMzkH,KAAKwjE,SAAUV,GAErBukC,EAAMod,EAAI7nG,QAAQg7B,IAAK4sE,EAC3B,OAAOnd,GAAI9uD,aAIZowD,aAAc,SAAWr/E,GAExB,GAAI4gC,GAAIlqD,KAAKujH,eAAgBj6F,EAC7B,OAAOtpB,MAAKukH,WAAYr6D,KAc1B8N,GAAM2Y,OAAS,SAAWtb,EAAaqvD,GAMtC,MAJArvD,GAAY0I,UAAYp7D,OAAOguE,OAAQ3Y,GAAM+F,WAC7C1I,EAAY0I,UAAU1I,YAAcA,EACpCA,EAAY0I,UAAUyF,SAAWkhD,EAE1BrvD,GAeR4C,GAAU8F,UAAYp7D,OAAOguE,OAAQ3Y,GAAM+F,WAC3C9F,GAAU8F,UAAU1I,YAAc4C,GAElCA,GAAU8F,UAAU4mD,aAAc,EAElC1sD,GAAU8F,UAAUyF,SAAW,SAAWtZ,GAEzC,GAAW,IAANA,EAEJ,MAAOlqD,MAAK6oD,GAAGjsC,OAIhB,IAAIub,GAAQn4B,KAAK6oD,GAAGjsC,QAAQg7B,IAAK53C,KAAK4oD,GAGtC,OAFAzwB,GAAMyV,eAAgBsc,GAAInpC,IAAK/gB,KAAK4oD,IAE7BzwB,GAMR8/B,GAAU8F,UAAUvS,WAAa,SAAWliC,GAE3C,MAAOtpB,MAAKwjE,SAAUl6C,IAIvB2uC,GAAU8F,UAAUwmD,WAAa,SAAUr6D,GAE1C,GAAIS,GAAU3qD,KAAK6oD,GAAGjsC,QAAQg7B,IAAK53C,KAAK4oD,GAExC,OAAO+B,GAAQpS,aAsBhB2f,GAAU6F,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ3Y,GAAM+F,YAEzD1I,YAAa6C,GAEbn3C,IAAK,SAAW6jG,GAEf5kH,KAAKm4D,OAAO7sD,KAAMs5G,IAInBC,UAAW,WAGV,GAAIC,GAAa9kH,KAAKm4D,OAAQ,GAAIqL,SAAU,GACxCuhD,EAAW/kH,KAAKm4D,OAAQn4D,KAAKm4D,OAAOnyD,OAAS,GAAIw9D,SAAU,EAExDshD,GAAW1iF,OAAQ2iF,IAEzB/kH,KAAKm4D,OAAO7sD,KAAM,GAAI2sD,IAAW8sD,EAAUD,KAe7CthD,SAAU,SAAWtZ,GAQpB,IANA,GAAI/gC,GAAI+gC,EAAIlqD,KAAK0jE,YACbshD,EAAehlH,KAAKilH,kBACpB/9G,EAAI,EAIAA,EAAI89G,EAAah/G,QAAS,CAEjC,GAAKg/G,EAAc99G,IAAOiiB,EAAI,CAE7B,GAAI+sE,GAAO8uB,EAAc99G,GAAMiiB,EAC3By7F,EAAQ5kH,KAAKm4D,OAAQjxD,GAErBm9G,EAAgBO,EAAMlhD,YACtBp6C,EAAsB,IAAlB+6F,EAAsB,EAAI,EAAInuB,EAAOmuB,CAE7C,OAAOO,GAAMp5D,WAAYliC,GAI1BpiB,IAID,MAAO,OAURw8D,UAAW,WAEV,GAAIwhD,GAAOllH,KAAKilH,iBAChB,OAAOC,GAAMA,EAAKl/G,OAAS,IAK5B+9G,iBAAkB,WAEjB/jH,KAAK6U,aAAc,EACnB7U,KAAKmlH,aAAe,KACpBnlH,KAAK0jH,cAONuB,gBAAiB,WAIhB,GAAKjlH,KAAKmlH,cAAgBnlH,KAAKmlH,aAAan/G,SAAWhG,KAAKm4D,OAAOnyD,OAElE,MAAOhG,MAAKmlH,YASb,KAAM,GAFF1B,MAAc2B,EAAO,EAEfl+G,EAAI,EAAGyK,EAAI3R,KAAKm4D,OAAOnyD,OAAY2L,EAAJzK,EAAOA,IAE/Ck+G,GAAQplH,KAAKm4D,OAAQjxD,GAAIw8D,YACzB+/C,EAAQn4G,KAAM85G,EAMf,OAFAplH,MAAKmlH,aAAe1B,EAEbA,GAIRhQ,gBAAiB,SAAWjtC,GAEpBA,IAAYA,EAAY,GAI/B,KAAM,GAFFloB,MAEMp3C,EAAI,EAAQs/D,GAALt/D,EAAgBA,IAEhCo3C,EAAOhzC,KAAMtL,KAAKwjE,SAAUt8D,EAAIs/D,GAUjC,OANKxmE,MAAKo4D,WAET9Z,EAAOhzC,KAAMgzC,EAAQ,IAIfA,GAIRklE,UAAW,SAAWh9C,GAErBA,EAAYA,GAAa,EAIzB,KAAM,GAFWq9C,GAAbvlE,KAEMp3C,EAAI,EAAGixD,EAASn4D,KAAKm4D,OAAQjxD,EAAIixD,EAAOnyD,OAAQkB,IAUzD,IAAM,GARF09G,GAAQzsD,EAAQjxD,GAChBm+G,EAAcT,GAASA,EAAMU,eAA8B,EAAZ9+C,EAC/Co+C,GAASA,EAAMD,YAAe,EAC9BC,GAASA,EAAMW,cAAiB/+C,EAAYo+C,EAAMtmE,OAAOt4C,OAC1DwgE,EAECipC,EAAMmV,EAAMpB,UAAW6B,GAEjBpyG,EAAI,EAAGA,EAAIw8F,EAAIzpG,OAAQiN,IAAM,CAEtC,GAAIklB,GAAQs3E,EAAKx8F,EAEZ4wG,IAAQA,EAAKzhF,OAAQjK,KAE1BmmB,EAAOhzC,KAAM6sB,GACb0rF,EAAO1rF,GAYT,MANKn4B,MAAKo4D,WAAa9Z,EAAOt4C,OAAS,IAAMs4C,EAAQA,EAAOt4C,OAAS,GAAIo8B,OAAQkc,EAAQ,KAExFA,EAAOhzC,KAAMgzC,EAAQ,IAIfA,GAURknE,qBAAsB,SAAWh/C,GAEhC,GAAIipC,GAAMzvG,KAAKwjH,UAAWh9C,EAC1B,OAAOxmE,MAAKylH,eAAgBhW,IAM7BiW,2BAA4B,SAAWl/C,GAEtC,GAAIipC,GAAMzvG,KAAKyzG,gBAAiBjtC,EAChC,OAAOxmE,MAAKylH,eAAgBhW,IAI7BgW,eAAgB,SAAWnnE,GAI1B,IAAM,GAFFjjC,GAAW,GAAIyL,IAET5f,EAAI,EAAGyK,EAAI2sC,EAAOt4C,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjD,GAAIixB,GAAQmmB,EAAQp3C,EACpBmU,GAASlO,SAAS7B,KAAM,GAAI3F,GAASwyB,EAAMr2B,EAAGq2B,EAAMp2B,EAAGo2B,EAAM3zB,GAAK,IAInE,MAAO6W,MA2BTg9C,GAAa0F,UAAYp7D,OAAOguE,OAAQ3Y,GAAM+F,WAC9C1F,GAAa0F,UAAU1I,YAAcgD,GAErCA,GAAa0F,UAAUunD,gBAAiB,EAExCjtD,GAAa0F,UAAUyF,SAAW,SAAUtZ,GAO3C,IALA,GAAIy7D,GAAkB,EAAV3iH,KAAKylD,GACbm9D,EAAa5lH,KAAK24D,UAAY34D,KAAK04D,YACnCmtD,EAAa7iH,KAAK+sC,IAAK61E,GAAer8C,OAAOC,QAG5B,EAAbo8C,GAAiBA,GAAcD,CACvC,MAAQC,EAAaD,GAAQC,GAAcD,CAEtCC,GAAar8C,OAAOC,UAIvBo8C,EAFIC,EAES,EAIAF,GAMV3lH,KAAK44D,cAAe,GAAUitD,IAE7BD,IAAeD,EAEnBC,GAAeD,EAIfC,GAA0BD,EAM5B,IAAI1tE,GAAQj4C,KAAK04D,YAAcxO,EAAI07D,EAC/B9jH,EAAI9B,KAAKs4D,GAAKt4D,KAAKw4D,QAAUx1D,KAAKg1C,IAAKC,GACvCl2C,EAAI/B,KAAKu4D,GAAKv4D,KAAKy4D,QAAUz1D,KAAKyoD,IAAKxT,EAE3C,IAAwB,IAAnBj4C,KAAK64D,UAAkB,CAE3B,GAAI7gB,GAAMh1C,KAAKg1C,IAAKh4C,KAAK64D,WACrBpN,EAAMzoD,KAAKyoD,IAAKzrD,KAAK64D,WAErB8jB,EAAK76E,EAAI9B,KAAKs4D,GACdskB,EAAK76E,EAAI/B,KAAKu4D,EAGlBz2D,GAAI66E,EAAK3kC,EAAM4kC,EAAKnxB,EAAMzrD,KAAKs4D,GAC/Bv2D,EAAI46E,EAAKlxB,EAAMmxB,EAAK5kC,EAAMh4C,KAAKu4D,GAIhC,MAAO,IAAI12D,GAASC,EAAGC,IAQxBP,EAAQskH,YAEPC,uBAAwB,SAAW77D,EAAG7vC,EAAIC,EAAIC,GAE7C,MAAO,IAAM,EAAI2vC,IAAQ5vC,EAAKD,GAAO,EAAI6vC,GAAM3vC,EAAKD,IAMrD0rG,mBAAoB,SAAW97D,EAAG7vC,EAAIC,EAAIC,EAAIC,GAE7C,MAAO,GAAMH,GAAO,EAAI6vC,IAAQ,EAAIA,GACnC,EAAI5vC,GAAO,EAAI4vC,IAAQ,EAAIA,GAAM,EAAIA,EAAI5vC,GAAO,EAAI4vC,GACpD,EAAIA,EAAK3vC,GAAO,EAAI2vC,GAAM,EAAIA,EAAIA,EAAI3vC,EACtC,EAAI2vC,EAAIA,EAAI1vC,GAIdyrG,cAAe,SAAW/7D,EAAG7vC,EAAIC,EAAIC,EAAIC,GAIxC,GAAI0rG,GAAM,EAAIh8D,EAAIA,EAAI,EAAIA,EACtBi8D,EAAM,EAAIj8D,EAAIA,EAAI,EAAIA,EAAI,EAC1Bk8D,EAAM,GAAMl8D,EAAIA,EAAI,EAAIA,EACxBm8D,EAAM,EAAIn8D,EAAIA,EAAI,EAAIA,CAE1B,OAAOg8D,GAAMC,EAAMC,EAAMC,GAM1BxjD,YAAa,SAAUxoD,EAAIC,EAAIC,EAAIC,EAAI0vC,GAEtC,GAAI8O,GAAmB,IAAZz+C,EAAKF,GACZuuC,EAAmB,IAAZpuC,EAAKF,GACZwoD,EAAK5Y,EAAIA,EACT6Y,EAAK7Y,EAAI4Y,CACb,QAAS,EAAIxoD,EAAK,EAAIC,EAAKy+C,EAAKpQ,GAAOma,GAAO,GAAMzoD,EAAK,EAAIC,EAAK,EAAIy+C,EAAKpQ,GAAOka,EAAK9J,EAAK9O,EAAI5vC,IAgBlGw+C,GAAYiF,UAAYp7D,OAAOguE,OAAQ3Y,GAAM+F,WAC7CjF,GAAYiF,UAAU1I,YAAcyD,GAEpCA,GAAYiF,UAAUwnD,eAAgB,EAEtCzsD,GAAYiF,UAAUyF,SAAW,SAAWtZ,GAE3C,GAAI5L,GAASt+C,KAAKs+C,OACdnmB,GAAUmmB,EAAOt4C,OAAS,GAAMkkD,EAEhC8Y,EAAWhgE,KAAK6nB,MAAOsN,GACvBsoC,EAAStoC,EAAQ6qC,EAEjBsjD,EAAShoE,EAAqB,IAAb0kB,EAAiBA,EAAWA,EAAW,GACxDujD,EAASjoE,EAAQ0kB,GACjBwjD,EAASloE,EAAQ0kB,EAAW1kB,EAAOt4C,OAAS,EAAIs4C,EAAOt4C,OAAS,EAAIg9D,EAAW,GAC/EyjD,EAASnoE,EAAQ0kB,EAAW1kB,EAAOt4C,OAAS,EAAIs4C,EAAOt4C,OAAS,EAAIg9D,EAAW,GAE/EH,EAAcrhE,EAAQskH,WAAWjjD,WAErC,OAAO,IAAIhhE,GACVghE,EAAayjD,EAAOxkH,EAAGykH,EAAOzkH,EAAG0kH,EAAO1kH,EAAG2kH,EAAO3kH,EAAG2+D,GACrDoC,EAAayjD,EAAOvkH,EAAGwkH,EAAOxkH,EAAGykH,EAAOzkH,EAAG0kH,EAAO1kH,EAAG0+D,KAkBvD1H,GAAiBgF,UAAYp7D,OAAOguE,OAAQ3Y,GAAM+F,WAClDhF,GAAiBgF,UAAU1I,YAAc0D,GAEzCA,GAAiBgF,UAAUyF,SAAW,SAAWtZ,GAEhD,GAAI2lD,GAAKruG,EAAQonG,WAAWiH,EAE5B,OAAO,IAAIhuG,GACVguG,EAAI3lD,EAAGlqD,KAAKg5D,GAAGl3D,EAAG9B,KAAK4oD,GAAG9mD,EAAG9B,KAAK6oD,GAAG/mD,EAAG9B,KAAK8oD,GAAGhnD,GAChD+tG,EAAI3lD,EAAGlqD,KAAKg5D,GAAGj3D,EAAG/B,KAAK4oD,GAAG7mD,EAAG/B,KAAK6oD,GAAG9mD,EAAG/B,KAAK8oD,GAAG/mD,KAKlDg3D,GAAiBgF,UAAUwmD,WAAa,SAAUr6D,GAEjD,GAAI87D,GAAqBxkH,EAAQskH,WAAWE,kBAE5C,OAAO,IAAInkH,GACVmkH,EAAoB97D,EAAGlqD,KAAKg5D,GAAGl3D,EAAG9B,KAAK4oD,GAAG9mD,EAAG9B,KAAK6oD,GAAG/mD,EAAG9B,KAAK8oD,GAAGhnD,GAChEkkH,EAAoB97D,EAAGlqD,KAAKg5D,GAAGj3D,EAAG/B,KAAK4oD,GAAG7mD,EAAG/B,KAAK6oD,GAAG9mD,EAAG/B,KAAK8oD,GAAG/mD,IAC/Dw2C,aAiBH0gB,GAAqB8E,UAAYp7D,OAAOguE,OAAQ3Y,GAAM+F,WACtD9E,GAAqB8E,UAAU1I,YAAc4D,GAG7CA,GAAqB8E,UAAUyF,SAAW,SAAWtZ,GAEpD,GAAIgiB,GAAK1qE,EAAQonG,WAAW18B,EAE5B,OAAO,IAAIrqE,GACVqqE,EAAIhiB,EAAGlqD,KAAKg5D,GAAGl3D,EAAG9B,KAAK4oD,GAAG9mD,EAAG9B,KAAK6oD,GAAG/mD,GACrCoqE,EAAIhiB,EAAGlqD,KAAKg5D,GAAGj3D,EAAG/B,KAAK4oD,GAAG7mD,EAAG/B,KAAK6oD,GAAG9mD,KAMvCk3D,GAAqB8E,UAAUwmD,WAAa,SAAUr6D,GAErD,GAAI67D,GAAyBvkH,EAAQskH,WAAWC,sBAEhD,OAAO,IAAIlkH,GACVkkH,EAAwB77D,EAAGlqD,KAAKg5D,GAAGl3D,EAAG9B,KAAK4oD,GAAG9mD,EAAG9B,KAAK6oD,GAAG/mD,GACzDikH,EAAwB77D,EAAGlqD,KAAKg5D,GAAGj3D,EAAG/B,KAAK4oD,GAAG7mD,EAAG/B,KAAK6oD,GAAG9mD,IACxDw2C,YAIH,IAAImuE,IAAgB/jH,OAAO+mE,OAAQ/mE,OAAOguE,OAAQzY,GAAU6F,YAE3DzE,WAAY,SAAW0jC,GAEtBh9F,KAAK2mH,OAAQ3pB,EAAS,GAAIl7F,EAAGk7F,EAAS,GAAIj7F,EAE1C,KAAM,GAAImF,GAAI,EAAGyK,EAAIqrF,EAAQh3F,OAAY2L,EAAJzK,EAAOA,IAE3ClH,KAAK4mH,OAAQ5pB,EAAS91F,GAAIpF,EAAGk7F,EAAS91F,GAAInF,IAM5C4kH,OAAQ,SAAW7kH,EAAGC,GAErB/B,KAAKq5D,aAAa3sD,IAAK5K,EAAGC,IAI3B6kH,OAAQ,SAAW9kH,EAAGC,GAErB,GAAI6iH,GAAQ,GAAI3sD,IAAWj4D,KAAKq5D,aAAaz8C,QAAS,GAAI/a,GAASC,EAAGC,GACtE/B,MAAKm4D,OAAO7sD,KAAMs5G,GAElB5kH,KAAKq5D,aAAa3sD,IAAK5K,EAAGC,IAI3B8kH,iBAAkB,SAAWC,EAAMC,EAAMzuD,EAAIC,GAE5C,GAAIqsD,GAAQ,GAAI3rD,IACfj5D,KAAKq5D,aAAaz8C,QAClB,GAAI/a,GAASilH,EAAMC,GACnB,GAAIllH,GAASy2D,EAAIC,GAGlBv4D,MAAKm4D,OAAO7sD,KAAMs5G,GAElB5kH,KAAKq5D,aAAa3sD,IAAK4rD,EAAIC,IAI5ByuD,cAAe,SAAWC,EAAOC,EAAOC,EAAOC,EAAO9uD,EAAIC,GAEzD,GAAIqsD,GAAQ,GAAI7rD,IACf/4D,KAAKq5D,aAAaz8C,QAClB,GAAI/a,GAASolH,EAAOC,GACpB,GAAIrlH,GAASslH,EAAOC,GACpB,GAAIvlH,GAASy2D,EAAIC,GAGlBv4D,MAAKm4D,OAAO7sD,KAAMs5G,GAElB5kH,KAAKq5D,aAAa3sD,IAAK4rD,EAAIC,IAI5B8uD,WAAY,SAAW5X,GAEtB,GAAI6X,IAAStnH,KAAKq5D,aAAaz8C,SAAUiyF,OAAQY,GAE7CmV,EAAQ,GAAI9rD,IAAawuD,EAC7BtnH,MAAKm4D,OAAO7sD,KAAMs5G,GAElB5kH,KAAKq5D,aAAannD,KAAMu9F,EAAKA,EAAIzpG,OAAS,KAI3CmnD,IAAK,SAAWmL,EAAIC,EAAIgQ,EAAS7P,EAAaC,EAAWC,GAExD,GAAIjP,GAAK3pD,KAAKq5D,aAAav3D,EACvB4xE,EAAK1zE,KAAKq5D,aAAat3D,CAE3B/B,MAAKunH,OAAQjvD,EAAK3O,EAAI4O,EAAKmb,EAAInL,EAC9B7P,EAAaC,EAAWC,IAI1B2uD,OAAQ,SAAWjvD,EAAIC,EAAIgQ,EAAS7P,EAAaC,EAAWC,GAE3D54D,KAAKwnH,WAAYlvD,EAAIC,EAAIgQ,EAASA,EAAS7P,EAAaC,EAAWC,IAIpE6uD,QAAS,SAAWnvD,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAEjF,GAAIlP,GAAK3pD,KAAKq5D,aAAav3D,EACvB4xE,EAAK1zE,KAAKq5D,aAAat3D,CAE3B/B,MAAKwnH,WAAYlvD,EAAK3O,EAAI4O,EAAKmb,EAAIlb,EAASC,EAASC,EAAaC,EAAWC,EAAYC,IAI1F2uD,WAAY,SAAWlvD,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAEpF,GAAI+rD,GAAQ,GAAIvsD,IAAcC,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,EAE5F,IAAK74D,KAAKm4D,OAAOnyD,OAAS,EAAI,CAG7B,GAAI0hH,GAAa9C,EAAMphD,SAAU,EAE1BkkD,GAAWtlF,OAAQpiC,KAAKq5D,eAE9Br5D,KAAK4mH,OAAQc,EAAW5lH,EAAG4lH,EAAW3lH,GAMxC/B,KAAKm4D,OAAO7sD,KAAMs5G,EAElB,IAAI+C,GAAY/C,EAAMphD,SAAU,EAChCxjE,MAAKq5D,aAAannD,KAAMy1G,KAyB1BzuD,IAAM6E,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ+1C,KAE/CrxD,YAAa6D,GAEb0uD,eAAgB,SAAWphD,GAI1B,IAAM,GAFFqhD,MAEM3gH,EAAI,EAAGyK,EAAI3R,KAAKo5D,MAAMpzD,OAAY2L,EAAJzK,EAAOA,IAE9C2gH,EAAU3gH,GAAMlH,KAAKo5D,MAAOlyD,GAAIs8G,UAAWh9C,EAI5C,OAAOqhD,IAMRC,iBAAkB,SAAWthD,GAE5B,OAECymC,MAAOjtG,KAAKwjH,UAAWh9C,GACvBpN,MAAOp5D,KAAK4nH,eAAgBphD,KAM9BmtC,cAAe,SAAWntC,GAEzB,MAAOxmE,MAAK8nH,iBAAkBthD,MAyBhCrN,GAAK4E,UAAY2oD,GACjBA,GAAcrxD,YAAc8D,GAS5BI,GAAUwE,WACT4oD,OAAQ,SAAW7kH,EAAGC,GACrB/B,KAAKy5D,YAAc,GAAIN,IACvBn5D,KAAKw5D,SAASluD,KAAKtL,KAAKy5D,aACxBz5D,KAAKy5D,YAAYktD,OAAQ7kH,EAAGC,IAE7B6kH,OAAQ,SAAW9kH,EAAGC,GACrB/B,KAAKy5D,YAAYmtD,OAAQ9kH,EAAGC,IAE7B8kH,iBAAkB,SAAWC,EAAMC,EAAMzuD,EAAIC,GAC5Cv4D,KAAKy5D,YAAYotD,iBAAkBC,EAAMC,EAAMzuD,EAAIC,IAEpDyuD,cAAe,SAAWC,EAAOC,EAAOC,EAAOC,EAAO9uD,EAAIC,GACzDv4D,KAAKy5D,YAAYutD,cAAeC,EAAOC,EAAOC,EAAOC,EAAO9uD,EAAIC,IAEjE8uD,WAAY,SAAW5X,GACtBzvG,KAAKy5D,YAAY4tD,WAAY5X,IAG9BsY,SAAU,SAAWC,EAAOC,GAE3B,QAASC,GAAiBC,GAIzB,IAAM,GAFF76D,MAEMpmD,EAAI,EAAGyK,EAAIw2G,EAAWniH,OAAY2L,EAAJzK,EAAOA,IAAO,CAErD,GAAIkhH,GAAUD,EAAYjhH,GAEtBmhH,EAAW,GAAInvD,GACnBmvD,GAASlwD,OAASiwD,EAAQjwD,OAE1B7K,EAAOhiD,KAAM+8G,GAId,MAAO/6D,GAIR,QAASg7D,GAAsBhY,EAAMiY,GASpC,IAAM,GAPFC,GAAUD,EAAUviH,OAMpByiH,GAAS,EACHjwF,EAAIgwF,EAAU,EAAG38D,EAAI,EAAO28D,EAAJ38D,EAAarzB,EAAIqzB,IAAO,CAEzD,GAAI68D,GAAaH,EAAW/vF,GACxBmwF,EAAaJ,EAAW18D,GAExB+8D,EAASD,EAAW7mH,EAAI4mH,EAAU5mH,EAClC+mH,EAASF,EAAW5mH,EAAI2mH,EAAU3mH,CAEtC,IAAKiB,KAAK+sC,IAAK84E,GAAWt/C,OAAOC,QAAU,CAS1C,GANc,EAATq/C,IAEJH,EAAaH,EAAW18D,GAAK+8D,GAAWA,EACxCD,EAAaJ,EAAW/vF,GAAKqwF,GAAWA,GAGlCvY,EAAKvuG,EAAI2mH,EAAU3mH,GAASuuG,EAAKvuG,EAAI4mH,EAAW5mH,EAAQ,QAE/D,IAAKuuG,EAAKvuG,IAAM2mH,EAAU3mH,GAEzB,GAAKuuG,EAAKxuG,IAAM4mH,EAAU5mH,EAAK,OAAO,MAGhC,CAEN,GAAIgnH,GAAWD,GAAWvY,EAAKxuG,EAAI4mH,EAAU5mH,GAAM8mH,GAAWtY,EAAKvuG,EAAI2mH,EAAU3mH,EACjF,IAAkB,IAAb+mH,EAAoB,OAAO,CAChC,IAAgB,EAAXA,EAAmB,QACxBL,IAAWA,OAIN,CAGN,GAAKnY,EAAKvuG,IAAM2mH,EAAU3mH,EAAM,QAEhC,IAAS4mH,EAAW7mH,GAAKwuG,EAAKxuG,GAASwuG,EAAKxuG,GAAK4mH,EAAU5mH,GACrD4mH,EAAU5mH,GAAKwuG,EAAKxuG,GAASwuG,EAAKxuG,GAAK6mH,EAAW7mH,EAAS,OAAO,GAO1E,MAAO2mH,GAIR,GAAIjZ,GAAchuG,EAAQonG,WAAW4G,YAEjCh2C,EAAWx5D,KAAKw5D,QACpB,IAAyB,IAApBA,EAASxzD,OAAe,QAE7B,IAAKiiH,KAAY,EAAO,MAAOC,GAAiB1uD,EAGhD,IAAIuvD,GAAOX,EAASC,EAAU/6D,IAE9B,IAAyB,IAApBkM,EAASxzD,OAMb,MAJAoiH,GAAU5uD,EAAU,GACpB6uD,EAAW,GAAInvD,IACfmvD,EAASlwD,OAASiwD,EAAQjwD,OAC1B7K,EAAOhiD,KAAM+8G,GACN/6D,CAIR,IAAI07D,IAAexZ,EAAah2C,EAAU,GAAIgqD,YAC9CwF,GAAahB,GAAUgB,EAAaA,CAIpC,IAIIC,GAJAC,KACAC,KACAC,KACAC,EAAU,CAGdF,GAAWE,GAAYjmH,OACvBgmH,EAAeC,KAEf,KAAM,GAAIniH,GAAI,EAAGyK,EAAI6nD,EAASxzD,OAAY2L,EAAJzK,EAAOA,IAE5CkhH,EAAU5uD,EAAUtyD,GACpB+hH,EAAYb,EAAQ5E,YACpBuF,EAAQvZ,EAAayZ,GACrBF,EAAQf,GAAUe,EAAQA,EAErBA,IAEKC,GAAkBG,EAAWE,IAAcA,IAEpDF,EAAWE,IAAcj3D,EAAG,GAAI8G,IAAS1gC,EAAGywF,GAC5CE,EAAWE,GAAUj3D,EAAE+F,OAASiwD,EAAQjwD,OAEnC6wD,GAAaK,IAClBD,EAAeC,OAMfD,EAAeC,GAAU/9G,MAAQ4d,EAAGk/F,EAAS5vF,EAAGywF,EAAW,IAS7D,KAAOE,EAAW,GAAM,MAAOjB,GAAiB1uD,EAGhD,IAAK2vD,EAAUnjH,OAAS,EAAI,CAK3B,IAAM,GAHFsjH,IAAY,EACZC,KAEM3b,EAAO,EAAG4b,EAAOL,EAAUnjH,OAAewjH,EAAP5b,EAAaA,IAEzDsb,EAAkBtb,KAInB,KAAM,GAAIA,GAAO,EAAG4b,EAAOL,EAAUnjH,OAAewjH,EAAP5b,EAAaA,IAIzD,IAAM,GAFF6b,GAAML,EAAexb,GAEfK,EAAO,EAAGA,EAAOwb,EAAIzjH,OAAQioG,IAAU,CAKhD,IAAM,GAHFyb,GAAKD,EAAKxb,GACV0b,GAAkB,EAEZC,EAAQ,EAAGA,EAAQT,EAAUnjH,OAAQ4jH,IAEzCtB,EAAsBoB,EAAGlxF,EAAG2wF,EAAWS,GAAQpxF,KAE9Co1E,IAASgc,GAAQL,EAASj+G,MAAQu+G,MAAOjc,EAAMkc,IAAKF,EAAOvc,KAAMY,IACjE0b,GAEJA,GAAkB,EAClBT,EAAkBU,GAAQt+G,KAAMo+G,IAIhCJ,GAAY,EAOVK,IAEJT,EAAkBtb,GAAOtiG,KAAMo+G,GAQ7BH,EAASvjH,OAAS,IAGfsjH,IAAYF,EAAgBF,IAQrC,IAAM,GAFFa,GAEM7iH,EAAI,EAAG2Y,EAAKspG,EAAUnjH,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAEtDmhH,EAAWc,EAAWjiH,GAAIkrD,EAC1B9E,EAAOhiD,KAAM+8G,GACb0B,EAAWX,EAAeliH,EAE1B,KAAM,GAAI+L,GAAI,EAAGC,EAAK62G,EAAS/jH,OAAYkN,EAAJD,EAAQA,IAE9Co1G,EAASjvD,MAAM9tD,KAAMy+G,EAAU92G,GAAIiW,GAQrC,MAAOokC,KAgBT3qD,OAAO+mE,OAAQhQ,GAAKqE,WAEnBpQ,QAAQ,EAERC,eAAgB,SAAWH,EAAMtjD,EAAMq8D,GAEtC,QAASwjD,GAAav8D,GAQrB,IAAM,GANFie,GAAQu+C,OAAQx8D,GAAOt/B,MAAO,IAC9Bte,EAAQ1F,EAAOijB,EAAKi4F,WACpBxhH,EAAS,EAETqmH,KAEMhjH,EAAI,EAAGA,EAAIwkE,EAAM1lE,OAAQkB,IAAO,CAEzC,GAAIijH,GAAMC,EAAY1+C,EAAOxkE,GAAK2I,EAAOhM,EACzCA,IAAUsmH,EAAItmH,OAEdqmH,EAAM5+G,KAAM6+G,EAAI3+G,MAIjB,MAAO0+G,GAIR,QAASE,GAAY9lG,EAAGzU,EAAOhM,GAE9B,GAAIwmH,GAAQj9F,EAAKk9F,OAAQhmG,IAAO8I,EAAKk9F,OAAQ,IAE7C,IAAOD,EAAP,CAEA,GAGIvoH,GAAGC,EAAGynG,EAAKC,EAAK8gB,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAAMC,EAHpDr/G,EAAO,GAAI+tD,IAEXk2C,KAAUvjC,EAAK1qE,EAAQonG,WAAW18B,GAAI2jC,EAAKruG,EAAQonG,WAAWiH,EAGlE,IAAKwa,EAAMrjE,EAIV,IAAM,GAFF8jE,GAAUT,EAAMU,iBAAoBV,EAAMU,eAAiBV,EAAMrjE,EAAE74B,MAAO,MAEpEjnB,EAAI,EAAGyK,EAAIm5G,EAAQ9kH,OAAY2L,EAAJzK,GAAS,CAE7C,GAAI8jH,GAASF,EAAS5jH,IAEtB,QAAS8jH,GAER,IAAK,IAEJlpH,EAAIgpH,EAAS5jH,KAAS2I,EAAQhM,EAC9B9B,EAAI+oH,EAAS5jH,KAAS2I,EAEtBrE,EAAKm7G,OAAQ7kH,EAAGC,EAEhB,MAED,KAAK,IAEJD,EAAIgpH,EAAS5jH,KAAS2I,EAAQhM,EAC9B9B,EAAI+oH,EAAS5jH,KAAS2I,EAEtBrE,EAAKo7G,OAAQ9kH,EAAGC,EAEhB,MAED,KAAK,IAWJ,GATAynG,EAAOshB,EAAS5jH,KAAS2I,EAAQhM,EACjC4lG,EAAOqhB,EAAS5jH,KAAS2I,EACzB46G,EAAOK,EAAS5jH,KAAS2I,EAAQhM,EACjC6mH,EAAOI,EAAS5jH,KAAS2I,EAEzBrE,EAAKq7G,iBAAkB4D,EAAMC,EAAMlhB,EAAKC,GAExCohB,EAAQpb,EAAKA,EAAIzpG,OAAS,GAEb,CAEZukH,EAAOM,EAAM/oH,EACb0oH,EAAOK,EAAM9oH,CAEb,KAAM,GAAI2vD,GAAK,EAAS8U,GAAN9U,EAAiBA,IAAQ,CAE1C,GAAIxH,GAAIwH,EAAK8U,CACb0F,GAAIhiB,EAAGqgE,EAAME,EAAMjhB,GACnBt9B,EAAIhiB,EAAGsgE,EAAME,EAAMjhB,IAMrB,KAED,KAAK,IAaJ,GAXAD,EAAOshB,EAAS5jH,KAAS2I,EAAQhM,EACjC4lG,EAAOqhB,EAAS5jH,KAAS2I,EACzB46G,EAAOK,EAAS5jH,KAAS2I,EAAQhM,EACjC6mH,EAAOI,EAAS5jH,KAAS2I,EACzB86G,EAAOG,EAAS5jH,KAAS2I,EAAQhM,EACjC+mH,EAAOE,EAAS5jH,KAAS2I,EAEzBrE,EAAKw7G,cAAeyD,EAAMC,EAAMC,EAAMC,EAAMphB,EAAKC,GAEjDohB,EAAQpb,EAAKA,EAAIzpG,OAAS,GAEb,CAEZukH,EAAOM,EAAM/oH,EACb0oH,EAAOK,EAAM9oH,CAEb,KAAM,GAAI2vD,GAAK,EAAS8U,GAAN9U,EAAiBA,IAAQ,CAE1C,GAAIxH,GAAIwH,EAAK8U,CACbqpC,GAAI3lD,EAAGqgE,EAAME,EAAME,EAAMnhB,GACzBqG,EAAI3lD,EAAGsgE,EAAME,EAAME,EAAMnhB,MAc/B,OAAS5lG,OAAQwmH,EAAMY,GAAKp7G,EAAOrE,KAAMA,IAM5BpI,SAAT+G,IAAqBA,EAAO,KACd/G,SAAdojE,IAA0BA,EAAY,EAO3C,KAAM,GALFp5C,GAAOptB,KAAKotB,KAEZ88F,EAAQF,EAAav8D,GACrBH,KAEM90B,EAAI,EAAGC,EAAKyxF,EAAMlkH,OAAYyyB,EAAJD,EAAQA,IAE3C9Z,MAAMq/C,UAAUzyD,KAAKu+B,MAAOyjB,EAAQ48D,EAAO1xF,GAAIuvF,WAIhD,OAAOz6D,MAgBT3qD,OAAO+mE,OAAQ/P,GAAWoE,WAEzB82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEzC,GAAIr2C,GAAQ7c,KAER41G,EAAS,GAAIjiD,IAAW3zD,KAAK4zD;AACjCgiD,EAAOf,KAAMrhD,EAAK,SAAW/F,GAE5B,GAAIguD,EAEJ,KAECA,EAAO1gB,KAAKE,MAAOxtC,GAElB,MAAQ4hB,GAETppE,QAAQgc,KAAM,yFACdw5F,EAAO1gB,KAAKE,MAAOxtC,EAAKg1D,UAAW,GAAIh1D,EAAKznD,OAAS,IAItD,GAAI0nD,GAAO7wC,EAAMo+E,MAAOwgB,EAEnBzoD,IAASA,EAAQtF,IAEpBuF,EAAYC,IAIhB+nC,MAAO,SAAWwgB,GAEjB,MAAO,IAAI/hD,IAAM+hD,KAMnB,IAAIhrG,GAwBJ9N,QAAO+mE,OAAQ1P,GAAY+D,WAE1B82C,KAAM,SAAWrhD,EAAKR,EAAQC,EAAYC,GAEzC,GAAI0iD,GAAS,GAAIjiD,IAAW3zD,KAAK4zD,QACjCgiD,GAAOH,gBAAiB,eACxBG,EAAOf,KAAMrhD,EAAK,SAAW35B,GAE5B,GAAIppB,GAAUmpD,IAEdnpD,GAAQy6G,gBAAiBrxF,EAAQ,SAAWsxF,GAE3Cn4D,EAAQm4D,MAIPl4D,EAAYC,MA4BjBvwD,OAAO+mE,OAAQzP,GAAa8D,WAE3Bx9C,OAAQ,WAEP,GAAI6qG,GAAUv/F,EAAOH,EAAKC,EAAQnW,EAAMC,EAAKmW,EAEzCy/F,EAAW,GAAIzlH,GACf0lH,EAAU,GAAI1lH,EAElB,OAAO,UAAiB+K,GAEvB,GAAIkE,GAAcu2G,IAAaprH,MAAQ6rB,IAAUlb,EAAOkb,OAASH,IAAQ/a,EAAO+a,KACvEC,IAAWhb,EAAOgb,OAAS3rB,KAAK2rB,QAAUnW,IAAS7E,EAAO6E,MAC1DC,IAAQ9E,EAAO8E,KAAOmW,IAASjb,EAAOib,IAE/C,IAAK/W,EAAc,CAElBu2G,EAAWprH,KACX6rB,EAAQlb,EAAOkb,MACfH,EAAM/a,EAAO+a,IACbC,EAAShb,EAAOgb,OAAS3rB,KAAK2rB,OAC9BnW,EAAO7E,EAAO6E,KACdC,EAAM9E,EAAO8E,IACbmW,EAAOjb,EAAOib,IAKd,IAII2xD,GAAMC,EAJNvrE,EAAmBtB,EAAOsB,iBAAiB2K,QAC3Cs9C,EAASl6D,KAAKk6D,OAAS,EACvBqxD,EAAqBrxD,EAAS1kD,EAAOqW,EACrCuxD,EAAS5nE,EAAOxS,KAAKq6E,IAAK77E,EAAQwB,KAAKstD,QAAU5kC,EAAM,IAAUE,CAKrE0/F,GAAQzlH,SAAU,KAASq0D,EAC3BmxD,EAASxlH,SAAU,IAAOq0D,EAI1BqjB,GAASH,EAAOzxD,EAAS4/F,EACzB/tC,EAAOJ,EAAOzxD,EAAS4/F,EAEvBt5G,EAAiBpM,SAAU,GAAM,EAAI2P,GAASgoE,EAAOD,GACrDtrE,EAAiBpM,SAAU,IAAQ23E,EAAOD,IAAWC,EAAOD,GAE5Dv9E,KAAKm6D,QAAQloD,iBAAiBC,KAAMD,GAIpCsrE,GAASH,EAAOzxD,EAAS4/F,EACzB/tC,EAAOJ,EAAOzxD,EAAS4/F,EAEvBt5G,EAAiBpM,SAAU,GAAM,EAAI2P,GAASgoE,EAAOD,GACrDtrE,EAAiBpM,SAAU,IAAQ23E,EAAOD,IAAWC,EAAOD,GAE5Dv9E,KAAKo6D,QAAQnoD,iBAAiBC,KAAMD,GAIrCjS,KAAKm6D,QAAQtoD,YAAYK,KAAMvB,EAAOkB,aAAcyP,SAAUgqG,GAC9DtrH,KAAKo6D,QAAQvoD,YAAYK,KAAMvB,EAAOkB,aAAcyP,SAAU+pG,SA4FjEhxD,GAAW0D,UAAYp7D,OAAOguE,OAAQ7tD,GAASi7C,WAC/C1D,GAAW0D,UAAU1I,YAAcgF,GAiBnCS,GAAciD,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAEhE1I,YAAayF,GAEbW,SAAU,WAET,MAAOz7D,MAAK+6D,MAIbywD,aAAc,WAEQ,OAAhBxrH,KAAKmwB,SAETnwB,KAAK+6D,KAAK0wD,WAAYzrH,KAAKmwB,QAC3BnwB,KAAKmwB,OAAOs7F,WAAYzrH,KAAKyQ,QAAQyqD,aACrCl7D,KAAK+6D,KAAKE,QAASj7D,KAAKyQ,QAAQyqD,aAChCl7D,KAAKmwB,OAAS,OAMhBu7F,UAAW,WAEV,MAAO1rH,MAAKmwB,QAIbw7F,UAAW,SAAW9oH,GAEA,OAAhB7C,KAAKmwB,QAETnwB,KAAK+6D,KAAK0wD,WAAYzrH,KAAKmwB,QAC3BnwB,KAAKmwB,OAAOs7F,WAAYzrH,KAAKyQ,QAAQyqD,cAIrCl7D,KAAK+6D,KAAK0wD,WAAYzrH,KAAKyQ,QAAQyqD,aAIpCl7D,KAAKmwB,OAASttB,EACd7C,KAAK+6D,KAAKE,QAASj7D,KAAKmwB,QACxBnwB,KAAKmwB,OAAO8qC,QAASj7D,KAAKyQ,QAAQyqD,cAInC0wD,gBAAiB,WAEhB,MAAO5rH,MAAK+6D,KAAKA,KAAKl4D,OAIvBgpH,gBAAiB,SAAWhpH,GAE3B7C,KAAK+6D,KAAKA,KAAKl4D,MAAQA,GAIxBue,kBAAmB,WAElB,GAAIvN,GAAW,GAAIlO,GACfqd,EAAa,GAAI1d,GACjBuK,EAAQ,GAAIlK,GAEZmmH,EAAc,GAAInmH,EAEtB,OAAO,UAA4Bk1F,GAElC/3E,GAASi7C,UAAU38C,kBAAkBjc,KAAMnF,KAAM66F,EAEjD,IAAIz/B,GAAWp7D,KAAKyQ,QAAQ2qD,SACxBp6C,EAAKhhB,KAAKghB,EAEdhhB,MAAK6R,YAAYmE,UAAWnC,EAAUmP,EAAYnT,GAElDi8G,EAAYp/G,IAAK,EAAG,EAAG,IAAM2nE,gBAAiBrxD,GAE9Co4C,EAAS/iB,YAAaxkC,EAAS/R,EAAG+R,EAAS9R,EAAG8R,EAASrP,GACvD42D,EAAS2wD,eAAgBD,EAAYhqH,EAAGgqH,EAAY/pH,EAAG+pH,EAAYtnH,EAAGwc,EAAGlf,EAAGkf,EAAGjf,EAAGif,EAAGxc,SAiCxF22D,GAAM4C,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQ7tD,GAASi7C,YAExD1I,YAAa8F,GAEbuB,UAAW,WAEV,MAAO18D,MAAK+6D,MAIbixD,cAAe,SAAWC,GAOzB,MALAjsH,MAAK87D,oBAAqB,EAC1B97D,KAAK+7D,WAAa,YAClB/7D,KAAKq7D,OAAS4wD,EACdjsH,KAAKi7D,UAEEj7D,MAIRksH,UAAW,SAAWf,GAOrB,MALAnrH,MAAKq7D,OAAOxhC,OAASsxF,EACrBnrH,KAAK+7D,WAAa,SAEb/7D,KAAK07D,UAAW17D,KAAKmsH,OAEnBnsH,MAIRmsH,KAAM,WAEL,GAAKnsH,KAAK67D,aAAc,EAGvB,WADA51D,SAAQgc,KAAM,yCAKf,IAAKjiB,KAAK87D,sBAAuB,EAGhC,WADA71D,SAAQgc,KAAM,mDAKf,IAAIo5C,GAASr7D,KAAKyQ,QAAQ6qD,oBAY1B,OAVAD,GAAOxhC,OAAS75B,KAAKq7D,OAAOxhC,OAC5BwhC,EAAO6E,KAAOlgE,KAAKq7D,OAAO6E,KAC1B7E,EAAOE,QAAUv7D,KAAKq7D,OAAOE,QAC7BF,EAAOl3C,MAAO,EAAGnkB,KAAK27D,WACtBN,EAAOO,aAAa/4D,MAAQ7C,KAAK47D,aAEjC57D,KAAK67D,WAAY,EAEjB77D,KAAKq7D,OAASA,EAEPr7D,KAAKi7D,WAIbmxD,MAAO,WAEN,MAAKpsH,MAAK87D,sBAAuB,MAEhC71D,SAAQgc,KAAM,qDAKfjiB,KAAKq7D,OAAOgxD,OACZrsH,KAAK27D,UAAY37D,KAAKyQ,QAAQ67G,YAC9BtsH,KAAK67D,WAAY,EAEV77D,OAIRqsH,KAAM,WAEL,MAAKrsH,MAAK87D,sBAAuB,MAEhC71D,SAAQgc,KAAM,qDAKfjiB,KAAKq7D,OAAOgxD,OACZrsH,KAAK27D,UAAY,EACjB37D,KAAK67D,WAAY,EAEV77D,OAIRi7D,QAAS,WAER,GAAKj7D,KAAKg8D,QAAQh2D,OAAS,EAAI,CAE9BhG,KAAKq7D,OAAOJ,QAASj7D,KAAKg8D,QAAS,GAEnC,KAAM,GAAI90D,GAAI,EAAGyK,EAAI3R,KAAKg8D,QAAQh2D,OAAY2L,EAAJzK,EAAOA,IAEhDlH,KAAKg8D,QAAS90D,EAAI,GAAI+zD,QAASj7D,KAAKg8D,QAAS90D,GAI9ClH,MAAKg8D,QAASh8D,KAAKg8D,QAAQh2D,OAAS,GAAIi1D,QAASj7D,KAAK08D,iBAItD18D,MAAKq7D,OAAOJ,QAASj7D,KAAK08D,YAI3B,OAAO18D,OAIRyrH,WAAY,WAEX,GAAKzrH,KAAKg8D,QAAQh2D,OAAS,EAAI,CAE9BhG,KAAKq7D,OAAOowD,WAAYzrH,KAAKg8D,QAAS,GAEtC,KAAM,GAAI90D,GAAI,EAAGyK,EAAI3R,KAAKg8D,QAAQh2D,OAAY2L,EAAJzK,EAAOA,IAEhDlH,KAAKg8D,QAAS90D,EAAI,GAAIukH,WAAYzrH,KAAKg8D,QAAS90D,GAIjDlH,MAAKg8D,QAASh8D,KAAKg8D,QAAQh2D,OAAS,GAAIylH,WAAYzrH,KAAK08D,iBAIzD18D,MAAKq7D,OAAOowD,WAAYzrH,KAAK08D,YAI9B,OAAO18D,OAIRusH,WAAY,WAEX,MAAOvsH,MAAKg8D,SAIbwwD,WAAY,SAAW3pH,GAgBtB,MAdOA,KAAQA,MAEV7C,KAAK67D,aAAc,GAEvB77D,KAAKyrH,aACLzrH,KAAKg8D,QAAUn5D,EACf7C,KAAKi7D,WAILj7D,KAAKg8D,QAAUn5D,EAIT7C,MAIR0rH,UAAW,WAEV,MAAO1rH,MAAKusH,aAAc,IAI3BZ,UAAW,SAAWx7F,GAErB,MAAOnwB,MAAKwsH,WAAYr8F,GAAWA,QAIpCs8F,gBAAiB,SAAW5pH,GAE3B,MAAK7C,MAAK87D,sBAAuB,MAEhC71D,SAAQgc,KAAM,qDAKfjiB,KAAK47D,aAAe/4D,EAEf7C,KAAK67D,aAAc,IAEvB77D,KAAKq7D,OAAOO,aAAa/4D,MAAQ7C,KAAK47D,cAIhC57D,OAIR0sH,gBAAiB,WAEhB,MAAO1sH,MAAK47D,cAIbJ,QAAS,WAERx7D,KAAK67D,WAAY,GAIlB8wD,QAAS,WAER,MAAK3sH,MAAK87D,sBAAuB,GAEhC71D,QAAQgc,KAAM,qDACP,GAIDjiB,KAAKq7D,OAAO6E,MAIpB0sD,QAAS,SAAW/pH,GAEnB,MAAK7C,MAAK87D,sBAAuB,MAEhC71D,SAAQgc,KAAM,yDAKfjiB,KAAKq7D,OAAO6E,KAAOr9D,IAIpBgqH,UAAW,WAEV,MAAO7sH,MAAK+6D,KAAKA,KAAKl4D,OAKvBiqH,UAAW,SAAWjqH,GAIrB,MAFA7C,MAAK+6D,KAAKA,KAAKl4D,MAAQA,EAEhB7C,QAeTi8D,GAAgB8B,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,OAAQxV,GAAM4C,YAE/D1I,YAAa4G,GAEbS,UAAW,WAEV,MAAO18D,MAAKk8D,QAIb6wD,eAAgB,WAEf,MAAO/sH,MAAKk8D,OAAO8wD,aAIpBC,eAAgB,SAAWpqH,GAE1B7C,KAAKk8D,OAAO8wD,YAAcnqH,GAI3BqqH,iBAAkB,WAEjB,MAAOltH,MAAKk8D,OAAOixD,eAIpBC,iBAAkB,SAAWvqH,GAE5B7C,KAAKk8D,OAAOixD,cAAgBtqH,GAI7BwqH,iBAAkB,WAEjB,MAAOrtH,MAAKk8D,OAAOoxD,eAIpBC,iBAAkB,SAAW1qH,GAE5B7C,KAAKk8D,OAAOoxD,cAAgBzqH,GAI7B2qH,eAAgB,WAEf,MAAOxtH,MAAKk8D,OAAOuxD,aAIpBC,eAAgB,SAAW7qH,GAE1B7C,KAAKk8D,OAAOuxD,YAAc5qH,GAI3Bue,kBAAmB,WAElB,GAAIvN,GAAW,GAAIlO,EAEnB,OAAO,UAA4Bk1F,GAElC/3E,GAASi7C,UAAU38C,kBAAkBjc,KAAMnF,KAAM66F,GAEjDhnF,EAAS8M,sBAAuB3gB,KAAK6R,aAErC7R,KAAKk8D,OAAO7jB,YAAaxkC,EAAS/R,EAAG+R,EAAS9R,EAAG8R,EAASrP,SAwB7D7B,OAAO+mE,OAAQtN,GAAc2B,WAE5B4vD,iBAAkB,WAIjB,MAFA3tH,MAAKu8D,SAASqxD,qBAAsB5tH,KAAKotB,MAElCptB,KAAKotB,MAIbygG,oBAAqB,WAIpB,IAAM,GAFFhrH,GAAQ,EAAGuqB,EAAOptB,KAAK2tH,mBAEjBzmH,EAAI,EAAGA,EAAIkmB,EAAKpnB,OAAQkB,IAEjCrE,GAASuqB,EAAMlmB,EAIhB,OAAOrE,GAAQuqB,EAAKpnB,UA0DtB22D,GAAcoB,WAEb1I,YAAasH,GAGbmxD,WAAY,SAAUC,EAAWttD,GAKhC,GAAI5mC,GAAS75B,KAAK65B,OACjB0V,EAASvvC,KAAKs1D,UACdzxD,EAASkqH,EAAYx+E,EAASA,EAE9By+E,EAAgBhuH,KAAKm9D,gBAEtB,IAAuB,IAAlB6wD,EAAsB,CAI1B,IAAM,GAAI9mH,GAAI,EAAGA,IAAMqoC,IAAWroC,EAEjC2yB,EAAQh2B,EAASqD,GAAM2yB,EAAQ3yB,EAIhC8mH,GAAgBvtD,MAEV,CAINutD,GAAiBvtD,CACjB,IAAIwtD,GAAMxtD,EAASutD,CACnBhuH,MAAKk9D,iBAAkBrjC,EAAQh2B,EAAQ,EAAGoqH,EAAK1+E,GAIhDvvC,KAAKm9D,iBAAmB6wD,GAKzBnkF,MAAO,SAAUkkF,GAEhB,GAAIx+E,GAASvvC,KAAKs1D,UACjBz7B,EAAS75B,KAAK65B,OACdh2B,EAASkqH,EAAYx+E,EAASA,EAE9BkxB,EAASzgE,KAAKm9D,iBAEdP,EAAU58D,KAAK48D,OAIhB,IAFA58D,KAAKm9D,iBAAmB,EAEV,EAATsD,EAAa,CAIjB,GAAIytD,GAA+B,EAAT3+E,CAE1BvvC,MAAKk9D,iBACHrjC,EAAQh2B,EAAQqqH,EAAqB,EAAIztD,EAAQlxB,GAIpD,IAAM,GAAIroC,GAAIqoC,EAAQ8/B,EAAI9/B,EAASA,EAAQroC,IAAMmoE,IAAMnoE,EAEtD,GAAK2yB,EAAQ3yB,KAAQ2yB,EAAQ3yB,EAAIqoC,GAAW,CAI3CqtB,EAAQ5xD,SAAU6uB,EAAQh2B,EAC1B,SASHsqH,kBAAmB,WAElB,GAAIvxD,GAAU58D,KAAK48D,QAEf/iC,EAAS75B,KAAK65B,OACjB0V,EAASvvC,KAAKs1D,UAEd44D,EAA+B,EAAT3+E,CAEvBqtB,GAAQwxD,SAAUv0F,EAAQq0F,EAG1B,KAAM,GAAIhnH,GAAIqoC,EAAQ8/B,EAAI6+C,EAAqBhnH,IAAMmoE,IAAMnoE,EAE1D2yB,EAAQ3yB,GAAM2yB,EAAQq0F,EAAwBhnH,EAAIqoC,EAInDvvC,MAAKm9D,iBAAmB,GAKzBkxD,qBAAsB,WAErB,GAAIH,GAAuC,EAAjBluH,KAAKs1D,SAC/Bt1D,MAAK48D,QAAQ5xD,SAAUhL,KAAK65B,OAAQq0F,IAOrClxD,QAAS,SAAUnjC,EAAQkS,EAAW2rE,EAAWxtD,EAAG3a,GAEnD,GAAK2a,GAAK,GAET,IAAM,GAAIhjD,GAAI,EAAGA,IAAMqoC,IAAWroC,EAEjC2yB,EAAQkS,EAAY7kC,GAAM2yB,EAAQ69E,EAAYxwG,IAQjD61D,OAAQ,SAAUljC,EAAQkS,EAAW2rE,EAAWxtD,EAAG3a,GAElDjqC,EAAW8tE,UAAWv5C,EAAQkS,EAC5BlS,EAAQkS,EAAWlS,EAAQ69E,EAAWxtD,IAIzC+S,MAAO,SAAUpjC,EAAQkS,EAAW2rE,EAAWxtD,EAAG3a,GAIjD,IAAM,GAFF6iB,GAAI,EAAIlI,EAEFhjD,EAAI,EAAGA,IAAMqoC,IAAWroC,EAAI,CAErC,GAAI+L,GAAI84B,EAAY7kC,CAEpB2yB,GAAQ5mB,GAAM4mB,EAAQ5mB,GAAMm/C,EAAIv4B,EAAQ69E,EAAYxwG,GAAMgjD,KA+B7DoT,GAAgBS,WAEf1I,YAAaiI,GAEb8wD,SAAU,SAA2BE,EAAazqH,GAEjD7D,KAAKU,OACLV,KAAKouH,SAAUE,EAAazqH,IAU7BmH,SAAU,SAA2BujH,EAAa1qH,GAEjD7D,KAAKU,OACLV,KAAKgL,SAAUujH,EAAa1qH,IAK7BnD,KAAM,WAEL,GAAI8tH,GAAexuH,KAAK09D,KACvBF,EAAax9D,KAAKw9D,WAElBixD,EAAajxD,EAAWixD,WACxBtR,EAAe3/C,EAAW2/C,aAC1BuR,EAAgBlxD,EAAWkxD,aAgB5B,IAdOF,IAENA,EAAelxD,GAAgBK,SAC7B39D,KAAKu9D,SAAUC,EAAWI,WAAc59D,KAAKu9D,SAE/Cv9D,KAAK09D,KAAO8wD,GAKbxuH,KAAKouH,SAAWpuH,KAAK2uH,sBACrB3uH,KAAKgL,SAAWhL,KAAK4uH,uBAGdJ,EAGN,WADAvoH,SAAQC,MAAO,sCAAwClG,KAAKwL,KAAO,wBAKpE,IAAKijH,EAAa,CAEjB,GAAII,GAAcrxD,EAAWqxD,WAG7B,QAASJ,GAER,IAAK,YAEJ,IAAOD,EAAa14G,SAGnB,WADA7P,SAAQC,MAAO,8DAA+DlG,KAK/E,KAAOwuH,EAAa14G,SAAS4L,UAG5B,WADAzb,SAAQC,MAAO,wFAAyFlG,KAKzGwuH,GAAeA,EAAa14G,SAAS4L,SAErC,MAED,KAAK,QAEJ,IAAO8sG,EAAav4F,SAGnB,WADAhwB,SAAQC,MAAO,2DAA4DlG,KAQ5EwuH,GAAeA,EAAav4F,SAASI,KAGrC,KAAM,GAAInvB,GAAI,EAAGA,EAAIsnH,EAAaxoH,OAAQkB,IAEzC,GAAKsnH,EAActnH,GAAIhE,OAAS2rH,EAAc,CAE7CA,EAAc3nH,CACd,OAMF,KAED,SAEC,GAAoC9D,SAA/BorH,EAAcC,GAGlB,WADAxoH,SAAQC,MAAO,kDAAmDlG,KAKnEwuH,GAAeA,EAAcC,GAK/B,GAAqBrrH,SAAhByrH,EAA4B,CAEhC,GAAqCzrH,SAAhCorH,EAAcK,GAGlB,WADA5oH,SAAQC,MAAO,mEAAoElG,KAAMwuH,EAK1FA,GAAeA,EAAcK,IAO/B,GAAIC,GAAeN,EAAcrR,EAEjC,IAAsB/5G,SAAjB0rH,EAA6B,CAEjC,GAAIlxD,GAAWJ,EAAWI,QAI1B,YAFA33D,SAAQC,MAAO,0CAA4C03D,EACzD,IAAMu/C,EAAe,wBAAyBqR,GAMjD,GAAIO,GAAa/uH,KAAKgvH,WAAWC,IAEC7rH,UAA7BorH,EAAa35G,aAEjBk6G,EAAa/uH,KAAKgvH,WAAWE,YAC7BlvH,KAAKwuH,aAAeA,GAE+BprH,SAAxCorH,EAAa3qG,yBAExBkrG,EAAa/uH,KAAKgvH,WAAWG,uBAC7BnvH,KAAKwuH,aAAeA,EAKrB,IAAIY,GAAcpvH,KAAKqvH,YAAYC,MAEnC,IAAuBlsH,SAAlBsrH,EAA8B,CAGlC,GAAsB,0BAAjBvR,EAA2C,CAI/C,IAAOqR,EAAanzG,SAGnB,WADApV,SAAQC,MAAO,iFAAkFlG,KAKlG,KAAOwuH,EAAanzG,SAAS3C,aAG5B,WADAzS,SAAQC,MAAO,8FAA+FlG,KAK/G,KAAM,GAAIkH,GAAI,EAAGA,EAAIlH,KAAK09D,KAAKriD,SAAS3C,aAAa1S,OAAQkB,IAE5D,GAAKsnH,EAAanzG,SAAS3C,aAAcxR,GAAIhE,OAASwrH,EAAgB,CAErEA,EAAgBxnH,CAChB,QAQHkoH,EAAcpvH,KAAKqvH,YAAYE,aAE/BvvH,KAAKwvH,iBAAmBV,EACxB9uH,KAAK0uH,cAAgBA,MAEiBtrH,UAA3B0rH,EAAa1pE,WAAoDhiD,SAAzB0rH,EAAa7nH,SAGhEmoH,EAAcpvH,KAAKqvH,YAAYI,eAE/BzvH,KAAKwvH,iBAAmBV,GAEW1rH,SAAxB0rH,EAAa9oH,QAExBopH,EAAcpvH,KAAKqvH,YAAYK,YAE/B1vH,KAAKwvH,iBAAmBV,GAIxB9uH,KAAKm9G,aAAeA,CAKrBn9G,MAAKouH,SAAWpuH,KAAK2vH,oBAAqBP,GAC1CpvH,KAAKgL,SAAWhL,KAAK4vH,iCAAkCR,GAAeL,IAIvEc,OAAQ,WAEP7vH,KAAK09D,KAAO,KAIZ19D,KAAKouH,SAAWpuH,KAAK8vH,kBACrB9vH,KAAKgL,SAAWhL,KAAK+vH,oBAMvBptH,OAAO+mE,OAAQpM,GAAgBS,WAG9B4wD,sBAAuB,aACvBC,sBAAuB,aAGvBkB,kBAAmBxyD,GAAgBS,UAAUqwD,SAC7C2B,kBAAmBzyD,GAAgBS,UAAU/yD,SAE7CqkH,aACCC,OAAQ,EACRI,YAAa,EACbH,aAAc,EACdE,eAAgB,GAGjBT,YACCC,KAAM,EACNC,YAAa,EACbC,uBAAwB,GAGzBQ,qBAEC,SAA0B91F,EAAQh2B,GAEjCg2B,EAAQh2B,GAAW7D,KAAK09D,KAAM19D,KAAKm9G,eAIpC,SAAyBtjF,EAAQh2B,GAIhC,IAAM,GAFFw3D,GAASr7D,KAAKwvH,iBAERtoH,EAAI,EAAGJ,EAAIu0D,EAAOr1D,OAAQkB,IAAMJ,IAAMI,EAE/C2yB,EAAQh2B,KAAcw3D,EAAQn0D,IAMhC,SAAgC2yB,EAAQh2B,GAEvCg2B,EAAQh2B,GAAW7D,KAAKwvH,iBAAkBxvH,KAAK0uH,gBAIhD,SAA2B70F,EAAQh2B,GAElC7D,KAAKwvH,iBAAiBvoH,QAAS4yB,EAAQh2B,KAMzC+rH,mCAKE,SAA0B/1F,EAAQh2B,GAEjC7D,KAAK09D,KAAM19D,KAAKm9G,cAAiBtjF,EAAQh2B,IAI1C,SAAyCg2B,EAAQh2B,GAEhD7D,KAAK09D,KAAM19D,KAAKm9G,cAAiBtjF,EAAQh2B,GACzC7D,KAAKwuH,aAAa35G,aAAc,GAIjC,SAAoDglB,EAAQh2B,GAE3D7D,KAAK09D,KAAM19D,KAAKm9G,cAAiBtjF,EAAQh2B,GACzC7D,KAAKwuH,aAAa3qG,wBAAyB,KAQ5C,SAAyBgW,EAAQh2B,GAIhC,IAAM,GAFFmsH,GAAOhwH,KAAKwvH,iBAENtoH,EAAI,EAAGJ,EAAIkpH,EAAKhqH,OAAQkB,IAAMJ,IAAMI,EAE7C8oH,EAAM9oH,GAAM2yB,EAAQh2B,MAMtB,SAAwCg2B,EAAQh2B,GAI/C,IAAM,GAFFmsH,GAAOhwH,KAAKwvH,iBAENtoH,EAAI,EAAGJ,EAAIkpH,EAAKhqH,OAAQkB,IAAMJ,IAAMI,EAE7C8oH,EAAM9oH,GAAM2yB,EAAQh2B,IAIrB7D,MAAKwuH,aAAa35G,aAAc,GAIjC,SAAmDglB,EAAQh2B,GAI1D,IAAM,GAFFmsH,GAAOhwH,KAAKwvH,iBAENtoH,EAAI,EAAGJ,EAAIkpH,EAAKhqH,OAAQkB,IAAMJ,IAAMI,EAE7C8oH,EAAM9oH,GAAM2yB,EAAQh2B,IAIrB7D,MAAKwuH,aAAa3qG,wBAAyB,KAQ5C,SAAgCgW,EAAQh2B,GAEvC7D,KAAKwvH,iBAAkBxvH,KAAK0uH,eAAkB70F,EAAQh2B,IAIvD,SAA+Cg2B,EAAQh2B,GAEtD7D,KAAKwvH,iBAAkBxvH,KAAK0uH,eAAkB70F,EAAQh2B,GACtD7D,KAAKwuH,aAAa35G,aAAc,GAIjC,SAA0DglB,EAAQh2B,GAEjE7D,KAAKwvH,iBAAkBxvH,KAAK0uH,eAAkB70F,EAAQh2B,GACtD7D,KAAKwuH,aAAa3qG,wBAAyB,KAQ5C,SAA6BgW,EAAQh2B,GAEpC7D,KAAKwvH,iBAAiBpqE,UAAWvrB,EAAQh2B,IAI1C,SAA4Cg2B,EAAQh2B,GAEnD7D,KAAKwvH,iBAAiBpqE,UAAWvrB,EAAQh2B,GACzC7D,KAAKwuH,aAAa35G,aAAc,GAIjC,SAAuDglB,EAAQh2B,GAE9D7D,KAAKwvH,iBAAiBpqE,UAAWvrB,EAAQh2B,GACzC7D,KAAKwuH,aAAa3qG,wBAAyB,OAU/Cy5C,GAAgB2yD,UACd,SAAUC,EAAa1kH,EAAM2kH,GAE9B,GAAI3yD,GAAa2yD,GACf7yD,GAAgBG,eAAgBjyD,EAElCxL,MAAKowH,aAAeF,EACpBlwH,KAAKo+D,UAAY8xD,EAAYG,WAAY7kH,EAAMgyD,IAIhDF,GAAgB2yD,UAAUlyD,WAEzB1I,YAAaiI,GAAgB2yD,UAE7B7B,SAAU,SAAU1nH,EAAO7C,GAE1B7D,KAAKU,MAEL,IAAI4vH,GAAkBtwH,KAAKowH,aAAapyD,gBACvCpB,EAAU58D,KAAKo+D,UAAWkyD,EAGVltH,UAAZw5D,GAAwBA,EAAQwxD,SAAU1nH,EAAO7C,IAIvDmH,SAAU,SAAUtE,EAAO7C,GAI1B,IAAM,GAFF0sH,GAAWvwH,KAAKo+D,UAEVl3D,EAAIlH,KAAKowH,aAAapyD,gBAC9Bl3D,EAAIypH,EAASvqH,OAAQkB,IAAMJ,IAAMI,EAElCqpH,EAAUrpH,GAAI8D,SAAUtE,EAAO7C,IAMjCnD,KAAM,WAIL,IAAM,GAFF6vH,GAAWvwH,KAAKo+D,UAEVl3D,EAAIlH,KAAKowH,aAAapyD,gBAC9Bl3D,EAAIypH,EAASvqH,OAAQkB,IAAMJ,IAAMI,EAElCqpH,EAAUrpH,GAAIxG,QAMhBmvH,OAAQ,WAIP,IAAM,GAFFU,GAAWvwH,KAAKo+D,UAEVl3D,EAAIlH,KAAKowH,aAAapyD,gBAC9Bl3D,EAAIypH,EAASvqH,OAAQkB,IAAMJ,IAAMI,EAElCqpH,EAAUrpH,GAAI2oH,WAQjBvyD,GAAgBqT,OAAS,SAAU1P,EAAMz1D,EAAMgyD,GAE9C,MAAUyD,IAAQA,EAAKuvD,uBAMf,GAAIlzD,IAAgB2yD,UAAWhvD,EAAMz1D,EAAMgyD,GAJ3C,GAAIF,IAAiB2D,EAAMz1D,EAAMgyD,IAU1CF,GAAgBG,eAAiB,SAAUw/C,GAc1C,GAAIwT,GAAK,uEACLC,EAAUD,EAAG5kH,KAAMoxG,EAEvB,KAAOyT,EAEN,KAAM,IAAI3hG,OAAO,kCAAoCkuF,EAItD,IAAI0T,IAEH/yD,SAAU8yD,EAAS,GACnBjC,WAAYiC,EAAS,GACrB7B,YAAa6B,EAAS,GACtBvT,aAAcuT,EAAS,GACvBhC,cAAegC,EAAS,GAGzB,IAA8B,OAAzBC,EAAQxT,cAAyD,IAAhCwT,EAAQxT,aAAan3G,OAE1D,KAAM,IAAI+oB,OAAO,8CAAgDkuF,EAIlE,OAAO0T,IAIRrzD,GAAgBK,SAAW,SAAUsD,EAAMrD,GAE1C,IAAOA,GAAyB,KAAbA,GAAgC,SAAbA,GAAoC,MAAbA,GAAiC,KAAbA,GAAmBA,IAAaqD,EAAK/9D,MAAQ06D,IAAaqD,EAAKl+D,KAE/I,MAAOk+D,EAKR,IAAKA,EAAKhrC,SAAW,CAEpB,GAAI26F,GAAiB,SAAU36F,GAE9B,IAAK,GAAI/uB,GAAI,EAAGA,EAAI+uB,EAASI,MAAMrwB,OAAQkB,IAAO,CAEjD,GAAIg+C,GAAOjvB,EAASI,MAAOnvB,EAE3B,IAAKg+C,EAAKhiD,OAAS06D,EAElB,MAAO1Y,GAKT,MAAO,OAIJA,EAAO0rE,EAAgB3vD,EAAKhrC,SAEhC,IAAKivB,EAEJ,MAAOA,GAMT,GAAK+b,EAAKlgE,SAAW,CAEpB,GAAI8vH,GAAoB,SAAU9vH,GAEjC,IAAK,GAAImG,GAAI,EAAGA,EAAInG,EAASiF,OAAQkB,IAAO,CAE3C,GAAI4pH,GAAY/vH,EAAUmG,EAE1B,IAAK4pH,EAAU5tH,OAAS06D,GAAYkzD,EAAU/tH,OAAS66D,EAEtD,MAAOkzD,EAIR,IAAIx1G,GAASu1G,EAAmBC,EAAU/vH,SAE1C,IAAKua,EAAS,MAAOA,GAItB,MAAO,OAIJy1G,EAAcF,EAAmB5vD,EAAKlgE,SAE1C,IAAKgwH,EAEJ,MAAOA,GAMT,MAAO,OA0ERlzD,GAAqBE,WAEpB1I,YAAawI,GAEb2yD,wBAAwB,EAExBzvG,IAAK,SAAU+8C,GAWd,IAAM,GATFxuB,GAAUtvC,KAAK+a,SAClBi2G,EAAW1hF,EAAQtpC,OACnBirH,EAAiBjxH,KAAKg+D,gBACtBkzD,EAAgBlxH,KAAKi+D,eACrBisD,EAAQlqH,KAAKk+D,OACbizD,EAAcnxH,KAAKm+D,aACnBoyD,EAAWvwH,KAAKo+D,UAChBgzD,EAAYb,EAASvqH,OAEZkB,EAAI,EAAGJ,EAAIf,UAAUC,OAAQkB,IAAMJ,IAAMI,EAAI,CAEtD,GAAIgU,GAASnV,UAAWmB,GACvBnE,EAAOmY,EAAOnY,KACdslB,EAAQ6oG,EAAenuH,EAExB,IAAeK,SAAVilB,EAAsB,CAI1BA,EAAQ2oG,IACRE,EAAenuH,GAASslB,EACxBinB,EAAQhkC,KAAM4P,EAId,KAAM,GAAIjI,GAAI,EAAG44D,EAAIulD,EAAWn+G,IAAM44D,IAAM54D,EAE3Cs9G,EAAUt9G,GAAI3H,KACZ,GAAIgyD,IACHpiD,EAAQgvG,EAAOj3G,GAAKk+G,EAAal+G,SAI/B,IAAag+G,EAAR5oG,EAAyB,CAEpC,GAAIgpG,GAAc/hF,EAASjnB,GAIvBipG,IAAsBL,EACzBM,EAAmBjiF,EAASgiF,EAE7BJ,GAAeK,EAAiBxuH,MAASslB,EACzCinB,EAASjnB,GAAUkpG,EAEnBL,EAAenuH,GAASuuH,EACxBhiF,EAASgiF,GAAqBp2G,CAI9B,KAAM,GAAIjI,GAAI,EAAG44D,EAAIulD,EAAWn+G,IAAM44D,IAAM54D,EAAI,CAE/C,GAAIu+G,GAAkBjB,EAAUt9G,GAC/Bw+G,EAAaD,EAAiBF,GAC9B10D,EAAU40D,EAAiBnpG,EAE5BmpG,GAAiBnpG,GAAUopG,EAEVruH,SAAZw5D,IAMJA,EAAU,GAAIU,IACZpiD,EAAQgvG,EAAOj3G,GAAKk+G,EAAal+G,KAIpCu+G,EAAiBF,GAAqB10D,OAI5BttB,GAASjnB,KAAYgpG,GAEhCprH,QAAQC,MAAO,4HAQjBlG,KAAKg+D,gBAAkBizD,GAIxBh3B,OAAQ,SAAUn8B,GAQjB,IAAM,GANFxuB,GAAUtvC,KAAK+a,SAClBk2G,EAAiBjxH,KAAKg+D,gBACtBkzD,EAAgBlxH,KAAKi+D,eACrBsyD,EAAWvwH,KAAKo+D,UAChBgzD,EAAYb,EAASvqH,OAEZkB,EAAI,EAAGJ,EAAIf,UAAUC,OAAQkB,IAAMJ,IAAMI,EAAI,CAEtD,GAAIgU,GAASnV,UAAWmB,GACvBnE,EAAOmY,EAAOnY,KACdslB,EAAQ6oG,EAAenuH,EAExB,IAAeK,SAAVilB,GAAuBA,GAAS4oG,EAAiB,CAIrD,GAAIS,GAAkBT,IACrBU,EAAoBriF,EAASoiF,EAE9BR,GAAeS,EAAkB5uH,MAASslB,EAC1CinB,EAASjnB,GAAUspG,EAEnBT,EAAenuH,GAAS2uH,EACxBpiF,EAASoiF,GAAoBx2G,CAI7B,KAAM,GAAIjI,GAAI,EAAG44D,EAAIulD,EAAWn+G,IAAM44D,IAAM54D,EAAI,CAE/C,GAAIu+G,GAAkBjB,EAAUt9G,GAC/B2+G,EAAcJ,EAAiBE,GAC/B90D,EAAU40D,EAAiBnpG,EAE5BmpG,GAAiBnpG,GAAUupG,EAC3BJ,EAAiBE,GAAoB90D,IAQxC58D,KAAKg+D,gBAAkBizD,GAKxBY,QAAS,SAAU/zD,GASlB,IAAM,GAPFxuB,GAAUtvC,KAAK+a,SAClBi2G,EAAW1hF,EAAQtpC,OACnBirH,EAAiBjxH,KAAKg+D,gBACtBkzD,EAAgBlxH,KAAKi+D,eACrBsyD,EAAWvwH,KAAKo+D,UAChBgzD,EAAYb,EAASvqH,OAEZkB,EAAI,EAAGJ,EAAIf,UAAUC,OAAQkB,IAAMJ,IAAMI,EAAI,CAEtD,GAAIgU,GAASnV,UAAWmB,GACvBnE,EAAOmY,EAAOnY,KACdslB,EAAQ6oG,EAAenuH,EAExB,IAAeK,SAAVilB,EAIJ,SAFO6oG,GAAenuH,GAETkuH,EAAR5oG,EAAyB,CAI7B,GAAIipG,KAAsBL,EACzBM,EAAmBjiF,EAASgiF,GAC5B3lH,IAAeqlH,EACfc,EAAaxiF,EAAS3jC,EAGvBulH,GAAeK,EAAiBxuH,MAASslB,EACzCinB,EAASjnB,GAAUkpG,EAGnBL,EAAeY,EAAW/uH,MAASuuH,EACnChiF,EAASgiF,GAAqBQ,EAC9BxiF,EAAQzW,KAIR,KAAM,GAAI5lB,GAAI,EAAG44D,EAAIulD,EAAWn+G,IAAM44D,IAAM54D,EAAI,CAE/C,GAAIu+G,GAAkBjB,EAAUt9G,GAC/Bw+G,EAAaD,EAAiBF,GAC9BzN,EAAO2N,EAAiB7lH,EAEzB6lH,GAAiBnpG,GAAUopG,EAC3BD,EAAiBF,GAAqBzN,EACtC2N,EAAgB34F,WAIX,CAIN,GAAIltB,KAAeqlH,EAClBc,EAAaxiF,EAAS3jC,EAEvBulH,GAAeY,EAAW/uH,MAASslB,EACnCinB,EAASjnB,GAAUypG,EACnBxiF,EAAQzW,KAIR,KAAM,GAAI5lB,GAAI,EAAG44D,EAAIulD,EAAWn+G,IAAM44D,IAAM54D,EAAI,CAE/C,GAAIu+G,GAAkBjB,EAAUt9G,EAEhCu+G,GAAiBnpG,GAAUmpG,EAAiB7lH,GAC5C6lH,EAAgB34F,QAUpB74B,KAAKg+D,gBAAkBizD,GAMxBZ,WAAY,SAAU7kH,EAAMgyD,GAI3B,GAAIu0D,GAAgB/xH,KAAKq+D,uBACxBh2C,EAAQ0pG,EAAevmH,GACvB+kH,EAAWvwH,KAAKo+D,SAEjB,IAAeh7D,SAAVilB,EAAsB,MAAOkoG,GAAUloG,EAE5C,IAAI6hG,GAAQlqH,KAAKk+D,OAChBizD,EAAcnxH,KAAKm+D,aACnB7uB,EAAUtvC,KAAK+a,SACfi2G,EAAW1hF,EAAQtpC,OACnBirH,EAAiBjxH,KAAKg+D,gBACtBwzD,EAAkB,GAAI9yG,OAAOsyG,EAE9B3oG,GAAQkoG,EAASvqH,OAEjB+rH,EAAevmH,GAAS6c,EAExB6hG,EAAM5+G,KAAME,GACZ2lH,EAAY7lH,KAAMkyD,GAClB+yD,EAASjlH,KAAMkmH,EAEf,KAAM,GAAItqH,GAAI+pH,EACZnqH,EAAIwoC,EAAQtpC,OAAQkB,IAAMJ,IAAMI,EAAI,CAErC,GAAIgU,GAASo0B,EAASpoC,EAEtBsqH,GAAiBtqH,GACf,GAAIo2D,IAAiBpiD,EAAQ1P,EAAMgyD,GAItC,MAAOg0D,IAIRQ,aAAc,SAAUxmH,GAIvB,GAAIumH,GAAgB/xH,KAAKq+D,uBACxBh2C,EAAQ0pG,EAAevmH,EAExB,IAAepI,SAAVilB,EAAsB,CAE1B,GAAI6hG,GAAQlqH,KAAKk+D,OAChBizD,EAAcnxH,KAAKm+D,aACnBoyD,EAAWvwH,KAAKo+D,UAChB6zD,EAAoB1B,EAASvqH,OAAS,EACtCksH,EAAe3B,EAAU0B,GACzBE,EAAmB3mH,EAAMymH,EAE1BF,GAAeI,GAAqB9pG,EAEpCkoG,EAAUloG,GAAU6pG,EACpB3B,EAAS13F,MAETs4F,EAAa9oG,GAAU8oG,EAAac,GACpCd,EAAYt4F,MAEZqxF,EAAO7hG,GAAU6hG,EAAO+H,GACxB/H,EAAMrxF,SAoFT8lC,GAAgBZ,WAEf1I,YAAasJ,GAIbwtD,KAAM,WAIL,MAFAnsH,MAAK++D,OAAOqzD,gBAAiBpyH,MAEtBA,MAIRqsH,KAAM,WAIL,MAFArsH,MAAK++D,OAAOszD,kBAAmBryH,MAExBA,KAAKqiC,SAIbA,MAAO,WASN,MAPAriC,MAAK4gE,QAAS,EACd5gE,KAAKuf,SAAU,EAEfvf,KAAKsgE,KAAO,EACZtgE,KAAKogE,WAAa,GAClBpgE,KAAKqgE,WAAa,KAEXrgE,KAAKsyH,aAAaC,eAI1BC,UAAW,WAEV,MAAOxyH,MAAKuf,UAAavf,KAAK4gE,QAA6B,IAAnB5gE,KAAKugE,WACvB,OAApBvgE,KAAKqgE,YAAuBrgE,KAAK++D,OAAO0zD,gBAAiBzyH,OAK5D0yH,YAAa,WAEZ,MAAO1yH,MAAK++D,OAAO0zD,gBAAiBzyH,OAIrC2yH,QAAS,SAAUryD,GAIlB,MAFAtgE,MAAKqgE,WAAaC,EAEXtgE,MAIR4sH,QAAS,SAAUngG,EAAMk0C,GAKxB,MAHA3gE,MAAKkgE,KAAOzzC,EACZzsB,KAAK2gE,YAAcA,EAEZ3gE,MASR4yH,mBAAoB,SAAUnyD,GAO7B,MALAzgE,MAAKygE,OAASA,EAGdzgE,KAAK0gE,iBAAmB1gE,KAAKuf,QAAUkhD,EAAS,EAEzCzgE,KAAKsyH,cAKbO,mBAAoB,WAEnB,MAAO7yH,MAAK0gE,kBAIboyD,OAAQ,SAAU37D,GAEjB,MAAOn3D,MAAK+yH,gBAAiB57D,EAAU,EAAG,IAI3C67D,QAAS,SAAU77D,GAElB,MAAOn3D,MAAK+yH,gBAAiB57D,EAAU,EAAG,IAI3C87D,cAAe,SAAUC,EAAe/7D,EAAUg8D,GAKjD,GAHAD,EAAcF,QAAS77D,GACvBn3D,KAAK8yH,OAAQ37D,GAETg8D,EAAO,CAEV,GAAIC,GAAiBpzH,KAAKg/D,MAAM7H,SAC/Bk8D,EAAkBH,EAAcl0D,MAAM7H,SAEtCm8D,EAAgBD,EAAkBD,EAClCG,EAAgBH,EAAiBC,CAElCH,GAAcC,KAAM,EAAKG,EAAen8D,GACxCn3D,KAAKmzH,KAAMI,EAAe,EAAKp8D,GAIhC,MAAOn3D,OAIRwzH,YAAa,SAAUC,EAAct8D,EAAUg8D,GAE9C,MAAOM,GAAaR,cAAejzH,KAAMm3D,EAAUg8D,IAIpDb,WAAY,WAEX,GAAIoB,GAAoB1zH,KAAKigE,kBAS7B,OAP2B,QAAtByzD,IAEJ1zH,KAAKigE,mBAAqB,KAC1BjgE,KAAK++D,OAAO40D,4BAA6BD,IAInC1zH,MASR4zH,sBAAuB,SAAUrzD,GAKhC,MAHAvgE,MAAKugE,UAAYA,EACjBvgE,KAAKwgE,oBAAsBxgE,KAAK4gE,OAAS,EAAGL,EAErCvgE,KAAKuyH,eAKbsB,sBAAuB,WAEtB,MAAO7zH,MAAKwgE,qBAIbszD,YAAa,SAAU38D,GAItB,MAFAn3D,MAAKugE,UAAYvgE,KAAKg/D,MAAM7H,SAAWA,EAEhCn3D,KAAKuyH,eAIbwB,SAAU,SAAU/I,GAKnB,MAHAhrH,MAAKsgE,KAAO0qD,EAAO1qD,KACnBtgE,KAAKugE,UAAYyqD,EAAOzqD,UAEjBvgE,KAAKuyH,eAIbyB,KAAM,SAAU78D,GAEf,MAAOn3D,MAAKmzH,KAAMnzH,KAAKwgE,oBAAqB,EAAGrJ,IAIhDg8D,KAAM,SAAUc,EAAgBC,EAAc/8D,GAE7C,GAAIyH,GAAQ5+D,KAAK++D,OAAQo1D,EAAMv1D,EAAM0B,KACpCd,EAAcx/D,KAAKggE,sBAEnBO,EAAYvgE,KAAKugE,SAEG,QAAhBf,IAEJA,EAAcZ,EAAMw1D,0BACpBp0H,KAAKggE,sBAAwBR,EAI9B,IAAIzJ,GAAQyJ,EAAYxK,mBACvBgB,EAASwJ,EAAYvK,YAQtB,OANAc,GAAO,GAAMo+D,EACbp+D,EAAO,GAAMo+D,EAAMh9D,EAEnBnB,EAAQ,GAAMi+D,EAAiB1zD,EAC/BvK,EAAQ,GAAMk+D,EAAe3zD,EAEtBvgE,MAIRuyH,YAAa,WAEZ,GAAI8B,GAAuBr0H,KAAKggE,qBAShC,OAP8B,QAAzBq0D,IAEJr0H,KAAKggE,sBAAwB,KAC7BhgE,KAAK++D,OAAO40D,4BAA6BU,IAInCr0H,MAMRs0H,SAAU,WAET,MAAOt0H,MAAK++D,QAIbw1D,QAAS,WAER,MAAOv0H,MAAKg/D,OAIbw1D,QAAS,WAER,MAAOx0H,MAAKi/D,YAAcj/D,KAAK++D,OAAOmC,OAMvCuzD,QAAS,SAAUn0D,EAAMo0D,EAAWC,EAAe5G,GAGlD,GAAIpyD,GAAY37D,KAAKqgE,UAErB,IAAmB,OAAd1E,EAAqB,CAIzB,GAAIi5D,IAAgBt0D,EAAO3E,GAAcg5D,CACzC,IAAmB,EAAdC,GAAqC,IAAlBD,EAEvB,MAMD30H,MAAKqgE,WAAa,KAClBq0D,EAAYC,EAAgBC,EAM7BF,GAAa10H,KAAK60H,iBAAkBv0D,EACpC,IAAIw0D,GAAW90H,KAAK+0H,YAAaL,GAK7Bj0D,EAASzgE,KAAKg1H,cAAe10D,EAEjC,IAAKG,EAAS,EAKb,IAAM,GAHFtB,GAAen/D,KAAK4/D,cACpBq1D,EAAiBj1H,KAAK6/D,kBAEhB5sD,EAAI,EAAG44D,EAAI1M,EAAan5D,OAAQiN,IAAM44D,IAAM54D,EAErDksD,EAAclsD,GAAI6kG,SAAUgd,GAC5BG,EAAgBhiH,GAAI66G,WAAYC,EAAWttD,IAQ9Cu0D,cAAe,SAAU10D,GAExB,GAAIG,GAAS,CAEb,IAAKzgE,KAAKuf,QAAU,CAEnBkhD,EAASzgE,KAAKygE,MACd,IAAIjB,GAAcx/D,KAAKigE,kBAEvB,IAAqB,OAAhBT,EAAuB,CAE3B,GAAI01D,GAAmB11D,EAAYs4C,SAAUx3C,GAAQ,EAErDG,IAAUy0D,EAEL50D,EAAOd,EAAYxK,mBAAoB,KAE3Ch1D,KAAKsyH,aAEqB,IAArB4C,IAGJl1H,KAAKuf,SAAU,KAWnB,MADAvf,MAAK0gE,iBAAmBD,EACjBA,GAIRo0D,iBAAkB,SAAUv0D,GAE3B,GAAIC,GAAY,CAEhB,KAAOvgE,KAAK4gE,OAAS,CAEpBL,EAAYvgE,KAAKugE,SAEjB,IAAIf,GAAcx/D,KAAKggE,qBAEvB,IAAqB,OAAhBR,EAAuB,CAE3B,GAAI01D,GAAmB11D,EAAYs4C,SAAUx3C,GAAQ,EAErDC,IAAa20D,EAER50D,EAAOd,EAAYxK,mBAAoB,KAE3Ch1D,KAAKuyH,cAEc,IAAdhyD,EAGJvgE,KAAK4gE,QAAS,EAKd5gE,KAAKugE,UAAYA,IAWrB,MADAvgE,MAAKwgE,oBAAsBD,EACpBA,GAIRw0D,YAAa,SAAUL,GAEtB,GAAIp0D,GAAOtgE,KAAKsgE,KAAOo0D,CAEvB,IAAmB,IAAdA,EAAkB,MAAOp0D,EAE9B,IAAInJ,GAAWn3D,KAAKg/D,MAAM7H,SAEzB+I,EAAOlgE,KAAKkgE,KACZi1D,EAAYn1H,KAAKogE,UAElB,IAAKF,IAAS+K,GAAW,CAEL,KAAdkqD,IAGJn1H,KAAKm1H,UAAY,EACjBn1H,KAAKo1H,aAAa,GAAM,GAAM,GAI/BC,GAAa,CAEZ,GAAK/0D,GAAQnJ,EAEZmJ,EAAOnJ,MAED,CAAA,KAAY,EAAPmJ,GAIL,KAAM+0D,EAFZ/0D,GAAO,EAIHtgE,KAAK6gE,kBAAoB7gE,KAAK4gE,QAAS,EACvC5gE,KAAKuf,SAAU,EAEpBvf,KAAK++D,OAAOoL,eACX3nE,KAAM,WAAYwoH,OAAQhrH,KAC1BwiB,UAAuB,EAAZkyG,EAAgB,GAAK,SAK5B,CAEN,GAAIY,GAAap1D,IAASgL,EAyB1B,IAvBmB,KAAdiqD,IAGCT,GAAa,GAEjBS,EAAY,EAEZn1H,KAAKo1H,aACH,EAA2B,IAArBp1H,KAAK2gE,YAAmB20D,IAQhCt1H,KAAKo1H,YACkB,IAArBp1H,KAAK2gE,aAAmB,EAAM20D,IAM7Bh1D,GAAQnJ,GAAmB,EAAPmJ,EAAW,CAGnC,GAAIi1D,GAAYvyH,KAAK6nB,MAAOy1C,EAAOnJ,EACnCmJ,IAAQnJ,EAAWo+D,EAEnBJ,GAAanyH,KAAK+sC,IAAKwlF,EAEvB,IAAIC,GAAUx1H,KAAK2gE,YAAcw0D,CAEjC,IAAe,EAAVK,EAGCx1H,KAAK6gE,kBAAoB7gE,KAAK4gE,QAAS,EACvC5gE,KAAKuf,SAAU,EAEpB+gD,EAAOo0D,EAAY,EAAIv9D,EAAW,EAElCn3D,KAAK++D,OAAOoL,eACX3nE,KAAM,WAAYwoH,OAAQhrH,KAC1BwiB,UAAWkyG,EAAY,EAAI,EAAI,SAG1B,CAGN,GAAiB,IAAZc,EAAgB,CAGpB,GAAIC,GAAsB,EAAZf,CACd10H,MAAKo1H,YAAaK,GAAWA,EAASH,OAItCt1H,MAAKo1H,aAAa,GAAO,EAAOE,EAIjCt1H,MAAKogE,WAAa+0D,EAElBn1H,KAAK++D,OAAOoL,eACX3nE,KAAM,OAAQwoH,OAAQhrH,KAAMu1H,UAAWA,KAO1C,GAAKD,GAAkC,KAAR,EAAZH,GAIlB,MADAn1H,MAAKsgE,KAAOA,EACLnJ,EAAWmJ,EAOpB,MADAtgE,MAAKsgE,KAAOA,EACLA,GAIR80D,YAAa,SAAUK,EAASC,EAAOJ,GAEtC,GAAI51D,GAAW1/D,KAAK2/D,oBAEf21D,IAEJ51D,EAASL,YAAeiM,GACxB5L,EAASH,UAAa+L,KAMjBmqD,EAEJ/1D,EAASL,YAAcr/D,KAAK8gE,iBAC1BwK,GAAkBhM,GAIpBI,EAASL,YAAckM,GAInBmqD,EAEJh2D,EAASH,UAAYv/D,KAAK+gE,eACxBuK,GAAkBhM,GAIpBI,EAASH,UAAcgM,KAQ1BwnD,gBAAiB,SAAU57D,EAAUw+D,EAAWC,GAE/C,GAAIh3D,GAAQ5+D,KAAK++D,OAAQo1D,EAAMv1D,EAAM0B,KACpCd,EAAcx/D,KAAKigE,kBAEC,QAAhBT,IAEJA,EAAcZ,EAAMw1D,0BACpBp0H,KAAKigE,mBAAqBT,EAI3B,IAAIzJ,GAAQyJ,EAAYxK,mBACvBgB,EAASwJ,EAAYvK,YAKtB,OAHAc,GAAO,GAAMo+D,EAASn+D,EAAQ,GAAM2/D,EACpC5/D,EAAO,GAAMo+D,EAAMh9D,EAAUnB,EAAQ,GAAM4/D,EAEpC51H,OA4BT2C,OAAO+mE,OAAQ1I,GAAejD,UAAWn8D,EAAgBm8D,WAKxD83D,WAAY,SAAUh3D,EAAMi3D,GAE3B,GAAI70D,GAAO60D,GAAgB91H,KAAKkhE,MAC/B60D,EAAW90D,EAAKl+D,KAEhBizH,EAA6B,gBAATn3D,GAClB3H,GAAcmlD,WAAYp7C,EAAMpC,GAASA,EAE3Co3D,EAA0B,OAAfD,EAAsBA,EAAWjzH,KAAO87D,EAEnDq3D,EAAiBl2H,KAAKm2H,eAAgBF,GACtCG,EAAkB,IAEnB,IAAwBhzH,SAAnB8yH,EAA+B,CAEnC,GAAIG,GACFH,EAAeI,aAAcP,EAE/B,IAAwB3yH,SAAnBizH,EAEJ,MAAOA,EAMRD,GAAkBF,EAAeK,aAAc,GAG3B,OAAfP,IACJA,EAAaI,EAAgBp3D,OAK/B,GAAoB,OAAfg3D,EAAsB,MAAO,KAGlC,IAAIQ,GAAY,GAAI73D,IAAiB3+D,KAAMg2H,EAAYF,EAOvD,OALA91H,MAAKy2H,YAAaD,EAAWJ,GAG7Bp2H,KAAK02H,mBAAoBF,EAAWP,EAAUF,GAEvCS,GAKRH,eAAgB,SAAUx3D,EAAMi3D,GAE/B,GAAI70D,GAAO60D,GAAgB91H,KAAKkhE,MAC/B60D,EAAW90D,EAAKl+D,KAEhBizH,EAA6B,gBAATn3D,GAClB3H,GAAcmlD,WAAYp7C,EAAMpC,GAASA,EAE3Co3D,EAAWD,EAAaA,EAAWjzH,KAAO87D,EAE1Cq3D,EAAiBl2H,KAAKm2H,eAAgBF,EAEvC,OAAwB7yH,UAAnB8yH,EAEGA,EAAeI,aAAcP,IAAc,KAI5C,MAKRY,cAAe,WAEd,GAAIC,GAAU52H,KAAK62H,SAClBC,EAAW92H,KAAK+2H,gBAChBxG,EAAWvwH,KAAKo+D,UAChBgzD,EAAYpxH,KAAKg3H,gBAElBh3H,MAAK+2H,gBAAkB,EACvB/2H,KAAKg3H,iBAAmB,CAExB,KAAM,GAAI9vH,GAAI,EAAGA,IAAM4vH,IAAa5vH,EAEnC0vH,EAAS1vH,GAAIm7B,OAId,KAAM,GAAIn7B,GAAI,EAAGA,IAAMkqH,IAAclqH,EAEpCqpH,EAAUrpH,GAAIk2D,SAAW,CAI1B,OAAOp9D,OAKRugB,OAAQ,SAAUm0G,GAEjBA,GAAa10H,KAAKugE,SAYlB,KAAM,GAVFq2D,GAAU52H,KAAK62H,SAClBC,EAAW92H,KAAK+2H,gBAEhBz2D,EAAOtgE,KAAKsgE,MAAQo0D,EACpBC,EAAgB3xH,KAAK+uD,KAAM2iE,GAE3B3G,EAAY/tH,KAAKohE,YAAc,EAItBl6D,EAAI,EAAGA,IAAM4vH,IAAa5vH,EAAI,CAEvC,GAAI8jH,GAAS4L,EAAS1vH,EAEjB8jH,GAAOzrG,SAEXyrG,EAAOyJ,QAASn0D,EAAMo0D,EAAWC,EAAe5G,GAWlD,IAAM,GAHFwC,GAAWvwH,KAAKo+D,UACnBgzD,EAAYpxH,KAAKg3H,iBAER9vH,EAAI,EAAGA,IAAMkqH,IAAclqH,EAEpCqpH,EAAUrpH,GAAI2iC,MAAOkkF,EAItB,OAAO/tH,OAKRw0H,QAAS,WAER,MAAOx0H,MAAKkhE,OAKb+1D,YAAa,SAAUp4D,GAEtB,GAAI+3D,GAAU52H,KAAK62H,SAClBZ,EAAWp3D,EAAK97D,KAChBm0H,EAAgBl3H,KAAKm2H,eACrBD,EAAiBgB,EAAejB,EAEjC,IAAwB7yH,SAAnB8yH,EAA+B,CAQnC,IAAM,GAFFiB,GAAkBjB,EAAeK,aAE3BrvH,EAAI,EAAGJ,EAAIqwH,EAAgBnxH,OAAQkB,IAAMJ,IAAMI,EAAI,CAE5D,GAAI8jH,GAASmM,EAAiBjwH,EAE9BlH,MAAKqyH,kBAAmBrH,EAExB,IAAIoM,GAAapM,EAAOlrD,YACvBu3D,EAAqBT,EAASA,EAAQ5wH,OAAS,EAEhDglH,GAAOlrD,YAAc,KACrBkrD,EAAOjrD,kBAAoB,KAE3Bs3D,EAAmBv3D,YAAcs3D,EACjCR,EAASQ,GAAeC,EACxBT,EAAQ/9F,MAER74B,KAAKs3H,iCAAkCtM,SAIjCkM,GAAejB,KAOxBsB,YAAa,SAAUt2D,GAEtB,GAAI80D,GAAW90D,EAAKl+D,KACnBm0H,EAAgBl3H,KAAKm2H,cAEtB,KAAM,GAAIF,KAAYiB,GAAgB,CAErC,GAAIZ,GAAeY,EAAejB,GAAWK,aAC5CtL,EAASsL,EAAcP,EAER3yH,UAAX4nH,IAEJhrH,KAAKqyH,kBAAmBrH,GACxBhrH,KAAKw3H,sBAAuBxM,IAM9B,GAAIyM,GAAiBz3H,KAAK03H,uBACzBC,EAAgBF,EAAgB1B,EAEjC,IAAuB3yH,SAAlBu0H,EAEJ,IAAM,GAAI1a,KAAa0a,GAAgB,CAEtC,GAAI/6D,GAAU+6D,EAAe1a,EAC7BrgD,GAAQyxD,uBACRruH,KAAK43H,uBAAwBh7D,KAShCi7D,cAAe,SAAUh5D,EAAMi3D,GAE9B,GAAI9K,GAAShrH,KAAKq2H,eAAgBx3D,EAAMi3D,EAExB,QAAX9K,IAEJhrH,KAAKqyH,kBAAmBrH,GACxBhrH,KAAKw3H,sBAAuBxM,OAU/BroH,OAAO+mE,OAAQ1I,GAAejD,WAE7B04D,YAAa,SAAUzL,EAAQoL,GAE9B,GAAIn1D,GAAO+pD,EAAO/rD,YAAcj/D,KAAKkhE,MACpC9J,EAAS4zD,EAAOhsD,MAAM5H,OACtB8H,EAAU9H,EAAOpxD,OACjBuqH,EAAWvF,EAAOnrD,kBAClBV,EAAe6rD,EAAOprD,cACtBm2D,EAAW90D,EAAKl+D,KAChB00H,EAAiBz3H,KAAK03H,uBACtBI,EAAiBL,EAAgB1B,EAEV3yH,UAAnB00H,IAEJA,KACAL,EAAgB1B,GAAa+B,EAI9B,KAAM,GAAI5wH,GAAI,EAAGA,IAAMg4D,IAAYh4D,EAAI,CAEtC,GAAI00G,GAAQxkD,EAAQlwD,GACnB+1G,EAAYrB,EAAM14G,KAClB05D,EAAUk7D,EAAgB7a,EAE3B,IAAiB75G,SAAZw5D,EAEJ2zD,EAAUrpH,GAAM01D,MAEV,CAIN,GAFAA,EAAU2zD,EAAUrpH,GAEH9D,SAAZw5D,EAAwB,CAIC,OAAxBA,EAAQkD,gBAETlD,EAAQS,eACXr9D,KAAK+3H,oBAAqBn7D,EAASm5D,EAAU9Y,GAI9C,UAID,GAAIzxG,GAAO4qH,GAAmBA,EAC5Bv2D,kBAAmB34D,GAAI01D,QAAQY,UAEjCZ,GAAU,GAAID,IACZW,GAAgBqT,OAAQ1P,EAAMg8C,EAAWzxG,GACzCowG,EAAMrB,cAAeqB,EAAM1B,kBAE1Bt9C,EAAQS,eACXr9D,KAAK+3H,oBAAqBn7D,EAASm5D,EAAU9Y,GAE7CsT,EAAUrpH,GAAM01D,EAIjBuC,EAAcj4D,GAAIiuD,aAAeyH,EAAQ/iC,SAM3Cu4F,gBAAiB,SAAUpH,GAE1B,IAAOhrH,KAAKyyH,gBAAiBzH,GAAW,CAEvC,GAA4B,OAAvBA,EAAOlrD,YAAuB,CAKlC,GAAIi2D,IAAa/K,EAAO/rD,YAAcj/D,KAAKkhE,OAAQn+D,KAClDkzH,EAAWjL,EAAOhsD,MAAMj8D,KACxBmzH,EAAiBl2H,KAAKm2H,eAAgBF,EAEvCj2H,MAAKy2H,YAAazL,EAChBkL,GAAkBA,EAAeK,aAAc,IAEjDv2H,KAAK02H,mBAAoB1L,EAAQiL,EAAUF,GAO5C,IAAM,GAHFxF,GAAWvF,EAAOnrD,kBAGZ34D,EAAI,EAAGJ,EAAIypH,EAASvqH,OAAQkB,IAAMJ,IAAMI,EAAI,CAErD,GAAI01D,GAAU2zD,EAAUrpH,EAEK,KAAxB01D,EAAQQ,aAEZp9D,KAAKg4H,aAAcp7D,GACnBA,EAAQuxD,qBAMVnuH,KAAKi4H,YAAajN,KAMpBqH,kBAAmB,SAAUrH,GAE5B,GAAKhrH,KAAKyyH,gBAAiBzH,GAAW,CAKrC,IAAM,GAHFuF,GAAWvF,EAAOnrD,kBAGZ34D,EAAI,EAAGJ,EAAIypH,EAASvqH,OAAQkB,IAAMJ,IAAMI,EAAI,CAErD,GAAI01D,GAAU2zD,EAAUrpH,EAEK,OAArB01D,EAAQQ,WAEfR,EAAQyxD,uBACRruH,KAAKk4H,iBAAkBt7D,IAMzB58D,KAAKm4H,gBAAiBnN,KAQxB7pD,mBAAoB,WAEnBnhE,KAAK62H,YACL72H,KAAK+2H,gBAAkB,EAEvB/2H,KAAKm2H,kBAQLn2H,KAAKo+D,aACLp+D,KAAKg3H,iBAAmB,EAExBh3H,KAAK03H,0BAGL13H,KAAKo4H,wBACLp4H,KAAKq4H,4BAA8B,CAEnC,IAAIx7G,GAAQ7c,IAEZA,MAAKs+D,OAEJs4D,SACCr4D,GAAIC,SAAU,MAAO3hD,GAAMg6G,SAAS7wH,QACpCu4D,GAAIE,SAAU,MAAO5hD,GAAMk6G,kBAE5BxG,UACChyD,GAAIC,SAAU,MAAO3hD,GAAMuhD,UAAUp4D,QACrCu4D,GAAIE,SAAU,MAAO5hD,GAAMm6G,mBAE5BsB,qBACC/5D,GAAIC,SAAU,MAAO3hD,GAAMu7G,qBAAqBpyH,QAChDu4D,GAAIE,SAAU,MAAO5hD,GAAMw7G,gCAS9B5F,gBAAiB,SAAUzH,GAE1B,GAAI3iG,GAAQ2iG,EAAOlrD,WACnB,OAAiB,QAAVz3C,GAAkBA,EAAQroB,KAAK+2H,iBAIvCL,mBAAoB,SAAU1L,EAAQiL,EAAUF,GAE/C,GAAIa,GAAU52H,KAAK62H,SAClBK,EAAgBl3H,KAAKm2H,eACrBD,EAAiBgB,EAAejB,EAEjC,IAAwB7yH,SAAnB8yH,EAEJA,GAECK,cAAgBvL,GAChBsL,iBAIDtL,EAAOjrD,kBAAoB,EAE3Bm3D,EAAejB,GAAaC,MAEtB,CAEN,GAAIK,GAAeL,EAAeK,YAElCvL,GAAOjrD,kBAAoBw2D,EAAavwH,OACxCuwH,EAAajrH,KAAM0/G,GAIpBA,EAAOlrD,YAAc82D,EAAQ5wH,OAC7B4wH,EAAQtrH,KAAM0/G,GAEdkL,EAAeI,aAAcP,GAAa/K,GAI3CwM,sBAAuB,SAAUxM,GAEhC,GAAI4L,GAAU52H,KAAK62H,SAClBQ,EAAqBT,EAASA,EAAQ5wH,OAAS,GAC/CoxH,EAAapM,EAAOlrD,WAErBu3D,GAAmBv3D,YAAcs3D,EACjCR,EAASQ,GAAeC,EACxBT,EAAQ/9F,MAERmyF,EAAOlrD,YAAc,IAGrB,IAAIm2D,GAAWjL,EAAOhsD,MAAMj8D,KAC3Bm0H,EAAgBl3H,KAAKm2H,eACrBD,EAAiBgB,EAAejB,GAChCsC,EAAsBrC,EAAeK,aAErCiC,EACCD,EAAqBA,EAAoBvyH,OAAS,GAEnDyyH,EAAmBzN,EAAOjrD,iBAE3By4D,GAAgBz4D,kBAAoB04D,EACpCF,EAAqBE,GAAqBD,EAC1CD,EAAoB1/F,MAEpBmyF,EAAOjrD,kBAAoB,IAG3B,IAAIu2D,GAAeJ,EAAeI,aACjCP,GAAaa,EAAQ33D,YAAcj/D,KAAKkhE,OAAQn+D,WAE1CuzH,GAAcP,GAEe,IAA/BwC,EAAoBvyH,cAEjBkxH,GAAejB,GAIvBj2H,KAAKs3H,iCAAkCtM,IAIxCsM,iCAAkC,SAAUtM,GAG3C,IAAM,GADFuF,GAAWvF,EAAOnrD,kBACZ34D,EAAI,EAAGJ,EAAIypH,EAASvqH,OAAQkB,IAAMJ,IAAMI,EAAI,CAErD,GAAI01D,GAAU2zD,EAAUrpH,EAEW,OAA3B01D,EAAQS,gBAEfr9D,KAAK43H,uBAAwBh7D,KAQhCq7D,YAAa,SAAUjN,GAQtB,GAAI4L,GAAU52H,KAAK62H,SAClB6B,EAAY1N,EAAOlrD,YAEnB64D,EAAkB34H,KAAK+2H,kBAEvB6B,EAAsBhC,EAAS+B,EAEhC3N,GAAOlrD,YAAc64D,EACrB/B,EAAS+B,GAAoB3N,EAE7B4N,EAAoB94D,YAAc44D,EAClC9B,EAAS8B,GAAcE,GAIxBT,gBAAiB,SAAUnN,GAQ1B,GAAI4L,GAAU52H,KAAK62H,SAClB6B,EAAY1N,EAAOlrD,YAEnB+4D,IAAwB74H,KAAK+2H,gBAE7B+B,EAAmBlC,EAASiC,EAE7B7N,GAAOlrD,YAAc+4D,EACrBjC,EAASiC,GAAuB7N,EAEhC8N,EAAiBh5D,YAAc44D,EAC/B9B,EAAS8B,GAAcI,GAMxBf,oBAAqB,SAAUn7D,EAASm5D,EAAU9Y,GAEjD,GAAIwa,GAAiBz3H,KAAK03H,uBACzBC,EAAgBF,EAAgB1B,GAEhCxF,EAAWvwH,KAAKo+D,SAEMh7D,UAAlBu0H,IAEJA,KACAF,EAAgB1B,GAAa4B,GAI9BA,EAAe1a,GAAcrgD,EAE7BA,EAAQkD,YAAcywD,EAASvqH,OAC/BuqH,EAASjlH,KAAMsxD,IAIhBg7D,uBAAwB,SAAUh7D,GAEjC,GAAI2zD,GAAWvwH,KAAKo+D,UACnB26D,EAAcn8D,EAAQA,QACtBm5D,EAAWgD,EAAYx7D,SAASx6D,KAChCk6G,EAAY8b,EAAYvtH,KACxBisH,EAAiBz3H,KAAK03H,uBACtBC,EAAgBF,EAAgB1B,GAEhCiD,EAAsBzI,EAAUA,EAASvqH,OAAS,GAClDoxH,EAAax6D,EAAQkD,WAEtBk5D,GAAoBl5D,YAAcs3D,EAClC7G,EAAU6G,GAAe4B,EACzBzI,EAAS13F,YAEF8+F,GAAe1a,EAEtBgc,GAAkB,CAEjB,IAAM,GAAIC,KAAKvB,GAAgB,KAAMsB,SAE9BxB,GAAgB1B,KAMzBiC,aAAc,SAAUp7D,GAEvB,GAAI2zD,GAAWvwH,KAAKo+D,UACnBs6D,EAAY97D,EAAQkD,YAEpB64D,EAAkB34H,KAAKg3H,mBAEvBmC,EAAuB5I,EAAUoI,EAElC/7D,GAAQkD,YAAc64D,EACtBpI,EAAUoI,GAAoB/7D,EAE9Bu8D,EAAqBr5D,YAAc44D,EACnCnI,EAAUmI,GAAcS,GAIzBjB,iBAAkB,SAAUt7D,GAE3B,GAAI2zD,GAAWvwH,KAAKo+D,UACnBs6D,EAAY97D,EAAQkD,YAEpB+4D,IAAwB74H,KAAKg3H,iBAE7BoC,EAAoB7I,EAAUsI,EAE/Bj8D,GAAQkD,YAAc+4D,EACtBtI,EAAUsI,GAAuBj8D,EAEjCw8D,EAAkBt5D,YAAc44D,EAChCnI,EAAUmI,GAAcU,GAOzBhF,wBAAyB,WAExB,GAAIj1D,GAAen/D,KAAKo4H,qBACvBO,EAAkB34H,KAAKq4H,8BACvB74D,EAAcL,EAAcw5D,EAa7B,OAXqBv1H,UAAhBo8D,IAEJA,EAAc,GAAI5J,IAChB,GAAI9vD,cAAc,GAAK,GAAIA,cAAc,GACxC,EAAG9F,KAAKq5H,kCAEX75D,EAAY85D,aAAeX,EAC3Bx5D,EAAcw5D,GAAoBn5D,GAI5BA,GAIRm0D,4BAA6B,SAAUn0D,GAEtC,GAAIL,GAAen/D,KAAKo4H,qBACvBM,EAAYl5D,EAAY85D,aAExBT,IAAwB74H,KAAKq4H,4BAE7BkB,EAAwBp6D,EAAc05D,EAEvCr5D,GAAY85D,aAAeT,EAC3B15D,EAAc05D,GAAuBr5D,EAErC+5D,EAAsBD,aAAeZ,EACrCv5D,EAAcu5D,GAAca,GAI7BF,iCAAkC,GAAIvzH,cAAc,KAuBrDu7D,GAAQtD,WAEP1I,YAAagM,GAEbh9D,SAAU,SAAW4uE,GAKpB,MAHAjzE,MAAK2lB,SAAU,EACf3lB,KAAK09E,iBAAmBzK,EAEjBjzE,OAmBTshE,GAAwBvD,UAAYp7D,OAAOguE,OAAQvoD,GAAe21C,WAClEuD,GAAwBvD,UAAU1I,YAAciM,GAEhDA,GAAwBvD,UAAUlvB,2BAA4B,EAE9DyyB,GAAwBvD,UAAUpzC,SAAW,SAAWxG,EAAO7f,EAAOk1H,GAErEx5H,KAAKyhB,OAAOnW,MAEX6Y,MAAOA,EACP7f,MAAOA,EACPk1H,UAAWA,KAMbl4D,GAAwBvD,UAAU7rD,KAAO,SAAWmpD,GAEnD,GAAIhzC,GAAQgzC,EAAOhzC,KAEJ,QAAVA,GAEJroB,KAAKgrB,SAAU3C,EAAMzL,QAItB,IAAIxN,GAAaisD,EAAOjsD,UAExB,KAAM,GAAIlM,KAAQkM,GAAa,CAE9B,GAAIuqB,GAAYvqB,EAAYlM,EAC5BlD,MAAKirB,aAAc/nB,EAAMy2B,EAAU/c,SAMpC,IAAM,GAFF6E,GAAS45C,EAAO55C,OAEVva,EAAI,EAAGyK,EAAI8P,EAAOzb,OAAY2L,EAAJzK,EAAOA,IAAO,CAEjD,GAAI2a,GAAQJ,EAAQva,EACpBlH,MAAK2qB,SAAU9I,EAAMsC,MAAOtC,EAAMvd,MAAOud,EAAM23G,WAIhD,MAAOx5H,OAqBRuhE,GAA2BxD,WAE1B1I,YAAakM,GAEbp0C,8BAA8B,EAE9BoxC,GAAIj6D,SAEH,MAAOtE,MAAKotB,KAAK9oB,OAIlBi6D,GAAI73D,SAEH,MAAO1G,MAAKotB,KAAK1mB,OAIlBomD,KAAM,SAAWzkC,EAAOvmB,GAIvB,MAFA9B,MAAKotB,KAAK1mB,MAAO2hB,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,QAAW/B,EAErD9B,MAIRotE,KAAM,SAAW/kD,EAAOtmB,GAIvB,MAFA/B,MAAKotB,KAAK1mB,MAAO2hB,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAAS,GAAM9B,EAEzD/B,MAIRmvE,KAAM,SAAW9mD,EAAO7jB,GAIvB,MAFAxE,MAAKotB,KAAK1mB,MAAO2hB,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAAS,GAAMW,EAEzDxE,MAIRovE,KAAM,SAAW/mD,EAAO7nB,GAIvB,MAFAR,MAAKotB,KAAK1mB,MAAO2hB,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAAS,GAAMrD,EAEzDR,MAIRmnD,KAAM,SAAW9+B,GAEhB,MAAOroB,MAAKotB,KAAK1mB,MAAO2hB,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,SAIzDujD,KAAM,SAAW/+B,GAEhB,MAAOroB,MAAKotB,KAAK1mB,MAAO2hB,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAAS,IAIlEwjD,KAAM,SAAWh/B,GAEhB,MAAOroB,MAAKotB,KAAK1mB,MAAO2hB,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAAS,IAIlEs5F,KAAM,SAAW90E,GAEhB,MAAOroB,MAAKotB,KAAK1mB,MAAO2hB,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAAS,IAIlEgpD,MAAO,SAAWxkC,EAAOvmB,EAAGC,GAO3B,MALAsmB,GAAQA,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAExC7D,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAMvmB,EAC/B9B,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAMtmB,EAExB/B,MAIR4sD,OAAQ,SAAWvkC,EAAOvmB,EAAGC,EAAGyC,GAQ/B,MANA6jB,GAAQA,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAExC7D,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAMvmB,EAC/B9B,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAMtmB,EAC/B/B,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAM7jB,EAExBxE,MAIRo9F,QAAS,SAAW/0E,EAAOvmB,EAAGC,EAAGyC,EAAGhE,GASnC,MAPA6nB,GAAQA,EAAQroB,KAAKotB,KAAKmiB,OAASvvC,KAAK6D,OAExC7D,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAMvmB,EAC/B9B,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAMtmB,EAC/B/B,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAM7jB,EAC/BxE,KAAKotB,KAAK1mB,MAAO2hB,EAAQ,GAAM7nB,EAExBR,OAyBTyhE,GAAkB1D,WAEjB1I,YAAaoM,GAEbg4D,qBAAqB,EAErBl7D,GAAI1pD,aAAahS,GAEXA,KAAU,GAAO7C,KAAKoE,WAI5ByiB,WAAY,SAAWhkB,GAItB,MAFA7C,MAAK2lB,QAAU9iB,EAER7C,MAIRkS,KAAM,SAAWmpD,GAOhB,MALAr7D,MAAK0G,MAAQ,GAAI20D,GAAO30D,MAAM2uD,YAAagG,EAAO30D,OAClD1G,KAAKsE,MAAQ+2D,EAAO/2D,MACpBtE,KAAKuvC,OAAS8rB,EAAO9rB,OACrBvvC,KAAK2lB,QAAU01C,EAAO11C,QAEf3lB,MAIR28F,OAAQ,SAAWp1C,EAAQ5tB,EAAWutB,GAErCK,GAAUvnD,KAAKuvC,OACf2X,GAAUvtB,EAAU4V,MAEpB,KAAM,GAAIroC,GAAI,EAAGyK,EAAI3R,KAAKuvC,OAAY59B,EAAJzK,EAAOA,IAExClH,KAAK0G,MAAO6gD,EAASrgD,GAAMyyB,EAAUjzB,MAAOwgD,EAAShgD,EAItD,OAAOlH,OAIR0M,IAAK,SAAW7J,EAAOgB,GAMtB,MAJgBT,UAAXS,IAAuBA,EAAS,GAErC7D,KAAK0G,MAAMgG,IAAK7J,EAAOgB,GAEhB7D,MAIR4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,QAkBtC0hE,GAA2B3D,UAAYp7D,OAAOguE,OAAQlP,GAAkB1D,WACxE2D,GAA2B3D,UAAU1I,YAAcqM,GAEnDA,GAA2B3D,UAAUvuB,8BAA+B,EAEpEkyB,GAA2B3D,UAAU7rD,KAAO,SAAWmpD,GAMtD,MAJAoG,IAAkB1D,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAE7Cr7D,KAAK4lC,iBAAmBy1B,EAAOz1B,iBAExB5lC,MAgBR2hE,GAAyB5D,UAAYp7D,OAAOguE,OAAQprD,GAAgBw4C,WACpE4D,GAAyB5D,UAAU1I,YAAcsM,GAEjDA,GAAyB5D,UAAUtuB,4BAA6B,EAEhEkyB,GAAyB5D,UAAU7rD,KAAO,SAAWmpD,GAMpD,MAJA91C,IAAgBw4C,UAAU7rD,KAAK/M,KAAMnF,KAAMq7D,GAE3Cr7D,KAAK4lC,iBAAmBy1B,EAAOz1B,iBAExB5lC,MAiER4hE,GAAU7D,WAET1I,YAAauM,GAEb2lC,cAAe,EAEf76F,IAAK,SAAW6V,EAAQC,GAIvBxiB,KAAK6hE,IAAIn1D,IAAK6V,EAAQC,IAIvBk3G,cAAe,SAAW3yE,EAAQp2C,GAE3BA,GAAUA,EAAO00F,qBAEtBrlG,KAAK6hE,IAAIt/C,OAAO5B,sBAAuBhQ,EAAOkB,aAC9C7R,KAAK6hE,IAAIr/C,UAAU9V,IAAKq6C,EAAOjlD,EAAGilD,EAAOhlD,EAAG,IAAMqnE,UAAWz4D,GAASinC,IAAK53C,KAAK6hE,IAAIt/C,QAASg2B,aAEjF5nC,GAAUA,EAAO01F,sBAE7BrmG,KAAK6hE,IAAIt/C,OAAO7V,IAAKq6C,EAAOjlD,EAAGilD,EAAOhlD,GAAK4O,EAAO6E,KAAO7E,EAAO8E,MAAU9E,EAAO6E,KAAO7E,EAAO8E,MAAQ2zD,UAAWz4D,GAClH3Q,KAAK6hE,IAAIr/C,UAAU9V,IAAK,EAAG,EAAG,IAAMmrC,mBAAoBlnC,EAAOkB,cAI/D5L,QAAQC,MAAO,8CAMjBg8D,gBAAiB,SAAWhnD,EAAQmnD,GAEnC,GAAID,KAMJ,OAJAF,IAAiBhnD,EAAQlb,KAAMoiE,EAAYC,GAE3CD,EAAWvsD,KAAMosD,IAEVG,GAIRu3D,iBAAkB,SAAWrqF,EAAS+yB,GAErC,GAAID,KAEJ,IAAK1jD,MAAMgG,QAAS4qB,MAAc,EAGjC,MADArpC,SAAQgc,KAAM,8DACPmgD,CAIR,KAAM,GAAIl7D,GAAI,EAAGyK,EAAI29B,EAAQtpC,OAAY2L,EAAJzK,EAAOA,IAE3Cg7D,GAAiB5yB,EAASpoC,GAAKlH,KAAMoiE,EAAYC,EAMlD,OAFAD,GAAWvsD,KAAMosD,IAEVG,IAsBTG,GAAMxE,WAEL1I,YAAakN,GAEbp+C,MAAO,WAENnkB,KAAK27D,WAAci+D,aAAeC,MAAO1F,MAEzCn0H,KAAKyiE,QAAUziE,KAAK27D,UACpB37D,KAAK2iE,SAAU,GAIhB0pD,KAAM,WAELrsH,KAAK85H,iBACL95H,KAAK2iE,SAAU,GAIhBm3D,eAAgB,WAGf,MADA95H,MAAK+5H,WACE/5H,KAAK0iE,aAIbq3D,SAAU,WAET,GAAI7jC,GAAO,CAQX,IANKl2F,KAAKwiE,YAAexiE,KAAK2iE,SAE7B3iE,KAAKmkB,QAIDnkB,KAAK2iE,QAAU,CAEnB,GAAIq3D,IAAYJ,aAAeC,MAAO1F,KAEtCj+B,IAAS8jC,EAAUh6H,KAAKyiE,SAAY,IACpCziE,KAAKyiE,QAAUu3D,EAEfh6H,KAAK0iE,aAAewzB,EAIrB,MAAOA,KA2MTvxB,GAAU5G,WAET1I,YAAasP,GAEbj4D,IAAK,SAAWqN,EAAQ81C,EAAKuB,GAM5B,MAJApxD,MAAK+Z,OAASA,EACd/Z,KAAK6vD,IAAMA,EACX7vD,KAAKoxD,MAAQA,EAENpxD,MAIR4c,MAAO,WAEN,OAAO,GAAI5c,MAAKq1D,aAAcnjD,KAAMlS,OAIrCkS,KAAM,SAAW+nH,GAMhB,MAJAj6H,MAAK+Z,OAAO7H,KAAM+nH,EAAMlgH,QACxB/Z,KAAK6vD,IAAI39C,KAAM+nH,EAAMpqE,KACrB7vD,KAAKoxD,MAAMl/C,KAAM+nH,EAAM7oE,OAEhBpxD,MAKRk6H,SAAU,WAET,GAAIvoD,GAAM,IAGV,OAFA3xE,MAAK6vD,IAAM7sD,KAAK8J,IAAK6kE,EAAK3uE,KAAK6J,IAAK7J,KAAKylD,GAAKkpB,EAAK3xE,KAAK6vD,MAEjD7vD,MAIRy4F,eAAgB,SAAU0hC,GAgBzB,MAdAn6H,MAAK+Z,OAASogH,EAAKn0H,SAEE,IAAhBhG,KAAK+Z,QAET/Z,KAAKoxD,MAAQ,EACbpxD,KAAK6vD,IAAM,IAIX7vD,KAAKoxD,MAAQpuD,KAAK0mD,MAAOywE,EAAKr4H,EAAGq4H,EAAK31H,GACtCxE,KAAK6vD,IAAM7sD,KAAKusE,KAAM/tE,EAAQwB,KAAK0sD,MAAOyqE,EAAKp4H,EAAI/B,KAAK+Z,OAAQ,GAAK,KAI/D/Z,OAkCT4kE,GAAe7G,UAAYp7D,OAAOguE,OAAQpoD,GAAKw1C,WAC/C6G,GAAe7G,UAAU1I,YAAcuP,GAEvCA,GAAe7G,UAAUoH,gBAAkB,SAAWjiE,EAAMihB,EAAOC,EAAK8gD,GAEvE,GAAI63C,IAEH54F,MAAOA,EACPC,IAAKA,EAELpe,OAAQoe,EAAMD,EAAQ,EAEtB+gD,IAAKA,EACL/N,UAAY/yC,EAAMD,GAAU+gD,EAE5Bk1D,UAAW,EACXC,aAAc,EAEdC,QAAQ,EAERh6D,KAAM,EACN99C,UAAW,EACXi+C,OAAQ,EAER85D,oBAAoB,EACpBC,cAAc,EAIfx6H,MAAK6kE,cAAe3hE,GAAS65G,EAC7B/8G,KAAK8kE,eAAex5D,KAAMyxG,IAI3Bn4C,GAAe7G,UAAU08D,qBAAuB,SAAWv1D,GAQ1D,IAAM,GAJFw1D,GAFAvpG,EAAU,mBAEMwpG,KAEhBt/G,EAAWrb,KAAKqb,SAEVnU,EAAI,EAAG2Y,EAAKxE,EAAS3C,aAAa1S,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAElE,GAAI0zH,GAAQv/G,EAAS3C,aAAcxR,GAC/B2oB,EAAS+qG,EAAM13H,KAAK0I,MAAOulB,EAE/B,IAAKtB,GAAUA,EAAO7pB,OAAS,EAAI,CAElC,GAAI9C,GAAO2sB,EAAQ,EAEZ8qG,GAAaz3H,KAASy3H,EAAaz3H,IAAWihB,MAAOpX,EAAAA,EAAUqX,MAAOrX,EAAAA,IAE7E,IAAI4/D,GAAQguD,EAAaz3H,EAEpBgE,GAAIylE,EAAMxoD,QAAQwoD,EAAMxoD,MAAQjd,GAChCA,EAAIylE,EAAMvoD,MAAMuoD,EAAMvoD,IAAMld,GAE1BwzH,IAAiBA,EAAiBx3H,IAM3C,IAAM,GAAIA,KAAQy3H,GAAc,CAE/B,GAAIhuD,GAAQguD,EAAaz3H,EACzBlD,MAAKmlE,gBAAiBjiE,EAAMypE,EAAMxoD,MAAOwoD,EAAMvoD,IAAK8gD,GAIrDllE,KAAK06H,eAAiBA,GAIvB91D,GAAe7G,UAAU88D,6BAA+B,SAAW33H,GAElE,GAAI65G,GAAY/8G,KAAK6kE,cAAe3hE,EAE/B65G,KAEJA,EAAUv6F,UAAY,EACtBu6F,EAAUwd,oBAAqB,IAMjC31D,GAAe7G,UAAU+8D,8BAAgC,SAAW53H,GAEnE,GAAI65G,GAAY/8G,KAAK6kE,cAAe3hE,EAE/B65G,KAEJA,EAAUv6F,UAAY,GACtBu6F,EAAUwd,oBAAqB,IAMjC31D,GAAe7G,UAAUg9D,gBAAkB,SAAW73H,EAAMgiE,GAE3D,GAAI63C,GAAY/8G,KAAK6kE,cAAe3hE,EAE/B65G,KAEJA,EAAU73C,IAAMA,EAChB63C,EAAU5lD,UAAa4lD,EAAU34F,IAAM24F,EAAU54F,OAAU44F,EAAU73C,MAMvEN,GAAe7G,UAAUi9D,qBAAuB,SAAW93H,EAAMi0D,GAEhE,GAAI4lD,GAAY/8G,KAAK6kE,cAAe3hE,EAE/B65G,KAEJA,EAAU5lD,SAAWA,EACrB4lD,EAAU73C,KAAQ63C,EAAU34F,IAAM24F,EAAU54F,OAAU44F,EAAU5lD,WAMlEyN,GAAe7G,UAAUqH,mBAAqB,SAAWliE,EAAMu9D,GAE9D,GAAIs8C,GAAY/8G,KAAK6kE,cAAe3hE,EAE/B65G,KAEJA,EAAUt8C,OAASA,IAMrBmE,GAAe7G,UAAUk9D,iBAAmB,SAAW/3H,EAAMo9D,GAE5D,GAAIy8C,GAAY/8G,KAAK6kE,cAAe3hE,EAE/B65G,KAEJA,EAAUz8C,KAAOA,IAMnBsE,GAAe7G,UAAUm9D,iBAAmB,SAAWh4H,GAEtD,GAAIo9D,GAAO,EAEPy8C,EAAY/8G,KAAK6kE,cAAe3hE,EAQpC,OANK65G,KAEJz8C,EAAOy8C,EAAUz8C,MAIXA,GAIRsE,GAAe7G,UAAUo9D,qBAAuB,SAAWj4H,GAE1D,GAAIi0D,GAAW,GAEX4lD,EAAY/8G,KAAK6kE,cAAe3hE,EAQpC,OANK65G,KAEJ5lD,EAAW4lD,EAAU5lD,UAIfA,GAIRyN,GAAe7G,UAAUq9D,cAAgB,SAAWl4H,GAEnD,GAAI65G,GAAY/8G,KAAK6kE,cAAe3hE,EAE/B65G,IAEJA,EAAUz8C,KAAO,EACjBy8C,EAAUud,QAAS,GAInBr0H,QAAQgc,KAAM,mCAAqC/e,EAAO,oCAM5D0hE,GAAe7G,UAAUs9D,cAAgB,SAAWn4H;AAEnD,GAAI65G,GAAY/8G,KAAK6kE,cAAe3hE,EAE/B65G,KAEJA,EAAUud,QAAS,IAMrB11D,GAAe7G,UAAUx9C,OAAS,SAAWulE,GAE5C,IAAM,GAAI5+E,GAAI,EAAG2Y,EAAK7f,KAAK8kE,eAAe9+D,OAAY6Z,EAAJ3Y,EAAQA,IAAO,CAEhE,GAAI61G,GAAY/8G,KAAK8kE,eAAgB59D,EAErC,IAAO61G,EAAUud,OAAjB,CAEA,GAAIve,GAAYgB,EAAU5lD,SAAW4lD,EAAU/2G,MAE/C+2G,GAAUz8C,MAAQy8C,EAAUv6F,UAAYsjE,EAEnCi3B,EAAUyd,cAETzd,EAAUz8C,KAAOy8C,EAAU5lD,UAAY4lD,EAAUz8C,KAAO,KAE5Dy8C,EAAUv6F,WAAa,GAElBu6F,EAAUz8C,KAAOy8C,EAAU5lD,WAE/B4lD,EAAUz8C,KAAOy8C,EAAU5lD,SAC3B4lD,EAAUwd,oBAAqB,GAI3Bxd,EAAUz8C,KAAO,IAErBy8C,EAAUz8C,KAAO,EACjBy8C,EAAUwd,oBAAqB,KAQjCxd,EAAUz8C,KAAOy8C,EAAUz8C,KAAOy8C,EAAU5lD,SAEvC4lD,EAAUz8C,KAAO,IAAIy8C,EAAUz8C,MAAQy8C,EAAU5lD,UAIvD,IAAImkE,GAAWve,EAAU54F,MAAQ3iB,EAAQwB,KAAK0sD,MAAO1sD,KAAK6nB,MAAOkyF,EAAUz8C,KAAOy7C,GAAa,EAAGgB,EAAU/2G,OAAS,GACjHy6D,EAASs8C,EAAUt8C,MAElB66D,KAAave,EAAUsd,eAE3Br6H,KAAKkhD,sBAAuB67D,EAAUqd,WAAc,EACpDp6H,KAAKkhD,sBAAuB67D,EAAUsd,cAAiB,EAAI55D,EAE3DzgE,KAAKkhD,sBAAuBo6E,GAAa,EAEzCve,EAAUqd,UAAYrd,EAAUsd,aAChCtd,EAAUsd,aAAeiB,EAI1B,IAAIrN,GAAQlR,EAAUz8C,KAAOy7C,EAAcA,CAEtCgB,GAAUwd,qBAAqBtM,EAAM,EAAIA,GAEzClR,EAAUsd,eAAiBtd,EAAUqd,WAEzCp6H,KAAKkhD,sBAAuB67D,EAAUsd,cAAiBpM,EAAMxtD,EAC7DzgE,KAAKkhD,sBAAuB67D,EAAUqd,YAAgB,EAAInM,GAAQxtD,GAIlEzgE,KAAKkhD,sBAAuB67D,EAAUsd,cAAiB55D,KAqB1D4E,GAAsBtH,UAAYp7D,OAAOguE,OAAQ7tD,GAASi7C,WAC1DsH,GAAsBtH,UAAU1I,YAAcgQ,GAE9CA,GAAsBtH,UAAUzsB,yBAA0B,EAmD1Di0B,GAAoBxH,UAAYp7D,OAAOguE,OAAQ/qB,GAAamY,WAC5DwH,GAAoBxH,UAAU1I,YAAckQ,GAE5CA,GAAoBxH,UAAUx9C,OAAW,WAExC,GAAIqoC,GAAK,GAAIjjD,GACTkjD,EAAK,GAAIljD,GACT+d,EAAe,GAAI1J,GAEvB,OAAO,YAEN,GAAI0sC,IAAS,IAAK,IAAK,IAEvB1mD,MAAKkb,OAAOkG,mBAAmB,GAE/BsC,EAAa4oB,gBAAiBtsC,KAAKkb,OAAOrJ,YAE1C,IAAIA,GAAc7R,KAAKkb,OAAOrJ,YAE1BgC,EAAW7T,KAAKqb,SAASjM,WAAWyE,SAIpC6xD,EAAc1lE,KAAKkb,OAAOG,QAE9B,IAAMqqD,GAAeA,EAAY1pD,WAQhC,IAAM,GANF7O,GAAWu4D,EAAYv4D,SAEvBC,EAAQs4D,EAAYt4D,MAEpB+yF,EAAM,EAEAj5F,EAAI,EAAGyK,EAAIvE,EAAMpH,OAAY2L,EAAJzK,EAAOA,IAIzC,IAAM,GAFF4Z,GAAO1T,EAAOlG,GAER+L,EAAI,EAAGC,EAAK4N,EAAK2D,cAAcze,OAAYkN,EAAJD,EAAQA,IAAO,CAE/D,GAAI5D,GAASlC,EAAU2T,EAAM4lC,EAAMzzC,KAE/BiH,EAAS4G,EAAK2D,cAAexR,EAEjC21C,GAAG12C,KAAM7C,GAASyC,aAAcD,GAEhCg3C,EAAG32C,KAAMgI,GAASq6D,aAAc7wD,GAAe60B,YAAY3K,eAAgB5tC,KAAKmK,MAAO4W,IAAK6nC,GAE5F/0C,EAAS+4C,OAAQuzC,EAAKv3C,EAAG9mD,EAAG8mD,EAAG7mD,EAAG6mD,EAAGpkD,GAErC27F,GAAY,EAEZtsF,EAAS+4C,OAAQuzC,EAAKt3C,EAAG/mD,EAAG+mD,EAAG9mD,EAAG8mD,EAAGrkD,GAErC27F,GAAY,MAMR,IAAMz6B,GAAeA,EAAY5pD,iBAUvC,IAAM,GARFy/G,GAAS71D,EAAYt2D,WAAWyE,SAEhC2nH,EAAU91D,EAAYt2D,WAAW8K,OAEjCimF,EAAM,EAIAltF,EAAI,EAAGC,EAAKqoH,EAAOj3H,MAAW4O,EAAJD,EAAQA,IAE3C21C,EAAGl8C,IAAK6uH,EAAOp0E,KAAMl0C,GAAKsoH,EAAOn0E,KAAMn0C,GAAKsoH,EAAOl0E,KAAMp0C,IAAMnB,aAAcD,GAE7Eg3C,EAAGn8C,IAAK8uH,EAAQr0E,KAAMl0C,GAAKuoH,EAAQp0E,KAAMn0C,GAAKuoH,EAAQn0E,KAAMp0C,IAE5D41C,EAAG0rB,aAAc7wD,GAAe60B,YAAY3K,eAAgB5tC,KAAKmK,MAAO4W,IAAK6nC,GAE7E/0C,EAAS+4C,OAAQuzC,EAAKv3C,EAAG9mD,EAAG8mD,EAAG7mD,EAAG6mD,EAAGpkD,GAErC27F,GAAY,EAEZtsF,EAAS+4C,OAAQuzC,EAAKt3C,EAAG/mD,EAAG+mD,EAAG9mD,EAAG8mD,EAAGrkD,GAErC27F,GAAY,CAQd,OAFAtsF,GAASgB,aAAc,EAEhB7U,SAuDT2lE,GAAgB5H,UAAYp7D,OAAOguE,OAAQ7tD,GAASi7C,WACpD4H,GAAgB5H,UAAU1I,YAAcsQ,GAExCA,GAAgB5H,UAAUlhC,QAAU,WAEnC78B,KAAK4lE,KAAKvqD,SAASwhB,UACnB78B,KAAK4lE,KAAK9vD,SAAS+mB,WAIpB8oC,GAAgB5H,UAAUx9C,OAAS,WAElC,GAAI6J,GAAS,GAAIzkB,GACb81H,EAAU,GAAI91H,EAElB,OAAO,YAEN,GAAI+1H,GAAa17H,KAAK8f,MAAM4N,SAAW1tB,KAAK8f,MAAM4N,SAAW,IACzDiuG,EAAYD,EAAa14H,KAAKq6E,IAAKr9E,KAAK8f,MAAMm4B,MAElDj4C,MAAK4lE,KAAK/1D,MAAMnD,IAAKivH,EAAWA,EAAWD,GAE3CtxG,EAAOzJ,sBAAuB3gB,KAAK8f,MAAMjO,aACzC4pH,EAAQ96G,sBAAuB3gB,KAAK8f,MAAMqB,OAAOtP,aAEjD7R,KAAK4lE,KAAK3kD,OAAQw6G,EAAQ7jF,IAAKxtB,IAE/BpqB,KAAK4lE,KAAK9vD,SAASlG,MAAMsC,KAAMlS,KAAK8f,MAAMlQ,OAAQg+B,eAAgB5tC,KAAK8f,MAAMs3B,eAkD/EyuB,GAAe9H,UAAYp7D,OAAOguE,OAAQ/qB,GAAamY,WACvD8H,GAAe9H,UAAU1I,YAAcwQ,GAEvCA,GAAe9H,UAAU+H,YAAc,SAAU5qD,GAEhD,GAAI0gH,KAEE1gH,IAAUA,EAAO6qD,QAEtB61D,EAAStwH,KAAM4P,EAIhB,KAAM,GAAIhU,GAAI,EAAGA,EAAIgU,EAAOna,SAASiF,OAAQkB,IAE5C00H,EAAStwH,KAAKu+B,MAAO+xF,EAAU57H,KAAK8lE,YAAa5qD,EAAOna,SAAUmG,IAInE,OAAO00H,IAIR/1D,GAAe9H,UAAUx9C,OAAS,WAUjC,IAAM,GARFlF,GAAWrb,KAAKqb,SAEhBwgH,GAAiB,GAAIj2H,IAAUyb,WAAYrhB,KAAKihE,KAAKpvD,aAErDiqH,EAAa,GAAIl2H,GAEjBqN,EAAI,EAEE/L,EAAI,EAAGA,EAAIlH,KAAKq2B,MAAMrwB,OAAQkB,IAAO,CAE9C,GAAIg+C,GAAOllD,KAAKq2B,MAAOnvB,EAEjBg+C,GAAK7hC,QAAU6hC,EAAK7hC,OAAO0iD,SAEhC+1D,EAAWlmH,iBAAkBimH,EAAgB32E,EAAKrzC,aAClDwJ,EAASlO,SAAU8F,GAAI0N,sBAAuBm7G,GAE9CA,EAAWlmH,iBAAkBimH,EAAgB32E,EAAK7hC,OAAOxR,aACzDwJ,EAASlO,SAAU8F,EAAI,GAAI0N,sBAAuBm7G,GAElD7oH,GAAK,GAMPoI,EAASmM,oBAAqB,EAE9BnM,EAASo1B,yBA+CVw1B,GAAiBlI,UAAYp7D,OAAOguE,OAAQpoD,GAAKw1C,WACjDkI,GAAiBlI,UAAU1I,YAAc4Q,GAEzCA,GAAiBlI,UAAUlhC,QAAU,WAEpC78B,KAAKqb,SAASwhB,UACd78B,KAAK8V,SAAS+mB,WAIfopC,GAAiBlI,UAAUx9C,OAAS,WAEnCvgB,KAAK8V,SAASlG,MAAMsC,KAAMlS,KAAK8f,MAAMlQ,OAAQg+B,eAAgB5tC,KAAK8f,MAAMs3B,YAsDzE+uB,GAAsBpI,UAAYp7D,OAAOguE,OAAQ7tD,GAASi7C,WAC1DoI,GAAsBpI,UAAU1I,YAAc8Q,GAE9CA,GAAsBpI,UAAUlhC,QAAU,WAEzC78B,KAAKsmE,YAAYjrD,SAASwhB,UAC1B78B,KAAKsmE,YAAYxwD,SAAS+mB,WAI3BspC,GAAsBpI,UAAUx9C,OAAS,WAExC,GAAI6J,GAAS,GAAIzkB,EAEjB,OAAO,YAEN3F,KAAKgnB,OAAQ,GAAI9U,KAAMlS,KAAK8f,MAAMlQ,OAAQg+B,eAAgB5tC,KAAK8f,MAAMs3B,WACrEp3C,KAAKgnB,OAAQ,GAAI9U,KAAMlS,KAAK8f,MAAMiO,aAAc6f,eAAgB5tC,KAAK8f,MAAMs3B,WAE3Ep3C,KAAKsmE,YAAYrlD,OAAQmJ,EAAOzJ,sBAAuB3gB,KAAK8f,MAAMjO,aAAcsmC,UAChFn4C,KAAKsmE,YAAYjrD,SAASsM,kBAAmB,MA4C/C4+C,GAAWxI,UAAYp7D,OAAOguE,OAAQ/qB,GAAamY,WACnDwI,GAAWxI,UAAU1I,YAAckR,GAEnCA,GAAWxI,UAAUg+D,UAAY,WAEhC91H,QAAQC,MAAO,6FAsDhB0gE,GAAkB7I,UAAYp7D,OAAOguE,OAAQ/qB,GAAamY,WAC1D6I,GAAkB7I,UAAU1I,YAAcuR,GAE1CA,GAAkB7I,UAAUx9C,OAAW,WAEtC,GAAIqoC,GAAK,GAAIjjD,GACTkjD,EAAK,GAAIljD,GACT+d,EAAe,GAAI1J,GAEvB,OAAO,YAENha,KAAKkb,OAAOkG,mBAAmB,GAE/BsC,EAAa4oB,gBAAiBtsC,KAAKkb,OAAOrJ,YAgB1C,KAAM,GAdFA,GAAc7R,KAAKkb,OAAOrJ,YAE1BgC,EAAW7T,KAAKqb,SAASjM,WAAWyE,SAIpC6xD,EAAc1lE,KAAKkb,OAAOG,SAE1BlO,EAAWu4D,EAAYv4D,SAEvBC,EAAQs4D,EAAYt4D,MAEpB+yF,EAAM,EAEAj5F,EAAI,EAAGyK,EAAIvE,EAAMpH,OAAY2L,EAAJzK,EAAOA,IAAO,CAEhD,GAAI4Z,GAAO1T,EAAOlG,GAEdgT,EAAS4G,EAAK5G,MAElB0uC,GAAG12C,KAAM/E,EAAU2T,EAAK/L,IACtBgM,IAAK5T,EAAU2T,EAAKzY,IACpB0Y,IAAK5T,EAAU2T,EAAKwD,IACpB0kC,aAAc,GACdl3C,aAAcD,GAEhBg3C,EAAG32C,KAAMgI,GAASq6D,aAAc7wD,GAAe60B,YAAY3K,eAAgB5tC,KAAKmK,MAAO4W,IAAK6nC,GAE5F/0C,EAAS+4C,OAAQuzC,EAAKv3C,EAAG9mD,EAAG8mD,EAAG7mD,EAAG6mD,EAAGpkD,GAErC27F,GAAY,EAEZtsF,EAAS+4C,OAAQuzC,EAAKt3C,EAAG/mD,EAAG+mD,EAAG9mD,EAAG8mD,EAAGrkD,GAErC27F,GAAY,EAMb,MAFAtsF,GAASgB,aAAc,EAEhB7U,SA8CT6mE,GAAuB9I,UAAYp7D,OAAOguE,OAAQ7tD,GAASi7C,WAC3D8I,GAAuB9I,UAAU1I,YAAcwR,GAE/CA,GAAuB9I,UAAUlhC,QAAU,WAE1C,GAAIm/F,GAAah8H,KAAKe,SAAU,GAC5Bk7H,EAAaj8H,KAAKe,SAAU,EAEhCi7H,GAAW3gH,SAASwhB,UACpBm/F,EAAWlmH,SAAS+mB,UACpBo/F,EAAW5gH,SAASwhB,UACpBo/F,EAAWnmH,SAAS+mB,WAIrBgqC,GAAuB9I,UAAUx9C,OAAS,WAEzC,GAAIqoC,GAAK,GAAIjjD,GACTkjD,EAAK,GAAIljD,GACTmjD,EAAK,GAAInjD,EAEb,OAAO,YAENijD,EAAGjoC,sBAAuB3gB,KAAK8f,MAAMjO,aACrCg3C,EAAGloC,sBAAuB3gB,KAAK8f,MAAMqB,OAAOtP,aAC5Ci3C,EAAG2D,WAAY5D,EAAID,EAEnB,IAAIozE,GAAah8H,KAAKe,SAAU,GAC5Bk7H,EAAaj8H,KAAKe,SAAU,EAEhCi7H,GAAW/6G,OAAQ6nC,GACnBkzE,EAAWlmH,SAASlG,MAAMsC,KAAMlS,KAAK8f,MAAMlQ,OAAQg+B,eAAgB5tC,KAAK8f,MAAMs3B,WAE9E6kF,EAAWh7G,OAAQ6nC,GACnBmzE,EAAWpsH,MAAMrL,EAAIskD,EAAG9iD,aAiH1B8gE,GAAa/I,UAAYp7D,OAAOguE,OAAQ/qB,GAAamY,WACrD+I,GAAa/I,UAAU1I,YAAcyR,GAErCA,GAAa/I,UAAUx9C,OAAS,WAO/B,QAAS27G,GAAU/jG,EAAOr2B,EAAGC,EAAGyC,GAE/B4lB,EAAO1d,IAAK5K,EAAGC,EAAGyC,GAAI4kE,UAAWz4D,EAEjC,IAAI2tC,GAAS2oB,EAAU9uC,EAEvB,IAAgB/0B,SAAXk7C,EAEJ,IAAM,GAAIp3C,GAAI,EAAG2Y,EAAKy+B,EAAOt4C,OAAY6Z,EAAJ3Y,EAAQA,IAE5CmU,EAASlO,SAAUmxC,EAAQp3C,IAAMgL,KAAMkY,GAf1C,GAAI/O,GAAU4rD,EAEV78C,EAAS,GAAIzkB,GACbgL,EAAS,GAAI6a,GAoBjB,OAAO,YAENnQ,EAAWrb,KAAKqb,SAChB4rD,EAAWjnE,KAAKinE,QAEhB,IAAIzmE,GAAI,EAAG0oB,EAAI,CAKfvY,GAAOsB,iBAAiBC,KAAMlS,KAAK2Q,OAAOsB,kBAI1CiqH,EAAU,IAAK,EAAG,EAAG,IACrBA,EAAU,IAAK,EAAG,EAAI,GAItBA,EAAU,MAAQ17H,GAAK0oB,EAAG,IAC1BgzG,EAAU,KAAQ17H,GAAK0oB,EAAG,IAC1BgzG,EAAU,MAAQ17H,EAAK0oB,EAAG,IAC1BgzG,EAAU,KAAQ17H,EAAK0oB,EAAG,IAI1BgzG,EAAU,MAAQ17H,GAAK0oB,EAAG,GAC1BgzG,EAAU,KAAQ17H,GAAK0oB,EAAG,GAC1BgzG,EAAU,MAAQ17H,EAAK0oB,EAAG,GAC1BgzG,EAAU,KAAQ17H,EAAK0oB,EAAG,GAI1BgzG,EAAU,KAAY,GAAJ17H,EAAa,IAAJ0oB,EAAS,IACpCgzG,EAAU,KAAY,IAAJ17H,EAAa,IAAJ0oB,EAAS,IACpCgzG,EAAU,KAAc,EAAO,EAAJhzG,EAAS,IAIpCgzG,EAAU,OAAS17H,EAAK,EAAG,GAC3B07H,EAAU,MAAS17H,EAAK,EAAG,GAC3B07H,EAAU,MAAS,GAAKhzG,EAAG,GAC3BgzG,EAAU,MAAS,EAAKhzG,EAAG,GAE3BgzG,EAAU,OAAS17H,EAAK,EAAG,IAC3B07H,EAAU,MAAS17H,EAAK,EAAG,IAC3B07H,EAAU,MAAS,GAAKhzG,EAAG,IAC3BgzG,EAAU,MAAS,EAAKhzG,EAAG,IAE3B7N,EAASmM,oBAAqB,MAwBhC+/C,GAAkBxJ,UAAYp7D,OAAOguE,OAAQpoD,GAAKw1C,WAClDwJ,GAAkBxJ,UAAU1I,YAAckS,GAE1CA,GAAkBxJ,UAAUx9C,OAAS,WAEpCvgB,KAAKwnE,IAAIttC,cAAel6B,KAAKkb,QAE7Blb,KAAKwnE,IAAIr9D,KAAMnK,KAAK6P,OAEpB7P,KAAKwnE,IAAIspB,UAAW9wF,KAAK6T,WA6B1B4zD,GAAU1J,UAAYp7D,OAAOguE,OAAQ/qB,GAAamY,WAClD0J,GAAU1J,UAAU1I,YAAcoS,GAElCA,GAAU1J,UAAUx9C,OAAS,WAE5B,GAAIinD,GAAM,GAAI5tD,GAEd,OAAO,UAAiBsB,GAYvB,GAVMA,GAAUA,EAAO62E,OAEtBvqB,EAAIt1D,KAAMgJ,GAIVssD,EAAIttC,cAAehf,IAIfssD,EAAIqpB,UAAT,CAEA,GAAIhkF,GAAM26D,EAAI36D,IACVC,EAAM06D,EAAI16D,IAkBV+G,EAAW7T,KAAKqb,SAASjM,WAAWyE,SACpCnN,EAAQmN,EAASnN,KAErBA,GAAQ,GAAMoG,EAAIhL,EAAG4E,EAAQ,GAAMoG,EAAI/K,EAAG2E,EAAQ,GAAMoG,EAAItI,EAC5DkC,EAAQ,GAAMmG,EAAI/K,EAAG4E,EAAQ,GAAMoG,EAAI/K,EAAG2E,EAAQ,GAAMoG,EAAItI,EAC5DkC,EAAQ,GAAMmG,EAAI/K,EAAG4E,EAAQ,GAAMmG,EAAI9K,EAAG2E,EAAQ,GAAMoG,EAAItI,EAC5DkC,EAAQ,GAAMoG,EAAIhL,EAAG4E,EAAO,IAAOmG,EAAI9K,EAAG2E,EAAO,IAAOoG,EAAItI,EAC5DkC,EAAO,IAAOoG,EAAIhL,EAAG4E,EAAO,IAAOoG,EAAI/K,EAAG2E,EAAO,IAAOmG,EAAIrI,EAC5DkC,EAAO,IAAOmG,EAAI/K,EAAG4E,EAAO,IAAOoG,EAAI/K,EAAG2E,EAAO,IAAOmG,EAAIrI,EAC5DkC,EAAO,IAAOmG,EAAI/K,EAAG4E,EAAO,IAAOmG,EAAI9K,EAAG2E,EAAO,IAAOmG,EAAIrI,EAC5DkC,EAAO,IAAOoG,EAAIhL,EAAG4E,EAAO,IAAOmG,EAAI9K,EAAG2E,EAAO,IAAOmG,EAAIrI,EAE5DqP,EAASgB,aAAc,EAEvB7U,KAAKqb,SAASo1B,4BAMhB,IAAIs3B,IAAe,GAAI3/C,GACvB2/C,IAAa98C,aAAc,WAAY,GAAIxE,KAAoB,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,GAEnF,IAAIuhD,IAAe,GAAIpX,IAAwB,EAAG,GAAK,EAAG,EAAG,EAC7DoX,IAAaupB,UAAW,GAAK,GAAK,GA4BlC7pB,GAAY3J,UAAYp7D,OAAOguE,OAAQ7tD,GAASi7C,WAChD2J,GAAY3J,UAAU1I,YAAcqS,GAEpCA,GAAY3J,UAAUkK,aAAiB,WAEtC,GACI8E,GADAuE,EAAO,GAAI3rE,EAGf,OAAO,UAAuBgiE,GAIxBA,EAAI5lE,EAAI,OAEZ/B,KAAKgjB,WAAWtW,IAAK,EAAG,EAAG,EAAG,GAEnBi7D,EAAI5lE,GAAM,OAErB/B,KAAKgjB,WAAWtW,IAAK,EAAG,EAAG,EAAG,IAI9B4kE,EAAK5kE,IAAKi7D,EAAInjE,EAAG,GAAKmjE,EAAI7lE,GAAIy2C,YAE9Bw0B,EAAU/pE,KAAKusE,KAAM5H,EAAI5lE,GAEzB/B,KAAKgjB,WAAWquD,iBAAkBC,EAAMvE,QAQ3CrF,GAAY3J,UAAUmK,UAAY,SAAWliE,EAAQ4hE,EAAYC,GAE5CzkE,SAAfwkE,IAA2BA,EAAa,GAAM5hE,GAChC5C,SAAdykE,IAA0BA,EAAY,GAAMD,GAEjD5nE,KAAK8nE,KAAKj4D,MAAMnD,IAAK,EAAG1J,KAAK8J,IAAK,EAAG9G,EAAS4hE,GAAc,GAC5D5nE,KAAK8nE,KAAKxT,eAEVt0D,KAAK4lE,KAAK/1D,MAAMnD,IAAKm7D,EAAWD,EAAYC,GAC5C7nE,KAAK4lE,KAAK/xD,SAAS9R,EAAIiE,EACvBhG,KAAK4lE,KAAKtR,gBAIXoT,GAAY3J,UAAUo+D,SAAW,SAAWvsH,GAE3C5P,KAAK8nE,KAAKhyD,SAASlG,MAAMsC,KAAMtC,GAC/B5P,KAAK4lE,KAAK9vD,SAASlG,MAAMsC,KAAMtC,IAmChCu4D,GAAWpK,UAAYp7D,OAAOguE,OAAQ/qB,GAAamY,WACnDoK,GAAWpK,UAAU1I,YAAc8S,GAanC3mE,EAAQ6mE,iBAAmB,WAkB1B,QAAS+zD,MAhBT,GACC7gD,GAAM,GAAI51E,GACV+oD,EAAK,GAAI0tE,GACTztE,EAAK,GAAIytE,GACTxtE,EAAK,GAAIwtE,EAgEV,OAxCAA,GAAUr+D,UAAU7wD,KAAO,SAAUy8C,EAAIC,EAAIotC,EAAIC,GAEhDj3F,KAAKq8H,GAAK1yE,EACV3pD,KAAK+wE,GAAKimB,EACVh3F,KAAKgxE,GAAK,GAAMrnB,EAAK,EAAIC,EAAK,EAAIotC,EAAKC,EACvCj3F,KAAKixE,GAAK,EAAItnB,EAAK,EAAIC,EAAKotC,EAAKC,GAIlCmlC,EAAUr+D,UAAUu+D,yBAA2B,SAAU3yE,EAAIC,EAAIC,EAAI0yE,EAAIC,EAAKC,EAAKC,GAGlF,GAAIzlC,IAAOrtC,EAAKD,GAAO6yE,GAAQ3yE,EAAKF,IAAS6yE,EAAMC,IAAU5yE,EAAKD,GAAO6yE,EACrE35D,GAAOjZ,EAAKD,GAAO6yE,GAAQF,EAAK3yE,IAAS6yE,EAAMC,IAAUH,EAAK1yE,GAAO6yE,CAGzEzlC,IAAMwlC,EACN35D,GAAM25D,EAGNz8H,KAAKkN,KAAM08C,EAAIC,EAAIotC,EAAIn0B,IAKxBs5D,EAAUr+D,UAAU4+D,eAAiB,SAAUhzE,EAAIC,EAAIC,EAAI0yE,EAAIK,GAE9D58H,KAAKkN,KAAM08C,EAAIC,EAAI+yE,GAAY/yE,EAAKF,GAAMizE,GAAYL,EAAK3yE,KAI5DwyE,EAAUr+D,UAAU8+D,KAAO,SAAU3yE,GAEpC,GAAI4Y,GAAK5Y,EAAIA,EACT6Y,EAAKD,EAAK5Y,CACd,OAAOlqD,MAAKq8H,GAAKr8H,KAAK+wE,GAAK7mB,EAAIlqD,KAAKgxE,GAAKlO,EAAK9iE,KAAKixE,GAAKlO,GAKlD/K,GAAM2Y,OAEZ,SAAWn4C,GAEVx4B,KAAKs+C,OAAS9lB,MACdx4B,KAAKuqD,QAAS,GAIf,SAAWL,GAEV,GACC/xB,GAAO6qC,EAAUvC,EAAQ9uD,EADtB2sC,EAASt+C,KAAKs+C,MAGlB3sC,GAAI2sC,EAAOt4C,OAEF,EAAJ2L,GAAQ1L,QAAQmvB,IAAK,mCAE1B+C,GAAUxmB,GAAM3R,KAAKuqD,OAAS,EAAI,IAAQL,EAC1C8Y,EAAWhgE,KAAK6nB,MAAOsN,GACvBsoC,EAAStoC,EAAQ6qC,EAEZhjE,KAAKuqD,OAETyY,GAAYA,EAAW,EAAI,GAAMhgE,KAAK6nB,MAAO7nB,KAAK+sC,IAAKizB,GAAa1kB,EAAOt4C,QAAW,GAAMs4C,EAAOt4C,OAE7E,IAAXy6D,GAAgBuC,IAAarxD,EAAI,IAE5CqxD,EAAWrxD,EAAI,EACf8uD,EAAS,EAIV,IAAIpmD,GAAIC,EAAIC,EAAIC,CA6BhB,IA3BKxa,KAAKuqD,QAAUyY,EAAW,EAE9B3oD,EAAKikC,GAAU0kB,EAAW,GAAMrxD,IAKhC4pE,EAAI9uB,WAAYnO,EAAQ,GAAKA,EAAQ,IAAMv9B,IAAKu9B,EAAQ,IACxDjkC,EAAKkhE,GAINjhE,EAAKgkC,EAAQ0kB,EAAWrxD,GACxB4I,EAAK+jC,GAAU0kB,EAAW,GAAMrxD,GAE3B3R,KAAKuqD,QAAyB54C,EAAfqxD,EAAW,EAE9BxoD,EAAK8jC,GAAU0kB,EAAW,GAAMrxD,IAKhC4pE,EAAI9uB,WAAYnO,EAAQ3sC,EAAI,GAAK2sC,EAAQ3sC,EAAI,IAAMoP,IAAKu9B,EAAQ3sC,EAAI,IACpE6I,EAAK+gE,GAIan4E,SAAdpD,KAAKwC,MAAoC,gBAAdxC,KAAKwC,MAAwC,YAAdxC,KAAKwC,KAAqB,CAGxF,GAAI6mD,GAAoB,YAAdrpD,KAAKwC,KAAqB,GAAM,IACtCg6H,EAAMx5H,KAAKqmD,IAAKhvC,EAAG8zD,kBAAmB7zD,GAAM+uC,GAC5CozE,EAAMz5H,KAAKqmD,IAAK/uC,EAAG6zD,kBAAmB5zD,GAAM8uC,GAC5CqzE,EAAM15H,KAAKqmD,IAAK9uC,EAAG4zD,kBAAmB3zD,GAAM6uC,EAGrC,MAANozE,IAAaA,EAAM,GACb,KAAND,IAAaA,EAAMC,GACb,KAANC,IAAaA,EAAMD,GAExB/tE,EAAG4tE,yBAA0BjiH,EAAGvY,EAAGwY,EAAGxY,EAAGyY,EAAGzY,EAAG0Y,EAAG1Y,EAAG06H,EAAKC,EAAKC,GAC/D/tE,EAAG2tE,yBAA0BjiH,EAAGtY,EAAGuY,EAAGvY,EAAGwY,EAAGxY,EAAGyY,EAAGzY,EAAGy6H,EAAKC,EAAKC,GAC/D9tE,EAAG0tE,yBAA0BjiH,EAAG7V,EAAG8V,EAAG9V,EAAG+V,EAAG/V,EAAGgW,EAAGhW,EAAGg4H,EAAKC,EAAKC,OAEzD,IAAmB,eAAd18H,KAAKwC,KAAwB,CAExC,GAAIo6H,GAA2Bx5H,SAAjBpD,KAAK48H,QAAwB58H,KAAK48H,QAAU,EAC1DluE,GAAGiuE,eAAgBtiH,EAAGvY,EAAGwY,EAAGxY,EAAGyY,EAAGzY,EAAG0Y,EAAG1Y,EAAG86H,GAC3CjuE,EAAGguE,eAAgBtiH,EAAGtY,EAAGuY,EAAGvY,EAAGwY,EAAGxY,EAAGyY,EAAGzY,EAAG66H,GAC3ChuE,EAAG+tE,eAAgBtiH,EAAG7V,EAAG8V,EAAG9V,EAAG+V,EAAG/V,EAAGgW,EAAGhW,EAAGo4H,GAI5C,GAAIl1H,GAAI,GAAI/B,GACX+oD,EAAGmuE,KAAMp8D,GACT9R,EAAGkuE,KAAMp8D,GACT7R,EAAGiuE,KAAMp8D,GAGV,OAAO/4D,QAuBV0gE,GAAmBrK,UAAYp7D,OAAOguE,OAAQnvE,EAAQ6mE,iBAAiBtK,UAOvE,IAAI++D,IAAe9kE,GAAM2Y,OAExB,SAAWryB,GAEVr4C,QAAQgc,KAAM,4EACdjiB,KAAKs+C,OAAsBl7C,SAAXk7C,KAA8BA,GAI/C,SAAW4L,GAEV,GAAI5L,GAASt+C,KAAKs+C,OACdnmB,GAAUmmB,EAAOt4C,OAAS,GAAMkkD,EAEhC8Y,EAAWhgE,KAAK6nB,MAAOsN,GACvBsoC,EAAStoC,EAAQ6qC,EAEjBsjD,EAAShoE,EAAoB,GAAZ0kB,EAAgBA,EAAWA,EAAW,GACvDujD,EAASjoE,EAAQ0kB,GACjBwjD,EAASloE,EAAQ0kB,EAAW1kB,EAAOt4C,OAAS,EAAIs4C,EAAOt4C,OAAS,EAAIg9D,EAAW,GAC/EyjD,EAASnoE,EAAQ0kB,EAAW1kB,EAAOt4C,OAAS,EAAIs4C,EAAOt4C,OAAS,EAAIg9D,EAAW,GAE/EH,EAAcrhE,EAAQskH,WAAWjjD,WAErC,OAAO,IAAIl9D,GACVk9D,EAAayjD,EAAOxkH,EAAGykH,EAAOzkH,EAAG0kH,EAAO1kH,EAAG2kH,EAAO3kH,EAAG2+D,GACrDoC,EAAayjD,EAAOvkH,EAAGwkH,EAAOxkH,EAAGykH,EAAOzkH,EAAG0kH,EAAO1kH,EAAG0+D,GACrDoC,EAAayjD,EAAO9hH,EAAG+hH,EAAO/hH,EAAGgiH,EAAOhiH,EAAGiiH,EAAOjiH,EAAGi8D,KAWxDj/D,GAAQu7H,kBAAoB/kE,GAAM2Y,OAEjC,SAAW3X,EAAIpQ,EAAIC,EAAIC,GAEtB9oD,KAAKg5D,GAAKA,EACVh5D,KAAK4oD,GAAKA,EACV5oD,KAAK6oD,GAAKA,EACV7oD,KAAK8oD,GAAKA,GAIX,SAAWoB,GAEV,GAAI2lD,GAAKruG,EAAQonG,WAAWiH,EAE5B,OAAO,IAAIlqG,GACVkqG,EAAI3lD,EAAGlqD,KAAKg5D,GAAGl3D,EAAG9B,KAAK4oD,GAAG9mD,EAAG9B,KAAK6oD,GAAG/mD,EAAG9B,KAAK8oD,GAAGhnD,GAChD+tG,EAAI3lD,EAAGlqD,KAAKg5D,GAAGj3D,EAAG/B,KAAK4oD,GAAG7mD,EAAG/B,KAAK6oD,GAAG9mD,EAAG/B,KAAK8oD,GAAG/mD,GAChD8tG,EAAI3lD,EAAGlqD,KAAKg5D,GAAGx0D,EAAGxE,KAAK4oD,GAAGpkD,EAAGxE,KAAK6oD,GAAGrkD,EAAGxE,KAAK8oD,GAAGtkD,MAWnDhD,EAAQw7H,sBAAwBhlE,GAAM2Y,OAErC,SAAW3X,EAAIpQ,EAAIC,GAElB7oD,KAAKg5D,GAAKA,EACVh5D,KAAK4oD,GAAKA,EACV5oD,KAAK6oD,GAAKA,GAIX,SAAWqB,GAEV,GAAIgiB,GAAK1qE,EAAQonG,WAAW18B,EAE5B,OAAO,IAAIvmE,GACVumE,EAAIhiB,EAAGlqD,KAAKg5D,GAAGl3D,EAAG9B,KAAK4oD,GAAG9mD,EAAG9B,KAAK6oD,GAAG/mD,GACrCoqE,EAAIhiB,EAAGlqD,KAAKg5D,GAAGj3D,EAAG/B,KAAK4oD,GAAG7mD,EAAG/B,KAAK6oD,GAAG9mD,GACrCmqE,EAAIhiB,EAAGlqD,KAAKg5D,GAAGx0D,EAAGxE,KAAK4oD,GAAGpkD,EAAGxE,KAAK6oD,GAAGrkD,MAWxChD,EAAQy7H,WAAajlE,GAAM2Y,OAE1B,SAAW/nB,EAAIC,GAEd7oD,KAAK4oD,GAAKA,EACV5oD,KAAK6oD,GAAKA,GAIX,SAAWqB,GAEV,GAAW,IAANA,EAEJ,MAAOlqD,MAAK6oD,GAAGjsC,OAIhB,IAAIwN,GAAS,GAAIzkB,EAMjB,OAJAykB,GAAOqiC,WAAYzsD,KAAK6oD,GAAI7oD,KAAK4oD,IACjCx+B,EAAOwjB,eAAgBsc,GACvB9/B,EAAOrJ,IAAK/gB,KAAK4oD,IAEVx+B,IAgBTk+C,GAASvK,UAAYp7D,OAAOguE,OAAQtY,GAAa0F,WACjDuK,GAASvK,UAAU1I,YAAciT,GAMjC9mE,EAAQ07H,YAEPC,0BAA2B,SAAW9hH,EAAUqG,GAI/C,IAAM,GAFFG,GAAQ,GAAIikC,IAEN5+C,EAAI,EAAGyK,EAAI+P,EAAU1b,OAAY2L,EAAJzK,EAAOA,IAE7C2a,EAAMd,IAAK,GAAIwH,IAAMlN,EAAUqG,EAAWxa,IAI3C,OAAO2a,IAIRu7G,OAAQ,SAAW/iC,EAAOh3E,EAAQ3S,GAEjC2pF,EAAMnB,YAAa71E,EAAOxR,aAC1BwR,EAAO42E,OAAQI,GACf3pF,EAAMqQ,IAAKs5E,IAIZgjC,OAAQ,SAAWhjC,EAAO3pF,EAAO2S,GAEhC,GAAItR,GAAqB,GAAInM,EAC7BmM,GAAmBsP,WAAYgC,EAAOxR,aACtCwoF,EAAMnB,YAAannF,GAEnBrB,EAAMupF,OAAQI,GACdh3E,EAAOtC,IAAKs5E,IAWd,IAAIijC,IAAY,EAEZC,GAAa,CA8CjB56H,QAAO+mE,OAAQ98D,EAAKmxD,WACnBjkD,OAAQ,SAAW2rE,GAElB,MADAx/E,SAAQgc,KAAM,2DACPjiB,KAAK8wF,UAAWrL,IAExBoN,MAAO,WAEN,MADA5sF,SAAQgc,KAAM,wDACPjiB,KAAK6wF,WAEb2sC,kBAAmB,SAAWh2D,GAE7B,MADAvhE,SAAQgc,KAAM,0EACPjiB,KAAKkxF,cAAe1pB,IAE5Br9D,KAAM,SAAWs7E,GAEhB,MADAx/E,SAAQgc,KAAM,uDACPjiB,KAAKy/C,QAASgmC,MAIvB9iF,OAAO+mE,OAAQ9vD,GAAKmkD,WACnBjkD,OAAQ,SAAW2rE,GAElB,MADAx/E,SAAQgc,KAAM,2DACPjiB,KAAK8wF,UAAWrL,IAExBoN,MAAO,WAEN,MADA5sF,SAAQgc,KAAM,wDACPjiB,KAAK6wF,WAEb2sC,kBAAmB,SAAWh2D,GAE7B,MADAvhE,SAAQgc,KAAM,0EACPjiB,KAAKkxF,cAAe1pB,IAE5Bi2D,qBAAsB,SAAW5sF,GAEhC,MADA5qC,SAAQgc,KAAM,gFACPjiB,KAAK8wC,iBAAkBD,IAE/B1mC,KAAM,SAAWs7E,GAEhB,MADAx/E,SAAQgc,KAAM,uDACPjiB,KAAKy/C,QAASgmC,MAIvB9iF,OAAO+mE,OAAQxlD,GAAM65C,WACpBjkD,OAAQ,SAAW2rE,GAElB,MADAx/E,SAAQgc,KAAM,4DACPjiB,KAAK8wF,UAAWrL,MAIzB9iF,OAAO+mE,OAAQ1vD,GAAQ+jD,WACtB2/D,gBAAiB,SAAWtzG,GAE3B,MADAnkB,SAAQgc,KAAM,kGACPmI,EAAOmqD,aAAcv0E,OAE7B29H,qBAAsB,SAAW5oH,GAEhC,MADA9O,SAAQgc,KAAM,6GACPjiB,KAAKm7E,oBAAqBpmE,MAInCpS,OAAO+mE,OAAQ9jE,EAAQm4D,WACtB6/D,gBAAiB,SAAW/xD,GAE3B,MADA5lE,SAAQgc,KAAM,0EACPjiB,KAAKo3E,aAAcvL,IAE3BytB,0BAA2B,SAAWztC,GAErC,MADA5lD,SAAQgc,KAAM,kGACPjiB,KAAK24E,2BAA4B9sB,IAEzC6xE,gBAAiB,SAAWtzG,GAE3B,MADAnkB,SAAQgc,KAAM,sIACPmI,EAAOpY,gBAAiBhS,OAEhC69H,gBAAiB,SAAWzzG,GAE3B,MADAnkB,SAAQgc,KAAM,kGACPmI,EAAOtY,aAAc9R,OAE7B29H,qBAAsB,SAAW5oH,GAEhC,MADA9O,SAAQgc,KAAM,6GACPjiB,KAAKm7E,oBAAqBpmE,IAElC+oH,WAAY,SAAWp2H,GACtBzB,QAAQgc,KAAM,oGACdva,EAAEmwC,mBAAoB73C,OAEvB+9H,YAAa,SAAW3zG,GAEvB,MADAnkB,SAAQgc,KAAM,8FACPmI,EAAOtY,aAAc9R,OAE7BuxF,UAAW,SAAW7pF,GACrBzB,QAAQC,MAAO,kDAEhBkgE,QAAS,SAAWnuB,GACnBhyC,QAAQC,MAAO,gDAEhBuzF,QAAS,SAAWxhD,GACnBhyC,QAAQC,MAAO,gDAEhBwzF,QAAS,SAAWzhD,GACnBhyC,QAAQC,MAAO,gDAEhB83H,aAAc,SAAW1sD,EAAMr5B,GAC9BhyC,QAAQC,MAAO,uDAIjBvD,OAAO+mE,OAAQzvD,GAAM8jD,WACpBkgE,mBAAoB,SAAWn2D,GAE9B,MADA7hE,SAAQgc,KAAM,6EACPjiB,KAAK8zF,eAAgBhsB,MAI9BnlE,OAAO+mE,OAAQpkE,EAAWy4D,WACzB2/D,gBAAiB,SAAWtzG,GAE3B,MADAnkB,SAAQgc,KAAM,mHACPmI,EAAOiqD,gBAAiBr0E,SAIjC2C,OAAO+mE,OAAQpnD,GAAIy7C,WAClBy/D,kBAAmB,SAAWh2D,GAE7B,MADAvhE,SAAQgc,KAAM,yEACPjiB,KAAKkxF,cAAe1pB,IAE5B02D,oBAAqB,SAAW1xF,GAE/B,MADAvmC,SAAQgc,KAAM,6EACPjiB,KAAKyyF,gBAAiBjmD,IAE9BixF,qBAAsB,SAAW5sF,GAEhC,MADA5qC,SAAQgc,KAAM,+EACPjiB,KAAK8wC,iBAAkBD,MAIhCluC,OAAO+mE,OAAQxQ,GAAM6E,WACpBogE,QAAS,SAAWz5H,GAEnB,MADAuB,SAAQgc,KAAM,4EACP,GAAIorC,IAAiBrtD,KAAM0E,IAEnC05H,aAAc,SAAW15H,GAExB,MADAuB,SAAQgc,KAAM,+EACP,GAAIguC,IAAejwD,KAAM0E,MAIlC/B,OAAO+mE,OAAQ/jE,EAAQo4D,WACtBsgE,2BAA4B,WAC3Bp4H,QAAQC,MAAO,8GAEhBo4H,uBAAwB,WACvBr4H,QAAQC,MAAO,sGAEhBq4H,sBAAuB,SAAW1yD,GAEjC,MADA5lE,SAAQgc,KAAM,yFACPjiB,KAAK2gB,sBAAuBkrD,IAEpC2yD,mBAAoB,SAAW3yD,GAE9B,MADA5lE,SAAQgc,KAAM,mFACPjiB,KAAK81E,mBAAoBjK,IAEjC4yD,oBAAqB,SAAWp2G,EAAO3H,GAEtC,MADAza,SAAQgc,KAAM,qFACPjiB,KAAK61E,oBAAqBn1D,EAAQ2H,MAM3C1lB,OAAO+mE,OAAQ5mD,GAASi7C,WACvB2gE,eAAgB,SAAWx7H,GAE1B,MADA+C,SAAQgc,KAAM,6EACPjiB,KAAKo6F,gBAAiBl3F,IAE9By7H,YAAa,SAAW97H,GACvBoD,QAAQgc,KAAM,8EAEfsvE,UAAW,SAAW7jE,EAAU4jD,GAE/B,MADArrE,SAAQgc,KAAM,kGACPjiB,KAAK25F,gBAAiBroB,EAAM5jD,MAIrC/qB,OAAO6gB,iBAAkBV,GAASi7C,WACjC6gE,YACClyG,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,uDACPjiB,KAAK8P,SAAS4S,OAEtBhW,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,uDACdjiB,KAAK8P,SAAS4S,MAAQ7f,IAGxBg8H,eACCnyG,IAAK,WACJzmB,QAAQgc,KAAM,kGAEfvV,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,qGAKjBtf,OAAO6gB,iBAAkBogC,GAAIma,WAC5BzuB,SACC5iB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,oDACPjiB,KAAK6jD,WAOfp4B,GAAkBsyC,UAAU+gE,QAAU,SAAWv5B,EAAax5E,GAE7D9lB,QAAQgc,KAAM,+GAGK7e,SAAd2oB,IAA0B/rB,KAAK+rB,UAAYA,GAChD/rB,KAAKslG,eAAgBC,IAMtB5iG,OAAO6gB,iBAAkB4wC,GAAM2J,WAC9BghE,YACCryH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,gDAGhB+8G,iBACCtyH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,4DACdjiB,KAAK+f,OAAOpP,OAAO+a,IAAM7oB,IAG3Bo8H,kBACCvyH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,8DACdjiB,KAAK+f,OAAOpP,OAAOub,KAAOrpB,IAG5Bq8H,mBACCxyH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,gEACdjiB,KAAK+f,OAAOpP,OAAOwb,MAAQtpB,IAG7Bs8H,iBACCzyH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,4DACdjiB,KAAK+f,OAAOpP,OAAOyb,IAAMvpB,IAG3Bu8H,oBACC1yH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,kEACdjiB,KAAK+f,OAAOpP,OAAO0b,OAASxpB,IAG9Bw8H,kBACC3yH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,8DACdjiB,KAAK+f,OAAOpP,OAAO6E,KAAO3S,IAG5By8H,iBACC5yH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,4DACdjiB,KAAK+f,OAAOpP,OAAO8E,IAAM5S,IAG3B08H,qBACC7yH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,oHAGhBsL,YACC7gB,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,iDACdjiB,KAAK+f,OAAO+3B,KAAOj1C,IAGrB28H,gBACC9yH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,oDAGhBw9G,gBACC/yH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,8DACdjiB,KAAK+f,OAAOC,QAAQ3f,MAAQwC,IAG9B68H,iBACChzH,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,gEACdjiB,KAAK+f,OAAOC,QAAQ1f,OAASuC,MAOhCF,OAAO6gB,iBAAkB+B,GAAgBw4C,WACxC/3D,QACC0mB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,0EACPjiB,KAAK0G,MAAMV,WAKrBrD,OAAO+mE,OAAQthD,GAAe21C,WAC7B4hE,SAAU,SAAWt3G,GACpBpiB,QAAQgc,KAAM,sEACdjiB,KAAKgrB,SAAU3C,IAEhBu3G,YAAa,SAAWz7G,EAAO7f,EAAO6nD,GAChB/oD,SAAhB+oD,GACJlmD,QAAQgc,KAAM,wEAEfhc,QAAQgc,KAAM,4DACdjiB,KAAK2qB,SAAUxG,EAAO7f,IAEvBu7H,eAAgB,WACf55H,QAAQgc,KAAM,kEACdjiB,KAAKuiG,eAEN5D,gBAAiB,WAChB14F,QAAQgc,KAAM,+DAEf69G,eAAgB,WACf75H,QAAQgc,KAAM,gEAIhBtf,OAAO6gB,iBAAkB4E,GAAe21C,WACvCigD,WACCtxF,IAAK,WAEJ,MADAzmB,SAAQC,MAAO,iEACRlG,KAAKyhB,SAGdw8F,SACCvxF,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,+DACPjiB,KAAKyhB,WAOf9e,OAAO6gB,iBAAkBpN,EAAS2nD,WACjCgiE,YACCrzG,IAAK,WACJzmB,QAAQgc,KAAM,SAAWjiB,KAAKwC,KAAO,oCAEtCkK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,SAAWjiB,KAAKwC,KAAO,qCAGvCw9H,SACCtzG,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,SAAWjiB,KAAKwC,KAAO,gCAC9B,GAAIiK,OAKd9J,OAAO6gB,iBAAkBsT,GAAkBinC,WAC1CkiE,OACCvzG,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,8FACP,GAERvV,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,gGAKjBtf,OAAO6gB,iBAAkBtL,EAAe6lD,WACvCllD,aACC6T,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,iFACPjiB,KAAK4Y,WAAWC,aAExBnM,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,kFACdjiB,KAAK4Y,WAAWC,YAAchW,MAOjCjB,EAAgBm8D,UAAYp7D,OAAO+mE,OAAQ/mE,OAAOguE,QAIjDtb,YAAazzD,EAEbioC,MAAO,SAAW1oB,GAEjBlb,QAAQgc,KAAM,uGAGdtf,OAAO+mE,OAAQvoD,EAAQnhB,SAIpB4B,EAAgBm8D,WAIrBp7D,OAAO+mE,OAAQv8B,GAAc4wB,WAC5BmiE,sBAAuB,WAEtB,MADAj6H,SAAQgc,KAAM,gGACPjiB,KAAK4Y,WAAW8T,IAAK,sBAE7ByzG,0BAA2B,WAE1B,MADAl6H,SAAQgc,KAAM,yGACPjiB,KAAK4Y,WAAW8T,IAAK,2BAE7B0zG,4BAA6B,WAE5B,MADAn6H,SAAQgc,KAAM,6GACPjiB,KAAK4Y,WAAW8T,IAAK,6BAE7B2zG,8BAA+B,WAE9B,MADAp6H,SAAQgc,KAAM,oHACPjiB,KAAK4Y,WAAW8T,IAAK,kCAE7B4zG,+BAAgC,WAE/B,MADAr6H,SAAQgc,KAAM,sHACPjiB,KAAK4Y,WAAW8T,IAAK,mCAE7B6zG,oBAAqB,WAEpB,MADAt6H,SAAQgc,KAAM,6FACPjiB,KAAK4Y,WAAW8T,IAAK,qBAE7BsG,uBAAwB,WACvB,MAAOhzB,MAAKgb,aAAa2c,gBAE1B6oG,wBAAyB,WAExB,MADAv6H,SAAQgc,KAAM,uGACPjiB,KAAK4Y,WAAW8T,IAAK,2BAE7B+zG,kBAAmB,SAAW3gF,GAC7B75C,QAAQgc,KAAM,uEACdjiB,KAAK2f,eAAgBmgC,IAEtBhO,aAAc,WACb7rC,QAAQgc,KAAM,2DAEfy+G,aAAc,WACbz6H,QAAQgc,KAAM,2DAEf0+G,cAAe,WACd16H,QAAQgc,KAAM,4DAEf2+G,gBAAiB,WAChB36H,QAAQgc,KAAM,gEAIhBtf,OAAO6gB,iBAAkB2pB,GAAc4wB,WACtCrqC,kBACChH,IAAK,WACJ,MAAO1sB,MAAKwgB,UAAUjB,SAEvB7S,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,qEACdjiB,KAAKwgB,UAAUjB,QAAU1c,IAG3B+uB,eACClF,IAAK,WACJ,MAAO1sB,MAAKwgB,UAAUhe,MAEvBkK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,+DACdjiB,KAAKwgB,UAAUhe,KAAOK,IAGxBg+H,mBACCn0G,IAAK,WACJ,MAAO1sB,MAAKwgB,UAAU4nB,UAEvB17B,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,uEACdjiB,KAAKwgB,UAAU4nB,SAAWvlC,MAK7BF,OAAO6gB,iBAAkB5I,GAAemjD,WACvC31B,UACC1b,IAAK,WACJ,MAAO1sB,MAAKgd,mBAAqBwrB,GAAgBnD,IAElD34B,IAAK,SAAW07B,GACf,GAAIvlC,GAAUulC,IAAa/C,EAC3Bp/B,SAAQgc,KAAM,0FAA4Fpf,EAAQ,KAClH7C,KAAKgd,mBAAqBna,MAO7BF,OAAO6gB,iBAAkB/e,EAAkBs5D,WAC1C57D,OACCuqB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,0DACPjiB,KAAK8E,QAAQ3C,OAErBuK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,0DACdjiB,KAAK8E,QAAQ3C,MAAQU,IAGvBT,OACCsqB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,0DACPjiB,KAAK8E,QAAQ1C,OAErBsK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,0DACdjiB,KAAK8E,QAAQ1C,MAAQS,IAGvBR,WACCqqB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,kEACPjiB,KAAK8E,QAAQzC,WAErBqK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,kEACdjiB,KAAK8E,QAAQzC,UAAYQ,IAG3BP,WACCoqB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,kEACPjiB,KAAK8E,QAAQxC,WAErBoK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,kEACdjiB,KAAK8E,QAAQxC,UAAYO,IAG3BJ,YACCiqB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,oEACPjiB,KAAK8E,QAAQrC,YAErBiK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,oEACdjiB,KAAK8E,QAAQrC,WAAaI,IAG5BgB,QACC6oB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,4DACPjiB,KAAK8E,QAAQjB,QAErB6I,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,4DACdjiB,KAAK8E,QAAQjB,OAAShB,IAGxBiB,QACC4oB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,4DACPjiB,KAAK8E,QAAQhB,QAErB4I,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,4DACdjiB,KAAK8E,QAAQhB,OAASjB,IAGxBN,QACCmqB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,4DACPjiB,KAAK8E,QAAQvC,QAErBmK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,4DACdjiB,KAAK8E,QAAQvC,OAASM,IAGxBL,MACCkqB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,wDACPjiB,KAAK8E,QAAQtC,MAErBkK,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,wDACdjiB,KAAK8E,QAAQtC,KAAOK,IAGtBkB,iBACC2oB,IAAK,WAEJ,MADAzmB,SAAQgc,KAAM,8EACPjiB,KAAK8E,QAAQf,iBAErB2I,IAAK,SAAW7J,GACfoD,QAAQgc,KAAM,8EACdjiB,KAAK8E,QAAQf,gBAAkBlB,MAOlCF,OAAO+mE,OAAQvO,GAAM4C,WACpB82C,KAAM,SAAWD,GAChB3uG,QAAQgc,KAAM,wEACd,IAAIpF,GAAQ7c,KACR8gI,EAAc,GAAI9mE,GAItB,OAHA8mE,GAAYjsB,KAAMD,EAAM,SAAW/6E,GAClChd,EAAMqvG,UAAWryF,KAEX75B,QAIT2C,OAAO+mE,OAAQtN,GAAc2B,WAC5BgjE,QAAS,SAAWnsB,GAEnB,MADA3uG,SAAQgc,KAAM,+DACPjiB,KAAK2tH,qBAMd,IAAIqT,KAEHvuE,MAAO,SAAWwuE,EAAW7wE,EAAWyuC,GAEvC54F,QAAQgc,KAAM,kIAEd,IAAIvB,EAEC0vC,GAAU7yC,SAEd6yC,EAAUzsC,kBAAoBysC,EAAUkE,eAExC5zC,EAAS0vC,EAAU1vC,OACnB0vC,EAAYA,EAAU/0C,UAIvB4lH,EAAUxuE,MAAOrC,EAAW1vC,EAAQm+E,IAIrC/kF,OAAQ,SAAWuB,GAGlB,MADApV,SAAQgc,KAAM,6FACP5G,EAASvB,WAMdonH,IAEHxqB,YAAatzG,OAEbuyG,YAAa,SAAWniD,EAAKtxD,EAAS8wD,EAAQE,GAE7CjtD,QAAQgc,KAAM,uFAEd,IAAI2zF,GAAS,GAAIzhD,GACjByhD,GAAOa,eAAgBz2G,KAAK02G,YAE5B,IAAI5xG,GAAU8wG,EAAOf,KAAMrhD,EAAKR,EAAQ5vD,OAAW8vD,EAInD,OAFKhxD,KAAU4C,EAAQ5C,QAAUA,GAE1B4C,GAIRq8H,gBAAiB,SAAWxqB,EAAMz0G,EAAS8wD,EAAQE,GAElDjtD,QAAQgc,KAAM,+FAEd,IAAI2zF,GAAS,GAAI1hD,GACjB0hD,GAAOa,eAAgBz2G,KAAK02G,YAE5B,IAAI5xG,GAAU8wG,EAAOf,KAAM8B,EAAM3jD,EAAQ5vD,OAAW8vD,EAIpD,OAFKhxD,KAAU4C,EAAQ5C,QAAUA,GAE1B4C,GAIRs8H,sBAAuB,WAEtBn7H,QAAQC,MAAO,0FAIhBm7H,0BAA2B,WAE1Bp7H,QAAQC,MAAO,8FAgDjBvD,QAAOC,eAAgBpB,EAAS,gBAC/BkrB,IAAK,WACJ,MAAOlrB,GAAQo4D,qBAIjBp4D,EAAQ0D,sBAAwBA,EAChC1D,EAAQiD,kBAAoBA,EAC5BjD,EAAQ2rC,cAAgBA,GACxB3rC,EAAQyd,UAAYA,GACpBzd,EAAQkxD,YAAcA,GACtBlxD,EAAQ0vB,YAAcA,GACtB1vB,EAAQ8hD,QAAUA,GAClB9hD,EAAQ+hD,IAAMA,GACd/hD,EAAQgiD,MAAQA,GAChBhiD,EAAQiiD,UAAYA,GACpBjiD,EAAQmiD,OAASA,GACjBniD,EAAQoiD,IAAMA,GACdpiD,EAAQsjD,YAAcA,GACtBtjD,EAAQuiD,SAAWA,GACnBviD,EAAQojD,KAAOA,GACfpjD,EAAQ+mB,KAAOA,GACf/mB,EAAQokD,aAAeA,GACvBpkD,EAAQmkD,KAAOA,GACfnkD,EAAQqkD,OAASA,GACjBrkD,EAAQskD,MAAQA,GAChBtkD,EAAQukD,aAAeA,GACvBvkD,EAAQsiD,YAAcA,GACtBtiD,EAAQ4kD,kBAAoBA,GAC5B5kD,EAAQ2E,YAAcA,EACtB3E,EAAQ6kD,cAAgBA,GACxB7kD,EAAQ8kD,aAAeA,GACvB9kD,EAAQsB,eAAiBA,EACzBtB,EAAQQ,QAAUA,EAClBR,EAAQ6U,gBAAkBA,EAC1B7U,EAAQsyD,wBAA0BA,GAClCtyD,EAAQwyD,oBAAsBA,GAC9BxyD,EAAQy0G,kBAAoBA,GAC5Bz0G,EAAQ0yD,kBAAoBA,GAC5B1yD,EAAQ2yD,cAAgBA,GACxB3yD,EAAQs2D,aAAeA,GACvBt2D,EAAQ81D,eAAiBA,GACzB91D,EAAQ+1D,qBAAuBA,GAC/B/1D,EAAQuxD,eAAiBA,GACzBvxD,EAAQo2D,WAAaA,GACrBp2D,EAAQyyD,YAAcA,GACtBzyD,EAAQm4D,WAAaA,GACrBn4D,EAAQmyD,UAAYA,GACpBnyD,EAAQg2D,OAASA,GACjBh2D,EAAQw4D,YAAcA,GACtBx4D,EAAQgzD,gBAAkBA,GAC1BhzD,EAAQizD,UAAYA,GACpBjzD,EAAQmzD,WAAaA,GACrBnzD,EAAQ6yD,gBAAkBA,GAC1B7yD,EAAQozD,uBAAyBA,GACjCpzD,EAAQqzD,iBAAmBA,GAC3BrzD,EAAQszD,aAAeA,GACvBtzD,EAAQ+yD,YAAcA,GACtB/yD,EAAQ4yD,MAAQA,GAChB5yD,EAAQy4D,aAAeA,GACvBz4D,EAAQiqB,kBAAoBA,GAC5BjqB,EAAQyqB,mBAAqBA,GAC7BzqB,EAAQ64D,WAAaA,GACrB74D,EAAQgqB,OAASA,GACjBhqB,EAAQs5D,cAAgBA,GACxBt5D,EAAQy6D,gBAAkBA,GAC1Bz6D,EAAQo4D,gBAAkBA,GAC1Bp4D,EAAQ46D,cAAgBA,GACxB56D,EAAQ25D,MAAQA,GAChB35D,EAAQk1D,oBAAsBA,GAC9Bl1D,EAAQs1D,oBAAsBA,GAC9Bt1D,EAAQo1D,wBAA0BA,GAClCp1D,EAAQq1D,oBAAsBA,GAC9Br1D,EAAQw1D,mBAAqBA,GAC7Bx1D,EAAQu1D,qBAAuBA,GAC/Bv1D,EAAQm7D,cAAgBA,GACxBn7D,EAAQ87D,gBAAkBA,GAC1B97D,EAAQy1D,cAAgBA,GACxBz1D,EAAQq8D,qBAAuBA,GAC/Br8D,EAAQw/D,eAAiBA,GACzBx/D,EAAQ01D,cAAgBA,GACxB11D,EAAQ6/D,QAAUA,GAClB7/D,EAAQ8/D,wBAA0BA,GAClC9/D,EAAQ4mB,eAAiBA,GACzB5mB,EAAQulB,gBAAkBA,GAC1BvlB,EAAQslB,SAAWA,GACnBtlB,EAAQ+/D,2BAA6BA,GACrC//D,EAAQkgE,2BAA6BA,GACrClgE,EAAQigE,kBAAoBA,GAC5BjgE,EAAQmgE,yBAA2BA,GACnCngE,EAAQolB,uBAAyBA,GACjCplB,EAAQklB,iBAAmBA,GAC3BllB,EAAQilB,iBAAmBA,GAC3BjlB,EAAQ+kB,gBAAkBA,GAC1B/kB,EAAQ8kB,eAAiBA,GACzB9kB,EAAQ6kB,gBAAkBA,GAC1B7kB,EAAQ2kB,eAAiBA,GACzB3kB,EAAQykB,sBAAwBA,GAChCzkB,EAAQukB,eAAiBA,GACzBvkB,EAAQqkB,cAAgBA,GACxBrkB,EAAQ+jB,gBAAkBA,GAC1B/jB,EAAQ+iB,MAAQA,GAChB/iB,EAAQ4hB,gBAAkBA,GAC1B5hB,EAAQshB,SAAWA,GACnBthB,EAAQogE,UAAYA,GACpBpgE,EAAQqhB,OAASA,GACjBrhB,EAAQI,gBAAkBA,EAC1BJ,EAAQ+gE,MAAQA,GAChB/gE,EAAQm1D,4BAA8BA,GACtCn1D,EAAQo0D,kBAAoBA,GAC5Bp0D,EAAQq0D,oBAAsBA,GAC9Br0D,EAAQ+zD,iBAAmBA,GAC3B/zD,EAAQuzD,YAAcA,GACtBvzD,EAAQ6iB,SAAWA,GACnB7iB,EAAQohE,OAASA,GACjBphE,EAAQmjE,UAAYA,GACpBnjE,EAAQyY,MAAQA,GAChBzY,EAAQ4Y,QAAUA,GAClB5Y,EAAQqY,OAASA,GACjBrY,EAAQ8gB,IAAMA,GACd9gB,EAAQoE,QAAUA,EAClBpE,EAAQwY,QAAUA,GAClBxY,EAAQoY,KAAOA,GACfpY,EAAQoL,KAAOA,EACfpL,EAAQ0iB,MAAQA,GAChB1iB,EAAQihB,MAAQA,GAChBjhB,EAAQ+C,QAAUA,EAClB/C,EAAQmE,QAAUA,EAClBnE,EAAQK,QAAUA,EAClBL,EAAQ8D,WAAaA,EACrB9D,EAAQiL,MAAQA,EAChBjL,EAAQojE,eAAiBA,GACzBpjE,EAAQ6jE,sBAAwBA,GAChC7jE,EAAQ+jE,oBAAsBA,GAC9B/jE,EAAQmkE,gBAAkBA,GAC1BnkE,EAAQqkE,eAAiBA,GACzBrkE,EAAQykE,iBAAmBA,GAC3BzkE,EAAQ2kE,sBAAwBA,GAChC3kE,EAAQ+kE,WAAaA,GACrB/kE,EAAQolE,kBAAoBA,GAC5BplE,EAAQqlE,uBAAyBA,GACjCrlE,EAAQslE,aAAeA,GACvBtlE,EAAQ+lE,kBAAoBA,GAC5B/lE,EAAQimE,UAAYA,GACpBjmE,EAAQkmE,YAAcA,GACtBlmE,EAAQ2mE,WAAaA,GACrB3mE,EAAQ4mE,mBAAqBA,GAC7B5mE,EAAQs7H,aAAeA,GACvBt7H,EAAQ8mE,SAAWA,GACnB9mE,EAAQ62D,aAAeA,GACvB72D,EAAQs3D,YAAcA,GACtBt3D,EAAQu3D,iBAAmBA,GAC3Bv3D,EAAQy3D,qBAAuBA,GAC/Bz3D,EAAQy2D,UAAYA,GACpBz2D,EAAQ03D,MAAQA,GAChB13D,EAAQ+3D,UAAYA,GACpB/3D,EAAQ23D,KAAOA,GACf33D,EAAQk4D,KAAOA,GACfl4D,EAAQ02D,UAAYA,GACpB12D,EAAQw2D,MAAQA,GAChBx2D,EAAQ+kD,kBAAoBA,GAC5B/kD,EAAQgmD,mBAAqBA,GAC7BhmD,EAAQuoD,oBAAsBA,GAC9BvoD,EAAQwoD,mBAAqBA,GAC7BxoD,EAAQyoD,oBAAsBA,GAC9BzoD,EAAQ2oD,qBAAuBA,GAC/B3oD,EAAQ4mD,mBAAqBA,GAC7B5mD,EAAQ4oD,aAAeA,GACvB5oD,EAAQurD,kBAAoBA;AAC5BvrD,EAAQkqD,wBAA0BA,GAClClqD,EAAQ4rD,cAAgBA,GACxB5rD,EAAQ0rD,oBAAsBA,GAC9B1rD,EAAQgsD,aAAeA,GACvBhsD,EAAQ0sD,qBAAuBA,GAC/B1sD,EAAQstD,eAAiBA,GACzBttD,EAAQ+tD,aAAeA,GACvB/tD,EAAQutD,mBAAqBA,GAC7BvtD,EAAQ0pB,oBAAsBA,GAC9B1pB,EAAQguD,cAAgBA,GACxBhuD,EAAQwuD,cAAgBA,GACxBxuD,EAAQiuD,oBAAsBA,GAC9BjuD,EAAQyuD,cAAgBA,GACxBzuD,EAAQ6rD,gBAAkBA,GAC1B7rD,EAAQ0uD,cAAgBA,GACxB1uD,EAAQywD,aAAeA,GACvBzwD,EAAQ0wD,mBAAqBA,GAC7B1wD,EAAQwwD,iBAAmBA,GAC3BxwD,EAAQovD,uBAAyBA,GACjCpvD,EAAQ2wD,qBAAuBA,GAC/B3wD,EAAQ8wD,eAAiBA,GACzB9wD,EAAQonB,kBAAoBA,GAC5BpnB,EAAQ+wD,YAAcA,GACtB/wD,EAAQgxD,eAAiBA,GACzBhxD,EAAQkiD,eAAiBA,GACzBliD,EAAQmxD,kBAAoBA,GAC5BnxD,EAAQ0W,eAAiBA,EACzB1W,EAAQ21B,eAAiBA,GACzB31B,EAAQoxD,cAAgBA,GACxBpxD,EAAQw1B,qBAAuBA,GAC/Bx1B,EAAQu1B,qBAAuBA,GAC/Bv1B,EAAQs1B,kBAAoBA,GAC5Bt1B,EAAQo1B,mBAAqBA,GAC7Bp1B,EAAQq1B,oBAAsBA,GAC9Br1B,EAAQ6X,kBAAoBA,EAC5B7X,EAAQojB,kBAAoBA,GAC5BpjB,EAAQ01B,mBAAqBA,GAC7B11B,EAAQy1B,kBAAoBA,GAC5Bz1B,EAAQ4U,SAAWA,EACnB5U,EAAQs7C,SAAWA,GACnBt7C,EAAQ4oE,MAAQA,GAChB5oE,EAAQ6mC,aAAeA,GACvB7mC,EAAQ6jC,aAAeA,GACvB7jC,EAAQgnC,cAAgBA,GACxBhnC,EAAQgpE,kBAAoBA,GAC5BhpE,EAAQmhD,qBAAuBA,GAC/BnhD,EAAQipE,sBAAwBA,GAChCjpE,EAAQkpE,eAAiBA,GACzBlpE,EAAQie,aAAeA,GACvBje,EAAQqwB,iBAAmBA,GAC3BrwB,EAAQiV,UAAYA,GACpBjV,EAAQyb,SAAWA,GACnBzb,EAAQub,WAAaA,GACrBvb,EAAQu2B,YAAcA,GACtBv2B,EAAQmV,cAAgBA,GACxBnV,EAAQqV,SAAWA,GACnBrV,EAAQ6kE,WAAaA,GACrB7kE,EAAQwkE,aAAeA,GACvBxkE,EAAQ0kC,WAAaA,GACrB1kC,EAAQ+U,eAAiBA,GACzB/U,EAAQ6kC,iBAAmBA,GAC3B7kC,EAAQolC,oBAAsBA,GAC9BplC,EAAQwlC,iBAAmBA,GAC3BxlC,EAAQ0lC,eAAiBA,GACzB1lC,EAAQmpE,aAAeA,GACvBnpE,EAAQyV,YAAcA,GACtBzV,EAAQ44C,iBAAmBA,GAC3B54C,EAAQ84C,wBAA0BA,GAClC94C,EAAQg7C,YAAcA,GACtBh7C,EAAQk7C,YAAcA,GACtBl7C,EAAQg5C,WAAaA,GACrBh5C,EAAQi5C,UAAYA,GACpBj5C,EAAQk5C,eAAiBA,GACzBl5C,EAAQm5C,uBAAyBA,GACjCn5C,EAAQuV,eAAiBA,GACzBvV,EAAQwV,uBAAyBA,GACjCxV,EAAQo5C,eAAiBA,GACzBp5C,EAAQs5C,uBAAyBA,GACjCt5C,EAAQw5C,eAAiBA,GACzBx5C,EAAQ05C,uBAAyBA,GACjC15C,EAAQ45C,uBAAyBA,GACjC55C,EAAQqhC,WAAaA,GACrBrhC,EAAQuhC,YAAcA,GACtBvhC,EAAQyhC,UAAYA,GACpBzhC,EAAQ8V,eAAiBA,GACzB9V,EAAQ4hC,WAAaA,GACrB5hC,EAAQ8hC,kBAAoBA,GAC5B9hC,EAAQgiC,aAAeA,GACvBhiC,EAAQkiC,cAAgBA,GACxBliC,EAAQ0jB,kBAAoBA,GAC5B1jB,EAAQ+wB,aAAeA,GACvB/wB,EAAQgxB,aAAeA,GACvBhxB,EAAQuyB,cAAgBA,GACxBvyB,EAAQ+tB,kBAAoBA,GAC5B/tB,EAAQguB,oBAAsBA,GAC9BhuB,EAAQiuB,sBAAwBA,GAChCjuB,EAAQkuB,kBAAoBA,GAC5BluB,EAAQopE,UAAYA,GACpBppE,EAAQ6E,sBAAwBA,GAChC7E,EAAQywB,sBAAwBA,GAChCzwB,EAAQ4wB,iCAAmCA,GAC3C5wB,EAAQ6wB,iCAAmCA,GAC3C7wB,EAAQ8wB,2BAA6BA,GACrC9wB,EAAQ0wB,wBAA0BA,GAClC1wB,EAAQ2wB,wBAA0BA,GAClC3wB,EAAQqpE,eAAiBA,GACzBrpE,EAAQi3C,eAAiBA,GACzBj3C,EAAQgC,oBAAsBA,GAC9BhC,EAAQm3C,uBAAyBA,GACjCn3C,EAAQspE,gBAAkBA,GAC1BtpE,EAAQ4e,cAAgBA,GACxB5e,EAAQq6B,2BAA6BA,GACrCr6B,EAAQs6B,0BAA4BA,GACpCt6B,EAAQiC,aAAeA,GACvBjC,EAAQu3C,0BAA4BA,GACpCv3C,EAAQkC,yBAA2BA,GACnClC,EAAQupE,cAAgBA,GACxBvpE,EAAQoC,iBAAmBA,GAC3BpC,EAAQg4C,SAAWA,GACnBh4C,EAAQi4C,UAAYA,GACpBj4C,EAAQk4C,kBAAoBA,GAC5Bl4C,EAAQm4C,QAAUA,GAClBn4C,EAAQo4C,gBAAkBA,GAC1Bp4C,EAAQm9B,UAAYA,GACpBn9B,EAAQo9B,cAAgBA,GACxBp9B,EAAQ03C,sBAAwBA,GAChC13C,EAAQ43C,sBAAwBA,GAChC53C,EAAQ83C,qBAAuBA,GAC/B93C,EAAQo7C,mBAAqBA,GAC7Bp7C,EAAQs4C,YAAcA,GACtBt4C,EAAQ48B,UAAYA,GACpB58B,EAAQmC,WAAaA,GACrBnC,EAAQw4C,gBAAkBA,GAC1Bx4C,EAAQ04C,qBAAuBA,GAC/B14C,EAAQwpE,WAAaA,GACrBxpE,EAAQs/B,YAAcA,GACtBt/B,EAAQi+B,mBAAqBA,GAC7Bj+B,EAAQ85C,qBAAuBA,GAC/B95C,EAAQg6C,sBAAwBA,GAChCh6C,EAAQk6C,sBAAwBA,GAChCl6C,EAAQo6C,sBAAwBA,GAChCp6C,EAAQs6C,wBAA0BA,GAClCt6C,EAAQw6C,wBAA0BA,GAClCx6C,EAAQ06C,yBAA2BA,GACnC16C,EAAQ46C,yBAA2BA,GACnC56C,EAAQ86C,gBAAkBA,GAC1B96C,EAAQypE,SAAWA,GACnBzpE,EAAQ2+D,WAAaA,GACrB3+D,EAAQ0pE,aAAeA,GACvB1pE,EAAQ2pE,oBAAsBA,GAC9B3pE,EAAQ4pE,kBAAoBA,GAC5B5pE,EAAQ6pE,kBAAoBA,GAC5B7pE,EAAQ89D,oBAAsBA,GAC9B99D,EAAQ8pE,gBAAkBA,GAC1B9pE,EAAQ+pE,iBAAmBA,GAC3B/pE,EAAQknB,kBAAoBA,GAC5BlnB,EAAQsgD,sBAAwBA,GAChCtgD,EAAQwgD,oBAAsBA,GAC9BxgD,EAAQ2C,eAAiBA,GACzB3C,EAAQitB,aAAeA,GACvBjtB,EAAQstB,cAAgBA,GACxBttB,EAAQktB,aAAeA,GACvBltB,EAAQgqE,eAAiBA,GACzBhqE,EAAQmtB,cAAgBA,GACxBntB,EAAQotB,eAAiBA,GACzBptB,EAAQqtB,aAAeA,GACvBrtB,EAAQ+X,kBAAoBA,GAC5B/X,EAAQud,iBAAmBA,GAC3Bvd,EAAQ8/H,aAAe/uE,GACvB/wD,EAAQgnE,MAAQA,GAChBhnE,EAAQ87H,UAAYA,GACpB97H,EAAQ+7H,WAAaA,GACrB/7H,EAAQ+/H,iBAAmB3uE,GAC3BpxD,EAAQwgE,WAAaA,GACrBxgE,EAAQggI,SAAW79E,GACnBniD,EAAQinE,eAAiBA,GACzBjnE,EAAQknE,mBAAqBA,GAC7BlnE,EAAQmnE,sBAAwBA,GAChCnnE,EAAQonE,uBAAyBA,GACjCpnE,EAAQqnE,OAASA,GACjBrnE,EAAQsnE,YAAcA,GACtBtnE,EAAQunE,gBAAkBA,GAC1BvnE,EAAQw/H,cAAgBA,GACxBx/H,EAAQ0/H,WAAaA,GACrB1/H,EAAQwnE,UAAYA,GACpBxnE,EAAQ8nE,eAAiBA,GAEzB3mE,OAAOC,eAAepB,EAAS,cAAgBqB,OAAO,MAG1D,WACI,YAKA,SAAS4+H,KACL,GAAIC,GAAM1hI,IAkBV,OAhBA0hI,GAAIC,iBAAmB,SAAU90H,EAAKC,GAClC,MAAQ9J,MAAKwlB,UAAY3b,EAAMC,GAAOA,GAG1C40H,EAAIE,YAAc,SAAUC,EAAUC,EAAQC,EAAQC,IAC9CH,EAAS50B,MAAMp5F,SAAS/R,GAAKggI,GAAUD,EAAS50B,MAAMp5F,SAAS/R,GAAM,GAAKggI,KAC1ED,EAASI,iBAAiBngI,GAAK,KAE/B+/H,EAAS50B,MAAMp5F,SAAS9R,GAAKggI,GAAUF,EAAS50B,MAAMp5F,SAAS9R,GAAM,GAAKggI,KAC1EF,EAASI,iBAAiBlgI,GAAK,KAE/B8/H,EAAS50B,MAAMp5F,SAASrP,GAAKw9H,GAAUH,EAAS50B,MAAMp5F,SAASrP,GAAM,GAAKw9H,KAC1EH,EAASI,iBAAiBz9H,GAAK,KAIhCk9H,EAtBXriI,QAAQC,OAAO,QAAQiC,QAAQ,cAAekgI,MA0BlD,WACI,YAKA,SAASS,GAAsBxiI,EAASyiI,GACpC,GAAIT,GAAM1hI,KAENoiI,EAAQ1iI,EAAQiC,MAChB0gI,EAAM,IACNC,EAAM,GAEVZ,GAAIvgI,YAEJ,IAAIohI,GAAqB,WACrB,MAAO,IAAIH,GAAMtrG,mBACblnB,MAAO,SACP2mC,SAAU,QACVC,UAAW,MAIfgsF,EAAkB,WAClB,OACI1gI,EAAGqgI,EAAYR,iBAAiBU,EAAKC,GACrCvgI,EAAGogI,EAAYR,iBAAiBU,EAAKC,GACrC99H,EAAG29H,EAAYR,iBAAiBU,EAAKC,IA8E7C,OA1EAZ,GAAIe,QAAU,SAAU3sH,GACfA,IACDA,EAAWysH,IAEf,IAAIlnH,GAAW,GAAI+mH,GAAM7vE,YAAY,EAAG,EAAG,EAC3C,QACI06C,MAAO,GAAIm1B,GAAM75G,KAAKlN,EAAUvF,GAChChG,SAAU0yH,IACVP,iBAAkBO,MAI1Bd,EAAIgB,SAAW,SAAU5sH,GAChBA,IACDA,EAAWysH,IAEf,IAAIlnH,GAAW,GAAI+mH,GAAMh1E,cAAc,IAAM,GAAK,GAAI,GACtD,QACI6/C,MAAO,GAAIm1B,GAAM75G,KAAKlN,EAAUvF,GAChChG,SAAU0yH,IACVP,iBAAkBO,MAI1Bd,EAAIiB,UAAY,SAAU7sH,GACjBA,IACDA,EAAWysH,IAEf,IAAIlnH,GAAW,GAAI+mH,GAAMtzE,eAAe,IAAM,GAAI,GAClD,QACIm+C,MAAO,GAAIm1B,GAAM75G,KAAKlN,EAAUvF,GAChChG,SAAU0yH,IACVP,iBAAkBO,MAI1Bd,EAAIkB,QAAU,SAAU9sH,GACfA,IACDA,EAAWysH,IAEf,IAAIlnH,GAAW,GAAI+mH,GAAMnwE,aAAa,GAAK,GAAK,GAChD,QACIg7C,MAAO,GAAIm1B,GAAM75G,KAAKlN,EAAUvF,GAChChG,SAAU0yH,IACVP,iBAAkBO,MAI1Bd,EAAIzgI,YAAc,WACd,IAAK,GAAIiG,GAAI,EAAO,EAAJA,EAAOA,IACnBw6H,EAAIvgI,UAAUmK,KAAKo2H,EAAIe,WACvBf,EAAIvgI,UAAUmK,KAAKo2H,EAAIgB,YACvBhB,EAAIvgI,UAAUmK,KAAKo2H,EAAIiB,aACvBjB,EAAIvgI,UAAUmK,KAAKo2H,EAAIkB,YAI/BlB,EAAImB,UAAY,WACZxjI,QAAQ8vG,QAAQuyB,EAAIvgI,UAAW,SAAU0gI,GACjCA,EAAS50B,MAAMn9F,WAEf+xH,EAAS50B,MAAMn9F,SAAShO,GAAK+/H,EAAS/xH,SAAShO,EAC/C+/H,EAAS50B,MAAMn9F,SAAS/N,GAAK8/H,EAAS/xH,SAAS/N,EAC/C8/H,EAAS50B,MAAMn9F,SAAStL,GAAKq9H,EAAS/xH,SAAStL,EAE/Cq9H,EAAS50B,MAAMp5F,SAAS/R,GAAK+/H,EAASI,iBAAiBngI,EACvD+/H,EAAS50B,MAAMp5F,SAAS9R,GAAK8/H,EAASI,iBAAiBlgI,EACvD8/H,EAAS50B,MAAMp5F,SAASrP,GAAKq9H,EAASI,iBAAiBz9H,EAEvD29H,EAAYP,YAAYC,EAAU,EAAK,EAAK,OAKjDH,EAtGXQ,EAAsBY,SAAW,UAAW,eAA5CzjI,QAAQC,OAAO,QAAQiC,QAAQ,gBAAiB2gI,MA0GpD,WACI,YAKA,SAASa,GAAUrjI,EAASsjI,EAAWljI,GACnC,GAAI4hI,GAAM1hI,IAEV,IAAIN,EAAQiC,MAAO,CAEf,GAAIygI,GAAQ1iI,EAAQiC,KAEpB+/H,GAAI5gI,aAAe,SAAUyT,EAAQlU,EAAOC,GACxCohI,EAAIt6H,SAAW,GAAIg7H,GAAMj1F,eACrB54B,OAAQA,IAEZmtH,EAAIt6H,SAASo4C,QAAQn/C,EAAOC,IAGhCohI,EAAIvhI,kBAAoB,SAAUE,EAAOC,GACrCohI,EAAIt6H,SAASo4C,QAAQn/C,EAAOC,GAC5BohI,EAAI/wH,OAAOgb,OAAStrB,EAAQC,EAC5BohI,EAAI/wH,OAAO0P,0BAGfqhH,EAAI1gI,WAAa,SAAUX,EAAOC,GAG9BohI,EAAIhxH,MAAQ,GAAI0xH,GAAM5+E,KAGtB,IAAIy/E,GAAW,GAAIb,GAAMvtE,iBAAiB,SAAU,EACpDouE,GAASpvH,SAASnH,IAAI,IAAK,IAAK,IAChCg1H,EAAIhxH,MAAMqQ,IAAIkiH,EAEd,IAAIC,GAAW,GAAId,GAAMttE,aAAa,QACtC4sE,GAAIhxH,MAAMqQ,IAAImiH,GAGdxB,EAAI/wH,OAAS,GAAIyxH,GAAM32G,kBAAkB,GAAIprB,EAAQC,EAAQ,GAAK,KAClEohI,EAAI/wH,OAAOkD,SAASrP,EAAI,GAG5Bk9H,EAAIxgI,UAAY,SAAUC,GACtB9B,QAAQ8vG,QAAQhuG,EAAW,SAAU0gI,GACjCH,EAAIhxH,MAAMqQ,IAAI8gH,EAAS50B,UAI/By0B,EAAItgI,OAAS,WACT6kD,sBAAsBy7E,EAAItgI,QAC1BtB,EAAc+iI,YACdnB,EAAIt6H,SAAShG,OAAOsgI,EAAIhxH,MAAOgxH,EAAI/wH,SAI3C,MAAO+wH,GArDXqB,EAAUD,SAAW,UAAW,YAAa,iBAD7CzjI,QAAQC,OAAO,QAAQiC,QAAQ,mBAAoBwhI,MA0DvD,WACE,YAOA,SAASI,MALT9jI,QACGC,OAAO,QACP8jI,IAAID,MAUT,WACE,YAEA9jI,SACGC,OAAO,WAGZ,WACE,YAOA,SAAS+jI,GAAOC,GAEdA,EAAaC,cAAa,GAL5BF,EAAOP,SAAW,gBAFlBzjI,QACGC,OAAO,QACP+jI,OAAOA,MAUZhkI,QAAQC,OAAO,QAAQ8jI,KAAK,iBAAkB,SAASI,GAAiBA,EAAeC,IAAI,uCAAuC","file":"scripts/app-21609a9f2d.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('3js0', []);\n\n})();\n\n(function () {\r\n\r\n    'use strict';\r\n\r\n    angular.module('3js0').component('threeCanvas', {\r\n        templateUrl: 'app/components/canvas/3D_canvas.html',\r\n        controller: function ($window, $scope, $element, threeDApiFactory, shapesFactory) {\r\n            var ctrl = this;\r\n            var WIDTH_SCALE = 0.8;\r\n            var HEIGHT_SCALE = 0.5;\r\n\r\n            ctrl.handleResizeEvent = function () {\r\n                ctrl.setCanvasDimensions();\r\n                threeDApiFactory.handleResizeEvent(ctrl.width, ctrl.height);\r\n                $scope.$apply();\r\n            };\r\n\r\n            var w = angular.element($window);\r\n            w.bind('resize', ctrl.handleResizeEvent);\r\n\r\n            ctrl.setCanvasDimensions = function () {\r\n                ctrl.height = w[0].innerHeight * HEIGHT_SCALE;\r\n                ctrl.width = w[0].innerWidth * WIDTH_SCALE;\r\n            };\r\n\r\n            ctrl.$onInit = function () {\r\n                // setup\r\n                ctrl.setCanvasDimensions();\r\n                threeDApiFactory.initRenderer($element.children()[0], ctrl.width, ctrl.height);\r\n                threeDApiFactory.setUpScene(ctrl.width, ctrl.height);\r\n\r\n                // build shapes and add them to scene\r\n                shapesFactory.buildShapes();\r\n                threeDApiFactory.addShapes(shapesFactory.shapeObjs);\r\n                \r\n                // let the show begin!\r\n                threeDApiFactory.render();\r\n            };\r\n\r\n        }\r\n    });\r\n\r\n})();\n(function () {\n    'use strict';\n\n    angular\n        .module('3js0')\n        .controller('MainController', MainController);\n\n    /** @ngInject */\n    function MainController(/*threeDApiFactory*/) {\n        \n        //threeDApiFactory.initRenderer();\n        //threeDApiFactory.setUpScene();\n        //threeDApiFactory.render();\n        \n    }\n})();\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (factory((global.THREE = global.THREE || {})));\n}(this, (function (exports) { 'use strict';\n\n    // Polyfills\n\n    if ( Number.EPSILON === undefined ) {\n\n    \tNumber.EPSILON = Math.pow( 2, - 52 );\n\n    }\n\n    //\n\n    if ( Math.sign === undefined ) {\n\n    \t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n    \tMath.sign = function ( x ) {\n\n    \t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n    \t};\n\n    }\n\n    if ( Function.prototype.name === undefined ) {\n\n    \t// Missing in IE9-11.\n    \t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n    \tObject.defineProperty( Function.prototype, 'name', {\n\n    \t\tget: function () {\n\n    \t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\n\n    \t\t}\n\n    \t} );\n\n    }\n\n    if ( Object.assign === undefined ) {\n\n    \t// Missing in IE.\n    \t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n    \t( function () {\n\n    \t\tObject.assign = function ( target ) {\n\n    \t\t\t'use strict';\n\n    \t\t\tif ( target === undefined || target === null ) {\n\n    \t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n    \t\t\t}\n\n    \t\t\tvar output = Object( target );\n\n    \t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n    \t\t\t\tvar source = arguments[ index ];\n\n    \t\t\t\tif ( source !== undefined && source !== null ) {\n\n    \t\t\t\t\tfor ( var nextKey in source ) {\n\n    \t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n    \t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn output;\n\n    \t\t};\n\n    \t} )();\n\n    }\n\n    /**\n     * https://github.com/mrdoob/eventdispatcher.js/\n     */\n\n    function EventDispatcher() {}\n\n    Object.assign( EventDispatcher.prototype, {\n\n    \taddEventListener: function ( type, listener ) {\n\n    \t\tif ( this._listeners === undefined ) this._listeners = {};\n\n    \t\tvar listeners = this._listeners;\n\n    \t\tif ( listeners[ type ] === undefined ) {\n\n    \t\t\tlisteners[ type ] = [];\n\n    \t\t}\n\n    \t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n    \t\t\tlisteners[ type ].push( listener );\n\n    \t\t}\n\n    \t},\n\n    \thasEventListener: function ( type, listener ) {\n\n    \t\tif ( this._listeners === undefined ) return false;\n\n    \t\tvar listeners = this._listeners;\n\n    \t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\n\n    \t\t\treturn true;\n\n    \t\t}\n\n    \t\treturn false;\n\n    \t},\n\n    \tremoveEventListener: function ( type, listener ) {\n\n    \t\tif ( this._listeners === undefined ) return;\n\n    \t\tvar listeners = this._listeners;\n    \t\tvar listenerArray = listeners[ type ];\n\n    \t\tif ( listenerArray !== undefined ) {\n\n    \t\t\tvar index = listenerArray.indexOf( listener );\n\n    \t\t\tif ( index !== - 1 ) {\n\n    \t\t\t\tlistenerArray.splice( index, 1 );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \tdispatchEvent: function ( event ) {\n\n    \t\tif ( this._listeners === undefined ) return;\n\n    \t\tvar listeners = this._listeners;\n    \t\tvar listenerArray = listeners[ event.type ];\n\n    \t\tif ( listenerArray !== undefined ) {\n\n    \t\t\tevent.target = this;\n\n    \t\t\tvar array = [], i = 0;\n    \t\t\tvar length = listenerArray.length;\n\n    \t\t\tfor ( i = 0; i < length; i ++ ) {\n\n    \t\t\t\tarray[ i ] = listenerArray[ i ];\n\n    \t\t\t}\n\n    \t\t\tfor ( i = 0; i < length; i ++ ) {\n\n    \t\t\t\tarray[ i ].call( this, event );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    } );\n\n    var REVISION = '81';\n    var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n    var CullFaceNone = 0;\n    var CullFaceBack = 1;\n    var CullFaceFront = 2;\n    var CullFaceFrontBack = 3;\n    var FrontFaceDirectionCW = 0;\n    var FrontFaceDirectionCCW = 1;\n    var BasicShadowMap = 0;\n    var PCFShadowMap = 1;\n    var PCFSoftShadowMap = 2;\n    var FrontSide = 0;\n    var BackSide = 1;\n    var DoubleSide = 2;\n    var FlatShading = 1;\n    var SmoothShading = 2;\n    var NoColors = 0;\n    var FaceColors = 1;\n    var VertexColors = 2;\n    var NoBlending = 0;\n    var NormalBlending = 1;\n    var AdditiveBlending = 2;\n    var SubtractiveBlending = 3;\n    var MultiplyBlending = 4;\n    var CustomBlending = 5;\n    var BlendingMode = {\n        NoBlending: NoBlending,\n        NormalBlending: NormalBlending,\n        AdditiveBlending: AdditiveBlending,\n        SubtractiveBlending: SubtractiveBlending,\n        MultiplyBlending: MultiplyBlending,\n        CustomBlending: CustomBlending\n    };\n    var AddEquation = 100;\n    var SubtractEquation = 101;\n    var ReverseSubtractEquation = 102;\n    var MinEquation = 103;\n    var MaxEquation = 104;\n    var ZeroFactor = 200;\n    var OneFactor = 201;\n    var SrcColorFactor = 202;\n    var OneMinusSrcColorFactor = 203;\n    var SrcAlphaFactor = 204;\n    var OneMinusSrcAlphaFactor = 205;\n    var DstAlphaFactor = 206;\n    var OneMinusDstAlphaFactor = 207;\n    var DstColorFactor = 208;\n    var OneMinusDstColorFactor = 209;\n    var SrcAlphaSaturateFactor = 210;\n    var NeverDepth = 0;\n    var AlwaysDepth = 1;\n    var LessDepth = 2;\n    var LessEqualDepth = 3;\n    var EqualDepth = 4;\n    var GreaterEqualDepth = 5;\n    var GreaterDepth = 6;\n    var NotEqualDepth = 7;\n    var MultiplyOperation = 0;\n    var MixOperation = 1;\n    var AddOperation = 2;\n    var NoToneMapping = 0;\n    var LinearToneMapping = 1;\n    var ReinhardToneMapping = 2;\n    var Uncharted2ToneMapping = 3;\n    var CineonToneMapping = 4;\n    var UVMapping = 300;\n    var CubeReflectionMapping = 301;\n    var CubeRefractionMapping = 302;\n    var EquirectangularReflectionMapping = 303;\n    var EquirectangularRefractionMapping = 304;\n    var SphericalReflectionMapping = 305;\n    var CubeUVReflectionMapping = 306;\n    var CubeUVRefractionMapping = 307;\n    var TextureMapping = {\n        UVMapping: UVMapping,\n        CubeReflectionMapping: CubeReflectionMapping,\n        CubeRefractionMapping: CubeRefractionMapping,\n        EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n        EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n        SphericalReflectionMapping: SphericalReflectionMapping,\n        CubeUVReflectionMapping: CubeUVReflectionMapping,\n        CubeUVRefractionMapping: CubeUVRefractionMapping\n    };\n    var RepeatWrapping = 1000;\n    var ClampToEdgeWrapping = 1001;\n    var MirroredRepeatWrapping = 1002;\n    var TextureWrapping = {\n        RepeatWrapping: RepeatWrapping,\n        ClampToEdgeWrapping: ClampToEdgeWrapping,\n        MirroredRepeatWrapping: MirroredRepeatWrapping\n    };\n    var NearestFilter = 1003;\n    var NearestMipMapNearestFilter = 1004;\n    var NearestMipMapLinearFilter = 1005;\n    var LinearFilter = 1006;\n    var LinearMipMapNearestFilter = 1007;\n    var LinearMipMapLinearFilter = 1008;\n    var TextureFilter = {\n        NearestFilter: NearestFilter,\n        NearestMipMapNearestFilter: NearestMipMapNearestFilter,\n        NearestMipMapLinearFilter: NearestMipMapLinearFilter,\n        LinearFilter: LinearFilter,\n        LinearMipMapNearestFilter: LinearMipMapNearestFilter,\n        LinearMipMapLinearFilter: LinearMipMapLinearFilter\n    };\n    var UnsignedByteType = 1009;\n    var ByteType = 1010;\n    var ShortType = 1011;\n    var UnsignedShortType = 1012;\n    var IntType = 1013;\n    var UnsignedIntType = 1014;\n    var FloatType = 1015;\n    var HalfFloatType = 1016;\n    var UnsignedShort4444Type = 1017;\n    var UnsignedShort5551Type = 1018;\n    var UnsignedShort565Type = 1019;\n    var UnsignedInt248Type = 1020;\n    var AlphaFormat = 1021;\n    var RGBFormat = 1022;\n    var RGBAFormat = 1023;\n    var LuminanceFormat = 1024;\n    var LuminanceAlphaFormat = 1025;\n    var RGBEFormat = RGBAFormat;\n    var DepthFormat = 1026;\n    var DepthStencilFormat = 1027;\n    var RGB_S3TC_DXT1_Format = 2001;\n    var RGBA_S3TC_DXT1_Format = 2002;\n    var RGBA_S3TC_DXT3_Format = 2003;\n    var RGBA_S3TC_DXT5_Format = 2004;\n    var RGB_PVRTC_4BPPV1_Format = 2100;\n    var RGB_PVRTC_2BPPV1_Format = 2101;\n    var RGBA_PVRTC_4BPPV1_Format = 2102;\n    var RGBA_PVRTC_2BPPV1_Format = 2103;\n    var RGB_ETC1_Format = 2151;\n    var LoopOnce = 2200;\n    var LoopRepeat = 2201;\n    var LoopPingPong = 2202;\n    var InterpolateDiscrete = 2300;\n    var InterpolateLinear = 2301;\n    var InterpolateSmooth = 2302;\n    var ZeroCurvatureEnding = 2400;\n    var ZeroSlopeEnding = 2401;\n    var WrapAroundEnding = 2402;\n    var TrianglesDrawMode = 0;\n    var TriangleStripDrawMode = 1;\n    var TriangleFanDrawMode = 2;\n    var LinearEncoding = 3000;\n    var sRGBEncoding = 3001;\n    var GammaEncoding = 3007;\n    var RGBEEncoding = 3002;\n    var LogLuvEncoding = 3003;\n    var RGBM7Encoding = 3004;\n    var RGBM16Encoding = 3005;\n    var RGBDEncoding = 3006;\n    var BasicDepthPacking = 3200;\n    var RGBADepthPacking = 3201;\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    exports.Math = {\n\n    \tDEG2RAD: Math.PI / 180,\n    \tRAD2DEG: 180 / Math.PI,\n\n    \tgenerateUUID: function () {\n\n    \t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\n    \t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n    \t\tvar uuid = new Array( 36 );\n    \t\tvar rnd = 0, r;\n\n    \t\treturn function generateUUID() {\n\n    \t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n    \t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n    \t\t\t\t\tuuid[ i ] = '-';\n\n    \t\t\t\t} else if ( i === 14 ) {\n\n    \t\t\t\t\tuuid[ i ] = '4';\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n    \t\t\t\t\tr = rnd & 0xf;\n    \t\t\t\t\trnd = rnd >> 4;\n    \t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn uuid.join( '' );\n\n    \t\t};\n\n    \t}(),\n\n    \tclamp: function ( value, min, max ) {\n\n    \t\treturn Math.max( min, Math.min( max, value ) );\n\n    \t},\n\n    \t// compute euclidian modulo of m % n\n    \t// https://en.wikipedia.org/wiki/Modulo_operation\n\n    \teuclideanModulo: function ( n, m ) {\n\n    \t\treturn ( ( n % m ) + m ) % m;\n\n    \t},\n\n    \t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n    \tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n    \t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n    \t},\n\n    \t// http://en.wikipedia.org/wiki/Smoothstep\n\n    \tsmoothstep: function ( x, min, max ) {\n\n    \t\tif ( x <= min ) return 0;\n    \t\tif ( x >= max ) return 1;\n\n    \t\tx = ( x - min ) / ( max - min );\n\n    \t\treturn x * x * ( 3 - 2 * x );\n\n    \t},\n\n    \tsmootherstep: function ( x, min, max ) {\n\n    \t\tif ( x <= min ) return 0;\n    \t\tif ( x >= max ) return 1;\n\n    \t\tx = ( x - min ) / ( max - min );\n\n    \t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n    \t},\n\n    \trandom16: function () {\n\n    \t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\n    \t\treturn Math.random();\n\n    \t},\n\n    \t// Random integer from <low, high> interval\n\n    \trandInt: function ( low, high ) {\n\n    \t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n    \t},\n\n    \t// Random float from <low, high> interval\n\n    \trandFloat: function ( low, high ) {\n\n    \t\treturn low + Math.random() * ( high - low );\n\n    \t},\n\n    \t// Random float from <-range/2, range/2> interval\n\n    \trandFloatSpread: function ( range ) {\n\n    \t\treturn range * ( 0.5 - Math.random() );\n\n    \t},\n\n    \tdegToRad: function ( degrees ) {\n\n    \t\treturn degrees * exports.Math.DEG2RAD;\n\n    \t},\n\n    \tradToDeg: function ( radians ) {\n\n    \t\treturn radians * exports.Math.RAD2DEG;\n\n    \t},\n\n    \tisPowerOfTwo: function ( value ) {\n\n    \t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n    \t},\n\n    \tnearestPowerOfTwo: function ( value ) {\n\n    \t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\n\n    \t},\n\n    \tnextPowerOfTwo: function ( value ) {\n\n    \t\tvalue --;\n    \t\tvalue |= value >> 1;\n    \t\tvalue |= value >> 2;\n    \t\tvalue |= value >> 4;\n    \t\tvalue |= value >> 8;\n    \t\tvalue |= value >> 16;\n    \t\tvalue ++;\n\n    \t\treturn value;\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author philogb / http://blog.thejit.org/\n     * @author egraether / http://egraether.com/\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     */\n\n    function Vector2( x, y ) {\n\n    \tthis.x = x || 0;\n    \tthis.y = y || 0;\n\n    }\n\n    Vector2.prototype = {\n\n    \tconstructor: Vector2,\n\n    \tisVector2: true,\n\n    \tget width() {\n\n    \t\treturn this.x;\n\n    \t},\n\n    \tset width( value ) {\n\n    \t\tthis.x = value;\n\n    \t},\n\n    \tget height() {\n\n    \t\treturn this.y;\n\n    \t},\n\n    \tset height( value ) {\n\n    \t\tthis.y = value;\n\n    \t},\n\n    \t//\n\n    \tset: function ( x, y ) {\n\n    \t\tthis.x = x;\n    \t\tthis.y = y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetScalar: function ( scalar ) {\n\n    \t\tthis.x = scalar;\n    \t\tthis.y = scalar;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetX: function ( x ) {\n\n    \t\tthis.x = x;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetY: function ( y ) {\n\n    \t\tthis.y = y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetComponent: function ( index, value ) {\n\n    \t\tswitch ( index ) {\n\n    \t\t\tcase 0: this.x = value; break;\n    \t\t\tcase 1: this.y = value; break;\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n    \t\t}\n\n    \t},\n\n    \tgetComponent: function ( index ) {\n\n    \t\tswitch ( index ) {\n\n    \t\t\tcase 0: return this.x;\n    \t\t\tcase 1: return this.y;\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n    \t\t}\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this.x, this.y );\n\n    \t},\n\n    \tcopy: function ( v ) {\n\n    \t\tthis.x = v.x;\n    \t\tthis.y = v.y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tadd: function ( v, w ) {\n\n    \t\tif ( w !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n    \t\t\treturn this.addVectors( v, w );\n\n    \t\t}\n\n    \t\tthis.x += v.x;\n    \t\tthis.y += v.y;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddScalar: function ( s ) {\n\n    \t\tthis.x += s;\n    \t\tthis.y += s;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddVectors: function ( a, b ) {\n\n    \t\tthis.x = a.x + b.x;\n    \t\tthis.y = a.y + b.y;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddScaledVector: function ( v, s ) {\n\n    \t\tthis.x += v.x * s;\n    \t\tthis.y += v.y * s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsub: function ( v, w ) {\n\n    \t\tif ( w !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n    \t\t\treturn this.subVectors( v, w );\n\n    \t\t}\n\n    \t\tthis.x -= v.x;\n    \t\tthis.y -= v.y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsubScalar: function ( s ) {\n\n    \t\tthis.x -= s;\n    \t\tthis.y -= s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsubVectors: function ( a, b ) {\n\n    \t\tthis.x = a.x - b.x;\n    \t\tthis.y = a.y - b.y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiply: function ( v ) {\n\n    \t\tthis.x *= v.x;\n    \t\tthis.y *= v.y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiplyScalar: function ( scalar ) {\n\n    \t\tif ( isFinite( scalar ) ) {\n\n    \t\t\tthis.x *= scalar;\n    \t\t\tthis.y *= scalar;\n\n    \t\t} else {\n\n    \t\t\tthis.x = 0;\n    \t\t\tthis.y = 0;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tdivide: function ( v ) {\n\n    \t\tthis.x /= v.x;\n    \t\tthis.y /= v.y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdivideScalar: function ( scalar ) {\n\n    \t\treturn this.multiplyScalar( 1 / scalar );\n\n    \t},\n\n    \tmin: function ( v ) {\n\n    \t\tthis.x = Math.min( this.x, v.x );\n    \t\tthis.y = Math.min( this.y, v.y );\n\n    \t\treturn this;\n\n    \t},\n\n    \tmax: function ( v ) {\n\n    \t\tthis.x = Math.max( this.x, v.x );\n    \t\tthis.y = Math.max( this.y, v.y );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclamp: function ( min, max ) {\n\n    \t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    \t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n    \t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclampScalar: function () {\n\n    \t\tvar min, max;\n\n    \t\treturn function clampScalar( minVal, maxVal ) {\n\n    \t\t\tif ( min === undefined ) {\n\n    \t\t\t\tmin = new Vector2();\n    \t\t\t\tmax = new Vector2();\n\n    \t\t\t}\n\n    \t\t\tmin.set( minVal, minVal );\n    \t\t\tmax.set( maxVal, maxVal );\n\n    \t\t\treturn this.clamp( min, max );\n\n    \t\t};\n\n    \t}(),\n\n    \tclampLength: function ( min, max ) {\n\n    \t\tvar length = this.length();\n\n    \t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n    \t},\n\n    \tfloor: function () {\n\n    \t\tthis.x = Math.floor( this.x );\n    \t\tthis.y = Math.floor( this.y );\n\n    \t\treturn this;\n\n    \t},\n\n    \tceil: function () {\n\n    \t\tthis.x = Math.ceil( this.x );\n    \t\tthis.y = Math.ceil( this.y );\n\n    \t\treturn this;\n\n    \t},\n\n    \tround: function () {\n\n    \t\tthis.x = Math.round( this.x );\n    \t\tthis.y = Math.round( this.y );\n\n    \t\treturn this;\n\n    \t},\n\n    \troundToZero: function () {\n\n    \t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n    \t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n    \t\treturn this;\n\n    \t},\n\n    \tnegate: function () {\n\n    \t\tthis.x = - this.x;\n    \t\tthis.y = - this.y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdot: function ( v ) {\n\n    \t\treturn this.x * v.x + this.y * v.y;\n\n    \t},\n\n    \tlengthSq: function () {\n\n    \t\treturn this.x * this.x + this.y * this.y;\n\n    \t},\n\n    \tlength: function () {\n\n    \t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n    \t},\n\n    \tlengthManhattan: function() {\n\n    \t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n    \t},\n\n    \tnormalize: function () {\n\n    \t\treturn this.divideScalar( this.length() );\n\n    \t},\n\n    \tangle: function () {\n\n    \t\t// computes the angle in radians with respect to the positive x-axis\n\n    \t\tvar angle = Math.atan2( this.y, this.x );\n\n    \t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n    \t\treturn angle;\n\n    \t},\n\n    \tdistanceTo: function ( v ) {\n\n    \t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n    \t},\n\n    \tdistanceToSquared: function ( v ) {\n\n    \t\tvar dx = this.x - v.x, dy = this.y - v.y;\n    \t\treturn dx * dx + dy * dy;\n\n    \t},\n\n    \tdistanceToManhattan: function ( v ) {\n\n    \t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n    \t},\n\n    \tsetLength: function ( length ) {\n\n    \t\treturn this.multiplyScalar( length / this.length() );\n\n    \t},\n\n    \tlerp: function ( v, alpha ) {\n\n    \t\tthis.x += ( v.x - this.x ) * alpha;\n    \t\tthis.y += ( v.y - this.y ) * alpha;\n\n    \t\treturn this;\n\n    \t},\n\n    \tlerpVectors: function ( v1, v2, alpha ) {\n\n    \t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n    \t},\n\n    \tequals: function ( v ) {\n\n    \t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n    \t},\n\n    \tfromArray: function ( array, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tthis.x = array[ offset ];\n    \t\tthis.y = array[ offset + 1 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoArray: function ( array, offset ) {\n\n    \t\tif ( array === undefined ) array = [];\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tarray[ offset ] = this.x;\n    \t\tarray[ offset + 1 ] = this.y;\n\n    \t\treturn array;\n\n    \t},\n\n    \tfromAttribute: function ( attribute, index, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tindex = index * attribute.itemSize + offset;\n\n    \t\tthis.x = attribute.array[ index ];\n    \t\tthis.y = attribute.array[ index + 1 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \trotateAround: function ( center, angle ) {\n\n    \t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n    \t\tvar x = this.x - center.x;\n    \t\tvar y = this.y - center.y;\n\n    \t\tthis.x = x * c - y * s + center.x;\n    \t\tthis.y = x * s + y * c + center.y;\n\n    \t\treturn this;\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     * @author szimek / https://github.com/szimek/\n     */\n\n    function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n    \tObject.defineProperty( this, 'id', { value: TextureIdCount() } );\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.name = '';\n    \tthis.sourceFile = '';\n\n    \tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n    \tthis.mipmaps = [];\n\n    \tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n    \tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n    \tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n    \tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    \tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n    \tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n    \tthis.format = format !== undefined ? format : RGBAFormat;\n    \tthis.type = type !== undefined ? type : UnsignedByteType;\n\n    \tthis.offset = new Vector2( 0, 0 );\n    \tthis.repeat = new Vector2( 1, 1 );\n\n    \tthis.generateMipmaps = true;\n    \tthis.premultiplyAlpha = false;\n    \tthis.flipY = true;\n    \tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\n    \t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    \t//\n    \t// Also changing the encoding after already used by a Material will not automatically make the Material\n    \t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n    \tthis.encoding = encoding !== undefined ? encoding :  LinearEncoding;\n\n    \tthis.version = 0;\n    \tthis.onUpdate = null;\n\n    }\n\n    Texture.DEFAULT_IMAGE = undefined;\n    Texture.DEFAULT_MAPPING = UVMapping;\n\n    Texture.prototype = {\n\n    \tconstructor: Texture,\n\n    \tisTexture: true,\n\n    \tset needsUpdate( value ) {\n\n    \t\tif ( value === true ) this.version ++;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tthis.image = source.image;\n    \t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n    \t\tthis.mapping = source.mapping;\n\n    \t\tthis.wrapS = source.wrapS;\n    \t\tthis.wrapT = source.wrapT;\n\n    \t\tthis.magFilter = source.magFilter;\n    \t\tthis.minFilter = source.minFilter;\n\n    \t\tthis.anisotropy = source.anisotropy;\n\n    \t\tthis.format = source.format;\n    \t\tthis.type = source.type;\n\n    \t\tthis.offset.copy( source.offset );\n    \t\tthis.repeat.copy( source.repeat );\n\n    \t\tthis.generateMipmaps = source.generateMipmaps;\n    \t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n    \t\tthis.flipY = source.flipY;\n    \t\tthis.unpackAlignment = source.unpackAlignment;\n    \t\tthis.encoding = source.encoding;\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoJSON: function ( meta ) {\n\n    \t\tif ( meta.textures[ this.uuid ] !== undefined ) {\n\n    \t\t\treturn meta.textures[ this.uuid ];\n\n    \t\t}\n\n    \t\tfunction getDataURL( image ) {\n\n    \t\t\tvar canvas;\n\n    \t\t\tif ( image.toDataURL !== undefined ) {\n\n    \t\t\t\tcanvas = image;\n\n    \t\t\t} else {\n\n    \t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n    \t\t\t\tcanvas.width = image.width;\n    \t\t\t\tcanvas.height = image.height;\n\n    \t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\n\n    \t\t\t}\n\n    \t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n    \t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n    \t\t\t} else {\n\n    \t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar output = {\n    \t\t\tmetadata: {\n    \t\t\t\tversion: 4.4,\n    \t\t\t\ttype: 'Texture',\n    \t\t\t\tgenerator: 'Texture.toJSON'\n    \t\t\t},\n\n    \t\t\tuuid: this.uuid,\n    \t\t\tname: this.name,\n\n    \t\t\tmapping: this.mapping,\n\n    \t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n    \t\t\toffset: [ this.offset.x, this.offset.y ],\n    \t\t\twrap: [ this.wrapS, this.wrapT ],\n\n    \t\t\tminFilter: this.minFilter,\n    \t\t\tmagFilter: this.magFilter,\n    \t\t\tanisotropy: this.anisotropy,\n\n    \t\t\tflipY: this.flipY\n    \t\t};\n\n    \t\tif ( this.image !== undefined ) {\n\n    \t\t\t// TODO: Move to THREE.Image\n\n    \t\t\tvar image = this.image;\n\n    \t\t\tif ( image.uuid === undefined ) {\n\n    \t\t\t\timage.uuid = exports.Math.generateUUID(); // UGH\n\n    \t\t\t}\n\n    \t\t\tif ( meta.images[ image.uuid ] === undefined ) {\n\n    \t\t\t\tmeta.images[ image.uuid ] = {\n    \t\t\t\t\tuuid: image.uuid,\n    \t\t\t\t\turl: getDataURL( image )\n    \t\t\t\t};\n\n    \t\t\t}\n\n    \t\t\toutput.image = image.uuid;\n\n    \t\t}\n\n    \t\tmeta.textures[ this.uuid ] = output;\n\n    \t\treturn output;\n\n    \t},\n\n    \tdispose: function () {\n\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\n\n    \t},\n\n    \ttransformUv: function ( uv ) {\n\n    \t\tif ( this.mapping !== UVMapping )  return;\n\n    \t\tuv.multiply( this.repeat );\n    \t\tuv.add( this.offset );\n\n    \t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n    \t\t\tswitch ( this.wrapS ) {\n\n    \t\t\t\tcase RepeatWrapping:\n\n    \t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase ClampToEdgeWrapping:\n\n    \t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase MirroredRepeatWrapping:\n\n    \t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n    \t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n    \t\t\t\t\t}\n    \t\t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n    \t\t\tswitch ( this.wrapT ) {\n\n    \t\t\t\tcase RepeatWrapping:\n\n    \t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase ClampToEdgeWrapping:\n\n    \t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase MirroredRepeatWrapping:\n\n    \t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n    \t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n    \t\t\t\t\t}\n    \t\t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( this.flipY ) {\n\n    \t\t\tuv.y = 1 - uv.y;\n\n    \t\t}\n\n    \t}\n\n    };\n\n    Object.assign( Texture.prototype, EventDispatcher.prototype );\n\n    var count = 0;\n    function TextureIdCount() { return count++; };\n\n    /**\n     * @author supereggbert / http://www.paulbrunt.co.uk/\n     * @author philogb / http://blog.thejit.org/\n     * @author mikael emtinger / http://gomo.se/\n     * @author egraether / http://egraether.com/\n     * @author WestLangley / http://github.com/WestLangley\n     */\n\n    function Vector4( x, y, z, w ) {\n\n    \tthis.x = x || 0;\n    \tthis.y = y || 0;\n    \tthis.z = z || 0;\n    \tthis.w = ( w !== undefined ) ? w : 1;\n\n    }\n\n    Vector4.prototype = {\n\n    \tconstructor: Vector4,\n\n    \tisVector4: true,\n\n    \tset: function ( x, y, z, w ) {\n\n    \t\tthis.x = x;\n    \t\tthis.y = y;\n    \t\tthis.z = z;\n    \t\tthis.w = w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetScalar: function ( scalar ) {\n\n    \t\tthis.x = scalar;\n    \t\tthis.y = scalar;\n    \t\tthis.z = scalar;\n    \t\tthis.w = scalar;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetX: function ( x ) {\n\n    \t\tthis.x = x;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetY: function ( y ) {\n\n    \t\tthis.y = y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetZ: function ( z ) {\n\n    \t\tthis.z = z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetW: function ( w ) {\n\n    \t\tthis.w = w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetComponent: function ( index, value ) {\n\n    \t\tswitch ( index ) {\n\n    \t\t\tcase 0: this.x = value; break;\n    \t\t\tcase 1: this.y = value; break;\n    \t\t\tcase 2: this.z = value; break;\n    \t\t\tcase 3: this.w = value; break;\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n    \t\t}\n\n    \t},\n\n    \tgetComponent: function ( index ) {\n\n    \t\tswitch ( index ) {\n\n    \t\t\tcase 0: return this.x;\n    \t\t\tcase 1: return this.y;\n    \t\t\tcase 2: return this.z;\n    \t\t\tcase 3: return this.w;\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n    \t\t}\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n    \t},\n\n    \tcopy: function ( v ) {\n\n    \t\tthis.x = v.x;\n    \t\tthis.y = v.y;\n    \t\tthis.z = v.z;\n    \t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n    \t\treturn this;\n\n    \t},\n\n    \tadd: function ( v, w ) {\n\n    \t\tif ( w !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n    \t\t\treturn this.addVectors( v, w );\n\n    \t\t}\n\n    \t\tthis.x += v.x;\n    \t\tthis.y += v.y;\n    \t\tthis.z += v.z;\n    \t\tthis.w += v.w;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddScalar: function ( s ) {\n\n    \t\tthis.x += s;\n    \t\tthis.y += s;\n    \t\tthis.z += s;\n    \t\tthis.w += s;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddVectors: function ( a, b ) {\n\n    \t\tthis.x = a.x + b.x;\n    \t\tthis.y = a.y + b.y;\n    \t\tthis.z = a.z + b.z;\n    \t\tthis.w = a.w + b.w;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddScaledVector: function ( v, s ) {\n\n    \t\tthis.x += v.x * s;\n    \t\tthis.y += v.y * s;\n    \t\tthis.z += v.z * s;\n    \t\tthis.w += v.w * s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsub: function ( v, w ) {\n\n    \t\tif ( w !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n    \t\t\treturn this.subVectors( v, w );\n\n    \t\t}\n\n    \t\tthis.x -= v.x;\n    \t\tthis.y -= v.y;\n    \t\tthis.z -= v.z;\n    \t\tthis.w -= v.w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsubScalar: function ( s ) {\n\n    \t\tthis.x -= s;\n    \t\tthis.y -= s;\n    \t\tthis.z -= s;\n    \t\tthis.w -= s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsubVectors: function ( a, b ) {\n\n    \t\tthis.x = a.x - b.x;\n    \t\tthis.y = a.y - b.y;\n    \t\tthis.z = a.z - b.z;\n    \t\tthis.w = a.w - b.w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiplyScalar: function ( scalar ) {\n\n    \t\tif ( isFinite( scalar ) ) {\n\n    \t\t\tthis.x *= scalar;\n    \t\t\tthis.y *= scalar;\n    \t\t\tthis.z *= scalar;\n    \t\t\tthis.w *= scalar;\n\n    \t\t} else {\n\n    \t\t\tthis.x = 0;\n    \t\t\tthis.y = 0;\n    \t\t\tthis.z = 0;\n    \t\t\tthis.w = 0;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tapplyMatrix4: function ( m ) {\n\n    \t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n    \t\tvar e = m.elements;\n\n    \t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n    \t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n    \t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n    \t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdivideScalar: function ( scalar ) {\n\n    \t\treturn this.multiplyScalar( 1 / scalar );\n\n    \t},\n\n    \tsetAxisAngleFromQuaternion: function ( q ) {\n\n    \t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n    \t\t// q is assumed to be normalized\n\n    \t\tthis.w = 2 * Math.acos( q.w );\n\n    \t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n    \t\tif ( s < 0.0001 ) {\n\n    \t\t\t this.x = 1;\n    \t\t\t this.y = 0;\n    \t\t\t this.z = 0;\n\n    \t\t} else {\n\n    \t\t\t this.x = q.x / s;\n    \t\t\t this.y = q.y / s;\n    \t\t\t this.z = q.z / s;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n    \t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n    \t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    \t\tvar angle, x, y, z,\t\t// variables for result\n    \t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n    \t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n    \t\t\tte = m.elements,\n\n    \t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n    \t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n    \t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n    \t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n    \t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n    \t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n    \t\t\t// singularity found\n    \t\t\t// first check for identity matrix which must have +1 for all terms\n    \t\t\t// in leading diagonal and zero in other terms\n\n    \t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n    \t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n    \t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n    \t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n    \t\t\t\t// this singularity is identity matrix so angle = 0\n\n    \t\t\t\tthis.set( 1, 0, 0, 0 );\n\n    \t\t\t\treturn this; // zero angle, arbitrary axis\n\n    \t\t\t}\n\n    \t\t\t// otherwise this singularity is angle = 180\n\n    \t\t\tangle = Math.PI;\n\n    \t\t\tvar xx = ( m11 + 1 ) / 2;\n    \t\t\tvar yy = ( m22 + 1 ) / 2;\n    \t\t\tvar zz = ( m33 + 1 ) / 2;\n    \t\t\tvar xy = ( m12 + m21 ) / 4;\n    \t\t\tvar xz = ( m13 + m31 ) / 4;\n    \t\t\tvar yz = ( m23 + m32 ) / 4;\n\n    \t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n    \t\t\t\t// m11 is the largest diagonal term\n\n    \t\t\t\tif ( xx < epsilon ) {\n\n    \t\t\t\t\tx = 0;\n    \t\t\t\t\ty = 0.707106781;\n    \t\t\t\t\tz = 0.707106781;\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tx = Math.sqrt( xx );\n    \t\t\t\t\ty = xy / x;\n    \t\t\t\t\tz = xz / x;\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( yy > zz ) {\n\n    \t\t\t\t// m22 is the largest diagonal term\n\n    \t\t\t\tif ( yy < epsilon ) {\n\n    \t\t\t\t\tx = 0.707106781;\n    \t\t\t\t\ty = 0;\n    \t\t\t\t\tz = 0.707106781;\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\ty = Math.sqrt( yy );\n    \t\t\t\t\tx = xy / y;\n    \t\t\t\t\tz = yz / y;\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\t// m33 is the largest diagonal term so base result on this\n\n    \t\t\t\tif ( zz < epsilon ) {\n\n    \t\t\t\t\tx = 0.707106781;\n    \t\t\t\t\ty = 0.707106781;\n    \t\t\t\t\tz = 0;\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tz = Math.sqrt( zz );\n    \t\t\t\t\tx = xz / z;\n    \t\t\t\t\ty = yz / z;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tthis.set( x, y, z, angle );\n\n    \t\t\treturn this; // return 180 deg rotation\n\n    \t\t}\n\n    \t\t// as we have reached here there are no singularities so we can handle normally\n\n    \t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n    \t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n    \t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n    \t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n    \t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n    \t\t// caught by singularity test above, but I've left it in just in case\n\n    \t\tthis.x = ( m32 - m23 ) / s;\n    \t\tthis.y = ( m13 - m31 ) / s;\n    \t\tthis.z = ( m21 - m12 ) / s;\n    \t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n    \t\treturn this;\n\n    \t},\n\n    \tmin: function ( v ) {\n\n    \t\tthis.x = Math.min( this.x, v.x );\n    \t\tthis.y = Math.min( this.y, v.y );\n    \t\tthis.z = Math.min( this.z, v.z );\n    \t\tthis.w = Math.min( this.w, v.w );\n\n    \t\treturn this;\n\n    \t},\n\n    \tmax: function ( v ) {\n\n    \t\tthis.x = Math.max( this.x, v.x );\n    \t\tthis.y = Math.max( this.y, v.y );\n    \t\tthis.z = Math.max( this.z, v.z );\n    \t\tthis.w = Math.max( this.w, v.w );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclamp: function ( min, max ) {\n\n    \t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    \t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n    \t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n    \t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n    \t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclampScalar: function () {\n\n    \t\tvar min, max;\n\n    \t\treturn function clampScalar( minVal, maxVal ) {\n\n    \t\t\tif ( min === undefined ) {\n\n    \t\t\t\tmin = new Vector4();\n    \t\t\t\tmax = new Vector4();\n\n    \t\t\t}\n\n    \t\t\tmin.set( minVal, minVal, minVal, minVal );\n    \t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n    \t\t\treturn this.clamp( min, max );\n\n    \t\t};\n\n    \t}(),\n\n    \tfloor: function () {\n\n    \t\tthis.x = Math.floor( this.x );\n    \t\tthis.y = Math.floor( this.y );\n    \t\tthis.z = Math.floor( this.z );\n    \t\tthis.w = Math.floor( this.w );\n\n    \t\treturn this;\n\n    \t},\n\n    \tceil: function () {\n\n    \t\tthis.x = Math.ceil( this.x );\n    \t\tthis.y = Math.ceil( this.y );\n    \t\tthis.z = Math.ceil( this.z );\n    \t\tthis.w = Math.ceil( this.w );\n\n    \t\treturn this;\n\n    \t},\n\n    \tround: function () {\n\n    \t\tthis.x = Math.round( this.x );\n    \t\tthis.y = Math.round( this.y );\n    \t\tthis.z = Math.round( this.z );\n    \t\tthis.w = Math.round( this.w );\n\n    \t\treturn this;\n\n    \t},\n\n    \troundToZero: function () {\n\n    \t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n    \t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n    \t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n    \t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n    \t\treturn this;\n\n    \t},\n\n    \tnegate: function () {\n\n    \t\tthis.x = - this.x;\n    \t\tthis.y = - this.y;\n    \t\tthis.z = - this.z;\n    \t\tthis.w = - this.w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdot: function ( v ) {\n\n    \t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n    \t},\n\n    \tlengthSq: function () {\n\n    \t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n    \t},\n\n    \tlength: function () {\n\n    \t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n    \t},\n\n    \tlengthManhattan: function () {\n\n    \t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n    \t},\n\n    \tnormalize: function () {\n\n    \t\treturn this.divideScalar( this.length() );\n\n    \t},\n\n    \tsetLength: function ( length ) {\n\n    \t\treturn this.multiplyScalar( length / this.length() );\n\n    \t},\n\n    \tlerp: function ( v, alpha ) {\n\n    \t\tthis.x += ( v.x - this.x ) * alpha;\n    \t\tthis.y += ( v.y - this.y ) * alpha;\n    \t\tthis.z += ( v.z - this.z ) * alpha;\n    \t\tthis.w += ( v.w - this.w ) * alpha;\n\n    \t\treturn this;\n\n    \t},\n\n    \tlerpVectors: function ( v1, v2, alpha ) {\n\n    \t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n    \t},\n\n    \tequals: function ( v ) {\n\n    \t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n    \t},\n\n    \tfromArray: function ( array, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tthis.x = array[ offset ];\n    \t\tthis.y = array[ offset + 1 ];\n    \t\tthis.z = array[ offset + 2 ];\n    \t\tthis.w = array[ offset + 3 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoArray: function ( array, offset ) {\n\n    \t\tif ( array === undefined ) array = [];\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tarray[ offset ] = this.x;\n    \t\tarray[ offset + 1 ] = this.y;\n    \t\tarray[ offset + 2 ] = this.z;\n    \t\tarray[ offset + 3 ] = this.w;\n\n    \t\treturn array;\n\n    \t},\n\n    \tfromAttribute: function ( attribute, index, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tindex = index * attribute.itemSize + offset;\n\n    \t\tthis.x = attribute.array[ index ];\n    \t\tthis.y = attribute.array[ index + 1 ];\n    \t\tthis.z = attribute.array[ index + 2 ];\n    \t\tthis.w = attribute.array[ index + 3 ];\n\n    \t\treturn this;\n\n    \t}\n\n    };\n\n    /**\n     * @author szimek / https://github.com/szimek/\n     * @author alteredq / http://alteredqualia.com/\n     * @author Marius Kintel / https://github.com/kintel\n     */\n\n    /*\n     In options, we can specify:\n     * Texture parameters for an auto-generated target texture\n     * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n    */\n    function WebGLRenderTarget( width, height, options ) {\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.width = width;\n    \tthis.height = height;\n\n    \tthis.scissor = new Vector4( 0, 0, width, height );\n    \tthis.scissorTest = false;\n\n    \tthis.viewport = new Vector4( 0, 0, width, height );\n\n    \toptions = options || {};\n\n    \tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n    \tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n    \tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    \tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n    \tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n    }\n\n    Object.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n    \tisWebGLRenderTarget: true,\n\n    \tsetSize: function ( width, height ) {\n\n    \t\tif ( this.width !== width || this.height !== height ) {\n\n    \t\t\tthis.width = width;\n    \t\t\tthis.height = height;\n\n    \t\t\tthis.dispose();\n\n    \t\t}\n\n    \t\tthis.viewport.set( 0, 0, width, height );\n    \t\tthis.scissor.set( 0, 0, width, height );\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tthis.width = source.width;\n    \t\tthis.height = source.height;\n\n    \t\tthis.viewport.copy( source.viewport );\n\n    \t\tthis.texture = source.texture.clone();\n\n    \t\tthis.depthBuffer = source.depthBuffer;\n    \t\tthis.stencilBuffer = source.stencilBuffer;\n    \t\tthis.depthTexture = source.depthTexture;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdispose: function () {\n\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\n\n    \t}\n\n    } );\n\n    /**\n     * @author alteredq / http://alteredqualia.com\n     */\n\n    function WebGLRenderTargetCube( width, height, options ) {\n\n    \tWebGLRenderTarget.call( this, width, height, options );\n\n    \tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n    \tthis.activeMipMapLevel = 0;\n\n    }\n\n    WebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n    WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n    WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author bhouston / http://clara.io\n     */\n\n    function Quaternion( x, y, z, w ) {\n\n    \tthis._x = x || 0;\n    \tthis._y = y || 0;\n    \tthis._z = z || 0;\n    \tthis._w = ( w !== undefined ) ? w : 1;\n\n    }\n\n    Quaternion.prototype = {\n\n    \tconstructor: Quaternion,\n\n    \tget x () {\n\n    \t\treturn this._x;\n\n    \t},\n\n    \tset x ( value ) {\n\n    \t\tthis._x = value;\n    \t\tthis.onChangeCallback();\n\n    \t},\n\n    \tget y () {\n\n    \t\treturn this._y;\n\n    \t},\n\n    \tset y ( value ) {\n\n    \t\tthis._y = value;\n    \t\tthis.onChangeCallback();\n\n    \t},\n\n    \tget z () {\n\n    \t\treturn this._z;\n\n    \t},\n\n    \tset z ( value ) {\n\n    \t\tthis._z = value;\n    \t\tthis.onChangeCallback();\n\n    \t},\n\n    \tget w () {\n\n    \t\treturn this._w;\n\n    \t},\n\n    \tset w ( value ) {\n\n    \t\tthis._w = value;\n    \t\tthis.onChangeCallback();\n\n    \t},\n\n    \tset: function ( x, y, z, w ) {\n\n    \t\tthis._x = x;\n    \t\tthis._y = y;\n    \t\tthis._z = z;\n    \t\tthis._w = w;\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n    \t},\n\n    \tcopy: function ( quaternion ) {\n\n    \t\tthis._x = quaternion.x;\n    \t\tthis._y = quaternion.y;\n    \t\tthis._z = quaternion.z;\n    \t\tthis._w = quaternion.w;\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromEuler: function ( euler, update ) {\n\n    \t\tif ( (euler && euler.isEuler) === false ) {\n\n    \t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n    \t\t}\n\n    \t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n    \t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n    \t\t//\tcontent/SpinCalc.m\n\n    \t\tvar c1 = Math.cos( euler._x / 2 );\n    \t\tvar c2 = Math.cos( euler._y / 2 );\n    \t\tvar c3 = Math.cos( euler._z / 2 );\n    \t\tvar s1 = Math.sin( euler._x / 2 );\n    \t\tvar s2 = Math.sin( euler._y / 2 );\n    \t\tvar s3 = Math.sin( euler._z / 2 );\n\n    \t\tvar order = euler.order;\n\n    \t\tif ( order === 'XYZ' ) {\n\n    \t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n    \t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n    \t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n    \t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    \t\t} else if ( order === 'YXZ' ) {\n\n    \t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n    \t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n    \t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n    \t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    \t\t} else if ( order === 'ZXY' ) {\n\n    \t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n    \t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n    \t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n    \t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    \t\t} else if ( order === 'ZYX' ) {\n\n    \t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n    \t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n    \t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n    \t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    \t\t} else if ( order === 'YZX' ) {\n\n    \t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n    \t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n    \t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n    \t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    \t\t} else if ( order === 'XZY' ) {\n\n    \t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n    \t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n    \t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n    \t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n    \t\t}\n\n    \t\tif ( update !== false ) this.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromAxisAngle: function ( axis, angle ) {\n\n    \t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n    \t\t// assumes axis is normalized\n\n    \t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n    \t\tthis._x = axis.x * s;\n    \t\tthis._y = axis.y * s;\n    \t\tthis._z = axis.z * s;\n    \t\tthis._w = Math.cos( halfAngle );\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromRotationMatrix: function ( m ) {\n\n    \t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n    \t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    \t\tvar te = m.elements,\n\n    \t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n    \t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n    \t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n    \t\t\ttrace = m11 + m22 + m33,\n    \t\t\ts;\n\n    \t\tif ( trace > 0 ) {\n\n    \t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n    \t\t\tthis._w = 0.25 / s;\n    \t\t\tthis._x = ( m32 - m23 ) * s;\n    \t\t\tthis._y = ( m13 - m31 ) * s;\n    \t\t\tthis._z = ( m21 - m12 ) * s;\n\n    \t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n    \t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n    \t\t\tthis._w = ( m32 - m23 ) / s;\n    \t\t\tthis._x = 0.25 * s;\n    \t\t\tthis._y = ( m12 + m21 ) / s;\n    \t\t\tthis._z = ( m13 + m31 ) / s;\n\n    \t\t} else if ( m22 > m33 ) {\n\n    \t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n    \t\t\tthis._w = ( m13 - m31 ) / s;\n    \t\t\tthis._x = ( m12 + m21 ) / s;\n    \t\t\tthis._y = 0.25 * s;\n    \t\t\tthis._z = ( m23 + m32 ) / s;\n\n    \t\t} else {\n\n    \t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n    \t\t\tthis._w = ( m21 - m12 ) / s;\n    \t\t\tthis._x = ( m13 + m31 ) / s;\n    \t\t\tthis._y = ( m23 + m32 ) / s;\n    \t\t\tthis._z = 0.25 * s;\n\n    \t\t}\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromUnitVectors: function () {\n\n    \t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\n\n    \t\t// assumes direction vectors vFrom and vTo are normalized\n\n    \t\tvar v1, r;\n\n    \t\tvar EPS = 0.000001;\n\n    \t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n    \t\t\tr = vFrom.dot( vTo ) + 1;\n\n    \t\t\tif ( r < EPS ) {\n\n    \t\t\t\tr = 0;\n\n    \t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n    \t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\tv1.crossVectors( vFrom, vTo );\n\n    \t\t\t}\n\n    \t\t\tthis._x = v1.x;\n    \t\t\tthis._y = v1.y;\n    \t\t\tthis._z = v1.z;\n    \t\t\tthis._w = r;\n\n    \t\t\treturn this.normalize();\n\n    \t\t};\n\n    \t}(),\n\n    \tinverse: function () {\n\n    \t\treturn this.conjugate().normalize();\n\n    \t},\n\n    \tconjugate: function () {\n\n    \t\tthis._x *= - 1;\n    \t\tthis._y *= - 1;\n    \t\tthis._z *= - 1;\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tdot: function ( v ) {\n\n    \t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n    \t},\n\n    \tlengthSq: function () {\n\n    \t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n    \t},\n\n    \tlength: function () {\n\n    \t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n    \t},\n\n    \tnormalize: function () {\n\n    \t\tvar l = this.length();\n\n    \t\tif ( l === 0 ) {\n\n    \t\t\tthis._x = 0;\n    \t\t\tthis._y = 0;\n    \t\t\tthis._z = 0;\n    \t\t\tthis._w = 1;\n\n    \t\t} else {\n\n    \t\t\tl = 1 / l;\n\n    \t\t\tthis._x = this._x * l;\n    \t\t\tthis._y = this._y * l;\n    \t\t\tthis._z = this._z * l;\n    \t\t\tthis._w = this._w * l;\n\n    \t\t}\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiply: function ( q, p ) {\n\n    \t\tif ( p !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n    \t\t\treturn this.multiplyQuaternions( q, p );\n\n    \t\t}\n\n    \t\treturn this.multiplyQuaternions( this, q );\n\n    \t},\n\n    \tpremultiply: function ( q ) {\n\n    \t\treturn this.multiplyQuaternions( q, this );\n\n    \t},\n\n    \tmultiplyQuaternions: function ( a, b ) {\n\n    \t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n    \t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n    \t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n    \t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    \t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    \t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    \t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tslerp: function ( qb, t ) {\n\n    \t\tif ( t === 0 ) return this;\n    \t\tif ( t === 1 ) return this.copy( qb );\n\n    \t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n    \t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n    \t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n    \t\tif ( cosHalfTheta < 0 ) {\n\n    \t\t\tthis._w = - qb._w;\n    \t\t\tthis._x = - qb._x;\n    \t\t\tthis._y = - qb._y;\n    \t\t\tthis._z = - qb._z;\n\n    \t\t\tcosHalfTheta = - cosHalfTheta;\n\n    \t\t} else {\n\n    \t\t\tthis.copy( qb );\n\n    \t\t}\n\n    \t\tif ( cosHalfTheta >= 1.0 ) {\n\n    \t\t\tthis._w = w;\n    \t\t\tthis._x = x;\n    \t\t\tthis._y = y;\n    \t\t\tthis._z = z;\n\n    \t\t\treturn this;\n\n    \t\t}\n\n    \t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n    \t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n    \t\t\tthis._w = 0.5 * ( w + this._w );\n    \t\t\tthis._x = 0.5 * ( x + this._x );\n    \t\t\tthis._y = 0.5 * ( y + this._y );\n    \t\t\tthis._z = 0.5 * ( z + this._z );\n\n    \t\t\treturn this;\n\n    \t\t}\n\n    \t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n    \t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n    \t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n    \t\tthis._w = ( w * ratioA + this._w * ratioB );\n    \t\tthis._x = ( x * ratioA + this._x * ratioB );\n    \t\tthis._y = ( y * ratioA + this._y * ratioB );\n    \t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( quaternion ) {\n\n    \t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n    \t},\n\n    \tfromArray: function ( array, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tthis._x = array[ offset ];\n    \t\tthis._y = array[ offset + 1 ];\n    \t\tthis._z = array[ offset + 2 ];\n    \t\tthis._w = array[ offset + 3 ];\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoArray: function ( array, offset ) {\n\n    \t\tif ( array === undefined ) array = [];\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tarray[ offset ] = this._x;\n    \t\tarray[ offset + 1 ] = this._y;\n    \t\tarray[ offset + 2 ] = this._z;\n    \t\tarray[ offset + 3 ] = this._w;\n\n    \t\treturn array;\n\n    \t},\n\n    \tonChange: function ( callback ) {\n\n    \t\tthis.onChangeCallback = callback;\n\n    \t\treturn this;\n\n    \t},\n\n    \tonChangeCallback: function () {}\n\n    };\n\n    Object.assign( Quaternion, {\n\n    \tslerp: function( qa, qb, qm, t ) {\n\n    \t\treturn qm.copy( qa ).slerp( qb, t );\n\n    \t},\n\n    \tslerpFlat: function(\n    \t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n    \t\t// fuzz-free, array-based Quaternion SLERP operation\n\n    \t\tvar x0 = src0[ srcOffset0 + 0 ],\n    \t\t\ty0 = src0[ srcOffset0 + 1 ],\n    \t\t\tz0 = src0[ srcOffset0 + 2 ],\n    \t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n    \t\t\tx1 = src1[ srcOffset1 + 0 ],\n    \t\t\ty1 = src1[ srcOffset1 + 1 ],\n    \t\t\tz1 = src1[ srcOffset1 + 2 ],\n    \t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n    \t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n    \t\t\tvar s = 1 - t,\n\n    \t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n    \t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n    \t\t\t\tsqrSin = 1 - cos * cos;\n\n    \t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n    \t\t\tif ( sqrSin > Number.EPSILON ) {\n\n    \t\t\t\tvar sin = Math.sqrt( sqrSin ),\n    \t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n    \t\t\t\ts = Math.sin( s * len ) / sin;\n    \t\t\t\tt = Math.sin( t * len ) / sin;\n\n    \t\t\t}\n\n    \t\t\tvar tDir = t * dir;\n\n    \t\t\tx0 = x0 * s + x1 * tDir;\n    \t\t\ty0 = y0 * s + y1 * tDir;\n    \t\t\tz0 = z0 * s + z1 * tDir;\n    \t\t\tw0 = w0 * s + w1 * tDir;\n\n    \t\t\t// Normalize in case we just did a lerp:\n    \t\t\tif ( s === 1 - t ) {\n\n    \t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n    \t\t\t\tx0 *= f;\n    \t\t\t\ty0 *= f;\n    \t\t\t\tz0 *= f;\n    \t\t\t\tw0 *= f;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tdst[ dstOffset ] = x0;\n    \t\tdst[ dstOffset + 1 ] = y0;\n    \t\tdst[ dstOffset + 2 ] = z0;\n    \t\tdst[ dstOffset + 3 ] = w0;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author *kile / http://kile.stravaganza.org/\n     * @author philogb / http://blog.thejit.org/\n     * @author mikael emtinger / http://gomo.se/\n     * @author egraether / http://egraether.com/\n     * @author WestLangley / http://github.com/WestLangley\n     */\n\n    function Vector3( x, y, z ) {\n\n    \tthis.x = x || 0;\n    \tthis.y = y || 0;\n    \tthis.z = z || 0;\n\n    }\n\n    Vector3.prototype = {\n\n    \tconstructor: Vector3,\n\n    \tisVector3: true,\n\n    \tset: function ( x, y, z ) {\n\n    \t\tthis.x = x;\n    \t\tthis.y = y;\n    \t\tthis.z = z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetScalar: function ( scalar ) {\n\n    \t\tthis.x = scalar;\n    \t\tthis.y = scalar;\n    \t\tthis.z = scalar;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetX: function ( x ) {\n\n    \t\tthis.x = x;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetY: function ( y ) {\n\n    \t\tthis.y = y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetZ: function ( z ) {\n\n    \t\tthis.z = z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetComponent: function ( index, value ) {\n\n    \t\tswitch ( index ) {\n\n    \t\t\tcase 0: this.x = value; break;\n    \t\t\tcase 1: this.y = value; break;\n    \t\t\tcase 2: this.z = value; break;\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n    \t\t}\n\n    \t},\n\n    \tgetComponent: function ( index ) {\n\n    \t\tswitch ( index ) {\n\n    \t\t\tcase 0: return this.x;\n    \t\t\tcase 1: return this.y;\n    \t\t\tcase 2: return this.z;\n    \t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n    \t\t}\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this.x, this.y, this.z );\n\n    \t},\n\n    \tcopy: function ( v ) {\n\n    \t\tthis.x = v.x;\n    \t\tthis.y = v.y;\n    \t\tthis.z = v.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tadd: function ( v, w ) {\n\n    \t\tif ( w !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n    \t\t\treturn this.addVectors( v, w );\n\n    \t\t}\n\n    \t\tthis.x += v.x;\n    \t\tthis.y += v.y;\n    \t\tthis.z += v.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddScalar: function ( s ) {\n\n    \t\tthis.x += s;\n    \t\tthis.y += s;\n    \t\tthis.z += s;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddVectors: function ( a, b ) {\n\n    \t\tthis.x = a.x + b.x;\n    \t\tthis.y = a.y + b.y;\n    \t\tthis.z = a.z + b.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddScaledVector: function ( v, s ) {\n\n    \t\tthis.x += v.x * s;\n    \t\tthis.y += v.y * s;\n    \t\tthis.z += v.z * s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsub: function ( v, w ) {\n\n    \t\tif ( w !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n    \t\t\treturn this.subVectors( v, w );\n\n    \t\t}\n\n    \t\tthis.x -= v.x;\n    \t\tthis.y -= v.y;\n    \t\tthis.z -= v.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsubScalar: function ( s ) {\n\n    \t\tthis.x -= s;\n    \t\tthis.y -= s;\n    \t\tthis.z -= s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsubVectors: function ( a, b ) {\n\n    \t\tthis.x = a.x - b.x;\n    \t\tthis.y = a.y - b.y;\n    \t\tthis.z = a.z - b.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiply: function ( v, w ) {\n\n    \t\tif ( w !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n    \t\t\treturn this.multiplyVectors( v, w );\n\n    \t\t}\n\n    \t\tthis.x *= v.x;\n    \t\tthis.y *= v.y;\n    \t\tthis.z *= v.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiplyScalar: function ( scalar ) {\n\n    \t\tif ( isFinite( scalar ) ) {\n\n    \t\t\tthis.x *= scalar;\n    \t\t\tthis.y *= scalar;\n    \t\t\tthis.z *= scalar;\n\n    \t\t} else {\n\n    \t\t\tthis.x = 0;\n    \t\t\tthis.y = 0;\n    \t\t\tthis.z = 0;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiplyVectors: function ( a, b ) {\n\n    \t\tthis.x = a.x * b.x;\n    \t\tthis.y = a.y * b.y;\n    \t\tthis.z = a.z * b.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tapplyEuler: function () {\n\n    \t\tvar quaternion;\n\n    \t\treturn function applyEuler( euler ) {\n\n    \t\t\tif ( (euler && euler.isEuler) === false ) {\n\n    \t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n    \t\t\t}\n\n    \t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\n\n    \t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n    \t\t};\n\n    \t}(),\n\n    \tapplyAxisAngle: function () {\n\n    \t\tvar quaternion;\n\n    \t\treturn function applyAxisAngle( axis, angle ) {\n\n    \t\t\tif ( quaternion === undefined ) quaternion = new Quaternion();\n\n    \t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n    \t\t};\n\n    \t}(),\n\n    \tapplyMatrix3: function ( m ) {\n\n    \t\tvar x = this.x, y = this.y, z = this.z;\n    \t\tvar e = m.elements;\n\n    \t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n    \t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n    \t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tapplyMatrix4: function ( m ) {\n\n    \t\t// input: THREE.Matrix4 affine matrix\n\n    \t\tvar x = this.x, y = this.y, z = this.z;\n    \t\tvar e = m.elements;\n\n    \t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\n    \t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\n    \t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \tapplyProjection: function ( m ) {\n\n    \t\t// input: THREE.Matrix4 projection matrix\n\n    \t\tvar x = this.x, y = this.y, z = this.z;\n    \t\tvar e = m.elements;\n    \t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\n\n    \t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\n    \t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\n    \t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\n\n    \t\treturn this;\n\n    \t},\n\n    \tapplyQuaternion: function ( q ) {\n\n    \t\tvar x = this.x, y = this.y, z = this.z;\n    \t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n    \t\t// calculate quat * vector\n\n    \t\tvar ix =  qw * x + qy * z - qz * y;\n    \t\tvar iy =  qw * y + qz * x - qx * z;\n    \t\tvar iz =  qw * z + qx * y - qy * x;\n    \t\tvar iw = - qx * x - qy * y - qz * z;\n\n    \t\t// calculate result * inverse quat\n\n    \t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n    \t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n    \t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n    \t\treturn this;\n\n    \t},\n\n    \tproject: function () {\n\n    \t\tvar matrix;\n\n    \t\treturn function project( camera ) {\n\n    \t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n    \t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n    \t\t\treturn this.applyProjection( matrix );\n\n    \t\t};\n\n    \t}(),\n\n    \tunproject: function () {\n\n    \t\tvar matrix;\n\n    \t\treturn function unproject( camera ) {\n\n    \t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n    \t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n    \t\t\treturn this.applyProjection( matrix );\n\n    \t\t};\n\n    \t}(),\n\n    \ttransformDirection: function ( m ) {\n\n    \t\t// input: THREE.Matrix4 affine matrix\n    \t\t// vector interpreted as a direction\n\n    \t\tvar x = this.x, y = this.y, z = this.z;\n    \t\tvar e = m.elements;\n\n    \t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\n    \t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\n    \t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n    \t\treturn this.normalize();\n\n    \t},\n\n    \tdivide: function ( v ) {\n\n    \t\tthis.x /= v.x;\n    \t\tthis.y /= v.y;\n    \t\tthis.z /= v.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdivideScalar: function ( scalar ) {\n\n    \t\treturn this.multiplyScalar( 1 / scalar );\n\n    \t},\n\n    \tmin: function ( v ) {\n\n    \t\tthis.x = Math.min( this.x, v.x );\n    \t\tthis.y = Math.min( this.y, v.y );\n    \t\tthis.z = Math.min( this.z, v.z );\n\n    \t\treturn this;\n\n    \t},\n\n    \tmax: function ( v ) {\n\n    \t\tthis.x = Math.max( this.x, v.x );\n    \t\tthis.y = Math.max( this.y, v.y );\n    \t\tthis.z = Math.max( this.z, v.z );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclamp: function ( min, max ) {\n\n    \t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\n\n    \t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n    \t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n    \t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclampScalar: function () {\n\n    \t\tvar min, max;\n\n    \t\treturn function clampScalar( minVal, maxVal ) {\n\n    \t\t\tif ( min === undefined ) {\n\n    \t\t\t\tmin = new Vector3();\n    \t\t\t\tmax = new Vector3();\n\n    \t\t\t}\n\n    \t\t\tmin.set( minVal, minVal, minVal );\n    \t\t\tmax.set( maxVal, maxVal, maxVal );\n\n    \t\t\treturn this.clamp( min, max );\n\n    \t\t};\n\n    \t}(),\n\n    \tclampLength: function ( min, max ) {\n\n    \t\tvar length = this.length();\n\n    \t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\n\n    \t},\n\n    \tfloor: function () {\n\n    \t\tthis.x = Math.floor( this.x );\n    \t\tthis.y = Math.floor( this.y );\n    \t\tthis.z = Math.floor( this.z );\n\n    \t\treturn this;\n\n    \t},\n\n    \tceil: function () {\n\n    \t\tthis.x = Math.ceil( this.x );\n    \t\tthis.y = Math.ceil( this.y );\n    \t\tthis.z = Math.ceil( this.z );\n\n    \t\treturn this;\n\n    \t},\n\n    \tround: function () {\n\n    \t\tthis.x = Math.round( this.x );\n    \t\tthis.y = Math.round( this.y );\n    \t\tthis.z = Math.round( this.z );\n\n    \t\treturn this;\n\n    \t},\n\n    \troundToZero: function () {\n\n    \t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n    \t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n    \t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n    \t\treturn this;\n\n    \t},\n\n    \tnegate: function () {\n\n    \t\tthis.x = - this.x;\n    \t\tthis.y = - this.y;\n    \t\tthis.z = - this.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdot: function ( v ) {\n\n    \t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n    \t},\n\n    \tlengthSq: function () {\n\n    \t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n    \t},\n\n    \tlength: function () {\n\n    \t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n    \t},\n\n    \tlengthManhattan: function () {\n\n    \t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n    \t},\n\n    \tnormalize: function () {\n\n    \t\treturn this.divideScalar( this.length() );\n\n    \t},\n\n    \tsetLength: function ( length ) {\n\n    \t\treturn this.multiplyScalar( length / this.length() );\n\n    \t},\n\n    \tlerp: function ( v, alpha ) {\n\n    \t\tthis.x += ( v.x - this.x ) * alpha;\n    \t\tthis.y += ( v.y - this.y ) * alpha;\n    \t\tthis.z += ( v.z - this.z ) * alpha;\n\n    \t\treturn this;\n\n    \t},\n\n    \tlerpVectors: function ( v1, v2, alpha ) {\n\n    \t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n    \t},\n\n    \tcross: function ( v, w ) {\n\n    \t\tif ( w !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n    \t\t\treturn this.crossVectors( v, w );\n\n    \t\t}\n\n    \t\tvar x = this.x, y = this.y, z = this.z;\n\n    \t\tthis.x = y * v.z - z * v.y;\n    \t\tthis.y = z * v.x - x * v.z;\n    \t\tthis.z = x * v.y - y * v.x;\n\n    \t\treturn this;\n\n    \t},\n\n    \tcrossVectors: function ( a, b ) {\n\n    \t\tvar ax = a.x, ay = a.y, az = a.z;\n    \t\tvar bx = b.x, by = b.y, bz = b.z;\n\n    \t\tthis.x = ay * bz - az * by;\n    \t\tthis.y = az * bx - ax * bz;\n    \t\tthis.z = ax * by - ay * bx;\n\n    \t\treturn this;\n\n    \t},\n\n    \tprojectOnVector: function ( vector ) {\n\n    \t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n    \t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n    \t},\n\n    \tprojectOnPlane: function () {\n\n    \t\tvar v1;\n\n    \t\treturn function projectOnPlane( planeNormal ) {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n    \t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n    \t\t\treturn this.sub( v1 );\n\n    \t\t};\n\n    \t}(),\n\n    \treflect: function () {\n\n    \t\t// reflect incident vector off plane orthogonal to normal\n    \t\t// normal is assumed to have unit length\n\n    \t\tvar v1;\n\n    \t\treturn function reflect( normal ) {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n    \t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n    \t\t};\n\n    \t}(),\n\n    \tangleTo: function ( v ) {\n\n    \t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n    \t\t// clamp, to handle numerical problems\n\n    \t\treturn Math.acos( exports.Math.clamp( theta, - 1, 1 ) );\n\n    \t},\n\n    \tdistanceTo: function ( v ) {\n\n    \t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n    \t},\n\n    \tdistanceToSquared: function ( v ) {\n\n    \t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n    \t\treturn dx * dx + dy * dy + dz * dz;\n\n    \t},\n\n    \tdistanceToManhattan: function ( v ) {\n\n    \t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n    \t},\n\n    \tsetFromSpherical: function( s ) {\n\n    \t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n    \t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n    \t\tthis.y = Math.cos( s.phi ) * s.radius;\n    \t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromMatrixPosition: function ( m ) {\n\n    \t\treturn this.setFromMatrixColumn( m, 3 );\n\n    \t},\n\n    \tsetFromMatrixScale: function ( m ) {\n\n    \t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n    \t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n    \t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n    \t\tthis.x = sx;\n    \t\tthis.y = sy;\n    \t\tthis.z = sz;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromMatrixColumn: function ( m, index ) {\n\n    \t\tif ( typeof m === 'number' ) {\n\n    \t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\n    \t\t\tvar temp = m\n    \t\t\tm = index;\n    \t\t\tindex = temp;\n\n    \t\t}\n\n    \t\treturn this.fromArray( m.elements, index * 4 );\n\n    \t},\n\n    \tequals: function ( v ) {\n\n    \t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n    \t},\n\n    \tfromArray: function ( array, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tthis.x = array[ offset ];\n    \t\tthis.y = array[ offset + 1 ];\n    \t\tthis.z = array[ offset + 2 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoArray: function ( array, offset ) {\n\n    \t\tif ( array === undefined ) array = [];\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tarray[ offset ] = this.x;\n    \t\tarray[ offset + 1 ] = this.y;\n    \t\tarray[ offset + 2 ] = this.z;\n\n    \t\treturn array;\n\n    \t},\n\n    \tfromAttribute: function ( attribute, index, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tindex = index * attribute.itemSize + offset;\n\n    \t\tthis.x = attribute.array[ index ];\n    \t\tthis.y = attribute.array[ index + 1 ];\n    \t\tthis.z = attribute.array[ index + 2 ];\n\n    \t\treturn this;\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author supereggbert / http://www.paulbrunt.co.uk/\n     * @author philogb / http://blog.thejit.org/\n     * @author jordi_ros / http://plattsoft.com\n     * @author D1plo1d / http://github.com/D1plo1d\n     * @author alteredq / http://alteredqualia.com/\n     * @author mikael emtinger / http://gomo.se/\n     * @author timknip / http://www.floorplanner.com/\n     * @author bhouston / http://clara.io\n     * @author WestLangley / http://github.com/WestLangley\n     */\n\n    function Matrix4() {\n\n    \tthis.elements = new Float32Array( [\n\n    \t\t1, 0, 0, 0,\n    \t\t0, 1, 0, 0,\n    \t\t0, 0, 1, 0,\n    \t\t0, 0, 0, 1\n\n    \t] );\n\n    \tif ( arguments.length > 0 ) {\n\n    \t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n    \t}\n\n    }\n\n    Matrix4.prototype = {\n\n    \tconstructor: Matrix4,\n\n    \tisMatrix4: true,\n\n    \tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n    \t\tvar te = this.elements;\n\n    \t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n    \t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n    \t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n    \t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n    \t\treturn this;\n\n    \t},\n\n    \tidentity: function () {\n\n    \t\tthis.set(\n\n    \t\t\t1, 0, 0, 0,\n    \t\t\t0, 1, 0, 0,\n    \t\t\t0, 0, 1, 0,\n    \t\t\t0, 0, 0, 1\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new Matrix4().fromArray( this.elements );\n\n    \t},\n\n    \tcopy: function ( m ) {\n\n    \t\tthis.elements.set( m.elements );\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyPosition: function ( m ) {\n\n    \t\tvar te = this.elements;\n    \t\tvar me = m.elements;\n\n    \t\tte[ 12 ] = me[ 12 ];\n    \t\tte[ 13 ] = me[ 13 ];\n    \t\tte[ 14 ] = me[ 14 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n    \t\txAxis.setFromMatrixColumn( this, 0 );\n    \t\tyAxis.setFromMatrixColumn( this, 1 );\n    \t\tzAxis.setFromMatrixColumn( this, 2 );\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n    \t\tthis.set(\n    \t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n    \t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n    \t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n    \t\t\t0,       0,       0,       1\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \textractRotation: function () {\n\n    \t\tvar v1;\n\n    \t\treturn function extractRotation( m ) {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n    \t\t\tvar te = this.elements;\n    \t\t\tvar me = m.elements;\n\n    \t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n    \t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n    \t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n    \t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n    \t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n    \t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n    \t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n    \t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n    \t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n    \t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n    \t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n    \t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tmakeRotationFromEuler: function ( euler ) {\n\n    \t\tif ( (euler && euler.isEuler) === false ) {\n\n    \t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n    \t\t}\n\n    \t\tvar te = this.elements;\n\n    \t\tvar x = euler.x, y = euler.y, z = euler.z;\n    \t\tvar a = Math.cos( x ), b = Math.sin( x );\n    \t\tvar c = Math.cos( y ), d = Math.sin( y );\n    \t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n    \t\tif ( euler.order === 'XYZ' ) {\n\n    \t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n    \t\t\tte[ 0 ] = c * e;\n    \t\t\tte[ 4 ] = - c * f;\n    \t\t\tte[ 8 ] = d;\n\n    \t\t\tte[ 1 ] = af + be * d;\n    \t\t\tte[ 5 ] = ae - bf * d;\n    \t\t\tte[ 9 ] = - b * c;\n\n    \t\t\tte[ 2 ] = bf - ae * d;\n    \t\t\tte[ 6 ] = be + af * d;\n    \t\t\tte[ 10 ] = a * c;\n\n    \t\t} else if ( euler.order === 'YXZ' ) {\n\n    \t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n    \t\t\tte[ 0 ] = ce + df * b;\n    \t\t\tte[ 4 ] = de * b - cf;\n    \t\t\tte[ 8 ] = a * d;\n\n    \t\t\tte[ 1 ] = a * f;\n    \t\t\tte[ 5 ] = a * e;\n    \t\t\tte[ 9 ] = - b;\n\n    \t\t\tte[ 2 ] = cf * b - de;\n    \t\t\tte[ 6 ] = df + ce * b;\n    \t\t\tte[ 10 ] = a * c;\n\n    \t\t} else if ( euler.order === 'ZXY' ) {\n\n    \t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n    \t\t\tte[ 0 ] = ce - df * b;\n    \t\t\tte[ 4 ] = - a * f;\n    \t\t\tte[ 8 ] = de + cf * b;\n\n    \t\t\tte[ 1 ] = cf + de * b;\n    \t\t\tte[ 5 ] = a * e;\n    \t\t\tte[ 9 ] = df - ce * b;\n\n    \t\t\tte[ 2 ] = - a * d;\n    \t\t\tte[ 6 ] = b;\n    \t\t\tte[ 10 ] = a * c;\n\n    \t\t} else if ( euler.order === 'ZYX' ) {\n\n    \t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n    \t\t\tte[ 0 ] = c * e;\n    \t\t\tte[ 4 ] = be * d - af;\n    \t\t\tte[ 8 ] = ae * d + bf;\n\n    \t\t\tte[ 1 ] = c * f;\n    \t\t\tte[ 5 ] = bf * d + ae;\n    \t\t\tte[ 9 ] = af * d - be;\n\n    \t\t\tte[ 2 ] = - d;\n    \t\t\tte[ 6 ] = b * c;\n    \t\t\tte[ 10 ] = a * c;\n\n    \t\t} else if ( euler.order === 'YZX' ) {\n\n    \t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n    \t\t\tte[ 0 ] = c * e;\n    \t\t\tte[ 4 ] = bd - ac * f;\n    \t\t\tte[ 8 ] = bc * f + ad;\n\n    \t\t\tte[ 1 ] = f;\n    \t\t\tte[ 5 ] = a * e;\n    \t\t\tte[ 9 ] = - b * e;\n\n    \t\t\tte[ 2 ] = - d * e;\n    \t\t\tte[ 6 ] = ad * f + bc;\n    \t\t\tte[ 10 ] = ac - bd * f;\n\n    \t\t} else if ( euler.order === 'XZY' ) {\n\n    \t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n    \t\t\tte[ 0 ] = c * e;\n    \t\t\tte[ 4 ] = - f;\n    \t\t\tte[ 8 ] = d * e;\n\n    \t\t\tte[ 1 ] = ac * f + bd;\n    \t\t\tte[ 5 ] = a * e;\n    \t\t\tte[ 9 ] = ad * f - bc;\n\n    \t\t\tte[ 2 ] = bc * f - ad;\n    \t\t\tte[ 6 ] = b * e;\n    \t\t\tte[ 10 ] = bd * f + ac;\n\n    \t\t}\n\n    \t\t// last column\n    \t\tte[ 3 ] = 0;\n    \t\tte[ 7 ] = 0;\n    \t\tte[ 11 ] = 0;\n\n    \t\t// bottom row\n    \t\tte[ 12 ] = 0;\n    \t\tte[ 13 ] = 0;\n    \t\tte[ 14 ] = 0;\n    \t\tte[ 15 ] = 1;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakeRotationFromQuaternion: function ( q ) {\n\n    \t\tvar te = this.elements;\n\n    \t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\n    \t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n    \t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n    \t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n    \t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n    \t\tte[ 0 ] = 1 - ( yy + zz );\n    \t\tte[ 4 ] = xy - wz;\n    \t\tte[ 8 ] = xz + wy;\n\n    \t\tte[ 1 ] = xy + wz;\n    \t\tte[ 5 ] = 1 - ( xx + zz );\n    \t\tte[ 9 ] = yz - wx;\n\n    \t\tte[ 2 ] = xz - wy;\n    \t\tte[ 6 ] = yz + wx;\n    \t\tte[ 10 ] = 1 - ( xx + yy );\n\n    \t\t// last column\n    \t\tte[ 3 ] = 0;\n    \t\tte[ 7 ] = 0;\n    \t\tte[ 11 ] = 0;\n\n    \t\t// bottom row\n    \t\tte[ 12 ] = 0;\n    \t\tte[ 13 ] = 0;\n    \t\tte[ 14 ] = 0;\n    \t\tte[ 15 ] = 1;\n\n    \t\treturn this;\n\n    \t},\n\n    \tlookAt: function () {\n\n    \t\tvar x, y, z;\n\n    \t\treturn function lookAt( eye, target, up ) {\n\n    \t\t\tif ( x === undefined ) {\n\n    \t\t\t\tx = new Vector3();\n    \t\t\t\ty = new Vector3();\n    \t\t\t\tz = new Vector3();\n\n    \t\t\t}\n\n    \t\t\tvar te = this.elements;\n\n    \t\t\tz.subVectors( eye, target ).normalize();\n\n    \t\t\tif ( z.lengthSq() === 0 ) {\n\n    \t\t\t\tz.z = 1;\n\n    \t\t\t}\n\n    \t\t\tx.crossVectors( up, z ).normalize();\n\n    \t\t\tif ( x.lengthSq() === 0 ) {\n\n    \t\t\t\tz.z += 0.0001;\n    \t\t\t\tx.crossVectors( up, z ).normalize();\n\n    \t\t\t}\n\n    \t\t\ty.crossVectors( z, x );\n\n\n    \t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n    \t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n    \t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tmultiply: function ( m, n ) {\n\n    \t\tif ( n !== undefined ) {\n\n    \t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n    \t\t\treturn this.multiplyMatrices( m, n );\n\n    \t\t}\n\n    \t\treturn this.multiplyMatrices( this, m );\n\n    \t},\n\n    \tpremultiply: function ( m ) {\n\n    \t\treturn this.multiplyMatrices( m, this );\n\n    \t},\n\n    \tmultiplyMatrices: function ( a, b ) {\n\n    \t\tvar ae = a.elements;\n    \t\tvar be = b.elements;\n    \t\tvar te = this.elements;\n\n    \t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n    \t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n    \t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n    \t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n    \t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n    \t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n    \t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n    \t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n    \t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    \t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    \t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    \t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n    \t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    \t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    \t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    \t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n    \t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    \t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    \t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    \t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n    \t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    \t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    \t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    \t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiplyToArray: function ( a, b, r ) {\n\n    \t\tvar te = this.elements;\n\n    \t\tthis.multiplyMatrices( a, b );\n\n    \t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\n    \t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\n    \t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\n    \t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiplyScalar: function ( s ) {\n\n    \t\tvar te = this.elements;\n\n    \t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n    \t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n    \t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n    \t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tapplyToVector3Array: function () {\n\n    \t\tvar v1;\n\n    \t\treturn function applyToVector3Array( array, offset, length ) {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n    \t\t\tif ( offset === undefined ) offset = 0;\n    \t\t\tif ( length === undefined ) length = array.length;\n\n    \t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n    \t\t\t\tv1.fromArray( array, j );\n    \t\t\t\tv1.applyMatrix4( this );\n    \t\t\t\tv1.toArray( array, j );\n\n    \t\t\t}\n\n    \t\t\treturn array;\n\n    \t\t};\n\n    \t}(),\n\n    \tapplyToBuffer: function () {\n\n    \t\tvar v1;\n\n    \t\treturn function applyToBuffer( buffer, offset, length ) {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n    \t\t\tif ( offset === undefined ) offset = 0;\n    \t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n    \t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n    \t\t\t\tv1.x = buffer.getX( j );\n    \t\t\t\tv1.y = buffer.getY( j );\n    \t\t\t\tv1.z = buffer.getZ( j );\n\n    \t\t\t\tv1.applyMatrix4( this );\n\n    \t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\n\n    \t\t\t}\n\n    \t\t\treturn buffer;\n\n    \t\t};\n\n    \t}(),\n\n    \tdeterminant: function () {\n\n    \t\tvar te = this.elements;\n\n    \t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n    \t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n    \t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n    \t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n    \t\t//TODO: make this more efficient\n    \t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n    \t\treturn (\n    \t\t\tn41 * (\n    \t\t\t\t+ n14 * n23 * n32\n    \t\t\t\t - n13 * n24 * n32\n    \t\t\t\t - n14 * n22 * n33\n    \t\t\t\t + n12 * n24 * n33\n    \t\t\t\t + n13 * n22 * n34\n    \t\t\t\t - n12 * n23 * n34\n    \t\t\t) +\n    \t\t\tn42 * (\n    \t\t\t\t+ n11 * n23 * n34\n    \t\t\t\t - n11 * n24 * n33\n    \t\t\t\t + n14 * n21 * n33\n    \t\t\t\t - n13 * n21 * n34\n    \t\t\t\t + n13 * n24 * n31\n    \t\t\t\t - n14 * n23 * n31\n    \t\t\t) +\n    \t\t\tn43 * (\n    \t\t\t\t+ n11 * n24 * n32\n    \t\t\t\t - n11 * n22 * n34\n    \t\t\t\t - n14 * n21 * n32\n    \t\t\t\t + n12 * n21 * n34\n    \t\t\t\t + n14 * n22 * n31\n    \t\t\t\t - n12 * n24 * n31\n    \t\t\t) +\n    \t\t\tn44 * (\n    \t\t\t\t- n13 * n22 * n31\n    \t\t\t\t - n11 * n23 * n32\n    \t\t\t\t + n11 * n22 * n33\n    \t\t\t\t + n13 * n21 * n32\n    \t\t\t\t - n12 * n21 * n33\n    \t\t\t\t + n12 * n23 * n31\n    \t\t\t)\n\n    \t\t);\n\n    \t},\n\n    \ttranspose: function () {\n\n    \t\tvar te = this.elements;\n    \t\tvar tmp;\n\n    \t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n    \t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n    \t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n    \t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n    \t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n    \t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n    \t\treturn this;\n\n    \t},\n\n    \tflattenToArrayOffset: function ( array, offset ) {\n\n    \t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n    \t\t\t\t\"- just use .toArray instead.\" );\n\n    \t\treturn this.toArray( array, offset );\n\n    \t},\n\n    \tgetPosition: function () {\n\n    \t\tvar v1;\n\n    \t\treturn function getPosition() {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n    \t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\n    \t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n    \t\t};\n\n    \t}(),\n\n    \tsetPosition: function ( v ) {\n\n    \t\tvar te = this.elements;\n\n    \t\tte[ 12 ] = v.x;\n    \t\tte[ 13 ] = v.y;\n    \t\tte[ 14 ] = v.z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetInverse: function ( m, throwOnDegenerate ) {\n\n    \t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    \t\tvar te = this.elements,\n    \t\t\tme = m.elements,\n\n    \t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n    \t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n    \t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n    \t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n    \t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n    \t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n    \t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n    \t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n    \t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n    \t\tif ( det === 0 ) {\n\n    \t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n    \t\t\tif ( throwOnDegenerate === true ) {\n\n    \t\t\t\tthrow new Error( msg );\n\n    \t\t\t} else {\n\n    \t\t\t\tconsole.warn( msg );\n\n    \t\t\t}\n\n    \t\t\treturn this.identity();\n\n    \t\t}\n\n    \t\tvar detInv = 1 / det;\n\n    \t\tte[ 0 ] = t11 * detInv;\n    \t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n    \t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n    \t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n    \t\tte[ 4 ] = t12 * detInv;\n    \t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n    \t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n    \t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n    \t\tte[ 8 ] = t13 * detInv;\n    \t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n    \t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n    \t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n    \t\tte[ 12 ] = t14 * detInv;\n    \t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n    \t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n    \t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n    \t\treturn this;\n\n    \t},\n\n    \tscale: function ( v ) {\n\n    \t\tvar te = this.elements;\n    \t\tvar x = v.x, y = v.y, z = v.z;\n\n    \t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n    \t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n    \t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n    \t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetMaxScaleOnAxis: function () {\n\n    \t\tvar te = this.elements;\n\n    \t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n    \t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n    \t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n    \t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n    \t},\n\n    \tmakeTranslation: function ( x, y, z ) {\n\n    \t\tthis.set(\n\n    \t\t\t1, 0, 0, x,\n    \t\t\t0, 1, 0, y,\n    \t\t\t0, 0, 1, z,\n    \t\t\t0, 0, 0, 1\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakeRotationX: function ( theta ) {\n\n    \t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n    \t\tthis.set(\n\n    \t\t\t1, 0,  0, 0,\n    \t\t\t0, c, - s, 0,\n    \t\t\t0, s,  c, 0,\n    \t\t\t0, 0,  0, 1\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakeRotationY: function ( theta ) {\n\n    \t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n    \t\tthis.set(\n\n    \t\t\t c, 0, s, 0,\n    \t\t\t 0, 1, 0, 0,\n    \t\t\t- s, 0, c, 0,\n    \t\t\t 0, 0, 0, 1\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakeRotationZ: function ( theta ) {\n\n    \t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n    \t\tthis.set(\n\n    \t\t\tc, - s, 0, 0,\n    \t\t\ts,  c, 0, 0,\n    \t\t\t0,  0, 1, 0,\n    \t\t\t0,  0, 0, 1\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakeRotationAxis: function ( axis, angle ) {\n\n    \t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n    \t\tvar c = Math.cos( angle );\n    \t\tvar s = Math.sin( angle );\n    \t\tvar t = 1 - c;\n    \t\tvar x = axis.x, y = axis.y, z = axis.z;\n    \t\tvar tx = t * x, ty = t * y;\n\n    \t\tthis.set(\n\n    \t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n    \t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n    \t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n    \t\t\t0, 0, 0, 1\n\n    \t\t);\n\n    \t\t return this;\n\n    \t},\n\n    \tmakeScale: function ( x, y, z ) {\n\n    \t\tthis.set(\n\n    \t\t\tx, 0, 0, 0,\n    \t\t\t0, y, 0, 0,\n    \t\t\t0, 0, z, 0,\n    \t\t\t0, 0, 0, 1\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tcompose: function ( position, quaternion, scale ) {\n\n    \t\tthis.makeRotationFromQuaternion( quaternion );\n    \t\tthis.scale( scale );\n    \t\tthis.setPosition( position );\n\n    \t\treturn this;\n\n    \t},\n\n    \tdecompose: function () {\n\n    \t\tvar vector, matrix;\n\n    \t\treturn function decompose( position, quaternion, scale ) {\n\n    \t\t\tif ( vector === undefined ) {\n\n    \t\t\t\tvector = new Vector3();\n    \t\t\t\tmatrix = new Matrix4();\n\n    \t\t\t}\n\n    \t\t\tvar te = this.elements;\n\n    \t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n    \t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n    \t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n    \t\t\t// if determine is negative, we need to invert one scale\n    \t\t\tvar det = this.determinant();\n    \t\t\tif ( det < 0 ) {\n\n    \t\t\t\tsx = - sx;\n\n    \t\t\t}\n\n    \t\t\tposition.x = te[ 12 ];\n    \t\t\tposition.y = te[ 13 ];\n    \t\t\tposition.z = te[ 14 ];\n\n    \t\t\t// scale the rotation part\n\n    \t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\n\n    \t\t\tvar invSX = 1 / sx;\n    \t\t\tvar invSY = 1 / sy;\n    \t\t\tvar invSZ = 1 / sz;\n\n    \t\t\tmatrix.elements[ 0 ] *= invSX;\n    \t\t\tmatrix.elements[ 1 ] *= invSX;\n    \t\t\tmatrix.elements[ 2 ] *= invSX;\n\n    \t\t\tmatrix.elements[ 4 ] *= invSY;\n    \t\t\tmatrix.elements[ 5 ] *= invSY;\n    \t\t\tmatrix.elements[ 6 ] *= invSY;\n\n    \t\t\tmatrix.elements[ 8 ] *= invSZ;\n    \t\t\tmatrix.elements[ 9 ] *= invSZ;\n    \t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n    \t\t\tquaternion.setFromRotationMatrix( matrix );\n\n    \t\t\tscale.x = sx;\n    \t\t\tscale.y = sy;\n    \t\t\tscale.z = sz;\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n    \t\tvar te = this.elements;\n    \t\tvar x = 2 * near / ( right - left );\n    \t\tvar y = 2 * near / ( top - bottom );\n\n    \t\tvar a = ( right + left ) / ( right - left );\n    \t\tvar b = ( top + bottom ) / ( top - bottom );\n    \t\tvar c = - ( far + near ) / ( far - near );\n    \t\tvar d = - 2 * far * near / ( far - near );\n\n    \t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n    \t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n    \t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n    \t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakePerspective: function ( fov, aspect, near, far ) {\n\n    \t\tvar ymax = near * Math.tan( exports.Math.DEG2RAD * fov * 0.5 );\n    \t\tvar ymin = - ymax;\n    \t\tvar xmin = ymin * aspect;\n    \t\tvar xmax = ymax * aspect;\n\n    \t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\n\n    \t},\n\n    \tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n    \t\tvar te = this.elements;\n    \t\tvar w = 1.0 / ( right - left );\n    \t\tvar h = 1.0 / ( top - bottom );\n    \t\tvar p = 1.0 / ( far - near );\n\n    \t\tvar x = ( right + left ) * w;\n    \t\tvar y = ( top + bottom ) * h;\n    \t\tvar z = ( far + near ) * p;\n\n    \t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n    \t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n    \t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n    \t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( matrix ) {\n\n    \t\tvar te = this.elements;\n    \t\tvar me = matrix.elements;\n\n    \t\tfor ( var i = 0; i < 16; i ++ ) {\n\n    \t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n    \t\t}\n\n    \t\treturn true;\n\n    \t},\n\n    \tfromArray: function ( array, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tfor( var i = 0; i < 16; i ++ ) {\n\n    \t\t\tthis.elements[ i ] = array[ i + offset ];\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoArray: function ( array, offset ) {\n\n    \t\tif ( array === undefined ) array = [];\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tvar te = this.elements;\n\n    \t\tarray[ offset ] = te[ 0 ];\n    \t\tarray[ offset + 1 ] = te[ 1 ];\n    \t\tarray[ offset + 2 ] = te[ 2 ];\n    \t\tarray[ offset + 3 ] = te[ 3 ];\n\n    \t\tarray[ offset + 4 ] = te[ 4 ];\n    \t\tarray[ offset + 5 ] = te[ 5 ];\n    \t\tarray[ offset + 6 ] = te[ 6 ];\n    \t\tarray[ offset + 7 ] = te[ 7 ];\n\n    \t\tarray[ offset + 8 ]  = te[ 8 ];\n    \t\tarray[ offset + 9 ]  = te[ 9 ];\n    \t\tarray[ offset + 10 ] = te[ 10 ];\n    \t\tarray[ offset + 11 ] = te[ 11 ];\n\n    \t\tarray[ offset + 12 ] = te[ 12 ];\n    \t\tarray[ offset + 13 ] = te[ 13 ];\n    \t\tarray[ offset + 14 ] = te[ 14 ];\n    \t\tarray[ offset + 15 ] = te[ 15 ];\n\n    \t\treturn array;\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n    \timages = images !== undefined ? images : [];\n    \tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n    \tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n    \tthis.flipY = false;\n\n    }\n\n    CubeTexture.prototype = Object.create( Texture.prototype );\n    CubeTexture.prototype.constructor = CubeTexture;\n\n    CubeTexture.prototype.isCubeTexture = true;\n\n    Object.defineProperty( CubeTexture.prototype, 'images', {\n\n    \tget: function () {\n\n    \t\treturn this.image;\n\n    \t},\n\n    \tset: function ( value ) {\n\n    \t\tthis.image = value;\n\n    \t}\n\n    } );\n\n    var emptyTexture = new Texture();\n    var emptyCubeTexture = new CubeTexture();\n\n    // --- Base for inner nodes (including the root) ---\n\n    function UniformContainer() {\n\n    \tthis.seq = [];\n    \tthis.map = {};\n\n    }\n\n    // --- Utilities ---\n\n    // Array Caches (provide typed arrays for temporary by size)\n\n    var arrayCacheF32 = [];\n    var arrayCacheI32 = [];\n\n    // Flattening for arrays of vectors and matrices\n\n    function flatten( array, nBlocks, blockSize ) {\n\n    \tvar firstElem = array[ 0 ];\n\n    \tif ( firstElem <= 0 || firstElem > 0 ) return array;\n    \t// unoptimized: ! isNaN( firstElem )\n    \t// see http://jacksondunstan.com/articles/983\n\n    \tvar n = nBlocks * blockSize,\n    \t\tr = arrayCacheF32[ n ];\n\n    \tif ( r === undefined ) {\n\n    \t\tr = new Float32Array( n );\n    \t\tarrayCacheF32[ n ] = r;\n\n    \t}\n\n    \tif ( nBlocks !== 0 ) {\n\n    \t\tfirstElem.toArray( r, 0 );\n\n    \t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n    \t\t\toffset += blockSize;\n    \t\t\tarray[ i ].toArray( r, offset );\n\n    \t\t}\n\n    \t}\n\n    \treturn r;\n\n    }\n\n    // Texture unit allocation\n\n    function allocTexUnits( renderer, n ) {\n\n    \tvar r = arrayCacheI32[ n ];\n\n    \tif ( r === undefined ) {\n\n    \t\tr = new Int32Array( n );\n    \t\tarrayCacheI32[ n ] = r;\n\n    \t}\n\n    \tfor ( var i = 0; i !== n; ++ i )\n    \t\tr[ i ] = renderer.allocTextureUnit();\n\n    \treturn r;\n\n    }\n\n    // --- Setters ---\n\n    // Note: Defining these methods externally, because they come in a bunch\n    // and this way their names minify.\n\n    // Single scalar\n\n    function setValue1f( gl, v ) { gl.uniform1f( this.addr, v ); }\n    function setValue1i( gl, v ) { gl.uniform1i( this.addr, v ); }\n\n    // Single float vector (from flat array or THREE.VectorN)\n\n    function setValue2fv( gl, v ) {\n\n    \tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\n    \telse gl.uniform2f( this.addr, v.x, v.y );\n\n    }\n\n    function setValue3fv( gl, v ) {\n\n    \tif ( v.x !== undefined )\n    \t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n    \telse if ( v.r !== undefined )\n    \t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n    \telse\n    \t\tgl.uniform3fv( this.addr, v );\n\n    }\n\n    function setValue4fv( gl, v ) {\n\n    \tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\n    \telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n    }\n\n    // Single matrix (from flat array or MatrixN)\n\n    function setValue2fm( gl, v ) {\n\n    \tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n    }\n\n    function setValue3fm( gl, v ) {\n\n    \tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\n\n    }\n\n    function setValue4fm( gl, v ) {\n\n    \tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\n\n    }\n\n    // Single texture (2D / Cube)\n\n    function setValueT1( gl, v, renderer ) {\n\n    \tvar unit = renderer.allocTextureUnit();\n    \tgl.uniform1i( this.addr, unit );\n    \trenderer.setTexture2D( v || emptyTexture, unit );\n\n    }\n\n    function setValueT6( gl, v, renderer ) {\n\n    \tvar unit = renderer.allocTextureUnit();\n    \tgl.uniform1i( this.addr, unit );\n    \trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n    }\n\n    // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n    function setValue2iv( gl, v ) { gl.uniform2iv( this.addr, v ); }\n    function setValue3iv( gl, v ) { gl.uniform3iv( this.addr, v ); }\n    function setValue4iv( gl, v ) { gl.uniform4iv( this.addr, v ); }\n\n    // Helper to pick the right setter for the singular case\n\n    function getSingularSetter( type ) {\n\n    \tswitch ( type ) {\n\n    \t\tcase 0x1406: return setValue1f; // FLOAT\n    \t\tcase 0x8b50: return setValue2fv; // _VEC2\n    \t\tcase 0x8b51: return setValue3fv; // _VEC3\n    \t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n    \t\tcase 0x8b5a: return setValue2fm; // _MAT2\n    \t\tcase 0x8b5b: return setValue3fm; // _MAT3\n    \t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n    \t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\n    \t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n    \t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n    \t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n    \t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n    \t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n    \t}\n\n    }\n\n    // Array of scalars\n\n    function setValue1fv( gl, v ) { gl.uniform1fv( this.addr, v ); }\n    function setValue1iv( gl, v ) { gl.uniform1iv( this.addr, v ); }\n\n    // Array of vectors (flat or from THREE classes)\n\n    function setValueV2a( gl, v ) {\n\n    \tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n    }\n\n    function setValueV3a( gl, v ) {\n\n    \tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n    }\n\n    function setValueV4a( gl, v ) {\n\n    \tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n    }\n\n    // Array of matrices (flat or from THREE clases)\n\n    function setValueM2a( gl, v ) {\n\n    \tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n    }\n\n    function setValueM3a( gl, v ) {\n\n    \tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n    }\n\n    function setValueM4a( gl, v ) {\n\n    \tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n    }\n\n    // Array of textures (2D / Cube)\n\n    function setValueT1a( gl, v, renderer ) {\n\n    \tvar n = v.length,\n    \t\tunits = allocTexUnits( renderer, n );\n\n    \tgl.uniform1iv( this.addr, units );\n\n    \tfor ( var i = 0; i !== n; ++ i ) {\n\n    \t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n    \t}\n\n    }\n\n    function setValueT6a( gl, v, renderer ) {\n\n    \tvar n = v.length,\n    \t\tunits = allocTexUnits( renderer, n );\n\n    \tgl.uniform1iv( this.addr, units );\n\n    \tfor ( var i = 0; i !== n; ++ i ) {\n\n    \t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n    \t}\n\n    }\n\n    // Helper to pick the right setter for a pure (bottom-level) array\n\n    function getPureArraySetter( type ) {\n\n    \tswitch ( type ) {\n\n    \t\tcase 0x1406: return setValue1fv; // FLOAT\n    \t\tcase 0x8b50: return setValueV2a; // _VEC2\n    \t\tcase 0x8b51: return setValueV3a; // _VEC3\n    \t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n    \t\tcase 0x8b5a: return setValueM2a; // _MAT2\n    \t\tcase 0x8b5b: return setValueM3a; // _MAT3\n    \t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n    \t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n    \t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n    \t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n    \t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n    \t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n    \t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n    \t}\n\n    }\n\n    // --- Uniform Classes ---\n\n    function SingleUniform( id, activeInfo, addr ) {\n\n    \tthis.id = id;\n    \tthis.addr = addr;\n    \tthis.setValue = getSingularSetter( activeInfo.type );\n\n    \t// this.path = activeInfo.name; // DEBUG\n\n    }\n\n    function PureArrayUniform( id, activeInfo, addr ) {\n\n    \tthis.id = id;\n    \tthis.addr = addr;\n    \tthis.size = activeInfo.size;\n    \tthis.setValue = getPureArraySetter( activeInfo.type );\n\n    \t// this.path = activeInfo.name; // DEBUG\n\n    }\n\n    function StructuredUniform( id ) {\n\n    \tthis.id = id;\n\n    \tUniformContainer.call( this ); // mix-in\n\n    }\n\n    StructuredUniform.prototype.setValue = function( gl, value ) {\n\n    \t// Note: Don't need an extra 'renderer' parameter, since samplers\n    \t// are not allowed in structured uniforms.\n\n    \tvar seq = this.seq;\n\n    \tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n    \t\tvar u = seq[ i ];\n    \t\tu.setValue( gl, value[ u.id ] );\n\n    \t}\n\n    };\n\n    // --- Top-level ---\n\n    // Parser - builds up the property tree from the path strings\n\n    var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n    // extracts\n    // \t- the identifier (member name or array index)\n    //  - followed by an optional right bracket (found when array index)\n    //  - followed by an optional left bracket or dot (type of subscript)\n    //\n    // Note: These portions can be read in a non-overlapping fashion and\n    // allow straightforward parsing of the hierarchy that WebGL encodes\n    // in the uniform names.\n\n    function addUniform( container, uniformObject ) {\n\n    \tcontainer.seq.push( uniformObject );\n    \tcontainer.map[ uniformObject.id ] = uniformObject;\n\n    }\n\n    function parseUniform( activeInfo, addr, container ) {\n\n    \tvar path = activeInfo.name,\n    \t\tpathLength = path.length;\n\n    \t// reset RegExp object, because of the early exit of a previous run\n    \tRePathPart.lastIndex = 0;\n\n    \tfor (; ;) {\n\n    \t\tvar match = RePathPart.exec( path ),\n    \t\t\tmatchEnd = RePathPart.lastIndex,\n\n    \t\t\tid = match[ 1 ],\n    \t\t\tidIsIndex = match[ 2 ] === ']',\n    \t\t\tsubscript = match[ 3 ];\n\n    \t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n    \t\tif ( subscript === undefined ||\n    \t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\n    \t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n    \t\t\taddUniform( container, subscript === undefined ?\n    \t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n    \t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n    \t\t\tbreak;\n\n    \t\t} else {\n    \t\t\t// step into inner node / create it in case it doesn't exist\n\n    \t\t\tvar map = container.map,\n    \t\t\t\tnext = map[ id ];\n\n    \t\t\tif ( next === undefined ) {\n\n    \t\t\t\tnext = new StructuredUniform( id );\n    \t\t\t\taddUniform( container, next );\n\n    \t\t\t}\n\n    \t\t\tcontainer = next;\n\n    \t\t}\n\n    \t}\n\n    }\n\n    // Root Container\n\n    function WebGLUniforms( gl, program, renderer ) {\n\n    \tUniformContainer.call( this );\n\n    \tthis.renderer = renderer;\n\n    \tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n    \tfor ( var i = 0; i !== n; ++ i ) {\n\n    \t\tvar info = gl.getActiveUniform( program, i ),\n    \t\t\tpath = info.name,\n    \t\t\taddr = gl.getUniformLocation( program, path );\n\n    \t\tparseUniform( info, addr, this );\n\n    \t}\n\n    }\n\n    WebGLUniforms.prototype.setValue = function( gl, name, value ) {\n\n    \tvar u = this.map[ name ];\n\n    \tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n    };\n\n    WebGLUniforms.prototype.set = function( gl, object, name ) {\n\n    \tvar u = this.map[ name ];\n\n    \tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\n\n    };\n\n    WebGLUniforms.prototype.setOptional = function( gl, object, name ) {\n\n    \tvar v = object[ name ];\n\n    \tif ( v !== undefined ) this.setValue( gl, name, v );\n\n    };\n\n\n    // Static interface\n\n    WebGLUniforms.upload = function( gl, seq, values, renderer ) {\n\n    \tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n    \t\tvar u = seq[ i ],\n    \t\t\tv = values[ u.id ];\n\n    \t\tif ( v.needsUpdate !== false ) {\n    \t\t\t// note: always updating when .needsUpdate is undefined\n\n    \t\t\tu.setValue( gl, v.value, renderer );\n\n    \t\t}\n\n    \t}\n\n    };\n\n    WebGLUniforms.seqWithValue = function( seq, values ) {\n\n    \tvar r = [];\n\n    \tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n    \t\tvar u = seq[ i ];\n    \t\tif ( u.id in values ) r.push( u );\n\n    \t}\n\n    \treturn r;\n\n    };\n\n    WebGLUniforms.splitDynamic = function( seq, values ) {\n\n    \tvar r = null,\n    \t\tn = seq.length,\n    \t\tw = 0;\n\n    \tfor ( var i = 0; i !== n; ++ i ) {\n\n    \t\tvar u = seq[ i ],\n    \t\t\tv = values[ u.id ];\n\n    \t\tif ( v && v.dynamic === true ) {\n\n    \t\t\tif ( r === null ) r = [];\n    \t\t\tr.push( u );\n\n    \t\t} else {\n\n    \t\t\t// in-place compact 'seq', removing the matches\n    \t\t\tif ( w < i ) seq[ w ] = u;\n    \t\t\t++ w;\n\n    \t\t}\n\n    \t}\n\n    \tif ( w < n ) seq.length = w;\n\n    \treturn r;\n\n    };\n\n    WebGLUniforms.evalDynamic = function( seq, values, object, material, camera ) {\n\n    \tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n    \t\tvar v = values[ seq[ i ].id ],\n    \t\t\tf = v.onUpdateCallback;\n\n    \t\tif ( f !== undefined ) f.call( v, object, material, camera );\n\n    \t}\n\n    };\n\n    /**\n     * Uniform Utilities\n     */\n\n    exports.UniformsUtils = {\n\n    \tmerge: function ( uniforms ) {\n\n    \t\tvar merged = {};\n\n    \t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n    \t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n    \t\t\tfor ( var p in tmp ) {\n\n    \t\t\t\tmerged[ p ] = tmp[ p ];\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn merged;\n\n    \t},\n\n    \tclone: function ( uniforms_src ) {\n\n    \t\tvar uniforms_dst = {};\n\n    \t\tfor ( var u in uniforms_src ) {\n\n    \t\t\tuniforms_dst[ u ] = {};\n\n    \t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n    \t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n    \t\t\t\tif ( (parameter_src && parameter_src.isColor) ||\n    \t\t\t\t\t (parameter_src && parameter_src.isVector2) ||\n    \t\t\t\t\t (parameter_src && parameter_src.isVector3) ||\n    \t\t\t\t\t (parameter_src && parameter_src.isVector4) ||\n    \t\t\t\t\t (parameter_src && parameter_src.isMatrix3) ||\n    \t\t\t\t\t (parameter_src && parameter_src.isMatrix4) ||\n    \t\t\t\t\t (parameter_src && parameter_src.isTexture) ) {\n\n    \t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n    \t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n    \t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn uniforms_dst;\n\n    \t}\n\n    };\n\n    var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\n    var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\n    var alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\n    var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\n    var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n    var begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\n    var beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\n    var bsdfs = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\n    var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = dFdx( surf_pos );\\n\\t\\tvec3 vSigmaY = dFdy( surf_pos );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\n    var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n#endif\\n\";\n\n    var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\n    var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\n    var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\n    var color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n    var color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\n    var color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n    var color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n    var common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\n\n    var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\n    var defaultnormal_vertex = \"#ifdef FLIP_SIDED\\n\\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\n\n    var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\n    var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\n    var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\n    var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\n    var encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\n    var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\n    var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\n    var envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\n    var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\n    var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\n    var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\t#else\\n\\t\\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\t#endif\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\n    var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n    var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\n    var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n    var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n    var lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\\t\\t\\tdirectLight.color = pointLight.color;\\n\\t\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\t#include <normal_flip>\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\t#include <normal_flip>\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\\t\\t\\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\n    var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\n    var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\n    var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\n    var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\n    var lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t \\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\t\\t\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\n    var logdepthbuf_fragment = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\n\n    var logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\n    var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\n    var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\n    var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\n    var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n    var map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\n    var map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform vec4 offsetRepeat;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\n    var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\n\n    var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n    var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\n    var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n    var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\n    var normal_flip = \"#ifdef DOUBLE_SIDED\\n\\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n#else\\n\\tfloat flipNormal = 1.0;\\n#endif\\n\";\n\n    var normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal ) * flipNormal;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\n    var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\n    var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\n    var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\n    var project_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\n    var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\n\n    var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n    var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\n    var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\n    var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\n    var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\n    var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n    var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureWidth;\\n\\t\\tuniform int boneTextureHeight;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureWidth ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureWidth );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\n    var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\n\n    var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\n    var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n    var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n    var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\n    var tonemapping_pars_fragment = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\n    var uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n    var uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform vec4 offsetRepeat;\\n#endif\\n\";\n\n    var uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\n\n    var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n    var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n    var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n    var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\t#ifdef USE_SKINNING\\n\\t\\tvec4 worldPosition = modelMatrix * skinned;\\n\\t#else\\n\\t\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\t#endif\\n#endif\\n\";\n\n    var cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\n    var cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n    var depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\n    var depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n    var distanceRGBA_frag = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\n\n    var distanceRGBA_vert = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <skinbase_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition;\\n}\\n\";\n\n    var equirect_frag = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\n    var equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\n    var linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n    var linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n    var meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight;\\n\\treflectedLight.directDiffuse = vec3( 0.0 );\\n\\treflectedLight.directSpecular = vec3( 0.0 );\\n\\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n    var meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n}\\n\";\n\n    var meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <normal_flip>\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n    var meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n    var meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n    var meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n    var meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_flip>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n    var meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n    var normal_frag = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\\t#include <logdepthbuf_fragment>\\n}\\n\";\n\n    var normal_vert = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvNormal = normalize( normalMatrix * normal );\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\n    var points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\n    var points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n    var shadow_frag = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\n\n    var shadow_vert = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n}\\n\";\n\n    var ShaderChunk = {\n    \talphamap_fragment: alphamap_fragment,\n    \talphamap_pars_fragment: alphamap_pars_fragment,\n    \talphatest_fragment: alphatest_fragment,\n    \taomap_fragment: aomap_fragment,\n    \taomap_pars_fragment: aomap_pars_fragment,\n    \tbegin_vertex: begin_vertex,\n    \tbeginnormal_vertex: beginnormal_vertex,\n    \tbsdfs: bsdfs,\n    \tbumpmap_pars_fragment: bumpmap_pars_fragment,\n    \tclipping_planes_fragment: clipping_planes_fragment,\n    \tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n    \tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n    \tclipping_planes_vertex: clipping_planes_vertex,\n    \tcolor_fragment: color_fragment,\n    \tcolor_pars_fragment: color_pars_fragment,\n    \tcolor_pars_vertex: color_pars_vertex,\n    \tcolor_vertex: color_vertex,\n    \tcommon: common,\n    \tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n    \tdefaultnormal_vertex: defaultnormal_vertex,\n    \tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n    \tdisplacementmap_vertex: displacementmap_vertex,\n    \temissivemap_fragment: emissivemap_fragment,\n    \temissivemap_pars_fragment: emissivemap_pars_fragment,\n    \tencodings_fragment: encodings_fragment,\n    \tencodings_pars_fragment: encodings_pars_fragment,\n    \tenvmap_fragment: envmap_fragment,\n    \tenvmap_pars_fragment: envmap_pars_fragment,\n    \tenvmap_pars_vertex: envmap_pars_vertex,\n    \tenvmap_vertex: envmap_vertex,\n    \tfog_fragment: fog_fragment,\n    \tfog_pars_fragment: fog_pars_fragment,\n    \tlightmap_fragment: lightmap_fragment,\n    \tlightmap_pars_fragment: lightmap_pars_fragment,\n    \tlights_lambert_vertex: lights_lambert_vertex,\n    \tlights_pars: lights_pars,\n    \tlights_phong_fragment: lights_phong_fragment,\n    \tlights_phong_pars_fragment: lights_phong_pars_fragment,\n    \tlights_physical_fragment: lights_physical_fragment,\n    \tlights_physical_pars_fragment: lights_physical_pars_fragment,\n    \tlights_template: lights_template,\n    \tlogdepthbuf_fragment: logdepthbuf_fragment,\n    \tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n    \tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n    \tlogdepthbuf_vertex: logdepthbuf_vertex,\n    \tmap_fragment: map_fragment,\n    \tmap_pars_fragment: map_pars_fragment,\n    \tmap_particle_fragment: map_particle_fragment,\n    \tmap_particle_pars_fragment: map_particle_pars_fragment,\n    \tmetalnessmap_fragment: metalnessmap_fragment,\n    \tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n    \tmorphnormal_vertex: morphnormal_vertex,\n    \tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n    \tmorphtarget_vertex: morphtarget_vertex,\n    \tnormal_flip: normal_flip,\n    \tnormal_fragment: normal_fragment,\n    \tnormalmap_pars_fragment: normalmap_pars_fragment,\n    \tpacking: packing,\n    \tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n    \tproject_vertex: project_vertex,\n    \troughnessmap_fragment: roughnessmap_fragment,\n    \troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n    \tshadowmap_pars_fragment: shadowmap_pars_fragment,\n    \tshadowmap_pars_vertex: shadowmap_pars_vertex,\n    \tshadowmap_vertex: shadowmap_vertex,\n    \tshadowmask_pars_fragment: shadowmask_pars_fragment,\n    \tskinbase_vertex: skinbase_vertex,\n    \tskinning_pars_vertex: skinning_pars_vertex,\n    \tskinning_vertex: skinning_vertex,\n    \tskinnormal_vertex: skinnormal_vertex,\n    \tspecularmap_fragment: specularmap_fragment,\n    \tspecularmap_pars_fragment: specularmap_pars_fragment,\n    \ttonemapping_fragment: tonemapping_fragment,\n    \ttonemapping_pars_fragment: tonemapping_pars_fragment,\n    \tuv_pars_fragment: uv_pars_fragment,\n    \tuv_pars_vertex: uv_pars_vertex,\n    \tuv_vertex: uv_vertex,\n    \tuv2_pars_fragment: uv2_pars_fragment,\n    \tuv2_pars_vertex: uv2_pars_vertex,\n    \tuv2_vertex: uv2_vertex,\n    \tworldpos_vertex: worldpos_vertex,\n\n    \tcube_frag: cube_frag,\n    \tcube_vert: cube_vert,\n    \tdepth_frag: depth_frag,\n    \tdepth_vert: depth_vert,\n    \tdistanceRGBA_frag: distanceRGBA_frag,\n    \tdistanceRGBA_vert: distanceRGBA_vert,\n    \tequirect_frag: equirect_frag,\n    \tequirect_vert: equirect_vert,\n    \tlinedashed_frag: linedashed_frag,\n    \tlinedashed_vert: linedashed_vert,\n    \tmeshbasic_frag: meshbasic_frag,\n    \tmeshbasic_vert: meshbasic_vert,\n    \tmeshlambert_frag: meshlambert_frag,\n    \tmeshlambert_vert: meshlambert_vert,\n    \tmeshphong_frag: meshphong_frag,\n    \tmeshphong_vert: meshphong_vert,\n    \tmeshphysical_frag: meshphysical_frag,\n    \tmeshphysical_vert: meshphysical_vert,\n    \tnormal_frag: normal_frag,\n    \tnormal_vert: normal_vert,\n    \tpoints_frag: points_frag,\n    \tpoints_vert: points_vert,\n    \tshadow_frag: shadow_frag,\n    \tshadow_vert: shadow_vert\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Color( r, g, b ) {\n\n    \tif ( g === undefined && b === undefined ) {\n\n    \t\t// r is THREE.Color, hex or string\n    \t\treturn this.set( r );\n\n    \t}\n\n    \treturn this.setRGB( r, g, b );\n\n    }\n\n    Color.prototype = {\n\n    \tconstructor: Color,\n\n    \tisColor: true,\n\n    \tr: 1, g: 1, b: 1,\n\n    \tset: function ( value ) {\n\n    \t\tif ( (value && value.isColor) ) {\n\n    \t\t\tthis.copy( value );\n\n    \t\t} else if ( typeof value === 'number' ) {\n\n    \t\t\tthis.setHex( value );\n\n    \t\t} else if ( typeof value === 'string' ) {\n\n    \t\t\tthis.setStyle( value );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetScalar: function ( scalar ) {\n\n    \t\tthis.r = scalar;\n    \t\tthis.g = scalar;\n    \t\tthis.b = scalar;\n\n    \t},\n\n    \tsetHex: function ( hex ) {\n\n    \t\thex = Math.floor( hex );\n\n    \t\tthis.r = ( hex >> 16 & 255 ) / 255;\n    \t\tthis.g = ( hex >> 8 & 255 ) / 255;\n    \t\tthis.b = ( hex & 255 ) / 255;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetRGB: function ( r, g, b ) {\n\n    \t\tthis.r = r;\n    \t\tthis.g = g;\n    \t\tthis.b = b;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetHSL: function () {\n\n    \t\tfunction hue2rgb( p, q, t ) {\n\n    \t\t\tif ( t < 0 ) t += 1;\n    \t\t\tif ( t > 1 ) t -= 1;\n    \t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n    \t\t\tif ( t < 1 / 2 ) return q;\n    \t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n    \t\t\treturn p;\n\n    \t\t}\n\n    \t\treturn function setHSL( h, s, l ) {\n\n    \t\t\t// h,s,l ranges are in 0.0 - 1.0\n    \t\t\th = exports.Math.euclideanModulo( h, 1 );\n    \t\t\ts = exports.Math.clamp( s, 0, 1 );\n    \t\t\tl = exports.Math.clamp( l, 0, 1 );\n\n    \t\t\tif ( s === 0 ) {\n\n    \t\t\t\tthis.r = this.g = this.b = l;\n\n    \t\t\t} else {\n\n    \t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n    \t\t\t\tvar q = ( 2 * l ) - p;\n\n    \t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n    \t\t\t\tthis.g = hue2rgb( q, p, h );\n    \t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n    \t\t\t}\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tsetStyle: function ( style ) {\n\n    \t\tfunction handleAlpha( string ) {\n\n    \t\t\tif ( string === undefined ) return;\n\n    \t\t\tif ( parseFloat( string ) < 1 ) {\n\n    \t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n    \t\t\t}\n\n    \t\t}\n\n\n    \t\tvar m;\n\n    \t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n    \t\t\t// rgb / hsl\n\n    \t\t\tvar color;\n    \t\t\tvar name = m[ 1 ];\n    \t\t\tvar components = m[ 2 ];\n\n    \t\t\tswitch ( name ) {\n\n    \t\t\t\tcase 'rgb':\n    \t\t\t\tcase 'rgba':\n\n    \t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n    \t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n    \t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n    \t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n    \t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n    \t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n    \t\t\t\t\t\treturn this;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n    \t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n    \t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n    \t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n    \t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n    \t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n    \t\t\t\t\t\treturn this;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'hsl':\n    \t\t\t\tcase 'hsla':\n\n    \t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n    \t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n    \t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n    \t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n    \t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n    \t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n    \t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n    \t\t\t// hex color\n\n    \t\t\tvar hex = m[ 1 ];\n    \t\t\tvar size = hex.length;\n\n    \t\t\tif ( size === 3 ) {\n\n    \t\t\t\t// #ff0\n    \t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n    \t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n    \t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n    \t\t\t\treturn this;\n\n    \t\t\t} else if ( size === 6 ) {\n\n    \t\t\t\t// #ff0000\n    \t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n    \t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n    \t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n    \t\t\t\treturn this;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( style && style.length > 0 ) {\n\n    \t\t\t// color keywords\n    \t\t\tvar hex = exports.ColorKeywords[ style ];\n\n    \t\t\tif ( hex !== undefined ) {\n\n    \t\t\t\t// red\n    \t\t\t\tthis.setHex( hex );\n\n    \t\t\t} else {\n\n    \t\t\t\t// unknown color\n    \t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this.r, this.g, this.b );\n\n    \t},\n\n    \tcopy: function ( color ) {\n\n    \t\tthis.r = color.r;\n    \t\tthis.g = color.g;\n    \t\tthis.b = color.b;\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n    \t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n    \t\tthis.r = Math.pow( color.r, gammaFactor );\n    \t\tthis.g = Math.pow( color.g, gammaFactor );\n    \t\tthis.b = Math.pow( color.b, gammaFactor );\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n    \t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n    \t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n    \t\tthis.r = Math.pow( color.r, safeInverse );\n    \t\tthis.g = Math.pow( color.g, safeInverse );\n    \t\tthis.b = Math.pow( color.b, safeInverse );\n\n    \t\treturn this;\n\n    \t},\n\n    \tconvertGammaToLinear: function () {\n\n    \t\tvar r = this.r, g = this.g, b = this.b;\n\n    \t\tthis.r = r * r;\n    \t\tthis.g = g * g;\n    \t\tthis.b = b * b;\n\n    \t\treturn this;\n\n    \t},\n\n    \tconvertLinearToGamma: function () {\n\n    \t\tthis.r = Math.sqrt( this.r );\n    \t\tthis.g = Math.sqrt( this.g );\n    \t\tthis.b = Math.sqrt( this.b );\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetHex: function () {\n\n    \t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n    \t},\n\n    \tgetHexString: function () {\n\n    \t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n    \t},\n\n    \tgetHSL: function ( optionalTarget ) {\n\n    \t\t// h,s,l ranges are in 0.0 - 1.0\n\n    \t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n    \t\tvar r = this.r, g = this.g, b = this.b;\n\n    \t\tvar max = Math.max( r, g, b );\n    \t\tvar min = Math.min( r, g, b );\n\n    \t\tvar hue, saturation;\n    \t\tvar lightness = ( min + max ) / 2.0;\n\n    \t\tif ( min === max ) {\n\n    \t\t\thue = 0;\n    \t\t\tsaturation = 0;\n\n    \t\t} else {\n\n    \t\t\tvar delta = max - min;\n\n    \t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n    \t\t\tswitch ( max ) {\n\n    \t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n    \t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n    \t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n    \t\t\t}\n\n    \t\t\thue /= 6;\n\n    \t\t}\n\n    \t\thsl.h = hue;\n    \t\thsl.s = saturation;\n    \t\thsl.l = lightness;\n\n    \t\treturn hsl;\n\n    \t},\n\n    \tgetStyle: function () {\n\n    \t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n    \t},\n\n    \toffsetHSL: function ( h, s, l ) {\n\n    \t\tvar hsl = this.getHSL();\n\n    \t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n    \t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n    \t\treturn this;\n\n    \t},\n\n    \tadd: function ( color ) {\n\n    \t\tthis.r += color.r;\n    \t\tthis.g += color.g;\n    \t\tthis.b += color.b;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddColors: function ( color1, color2 ) {\n\n    \t\tthis.r = color1.r + color2.r;\n    \t\tthis.g = color1.g + color2.g;\n    \t\tthis.b = color1.b + color2.b;\n\n    \t\treturn this;\n\n    \t},\n\n    \taddScalar: function ( s ) {\n\n    \t\tthis.r += s;\n    \t\tthis.g += s;\n    \t\tthis.b += s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsub: function( color ) {\n\n    \t\tthis.r = Math.max( 0, this.r - color.r );\n    \t\tthis.g = Math.max( 0, this.g - color.g );\n    \t\tthis.b = Math.max( 0, this.b - color.b );\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiply: function ( color ) {\n\n    \t\tthis.r *= color.r;\n    \t\tthis.g *= color.g;\n    \t\tthis.b *= color.b;\n\n    \t\treturn this;\n\n    \t},\n\n    \tmultiplyScalar: function ( s ) {\n\n    \t\tthis.r *= s;\n    \t\tthis.g *= s;\n    \t\tthis.b *= s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tlerp: function ( color, alpha ) {\n\n    \t\tthis.r += ( color.r - this.r ) * alpha;\n    \t\tthis.g += ( color.g - this.g ) * alpha;\n    \t\tthis.b += ( color.b - this.b ) * alpha;\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( c ) {\n\n    \t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n    \t},\n\n    \tfromArray: function ( array, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tthis.r = array[ offset ];\n    \t\tthis.g = array[ offset + 1 ];\n    \t\tthis.b = array[ offset + 2 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoArray: function ( array, offset ) {\n\n    \t\tif ( array === undefined ) array = [];\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tarray[ offset ] = this.r;\n    \t\tarray[ offset + 1 ] = this.g;\n    \t\tarray[ offset + 2 ] = this.b;\n\n    \t\treturn array;\n\n    \t},\n\n    \ttoJSON: function () {\n\n    \t\treturn this.getHex();\n\n    \t}\n\n    };\n\n    exports.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n    'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n    'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n    /**\n     * Uniforms library for shared webgl shaders\n     */\n\n    var UniformsLib = {\n\n    \tcommon: {\n\n    \t\tdiffuse: { value: new Color( 0xeeeeee ) },\n    \t\topacity: { value: 1.0 },\n\n    \t\tmap: { value: null },\n    \t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) },\n\n    \t\tspecularMap: { value: null },\n    \t\talphaMap: { value: null },\n\n    \t\tenvMap: { value: null },\n    \t\tflipEnvMap: { value: - 1 },\n    \t\treflectivity: { value: 1.0 },\n    \t\trefractionRatio: { value: 0.98 }\n\n    \t},\n\n    \taomap: {\n\n    \t\taoMap: { value: null },\n    \t\taoMapIntensity: { value: 1 }\n\n    \t},\n\n    \tlightmap: {\n\n    \t\tlightMap: { value: null },\n    \t\tlightMapIntensity: { value: 1 }\n\n    \t},\n\n    \temissivemap: {\n\n    \t\temissiveMap: { value: null }\n\n    \t},\n\n    \tbumpmap: {\n\n    \t\tbumpMap: { value: null },\n    \t\tbumpScale: { value: 1 }\n\n    \t},\n\n    \tnormalmap: {\n\n    \t\tnormalMap: { value: null },\n    \t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n    \t},\n\n    \tdisplacementmap: {\n\n    \t\tdisplacementMap: { value: null },\n    \t\tdisplacementScale: { value: 1 },\n    \t\tdisplacementBias: { value: 0 }\n\n    \t},\n\n    \troughnessmap: {\n\n    \t\troughnessMap: { value: null }\n\n    \t},\n\n    \tmetalnessmap: {\n\n    \t\tmetalnessMap: { value: null }\n\n    \t},\n\n    \tfog: {\n\n    \t\tfogDensity: { value: 0.00025 },\n    \t\tfogNear: { value: 1 },\n    \t\tfogFar: { value: 2000 },\n    \t\tfogColor: { value: new Color( 0xffffff ) }\n\n    \t},\n\n    \tlights: {\n\n    \t\tambientLightColor: { value: [] },\n\n    \t\tdirectionalLights: { value: [], properties: {\n    \t\t\tdirection: {},\n    \t\t\tcolor: {},\n\n    \t\t\tshadow: {},\n    \t\t\tshadowBias: {},\n    \t\t\tshadowRadius: {},\n    \t\t\tshadowMapSize: {}\n    \t\t} },\n\n    \t\tdirectionalShadowMap: { value: [] },\n    \t\tdirectionalShadowMatrix: { value: [] },\n\n    \t\tspotLights: { value: [], properties: {\n    \t\t\tcolor: {},\n    \t\t\tposition: {},\n    \t\t\tdirection: {},\n    \t\t\tdistance: {},\n    \t\t\tconeCos: {},\n    \t\t\tpenumbraCos: {},\n    \t\t\tdecay: {},\n\n    \t\t\tshadow: {},\n    \t\t\tshadowBias: {},\n    \t\t\tshadowRadius: {},\n    \t\t\tshadowMapSize: {}\n    \t\t} },\n\n    \t\tspotShadowMap: { value: [] },\n    \t\tspotShadowMatrix: { value: [] },\n\n    \t\tpointLights: { value: [], properties: {\n    \t\t\tcolor: {},\n    \t\t\tposition: {},\n    \t\t\tdecay: {},\n    \t\t\tdistance: {},\n\n    \t\t\tshadow: {},\n    \t\t\tshadowBias: {},\n    \t\t\tshadowRadius: {},\n    \t\t\tshadowMapSize: {}\n    \t\t} },\n\n    \t\tpointShadowMap: { value: [] },\n    \t\tpointShadowMatrix: { value: [] },\n\n    \t\themisphereLights: { value: [], properties: {\n    \t\t\tdirection: {},\n    \t\t\tskyColor: {},\n    \t\t\tgroundColor: {}\n    \t\t} }\n\n    \t},\n\n    \tpoints: {\n\n    \t\tdiffuse: { value: new Color( 0xeeeeee ) },\n    \t\topacity: { value: 1.0 },\n    \t\tsize: { value: 1.0 },\n    \t\tscale: { value: 1.0 },\n    \t\tmap: { value: null },\n    \t\toffsetRepeat: { value: new Vector4( 0, 0, 1, 1 ) }\n\n    \t}\n\n    };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author mrdoob / http://mrdoob.com/\n     * @author mikael emtinger / http://gomo.se/\n     */\n\n    var ShaderLib = {\n\n    \tbasic: {\n\n    \t\tuniforms: exports.UniformsUtils.merge( [\n\n    \t\t\tUniformsLib.common,\n    \t\t\tUniformsLib.aomap,\n    \t\t\tUniformsLib.fog\n\n    \t\t] ),\n\n    \t\tvertexShader: ShaderChunk.meshbasic_vert,\n    \t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n    \t},\n\n    \tlambert: {\n\n    \t\tuniforms: exports.UniformsUtils.merge( [\n\n    \t\t\tUniformsLib.common,\n    \t\t\tUniformsLib.aomap,\n    \t\t\tUniformsLib.lightmap,\n    \t\t\tUniformsLib.emissivemap,\n    \t\t\tUniformsLib.fog,\n    \t\t\tUniformsLib.lights,\n\n    \t\t\t{\n    \t\t\t\temissive : { value: new Color( 0x000000 ) }\n    \t\t\t}\n\n    \t\t] ),\n\n    \t\tvertexShader: ShaderChunk.meshlambert_vert,\n    \t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n    \t},\n\n    \tphong: {\n\n    \t\tuniforms: exports.UniformsUtils.merge( [\n\n    \t\t\tUniformsLib.common,\n    \t\t\tUniformsLib.aomap,\n    \t\t\tUniformsLib.lightmap,\n    \t\t\tUniformsLib.emissivemap,\n    \t\t\tUniformsLib.bumpmap,\n    \t\t\tUniformsLib.normalmap,\n    \t\t\tUniformsLib.displacementmap,\n    \t\t\tUniformsLib.fog,\n    \t\t\tUniformsLib.lights,\n\n    \t\t\t{\n    \t\t\t\temissive : { value: new Color( 0x000000 ) },\n    \t\t\t\tspecular : { value: new Color( 0x111111 ) },\n    \t\t\t\tshininess: { value: 30 }\n    \t\t\t}\n\n    \t\t] ),\n\n    \t\tvertexShader: ShaderChunk.meshphong_vert,\n    \t\tfragmentShader: ShaderChunk.meshphong_frag\n\n    \t},\n\n    \tstandard: {\n\n    \t\tuniforms: exports.UniformsUtils.merge( [\n\n    \t\t\tUniformsLib.common,\n    \t\t\tUniformsLib.aomap,\n    \t\t\tUniformsLib.lightmap,\n    \t\t\tUniformsLib.emissivemap,\n    \t\t\tUniformsLib.bumpmap,\n    \t\t\tUniformsLib.normalmap,\n    \t\t\tUniformsLib.displacementmap,\n    \t\t\tUniformsLib.roughnessmap,\n    \t\t\tUniformsLib.metalnessmap,\n    \t\t\tUniformsLib.fog,\n    \t\t\tUniformsLib.lights,\n\n    \t\t\t{\n    \t\t\t\temissive : { value: new Color( 0x000000 ) },\n    \t\t\t\troughness: { value: 0.5 },\n    \t\t\t\tmetalness: { value: 0 },\n    \t\t\t\tenvMapIntensity : { value: 1 }, // temporary\n    \t\t\t}\n\n    \t\t] ),\n\n    \t\tvertexShader: ShaderChunk.meshphysical_vert,\n    \t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n    \t},\n\n    \tpoints: {\n\n    \t\tuniforms: exports.UniformsUtils.merge( [\n\n    \t\t\tUniformsLib.points,\n    \t\t\tUniformsLib.fog\n\n    \t\t] ),\n\n    \t\tvertexShader: ShaderChunk.points_vert,\n    \t\tfragmentShader: ShaderChunk.points_frag\n\n    \t},\n\n    \tdashed: {\n\n    \t\tuniforms: exports.UniformsUtils.merge( [\n\n    \t\t\tUniformsLib.common,\n    \t\t\tUniformsLib.fog,\n\n    \t\t\t{\n    \t\t\t\tscale    : { value: 1 },\n    \t\t\t\tdashSize : { value: 1 },\n    \t\t\t\ttotalSize: { value: 2 }\n    \t\t\t}\n\n    \t\t] ),\n\n    \t\tvertexShader: ShaderChunk.linedashed_vert,\n    \t\tfragmentShader: ShaderChunk.linedashed_frag\n\n    \t},\n\n    \tdepth: {\n\n    \t\tuniforms: exports.UniformsUtils.merge( [\n\n    \t\t\tUniformsLib.common,\n    \t\t\tUniformsLib.displacementmap\n\n    \t\t] ),\n\n    \t\tvertexShader: ShaderChunk.depth_vert,\n    \t\tfragmentShader: ShaderChunk.depth_frag\n\n    \t},\n\n    \tnormal: {\n\n    \t\tuniforms: {\n\n    \t\t\topacity : { value: 1.0 }\n\n    \t\t},\n\n    \t\tvertexShader: ShaderChunk.normal_vert,\n    \t\tfragmentShader: ShaderChunk.normal_frag\n\n    \t},\n\n    \t/* -------------------------------------------------------------------------\n    \t//\tCube map shader\n    \t ------------------------------------------------------------------------- */\n\n    \tcube: {\n\n    \t\tuniforms: {\n    \t\t\ttCube: { value: null },\n    \t\t\ttFlip: { value: - 1 },\n    \t\t\topacity: { value: 1.0 }\n    \t\t},\n\n    \t\tvertexShader: ShaderChunk.cube_vert,\n    \t\tfragmentShader: ShaderChunk.cube_frag\n\n    \t},\n\n    \t/* -------------------------------------------------------------------------\n    \t//\tCube map shader\n    \t ------------------------------------------------------------------------- */\n\n    \tequirect: {\n\n    \t\tuniforms: {\n    \t\t\ttEquirect: { value: null },\n    \t\t\ttFlip: { value: - 1 }\n    \t\t},\n\n    \t\tvertexShader: ShaderChunk.equirect_vert,\n    \t\tfragmentShader: ShaderChunk.equirect_frag\n\n    \t},\n\n    \tdistanceRGBA: {\n\n    \t\tuniforms: {\n\n    \t\t\tlightPos: { value: new Vector3() }\n\n    \t\t},\n\n    \t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n    \t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n    \t}\n\n    };\n\n    ShaderLib.physical = {\n\n    \tuniforms: exports.UniformsUtils.merge( [\n\n    \t\tShaderLib.standard.uniforms,\n\n    \t\t{\n    \t\t\tclearCoat: { value: 0 },\n    \t\t\tclearCoatRoughness: { value: 0 }\n    \t\t}\n\n    \t] ),\n\n    \tvertexShader: ShaderChunk.meshphysical_vert,\n    \tfragmentShader: ShaderChunk.meshphysical_frag\n\n    };\n\n    /**\n     * @author bhouston / http://clara.io\n     */\n\n    function Box2( min, max ) {\n\n    \tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n    \tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n    }\n\n    Box2.prototype = {\n\n    \tconstructor: Box2,\n\n    \tset: function ( min, max ) {\n\n    \t\tthis.min.copy( min );\n    \t\tthis.max.copy( max );\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromPoints: function ( points ) {\n\n    \t\tthis.makeEmpty();\n\n    \t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n    \t\t\tthis.expandByPoint( points[ i ] );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromCenterAndSize: function () {\n\n    \t\tvar v1 = new Vector2();\n\n    \t\treturn function setFromCenterAndSize( center, size ) {\n\n    \t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n    \t\t\tthis.min.copy( center ).sub( halfSize );\n    \t\t\tthis.max.copy( center ).add( halfSize );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( box ) {\n\n    \t\tthis.min.copy( box.min );\n    \t\tthis.max.copy( box.max );\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakeEmpty: function () {\n\n    \t\tthis.min.x = this.min.y = + Infinity;\n    \t\tthis.max.x = this.max.y = - Infinity;\n\n    \t\treturn this;\n\n    \t},\n\n    \tisEmpty: function () {\n\n    \t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    \t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n    \t},\n\n    \tgetCenter: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector2();\n    \t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n    \t},\n\n    \tgetSize: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector2();\n    \t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n    \t},\n\n    \texpandByPoint: function ( point ) {\n\n    \t\tthis.min.min( point );\n    \t\tthis.max.max( point );\n\n    \t\treturn this;\n\n    \t},\n\n    \texpandByVector: function ( vector ) {\n\n    \t\tthis.min.sub( vector );\n    \t\tthis.max.add( vector );\n\n    \t\treturn this;\n\n    \t},\n\n    \texpandByScalar: function ( scalar ) {\n\n    \t\tthis.min.addScalar( - scalar );\n    \t\tthis.max.addScalar( scalar );\n\n    \t\treturn this;\n\n    \t},\n\n    \tcontainsPoint: function ( point ) {\n\n    \t\tif ( point.x < this.min.x || point.x > this.max.x ||\n    \t\t     point.y < this.min.y || point.y > this.max.y ) {\n\n    \t\t\treturn false;\n\n    \t\t}\n\n    \t\treturn true;\n\n    \t},\n\n    \tcontainsBox: function ( box ) {\n\n    \t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n    \t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\n\n    \t\t\treturn true;\n\n    \t\t}\n\n    \t\treturn false;\n\n    \t},\n\n    \tgetParameter: function ( point, optionalTarget ) {\n\n    \t\t// This can potentially have a divide by zero if the box\n    \t\t// has a size dimension of 0.\n\n    \t\tvar result = optionalTarget || new Vector2();\n\n    \t\treturn result.set(\n    \t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n    \t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n    \t\t);\n\n    \t},\n\n    \tintersectsBox: function ( box ) {\n\n    \t\t// using 6 splitting planes to rule out intersections.\n\n    \t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n    \t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\n\n    \t\t\treturn false;\n\n    \t\t}\n\n    \t\treturn true;\n\n    \t},\n\n    \tclampPoint: function ( point, optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector2();\n    \t\treturn result.copy( point ).clamp( this.min, this.max );\n\n    \t},\n\n    \tdistanceToPoint: function () {\n\n    \t\tvar v1 = new Vector2();\n\n    \t\treturn function distanceToPoint( point ) {\n\n    \t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n    \t\t\treturn clampedPoint.sub( point ).length();\n\n    \t\t};\n\n    \t}(),\n\n    \tintersect: function ( box ) {\n\n    \t\tthis.min.max( box.min );\n    \t\tthis.max.min( box.max );\n\n    \t\treturn this;\n\n    \t},\n\n    \tunion: function ( box ) {\n\n    \t\tthis.min.min( box.min );\n    \t\tthis.max.max( box.max );\n\n    \t\treturn this;\n\n    \t},\n\n    \ttranslate: function ( offset ) {\n\n    \t\tthis.min.add( offset );\n    \t\tthis.max.add( offset );\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( box ) {\n\n    \t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n    \t}\n\n    };\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function LensFlarePlugin( renderer, flares ) {\n\n    \tvar gl = renderer.context;\n    \tvar state = renderer.state;\n\n    \tvar vertexBuffer, elementBuffer;\n    \tvar shader, program, attributes, uniforms;\n\n    \tvar tempTexture, occlusionTexture;\n\n    \tfunction init() {\n\n    \t\tvar vertices = new Float32Array( [\n    \t\t\t- 1, - 1,  0, 0,\n    \t\t\t 1, - 1,  1, 0,\n    \t\t\t 1,  1,  1, 1,\n    \t\t\t- 1,  1,  0, 1\n    \t\t] );\n\n    \t\tvar faces = new Uint16Array( [\n    \t\t\t0, 1, 2,\n    \t\t\t0, 2, 3\n    \t\t] );\n\n    \t\t// buffers\n\n    \t\tvertexBuffer     = gl.createBuffer();\n    \t\telementBuffer    = gl.createBuffer();\n\n    \t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n    \t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n    \t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n    \t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n    \t\t// textures\n\n    \t\ttempTexture      = gl.createTexture();\n    \t\tocclusionTexture = gl.createTexture();\n\n    \t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n    \t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n    \t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n    \t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n    \t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n    \t\tshader = {\n\n    \t\t\tvertexShader: [\n\n    \t\t\t\t\"uniform lowp int renderType;\",\n\n    \t\t\t\t\"uniform vec3 screenPosition;\",\n    \t\t\t\t\"uniform vec2 scale;\",\n    \t\t\t\t\"uniform float rotation;\",\n\n    \t\t\t\t\"uniform sampler2D occlusionMap;\",\n\n    \t\t\t\t\"attribute vec2 position;\",\n    \t\t\t\t\"attribute vec2 uv;\",\n\n    \t\t\t\t\"varying vec2 vUV;\",\n    \t\t\t\t\"varying float vVisibility;\",\n\n    \t\t\t\t\"void main() {\",\n\n    \t\t\t\t\t\"vUV = uv;\",\n\n    \t\t\t\t\t\"vec2 pos = position;\",\n\n    \t\t\t\t\t\"if ( renderType == 2 ) {\",\n\n    \t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\n    \t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\n\n    \t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\n    \t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\n    \t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\n    \t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\n\n    \t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\n    \t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\n\n    \t\t\t\t\t\"}\",\n\n    \t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\n\n    \t\t\t\t\"}\"\n\n    \t\t\t].join( \"\\n\" ),\n\n    \t\t\tfragmentShader: [\n\n    \t\t\t\t\"uniform lowp int renderType;\",\n\n    \t\t\t\t\"uniform sampler2D map;\",\n    \t\t\t\t\"uniform float opacity;\",\n    \t\t\t\t\"uniform vec3 color;\",\n\n    \t\t\t\t\"varying vec2 vUV;\",\n    \t\t\t\t\"varying float vVisibility;\",\n\n    \t\t\t\t\"void main() {\",\n\n    \t\t\t\t\t// pink square\n\n    \t\t\t\t\t\"if ( renderType == 0 ) {\",\n\n    \t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\n\n    \t\t\t\t\t// restore\n\n    \t\t\t\t\t\"} else if ( renderType == 1 ) {\",\n\n    \t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\n\n    \t\t\t\t\t// flare\n\n    \t\t\t\t\t\"} else {\",\n\n    \t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\n    \t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\n    \t\t\t\t\t\t\"gl_FragColor = texture;\",\n    \t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\n\n    \t\t\t\t\t\"}\",\n\n    \t\t\t\t\"}\"\n\n    \t\t\t].join( \"\\n\" )\n\n    \t\t};\n\n    \t\tprogram = createProgram( shader );\n\n    \t\tattributes = {\n    \t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\n    \t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\n    \t\t};\n\n    \t\tuniforms = {\n    \t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\n    \t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\n    \t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\n    \t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\n    \t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\n    \t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\n    \t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\n    \t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\n    \t\t};\n\n    \t}\n\n    \t/*\n    \t * Render lens flares\n    \t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n    \t *         reads these back and calculates occlusion.\n    \t */\n\n    \tthis.render = function ( scene, camera, viewport ) {\n\n    \t\tif ( flares.length === 0 ) return;\n\n    \t\tvar tempPosition = new Vector3();\n\n    \t\tvar invAspect = viewport.w / viewport.z,\n    \t\t\thalfViewportWidth = viewport.z * 0.5,\n    \t\t\thalfViewportHeight = viewport.w * 0.5;\n\n    \t\tvar size = 16 / viewport.w,\n    \t\t\tscale = new Vector2( size * invAspect, size );\n\n    \t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n    \t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n    \t\tvar validArea = new Box2();\n\n    \t\tvalidArea.min.set( 0, 0 );\n    \t\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\n\n    \t\tif ( program === undefined ) {\n\n    \t\t\tinit();\n\n    \t\t}\n\n    \t\tgl.useProgram( program );\n\n    \t\tstate.initAttributes();\n    \t\tstate.enableAttribute( attributes.vertex );\n    \t\tstate.enableAttribute( attributes.uv );\n    \t\tstate.disableUnusedAttributes();\n\n    \t\t// loop through all lens flares to update their occlusion and positions\n    \t\t// setup gl and common used attribs/uniforms\n\n    \t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n    \t\tgl.uniform1i( uniforms.map, 1 );\n\n    \t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n    \t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n    \t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n    \t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n    \t\tstate.disable( gl.CULL_FACE );\n    \t\tstate.setDepthWrite( false );\n\n    \t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n    \t\t\tsize = 16 / viewport.w;\n    \t\t\tscale.set( size * invAspect, size );\n\n    \t\t\t// calc object screen position\n\n    \t\t\tvar flare = flares[ i ];\n\n    \t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n    \t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n    \t\t\ttempPosition.applyProjection( camera.projectionMatrix );\n\n    \t\t\t// setup arrays for gl programs\n\n    \t\t\tscreenPosition.copy( tempPosition );\n\n    \t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n    \t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n    \t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n    \t\t\t// screen cull\n\n    \t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n    \t\t\t\t// save current RGB to temp texture\n\n    \t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n    \t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n    \t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n    \t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n    \t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n    \t\t\t\t// render pink quad\n\n    \t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n    \t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n    \t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n    \t\t\t\tstate.disable( gl.BLEND );\n    \t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n    \t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n    \t\t\t\t// copy result to occlusionMap\n\n    \t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n    \t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n    \t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n    \t\t\t\t// restore graphics\n\n    \t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n    \t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n    \t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n    \t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n    \t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n    \t\t\t\t// update object positions\n\n    \t\t\t\tflare.positionScreen.copy( screenPosition );\n\n    \t\t\t\tif ( flare.customUpdateCallback ) {\n\n    \t\t\t\t\tflare.customUpdateCallback( flare );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tflare.updateLensFlares();\n\n    \t\t\t\t}\n\n    \t\t\t\t// render flares\n\n    \t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n    \t\t\t\tstate.enable( gl.BLEND );\n\n    \t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n    \t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n    \t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n    \t\t\t\t\t\tscreenPosition.x = sprite.x;\n    \t\t\t\t\t\tscreenPosition.y = sprite.y;\n    \t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n    \t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n    \t\t\t\t\t\tscale.x = size * invAspect;\n    \t\t\t\t\t\tscale.y = size;\n\n    \t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n    \t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n    \t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n    \t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n    \t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n    \t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n    \t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\n\n    \t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// restore gl\n\n    \t\tstate.enable( gl.CULL_FACE );\n    \t\tstate.enable( gl.DEPTH_TEST );\n    \t\tstate.setDepthWrite( true );\n\n    \t\trenderer.resetGLState();\n\n    \t};\n\n    \tfunction createProgram( shader ) {\n\n    \t\tvar program = gl.createProgram();\n\n    \t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n    \t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n    \t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\n\n    \t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n    \t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n    \t\tgl.compileShader( fragmentShader );\n    \t\tgl.compileShader( vertexShader );\n\n    \t\tgl.attachShader( program, fragmentShader );\n    \t\tgl.attachShader( program, vertexShader );\n\n    \t\tgl.linkProgram( program );\n\n    \t\treturn program;\n\n    \t}\n\n    }\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function SpritePlugin( renderer, sprites ) {\n\n    \tvar gl = renderer.context;\n    \tvar state = renderer.state;\n\n    \tvar vertexBuffer, elementBuffer;\n    \tvar program, attributes, uniforms;\n\n    \tvar texture;\n\n    \t// decompose matrixWorld\n\n    \tvar spritePosition = new Vector3();\n    \tvar spriteRotation = new Quaternion();\n    \tvar spriteScale = new Vector3();\n\n    \tfunction init() {\n\n    \t\tvar vertices = new Float32Array( [\n    \t\t\t- 0.5, - 0.5,  0, 0,\n    \t\t\t  0.5, - 0.5,  1, 0,\n    \t\t\t  0.5,   0.5,  1, 1,\n    \t\t\t- 0.5,   0.5,  0, 1\n    \t\t] );\n\n    \t\tvar faces = new Uint16Array( [\n    \t\t\t0, 1, 2,\n    \t\t\t0, 2, 3\n    \t\t] );\n\n    \t\tvertexBuffer  = gl.createBuffer();\n    \t\telementBuffer = gl.createBuffer();\n\n    \t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n    \t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n    \t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n    \t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n    \t\tprogram = createProgram();\n\n    \t\tattributes = {\n    \t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\n    \t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\n    \t\t};\n\n    \t\tuniforms = {\n    \t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\n    \t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\n\n    \t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\n    \t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\n\n    \t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\n    \t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\n    \t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\n\n    \t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\n    \t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\n\n    \t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\n    \t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\n    \t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\n    \t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\n    \t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\n\n    \t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\n    \t\t};\n\n    \t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n    \t\tcanvas.width = 8;\n    \t\tcanvas.height = 8;\n\n    \t\tvar context = canvas.getContext( '2d' );\n    \t\tcontext.fillStyle = 'white';\n    \t\tcontext.fillRect( 0, 0, 8, 8 );\n\n    \t\ttexture = new Texture( canvas );\n    \t\ttexture.needsUpdate = true;\n\n    \t}\n\n    \tthis.render = function ( scene, camera ) {\n\n    \t\tif ( sprites.length === 0 ) return;\n\n    \t\t// setup gl\n\n    \t\tif ( program === undefined ) {\n\n    \t\t\tinit();\n\n    \t\t}\n\n    \t\tgl.useProgram( program );\n\n    \t\tstate.initAttributes();\n    \t\tstate.enableAttribute( attributes.position );\n    \t\tstate.enableAttribute( attributes.uv );\n    \t\tstate.disableUnusedAttributes();\n\n    \t\tstate.disable( gl.CULL_FACE );\n    \t\tstate.enable( gl.BLEND );\n\n    \t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n    \t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n    \t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n    \t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n    \t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n    \t\tstate.activeTexture( gl.TEXTURE0 );\n    \t\tgl.uniform1i( uniforms.map, 0 );\n\n    \t\tvar oldFogType = 0;\n    \t\tvar sceneFogType = 0;\n    \t\tvar fog = scene.fog;\n\n    \t\tif ( fog ) {\n\n    \t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n    \t\t\tif ( (fog && fog.isFog) ) {\n\n    \t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n    \t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n    \t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n    \t\t\t\toldFogType = 1;\n    \t\t\t\tsceneFogType = 1;\n\n    \t\t\t} else if ( (fog && fog.isFogExp2) ) {\n\n    \t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n    \t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n    \t\t\t\toldFogType = 2;\n    \t\t\t\tsceneFogType = 2;\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tgl.uniform1i( uniforms.fogType, 0 );\n    \t\t\toldFogType = 0;\n    \t\t\tsceneFogType = 0;\n\n    \t\t}\n\n\n    \t\t// update positions and sort\n\n    \t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n    \t\t\tvar sprite = sprites[ i ];\n\n    \t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n    \t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n    \t\t}\n\n    \t\tsprites.sort( painterSortStable );\n\n    \t\t// render all sprites\n\n    \t\tvar scale = [];\n\n    \t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n    \t\t\tvar sprite = sprites[ i ];\n    \t\t\tvar material = sprite.material;\n\n    \t\t\tif ( material.visible === false ) continue;\n\n    \t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n    \t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n    \t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n    \t\t\tscale[ 0 ] = spriteScale.x;\n    \t\t\tscale[ 1 ] = spriteScale.y;\n\n    \t\t\tvar fogType = 0;\n\n    \t\t\tif ( scene.fog && material.fog ) {\n\n    \t\t\t\tfogType = sceneFogType;\n\n    \t\t\t}\n\n    \t\t\tif ( oldFogType !== fogType ) {\n\n    \t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n    \t\t\t\toldFogType = fogType;\n\n    \t\t\t}\n\n    \t\t\tif ( material.map !== null ) {\n\n    \t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n    \t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n    \t\t\t} else {\n\n    \t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n    \t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n    \t\t\t}\n\n    \t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n    \t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n    \t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n    \t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n    \t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n    \t\t\tstate.setDepthTest( material.depthTest );\n    \t\t\tstate.setDepthWrite( material.depthWrite );\n\n    \t\t\tif ( material.map ) {\n\n    \t\t\t\trenderer.setTexture2D( material.map, 0 );\n\n    \t\t\t} else {\n\n    \t\t\t\trenderer.setTexture2D( texture, 0 );\n\n    \t\t\t}\n\n    \t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n    \t\t}\n\n    \t\t// restore gl\n\n    \t\tstate.enable( gl.CULL_FACE );\n\n    \t\trenderer.resetGLState();\n\n    \t};\n\n    \tfunction createProgram() {\n\n    \t\tvar program = gl.createProgram();\n\n    \t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n    \t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n    \t\tgl.shaderSource( vertexShader, [\n\n    \t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n    \t\t\t'uniform mat4 modelViewMatrix;',\n    \t\t\t'uniform mat4 projectionMatrix;',\n    \t\t\t'uniform float rotation;',\n    \t\t\t'uniform vec2 scale;',\n    \t\t\t'uniform vec2 uvOffset;',\n    \t\t\t'uniform vec2 uvScale;',\n\n    \t\t\t'attribute vec2 position;',\n    \t\t\t'attribute vec2 uv;',\n\n    \t\t\t'varying vec2 vUV;',\n\n    \t\t\t'void main() {',\n\n    \t\t\t\t'vUV = uvOffset + uv * uvScale;',\n\n    \t\t\t\t'vec2 alignedPosition = position * scale;',\n\n    \t\t\t\t'vec2 rotatedPosition;',\n    \t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n    \t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n    \t\t\t\t'vec4 finalPosition;',\n\n    \t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n    \t\t\t\t'finalPosition.xy += rotatedPosition;',\n    \t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\n\n    \t\t\t\t'gl_Position = finalPosition;',\n\n    \t\t\t'}'\n\n    \t\t].join( '\\n' ) );\n\n    \t\tgl.shaderSource( fragmentShader, [\n\n    \t\t\t'precision ' + renderer.getPrecision() + ' float;',\n\n    \t\t\t'uniform vec3 color;',\n    \t\t\t'uniform sampler2D map;',\n    \t\t\t'uniform float opacity;',\n\n    \t\t\t'uniform int fogType;',\n    \t\t\t'uniform vec3 fogColor;',\n    \t\t\t'uniform float fogDensity;',\n    \t\t\t'uniform float fogNear;',\n    \t\t\t'uniform float fogFar;',\n    \t\t\t'uniform float alphaTest;',\n\n    \t\t\t'varying vec2 vUV;',\n\n    \t\t\t'void main() {',\n\n    \t\t\t\t'vec4 texture = texture2D( map, vUV );',\n\n    \t\t\t\t'if ( texture.a < alphaTest ) discard;',\n\n    \t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n    \t\t\t\t'if ( fogType > 0 ) {',\n\n    \t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\n    \t\t\t\t\t'float fogFactor = 0.0;',\n\n    \t\t\t\t\t'if ( fogType == 1 ) {',\n\n    \t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\n\n    \t\t\t\t\t'} else {',\n\n    \t\t\t\t\t\t'const float LOG2 = 1.442695;',\n    \t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\n    \t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n    \t\t\t\t\t'}',\n\n    \t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\n\n    \t\t\t\t'}',\n\n    \t\t\t'}'\n\n    \t\t].join( '\\n' ) );\n\n    \t\tgl.compileShader( vertexShader );\n    \t\tgl.compileShader( fragmentShader );\n\n    \t\tgl.attachShader( program, vertexShader );\n    \t\tgl.attachShader( program, fragmentShader );\n\n    \t\tgl.linkProgram( program );\n\n    \t\treturn program;\n\n    \t}\n\n    \tfunction painterSortStable( a, b ) {\n\n    \t\tif ( a.renderOrder !== b.renderOrder ) {\n\n    \t\t\treturn a.renderOrder - b.renderOrder;\n\n    \t\t} else if ( a.z !== b.z ) {\n\n    \t\t\treturn b.z - a.z;\n\n    \t\t} else {\n\n    \t\t\treturn b.id - a.id;\n\n    \t\t}\n\n    \t}\n\n    }\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Material() {\n\n    \tObject.defineProperty( this, 'id', { value: MaterialIdCount() } );\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.name = '';\n    \tthis.type = 'Material';\n\n    \tthis.fog = true;\n    \tthis.lights = true;\n\n    \tthis.blending = NormalBlending;\n    \tthis.side = FrontSide;\n    \tthis.shading = SmoothShading; // THREE.FlatShading, THREE.SmoothShading\n    \tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n    \tthis.opacity = 1;\n    \tthis.transparent = false;\n\n    \tthis.blendSrc = SrcAlphaFactor;\n    \tthis.blendDst = OneMinusSrcAlphaFactor;\n    \tthis.blendEquation = AddEquation;\n    \tthis.blendSrcAlpha = null;\n    \tthis.blendDstAlpha = null;\n    \tthis.blendEquationAlpha = null;\n\n    \tthis.depthFunc = LessEqualDepth;\n    \tthis.depthTest = true;\n    \tthis.depthWrite = true;\n\n    \tthis.clippingPlanes = null;\n    \tthis.clipShadows = false;\n\n    \tthis.colorWrite = true;\n\n    \tthis.precision = null; // override the renderer's default precision for this material\n\n    \tthis.polygonOffset = false;\n    \tthis.polygonOffsetFactor = 0;\n    \tthis.polygonOffsetUnits = 0;\n\n    \tthis.alphaTest = 0;\n    \tthis.premultipliedAlpha = false;\n\n    \tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n    \tthis.visible = true;\n\n    \tthis._needsUpdate = true;\n\n    }\n\n    Material.prototype = {\n\n    \tconstructor: Material,\n\n    \tisMaterial: true,\n\n    \tget needsUpdate() {\n\n    \t\treturn this._needsUpdate;\n\n    \t},\n\n    \tset needsUpdate( value ) {\n\n    \t\tif ( value === true ) this.update();\n    \t\tthis._needsUpdate = value;\n\n    \t},\n\n    \tsetValues: function ( values ) {\n\n    \t\tif ( values === undefined ) return;\n\n    \t\tfor ( var key in values ) {\n\n    \t\t\tvar newValue = values[ key ];\n\n    \t\t\tif ( newValue === undefined ) {\n\n    \t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n    \t\t\t\tcontinue;\n\n    \t\t\t}\n\n    \t\t\tvar currentValue = this[ key ];\n\n    \t\t\tif ( currentValue === undefined ) {\n\n    \t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n    \t\t\t\tcontinue;\n\n    \t\t\t}\n\n    \t\t\tif ( (currentValue && currentValue.isColor) ) {\n\n    \t\t\t\tcurrentValue.set( newValue );\n\n    \t\t\t} else if ( (currentValue && currentValue.isVector3) && (newValue && newValue.isVector3) ) {\n\n    \t\t\t\tcurrentValue.copy( newValue );\n\n    \t\t\t} else if ( key === 'overdraw' ) {\n\n    \t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n    \t\t\t\tthis[ key ] = Number( newValue );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis[ key ] = newValue;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \ttoJSON: function ( meta ) {\n\n    \t\tvar isRoot = meta === undefined;\n\n    \t\tif ( isRoot ) {\n\n    \t\t\tmeta = {\n    \t\t\t\ttextures: {},\n    \t\t\t\timages: {}\n    \t\t\t};\n\n    \t\t}\n\n    \t\tvar data = {\n    \t\t\tmetadata: {\n    \t\t\t\tversion: 4.4,\n    \t\t\t\ttype: 'Material',\n    \t\t\t\tgenerator: 'Material.toJSON'\n    \t\t\t}\n    \t\t};\n\n    \t\t// standard Material serialization\n    \t\tdata.uuid = this.uuid;\n    \t\tdata.type = this.type;\n\n    \t\tif ( this.name !== '' ) data.name = this.name;\n\n    \t\tif ( (this.color && this.color.isColor) ) data.color = this.color.getHex();\n\n    \t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n    \t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n    \t\tif ( (this.emissive && this.emissive.isColor) ) data.emissive = this.emissive.getHex();\n    \t\tif ( (this.specular && this.specular.isColor) ) data.specular = this.specular.getHex();\n    \t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\n    \t\tif ( (this.map && this.map.isTexture) ) data.map = this.map.toJSON( meta ).uuid;\n    \t\tif ( (this.alphaMap && this.alphaMap.isTexture) ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n    \t\tif ( (this.lightMap && this.lightMap.isTexture) ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n    \t\tif ( (this.bumpMap && this.bumpMap.isTexture) ) {\n\n    \t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n    \t\t\tdata.bumpScale = this.bumpScale;\n\n    \t\t}\n    \t\tif ( (this.normalMap && this.normalMap.isTexture) ) {\n\n    \t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n    \t\t\tdata.normalScale = this.normalScale.toArray();\n\n    \t\t}\n    \t\tif ( (this.displacementMap && this.displacementMap.isTexture) ) {\n\n    \t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n    \t\t\tdata.displacementScale = this.displacementScale;\n    \t\t\tdata.displacementBias = this.displacementBias;\n\n    \t\t}\n    \t\tif ( (this.roughnessMap && this.roughnessMap.isTexture) ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n    \t\tif ( (this.metalnessMap && this.metalnessMap.isTexture) ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n    \t\tif ( (this.emissiveMap && this.emissiveMap.isTexture) ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n    \t\tif ( (this.specularMap && this.specularMap.isTexture) ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n    \t\tif ( (this.envMap && this.envMap.isTexture) ) {\n\n    \t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n    \t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n    \t\t}\n\n    \t\tif ( this.size !== undefined ) data.size = this.size;\n    \t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n    \t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n    \t\tif ( this.shading !== SmoothShading ) data.shading = this.shading;\n    \t\tif ( this.side !== FrontSide ) data.side = this.side;\n    \t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n    \t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n    \t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n    \t\tdata.depthFunc = this.depthFunc;\n    \t\tdata.depthTest = this.depthTest;\n    \t\tdata.depthWrite = this.depthWrite;\n\n    \t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n    \t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n    \t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n    \t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n    \t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n    \t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n    \t\tdata.skinning = this.skinning;\n    \t\tdata.morphTargets = this.morphTargets;\n\n    \t\t// TODO: Copied from Object3D.toJSON\n\n    \t\tfunction extractFromCache( cache ) {\n\n    \t\t\tvar values = [];\n\n    \t\t\tfor ( var key in cache ) {\n\n    \t\t\t\tvar data = cache[ key ];\n    \t\t\t\tdelete data.metadata;\n    \t\t\t\tvalues.push( data );\n\n    \t\t\t}\n\n    \t\t\treturn values;\n\n    \t\t}\n\n    \t\tif ( isRoot ) {\n\n    \t\t\tvar textures = extractFromCache( meta.textures );\n    \t\t\tvar images = extractFromCache( meta.images );\n\n    \t\t\tif ( textures.length > 0 ) data.textures = textures;\n    \t\t\tif ( images.length > 0 ) data.images = images;\n\n    \t\t}\n\n    \t\treturn data;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tthis.name = source.name;\n\n    \t\tthis.fog = source.fog;\n    \t\tthis.lights = source.lights;\n\n    \t\tthis.blending = source.blending;\n    \t\tthis.side = source.side;\n    \t\tthis.shading = source.shading;\n    \t\tthis.vertexColors = source.vertexColors;\n\n    \t\tthis.opacity = source.opacity;\n    \t\tthis.transparent = source.transparent;\n\n    \t\tthis.blendSrc = source.blendSrc;\n    \t\tthis.blendDst = source.blendDst;\n    \t\tthis.blendEquation = source.blendEquation;\n    \t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n    \t\tthis.blendDstAlpha = source.blendDstAlpha;\n    \t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n    \t\tthis.depthFunc = source.depthFunc;\n    \t\tthis.depthTest = source.depthTest;\n    \t\tthis.depthWrite = source.depthWrite;\n\n    \t\tthis.colorWrite = source.colorWrite;\n\n    \t\tthis.precision = source.precision;\n\n    \t\tthis.polygonOffset = source.polygonOffset;\n    \t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n    \t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n    \t\tthis.alphaTest = source.alphaTest;\n\n    \t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n    \t\tthis.overdraw = source.overdraw;\n\n    \t\tthis.visible = source.visible;\n    \t\tthis.clipShadows = source.clipShadows;\n\n    \t\tvar srcPlanes = source.clippingPlanes,\n    \t\t\tdstPlanes = null;\n\n    \t\tif ( srcPlanes !== null ) {\n\n    \t\t\tvar n = srcPlanes.length;\n    \t\t\tdstPlanes = new Array( n );\n\n    \t\t\tfor ( var i = 0; i !== n; ++ i )\n    \t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n    \t\t}\n\n    \t\tthis.clippingPlanes = dstPlanes;\n\n    \t\treturn this;\n\n    \t},\n\n    \tupdate: function () {\n\n    \t\tthis.dispatchEvent( { type: 'update' } );\n\n    \t},\n\n    \tdispose: function () {\n\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\n\n    \t}\n\n    };\n\n    Object.assign( Material.prototype, EventDispatcher.prototype );\n\n    var count$1 = 0;\n    function MaterialIdCount() { return count$1++; };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * parameters = {\n     *  defines: { \"label\" : \"value\" },\n     *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n     *\n     *  fragmentShader: <string>,\n     *  vertexShader: <string>,\n     *\n     *  wireframe: <boolean>,\n     *  wireframeLinewidth: <float>,\n     *\n     *  lights: <bool>,\n     *\n     *  skinning: <bool>,\n     *  morphTargets: <bool>,\n     *  morphNormals: <bool>\n     * }\n     */\n\n    function ShaderMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'ShaderMaterial';\n\n    \tthis.defines = {};\n    \tthis.uniforms = {};\n\n    \tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n    \tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n    \tthis.linewidth = 1;\n\n    \tthis.wireframe = false;\n    \tthis.wireframeLinewidth = 1;\n\n    \tthis.fog = false; // set to use scene fog\n    \tthis.lights = false; // set to use scene lights\n    \tthis.clipping = false; // set to use user-defined clipping planes\n\n    \tthis.skinning = false; // set to use skinning attribute streams\n    \tthis.morphTargets = false; // set to use morph targets\n    \tthis.morphNormals = false; // set to use morph normals\n\n    \tthis.extensions = {\n    \t\tderivatives: false, // set to use derivatives\n    \t\tfragDepth: false, // set to use fragment depth values\n    \t\tdrawBuffers: false, // set to use draw buffers\n    \t\tshaderTextureLOD: false // set to use shader texture LOD\n    \t};\n\n    \t// When rendered geometry doesn't include these attributes but the material does,\n    \t// use these default values in WebGL. This avoids errors when buffer data is missing.\n    \tthis.defaultAttributeValues = {\n    \t\t'color': [ 1, 1, 1 ],\n    \t\t'uv': [ 0, 0 ],\n    \t\t'uv2': [ 0, 0 ]\n    \t};\n\n    \tthis.index0AttributeName = undefined;\n\n    \tif ( parameters !== undefined ) {\n\n    \t\tif ( parameters.attributes !== undefined ) {\n\n    \t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n    \t\t}\n\n    \t\tthis.setValues( parameters );\n\n    \t}\n\n    }\n\n    ShaderMaterial.prototype = Object.create( Material.prototype );\n    ShaderMaterial.prototype.constructor = ShaderMaterial;\n\n    ShaderMaterial.prototype.isShaderMaterial = true;\n\n    ShaderMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.fragmentShader = source.fragmentShader;\n    \tthis.vertexShader = source.vertexShader;\n\n    \tthis.uniforms = exports.UniformsUtils.clone( source.uniforms );\n\n    \tthis.defines = source.defines;\n\n    \tthis.wireframe = source.wireframe;\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n    \tthis.lights = source.lights;\n    \tthis.clipping = source.clipping;\n\n    \tthis.skinning = source.skinning;\n\n    \tthis.morphTargets = source.morphTargets;\n    \tthis.morphNormals = source.morphNormals;\n\n    \tthis.extensions = source.extensions;\n\n    \treturn this;\n\n    };\n\n    ShaderMaterial.prototype.toJSON = function ( meta ) {\n\n    \tvar data = Material.prototype.toJSON.call( this, meta );\n\n    \tdata.uniforms = this.uniforms;\n    \tdata.vertexShader = this.vertexShader;\n    \tdata.fragmentShader = this.fragmentShader;\n\n    \treturn data;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     * @author bhouston / https://clara.io\n     * @author WestLangley / http://github.com/WestLangley\n     *\n     * parameters = {\n     *\n     *  opacity: <float>,\n     *\n     *  map: new THREE.Texture( <Image> ),\n     *\n     *  alphaMap: new THREE.Texture( <Image> ),\n     *\n     *  displacementMap: new THREE.Texture( <Image> ),\n     *  displacementScale: <float>,\n     *  displacementBias: <float>,\n     *\n     *  wireframe: <boolean>,\n     *  wireframeLinewidth: <float>\n     * }\n     */\n\n    function MeshDepthMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'MeshDepthMaterial';\n\n    \tthis.depthPacking = BasicDepthPacking;\n\n    \tthis.skinning = false;\n    \tthis.morphTargets = false;\n\n    \tthis.map = null;\n\n    \tthis.alphaMap = null;\n\n    \tthis.displacementMap = null;\n    \tthis.displacementScale = 1;\n    \tthis.displacementBias = 0;\n\n    \tthis.wireframe = false;\n    \tthis.wireframeLinewidth = 1;\n\n    \tthis.fog = false;\n    \tthis.lights = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    MeshDepthMaterial.prototype = Object.create( Material.prototype );\n    MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n    MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n    MeshDepthMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.depthPacking = source.depthPacking;\n\n    \tthis.skinning = source.skinning;\n    \tthis.morphTargets = source.morphTargets;\n\n    \tthis.map = source.map;\n\n    \tthis.alphaMap = source.alphaMap;\n\n    \tthis.displacementMap = source.displacementMap;\n    \tthis.displacementScale = source.displacementScale;\n    \tthis.displacementBias = source.displacementBias;\n\n    \tthis.wireframe = source.wireframe;\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author bhouston / http://clara.io\n     * @author WestLangley / http://github.com/WestLangley\n     */\n\n    function Box3( min, max ) {\n\n    \tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n    \tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n    }\n\n    Box3.prototype = {\n\n    \tconstructor: Box3,\n\n    \tisBox3: true,\n\n    \tset: function ( min, max ) {\n\n    \t\tthis.min.copy( min );\n    \t\tthis.max.copy( max );\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromArray: function ( array ) {\n\n    \t\tvar minX = + Infinity;\n    \t\tvar minY = + Infinity;\n    \t\tvar minZ = + Infinity;\n\n    \t\tvar maxX = - Infinity;\n    \t\tvar maxY = - Infinity;\n    \t\tvar maxZ = - Infinity;\n\n    \t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n    \t\t\tvar x = array[ i ];\n    \t\t\tvar y = array[ i + 1 ];\n    \t\t\tvar z = array[ i + 2 ];\n\n    \t\t\tif ( x < minX ) minX = x;\n    \t\t\tif ( y < minY ) minY = y;\n    \t\t\tif ( z < minZ ) minZ = z;\n\n    \t\t\tif ( x > maxX ) maxX = x;\n    \t\t\tif ( y > maxY ) maxY = y;\n    \t\t\tif ( z > maxZ ) maxZ = z;\n\n    \t\t}\n\n    \t\tthis.min.set( minX, minY, minZ );\n    \t\tthis.max.set( maxX, maxY, maxZ );\n\n    \t},\n\n    \tsetFromPoints: function ( points ) {\n\n    \t\tthis.makeEmpty();\n\n    \t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n    \t\t\tthis.expandByPoint( points[ i ] );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromCenterAndSize: function () {\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function setFromCenterAndSize( center, size ) {\n\n    \t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n    \t\t\tthis.min.copy( center ).sub( halfSize );\n    \t\t\tthis.max.copy( center ).add( halfSize );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tsetFromObject: function () {\n\n    \t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n    \t\t// accounting for both the object's, and children's, world transforms\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function setFromObject( object ) {\n\n    \t\t\tvar scope = this;\n\n    \t\t\tobject.updateMatrixWorld( true );\n\n    \t\t\tthis.makeEmpty();\n\n    \t\t\tobject.traverse( function ( node ) {\n\n    \t\t\t\tvar geometry = node.geometry;\n\n    \t\t\t\tif ( geometry !== undefined ) {\n\n    \t\t\t\t\tif ( (geometry && geometry.isGeometry) ) {\n\n    \t\t\t\t\t\tvar vertices = geometry.vertices;\n\n    \t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n    \t\t\t\t\t\t\tv1.copy( vertices[ i ] );\n    \t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n    \t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t} else if ( (geometry && geometry.isBufferGeometry) ) {\n\n    \t\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n    \t\t\t\t\t\tif ( attribute !== undefined ) {\n\n    \t\t\t\t\t\t\tvar array, offset, stride;\n\n    \t\t\t\t\t\t\tif ( (attribute && attribute.isInterleavedBufferAttribute) ) {\n\n    \t\t\t\t\t\t\t\tarray = attribute.data.array;\n    \t\t\t\t\t\t\t\toffset = attribute.offset;\n    \t\t\t\t\t\t\t\tstride = attribute.data.stride;\n\n    \t\t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\t\tarray = attribute.array;\n    \t\t\t\t\t\t\t\toffset = 0;\n    \t\t\t\t\t\t\t\tstride = 3;\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\tfor ( var i = offset, il = array.length; i < il; i += stride ) {\n\n    \t\t\t\t\t\t\t\tv1.fromArray( array, i );\n    \t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n    \t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t} );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( box ) {\n\n    \t\tthis.min.copy( box.min );\n    \t\tthis.max.copy( box.max );\n\n    \t\treturn this;\n\n    \t},\n\n    \tmakeEmpty: function () {\n\n    \t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n    \t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n    \t\treturn this;\n\n    \t},\n\n    \tisEmpty: function () {\n\n    \t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    \t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n    \t},\n\n    \tgetCenter: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n    \t},\n\n    \tgetSize: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n    \t},\n\n    \texpandByPoint: function ( point ) {\n\n    \t\tthis.min.min( point );\n    \t\tthis.max.max( point );\n\n    \t\treturn this;\n\n    \t},\n\n    \texpandByVector: function ( vector ) {\n\n    \t\tthis.min.sub( vector );\n    \t\tthis.max.add( vector );\n\n    \t\treturn this;\n\n    \t},\n\n    \texpandByScalar: function ( scalar ) {\n\n    \t\tthis.min.addScalar( - scalar );\n    \t\tthis.max.addScalar( scalar );\n\n    \t\treturn this;\n\n    \t},\n\n    \tcontainsPoint: function ( point ) {\n\n    \t\tif ( point.x < this.min.x || point.x > this.max.x ||\n    \t\t\t\t point.y < this.min.y || point.y > this.max.y ||\n    \t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\n\n    \t\t\treturn false;\n\n    \t\t}\n\n    \t\treturn true;\n\n    \t},\n\n    \tcontainsBox: function ( box ) {\n\n    \t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\n    \t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\n    \t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\n\n    \t\t\treturn true;\n\n    \t\t}\n\n    \t\treturn false;\n\n    \t},\n\n    \tgetParameter: function ( point, optionalTarget ) {\n\n    \t\t// This can potentially have a divide by zero if the box\n    \t\t// has a size dimension of 0.\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\treturn result.set(\n    \t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n    \t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n    \t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n    \t\t);\n\n    \t},\n\n    \tintersectsBox: function ( box ) {\n\n    \t\t// using 6 splitting planes to rule out intersections.\n\n    \t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\n    \t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\n    \t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\n\n    \t\t\treturn false;\n\n    \t\t}\n\n    \t\treturn true;\n\n    \t},\n\n    \tintersectsSphere: ( function () {\n\n    \t\tvar closestPoint;\n\n    \t\treturn function intersectsSphere( sphere ) {\n\n    \t\t\tif ( closestPoint === undefined ) closestPoint = new Vector3();\n\n    \t\t\t// Find the point on the AABB closest to the sphere center.\n    \t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n    \t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n    \t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n    \t\t};\n\n    \t} )(),\n\n    \tintersectsPlane: function ( plane ) {\n\n    \t\t// We compute the minimum and maximum dot product values. If those values\n    \t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n    \t\tvar min, max;\n\n    \t\tif ( plane.normal.x > 0 ) {\n\n    \t\t\tmin = plane.normal.x * this.min.x;\n    \t\t\tmax = plane.normal.x * this.max.x;\n\n    \t\t} else {\n\n    \t\t\tmin = plane.normal.x * this.max.x;\n    \t\t\tmax = plane.normal.x * this.min.x;\n\n    \t\t}\n\n    \t\tif ( plane.normal.y > 0 ) {\n\n    \t\t\tmin += plane.normal.y * this.min.y;\n    \t\t\tmax += plane.normal.y * this.max.y;\n\n    \t\t} else {\n\n    \t\t\tmin += plane.normal.y * this.max.y;\n    \t\t\tmax += plane.normal.y * this.min.y;\n\n    \t\t}\n\n    \t\tif ( plane.normal.z > 0 ) {\n\n    \t\t\tmin += plane.normal.z * this.min.z;\n    \t\t\tmax += plane.normal.z * this.max.z;\n\n    \t\t} else {\n\n    \t\t\tmin += plane.normal.z * this.max.z;\n    \t\t\tmax += plane.normal.z * this.min.z;\n\n    \t\t}\n\n    \t\treturn ( min <= plane.constant && max >= plane.constant );\n\n    \t},\n\n    \tclampPoint: function ( point, optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\treturn result.copy( point ).clamp( this.min, this.max );\n\n    \t},\n\n    \tdistanceToPoint: function () {\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function distanceToPoint( point ) {\n\n    \t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n    \t\t\treturn clampedPoint.sub( point ).length();\n\n    \t\t};\n\n    \t}(),\n\n    \tgetBoundingSphere: function () {\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function getBoundingSphere( optionalTarget ) {\n\n    \t\t\tvar result = optionalTarget || new Sphere();\n\n    \t\t\tthis.getCenter( result.center );\n\n    \t\t\tresult.radius = this.size( v1 ).length() * 0.5;\n\n    \t\t\treturn result;\n\n    \t\t};\n\n    \t}(),\n\n    \tintersect: function ( box ) {\n\n    \t\tthis.min.max( box.min );\n    \t\tthis.max.min( box.max );\n\n    \t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n    \t\tif( this.isEmpty() ) this.makeEmpty();\n\n    \t\treturn this;\n\n    \t},\n\n    \tunion: function ( box ) {\n\n    \t\tthis.min.min( box.min );\n    \t\tthis.max.max( box.max );\n\n    \t\treturn this;\n\n    \t},\n\n    \tapplyMatrix4: function () {\n\n    \t\tvar points = [\n    \t\t\tnew Vector3(),\n    \t\t\tnew Vector3(),\n    \t\t\tnew Vector3(),\n    \t\t\tnew Vector3(),\n    \t\t\tnew Vector3(),\n    \t\t\tnew Vector3(),\n    \t\t\tnew Vector3(),\n    \t\t\tnew Vector3()\n    \t\t];\n\n    \t\treturn function applyMatrix4( matrix ) {\n\n    \t\t\t// transform of empty box is an empty box.\n    \t\t\tif( this.isEmpty() ) return this;\n\n    \t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n    \t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n    \t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n    \t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n    \t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n    \t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n    \t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n    \t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n    \t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n    \t\t\tthis.setFromPoints( points );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \ttranslate: function ( offset ) {\n\n    \t\tthis.min.add( offset );\n    \t\tthis.max.add( offset );\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( box ) {\n\n    \t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n    \t}\n\n    };\n\n    /**\n     * @author bhouston / http://clara.io\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Sphere( center, radius ) {\n\n    \tthis.center = ( center !== undefined ) ? center : new Vector3();\n    \tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n    }\n\n    Sphere.prototype = {\n\n    \tconstructor: Sphere,\n\n    \tset: function ( center, radius ) {\n\n    \t\tthis.center.copy( center );\n    \t\tthis.radius = radius;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromPoints: function () {\n\n    \t\tvar box = new Box3();\n\n    \t\treturn function setFromPoints( points, optionalCenter ) {\n\n    \t\t\tvar center = this.center;\n\n    \t\t\tif ( optionalCenter !== undefined ) {\n\n    \t\t\t\tcenter.copy( optionalCenter );\n\n    \t\t\t} else {\n\n    \t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n    \t\t\t}\n\n    \t\t\tvar maxRadiusSq = 0;\n\n    \t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n    \t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n    \t\t\t}\n\n    \t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( sphere ) {\n\n    \t\tthis.center.copy( sphere.center );\n    \t\tthis.radius = sphere.radius;\n\n    \t\treturn this;\n\n    \t},\n\n    \tempty: function () {\n\n    \t\treturn ( this.radius <= 0 );\n\n    \t},\n\n    \tcontainsPoint: function ( point ) {\n\n    \t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n    \t},\n\n    \tdistanceToPoint: function ( point ) {\n\n    \t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n    \t},\n\n    \tintersectsSphere: function ( sphere ) {\n\n    \t\tvar radiusSum = this.radius + sphere.radius;\n\n    \t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n    \t},\n\n    \tintersectsBox: function ( box ) {\n\n    \t\treturn box.intersectsSphere( this );\n\n    \t},\n\n    \tintersectsPlane: function ( plane ) {\n\n    \t\t// We use the following equation to compute the signed distance from\n    \t\t// the center of the sphere to the plane.\n    \t\t//\n    \t\t// distance = q * n - d\n    \t\t//\n    \t\t// If this distance is greater than the radius of the sphere,\n    \t\t// then there is no intersection.\n\n    \t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\n\n    \t},\n\n    \tclampPoint: function ( point, optionalTarget ) {\n\n    \t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\tresult.copy( point );\n\n    \t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n    \t\t\tresult.sub( this.center ).normalize();\n    \t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n    \t\t}\n\n    \t\treturn result;\n\n    \t},\n\n    \tgetBoundingBox: function ( optionalTarget ) {\n\n    \t\tvar box = optionalTarget || new Box3();\n\n    \t\tbox.set( this.center, this.center );\n    \t\tbox.expandByScalar( this.radius );\n\n    \t\treturn box;\n\n    \t},\n\n    \tapplyMatrix4: function ( matrix ) {\n\n    \t\tthis.center.applyMatrix4( matrix );\n    \t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n    \t\treturn this;\n\n    \t},\n\n    \ttranslate: function ( offset ) {\n\n    \t\tthis.center.add( offset );\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( sphere ) {\n\n    \t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n    \t}\n\n    };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author bhouston / http://clara.io\n     * @author tschw\n     */\n\n    function Matrix3() {\n\n    \tthis.elements = new Float32Array( [\n\n    \t\t1, 0, 0,\n    \t\t0, 1, 0,\n    \t\t0, 0, 1\n\n    \t] );\n\n    \tif ( arguments.length > 0 ) {\n\n    \t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n    \t}\n\n    }\n\n    Matrix3.prototype = {\n\n    \tconstructor: Matrix3,\n\n    \tisMatrix3: true,\n\n    \tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n    \t\tvar te = this.elements;\n\n    \t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n    \t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n    \t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n    \t\treturn this;\n\n    \t},\n\n    \tidentity: function () {\n\n    \t\tthis.set(\n\n    \t\t\t1, 0, 0,\n    \t\t\t0, 1, 0,\n    \t\t\t0, 0, 1\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().fromArray( this.elements );\n\n    \t},\n\n    \tcopy: function ( m ) {\n\n    \t\tvar me = m.elements;\n\n    \t\tthis.set(\n\n    \t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\n    \t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\n    \t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromMatrix4: function( m ) {\n\n    \t\tvar me = m.elements;\n\n    \t\tthis.set(\n\n    \t\t\tme[ 0 ], me[ 4 ], me[  8 ],\n    \t\t\tme[ 1 ], me[ 5 ], me[  9 ],\n    \t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n    \t\t);\n\n    \t\treturn this;\n\n    \t},\n\n    \tapplyToVector3Array: function () {\n\n    \t\tvar v1;\n\n    \t\treturn function applyToVector3Array( array, offset, length ) {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n    \t\t\tif ( offset === undefined ) offset = 0;\n    \t\t\tif ( length === undefined ) length = array.length;\n\n    \t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\n\n    \t\t\t\tv1.fromArray( array, j );\n    \t\t\t\tv1.applyMatrix3( this );\n    \t\t\t\tv1.toArray( array, j );\n\n    \t\t\t}\n\n    \t\t\treturn array;\n\n    \t\t};\n\n    \t}(),\n\n    \tapplyToBuffer: function () {\n\n    \t\tvar v1;\n\n    \t\treturn function applyToBuffer( buffer, offset, length ) {\n\n    \t\t\tif ( v1 === undefined ) v1 = new Vector3();\n    \t\t\tif ( offset === undefined ) offset = 0;\n    \t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\n\n    \t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\n\n    \t\t\t\tv1.x = buffer.getX( j );\n    \t\t\t\tv1.y = buffer.getY( j );\n    \t\t\t\tv1.z = buffer.getZ( j );\n\n    \t\t\t\tv1.applyMatrix3( this );\n\n    \t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\n\n    \t\t\t}\n\n    \t\t\treturn buffer;\n\n    \t\t};\n\n    \t}(),\n\n    \tmultiplyScalar: function ( s ) {\n\n    \t\tvar te = this.elements;\n\n    \t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n    \t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n    \t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdeterminant: function () {\n\n    \t\tvar te = this.elements;\n\n    \t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n    \t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n    \t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n    \t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n    \t},\n\n    \tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n    \t\tif ( (matrix && matrix.isMatrix4) ) {\n\n    \t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\n\n    \t\t}\n\n    \t\tvar me = matrix.elements,\n    \t\t\tte = this.elements,\n\n    \t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n    \t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n    \t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n    \t\t\tt11 = n33 * n22 - n32 * n23,\n    \t\t\tt12 = n32 * n13 - n33 * n12,\n    \t\t\tt13 = n23 * n12 - n22 * n13,\n\n    \t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n    \t\tif ( det === 0 ) {\n\n    \t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n    \t\t\tif ( throwOnDegenerate === true ) {\n\n    \t\t\t\tthrow new Error( msg );\n\n    \t\t\t} else {\n\n    \t\t\t\tconsole.warn( msg );\n\n    \t\t\t}\n\n    \t\t\treturn this.identity();\n    \t\t}\n\n    \t\tvar detInv = 1 / det;\n\n    \t\tte[ 0 ] = t11 * detInv;\n    \t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n    \t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n    \t\tte[ 3 ] = t12 * detInv;\n    \t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n    \t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n    \t\tte[ 6 ] = t13 * detInv;\n    \t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n    \t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n    \t\treturn this;\n\n    \t},\n\n    \ttranspose: function () {\n\n    \t\tvar tmp, m = this.elements;\n\n    \t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n    \t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n    \t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n    \t\treturn this;\n\n    \t},\n\n    \tflattenToArrayOffset: function ( array, offset ) {\n\n    \t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\n    \t\t\t\t\"- just use .toArray instead.\" );\n\n    \t\treturn this.toArray( array, offset );\n\n    \t},\n\n    \tgetNormalMatrix: function ( matrix4 ) {\n\n    \t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n    \t},\n\n    \ttransposeIntoArray: function ( r ) {\n\n    \t\tvar m = this.elements;\n\n    \t\tr[ 0 ] = m[ 0 ];\n    \t\tr[ 1 ] = m[ 3 ];\n    \t\tr[ 2 ] = m[ 6 ];\n    \t\tr[ 3 ] = m[ 1 ];\n    \t\tr[ 4 ] = m[ 4 ];\n    \t\tr[ 5 ] = m[ 7 ];\n    \t\tr[ 6 ] = m[ 2 ];\n    \t\tr[ 7 ] = m[ 5 ];\n    \t\tr[ 8 ] = m[ 8 ];\n\n    \t\treturn this;\n\n    \t},\n\n    \tfromArray: function ( array, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tfor( var i = 0; i < 9; i ++ ) {\n\n    \t\t\tthis.elements[ i ] = array[ i + offset ];\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoArray: function ( array, offset ) {\n\n    \t\tif ( array === undefined ) array = [];\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tvar te = this.elements;\n\n    \t\tarray[ offset ] = te[ 0 ];\n    \t\tarray[ offset + 1 ] = te[ 1 ];\n    \t\tarray[ offset + 2 ] = te[ 2 ];\n\n    \t\tarray[ offset + 3 ] = te[ 3 ];\n    \t\tarray[ offset + 4 ] = te[ 4 ];\n    \t\tarray[ offset + 5 ] = te[ 5 ];\n\n    \t\tarray[ offset + 6 ] = te[ 6 ];\n    \t\tarray[ offset + 7 ] = te[ 7 ];\n    \t\tarray[ offset + 8 ]  = te[ 8 ];\n\n    \t\treturn array;\n\n    \t}\n\n    };\n\n    /**\n     * @author bhouston / http://clara.io\n     */\n\n    function Plane( normal, constant ) {\n\n    \tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n    \tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n    }\n\n    Plane.prototype = {\n\n    \tconstructor: Plane,\n\n    \tset: function ( normal, constant ) {\n\n    \t\tthis.normal.copy( normal );\n    \t\tthis.constant = constant;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetComponents: function ( x, y, z, w ) {\n\n    \t\tthis.normal.set( x, y, z );\n    \t\tthis.constant = w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n    \t\tthis.normal.copy( normal );\n    \t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromCoplanarPoints: function () {\n\n    \t\tvar v1 = new Vector3();\n    \t\tvar v2 = new Vector3();\n\n    \t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n    \t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n    \t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n    \t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( plane ) {\n\n    \t\tthis.normal.copy( plane.normal );\n    \t\tthis.constant = plane.constant;\n\n    \t\treturn this;\n\n    \t},\n\n    \tnormalize: function () {\n\n    \t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n    \t\tvar inverseNormalLength = 1.0 / this.normal.length();\n    \t\tthis.normal.multiplyScalar( inverseNormalLength );\n    \t\tthis.constant *= inverseNormalLength;\n\n    \t\treturn this;\n\n    \t},\n\n    \tnegate: function () {\n\n    \t\tthis.constant *= - 1;\n    \t\tthis.normal.negate();\n\n    \t\treturn this;\n\n    \t},\n\n    \tdistanceToPoint: function ( point ) {\n\n    \t\treturn this.normal.dot( point ) + this.constant;\n\n    \t},\n\n    \tdistanceToSphere: function ( sphere ) {\n\n    \t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n    \t},\n\n    \tprojectPoint: function ( point, optionalTarget ) {\n\n    \t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\n\n    \t},\n\n    \torthoPoint: function ( point, optionalTarget ) {\n\n    \t\tvar perpendicularMagnitude = this.distanceToPoint( point );\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\n\n    \t},\n\n    \tintersectLine: function () {\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function intersectLine( line, optionalTarget ) {\n\n    \t\t\tvar result = optionalTarget || new Vector3();\n\n    \t\t\tvar direction = line.delta( v1 );\n\n    \t\t\tvar denominator = this.normal.dot( direction );\n\n    \t\t\tif ( denominator === 0 ) {\n\n    \t\t\t\t// line is coplanar, return origin\n    \t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n    \t\t\t\t\treturn result.copy( line.start );\n\n    \t\t\t\t}\n\n    \t\t\t\t// Unsure if this is the correct method to handle this case.\n    \t\t\t\treturn undefined;\n\n    \t\t\t}\n\n    \t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n    \t\t\tif ( t < 0 || t > 1 ) {\n\n    \t\t\t\treturn undefined;\n\n    \t\t\t}\n\n    \t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n    \t\t};\n\n    \t}(),\n\n    \tintersectsLine: function ( line ) {\n\n    \t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n    \t\tvar startSign = this.distanceToPoint( line.start );\n    \t\tvar endSign = this.distanceToPoint( line.end );\n\n    \t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n    \t},\n\n    \tintersectsBox: function ( box ) {\n\n    \t\treturn box.intersectsPlane( this );\n\n    \t},\n\n    \tintersectsSphere: function ( sphere ) {\n\n    \t\treturn sphere.intersectsPlane( this );\n\n    \t},\n\n    \tcoplanarPoint: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n    \t},\n\n    \tapplyMatrix4: function () {\n\n    \t\tvar v1 = new Vector3();\n    \t\tvar m1 = new Matrix3();\n\n    \t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n    \t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n    \t\t\t// transform normal based on theory here:\n    \t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\n    \t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n    \t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n    \t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\n    \t\t\tthis.constant = - referencePoint.dot( normal );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \ttranslate: function ( offset ) {\n\n    \t\tthis.constant = this.constant - offset.dot( this.normal );\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( plane ) {\n\n    \t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     * @author bhouston / http://clara.io\n     */\n\n    function Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n    \tthis.planes = [\n\n    \t\t( p0 !== undefined ) ? p0 : new Plane(),\n    \t\t( p1 !== undefined ) ? p1 : new Plane(),\n    \t\t( p2 !== undefined ) ? p2 : new Plane(),\n    \t\t( p3 !== undefined ) ? p3 : new Plane(),\n    \t\t( p4 !== undefined ) ? p4 : new Plane(),\n    \t\t( p5 !== undefined ) ? p5 : new Plane()\n\n    \t];\n\n    }\n\n    Frustum.prototype = {\n\n    \tconstructor: Frustum,\n\n    \tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n    \t\tvar planes = this.planes;\n\n    \t\tplanes[ 0 ].copy( p0 );\n    \t\tplanes[ 1 ].copy( p1 );\n    \t\tplanes[ 2 ].copy( p2 );\n    \t\tplanes[ 3 ].copy( p3 );\n    \t\tplanes[ 4 ].copy( p4 );\n    \t\tplanes[ 5 ].copy( p5 );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( frustum ) {\n\n    \t\tvar planes = this.planes;\n\n    \t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromMatrix: function ( m ) {\n\n    \t\tvar planes = this.planes;\n    \t\tvar me = m.elements;\n    \t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n    \t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n    \t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n    \t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n    \t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n    \t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n    \t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n    \t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n    \t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n    \t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n    \t\treturn this;\n\n    \t},\n\n    \tintersectsObject: function () {\n\n    \t\tvar sphere = new Sphere();\n\n    \t\treturn function intersectsObject( object ) {\n\n    \t\t\tvar geometry = object.geometry;\n\n    \t\t\tif ( geometry.boundingSphere === null )\n    \t\t\t\tgeometry.computeBoundingSphere();\n\n    \t\t\tsphere.copy( geometry.boundingSphere )\n    \t\t\t\t.applyMatrix4( object.matrixWorld );\n\n    \t\t\treturn this.intersectsSphere( sphere );\n\n    \t\t};\n\n    \t}(),\n\n    \tintersectsSprite: function () {\n\n    \t\tvar sphere = new Sphere();\n\n    \t\treturn function intersectsSprite( sprite ) {\n\n    \t\t\tsphere.center.set( 0, 0, 0 );\n    \t\t\tsphere.radius = 0.7071067811865476;\n    \t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n    \t\t\treturn this.intersectsSphere( sphere );\n\n    \t\t};\n\n    \t}(),\n\n    \tintersectsSphere: function ( sphere ) {\n\n    \t\tvar planes = this.planes;\n    \t\tvar center = sphere.center;\n    \t\tvar negRadius = - sphere.radius;\n\n    \t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n    \t\t\tif ( distance < negRadius ) {\n\n    \t\t\t\treturn false;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn true;\n\n    \t},\n\n    \tintersectsBox: function () {\n\n    \t\tvar p1 = new Vector3(),\n    \t\t\tp2 = new Vector3();\n\n    \t\treturn function intersectsBox( box ) {\n\n    \t\t\tvar planes = this.planes;\n\n    \t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\n\n    \t\t\t\tvar plane = planes[ i ];\n\n    \t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n    \t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n    \t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n    \t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n    \t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n    \t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n    \t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n    \t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n    \t\t\t\t// if both outside plane, no intersection\n\n    \t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n    \t\t\t\t\treturn false;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn true;\n\n    \t\t};\n\n    \t}(),\n\n\n    \tcontainsPoint: function ( point ) {\n\n    \t\tvar planes = this.planes;\n\n    \t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n    \t\t\t\treturn false;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn true;\n\n    \t}\n\n    };\n\n    function WebGLShadowMap( _renderer, _lights, _objects, capabilities ) {\n\n    \tvar _gl = _renderer.context,\n    \t_state = _renderer.state,\n    \t_frustum = new Frustum(),\n    \t_projScreenMatrix = new Matrix4(),\n\n    \t_lightShadows = _lights.shadows,\n\n    \t_shadowMapSize = new Vector2(),\n    \t_maxShadowMapSize = new Vector2( capabilities.maxTextureSize, capabilities.maxTextureSize ),\n\n    \t_lookTarget = new Vector3(),\n    \t_lightPositionWorld = new Vector3(),\n\n    \t_renderList = [],\n\n    \t_MorphingFlag = 1,\n    \t_SkinningFlag = 2,\n\n    \t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n    \t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n    \t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n    \t_materialCache = {};\n\n    \tvar cubeDirections = [\n    \t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n    \t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n    \t];\n\n    \tvar cubeUps = [\n    \t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n    \t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n    \t];\n\n    \tvar cube2DViewPorts = [\n    \t\tnew Vector4(), new Vector4(), new Vector4(),\n    \t\tnew Vector4(), new Vector4(), new Vector4()\n    \t];\n\n    \t// init\n\n    \tvar depthMaterialTemplate = new MeshDepthMaterial();\n    \tdepthMaterialTemplate.depthPacking = RGBADepthPacking;\n    \tdepthMaterialTemplate.clipping = true;\n\n    \tvar distanceShader = ShaderLib[ \"distanceRGBA\" ];\n    \tvar distanceUniforms = exports.UniformsUtils.clone( distanceShader.uniforms );\n\n    \tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n    \t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n    \t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n    \t\tvar depthMaterial = depthMaterialTemplate.clone();\n    \t\tdepthMaterial.morphTargets = useMorphing;\n    \t\tdepthMaterial.skinning = useSkinning;\n\n    \t\t_depthMaterials[ i ] = depthMaterial;\n\n    \t\tvar distanceMaterial = new ShaderMaterial( {\n    \t\t\tdefines: {\n    \t\t\t\t'USE_SHADOWMAP': ''\n    \t\t\t},\n    \t\t\tuniforms: distanceUniforms,\n    \t\t\tvertexShader: distanceShader.vertexShader,\n    \t\t\tfragmentShader: distanceShader.fragmentShader,\n    \t\t\tmorphTargets: useMorphing,\n    \t\t\tskinning: useSkinning,\n    \t\t\tclipping: true\n    \t\t} );\n\n    \t\t_distanceMaterials[ i ] = distanceMaterial;\n\n    \t}\n\n    \t//\n\n    \tvar scope = this;\n\n    \tthis.enabled = false;\n\n    \tthis.autoUpdate = true;\n    \tthis.needsUpdate = false;\n\n    \tthis.type = PCFShadowMap;\n\n    \tthis.renderReverseSided = true;\n    \tthis.renderSingleSided = true;\n\n    \tthis.render = function ( scene, camera ) {\n\n    \t\tif ( scope.enabled === false ) return;\n    \t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n    \t\tif ( _lightShadows.length === 0 ) return;\n\n    \t\t// Set GL state for depth map.\n    \t\t_state.clearColor( 1, 1, 1, 1 );\n    \t\t_state.disable( _gl.BLEND );\n    \t\t_state.setDepthTest( true );\n    \t\t_state.setScissorTest( false );\n\n    \t\t// render depth map\n\n    \t\tvar faceCount, isPointLight;\n\n    \t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\n\n    \t\t\tvar light = _lightShadows[ i ];\n    \t\t\tvar shadow = light.shadow;\n\n    \t\t\tif ( shadow === undefined ) {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n    \t\t\t\tcontinue;\n\n    \t\t\t}\n\n    \t\t\tvar shadowCamera = shadow.camera;\n\n    \t\t\t_shadowMapSize.copy( shadow.mapSize );\n    \t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n    \t\t\tif ( (light && light.isPointLight) ) {\n\n    \t\t\t\tfaceCount = 6;\n    \t\t\t\tisPointLight = true;\n\n    \t\t\t\tvar vpWidth = _shadowMapSize.x;\n    \t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n    \t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n    \t\t\t\t// following orientation:\n    \t\t\t\t//\n    \t\t\t\t//  xzXZ\n    \t\t\t\t//   y Y\n    \t\t\t\t//\n    \t\t\t\t// X - Positive x direction\n    \t\t\t\t// x - Negative x direction\n    \t\t\t\t// Y - Positive y direction\n    \t\t\t\t// y - Negative y direction\n    \t\t\t\t// Z - Positive z direction\n    \t\t\t\t// z - Negative z direction\n\n    \t\t\t\t// positive X\n    \t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n    \t\t\t\t// negative X\n    \t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n    \t\t\t\t// positive Z\n    \t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n    \t\t\t\t// negative Z\n    \t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n    \t\t\t\t// positive Y\n    \t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n    \t\t\t\t// negative Y\n    \t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n    \t\t\t\t_shadowMapSize.x *= 4.0;\n    \t\t\t\t_shadowMapSize.y *= 2.0;\n\n    \t\t\t} else {\n\n    \t\t\t\tfaceCount = 1;\n    \t\t\t\tisPointLight = false;\n\n    \t\t\t}\n\n    \t\t\tif ( shadow.map === null ) {\n\n    \t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n    \t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n    \t\t\t\tshadowCamera.updateProjectionMatrix();\n\n    \t\t\t}\n\n    \t\t\tif ( (shadow && shadow.isSpotLightShadow) ) {\n\n    \t\t\t\tshadow.update( light );\n\n    \t\t\t}\n\n    \t\t\tvar shadowMap = shadow.map;\n    \t\t\tvar shadowMatrix = shadow.matrix;\n\n    \t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n    \t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n    \t\t\t_renderer.setRenderTarget( shadowMap );\n    \t\t\t_renderer.clear();\n\n    \t\t\t// render shadow map for each cube face (if omni-directional) or\n    \t\t\t// run a single pass if not\n\n    \t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n    \t\t\t\tif ( isPointLight ) {\n\n    \t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n    \t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n    \t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n    \t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n    \t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n    \t\t\t\t\t_state.viewport( vpDimensions );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n    \t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\n    \t\t\t\t}\n\n    \t\t\t\tshadowCamera.updateMatrixWorld();\n    \t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\n\n    \t\t\t\t// compute shadow matrix\n\n    \t\t\t\tshadowMatrix.set(\n    \t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n    \t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n    \t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n    \t\t\t\t\t0.0, 0.0, 0.0, 1.0\n    \t\t\t\t);\n\n    \t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n    \t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n    \t\t\t\t// update camera matrices and frustum\n\n    \t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n    \t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n    \t\t\t\t// set object matrices & frustum culling\n\n    \t\t\t\t_renderList.length = 0;\n\n    \t\t\t\tprojectObject( scene, camera, shadowCamera );\n\n    \t\t\t\t// render shadow map\n    \t\t\t\t// render regular objects\n\n    \t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\n\n    \t\t\t\t\tvar object = _renderList[ j ];\n    \t\t\t\t\tvar geometry = _objects.update( object );\n    \t\t\t\t\tvar material = object.material;\n\n    \t\t\t\t\tif ( (material && material.isMultiMaterial) ) {\n\n    \t\t\t\t\t\tvar groups = geometry.groups;\n    \t\t\t\t\t\tvar materials = material.materials;\n\n    \t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n    \t\t\t\t\t\t\tvar group = groups[ k ];\n    \t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n    \t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n    \t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\n    \t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\n    \t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// Restore GL state.\n    \t\tvar clearColor = _renderer.getClearColor(),\n    \t\tclearAlpha = _renderer.getClearAlpha();\n    \t\t_renderer.setClearColor( clearColor, clearAlpha );\n\n    \t\tscope.needsUpdate = false;\n\n    \t};\n\n    \tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\n\n    \t\tvar geometry = object.geometry;\n\n    \t\tvar result = null;\n\n    \t\tvar materialVariants = _depthMaterials;\n    \t\tvar customMaterial = object.customDepthMaterial;\n\n    \t\tif ( isPointLight ) {\n\n    \t\t\tmaterialVariants = _distanceMaterials;\n    \t\t\tcustomMaterial = object.customDistanceMaterial;\n\n    \t\t}\n\n    \t\tif ( ! customMaterial ) {\n\n    \t\t\tvar useMorphing = false;\n\n    \t\t\tif ( material.morphTargets ) {\n\n    \t\t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n    \t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n    \t\t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n    \t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n    \t\t\tvar variantIndex = 0;\n\n    \t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n    \t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n    \t\t\tresult = materialVariants[ variantIndex ];\n\n    \t\t} else {\n\n    \t\t\tresult = customMaterial;\n\n    \t\t}\n\n    \t\tif ( _renderer.localClippingEnabled &&\n    \t\t\t material.clipShadows === true &&\n    \t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n    \t\t\t// in this case we need a unique material instance reflecting the\n    \t\t\t// appropriate state\n\n    \t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n    \t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n    \t\t\tif ( materialsForVariant === undefined ) {\n\n    \t\t\t\tmaterialsForVariant = {};\n    \t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n    \t\t\t}\n\n    \t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n    \t\t\tif ( cachedMaterial === undefined ) {\n\n    \t\t\t\tcachedMaterial = result.clone();\n    \t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n    \t\t\t}\n\n    \t\t\tresult = cachedMaterial;\n\n    \t\t}\n\n    \t\tresult.visible = material.visible;\n    \t\tresult.wireframe = material.wireframe;\n\n    \t\tvar side = material.side;\n\n    \t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n    \t\t\tside = FrontSide;\n\n    \t\t}\n\n    \t\tif ( scope.renderReverseSided ) {\n\n    \t\t\tif ( side === FrontSide ) side = BackSide;\n    \t\t\telse if ( side === BackSide ) side = FrontSide;\n\n    \t\t}\n\n    \t\tresult.side = side;\n\n    \t\tresult.clipShadows = material.clipShadows;\n    \t\tresult.clippingPlanes = material.clippingPlanes;\n\n    \t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n    \t\tresult.linewidth = material.linewidth;\n\n    \t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\n\n    \t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\n\n    \t\t}\n\n    \t\treturn result;\n\n    \t}\n\n    \tfunction projectObject( object, camera, shadowCamera ) {\n\n    \t\tif ( object.visible === false ) return;\n\n    \t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\n\n    \t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n    \t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\n\n    \t\t\t\tvar material = object.material;\n\n    \t\t\t\tif ( material.visible === true ) {\n\n    \t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n    \t\t\t\t\t_renderList.push( object );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar children = object.children;\n\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n    \t\t\tprojectObject( children[ i ], camera, shadowCamera );\n\n    \t\t}\n\n    \t}\n\n    }\n\n    /**\n     * @author bhouston / http://clara.io\n     */\n\n    function Ray( origin, direction ) {\n\n    \tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n    \tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n    }\n\n    Ray.prototype = {\n\n    \tconstructor: Ray,\n\n    \tset: function ( origin, direction ) {\n\n    \t\tthis.origin.copy( origin );\n    \t\tthis.direction.copy( direction );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( ray ) {\n\n    \t\tthis.origin.copy( ray.origin );\n    \t\tthis.direction.copy( ray.direction );\n\n    \t\treturn this;\n\n    \t},\n\n    \tat: function ( t, optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n    \t},\n\n    \tlookAt: function ( v ) {\n\n    \t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n    \t\treturn this;\n\n    \t},\n\n    \trecast: function () {\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function recast( t ) {\n\n    \t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tclosestPointToPoint: function ( point, optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\tresult.subVectors( point, this.origin );\n    \t\tvar directionDistance = result.dot( this.direction );\n\n    \t\tif ( directionDistance < 0 ) {\n\n    \t\t\treturn result.copy( this.origin );\n\n    \t\t}\n\n    \t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n    \t},\n\n    \tdistanceToPoint: function ( point ) {\n\n    \t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n    \t},\n\n    \tdistanceSqToPoint: function () {\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function distanceSqToPoint( point ) {\n\n    \t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n    \t\t\t// point behind the ray\n\n    \t\t\tif ( directionDistance < 0 ) {\n\n    \t\t\t\treturn this.origin.distanceToSquared( point );\n\n    \t\t\t}\n\n    \t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n    \t\t\treturn v1.distanceToSquared( point );\n\n    \t\t};\n\n    \t}(),\n\n    \tdistanceSqToSegment: function () {\n\n    \t\tvar segCenter = new Vector3();\n    \t\tvar segDir = new Vector3();\n    \t\tvar diff = new Vector3();\n\n    \t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n    \t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n    \t\t\t// It returns the min distance between the ray and the segment\n    \t\t\t// defined by v0 and v1\n    \t\t\t// It can also set two optional targets :\n    \t\t\t// - The closest point on the ray\n    \t\t\t// - The closest point on the segment\n\n    \t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n    \t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n    \t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n    \t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n    \t\t\tvar a01 = - this.direction.dot( segDir );\n    \t\t\tvar b0 = diff.dot( this.direction );\n    \t\t\tvar b1 = - diff.dot( segDir );\n    \t\t\tvar c = diff.lengthSq();\n    \t\t\tvar det = Math.abs( 1 - a01 * a01 );\n    \t\t\tvar s0, s1, sqrDist, extDet;\n\n    \t\t\tif ( det > 0 ) {\n\n    \t\t\t\t// The ray and segment are not parallel.\n\n    \t\t\t\ts0 = a01 * b1 - b0;\n    \t\t\t\ts1 = a01 * b0 - b1;\n    \t\t\t\textDet = segExtent * det;\n\n    \t\t\t\tif ( s0 >= 0 ) {\n\n    \t\t\t\t\tif ( s1 >= - extDet ) {\n\n    \t\t\t\t\t\tif ( s1 <= extDet ) {\n\n    \t\t\t\t\t\t\t// region 0\n    \t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n    \t\t\t\t\t\t\tvar invDet = 1 / det;\n    \t\t\t\t\t\t\ts0 *= invDet;\n    \t\t\t\t\t\t\ts1 *= invDet;\n    \t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n    \t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\t// region 1\n\n    \t\t\t\t\t\t\ts1 = segExtent;\n    \t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n    \t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\t// region 5\n\n    \t\t\t\t\t\ts1 = - segExtent;\n    \t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n    \t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tif ( s1 <= - extDet ) {\n\n    \t\t\t\t\t\t// region 4\n\n    \t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n    \t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n    \t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n    \t\t\t\t\t} else if ( s1 <= extDet ) {\n\n    \t\t\t\t\t\t// region 3\n\n    \t\t\t\t\t\ts0 = 0;\n    \t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n    \t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\t// region 2\n\n    \t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n    \t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n    \t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\t// Ray and segment are parallel.\n\n    \t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n    \t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n    \t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n    \t\t\t}\n\n    \t\t\tif ( optionalPointOnRay ) {\n\n    \t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n    \t\t\t}\n\n    \t\t\tif ( optionalPointOnSegment ) {\n\n    \t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n    \t\t\t}\n\n    \t\t\treturn sqrDist;\n\n    \t\t};\n\n    \t}(),\n\n    \tintersectSphere: function () {\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n    \t\t\tv1.subVectors( sphere.center, this.origin );\n    \t\t\tvar tca = v1.dot( this.direction );\n    \t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n    \t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n    \t\t\tif ( d2 > radius2 ) return null;\n\n    \t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n    \t\t\t// t0 = first intersect point - entrance on front of sphere\n    \t\t\tvar t0 = tca - thc;\n\n    \t\t\t// t1 = second intersect point - exit point on back of sphere\n    \t\t\tvar t1 = tca + thc;\n\n    \t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n    \t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n    \t\t\t// test to see if t0 is behind the ray:\n    \t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n    \t\t\t// in order to always return an intersect point that is in front of the ray.\n    \t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n    \t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n    \t\t\treturn this.at( t0, optionalTarget );\n\n    \t\t};\n\n    \t}(),\n\n    \tintersectsSphere: function ( sphere ) {\n\n    \t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n    \t},\n\n    \tdistanceToPlane: function ( plane ) {\n\n    \t\tvar denominator = plane.normal.dot( this.direction );\n\n    \t\tif ( denominator === 0 ) {\n\n    \t\t\t// line is coplanar, return origin\n    \t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n    \t\t\t\treturn 0;\n\n    \t\t\t}\n\n    \t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n    \t\t\treturn null;\n\n    \t\t}\n\n    \t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n    \t\t// Return if the ray never intersects the plane\n\n    \t\treturn t >= 0 ? t :  null;\n\n    \t},\n\n    \tintersectPlane: function ( plane, optionalTarget ) {\n\n    \t\tvar t = this.distanceToPlane( plane );\n\n    \t\tif ( t === null ) {\n\n    \t\t\treturn null;\n\n    \t\t}\n\n    \t\treturn this.at( t, optionalTarget );\n\n    \t},\n\n\n\n    \tintersectsPlane: function ( plane ) {\n\n    \t\t// check if the ray lies on the plane first\n\n    \t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n    \t\tif ( distToPoint === 0 ) {\n\n    \t\t\treturn true;\n\n    \t\t}\n\n    \t\tvar denominator = plane.normal.dot( this.direction );\n\n    \t\tif ( denominator * distToPoint < 0 ) {\n\n    \t\t\treturn true;\n\n    \t\t}\n\n    \t\t// ray origin is behind the plane (and is pointing behind it)\n\n    \t\treturn false;\n\n    \t},\n\n    \tintersectBox: function ( box, optionalTarget ) {\n\n    \t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n    \t\tvar invdirx = 1 / this.direction.x,\n    \t\t\tinvdiry = 1 / this.direction.y,\n    \t\t\tinvdirz = 1 / this.direction.z;\n\n    \t\tvar origin = this.origin;\n\n    \t\tif ( invdirx >= 0 ) {\n\n    \t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n    \t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n    \t\t} else {\n\n    \t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n    \t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n    \t\t}\n\n    \t\tif ( invdiry >= 0 ) {\n\n    \t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n    \t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n    \t\t} else {\n\n    \t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n    \t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n    \t\t}\n\n    \t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n    \t\t// These lines also handle the case where tmin or tmax is NaN\n    \t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n    \t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n    \t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n    \t\tif ( invdirz >= 0 ) {\n\n    \t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n    \t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n    \t\t} else {\n\n    \t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n    \t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n    \t\t}\n\n    \t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n    \t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n    \t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n    \t\t//return point closest to the ray (positive side)\n\n    \t\tif ( tmax < 0 ) return null;\n\n    \t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n    \t},\n\n    \tintersectsBox: ( function () {\n\n    \t\tvar v = new Vector3();\n\n    \t\treturn function intersectsBox( box ) {\n\n    \t\t\treturn this.intersectBox( box, v ) !== null;\n\n    \t\t};\n\n    \t} )(),\n\n    \tintersectTriangle: function () {\n\n    \t\t// Compute the offset origin, edges, and normal.\n    \t\tvar diff = new Vector3();\n    \t\tvar edge1 = new Vector3();\n    \t\tvar edge2 = new Vector3();\n    \t\tvar normal = new Vector3();\n\n    \t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n    \t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n    \t\t\tedge1.subVectors( b, a );\n    \t\t\tedge2.subVectors( c, a );\n    \t\t\tnormal.crossVectors( edge1, edge2 );\n\n    \t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n    \t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n    \t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n    \t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n    \t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n    \t\t\tvar DdN = this.direction.dot( normal );\n    \t\t\tvar sign;\n\n    \t\t\tif ( DdN > 0 ) {\n\n    \t\t\t\tif ( backfaceCulling ) return null;\n    \t\t\t\tsign = 1;\n\n    \t\t\t} else if ( DdN < 0 ) {\n\n    \t\t\t\tsign = - 1;\n    \t\t\t\tDdN = - DdN;\n\n    \t\t\t} else {\n\n    \t\t\t\treturn null;\n\n    \t\t\t}\n\n    \t\t\tdiff.subVectors( this.origin, a );\n    \t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n    \t\t\t// b1 < 0, no intersection\n    \t\t\tif ( DdQxE2 < 0 ) {\n\n    \t\t\t\treturn null;\n\n    \t\t\t}\n\n    \t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n    \t\t\t// b2 < 0, no intersection\n    \t\t\tif ( DdE1xQ < 0 ) {\n\n    \t\t\t\treturn null;\n\n    \t\t\t}\n\n    \t\t\t// b1+b2 > 1, no intersection\n    \t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n    \t\t\t\treturn null;\n\n    \t\t\t}\n\n    \t\t\t// Line intersects triangle, check if ray does.\n    \t\t\tvar QdN = - sign * diff.dot( normal );\n\n    \t\t\t// t < 0, no intersection\n    \t\t\tif ( QdN < 0 ) {\n\n    \t\t\t\treturn null;\n\n    \t\t\t}\n\n    \t\t\t// Ray intersects triangle.\n    \t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n    \t\t};\n\n    \t}(),\n\n    \tapplyMatrix4: function ( matrix4 ) {\n\n    \t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\n    \t\tthis.origin.applyMatrix4( matrix4 );\n    \t\tthis.direction.sub( this.origin );\n    \t\tthis.direction.normalize();\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( ray ) {\n\n    \t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author bhouston / http://clara.io\n     */\n\n    function Euler( x, y, z, order ) {\n\n    \tthis._x = x || 0;\n    \tthis._y = y || 0;\n    \tthis._z = z || 0;\n    \tthis._order = order || Euler.DefaultOrder;\n\n    }\n\n    Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n    Euler.DefaultOrder = 'XYZ';\n\n    Euler.prototype = {\n\n    \tconstructor: Euler,\n\n    \tisEuler: true,\n\n    \tget x () {\n\n    \t\treturn this._x;\n\n    \t},\n\n    \tset x ( value ) {\n\n    \t\tthis._x = value;\n    \t\tthis.onChangeCallback();\n\n    \t},\n\n    \tget y () {\n\n    \t\treturn this._y;\n\n    \t},\n\n    \tset y ( value ) {\n\n    \t\tthis._y = value;\n    \t\tthis.onChangeCallback();\n\n    \t},\n\n    \tget z () {\n\n    \t\treturn this._z;\n\n    \t},\n\n    \tset z ( value ) {\n\n    \t\tthis._z = value;\n    \t\tthis.onChangeCallback();\n\n    \t},\n\n    \tget order () {\n\n    \t\treturn this._order;\n\n    \t},\n\n    \tset order ( value ) {\n\n    \t\tthis._order = value;\n    \t\tthis.onChangeCallback();\n\n    \t},\n\n    \tset: function ( x, y, z, order ) {\n\n    \t\tthis._x = x;\n    \t\tthis._y = y;\n    \t\tthis._z = z;\n    \t\tthis._order = order || this._order;\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n    \t},\n\n    \tcopy: function ( euler ) {\n\n    \t\tthis._x = euler._x;\n    \t\tthis._y = euler._y;\n    \t\tthis._z = euler._z;\n    \t\tthis._order = euler._order;\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromRotationMatrix: function ( m, order, update ) {\n\n    \t\tvar clamp = exports.Math.clamp;\n\n    \t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    \t\tvar te = m.elements;\n    \t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n    \t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n    \t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n    \t\torder = order || this._order;\n\n    \t\tif ( order === 'XYZ' ) {\n\n    \t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n    \t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n    \t\t\t\tthis._x = Math.atan2( - m23, m33 );\n    \t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis._x = Math.atan2( m32, m22 );\n    \t\t\t\tthis._z = 0;\n\n    \t\t\t}\n\n    \t\t} else if ( order === 'YXZ' ) {\n\n    \t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n    \t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n    \t\t\t\tthis._y = Math.atan2( m13, m33 );\n    \t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis._y = Math.atan2( - m31, m11 );\n    \t\t\t\tthis._z = 0;\n\n    \t\t\t}\n\n    \t\t} else if ( order === 'ZXY' ) {\n\n    \t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n    \t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n    \t\t\t\tthis._y = Math.atan2( - m31, m33 );\n    \t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis._y = 0;\n    \t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n    \t\t\t}\n\n    \t\t} else if ( order === 'ZYX' ) {\n\n    \t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n    \t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n    \t\t\t\tthis._x = Math.atan2( m32, m33 );\n    \t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis._x = 0;\n    \t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n    \t\t\t}\n\n    \t\t} else if ( order === 'YZX' ) {\n\n    \t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n    \t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n    \t\t\t\tthis._x = Math.atan2( - m23, m22 );\n    \t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis._x = 0;\n    \t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n    \t\t\t}\n\n    \t\t} else if ( order === 'XZY' ) {\n\n    \t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n    \t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n    \t\t\t\tthis._x = Math.atan2( m32, m22 );\n    \t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis._x = Math.atan2( - m23, m33 );\n    \t\t\t\tthis._y = 0;\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n    \t\t}\n\n    \t\tthis._order = order;\n\n    \t\tif ( update !== false ) this.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromQuaternion: function () {\n\n    \t\tvar matrix;\n\n    \t\treturn function setFromQuaternion( q, order, update ) {\n\n    \t\t\tif ( matrix === undefined ) matrix = new Matrix4();\n\n    \t\t\tmatrix.makeRotationFromQuaternion( q );\n\n    \t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n    \t\t};\n\n    \t}(),\n\n    \tsetFromVector3: function ( v, order ) {\n\n    \t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n    \t},\n\n    \treorder: function () {\n\n    \t\t// WARNING: this discards revolution information -bhouston\n\n    \t\tvar q = new Quaternion();\n\n    \t\treturn function reorder( newOrder ) {\n\n    \t\t\tq.setFromEuler( this );\n\n    \t\t\treturn this.setFromQuaternion( q, newOrder );\n\n    \t\t};\n\n    \t}(),\n\n    \tequals: function ( euler ) {\n\n    \t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n    \t},\n\n    \tfromArray: function ( array ) {\n\n    \t\tthis._x = array[ 0 ];\n    \t\tthis._y = array[ 1 ];\n    \t\tthis._z = array[ 2 ];\n    \t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n    \t\tthis.onChangeCallback();\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoArray: function ( array, offset ) {\n\n    \t\tif ( array === undefined ) array = [];\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tarray[ offset ] = this._x;\n    \t\tarray[ offset + 1 ] = this._y;\n    \t\tarray[ offset + 2 ] = this._z;\n    \t\tarray[ offset + 3 ] = this._order;\n\n    \t\treturn array;\n\n    \t},\n\n    \ttoVector3: function ( optionalResult ) {\n\n    \t\tif ( optionalResult ) {\n\n    \t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n    \t\t} else {\n\n    \t\t\treturn new Vector3( this._x, this._y, this._z );\n\n    \t\t}\n\n    \t},\n\n    \tonChange: function ( callback ) {\n\n    \t\tthis.onChangeCallback = callback;\n\n    \t\treturn this;\n\n    \t},\n\n    \tonChangeCallback: function () {}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Layers() {\n\n    \tthis.mask = 1;\n\n    }\n\n    Layers.prototype = {\n\n    \tconstructor: Layers,\n\n    \tset: function ( channel ) {\n\n    \t\tthis.mask = 1 << channel;\n\n    \t},\n\n    \tenable: function ( channel ) {\n\n    \t\tthis.mask |= 1 << channel;\n\n    \t},\n\n    \ttoggle: function ( channel ) {\n\n    \t\tthis.mask ^= 1 << channel;\n\n    \t},\n\n    \tdisable: function ( channel ) {\n\n    \t\tthis.mask &= ~ ( 1 << channel );\n\n    \t},\n\n    \ttest: function ( layers ) {\n\n    \t\treturn ( this.mask & layers.mask ) !== 0;\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     * @author WestLangley / http://github.com/WestLangley\n     * @author elephantatwork / www.elephantatwork.ch\n     */\n\n    function Object3D() {\n\n    \tObject.defineProperty( this, 'id', { value: Object3DIdCount() } );\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.name = '';\n    \tthis.type = 'Object3D';\n\n    \tthis.parent = null;\n    \tthis.children = [];\n\n    \tthis.up = Object3D.DefaultUp.clone();\n\n    \tvar position = new Vector3();\n    \tvar rotation = new Euler();\n    \tvar quaternion = new Quaternion();\n    \tvar scale = new Vector3( 1, 1, 1 );\n\n    \tfunction onRotationChange() {\n\n    \t\tquaternion.setFromEuler( rotation, false );\n\n    \t}\n\n    \tfunction onQuaternionChange() {\n\n    \t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n    \t}\n\n    \trotation.onChange( onRotationChange );\n    \tquaternion.onChange( onQuaternionChange );\n\n    \tObject.defineProperties( this, {\n    \t\tposition: {\n    \t\t\tenumerable: true,\n    \t\t\tvalue: position\n    \t\t},\n    \t\trotation: {\n    \t\t\tenumerable: true,\n    \t\t\tvalue: rotation\n    \t\t},\n    \t\tquaternion: {\n    \t\t\tenumerable: true,\n    \t\t\tvalue: quaternion\n    \t\t},\n    \t\tscale: {\n    \t\t\tenumerable: true,\n    \t\t\tvalue: scale\n    \t\t},\n    \t\tmodelViewMatrix: {\n    \t\t\tvalue: new Matrix4()\n    \t\t},\n    \t\tnormalMatrix: {\n    \t\t\tvalue: new Matrix3()\n    \t\t}\n    \t} );\n\n    \tthis.matrix = new Matrix4();\n    \tthis.matrixWorld = new Matrix4();\n\n    \tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n    \tthis.matrixWorldNeedsUpdate = false;\n\n    \tthis.layers = new Layers();\n    \tthis.visible = true;\n\n    \tthis.castShadow = false;\n    \tthis.receiveShadow = false;\n\n    \tthis.frustumCulled = true;\n    \tthis.renderOrder = 0;\n\n    \tthis.userData = {};\n\n    \tthis.onBeforeRender = null;\n\n    }\n\n    Object3D.DefaultUp = new Vector3( 0, 1, 0 );\n    Object3D.DefaultMatrixAutoUpdate = true;\n\n    Object.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n    \tisObject3D: true,\n\n    \tapplyMatrix: function ( matrix ) {\n\n    \t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n    \t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n    \t},\n\n    \tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n    \t\t// assumes axis is normalized\n\n    \t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n    \t},\n\n    \tsetRotationFromEuler: function ( euler ) {\n\n    \t\tthis.quaternion.setFromEuler( euler, true );\n\n    \t},\n\n    \tsetRotationFromMatrix: function ( m ) {\n\n    \t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    \t\tthis.quaternion.setFromRotationMatrix( m );\n\n    \t},\n\n    \tsetRotationFromQuaternion: function ( q ) {\n\n    \t\t// assumes q is normalized\n\n    \t\tthis.quaternion.copy( q );\n\n    \t},\n\n    \trotateOnAxis: function () {\n\n    \t\t// rotate object on axis in object space\n    \t\t// axis is assumed to be normalized\n\n    \t\tvar q1 = new Quaternion();\n\n    \t\treturn function rotateOnAxis( axis, angle ) {\n\n    \t\t\tq1.setFromAxisAngle( axis, angle );\n\n    \t\t\tthis.quaternion.multiply( q1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \trotateX: function () {\n\n    \t\tvar v1 = new Vector3( 1, 0, 0 );\n\n    \t\treturn function rotateX( angle ) {\n\n    \t\t\treturn this.rotateOnAxis( v1, angle );\n\n    \t\t};\n\n    \t}(),\n\n    \trotateY: function () {\n\n    \t\tvar v1 = new Vector3( 0, 1, 0 );\n\n    \t\treturn function rotateY( angle ) {\n\n    \t\t\treturn this.rotateOnAxis( v1, angle );\n\n    \t\t};\n\n    \t}(),\n\n    \trotateZ: function () {\n\n    \t\tvar v1 = new Vector3( 0, 0, 1 );\n\n    \t\treturn function rotateZ( angle ) {\n\n    \t\t\treturn this.rotateOnAxis( v1, angle );\n\n    \t\t};\n\n    \t}(),\n\n    \ttranslateOnAxis: function () {\n\n    \t\t// translate object by distance along axis in object space\n    \t\t// axis is assumed to be normalized\n\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function translateOnAxis( axis, distance ) {\n\n    \t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n    \t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \ttranslateX: function () {\n\n    \t\tvar v1 = new Vector3( 1, 0, 0 );\n\n    \t\treturn function translateX( distance ) {\n\n    \t\t\treturn this.translateOnAxis( v1, distance );\n\n    \t\t};\n\n    \t}(),\n\n    \ttranslateY: function () {\n\n    \t\tvar v1 = new Vector3( 0, 1, 0 );\n\n    \t\treturn function translateY( distance ) {\n\n    \t\t\treturn this.translateOnAxis( v1, distance );\n\n    \t\t};\n\n    \t}(),\n\n    \ttranslateZ: function () {\n\n    \t\tvar v1 = new Vector3( 0, 0, 1 );\n\n    \t\treturn function translateZ( distance ) {\n\n    \t\t\treturn this.translateOnAxis( v1, distance );\n\n    \t\t};\n\n    \t}(),\n\n    \tlocalToWorld: function ( vector ) {\n\n    \t\treturn vector.applyMatrix4( this.matrixWorld );\n\n    \t},\n\n    \tworldToLocal: function () {\n\n    \t\tvar m1 = new Matrix4();\n\n    \t\treturn function worldToLocal( vector ) {\n\n    \t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n    \t\t};\n\n    \t}(),\n\n    \tlookAt: function () {\n\n    \t\t// This routine does not support objects with rotated and/or translated parent(s)\n\n    \t\tvar m1 = new Matrix4();\n\n    \t\treturn function lookAt( vector ) {\n\n    \t\t\tm1.lookAt( vector, this.position, this.up );\n\n    \t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n    \t\t};\n\n    \t}(),\n\n    \tadd: function ( object ) {\n\n    \t\tif ( arguments.length > 1 ) {\n\n    \t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n    \t\t\t\tthis.add( arguments[ i ] );\n\n    \t\t\t}\n\n    \t\t\treturn this;\n\n    \t\t}\n\n    \t\tif ( object === this ) {\n\n    \t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n    \t\t\treturn this;\n\n    \t\t}\n\n    \t\tif ( (object && object.isObject3D) ) {\n\n    \t\t\tif ( object.parent !== null ) {\n\n    \t\t\t\tobject.parent.remove( object );\n\n    \t\t\t}\n\n    \t\t\tobject.parent = this;\n    \t\t\tobject.dispatchEvent( { type: 'added' } );\n\n    \t\t\tthis.children.push( object );\n\n    \t\t} else {\n\n    \t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tremove: function ( object ) {\n\n    \t\tif ( arguments.length > 1 ) {\n\n    \t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n    \t\t\t\tthis.remove( arguments[ i ] );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar index = this.children.indexOf( object );\n\n    \t\tif ( index !== - 1 ) {\n\n    \t\t\tobject.parent = null;\n\n    \t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n    \t\t\tthis.children.splice( index, 1 );\n\n    \t\t}\n\n    \t},\n\n    \tgetObjectById: function ( id ) {\n\n    \t\treturn this.getObjectByProperty( 'id', id );\n\n    \t},\n\n    \tgetObjectByName: function ( name ) {\n\n    \t\treturn this.getObjectByProperty( 'name', name );\n\n    \t},\n\n    \tgetObjectByProperty: function ( name, value ) {\n\n    \t\tif ( this[ name ] === value ) return this;\n\n    \t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n    \t\t\tvar child = this.children[ i ];\n    \t\t\tvar object = child.getObjectByProperty( name, value );\n\n    \t\t\tif ( object !== undefined ) {\n\n    \t\t\t\treturn object;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn undefined;\n\n    \t},\n\n    \tgetWorldPosition: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\tthis.updateMatrixWorld( true );\n\n    \t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n    \t},\n\n    \tgetWorldQuaternion: function () {\n\n    \t\tvar position = new Vector3();\n    \t\tvar scale = new Vector3();\n\n    \t\treturn function getWorldQuaternion( optionalTarget ) {\n\n    \t\t\tvar result = optionalTarget || new Quaternion();\n\n    \t\t\tthis.updateMatrixWorld( true );\n\n    \t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n    \t\t\treturn result;\n\n    \t\t};\n\n    \t}(),\n\n    \tgetWorldRotation: function () {\n\n    \t\tvar quaternion = new Quaternion();\n\n    \t\treturn function getWorldRotation( optionalTarget ) {\n\n    \t\t\tvar result = optionalTarget || new Euler();\n\n    \t\t\tthis.getWorldQuaternion( quaternion );\n\n    \t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n    \t\t};\n\n    \t}(),\n\n    \tgetWorldScale: function () {\n\n    \t\tvar position = new Vector3();\n    \t\tvar quaternion = new Quaternion();\n\n    \t\treturn function getWorldScale( optionalTarget ) {\n\n    \t\t\tvar result = optionalTarget || new Vector3();\n\n    \t\t\tthis.updateMatrixWorld( true );\n\n    \t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n    \t\t\treturn result;\n\n    \t\t};\n\n    \t}(),\n\n    \tgetWorldDirection: function () {\n\n    \t\tvar quaternion = new Quaternion();\n\n    \t\treturn function getWorldDirection( optionalTarget ) {\n\n    \t\t\tvar result = optionalTarget || new Vector3();\n\n    \t\t\tthis.getWorldQuaternion( quaternion );\n\n    \t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n    \t\t};\n\n    \t}(),\n\n    \traycast: function () {},\n\n    \ttraverse: function ( callback ) {\n\n    \t\tcallback( this );\n\n    \t\tvar children = this.children;\n\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n    \t\t\tchildren[ i ].traverse( callback );\n\n    \t\t}\n\n    \t},\n\n    \ttraverseVisible: function ( callback ) {\n\n    \t\tif ( this.visible === false ) return;\n\n    \t\tcallback( this );\n\n    \t\tvar children = this.children;\n\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n    \t\t\tchildren[ i ].traverseVisible( callback );\n\n    \t\t}\n\n    \t},\n\n    \ttraverseAncestors: function ( callback ) {\n\n    \t\tvar parent = this.parent;\n\n    \t\tif ( parent !== null ) {\n\n    \t\t\tcallback( parent );\n\n    \t\t\tparent.traverseAncestors( callback );\n\n    \t\t}\n\n    \t},\n\n    \tupdateMatrix: function () {\n\n    \t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n    \t\tthis.matrixWorldNeedsUpdate = true;\n\n    \t},\n\n    \tupdateMatrixWorld: function ( force ) {\n\n    \t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\n\n    \t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\n\n    \t\t\tif ( this.parent === null ) {\n\n    \t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n    \t\t\t}\n\n    \t\t\tthis.matrixWorldNeedsUpdate = false;\n\n    \t\t\tforce = true;\n\n    \t\t}\n\n    \t\t// update children\n\n    \t\tvar children = this.children;\n\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n    \t\t\tchildren[ i ].updateMatrixWorld( force );\n\n    \t\t}\n\n    \t},\n\n    \ttoJSON: function ( meta ) {\n\n    \t\t// meta is '' when called from JSON.stringify\n    \t\tvar isRootObject = ( meta === undefined || meta === '' );\n\n    \t\tvar output = {};\n\n    \t\t// meta is a hash used to collect geometries, materials.\n    \t\t// not providing it implies that this is the root object\n    \t\t// being serialized.\n    \t\tif ( isRootObject ) {\n\n    \t\t\t// initialize meta obj\n    \t\t\tmeta = {\n    \t\t\t\tgeometries: {},\n    \t\t\t\tmaterials: {},\n    \t\t\t\ttextures: {},\n    \t\t\t\timages: {}\n    \t\t\t};\n\n    \t\t\toutput.metadata = {\n    \t\t\t\tversion: 4.4,\n    \t\t\t\ttype: 'Object',\n    \t\t\t\tgenerator: 'Object3D.toJSON'\n    \t\t\t};\n\n    \t\t}\n\n    \t\t// standard Object3D serialization\n\n    \t\tvar object = {};\n\n    \t\tobject.uuid = this.uuid;\n    \t\tobject.type = this.type;\n\n    \t\tif ( this.name !== '' ) object.name = this.name;\n    \t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n    \t\tif ( this.castShadow === true ) object.castShadow = true;\n    \t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n    \t\tif ( this.visible === false ) object.visible = false;\n\n    \t\tobject.matrix = this.matrix.toArray();\n\n    \t\t//\n\n    \t\tif ( this.geometry !== undefined ) {\n\n    \t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\n\n    \t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\n\n    \t\t\t}\n\n    \t\t\tobject.geometry = this.geometry.uuid;\n\n    \t\t}\n\n    \t\tif ( this.material !== undefined ) {\n\n    \t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\n\n    \t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\n\n    \t\t\t}\n\n    \t\t\tobject.material = this.material.uuid;\n\n    \t\t}\n\n    \t\t//\n\n    \t\tif ( this.children.length > 0 ) {\n\n    \t\t\tobject.children = [];\n\n    \t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n    \t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( isRootObject ) {\n\n    \t\t\tvar geometries = extractFromCache( meta.geometries );\n    \t\t\tvar materials = extractFromCache( meta.materials );\n    \t\t\tvar textures = extractFromCache( meta.textures );\n    \t\t\tvar images = extractFromCache( meta.images );\n\n    \t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n    \t\t\tif ( materials.length > 0 ) output.materials = materials;\n    \t\t\tif ( textures.length > 0 ) output.textures = textures;\n    \t\t\tif ( images.length > 0 ) output.images = images;\n\n    \t\t}\n\n    \t\toutput.object = object;\n\n    \t\treturn output;\n\n    \t\t// extract data from the cache hash\n    \t\t// remove metadata on each item\n    \t\t// and return as array\n    \t\tfunction extractFromCache( cache ) {\n\n    \t\t\tvar values = [];\n    \t\t\tfor ( var key in cache ) {\n\n    \t\t\t\tvar data = cache[ key ];\n    \t\t\t\tdelete data.metadata;\n    \t\t\t\tvalues.push( data );\n\n    \t\t\t}\n    \t\t\treturn values;\n\n    \t\t}\n\n    \t},\n\n    \tclone: function ( recursive ) {\n\n    \t\treturn new this.constructor().copy( this, recursive );\n\n    \t},\n\n    \tcopy: function ( source, recursive ) {\n\n    \t\tif ( recursive === undefined ) recursive = true;\n\n    \t\tthis.name = source.name;\n\n    \t\tthis.up.copy( source.up );\n\n    \t\tthis.position.copy( source.position );\n    \t\tthis.quaternion.copy( source.quaternion );\n    \t\tthis.scale.copy( source.scale );\n\n    \t\tthis.matrix.copy( source.matrix );\n    \t\tthis.matrixWorld.copy( source.matrixWorld );\n\n    \t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n    \t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n    \t\tthis.visible = source.visible;\n\n    \t\tthis.castShadow = source.castShadow;\n    \t\tthis.receiveShadow = source.receiveShadow;\n\n    \t\tthis.frustumCulled = source.frustumCulled;\n    \t\tthis.renderOrder = source.renderOrder;\n\n    \t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n    \t\tif ( recursive === true ) {\n\n    \t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n    \t\t\t\tvar child = source.children[ i ];\n    \t\t\t\tthis.add( child.clone() );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    var count$2 = 0;\n    function Object3DIdCount() { return count$2++; };\n\n    /**\n     * @author bhouston / http://clara.io\n     */\n\n    function Line3( start, end ) {\n\n    \tthis.start = ( start !== undefined ) ? start : new Vector3();\n    \tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n    }\n\n    Line3.prototype = {\n\n    \tconstructor: Line3,\n\n    \tset: function ( start, end ) {\n\n    \t\tthis.start.copy( start );\n    \t\tthis.end.copy( end );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( line ) {\n\n    \t\tthis.start.copy( line.start );\n    \t\tthis.end.copy( line.end );\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetCenter: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n    \t},\n\n    \tdelta: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\treturn result.subVectors( this.end, this.start );\n\n    \t},\n\n    \tdistanceSq: function () {\n\n    \t\treturn this.start.distanceToSquared( this.end );\n\n    \t},\n\n    \tdistance: function () {\n\n    \t\treturn this.start.distanceTo( this.end );\n\n    \t},\n\n    \tat: function ( t, optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n    \t},\n\n    \tclosestPointToPointParameter: function () {\n\n    \t\tvar startP = new Vector3();\n    \t\tvar startEnd = new Vector3();\n\n    \t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n    \t\t\tstartP.subVectors( point, this.start );\n    \t\t\tstartEnd.subVectors( this.end, this.start );\n\n    \t\t\tvar startEnd2 = startEnd.dot( startEnd );\n    \t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n    \t\t\tvar t = startEnd_startP / startEnd2;\n\n    \t\t\tif ( clampToLine ) {\n\n    \t\t\t\tt = exports.Math.clamp( t, 0, 1 );\n\n    \t\t\t}\n\n    \t\t\treturn t;\n\n    \t\t};\n\n    \t}(),\n\n    \tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n    \t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n    \t},\n\n    \tapplyMatrix4: function ( matrix ) {\n\n    \t\tthis.start.applyMatrix4( matrix );\n    \t\tthis.end.applyMatrix4( matrix );\n\n    \t\treturn this;\n\n    \t},\n\n    \tequals: function ( line ) {\n\n    \t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n    \t}\n\n    };\n\n    /**\n     * @author bhouston / http://clara.io\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Triangle( a, b, c ) {\n\n    \tthis.a = ( a !== undefined ) ? a : new Vector3();\n    \tthis.b = ( b !== undefined ) ? b : new Vector3();\n    \tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n    }\n\n    Triangle.normal = function () {\n\n    \tvar v0 = new Vector3();\n\n    \treturn function normal( a, b, c, optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\tresult.subVectors( c, b );\n    \t\tv0.subVectors( a, b );\n    \t\tresult.cross( v0 );\n\n    \t\tvar resultLengthSq = result.lengthSq();\n    \t\tif ( resultLengthSq > 0 ) {\n\n    \t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n    \t\t}\n\n    \t\treturn result.set( 0, 0, 0 );\n\n    \t};\n\n    }();\n\n    // static/instance method to calculate barycentric coordinates\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n    Triangle.barycoordFromPoint = function () {\n\n    \tvar v0 = new Vector3();\n    \tvar v1 = new Vector3();\n    \tvar v2 = new Vector3();\n\n    \treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n    \t\tv0.subVectors( c, a );\n    \t\tv1.subVectors( b, a );\n    \t\tv2.subVectors( point, a );\n\n    \t\tvar dot00 = v0.dot( v0 );\n    \t\tvar dot01 = v0.dot( v1 );\n    \t\tvar dot02 = v0.dot( v2 );\n    \t\tvar dot11 = v1.dot( v1 );\n    \t\tvar dot12 = v1.dot( v2 );\n\n    \t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\t// collinear or singular triangle\n    \t\tif ( denom === 0 ) {\n\n    \t\t\t// arbitrary location outside of triangle?\n    \t\t\t// not sure if this is the best idea, maybe should be returning undefined\n    \t\t\treturn result.set( - 2, - 1, - 1 );\n\n    \t\t}\n\n    \t\tvar invDenom = 1 / denom;\n    \t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n    \t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n    \t\t// barycentric coordinates must always sum to 1\n    \t\treturn result.set( 1 - u - v, v, u );\n\n    \t};\n\n    }();\n\n    Triangle.containsPoint = function () {\n\n    \tvar v1 = new Vector3();\n\n    \treturn function containsPoint( point, a, b, c ) {\n\n    \t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n    \t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n    \t};\n\n    }();\n\n    Triangle.prototype = {\n\n    \tconstructor: Triangle,\n\n    \tset: function ( a, b, c ) {\n\n    \t\tthis.a.copy( a );\n    \t\tthis.b.copy( b );\n    \t\tthis.c.copy( c );\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n    \t\tthis.a.copy( points[ i0 ] );\n    \t\tthis.b.copy( points[ i1 ] );\n    \t\tthis.c.copy( points[ i2 ] );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( triangle ) {\n\n    \t\tthis.a.copy( triangle.a );\n    \t\tthis.b.copy( triangle.b );\n    \t\tthis.c.copy( triangle.c );\n\n    \t\treturn this;\n\n    \t},\n\n    \tarea: function () {\n\n    \t\tvar v0 = new Vector3();\n    \t\tvar v1 = new Vector3();\n\n    \t\treturn function area() {\n\n    \t\t\tv0.subVectors( this.c, this.b );\n    \t\t\tv1.subVectors( this.a, this.b );\n\n    \t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n    \t\t};\n\n    \t}(),\n\n    \tmidpoint: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n    \t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n    \t},\n\n    \tnormal: function ( optionalTarget ) {\n\n    \t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n    \t},\n\n    \tplane: function ( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Plane();\n\n    \t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n    \t},\n\n    \tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n    \t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n    \t},\n\n    \tcontainsPoint: function ( point ) {\n\n    \t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n    \t},\n\n    \tclosestPointToPoint: function () {\n\n    \t\tvar plane, edgeList, projectedPoint, closestPoint;\n\n    \t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n    \t\t\tif ( plane === undefined ) {\n\n    \t\t\t\tplane = new Plane();\n    \t\t\t\tedgeList = [ new Line3(), new Line3(), new Line3() ];\n    \t\t\t\tprojectedPoint = new Vector3();\n    \t\t\t\tclosestPoint = new Vector3();\n\n    \t\t\t}\n\n    \t\t\tvar result = optionalTarget || new Vector3();\n    \t\t\tvar minDistance = Infinity;\n\n    \t\t\t// project the point onto the plane of the triangle\n\n    \t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n    \t\t\tplane.projectPoint( point, projectedPoint );\n\n    \t\t\t// check if the projection lies within the triangle\n\n    \t\t\tif( this.containsPoint( projectedPoint ) === true ) {\n\n    \t\t\t\t// if so, this is the closest point\n\n    \t\t\t\tresult.copy( projectedPoint );\n\n    \t\t\t} else {\n\n    \t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n    \t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n    \t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n    \t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n    \t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\n\n    \t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n    \t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n    \t\t\t\t\tif( distance < minDistance ) {\n\n    \t\t\t\t\t\tminDistance = distance;\n\n    \t\t\t\t\t\tresult.copy( closestPoint );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn result;\n\n    \t\t};\n\n    \t}(),\n\n    \tequals: function ( triangle ) {\n\n    \t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Face3( a, b, c, normal, color, materialIndex ) {\n\n    \tthis.a = a;\n    \tthis.b = b;\n    \tthis.c = c;\n\n    \tthis.normal = (normal && normal.isVector3) ? normal : new Vector3();\n    \tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n    \tthis.color = (color && color.isColor) ? color : new Color();\n    \tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n    \tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n    }\n\n    Face3.prototype = {\n\n    \tconstructor: Face3,\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tthis.a = source.a;\n    \t\tthis.b = source.b;\n    \t\tthis.c = source.c;\n\n    \t\tthis.normal.copy( source.normal );\n    \t\tthis.color.copy( source.color );\n\n    \t\tthis.materialIndex = source.materialIndex;\n\n    \t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n    \t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n    \t\t}\n\n    \t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n    \t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * parameters = {\n     *  color: <hex>,\n     *  opacity: <float>,\n     *  map: new THREE.Texture( <Image> ),\n     *\n     *  aoMap: new THREE.Texture( <Image> ),\n     *  aoMapIntensity: <float>\n     *\n     *  specularMap: new THREE.Texture( <Image> ),\n     *\n     *  alphaMap: new THREE.Texture( <Image> ),\n     *\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n     *  combine: THREE.Multiply,\n     *  reflectivity: <float>,\n     *  refractionRatio: <float>,\n     *\n     *  shading: THREE.SmoothShading,\n     *  depthTest: <bool>,\n     *  depthWrite: <bool>,\n     *\n     *  wireframe: <boolean>,\n     *  wireframeLinewidth: <float>,\n     *\n     *  skinning: <bool>,\n     *  morphTargets: <bool>\n     * }\n     */\n\n    function MeshBasicMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'MeshBasicMaterial';\n\n    \tthis.color = new Color( 0xffffff ); // emissive\n\n    \tthis.map = null;\n\n    \tthis.aoMap = null;\n    \tthis.aoMapIntensity = 1.0;\n\n    \tthis.specularMap = null;\n\n    \tthis.alphaMap = null;\n\n    \tthis.envMap = null;\n    \tthis.combine = MultiplyOperation;\n    \tthis.reflectivity = 1;\n    \tthis.refractionRatio = 0.98;\n\n    \tthis.wireframe = false;\n    \tthis.wireframeLinewidth = 1;\n    \tthis.wireframeLinecap = 'round';\n    \tthis.wireframeLinejoin = 'round';\n\n    \tthis.skinning = false;\n    \tthis.morphTargets = false;\n\n    \tthis.lights = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    MeshBasicMaterial.prototype = Object.create( Material.prototype );\n    MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n    MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n    MeshBasicMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.color.copy( source.color );\n\n    \tthis.map = source.map;\n\n    \tthis.aoMap = source.aoMap;\n    \tthis.aoMapIntensity = source.aoMapIntensity;\n\n    \tthis.specularMap = source.specularMap;\n\n    \tthis.alphaMap = source.alphaMap;\n\n    \tthis.envMap = source.envMap;\n    \tthis.combine = source.combine;\n    \tthis.reflectivity = source.reflectivity;\n    \tthis.refractionRatio = source.refractionRatio;\n\n    \tthis.wireframe = source.wireframe;\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\n    \tthis.wireframeLinecap = source.wireframeLinecap;\n    \tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n    \tthis.skinning = source.skinning;\n    \tthis.morphTargets = source.morphTargets;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function BufferAttribute( array, itemSize, normalized ) {\n\n    \tif ( Array.isArray( array ) ) {\n\n    \t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n    \t}\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.array = array;\n    \tthis.itemSize = itemSize;\n    \tthis.count = array !== undefined ? array.length / itemSize : 0;\n    \tthis.normalized = normalized === true;\n\n    \tthis.dynamic = false;\n    \tthis.updateRange = { offset: 0, count: - 1 };\n\n    \tthis.version = 0;\n\n    }\n\n    BufferAttribute.prototype = {\n\n    \tconstructor: BufferAttribute,\n\n    \tisBufferAttribute: true,\n\n    \tset needsUpdate( value ) {\n\n    \t\tif ( value === true ) this.version ++;\n\n    \t},\n\n    \tsetDynamic: function ( value ) {\n\n    \t\tthis.dynamic = value;\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tthis.array = new source.array.constructor( source.array );\n    \t\tthis.itemSize = source.itemSize;\n    \t\tthis.count = source.count;\n    \t\tthis.normalized = source.normalized;\n\n    \t\tthis.dynamic = source.dynamic;\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyAt: function ( index1, attribute, index2 ) {\n\n    \t\tindex1 *= this.itemSize;\n    \t\tindex2 *= attribute.itemSize;\n\n    \t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n    \t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyArray: function ( array ) {\n\n    \t\tthis.array.set( array );\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyColorsArray: function ( colors ) {\n\n    \t\tvar array = this.array, offset = 0;\n\n    \t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n    \t\t\tvar color = colors[ i ];\n\n    \t\t\tif ( color === undefined ) {\n\n    \t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n    \t\t\t\tcolor = new Color();\n\n    \t\t\t}\n\n    \t\t\tarray[ offset ++ ] = color.r;\n    \t\t\tarray[ offset ++ ] = color.g;\n    \t\t\tarray[ offset ++ ] = color.b;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyIndicesArray: function ( indices ) {\n\n    \t\tvar array = this.array, offset = 0;\n\n    \t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n    \t\t\tvar index = indices[ i ];\n\n    \t\t\tarray[ offset ++ ] = index.a;\n    \t\t\tarray[ offset ++ ] = index.b;\n    \t\t\tarray[ offset ++ ] = index.c;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyVector2sArray: function ( vectors ) {\n\n    \t\tvar array = this.array, offset = 0;\n\n    \t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n    \t\t\tvar vector = vectors[ i ];\n\n    \t\t\tif ( vector === undefined ) {\n\n    \t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n    \t\t\t\tvector = new Vector2();\n\n    \t\t\t}\n\n    \t\t\tarray[ offset ++ ] = vector.x;\n    \t\t\tarray[ offset ++ ] = vector.y;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyVector3sArray: function ( vectors ) {\n\n    \t\tvar array = this.array, offset = 0;\n\n    \t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n    \t\t\tvar vector = vectors[ i ];\n\n    \t\t\tif ( vector === undefined ) {\n\n    \t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n    \t\t\t\tvector = new Vector3();\n\n    \t\t\t}\n\n    \t\t\tarray[ offset ++ ] = vector.x;\n    \t\t\tarray[ offset ++ ] = vector.y;\n    \t\t\tarray[ offset ++ ] = vector.z;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyVector4sArray: function ( vectors ) {\n\n    \t\tvar array = this.array, offset = 0;\n\n    \t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n    \t\t\tvar vector = vectors[ i ];\n\n    \t\t\tif ( vector === undefined ) {\n\n    \t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n    \t\t\t\tvector = new Vector4();\n\n    \t\t\t}\n\n    \t\t\tarray[ offset ++ ] = vector.x;\n    \t\t\tarray[ offset ++ ] = vector.y;\n    \t\t\tarray[ offset ++ ] = vector.z;\n    \t\t\tarray[ offset ++ ] = vector.w;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tset: function ( value, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tthis.array.set( value, offset );\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetX: function ( index ) {\n\n    \t\treturn this.array[ index * this.itemSize ];\n\n    \t},\n\n    \tsetX: function ( index, x ) {\n\n    \t\tthis.array[ index * this.itemSize ] = x;\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetY: function ( index ) {\n\n    \t\treturn this.array[ index * this.itemSize + 1 ];\n\n    \t},\n\n    \tsetY: function ( index, y ) {\n\n    \t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetZ: function ( index ) {\n\n    \t\treturn this.array[ index * this.itemSize + 2 ];\n\n    \t},\n\n    \tsetZ: function ( index, z ) {\n\n    \t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetW: function ( index ) {\n\n    \t\treturn this.array[ index * this.itemSize + 3 ];\n\n    \t},\n\n    \tsetW: function ( index, w ) {\n\n    \t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetXY: function ( index, x, y ) {\n\n    \t\tindex *= this.itemSize;\n\n    \t\tthis.array[ index + 0 ] = x;\n    \t\tthis.array[ index + 1 ] = y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetXYZ: function ( index, x, y, z ) {\n\n    \t\tindex *= this.itemSize;\n\n    \t\tthis.array[ index + 0 ] = x;\n    \t\tthis.array[ index + 1 ] = y;\n    \t\tthis.array[ index + 2 ] = z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetXYZW: function ( index, x, y, z, w ) {\n\n    \t\tindex *= this.itemSize;\n\n    \t\tthis.array[ index + 0 ] = x;\n    \t\tthis.array[ index + 1 ] = y;\n    \t\tthis.array[ index + 2 ] = z;\n    \t\tthis.array[ index + 3 ] = w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t}\n\n    };\n\n    //\n\n    function Int8Attribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Int8Array( array ), itemSize );\n\n    }\n\n    function Uint8Attribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Uint8Array( array ), itemSize );\n\n    }\n\n    function Uint8ClampedAttribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Uint8ClampedArray( array ), itemSize );\n\n    }\n\n    function Int16Attribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Int16Array( array ), itemSize );\n\n    }\n\n    function Uint16Attribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Uint16Array( array ), itemSize );\n\n    }\n\n    function Int32Attribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Int32Array( array ), itemSize );\n\n    }\n\n    function Uint32Attribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Uint32Array( array ), itemSize );\n\n    }\n\n    function Float32Attribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Float32Array( array ), itemSize );\n\n    }\n\n    function Float64Attribute( array, itemSize ) {\n\n    \treturn new BufferAttribute( new Float64Array( array ), itemSize );\n\n    }\n\n    // Deprecated\n\n    function DynamicBufferAttribute( array, itemSize ) {\n\n    \tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n    \treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n    }\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author kile / http://kile.stravaganza.org/\n     * @author alteredq / http://alteredqualia.com/\n     * @author mikael emtinger / http://gomo.se/\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     * @author bhouston / http://clara.io\n     */\n\n    function Geometry() {\n\n    \tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.name = '';\n    \tthis.type = 'Geometry';\n\n    \tthis.vertices = [];\n    \tthis.colors = [];\n    \tthis.faces = [];\n    \tthis.faceVertexUvs = [ [] ];\n\n    \tthis.morphTargets = [];\n    \tthis.morphNormals = [];\n\n    \tthis.skinWeights = [];\n    \tthis.skinIndices = [];\n\n    \tthis.lineDistances = [];\n\n    \tthis.boundingBox = null;\n    \tthis.boundingSphere = null;\n\n    \t// update flags\n\n    \tthis.elementsNeedUpdate = false;\n    \tthis.verticesNeedUpdate = false;\n    \tthis.uvsNeedUpdate = false;\n    \tthis.normalsNeedUpdate = false;\n    \tthis.colorsNeedUpdate = false;\n    \tthis.lineDistancesNeedUpdate = false;\n    \tthis.groupsNeedUpdate = false;\n\n    }\n\n    Object.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n    \tisGeometry: true,\n\n    \tapplyMatrix: function ( matrix ) {\n\n    \t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n    \t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n    \t\t\tvar vertex = this.vertices[ i ];\n    \t\t\tvertex.applyMatrix4( matrix );\n\n    \t\t}\n\n    \t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n    \t\t\tvar face = this.faces[ i ];\n    \t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n    \t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n    \t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( this.boundingBox !== null ) {\n\n    \t\t\tthis.computeBoundingBox();\n\n    \t\t}\n\n    \t\tif ( this.boundingSphere !== null ) {\n\n    \t\t\tthis.computeBoundingSphere();\n\n    \t\t}\n\n    \t\tthis.verticesNeedUpdate = true;\n    \t\tthis.normalsNeedUpdate = true;\n\n    \t\treturn this;\n\n    \t},\n\n    \trotateX: function () {\n\n    \t\t// rotate geometry around world x-axis\n\n    \t\tvar m1;\n\n    \t\treturn function rotateX( angle ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeRotationX( angle );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \trotateY: function () {\n\n    \t\t// rotate geometry around world y-axis\n\n    \t\tvar m1;\n\n    \t\treturn function rotateY( angle ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeRotationY( angle );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \trotateZ: function () {\n\n    \t\t// rotate geometry around world z-axis\n\n    \t\tvar m1;\n\n    \t\treturn function rotateZ( angle ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeRotationZ( angle );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \ttranslate: function () {\n\n    \t\t// translate geometry\n\n    \t\tvar m1;\n\n    \t\treturn function translate( x, y, z ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeTranslation( x, y, z );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tscale: function () {\n\n    \t\t// scale geometry\n\n    \t\tvar m1;\n\n    \t\treturn function scale( x, y, z ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeScale( x, y, z );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tlookAt: function () {\n\n    \t\tvar obj;\n\n    \t\treturn function lookAt( vector ) {\n\n    \t\t\tif ( obj === undefined ) obj = new Object3D();\n\n    \t\t\tobj.lookAt( vector );\n\n    \t\t\tobj.updateMatrix();\n\n    \t\t\tthis.applyMatrix( obj.matrix );\n\n    \t\t};\n\n    \t}(),\n\n    \tfromBufferGeometry: function ( geometry ) {\n\n    \t\tvar scope = this;\n\n    \t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n    \t\tvar attributes = geometry.attributes;\n\n    \t\tvar positions = attributes.position.array;\n    \t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n    \t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n    \t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n    \t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n    \t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n    \t\tvar tempNormals = [];\n    \t\tvar tempUVs = [];\n    \t\tvar tempUVs2 = [];\n\n    \t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n    \t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n    \t\t\tif ( normals !== undefined ) {\n\n    \t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n    \t\t\t}\n\n    \t\t\tif ( colors !== undefined ) {\n\n    \t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n    \t\t\t}\n\n    \t\t\tif ( uvs !== undefined ) {\n\n    \t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n    \t\t\t}\n\n    \t\t\tif ( uvs2 !== undefined ) {\n\n    \t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfunction addFace( a, b, c, materialIndex ) {\n\n    \t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n    \t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n    \t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n    \t\t\tscope.faces.push( face );\n\n    \t\t\tif ( uvs !== undefined ) {\n\n    \t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n    \t\t\t}\n\n    \t\t\tif ( uvs2 !== undefined ) {\n\n    \t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( indices !== undefined ) {\n\n    \t\t\tvar groups = geometry.groups;\n\n    \t\t\tif ( groups.length > 0 ) {\n\n    \t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n    \t\t\t\t\tvar group = groups[ i ];\n\n    \t\t\t\t\tvar start = group.start;\n    \t\t\t\t\tvar count = group.count;\n\n    \t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n    \t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n    \t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n    \t\t\t\taddFace( i, i + 1, i + 2 );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tthis.computeFaceNormals();\n\n    \t\tif ( geometry.boundingBox !== null ) {\n\n    \t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n    \t\t}\n\n    \t\tif ( geometry.boundingSphere !== null ) {\n\n    \t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tcenter: function () {\n\n    \t\tthis.computeBoundingBox();\n\n    \t\tvar offset = this.boundingBox.getCenter().negate();\n\n    \t\tthis.translate( offset.x, offset.y, offset.z );\n\n    \t\treturn offset;\n\n    \t},\n\n    \tnormalize: function () {\n\n    \t\tthis.computeBoundingSphere();\n\n    \t\tvar center = this.boundingSphere.center;\n    \t\tvar radius = this.boundingSphere.radius;\n\n    \t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n    \t\tvar matrix = new Matrix4();\n    \t\tmatrix.set(\n    \t\t\ts, 0, 0, - s * center.x,\n    \t\t\t0, s, 0, - s * center.y,\n    \t\t\t0, 0, s, - s * center.z,\n    \t\t\t0, 0, 0, 1\n    \t\t);\n\n    \t\tthis.applyMatrix( matrix );\n\n    \t\treturn this;\n\n    \t},\n\n    \tcomputeFaceNormals: function () {\n\n    \t\tvar cb = new Vector3(), ab = new Vector3();\n\n    \t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n    \t\t\tvar face = this.faces[ f ];\n\n    \t\t\tvar vA = this.vertices[ face.a ];\n    \t\t\tvar vB = this.vertices[ face.b ];\n    \t\t\tvar vC = this.vertices[ face.c ];\n\n    \t\t\tcb.subVectors( vC, vB );\n    \t\t\tab.subVectors( vA, vB );\n    \t\t\tcb.cross( ab );\n\n    \t\t\tcb.normalize();\n\n    \t\t\tface.normal.copy( cb );\n\n    \t\t}\n\n    \t},\n\n    \tcomputeVertexNormals: function ( areaWeighted ) {\n\n    \t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n    \t\tvar v, vl, f, fl, face, vertices;\n\n    \t\tvertices = new Array( this.vertices.length );\n\n    \t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n    \t\t\tvertices[ v ] = new Vector3();\n\n    \t\t}\n\n    \t\tif ( areaWeighted ) {\n\n    \t\t\t// vertex normals weighted by triangle areas\n    \t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n    \t\t\tvar vA, vB, vC;\n    \t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n    \t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n    \t\t\t\tface = this.faces[ f ];\n\n    \t\t\t\tvA = this.vertices[ face.a ];\n    \t\t\t\tvB = this.vertices[ face.b ];\n    \t\t\t\tvC = this.vertices[ face.c ];\n\n    \t\t\t\tcb.subVectors( vC, vB );\n    \t\t\t\tab.subVectors( vA, vB );\n    \t\t\t\tcb.cross( ab );\n\n    \t\t\t\tvertices[ face.a ].add( cb );\n    \t\t\t\tvertices[ face.b ].add( cb );\n    \t\t\t\tvertices[ face.c ].add( cb );\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n    \t\t\t\tface = this.faces[ f ];\n\n    \t\t\t\tvertices[ face.a ].add( face.normal );\n    \t\t\t\tvertices[ face.b ].add( face.normal );\n    \t\t\t\tvertices[ face.c ].add( face.normal );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n    \t\t\tvertices[ v ].normalize();\n\n    \t\t}\n\n    \t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n    \t\t\tface = this.faces[ f ];\n\n    \t\t\tvar vertexNormals = face.vertexNormals;\n\n    \t\t\tif ( vertexNormals.length === 3 ) {\n\n    \t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n    \t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n    \t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n    \t\t\t} else {\n\n    \t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n    \t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n    \t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( this.faces.length > 0 ) {\n\n    \t\t\tthis.normalsNeedUpdate = true;\n\n    \t\t}\n\n    \t},\n\n    \tcomputeMorphNormals: function () {\n\n    \t\tvar i, il, f, fl, face;\n\n    \t\t// save original normals\n    \t\t// - create temp variables on first access\n    \t\t//   otherwise just copy (for faster repeated calls)\n\n    \t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n    \t\t\tface = this.faces[ f ];\n\n    \t\t\tif ( ! face.__originalFaceNormal ) {\n\n    \t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n    \t\t\t} else {\n\n    \t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n    \t\t\t}\n\n    \t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n    \t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n    \t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n    \t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// use temp geometry to compute face and vertex normals for each morph\n\n    \t\tvar tmpGeo = new Geometry();\n    \t\ttmpGeo.faces = this.faces;\n\n    \t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n    \t\t\t// create on first access\n\n    \t\t\tif ( ! this.morphNormals[ i ] ) {\n\n    \t\t\t\tthis.morphNormals[ i ] = {};\n    \t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n    \t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n    \t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n    \t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n    \t\t\t\tvar faceNormal, vertexNormals;\n\n    \t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n    \t\t\t\t\tfaceNormal = new Vector3();\n    \t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n    \t\t\t\t\tdstNormalsFace.push( faceNormal );\n    \t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tvar morphNormals = this.morphNormals[ i ];\n\n    \t\t\t// set vertices to morph target\n\n    \t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n    \t\t\t// compute morph normals\n\n    \t\t\ttmpGeo.computeFaceNormals();\n    \t\t\ttmpGeo.computeVertexNormals();\n\n    \t\t\t// store morph normals\n\n    \t\t\tvar faceNormal, vertexNormals;\n\n    \t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n    \t\t\t\tface = this.faces[ f ];\n\n    \t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n    \t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n    \t\t\t\tfaceNormal.copy( face.normal );\n\n    \t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n    \t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n    \t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// restore original normals\n\n    \t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n    \t\t\tface = this.faces[ f ];\n\n    \t\t\tface.normal = face.__originalFaceNormal;\n    \t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n    \t\t}\n\n    \t},\n\n    \tcomputeTangents: function () {\n\n    \t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n    \t},\n\n    \tcomputeLineDistances: function () {\n\n    \t\tvar d = 0;\n    \t\tvar vertices = this.vertices;\n\n    \t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n    \t\t\tif ( i > 0 ) {\n\n    \t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n    \t\t\t}\n\n    \t\t\tthis.lineDistances[ i ] = d;\n\n    \t\t}\n\n    \t},\n\n    \tcomputeBoundingBox: function () {\n\n    \t\tif ( this.boundingBox === null ) {\n\n    \t\t\tthis.boundingBox = new Box3();\n\n    \t\t}\n\n    \t\tthis.boundingBox.setFromPoints( this.vertices );\n\n    \t},\n\n    \tcomputeBoundingSphere: function () {\n\n    \t\tif ( this.boundingSphere === null ) {\n\n    \t\t\tthis.boundingSphere = new Sphere();\n\n    \t\t}\n\n    \t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n    \t},\n\n    \tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n    \t\tif ( (geometry && geometry.isGeometry) === false ) {\n\n    \t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tvar normalMatrix,\n    \t\tvertexOffset = this.vertices.length,\n    \t\tvertices1 = this.vertices,\n    \t\tvertices2 = geometry.vertices,\n    \t\tfaces1 = this.faces,\n    \t\tfaces2 = geometry.faces,\n    \t\tuvs1 = this.faceVertexUvs[ 0 ],\n    \t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n    \t\tcolors1 = this.colors,\n    \t\tcolors2 = geometry.colors;\n\n    \t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n    \t\tif ( matrix !== undefined ) {\n\n    \t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n    \t\t}\n\n    \t\t// vertices\n\n    \t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n    \t\t\tvar vertex = vertices2[ i ];\n\n    \t\t\tvar vertexCopy = vertex.clone();\n\n    \t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n    \t\t\tvertices1.push( vertexCopy );\n\n    \t\t}\n\n    \t\t// colors\n\n    \t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n    \t\t\tcolors1.push( colors2[ i ].clone() );\n\n    \t\t}\n\n    \t\t// faces\n\n    \t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n    \t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n    \t\t\tfaceVertexNormals = face.vertexNormals,\n    \t\t\tfaceVertexColors = face.vertexColors;\n\n    \t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n    \t\t\tfaceCopy.normal.copy( face.normal );\n\n    \t\t\tif ( normalMatrix !== undefined ) {\n\n    \t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n    \t\t\t}\n\n    \t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n    \t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n    \t\t\t\tif ( normalMatrix !== undefined ) {\n\n    \t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n    \t\t\t\t}\n\n    \t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n    \t\t\t}\n\n    \t\t\tfaceCopy.color.copy( face.color );\n\n    \t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n    \t\t\t\tcolor = faceVertexColors[ j ];\n    \t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n    \t\t\t}\n\n    \t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n    \t\t\tfaces1.push( faceCopy );\n\n    \t\t}\n\n    \t\t// uvs\n\n    \t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n    \t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n    \t\t\tif ( uv === undefined ) {\n\n    \t\t\t\tcontinue;\n\n    \t\t\t}\n\n    \t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n    \t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n    \t\t\t}\n\n    \t\t\tuvs1.push( uvCopy );\n\n    \t\t}\n\n    \t},\n\n    \tmergeMesh: function ( mesh ) {\n\n    \t\tif ( (mesh && mesh.isMesh) === false ) {\n\n    \t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n    \t\tthis.merge( mesh.geometry, mesh.matrix );\n\n    \t},\n\n    \t/*\n    \t * Checks for duplicate vertices with hashmap.\n    \t * Duplicated vertices are removed\n    \t * and faces' vertices are updated.\n    \t */\n\n    \tmergeVertices: function () {\n\n    \t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n    \t\tvar unique = [], changes = [];\n\n    \t\tvar v, key;\n    \t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n    \t\tvar precision = Math.pow( 10, precisionPoints );\n    \t\tvar i, il, face;\n    \t\tvar indices, j, jl;\n\n    \t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n    \t\t\tv = this.vertices[ i ];\n    \t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n    \t\t\tif ( verticesMap[ key ] === undefined ) {\n\n    \t\t\t\tverticesMap[ key ] = i;\n    \t\t\t\tunique.push( this.vertices[ i ] );\n    \t\t\t\tchanges[ i ] = unique.length - 1;\n\n    \t\t\t} else {\n\n    \t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n    \t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n    \t\t\t}\n\n    \t\t}\n\n\n    \t\t// if faces are completely degenerate after merging vertices, we\n    \t\t// have to remove them from the geometry.\n    \t\tvar faceIndicesToRemove = [];\n\n    \t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n    \t\t\tface = this.faces[ i ];\n\n    \t\t\tface.a = changes[ face.a ];\n    \t\t\tface.b = changes[ face.b ];\n    \t\t\tface.c = changes[ face.c ];\n\n    \t\t\tindices = [ face.a, face.b, face.c ];\n\n    \t\t\tvar dupIndex = - 1;\n\n    \t\t\t// if any duplicate vertices are found in a Face3\n    \t\t\t// we have to remove the face as nothing can be saved\n    \t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n    \t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n    \t\t\t\t\tdupIndex = n;\n    \t\t\t\t\tfaceIndicesToRemove.push( i );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n    \t\t\tvar idx = faceIndicesToRemove[ i ];\n\n    \t\t\tthis.faces.splice( idx, 1 );\n\n    \t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n    \t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// Use unique set of vertices\n\n    \t\tvar diff = this.vertices.length - unique.length;\n    \t\tthis.vertices = unique;\n    \t\treturn diff;\n\n    \t},\n\n    \tsortFacesByMaterialIndex: function () {\n\n    \t\tvar faces = this.faces;\n    \t\tvar length = faces.length;\n\n    \t\t// tag faces\n\n    \t\tfor ( var i = 0; i < length; i ++ ) {\n\n    \t\t\tfaces[ i ]._id = i;\n\n    \t\t}\n\n    \t\t// sort faces\n\n    \t\tfunction materialIndexSort( a, b ) {\n\n    \t\t\treturn a.materialIndex - b.materialIndex;\n\n    \t\t}\n\n    \t\tfaces.sort( materialIndexSort );\n\n    \t\t// sort uvs\n\n    \t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n    \t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n    \t\tvar newUvs1, newUvs2;\n\n    \t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n    \t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n    \t\tfor ( var i = 0; i < length; i ++ ) {\n\n    \t\t\tvar id = faces[ i ]._id;\n\n    \t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n    \t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n    \t\t}\n\n    \t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n    \t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n    \t},\n\n    \ttoJSON: function () {\n\n    \t\tvar data = {\n    \t\t\tmetadata: {\n    \t\t\t\tversion: 4.4,\n    \t\t\t\ttype: 'Geometry',\n    \t\t\t\tgenerator: 'Geometry.toJSON'\n    \t\t\t}\n    \t\t};\n\n    \t\t// standard Geometry serialization\n\n    \t\tdata.uuid = this.uuid;\n    \t\tdata.type = this.type;\n    \t\tif ( this.name !== '' ) data.name = this.name;\n\n    \t\tif ( this.parameters !== undefined ) {\n\n    \t\t\tvar parameters = this.parameters;\n\n    \t\t\tfor ( var key in parameters ) {\n\n    \t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n    \t\t\t}\n\n    \t\t\treturn data;\n\n    \t\t}\n\n    \t\tvar vertices = [];\n\n    \t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n    \t\t\tvar vertex = this.vertices[ i ];\n    \t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n    \t\t}\n\n    \t\tvar faces = [];\n    \t\tvar normals = [];\n    \t\tvar normalsHash = {};\n    \t\tvar colors = [];\n    \t\tvar colorsHash = {};\n    \t\tvar uvs = [];\n    \t\tvar uvsHash = {};\n\n    \t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n    \t\t\tvar face = this.faces[ i ];\n\n    \t\t\tvar hasMaterial = true;\n    \t\t\tvar hasFaceUv = false; // deprecated\n    \t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n    \t\t\tvar hasFaceNormal = face.normal.length() > 0;\n    \t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n    \t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n    \t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n    \t\t\tvar faceType = 0;\n\n    \t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n    \t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n    \t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n    \t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n    \t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n    \t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n    \t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n    \t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n    \t\t\tfaces.push( faceType );\n    \t\t\tfaces.push( face.a, face.b, face.c );\n    \t\t\tfaces.push( face.materialIndex );\n\n    \t\t\tif ( hasFaceVertexUv ) {\n\n    \t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n    \t\t\t\tfaces.push(\n    \t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n    \t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n    \t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n    \t\t\t\t);\n\n    \t\t\t}\n\n    \t\t\tif ( hasFaceNormal ) {\n\n    \t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n    \t\t\t}\n\n    \t\t\tif ( hasFaceVertexNormal ) {\n\n    \t\t\t\tvar vertexNormals = face.vertexNormals;\n\n    \t\t\t\tfaces.push(\n    \t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n    \t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n    \t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n    \t\t\t\t);\n\n    \t\t\t}\n\n    \t\t\tif ( hasFaceColor ) {\n\n    \t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n    \t\t\t}\n\n    \t\t\tif ( hasFaceVertexColor ) {\n\n    \t\t\t\tvar vertexColors = face.vertexColors;\n\n    \t\t\t\tfaces.push(\n    \t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n    \t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n    \t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n    \t\t\t\t);\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfunction setBit( value, position, enabled ) {\n\n    \t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n    \t\t}\n\n    \t\tfunction getNormalIndex( normal ) {\n\n    \t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n    \t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n    \t\t\t\treturn normalsHash[ hash ];\n\n    \t\t\t}\n\n    \t\t\tnormalsHash[ hash ] = normals.length / 3;\n    \t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n    \t\t\treturn normalsHash[ hash ];\n\n    \t\t}\n\n    \t\tfunction getColorIndex( color ) {\n\n    \t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n    \t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n    \t\t\t\treturn colorsHash[ hash ];\n\n    \t\t\t}\n\n    \t\t\tcolorsHash[ hash ] = colors.length;\n    \t\t\tcolors.push( color.getHex() );\n\n    \t\t\treturn colorsHash[ hash ];\n\n    \t\t}\n\n    \t\tfunction getUvIndex( uv ) {\n\n    \t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n    \t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n    \t\t\t\treturn uvsHash[ hash ];\n\n    \t\t\t}\n\n    \t\t\tuvsHash[ hash ] = uvs.length / 2;\n    \t\t\tuvs.push( uv.x, uv.y );\n\n    \t\t\treturn uvsHash[ hash ];\n\n    \t\t}\n\n    \t\tdata.data = {};\n\n    \t\tdata.data.vertices = vertices;\n    \t\tdata.data.normals = normals;\n    \t\tif ( colors.length > 0 ) data.data.colors = colors;\n    \t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n    \t\tdata.data.faces = faces;\n\n    \t\treturn data;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\t/*\n    \t\t// Handle primitives\n\n    \t\tvar parameters = this.parameters;\n\n    \t\tif ( parameters !== undefined ) {\n\n    \t\t\tvar values = [];\n\n    \t\t\tfor ( var key in parameters ) {\n\n    \t\t\t\tvalues.push( parameters[ key ] );\n\n    \t\t\t}\n\n    \t\t\tvar geometry = Object.create( this.constructor.prototype );\n    \t\t\tthis.constructor.apply( geometry, values );\n    \t\t\treturn geometry;\n\n    \t\t}\n\n    \t\treturn new this.constructor().copy( this );\n    \t\t*/\n\n    \t\treturn new Geometry().copy( this );\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tthis.vertices = [];\n    \t\tthis.faces = [];\n    \t\tthis.faceVertexUvs = [ [] ];\n    \t\tthis.colors = [];\n\n    \t\tvar vertices = source.vertices;\n\n    \t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n    \t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n    \t\t}\n\n    \t\tvar colors = source.colors;\n\n    \t\tfor ( var i = 0, il = colors.length; i < il; i ++ ) {\n\n    \t\t\tthis.colors.push( colors[ i ].clone() );\n\n    \t\t}\n\n    \t\tvar faces = source.faces;\n\n    \t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\n\n    \t\t\tthis.faces.push( faces[ i ].clone() );\n\n    \t\t}\n\n    \t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n    \t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n    \t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n    \t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n    \t\t\t}\n\n    \t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n    \t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n    \t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n    \t\t\t\t\tvar uv = uvs[ k ];\n\n    \t\t\t\t\tuvsCopy.push( uv.clone() );\n\n    \t\t\t\t}\n\n    \t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tdispose: function () {\n\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\n\n    \t}\n\n    } );\n\n    var count$3 = 0;\n    function GeometryIdCount() { return count$3++; };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function DirectGeometry() {\n\n    \tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.name = '';\n    \tthis.type = 'DirectGeometry';\n\n    \tthis.indices = [];\n    \tthis.vertices = [];\n    \tthis.normals = [];\n    \tthis.colors = [];\n    \tthis.uvs = [];\n    \tthis.uvs2 = [];\n\n    \tthis.groups = [];\n\n    \tthis.morphTargets = {};\n\n    \tthis.skinWeights = [];\n    \tthis.skinIndices = [];\n\n    \t// this.lineDistances = [];\n\n    \tthis.boundingBox = null;\n    \tthis.boundingSphere = null;\n\n    \t// update flags\n\n    \tthis.verticesNeedUpdate = false;\n    \tthis.normalsNeedUpdate = false;\n    \tthis.colorsNeedUpdate = false;\n    \tthis.uvsNeedUpdate = false;\n    \tthis.groupsNeedUpdate = false;\n\n    }\n\n    Object.assign( DirectGeometry.prototype, EventDispatcher.prototype, {\n\n    \tcomputeBoundingBox: Geometry.prototype.computeBoundingBox,\n    \tcomputeBoundingSphere: Geometry.prototype.computeBoundingSphere,\n\n    \tcomputeFaceNormals: function () {\n\n    \t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\n\n    \t},\n\n    \tcomputeVertexNormals: function () {\n\n    \t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\n\n    \t},\n\n    \tcomputeGroups: function ( geometry ) {\n\n    \t\tvar group;\n    \t\tvar groups = [];\n    \t\tvar materialIndex;\n\n    \t\tvar faces = geometry.faces;\n\n    \t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n    \t\t\tvar face = faces[ i ];\n\n    \t\t\t// materials\n\n    \t\t\tif ( face.materialIndex !== materialIndex ) {\n\n    \t\t\t\tmaterialIndex = face.materialIndex;\n\n    \t\t\t\tif ( group !== undefined ) {\n\n    \t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n    \t\t\t\t\tgroups.push( group );\n\n    \t\t\t\t}\n\n    \t\t\t\tgroup = {\n    \t\t\t\t\tstart: i * 3,\n    \t\t\t\t\tmaterialIndex: materialIndex\n    \t\t\t\t};\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( group !== undefined ) {\n\n    \t\t\tgroup.count = ( i * 3 ) - group.start;\n    \t\t\tgroups.push( group );\n\n    \t\t}\n\n    \t\tthis.groups = groups;\n\n    \t},\n\n    \tfromGeometry: function ( geometry ) {\n\n    \t\tvar faces = geometry.faces;\n    \t\tvar vertices = geometry.vertices;\n    \t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n    \t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n    \t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n    \t\t// morphs\n\n    \t\tvar morphTargets = geometry.morphTargets;\n    \t\tvar morphTargetsLength = morphTargets.length;\n\n    \t\tvar morphTargetsPosition;\n\n    \t\tif ( morphTargetsLength > 0 ) {\n\n    \t\t\tmorphTargetsPosition = [];\n\n    \t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n    \t\t\t\tmorphTargetsPosition[ i ] = [];\n\n    \t\t\t}\n\n    \t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n    \t\t}\n\n    \t\tvar morphNormals = geometry.morphNormals;\n    \t\tvar morphNormalsLength = morphNormals.length;\n\n    \t\tvar morphTargetsNormal;\n\n    \t\tif ( morphNormalsLength > 0 ) {\n\n    \t\t\tmorphTargetsNormal = [];\n\n    \t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n    \t\t\t\tmorphTargetsNormal[ i ] = [];\n\n    \t\t\t}\n\n    \t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n    \t\t}\n\n    \t\t// skins\n\n    \t\tvar skinIndices = geometry.skinIndices;\n    \t\tvar skinWeights = geometry.skinWeights;\n\n    \t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n    \t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n    \t\t//\n\n    \t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n    \t\t\tvar face = faces[ i ];\n\n    \t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n    \t\t\tvar vertexNormals = face.vertexNormals;\n\n    \t\t\tif ( vertexNormals.length === 3 ) {\n\n    \t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n    \t\t\t} else {\n\n    \t\t\t\tvar normal = face.normal;\n\n    \t\t\t\tthis.normals.push( normal, normal, normal );\n\n    \t\t\t}\n\n    \t\t\tvar vertexColors = face.vertexColors;\n\n    \t\t\tif ( vertexColors.length === 3 ) {\n\n    \t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n    \t\t\t} else {\n\n    \t\t\t\tvar color = face.color;\n\n    \t\t\t\tthis.colors.push( color, color, color );\n\n    \t\t\t}\n\n    \t\t\tif ( hasFaceVertexUv === true ) {\n\n    \t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n    \t\t\t\tif ( vertexUvs !== undefined ) {\n\n    \t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n    \t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( hasFaceVertexUv2 === true ) {\n\n    \t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n    \t\t\t\tif ( vertexUvs !== undefined ) {\n\n    \t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n    \t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\t// morphs\n\n    \t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n    \t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n    \t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n    \t\t\t}\n\n    \t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n    \t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n    \t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n    \t\t\t}\n\n    \t\t\t// skins\n\n    \t\t\tif ( hasSkinIndices ) {\n\n    \t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n    \t\t\t}\n\n    \t\t\tif ( hasSkinWeights ) {\n\n    \t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tthis.computeGroups( geometry );\n\n    \t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    \t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    \t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    \t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    \t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n    \t\treturn this;\n\n    \t},\n\n    \tdispose: function () {\n\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\n\n    \t}\n\n    } );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function BufferGeometry() {\n\n    \tObject.defineProperty( this, 'id', { value: GeometryIdCount() } );\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.name = '';\n    \tthis.type = 'BufferGeometry';\n\n    \tthis.index = null;\n    \tthis.attributes = {};\n\n    \tthis.morphAttributes = {};\n\n    \tthis.groups = [];\n\n    \tthis.boundingBox = null;\n    \tthis.boundingSphere = null;\n\n    \tthis.drawRange = { start: 0, count: Infinity };\n\n    }\n\n    Object.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n    \tisBufferGeometry: true,\n\n    \tgetIndex: function () {\n\n    \t\treturn this.index;\n\n    \t},\n\n    \tsetIndex: function ( index ) {\n\n    \t\tthis.index = index;\n\n    \t},\n\n    \taddAttribute: function ( name, attribute ) {\n\n    \t\tif ( (attribute && attribute.isBufferAttribute) === false && (attribute && attribute.isInterleavedBufferAttribute) === false ) {\n\n    \t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n    \t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tif ( name === 'index' ) {\n\n    \t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n    \t\t\tthis.setIndex( attribute );\n\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tthis.attributes[ name ] = attribute;\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetAttribute: function ( name ) {\n\n    \t\treturn this.attributes[ name ];\n\n    \t},\n\n    \tremoveAttribute: function ( name ) {\n\n    \t\tdelete this.attributes[ name ];\n\n    \t\treturn this;\n\n    \t},\n\n    \taddGroup: function ( start, count, materialIndex ) {\n\n    \t\tthis.groups.push( {\n\n    \t\t\tstart: start,\n    \t\t\tcount: count,\n    \t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n    \t\t} );\n\n    \t},\n\n    \tclearGroups: function () {\n\n    \t\tthis.groups = [];\n\n    \t},\n\n    \tsetDrawRange: function ( start, count ) {\n\n    \t\tthis.drawRange.start = start;\n    \t\tthis.drawRange.count = count;\n\n    \t},\n\n    \tapplyMatrix: function ( matrix ) {\n\n    \t\tvar position = this.attributes.position;\n\n    \t\tif ( position !== undefined ) {\n\n    \t\t\tmatrix.applyToVector3Array( position.array );\n    \t\t\tposition.needsUpdate = true;\n\n    \t\t}\n\n    \t\tvar normal = this.attributes.normal;\n\n    \t\tif ( normal !== undefined ) {\n\n    \t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n    \t\t\tnormalMatrix.applyToVector3Array( normal.array );\n    \t\t\tnormal.needsUpdate = true;\n\n    \t\t}\n\n    \t\tif ( this.boundingBox !== null ) {\n\n    \t\t\tthis.computeBoundingBox();\n\n    \t\t}\n\n    \t\tif ( this.boundingSphere !== null ) {\n\n    \t\t\tthis.computeBoundingSphere();\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \trotateX: function () {\n\n    \t\t// rotate geometry around world x-axis\n\n    \t\tvar m1;\n\n    \t\treturn function rotateX( angle ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeRotationX( angle );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \trotateY: function () {\n\n    \t\t// rotate geometry around world y-axis\n\n    \t\tvar m1;\n\n    \t\treturn function rotateY( angle ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeRotationY( angle );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \trotateZ: function () {\n\n    \t\t// rotate geometry around world z-axis\n\n    \t\tvar m1;\n\n    \t\treturn function rotateZ( angle ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeRotationZ( angle );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \ttranslate: function () {\n\n    \t\t// translate geometry\n\n    \t\tvar m1;\n\n    \t\treturn function translate( x, y, z ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeTranslation( x, y, z );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tscale: function () {\n\n    \t\t// scale geometry\n\n    \t\tvar m1;\n\n    \t\treturn function scale( x, y, z ) {\n\n    \t\t\tif ( m1 === undefined ) m1 = new Matrix4();\n\n    \t\t\tm1.makeScale( x, y, z );\n\n    \t\t\tthis.applyMatrix( m1 );\n\n    \t\t\treturn this;\n\n    \t\t};\n\n    \t}(),\n\n    \tlookAt: function () {\n\n    \t\tvar obj;\n\n    \t\treturn function lookAt( vector ) {\n\n    \t\t\tif ( obj === undefined ) obj = new Object3D();\n\n    \t\t\tobj.lookAt( vector );\n\n    \t\t\tobj.updateMatrix();\n\n    \t\t\tthis.applyMatrix( obj.matrix );\n\n    \t\t};\n\n    \t}(),\n\n    \tcenter: function () {\n\n    \t\tthis.computeBoundingBox();\n\n    \t\tvar offset = this.boundingBox.getCenter().negate();\n\n    \t\tthis.translate( offset.x, offset.y, offset.z );\n\n    \t\treturn offset;\n\n    \t},\n\n    \tsetFromObject: function ( object ) {\n\n    \t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n    \t\tvar geometry = object.geometry;\n\n    \t\tif ( (object && object.isPoints) || (object && object.isLine) ) {\n\n    \t\t\tvar positions = new Float32Attribute( geometry.vertices.length * 3, 3 );\n    \t\t\tvar colors = new Float32Attribute( geometry.colors.length * 3, 3 );\n\n    \t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n    \t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n    \t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n    \t\t\t\tvar lineDistances = new Float32Attribute( geometry.lineDistances.length, 1 );\n\n    \t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n    \t\t\t}\n\n    \t\t\tif ( geometry.boundingSphere !== null ) {\n\n    \t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n    \t\t\t}\n\n    \t\t\tif ( geometry.boundingBox !== null ) {\n\n    \t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n    \t\t\t}\n\n    \t\t} else if ( (object && object.isMesh) ) {\n\n    \t\t\tif ( (geometry && geometry.isGeometry) ) {\n\n    \t\t\t\tthis.fromGeometry( geometry );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tupdateFromObject: function ( object ) {\n\n    \t\tvar geometry = object.geometry;\n\n    \t\tif ( (object && object.isMesh) ) {\n\n    \t\t\tvar direct = geometry.__directGeometry;\n\n    \t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n    \t\t\t\tdirect = undefined;\n    \t\t\t\tgeometry.elementsNeedUpdate = false;\n\n    \t\t\t}\n\n    \t\t\tif ( direct === undefined ) {\n\n    \t\t\t\treturn this.fromGeometry( geometry );\n\n    \t\t\t}\n\n    \t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n    \t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n    \t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n    \t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n    \t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n    \t\t\tgeometry.verticesNeedUpdate = false;\n    \t\t\tgeometry.normalsNeedUpdate = false;\n    \t\t\tgeometry.colorsNeedUpdate = false;\n    \t\t\tgeometry.uvsNeedUpdate = false;\n    \t\t\tgeometry.groupsNeedUpdate = false;\n\n    \t\t\tgeometry = direct;\n\n    \t\t}\n\n    \t\tvar attribute;\n\n    \t\tif ( geometry.verticesNeedUpdate === true ) {\n\n    \t\t\tattribute = this.attributes.position;\n\n    \t\t\tif ( attribute !== undefined ) {\n\n    \t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n    \t\t\t\tattribute.needsUpdate = true;\n\n    \t\t\t}\n\n    \t\t\tgeometry.verticesNeedUpdate = false;\n\n    \t\t}\n\n    \t\tif ( geometry.normalsNeedUpdate === true ) {\n\n    \t\t\tattribute = this.attributes.normal;\n\n    \t\t\tif ( attribute !== undefined ) {\n\n    \t\t\t\tattribute.copyVector3sArray( geometry.normals );\n    \t\t\t\tattribute.needsUpdate = true;\n\n    \t\t\t}\n\n    \t\t\tgeometry.normalsNeedUpdate = false;\n\n    \t\t}\n\n    \t\tif ( geometry.colorsNeedUpdate === true ) {\n\n    \t\t\tattribute = this.attributes.color;\n\n    \t\t\tif ( attribute !== undefined ) {\n\n    \t\t\t\tattribute.copyColorsArray( geometry.colors );\n    \t\t\t\tattribute.needsUpdate = true;\n\n    \t\t\t}\n\n    \t\t\tgeometry.colorsNeedUpdate = false;\n\n    \t\t}\n\n    \t\tif ( geometry.uvsNeedUpdate ) {\n\n    \t\t\tattribute = this.attributes.uv;\n\n    \t\t\tif ( attribute !== undefined ) {\n\n    \t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n    \t\t\t\tattribute.needsUpdate = true;\n\n    \t\t\t}\n\n    \t\t\tgeometry.uvsNeedUpdate = false;\n\n    \t\t}\n\n    \t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n    \t\t\tattribute = this.attributes.lineDistance;\n\n    \t\t\tif ( attribute !== undefined ) {\n\n    \t\t\t\tattribute.copyArray( geometry.lineDistances );\n    \t\t\t\tattribute.needsUpdate = true;\n\n    \t\t\t}\n\n    \t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n    \t\t}\n\n    \t\tif ( geometry.groupsNeedUpdate ) {\n\n    \t\t\tgeometry.computeGroups( object.geometry );\n    \t\t\tthis.groups = geometry.groups;\n\n    \t\t\tgeometry.groupsNeedUpdate = false;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tfromGeometry: function ( geometry ) {\n\n    \t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n    \t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n    \t},\n\n    \tfromDirectGeometry: function ( geometry ) {\n\n    \t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n    \t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n    \t\tif ( geometry.normals.length > 0 ) {\n\n    \t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n    \t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n    \t\t}\n\n    \t\tif ( geometry.colors.length > 0 ) {\n\n    \t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n    \t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n    \t\t}\n\n    \t\tif ( geometry.uvs.length > 0 ) {\n\n    \t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n    \t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n    \t\t}\n\n    \t\tif ( geometry.uvs2.length > 0 ) {\n\n    \t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n    \t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n    \t\t}\n\n    \t\tif ( geometry.indices.length > 0 ) {\n\n    \t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\n    \t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n    \t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n    \t\t}\n\n    \t\t// groups\n\n    \t\tthis.groups = geometry.groups;\n\n    \t\t// morphs\n\n    \t\tfor ( var name in geometry.morphTargets ) {\n\n    \t\t\tvar array = [];\n    \t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n    \t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n    \t\t\t\tvar morphTarget = morphTargets[ i ];\n\n    \t\t\t\tvar attribute = new Float32Attribute( morphTarget.length * 3, 3 );\n\n    \t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n    \t\t\t}\n\n    \t\t\tthis.morphAttributes[ name ] = array;\n\n    \t\t}\n\n    \t\t// skinning\n\n    \t\tif ( geometry.skinIndices.length > 0 ) {\n\n    \t\t\tvar skinIndices = new Float32Attribute( geometry.skinIndices.length * 4, 4 );\n    \t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n    \t\t}\n\n    \t\tif ( geometry.skinWeights.length > 0 ) {\n\n    \t\t\tvar skinWeights = new Float32Attribute( geometry.skinWeights.length * 4, 4 );\n    \t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n    \t\t}\n\n    \t\t//\n\n    \t\tif ( geometry.boundingSphere !== null ) {\n\n    \t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n    \t\t}\n\n    \t\tif ( geometry.boundingBox !== null ) {\n\n    \t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tcomputeBoundingBox: function () {\n\n    \t\tif ( this.boundingBox === null ) {\n\n    \t\t\tthis.boundingBox = new Box3();\n\n    \t\t}\n\n    \t\tvar positions = this.attributes.position.array;\n\n    \t\tif ( positions !== undefined ) {\n\n    \t\t\tthis.boundingBox.setFromArray( positions );\n\n    \t\t} else {\n\n    \t\t\tthis.boundingBox.makeEmpty();\n\n    \t\t}\n\n    \t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n    \t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n    \t\t}\n\n    \t},\n\n    \tcomputeBoundingSphere: function () {\n\n    \t\tvar box = new Box3();\n    \t\tvar vector = new Vector3();\n\n    \t\treturn function computeBoundingSphere() {\n\n    \t\t\tif ( this.boundingSphere === null ) {\n\n    \t\t\t\tthis.boundingSphere = new Sphere();\n\n    \t\t\t}\n\n    \t\t\tvar positions = this.attributes.position;\n\n    \t\t\tif ( positions ) {\n\n    \t\t\t\tvar array = positions.array;\n    \t\t\t\tvar center = this.boundingSphere.center;\n\n    \t\t\t\tbox.setFromArray( array );\n    \t\t\t\tbox.getCenter( center );\n\n    \t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n    \t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n    \t\t\t\tvar maxRadiusSq = 0;\n\n    \t\t\t\tfor ( var i = 0, il = array.length; i < il; i += 3 ) {\n\n    \t\t\t\t\tvector.fromArray( array, i );\n    \t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n    \t\t\t\t}\n\n    \t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n    \t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n    \t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}(),\n\n    \tcomputeFaceNormals: function () {\n\n    \t\t// backwards compatibility\n\n    \t},\n\n    \tcomputeVertexNormals: function () {\n\n    \t\tvar index = this.index;\n    \t\tvar attributes = this.attributes;\n    \t\tvar groups = this.groups;\n\n    \t\tif ( attributes.position ) {\n\n    \t\t\tvar positions = attributes.position.array;\n\n    \t\t\tif ( attributes.normal === undefined ) {\n\n    \t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n    \t\t\t} else {\n\n    \t\t\t\t// reset existing normals to zero\n\n    \t\t\t\tvar array = attributes.normal.array;\n\n    \t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n    \t\t\t\t\tarray[ i ] = 0;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tvar normals = attributes.normal.array;\n\n    \t\t\tvar vA, vB, vC,\n\n    \t\t\tpA = new Vector3(),\n    \t\t\tpB = new Vector3(),\n    \t\t\tpC = new Vector3(),\n\n    \t\t\tcb = new Vector3(),\n    \t\t\tab = new Vector3();\n\n    \t\t\t// indexed elements\n\n    \t\t\tif ( index ) {\n\n    \t\t\t\tvar indices = index.array;\n\n    \t\t\t\tif ( groups.length === 0 ) {\n\n    \t\t\t\t\tthis.addGroup( 0, indices.length );\n\n    \t\t\t\t}\n\n    \t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n    \t\t\t\t\tvar group = groups[ j ];\n\n    \t\t\t\t\tvar start = group.start;\n    \t\t\t\t\tvar count = group.count;\n\n    \t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n    \t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n    \t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n    \t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n    \t\t\t\t\t\tpA.fromArray( positions, vA );\n    \t\t\t\t\t\tpB.fromArray( positions, vB );\n    \t\t\t\t\t\tpC.fromArray( positions, vC );\n\n    \t\t\t\t\t\tcb.subVectors( pC, pB );\n    \t\t\t\t\t\tab.subVectors( pA, pB );\n    \t\t\t\t\t\tcb.cross( ab );\n\n    \t\t\t\t\t\tnormals[ vA ] += cb.x;\n    \t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n    \t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n    \t\t\t\t\t\tnormals[ vB ] += cb.x;\n    \t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n    \t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n    \t\t\t\t\t\tnormals[ vC ] += cb.x;\n    \t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n    \t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n    \t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n    \t\t\t\t\tpA.fromArray( positions, i );\n    \t\t\t\t\tpB.fromArray( positions, i + 3 );\n    \t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n    \t\t\t\t\tcb.subVectors( pC, pB );\n    \t\t\t\t\tab.subVectors( pA, pB );\n    \t\t\t\t\tcb.cross( ab );\n\n    \t\t\t\t\tnormals[ i ] = cb.x;\n    \t\t\t\t\tnormals[ i + 1 ] = cb.y;\n    \t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n    \t\t\t\t\tnormals[ i + 3 ] = cb.x;\n    \t\t\t\t\tnormals[ i + 4 ] = cb.y;\n    \t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n    \t\t\t\t\tnormals[ i + 6 ] = cb.x;\n    \t\t\t\t\tnormals[ i + 7 ] = cb.y;\n    \t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tthis.normalizeNormals();\n\n    \t\t\tattributes.normal.needsUpdate = true;\n\n    \t\t}\n\n    \t},\n\n    \tmerge: function ( geometry, offset ) {\n\n    \t\tif ( (geometry && geometry.isBufferGeometry) === false ) {\n\n    \t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tvar attributes = this.attributes;\n\n    \t\tfor ( var key in attributes ) {\n\n    \t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n    \t\t\tvar attribute1 = attributes[ key ];\n    \t\t\tvar attributeArray1 = attribute1.array;\n\n    \t\t\tvar attribute2 = geometry.attributes[ key ];\n    \t\t\tvar attributeArray2 = attribute2.array;\n\n    \t\t\tvar attributeSize = attribute2.itemSize;\n\n    \t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n    \t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tnormalizeNormals: function () {\n\n    \t\tvar normals = this.attributes.normal.array;\n\n    \t\tvar x, y, z, n;\n\n    \t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\n\n    \t\t\tx = normals[ i ];\n    \t\t\ty = normals[ i + 1 ];\n    \t\t\tz = normals[ i + 2 ];\n\n    \t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\n\n    \t\t\tnormals[ i ] *= n;\n    \t\t\tnormals[ i + 1 ] *= n;\n    \t\t\tnormals[ i + 2 ] *= n;\n\n    \t\t}\n\n    \t},\n\n    \ttoNonIndexed: function () {\n\n    \t\tif ( this.index === null ) {\n\n    \t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n    \t\t\treturn this;\n\n    \t\t}\n\n    \t\tvar geometry2 = new BufferGeometry();\n\n    \t\tvar indices = this.index.array;\n    \t\tvar attributes = this.attributes;\n\n    \t\tfor ( var name in attributes ) {\n\n    \t\t\tvar attribute = attributes[ name ];\n\n    \t\t\tvar array = attribute.array;\n    \t\t\tvar itemSize = attribute.itemSize;\n\n    \t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n    \t\t\tvar index = 0, index2 = 0;\n\n    \t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n    \t\t\t\tindex = indices[ i ] * itemSize;\n\n    \t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n    \t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n    \t\t}\n\n    \t\treturn geometry2;\n\n    \t},\n\n    \ttoJSON: function () {\n\n    \t\tvar data = {\n    \t\t\tmetadata: {\n    \t\t\t\tversion: 4.4,\n    \t\t\t\ttype: 'BufferGeometry',\n    \t\t\t\tgenerator: 'BufferGeometry.toJSON'\n    \t\t\t}\n    \t\t};\n\n    \t\t// standard BufferGeometry serialization\n\n    \t\tdata.uuid = this.uuid;\n    \t\tdata.type = this.type;\n    \t\tif ( this.name !== '' ) data.name = this.name;\n\n    \t\tif ( this.parameters !== undefined ) {\n\n    \t\t\tvar parameters = this.parameters;\n\n    \t\t\tfor ( var key in parameters ) {\n\n    \t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n    \t\t\t}\n\n    \t\t\treturn data;\n\n    \t\t}\n\n    \t\tdata.data = { attributes: {} };\n\n    \t\tvar index = this.index;\n\n    \t\tif ( index !== null ) {\n\n    \t\t\tvar array = Array.prototype.slice.call( index.array );\n\n    \t\t\tdata.data.index = {\n    \t\t\t\ttype: index.array.constructor.name,\n    \t\t\t\tarray: array\n    \t\t\t};\n\n    \t\t}\n\n    \t\tvar attributes = this.attributes;\n\n    \t\tfor ( var key in attributes ) {\n\n    \t\t\tvar attribute = attributes[ key ];\n\n    \t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n    \t\t\tdata.data.attributes[ key ] = {\n    \t\t\t\titemSize: attribute.itemSize,\n    \t\t\t\ttype: attribute.array.constructor.name,\n    \t\t\t\tarray: array,\n    \t\t\t\tnormalized: attribute.normalized\n    \t\t\t};\n\n    \t\t}\n\n    \t\tvar groups = this.groups;\n\n    \t\tif ( groups.length > 0 ) {\n\n    \t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n    \t\t}\n\n    \t\tvar boundingSphere = this.boundingSphere;\n\n    \t\tif ( boundingSphere !== null ) {\n\n    \t\t\tdata.data.boundingSphere = {\n    \t\t\t\tcenter: boundingSphere.center.toArray(),\n    \t\t\t\tradius: boundingSphere.radius\n    \t\t\t};\n\n    \t\t}\n\n    \t\treturn data;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\t/*\n    \t\t// Handle primitives\n\n    \t\tvar parameters = this.parameters;\n\n    \t\tif ( parameters !== undefined ) {\n\n    \t\t\tvar values = [];\n\n    \t\t\tfor ( var key in parameters ) {\n\n    \t\t\t\tvalues.push( parameters[ key ] );\n\n    \t\t\t}\n\n    \t\t\tvar geometry = Object.create( this.constructor.prototype );\n    \t\t\tthis.constructor.apply( geometry, values );\n    \t\t\treturn geometry;\n\n    \t\t}\n\n    \t\treturn new this.constructor().copy( this );\n    \t\t*/\n\n    \t\treturn new BufferGeometry().copy( this );\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tvar index = source.index;\n\n    \t\tif ( index !== null ) {\n\n    \t\t\tthis.setIndex( index.clone() );\n\n    \t\t}\n\n    \t\tvar attributes = source.attributes;\n\n    \t\tfor ( var name in attributes ) {\n\n    \t\t\tvar attribute = attributes[ name ];\n    \t\t\tthis.addAttribute( name, attribute.clone() );\n\n    \t\t}\n\n    \t\tvar groups = source.groups;\n\n    \t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n    \t\t\tvar group = groups[ i ];\n    \t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tdispose: function () {\n\n    \t\tthis.dispatchEvent( { type: 'dispose' } );\n\n    \t}\n\n    } );\n\n    BufferGeometry.MaxIndex = 65535;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     * @author mikael emtinger / http://gomo.se/\n     * @author jonobr1 / http://jonobr1.com/\n     */\n\n    function Mesh( geometry, material ) {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Mesh';\n\n    \tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    \tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n    \tthis.drawMode = TrianglesDrawMode;\n\n    \tthis.updateMorphTargets();\n\n    }\n\n    Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: Mesh,\n\n    \tisMesh: true,\n\n    \tsetDrawMode: function ( value ) {\n\n    \t\tthis.drawMode = value;\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tObject3D.prototype.copy.call( this, source );\n\n    \t\tthis.drawMode = source.drawMode;\n\n    \t\treturn this;\n\n    \t},\n\n    \tupdateMorphTargets: function () {\n\n    \t\tvar morphTargets = this.geometry.morphTargets;\n\n    \t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n    \t\t\tthis.morphTargetInfluences = [];\n    \t\t\tthis.morphTargetDictionary = {};\n\n    \t\t\tfor ( var m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n    \t\t\t\tthis.morphTargetInfluences.push( 0 );\n    \t\t\t\tthis.morphTargetDictionary[ morphTargets[ m ].name ] = m;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \traycast: ( function () {\n\n    \t\tvar inverseMatrix = new Matrix4();\n    \t\tvar ray = new Ray();\n    \t\tvar sphere = new Sphere();\n\n    \t\tvar vA = new Vector3();\n    \t\tvar vB = new Vector3();\n    \t\tvar vC = new Vector3();\n\n    \t\tvar tempA = new Vector3();\n    \t\tvar tempB = new Vector3();\n    \t\tvar tempC = new Vector3();\n\n    \t\tvar uvA = new Vector2();\n    \t\tvar uvB = new Vector2();\n    \t\tvar uvC = new Vector2();\n\n    \t\tvar barycoord = new Vector3();\n\n    \t\tvar intersectionPoint = new Vector3();\n    \t\tvar intersectionPointWorld = new Vector3();\n\n    \t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n    \t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n    \t\t\tuv1.multiplyScalar( barycoord.x );\n    \t\t\tuv2.multiplyScalar( barycoord.y );\n    \t\t\tuv3.multiplyScalar( barycoord.z );\n\n    \t\t\tuv1.add( uv2 ).add( uv3 );\n\n    \t\t\treturn uv1.clone();\n\n    \t\t}\n\n    \t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\n\n    \t\t\tvar intersect;\n    \t\t\tvar material = object.material;\n\n    \t\t\tif ( material.side === BackSide ) {\n\n    \t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n    \t\t\t} else {\n\n    \t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n    \t\t\t}\n\n    \t\t\tif ( intersect === null ) return null;\n\n    \t\t\tintersectionPointWorld.copy( point );\n    \t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n    \t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n    \t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n    \t\t\treturn {\n    \t\t\t\tdistance: distance,\n    \t\t\t\tpoint: intersectionPointWorld.clone(),\n    \t\t\t\tobject: object\n    \t\t\t};\n\n    \t\t}\n\n    \t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\n\n    \t\t\tvA.fromArray( positions, a * 3 );\n    \t\t\tvB.fromArray( positions, b * 3 );\n    \t\t\tvC.fromArray( positions, c * 3 );\n\n    \t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n    \t\t\tif ( intersection ) {\n\n    \t\t\t\tif ( uvs ) {\n\n    \t\t\t\t\tuvA.fromArray( uvs, a * 2 );\n    \t\t\t\t\tuvB.fromArray( uvs, b * 2 );\n    \t\t\t\t\tuvC.fromArray( uvs, c * 2 );\n\n    \t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\n\n    \t\t\t\t}\n\n    \t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n    \t\t\t\tintersection.faceIndex = a;\n\n    \t\t\t}\n\n    \t\t\treturn intersection;\n\n    \t\t}\n\n    \t\treturn function raycast( raycaster, intersects ) {\n\n    \t\t\tvar geometry = this.geometry;\n    \t\t\tvar material = this.material;\n    \t\t\tvar matrixWorld = this.matrixWorld;\n\n    \t\t\tif ( material === undefined ) return;\n\n    \t\t\t// Checking boundingSphere distance to ray\n\n    \t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n    \t\t\tsphere.copy( geometry.boundingSphere );\n    \t\t\tsphere.applyMatrix4( matrixWorld );\n\n    \t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n    \t\t\t//\n\n    \t\t\tinverseMatrix.getInverse( matrixWorld );\n    \t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n    \t\t\t// Check boundingBox before continuing\n\n    \t\t\tif ( geometry.boundingBox !== null ) {\n\n    \t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n    \t\t\t}\n\n    \t\t\tvar uvs, intersection;\n\n    \t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n    \t\t\t\tvar a, b, c;\n    \t\t\t\tvar index = geometry.index;\n    \t\t\t\tvar attributes = geometry.attributes;\n    \t\t\t\tvar positions = attributes.position.array;\n\n    \t\t\t\tif ( attributes.uv !== undefined ) {\n\n    \t\t\t\t\tuvs = attributes.uv.array;\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( index !== null ) {\n\n    \t\t\t\t\tvar indices = index.array;\n\n    \t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\n\n    \t\t\t\t\t\ta = indices[ i ];\n    \t\t\t\t\t\tb = indices[ i + 1 ];\n    \t\t\t\t\t\tc = indices[ i + 2 ];\n\n    \t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n    \t\t\t\t\t\tif ( intersection ) {\n\n    \t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n    \t\t\t\t\t\t\tintersects.push( intersection );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n\n    \t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\n\n    \t\t\t\t\t\ta = i / 3;\n    \t\t\t\t\t\tb = a + 1;\n    \t\t\t\t\t\tc = a + 2;\n\n    \t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\n\n    \t\t\t\t\t\tif ( intersection ) {\n\n    \t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n    \t\t\t\t\t\t\tintersects.push( intersection );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n    \t\t\t\tvar fvA, fvB, fvC;\n    \t\t\t\tvar isFaceMaterial = (material && material.isMultiMaterial);\n    \t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\n\n    \t\t\t\tvar vertices = geometry.vertices;\n    \t\t\t\tvar faces = geometry.faces;\n    \t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n    \t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n    \t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n    \t\t\t\t\tvar face = faces[ f ];\n    \t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\n\n    \t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n    \t\t\t\t\tfvA = vertices[ face.a ];\n    \t\t\t\t\tfvB = vertices[ face.b ];\n    \t\t\t\t\tfvC = vertices[ face.c ];\n\n    \t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n    \t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n    \t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n    \t\t\t\t\t\tvA.set( 0, 0, 0 );\n    \t\t\t\t\t\tvB.set( 0, 0, 0 );\n    \t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n    \t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n    \t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n    \t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n    \t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n    \t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n    \t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n    \t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\tvA.add( fvA );\n    \t\t\t\t\t\tvB.add( fvB );\n    \t\t\t\t\t\tvC.add( fvC );\n\n    \t\t\t\t\t\tfvA = vA;\n    \t\t\t\t\t\tfvB = vB;\n    \t\t\t\t\t\tfvC = vC;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n    \t\t\t\t\tif ( intersection ) {\n\n    \t\t\t\t\t\tif ( uvs ) {\n\n    \t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n    \t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n    \t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n    \t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n    \t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\tintersection.face = face;\n    \t\t\t\t\t\tintersection.faceIndex = f;\n    \t\t\t\t\t\tintersects.push( intersection );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}() ),\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n    \t}\n\n    } );\n\n    /**\n     * @author Mugen87 / https://github.com/Mugen87\n     */\n\n    function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'BoxBufferGeometry';\n\n    \tthis.parameters = {\n    \t\twidth: width,\n    \t\theight: height,\n    \t\tdepth: depth,\n    \t\twidthSegments: widthSegments,\n    \t\theightSegments: heightSegments,\n    \t\tdepthSegments: depthSegments\n    \t};\n\n    \tvar scope = this;\n\n    \t// segments\n    \twidthSegments = Math.floor( widthSegments ) || 1;\n    \theightSegments = Math.floor( heightSegments ) || 1;\n    \tdepthSegments = Math.floor( depthSegments ) || 1;\n\n    \t// these are used to calculate buffer length\n    \tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\n    \tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\n\n    \t// buffers\n    \tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n    \tvar vertices = new Float32Array( vertexCount * 3 );\n    \tvar normals = new Float32Array( vertexCount * 3 );\n    \tvar uvs = new Float32Array( vertexCount * 2 );\n\n    \t// offset variables\n    \tvar vertexBufferOffset = 0;\n    \tvar uvBufferOffset = 0;\n    \tvar indexBufferOffset = 0;\n    \tvar numberOfVertices = 0;\n\n    \t// group variables\n    \tvar groupStart = 0;\n\n    \t// build each side of the box geometry\n    \tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\n    \tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\n    \tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\n    \tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\n    \tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\n    \tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\n\n    \t// build geometry\n    \tthis.setIndex( new BufferAttribute( indices, 1 ) );\n    \tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n    \tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n    \tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n    \t// helper functions\n\n    \tfunction calculateVertexCount( w, h, d ) {\n\n    \t\tvar vertices = 0;\n\n    \t\t// calculate the amount of vertices for each side (plane)\n    \t\tvertices += (w + 1) * (h + 1) * 2; // xy\n    \t\tvertices += (w + 1) * (d + 1) * 2; // xz\n    \t\tvertices += (d + 1) * (h + 1) * 2; // zy\n\n    \t\treturn vertices;\n\n    \t}\n\n    \tfunction calculateIndexCount( w, h, d ) {\n\n    \t\tvar index = 0;\n\n    \t\t// calculate the amount of squares for each side\n    \t\tindex += w * h * 2; // xy\n    \t\tindex += w * d * 2; // xz\n    \t\tindex += d * h * 2; // zy\n\n    \t\treturn index * 6; // two triangles per square => six vertices per square\n\n    \t}\n\n    \tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n    \t\tvar segmentWidth\t= width / gridX;\n    \t\tvar segmentHeight = height / gridY;\n\n    \t\tvar widthHalf = width / 2;\n    \t\tvar heightHalf = height / 2;\n    \t\tvar depthHalf = depth / 2;\n\n    \t\tvar gridX1 = gridX + 1;\n    \t\tvar gridY1 = gridY + 1;\n\n    \t\tvar vertexCounter = 0;\n    \t\tvar groupCount = 0;\n\n    \t\tvar vector = new Vector3();\n\n    \t\t// generate vertices, normals and uvs\n\n    \t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n    \t\t\tvar y = iy * segmentHeight - heightHalf;\n\n    \t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n    \t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n    \t\t\t\t// set values to correct vector component\n    \t\t\t\tvector[ u ] = x * udir;\n    \t\t\t\tvector[ v ] = y * vdir;\n    \t\t\t\tvector[ w ] = depthHalf;\n\n    \t\t\t\t// now apply vector to vertex buffer\n    \t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\n    \t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\n    \t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\n\n    \t\t\t\t// set values to correct vector component\n    \t\t\t\tvector[ u ] = 0;\n    \t\t\t\tvector[ v ] = 0;\n    \t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n    \t\t\t\t// now apply vector to normal buffer\n    \t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\n    \t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\n    \t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\n\n    \t\t\t\t// uvs\n    \t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\n    \t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\n\n    \t\t\t\t// update offsets and counters\n    \t\t\t\tvertexBufferOffset += 3;\n    \t\t\t\tuvBufferOffset += 2;\n    \t\t\t\tvertexCounter += 1;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// 1. you need three indices to draw a single face\n    \t\t// 2. a single segment consists of two faces\n    \t\t// 3. so we need to generate six (2*3) indices per segment\n\n    \t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n    \t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n    \t\t\t\t// indices\n    \t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n    \t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n    \t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n    \t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n    \t\t\t\t// face one\n    \t\t\t\tindices[ indexBufferOffset ] = a;\n    \t\t\t\tindices[ indexBufferOffset + 1 ] = b;\n    \t\t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n    \t\t\t\t// face two\n    \t\t\t\tindices[ indexBufferOffset + 3 ] = b;\n    \t\t\t\tindices[ indexBufferOffset + 4 ] = c;\n    \t\t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n    \t\t\t\t// update offsets and counters\n    \t\t\t\tindexBufferOffset += 6;\n    \t\t\t\tgroupCount += 6;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// add a group to the geometry. this will ensure multi material support\n    \t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n    \t\t// calculate new start value for groups\n    \t\tgroupStart += groupCount;\n\n    \t\t// update total number of vertices\n    \t\tnumberOfVertices += vertexCounter;\n\n    \t}\n\n    }\n\n    BoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n     */\n\n    function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'PlaneBufferGeometry';\n\n    \tthis.parameters = {\n    \t\twidth: width,\n    \t\theight: height,\n    \t\twidthSegments: widthSegments,\n    \t\theightSegments: heightSegments\n    \t};\n\n    \tvar width_half = width / 2;\n    \tvar height_half = height / 2;\n\n    \tvar gridX = Math.floor( widthSegments ) || 1;\n    \tvar gridY = Math.floor( heightSegments ) || 1;\n\n    \tvar gridX1 = gridX + 1;\n    \tvar gridY1 = gridY + 1;\n\n    \tvar segment_width = width / gridX;\n    \tvar segment_height = height / gridY;\n\n    \tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\n    \tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\n    \tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\n\n    \tvar offset = 0;\n    \tvar offset2 = 0;\n\n    \tfor ( var iy = 0; iy < gridY1; iy ++ ) {\n\n    \t\tvar y = iy * segment_height - height_half;\n\n    \t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\n\n    \t\t\tvar x = ix * segment_width - width_half;\n\n    \t\t\tvertices[ offset ] = x;\n    \t\t\tvertices[ offset + 1 ] = - y;\n\n    \t\t\tnormals[ offset + 2 ] = 1;\n\n    \t\t\tuvs[ offset2 ] = ix / gridX;\n    \t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\n\n    \t\t\toffset += 3;\n    \t\t\toffset2 += 2;\n\n    \t\t}\n\n    \t}\n\n    \toffset = 0;\n\n    \tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\n\n    \tfor ( var iy = 0; iy < gridY; iy ++ ) {\n\n    \t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\n\n    \t\t\tvar a = ix + gridX1 * iy;\n    \t\t\tvar b = ix + gridX1 * ( iy + 1 );\n    \t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n    \t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n    \t\t\tindices[ offset ] = a;\n    \t\t\tindices[ offset + 1 ] = b;\n    \t\t\tindices[ offset + 2 ] = d;\n\n    \t\t\tindices[ offset + 3 ] = b;\n    \t\t\tindices[ offset + 4 ] = c;\n    \t\t\tindices[ offset + 5 ] = d;\n\n    \t\t\toffset += 6;\n\n    \t\t}\n\n    \t}\n\n    \tthis.setIndex( new BufferAttribute( indices, 1 ) );\n    \tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n    \tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n    \tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n    }\n\n    PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author mikael emtinger / http://gomo.se/\n     * @author WestLangley / http://github.com/WestLangley\n    */\n\n    function Camera() {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Camera';\n\n    \tthis.matrixWorldInverse = new Matrix4();\n    \tthis.projectionMatrix = new Matrix4();\n\n    }\n\n    Camera.prototype = Object.create( Object3D.prototype );\n    Camera.prototype.constructor = Camera;\n\n    Camera.prototype.isCamera = true;\n\n    Camera.prototype.getWorldDirection = function () {\n\n    \tvar quaternion = new Quaternion();\n\n    \treturn function getWorldDirection( optionalTarget ) {\n\n    \t\tvar result = optionalTarget || new Vector3();\n\n    \t\tthis.getWorldQuaternion( quaternion );\n\n    \t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n    \t};\n\n    }();\n\n    Camera.prototype.lookAt = function () {\n\n    \t// This routine does not support cameras with rotated and/or translated parent(s)\n\n    \tvar m1 = new Matrix4();\n\n    \treturn function lookAt( vector ) {\n\n    \t\tm1.lookAt( this.position, vector, this.up );\n\n    \t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n    \t};\n\n    }();\n\n    Camera.prototype.clone = function () {\n\n    \treturn new this.constructor().copy( this );\n\n    };\n\n    Camera.prototype.copy = function ( source ) {\n\n    \tObject3D.prototype.copy.call( this, source );\n\n    \tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n    \tthis.projectionMatrix.copy( source.projectionMatrix );\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author greggman / http://games.greggman.com/\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     * @author tschw\n     */\n\n    function PerspectiveCamera( fov, aspect, near, far ) {\n\n    \tCamera.call( this );\n\n    \tthis.type = 'PerspectiveCamera';\n\n    \tthis.fov = fov !== undefined ? fov : 50;\n    \tthis.zoom = 1;\n\n    \tthis.near = near !== undefined ? near : 0.1;\n    \tthis.far = far !== undefined ? far : 2000;\n    \tthis.focus = 10;\n\n    \tthis.aspect = aspect !== undefined ? aspect : 1;\n    \tthis.view = null;\n\n    \tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n    \tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n    \tthis.updateProjectionMatrix();\n\n    }\n\n    PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n    \tconstructor: PerspectiveCamera,\n\n    \tisPerspectiveCamera: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tCamera.prototype.copy.call( this, source );\n\n    \t\tthis.fov = source.fov;\n    \t\tthis.zoom = source.zoom;\n\n    \t\tthis.near = source.near;\n    \t\tthis.far = source.far;\n    \t\tthis.focus = source.focus;\n\n    \t\tthis.aspect = source.aspect;\n    \t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n    \t\tthis.filmGauge = source.filmGauge;\n    \t\tthis.filmOffset = source.filmOffset;\n\n    \t\treturn this;\n\n    \t},\n\n    \t/**\n    \t * Sets the FOV by focal length in respect to the current .filmGauge.\n    \t *\n    \t * The default film gauge is 35, so that the focal length can be specified for\n    \t * a 35mm (full frame) camera.\n    \t *\n    \t * Values for focal length and film gauge must have the same unit.\n    \t */\n    \tsetFocalLength: function ( focalLength ) {\n\n    \t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n    \t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n    \t\tthis.fov = exports.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n    \t\tthis.updateProjectionMatrix();\n\n    \t},\n\n    \t/**\n    \t * Calculates the focal length from the current .fov and .filmGauge.\n    \t */\n    \tgetFocalLength: function () {\n\n    \t\tvar vExtentSlope = Math.tan( exports.Math.DEG2RAD * 0.5 * this.fov );\n\n    \t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n    \t},\n\n    \tgetEffectiveFOV: function () {\n\n    \t\treturn exports.Math.RAD2DEG * 2 * Math.atan(\n    \t\t\t\tMath.tan( exports.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n    \t},\n\n    \tgetFilmWidth: function () {\n\n    \t\t// film not completely covered in portrait format (aspect < 1)\n    \t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n    \t},\n\n    \tgetFilmHeight: function () {\n\n    \t\t// film not completely covered in landscape format (aspect > 1)\n    \t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n    \t},\n\n    \t/**\n    \t * Sets an offset in a larger frustum. This is useful for multi-window or\n    \t * multi-monitor/multi-machine setups.\n    \t *\n    \t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n    \t * the monitors are in grid like this\n    \t *\n    \t *   +---+---+---+\n    \t *   | A | B | C |\n    \t *   +---+---+---+\n    \t *   | D | E | F |\n    \t *   +---+---+---+\n    \t *\n    \t * then for each monitor you would call it like this\n    \t *\n    \t *   var w = 1920;\n    \t *   var h = 1080;\n    \t *   var fullWidth = w * 3;\n    \t *   var fullHeight = h * 2;\n    \t *\n    \t *   --A--\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n    \t *   --B--\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n    \t *   --C--\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n    \t *   --D--\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n    \t *   --E--\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n    \t *   --F--\n    \t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n    \t *\n    \t *   Note there is no reason monitors have to be the same size or in a grid.\n    \t */\n    \tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n    \t\tthis.aspect = fullWidth / fullHeight;\n\n    \t\tthis.view = {\n    \t\t\tfullWidth: fullWidth,\n    \t\t\tfullHeight: fullHeight,\n    \t\t\toffsetX: x,\n    \t\t\toffsetY: y,\n    \t\t\twidth: width,\n    \t\t\theight: height\n    \t\t};\n\n    \t\tthis.updateProjectionMatrix();\n\n    \t},\n\n    \tclearViewOffset: function() {\n\n    \t\tthis.view = null;\n    \t\tthis.updateProjectionMatrix();\n\n    \t},\n\n    \tupdateProjectionMatrix: function () {\n\n    \t\tvar near = this.near,\n    \t\t\ttop = near * Math.tan(\n    \t\t\t\t\texports.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n    \t\t\theight = 2 * top,\n    \t\t\twidth = this.aspect * height,\n    \t\t\tleft = - 0.5 * width,\n    \t\t\tview = this.view;\n\n    \t\tif ( view !== null ) {\n\n    \t\t\tvar fullWidth = view.fullWidth,\n    \t\t\t\tfullHeight = view.fullHeight;\n\n    \t\t\tleft += view.offsetX * width / fullWidth;\n    \t\t\ttop -= view.offsetY * height / fullHeight;\n    \t\t\twidth *= view.width / fullWidth;\n    \t\t\theight *= view.height / fullHeight;\n\n    \t\t}\n\n    \t\tvar skew = this.filmOffset;\n    \t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n    \t\tthis.projectionMatrix.makeFrustum(\n    \t\t\t\tleft, left + width, top - height, top, near, this.far );\n\n    \t},\n\n    \ttoJSON: function ( meta ) {\n\n    \t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n    \t\tdata.object.fov = this.fov;\n    \t\tdata.object.zoom = this.zoom;\n\n    \t\tdata.object.near = this.near;\n    \t\tdata.object.far = this.far;\n    \t\tdata.object.focus = this.focus;\n\n    \t\tdata.object.aspect = this.aspect;\n\n    \t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n    \t\tdata.object.filmGauge = this.filmGauge;\n    \t\tdata.object.filmOffset = this.filmOffset;\n\n    \t\treturn data;\n\n    \t}\n\n    } );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author arose / http://github.com/arose\n     */\n\n    function OrthographicCamera( left, right, top, bottom, near, far ) {\n\n    \tCamera.call( this );\n\n    \tthis.type = 'OrthographicCamera';\n\n    \tthis.zoom = 1;\n    \tthis.view = null;\n\n    \tthis.left = left;\n    \tthis.right = right;\n    \tthis.top = top;\n    \tthis.bottom = bottom;\n\n    \tthis.near = ( near !== undefined ) ? near : 0.1;\n    \tthis.far = ( far !== undefined ) ? far : 2000;\n\n    \tthis.updateProjectionMatrix();\n\n    }\n\n    OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n    \tconstructor: OrthographicCamera,\n\n    \tisOrthographicCamera: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tCamera.prototype.copy.call( this, source );\n\n    \t\tthis.left = source.left;\n    \t\tthis.right = source.right;\n    \t\tthis.top = source.top;\n    \t\tthis.bottom = source.bottom;\n    \t\tthis.near = source.near;\n    \t\tthis.far = source.far;\n\n    \t\tthis.zoom = source.zoom;\n    \t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetViewOffset: function( fullWidth, fullHeight, x, y, width, height ) {\n\n    \t\tthis.view = {\n    \t\t\tfullWidth: fullWidth,\n    \t\t\tfullHeight: fullHeight,\n    \t\t\toffsetX: x,\n    \t\t\toffsetY: y,\n    \t\t\twidth: width,\n    \t\t\theight: height\n    \t\t};\n\n    \t\tthis.updateProjectionMatrix();\n\n    \t},\n\n    \tclearViewOffset: function() {\n\n    \t\tthis.view = null;\n    \t\tthis.updateProjectionMatrix();\n\n    \t},\n\n    \tupdateProjectionMatrix: function () {\n\n    \t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n    \t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n    \t\tvar cx = ( this.right + this.left ) / 2;\n    \t\tvar cy = ( this.top + this.bottom ) / 2;\n\n    \t\tvar left = cx - dx;\n    \t\tvar right = cx + dx;\n    \t\tvar top = cy + dy;\n    \t\tvar bottom = cy - dy;\n\n    \t\tif ( this.view !== null ) {\n\n    \t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n    \t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n    \t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n    \t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n    \t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n    \t\t\tright = left + scaleW * ( this.view.width / zoomW );\n    \t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n    \t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n    \t\t}\n\n    \t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n    \t},\n\n    \ttoJSON: function ( meta ) {\n\n    \t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n    \t\tdata.object.zoom = this.zoom;\n    \t\tdata.object.left = this.left;\n    \t\tdata.object.right = this.right;\n    \t\tdata.object.top = this.top;\n    \t\tdata.object.bottom = this.bottom;\n    \t\tdata.object.near = this.near;\n    \t\tdata.object.far = this.far;\n\n    \t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n    \t\treturn data;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n    \tvar mode;\n\n    \tfunction setMode( value ) {\n\n    \t\tmode = value;\n\n    \t}\n\n    \tvar type, size;\n\n    \tfunction setIndex( index ) {\n\n    \t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\n\n    \t\t\ttype = gl.UNSIGNED_INT;\n    \t\t\tsize = 4;\n\n    \t\t} else {\n\n    \t\t\ttype = gl.UNSIGNED_SHORT;\n    \t\t\tsize = 2;\n\n    \t\t}\n\n    \t}\n\n    \tfunction render( start, count ) {\n\n    \t\tgl.drawElements( mode, count, type, start * size );\n\n    \t\tinfoRender.calls ++;\n    \t\tinfoRender.vertices += count;\n\n    \t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n    \t}\n\n    \tfunction renderInstances( geometry, start, count ) {\n\n    \t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n    \t\tif ( extension === null ) {\n\n    \t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\n\n    \t\tinfoRender.calls ++;\n    \t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n    \t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n    \t}\n\n    \treturn {\n\n    \t\tsetMode: setMode,\n    \t\tsetIndex: setIndex,\n    \t\trender: render,\n    \t\trenderInstances: renderInstances\n\n    \t};\n\n    }\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n    \tvar mode;\n\n    \tfunction setMode( value ) {\n\n    \t\tmode = value;\n\n    \t}\n\n    \tfunction render( start, count ) {\n\n    \t\tgl.drawArrays( mode, start, count );\n\n    \t\tinfoRender.calls ++;\n    \t\tinfoRender.vertices += count;\n\n    \t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\n    \t}\n\n    \tfunction renderInstances( geometry ) {\n\n    \t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n    \t\tif ( extension === null ) {\n\n    \t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tvar position = geometry.attributes.position;\n\n    \t\tvar count = 0;\n\n    \t\tif ( (position && position.isInterleavedBufferAttribute) ) {\n\n    \t\t\tcount = position.data.count;\n\n    \t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n    \t\t} else {\n\n    \t\t\tcount = position.count;\n\n    \t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n    \t\t}\n\n    \t\tinfoRender.calls ++;\n    \t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n    \t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\n    \t}\n\n    \treturn {\n    \t\tsetMode: setMode,\n    \t\trender: render,\n    \t\trenderInstances: renderInstances\n    \t};\n\n    }\n\n    function WebGLLights() {\n\n    \tvar lights = {};\n\n    \treturn {\n\n    \t\tget: function ( light ) {\n\n    \t\t\tif ( lights[ light.id ] !== undefined ) {\n\n    \t\t\t\treturn lights[ light.id ];\n\n    \t\t\t}\n\n    \t\t\tvar uniforms;\n\n    \t\t\tswitch ( light.type ) {\n\n    \t\t\t\tcase 'DirectionalLight':\n    \t\t\t\t\tuniforms = {\n    \t\t\t\t\t\tdirection: new Vector3(),\n    \t\t\t\t\t\tcolor: new Color(),\n\n    \t\t\t\t\t\tshadow: false,\n    \t\t\t\t\t\tshadowBias: 0,\n    \t\t\t\t\t\tshadowRadius: 1,\n    \t\t\t\t\t\tshadowMapSize: new Vector2()\n    \t\t\t\t\t};\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'SpotLight':\n    \t\t\t\t\tuniforms = {\n    \t\t\t\t\t\tposition: new Vector3(),\n    \t\t\t\t\t\tdirection: new Vector3(),\n    \t\t\t\t\t\tcolor: new Color(),\n    \t\t\t\t\t\tdistance: 0,\n    \t\t\t\t\t\tconeCos: 0,\n    \t\t\t\t\t\tpenumbraCos: 0,\n    \t\t\t\t\t\tdecay: 0,\n\n    \t\t\t\t\t\tshadow: false,\n    \t\t\t\t\t\tshadowBias: 0,\n    \t\t\t\t\t\tshadowRadius: 1,\n    \t\t\t\t\t\tshadowMapSize: new Vector2()\n    \t\t\t\t\t};\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'PointLight':\n    \t\t\t\t\tuniforms = {\n    \t\t\t\t\t\tposition: new Vector3(),\n    \t\t\t\t\t\tcolor: new Color(),\n    \t\t\t\t\t\tdistance: 0,\n    \t\t\t\t\t\tdecay: 0,\n\n    \t\t\t\t\t\tshadow: false,\n    \t\t\t\t\t\tshadowBias: 0,\n    \t\t\t\t\t\tshadowRadius: 1,\n    \t\t\t\t\t\tshadowMapSize: new Vector2()\n    \t\t\t\t\t};\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'HemisphereLight':\n    \t\t\t\t\tuniforms = {\n    \t\t\t\t\t\tdirection: new Vector3(),\n    \t\t\t\t\t\tskyColor: new Color(),\n    \t\t\t\t\t\tgroundColor: new Color()\n    \t\t\t\t\t};\n    \t\t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t\tlights[ light.id ] = uniforms;\n\n    \t\t\treturn uniforms;\n\n    \t\t}\n\n    \t};\n\n    }\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function addLineNumbers( string ) {\n\n    \tvar lines = string.split( '\\n' );\n\n    \tfor ( var i = 0; i < lines.length; i ++ ) {\n\n    \t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n    \t}\n\n    \treturn lines.join( '\\n' );\n\n    }\n\n    function WebGLShader( gl, type, string ) {\n\n    \tvar shader = gl.createShader( type );\n\n    \tgl.shaderSource( shader, string );\n    \tgl.compileShader( shader );\n\n    \tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n    \t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n    \t}\n\n    \tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n    \t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n    \t}\n\n    \t// --enable-privileged-webgl-extension\n    \t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n    \treturn shader;\n\n    }\n\n    var programIdCount = 0;\n\n    function getEncodingComponents( encoding ) {\n\n    \tswitch ( encoding ) {\n\n    \t\tcase LinearEncoding:\n    \t\t\treturn [ 'Linear','( value )' ];\n    \t\tcase sRGBEncoding:\n    \t\t\treturn [ 'sRGB','( value )' ];\n    \t\tcase RGBEEncoding:\n    \t\t\treturn [ 'RGBE','( value )' ];\n    \t\tcase RGBM7Encoding:\n    \t\t\treturn [ 'RGBM','( value, 7.0 )' ];\n    \t\tcase RGBM16Encoding:\n    \t\t\treturn [ 'RGBM','( value, 16.0 )' ];\n    \t\tcase RGBDEncoding:\n    \t\t\treturn [ 'RGBD','( value, 256.0 )' ];\n    \t\tcase GammaEncoding:\n    \t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\n    \t\tdefault:\n    \t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n    \t}\n\n    }\n\n    function getTexelDecodingFunction( functionName, encoding ) {\n\n    \tvar components = getEncodingComponents( encoding );\n    \treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n    }\n\n    function getTexelEncodingFunction( functionName, encoding ) {\n\n    \tvar components = getEncodingComponents( encoding );\n    \treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n    }\n\n    function getToneMappingFunction( functionName, toneMapping ) {\n\n    \tvar toneMappingName;\n\n    \tswitch ( toneMapping ) {\n\n    \t\tcase LinearToneMapping:\n    \t\t\ttoneMappingName = \"Linear\";\n    \t\t\tbreak;\n\n    \t\tcase ReinhardToneMapping:\n    \t\t\ttoneMappingName = \"Reinhard\";\n    \t\t\tbreak;\n\n    \t\tcase Uncharted2ToneMapping:\n    \t\t\ttoneMappingName = \"Uncharted2\";\n    \t\t\tbreak;\n\n    \t\tcase CineonToneMapping:\n    \t\t\ttoneMappingName = \"OptimizedCineon\";\n    \t\t\tbreak;\n\n    \t\tdefault:\n    \t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n    \t}\n\n    \treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n    }\n\n    function generateExtensions( extensions, parameters, rendererExtensions ) {\n\n    \textensions = extensions || {};\n\n    \tvar chunks = [\n    \t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n    \t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n    \t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n    \t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\n    \t];\n\n    \treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n    }\n\n    function generateDefines( defines ) {\n\n    \tvar chunks = [];\n\n    \tfor ( var name in defines ) {\n\n    \t\tvar value = defines[ name ];\n\n    \t\tif ( value === false ) continue;\n\n    \t\tchunks.push( '#define ' + name + ' ' + value );\n\n    \t}\n\n    \treturn chunks.join( '\\n' );\n\n    }\n\n    function fetchAttributeLocations( gl, program, identifiers ) {\n\n    \tvar attributes = {};\n\n    \tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n    \tfor ( var i = 0; i < n; i ++ ) {\n\n    \t\tvar info = gl.getActiveAttrib( program, i );\n    \t\tvar name = info.name;\n\n    \t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\n\n    \t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n    \t}\n\n    \treturn attributes;\n\n    }\n\n    function filterEmptyLine( string ) {\n\n    \treturn string !== '';\n\n    }\n\n    function replaceLightNums( string, parameters ) {\n\n    \treturn string\n    \t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n    \t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n    \t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n    \t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n    }\n\n    function parseIncludes( string ) {\n\n    \tvar pattern = /#include +<([\\w\\d.]+)>/g;\n\n    \tfunction replace( match, include ) {\n\n    \t\tvar replace = ShaderChunk[ include ];\n\n    \t\tif ( replace === undefined ) {\n\n    \t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n    \t\t}\n\n    \t\treturn parseIncludes( replace );\n\n    \t}\n\n    \treturn string.replace( pattern, replace );\n\n    }\n\n    function unrollLoops( string ) {\n\n    \tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n    \tfunction replace( match, start, end, snippet ) {\n\n    \t\tvar unroll = '';\n\n    \t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n    \t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n    \t\t}\n\n    \t\treturn unroll;\n\n    \t}\n\n    \treturn string.replace( pattern, replace );\n\n    }\n\n    function WebGLProgram( renderer, code, material, parameters ) {\n\n    \tvar gl = renderer.context;\n\n    \tvar extensions = material.extensions;\n    \tvar defines = material.defines;\n\n    \tvar vertexShader = material.__webglShader.vertexShader;\n    \tvar fragmentShader = material.__webglShader.fragmentShader;\n\n    \tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    \tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n    \t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n    \t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n    \t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n    \t}\n\n    \tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    \tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n    \tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    \tif ( parameters.envMap ) {\n\n    \t\tswitch ( material.envMap.mapping ) {\n\n    \t\t\tcase CubeReflectionMapping:\n    \t\t\tcase CubeRefractionMapping:\n    \t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n    \t\t\t\tbreak;\n\n    \t\t\tcase CubeUVReflectionMapping:\n    \t\t\tcase CubeUVRefractionMapping:\n    \t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n    \t\t\t\tbreak;\n\n    \t\t\tcase EquirectangularReflectionMapping:\n    \t\t\tcase EquirectangularRefractionMapping:\n    \t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n    \t\t\t\tbreak;\n\n    \t\t\tcase SphericalReflectionMapping:\n    \t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n    \t\t\t\tbreak;\n\n    \t\t}\n\n    \t\tswitch ( material.envMap.mapping ) {\n\n    \t\t\tcase CubeRefractionMapping:\n    \t\t\tcase EquirectangularRefractionMapping:\n    \t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n    \t\t\t\tbreak;\n\n    \t\t}\n\n    \t\tswitch ( material.combine ) {\n\n    \t\t\tcase MultiplyOperation:\n    \t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n    \t\t\t\tbreak;\n\n    \t\t\tcase MixOperation:\n    \t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n    \t\t\t\tbreak;\n\n    \t\t\tcase AddOperation:\n    \t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n    \t\t\t\tbreak;\n\n    \t\t}\n\n    \t}\n\n    \tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n    \t// console.log( 'building new program ' );\n\n    \t//\n\n    \tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\n\n    \tvar customDefines = generateDefines( defines );\n\n    \t//\n\n    \tvar program = gl.createProgram();\n\n    \tvar prefixVertex, prefixFragment;\n\n    \tif ( material.isRawShaderMaterial ) {\n\n    \t\tprefixVertex = [\n\n    \t\t\tcustomDefines,\n\n    \t\t\t'\\n'\n\n    \t\t].filter( filterEmptyLine ).join( '\\n' );\n\n    \t\tprefixFragment = [\n\n    \t\t\tcustomExtensions,\n    \t\t\tcustomDefines,\n\n    \t\t\t'\\n'\n\n    \t\t].filter( filterEmptyLine ).join( '\\n' );\n\n    \t} else {\n\n    \t\tprefixVertex = [\n\n    \t\t\t'precision ' + parameters.precision + ' float;',\n    \t\t\t'precision ' + parameters.precision + ' int;',\n\n    \t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n    \t\t\tcustomDefines,\n\n    \t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n    \t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n    \t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\n    \t\t\tparameters.map ? '#define USE_MAP' : '',\n    \t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n    \t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n    \t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n    \t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n    \t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n    \t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n    \t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n    \t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n    \t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n    \t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n    \t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n    \t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n    \t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n    \t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n    \t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n    \t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n    \t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n    \t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n    \t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n    \t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n    \t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n    \t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n    \t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n    \t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n    \t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n    \t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n    \t\t\t'uniform mat4 modelMatrix;',\n    \t\t\t'uniform mat4 modelViewMatrix;',\n    \t\t\t'uniform mat4 projectionMatrix;',\n    \t\t\t'uniform mat4 viewMatrix;',\n    \t\t\t'uniform mat3 normalMatrix;',\n    \t\t\t'uniform vec3 cameraPosition;',\n\n    \t\t\t'attribute vec3 position;',\n    \t\t\t'attribute vec3 normal;',\n    \t\t\t'attribute vec2 uv;',\n\n    \t\t\t'#ifdef USE_COLOR',\n\n    \t\t\t'\tattribute vec3 color;',\n\n    \t\t\t'#endif',\n\n    \t\t\t'#ifdef USE_MORPHTARGETS',\n\n    \t\t\t'\tattribute vec3 morphTarget0;',\n    \t\t\t'\tattribute vec3 morphTarget1;',\n    \t\t\t'\tattribute vec3 morphTarget2;',\n    \t\t\t'\tattribute vec3 morphTarget3;',\n\n    \t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n    \t\t\t'\t\tattribute vec3 morphNormal0;',\n    \t\t\t'\t\tattribute vec3 morphNormal1;',\n    \t\t\t'\t\tattribute vec3 morphNormal2;',\n    \t\t\t'\t\tattribute vec3 morphNormal3;',\n\n    \t\t\t'\t#else',\n\n    \t\t\t'\t\tattribute vec3 morphTarget4;',\n    \t\t\t'\t\tattribute vec3 morphTarget5;',\n    \t\t\t'\t\tattribute vec3 morphTarget6;',\n    \t\t\t'\t\tattribute vec3 morphTarget7;',\n\n    \t\t\t'\t#endif',\n\n    \t\t\t'#endif',\n\n    \t\t\t'#ifdef USE_SKINNING',\n\n    \t\t\t'\tattribute vec4 skinIndex;',\n    \t\t\t'\tattribute vec4 skinWeight;',\n\n    \t\t\t'#endif',\n\n    \t\t\t'\\n'\n\n    \t\t].filter( filterEmptyLine ).join( '\\n' );\n\n    \t\tprefixFragment = [\n\n    \t\t\tcustomExtensions,\n\n    \t\t\t'precision ' + parameters.precision + ' float;',\n    \t\t\t'precision ' + parameters.precision + ' int;',\n\n    \t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\n\n    \t\t\tcustomDefines,\n\n    \t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n    \t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n    \t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n    \t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n    \t\t\tparameters.map ? '#define USE_MAP' : '',\n    \t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n    \t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n    \t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n    \t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n    \t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n    \t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n    \t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n    \t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n    \t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n    \t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n    \t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n    \t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n    \t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n    \t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n    \t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n    \t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n    \t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n    \t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n    \t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n    \t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n    \t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n    \t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n    \t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n    \t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n    \t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n    \t\t\t'uniform mat4 viewMatrix;',\n    \t\t\t'uniform vec3 cameraPosition;',\n\n    \t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n    \t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\n    \t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n    \t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n    \t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n    \t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n    \t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n    \t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n    \t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n    \t\t\t'\\n'\n\n    \t\t].filter( filterEmptyLine ).join( '\\n' );\n\n    \t}\n\n    \tvertexShader = parseIncludes( vertexShader, parameters );\n    \tvertexShader = replaceLightNums( vertexShader, parameters );\n\n    \tfragmentShader = parseIncludes( fragmentShader, parameters );\n    \tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n    \tif ( ! material.isShaderMaterial ) {\n\n    \t\tvertexShader = unrollLoops( vertexShader );\n    \t\tfragmentShader = unrollLoops( fragmentShader );\n\n    \t}\n\n    \tvar vertexGlsl = prefixVertex + vertexShader;\n    \tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n    \t// console.log( '*VERTEX*', vertexGlsl );\n    \t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n    \tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n    \tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n    \tgl.attachShader( program, glVertexShader );\n    \tgl.attachShader( program, glFragmentShader );\n\n    \t// Force a particular attribute to index 0.\n\n    \tif ( material.index0AttributeName !== undefined ) {\n\n    \t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n    \t} else if ( parameters.morphTargets === true ) {\n\n    \t\t// programs with morphTargets displace position out of attribute 0\n    \t\tgl.bindAttribLocation( program, 0, 'position' );\n\n    \t}\n\n    \tgl.linkProgram( program );\n\n    \tvar programLog = gl.getProgramInfoLog( program );\n    \tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n    \tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n    \tvar runnable = true;\n    \tvar haveDiagnostics = true;\n\n    \t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n    \t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n    \tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n    \t\trunnable = false;\n\n    \t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n    \t} else if ( programLog !== '' ) {\n\n    \t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n    \t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n    \t\thaveDiagnostics = false;\n\n    \t}\n\n    \tif ( haveDiagnostics ) {\n\n    \t\tthis.diagnostics = {\n\n    \t\t\trunnable: runnable,\n    \t\t\tmaterial: material,\n\n    \t\t\tprogramLog: programLog,\n\n    \t\t\tvertexShader: {\n\n    \t\t\t\tlog: vertexLog,\n    \t\t\t\tprefix: prefixVertex\n\n    \t\t\t},\n\n    \t\t\tfragmentShader: {\n\n    \t\t\t\tlog: fragmentLog,\n    \t\t\t\tprefix: prefixFragment\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}\n\n    \t// clean up\n\n    \tgl.deleteShader( glVertexShader );\n    \tgl.deleteShader( glFragmentShader );\n\n    \t// set up caching for uniform locations\n\n    \tvar cachedUniforms;\n\n    \tthis.getUniforms = function() {\n\n    \t\tif ( cachedUniforms === undefined ) {\n\n    \t\t\tcachedUniforms =\n    \t\t\t\t\tnew WebGLUniforms( gl, program, renderer );\n\n    \t\t}\n\n    \t\treturn cachedUniforms;\n\n    \t};\n\n    \t// set up caching for attribute locations\n\n    \tvar cachedAttributes;\n\n    \tthis.getAttributes = function() {\n\n    \t\tif ( cachedAttributes === undefined ) {\n\n    \t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n    \t\t}\n\n    \t\treturn cachedAttributes;\n\n    \t};\n\n    \t// free resource\n\n    \tthis.destroy = function() {\n\n    \t\tgl.deleteProgram( program );\n    \t\tthis.program = undefined;\n\n    \t};\n\n    \t// DEPRECATED\n\n    \tObject.defineProperties( this, {\n\n    \t\tuniforms: {\n    \t\t\tget: function() {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n    \t\t\t\treturn this.getUniforms();\n\n    \t\t\t}\n    \t\t},\n\n    \t\tattributes: {\n    \t\t\tget: function() {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n    \t\t\t\treturn this.getAttributes();\n\n    \t\t\t}\n    \t\t}\n\n    \t} );\n\n\n    \t//\n\n    \tthis.id = programIdCount ++;\n    \tthis.code = code;\n    \tthis.usedTimes = 1;\n    \tthis.program = program;\n    \tthis.vertexShader = glVertexShader;\n    \tthis.fragmentShader = glFragmentShader;\n\n    \treturn this;\n\n    }\n\n    function WebGLPrograms( renderer, capabilities ) {\n\n    \tvar programs = [];\n\n    \tvar shaderIDs = {\n    \t\tMeshDepthMaterial: 'depth',\n    \t\tMeshNormalMaterial: 'normal',\n    \t\tMeshBasicMaterial: 'basic',\n    \t\tMeshLambertMaterial: 'lambert',\n    \t\tMeshPhongMaterial: 'phong',\n    \t\tMeshStandardMaterial: 'physical',\n    \t\tMeshPhysicalMaterial: 'physical',\n    \t\tLineBasicMaterial: 'basic',\n    \t\tLineDashedMaterial: 'dashed',\n    \t\tPointsMaterial: 'points'\n    \t};\n\n    \tvar parameterNames = [\n    \t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n    \t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n    \t\t\"roughnessMap\", \"metalnessMap\",\n    \t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n    \t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n    \t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n    \t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n    \t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\n    \t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n    \t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"\n    \t];\n\n\n    \tfunction allocateBones( object ) {\n\n    \t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\n\n    \t\t\treturn 1024;\n\n    \t\t} else {\n\n    \t\t\t// default for when object is not specified\n    \t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n    \t\t\t//\n    \t\t\t//  - leave some extra space for other uniforms\n    \t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n    \t\t\t//    (up to 54 should be safe)\n\n    \t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n    \t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n    \t\t\tvar maxBones = nVertexMatrices;\n\n    \t\t\tif ( object !== undefined && (object && object.isSkinnedMesh) ) {\n\n    \t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\n\n    \t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\n\n    \t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn maxBones;\n\n    \t\t}\n\n    \t}\n\n    \tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n    \t\tvar encoding;\n\n    \t\tif ( ! map ) {\n\n    \t\t\tencoding = LinearEncoding;\n\n    \t\t} else if ( (map && map.isTexture) ) {\n\n    \t\t\tencoding = map.encoding;\n\n    \t\t} else if ( (map && map.isWebGLRenderTarget) ) {\n\n    \t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n    \t\t\tencoding = map.texture.encoding;\n\n    \t\t}\n\n    \t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n    \t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n    \t\t\tencoding = GammaEncoding;\n\n    \t\t}\n\n    \t\treturn encoding;\n\n    \t}\n\n    \tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\n\n    \t\tvar shaderID = shaderIDs[ material.type ];\n\n    \t\t// heuristics to create shader parameters according to lights in the scene\n    \t\t// (not to blow over maxLights budget)\n\n    \t\tvar maxBones = allocateBones( object );\n    \t\tvar precision = renderer.getPrecision();\n\n    \t\tif ( material.precision !== null ) {\n\n    \t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n    \t\t\tif ( precision !== material.precision ) {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\n\n    \t\tvar parameters = {\n\n    \t\t\tshaderID: shaderID,\n\n    \t\t\tprecision: precision,\n    \t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n    \t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n    \t\t\tmap: !! material.map,\n    \t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n    \t\t\tenvMap: !! material.envMap,\n    \t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n    \t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n    \t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n    \t\t\tlightMap: !! material.lightMap,\n    \t\t\taoMap: !! material.aoMap,\n    \t\t\temissiveMap: !! material.emissiveMap,\n    \t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n    \t\t\tbumpMap: !! material.bumpMap,\n    \t\t\tnormalMap: !! material.normalMap,\n    \t\t\tdisplacementMap: !! material.displacementMap,\n    \t\t\troughnessMap: !! material.roughnessMap,\n    \t\t\tmetalnessMap: !! material.metalnessMap,\n    \t\t\tspecularMap: !! material.specularMap,\n    \t\t\talphaMap: !! material.alphaMap,\n\n    \t\t\tcombine: material.combine,\n\n    \t\t\tvertexColors: material.vertexColors,\n\n    \t\t\tfog: !! fog,\n    \t\t\tuseFog: material.fog,\n    \t\t\tfogExp: (fog && fog.isFogExp2),\n\n    \t\t\tflatShading: material.shading === FlatShading,\n\n    \t\t\tsizeAttenuation: material.sizeAttenuation,\n    \t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n    \t\t\tskinning: material.skinning,\n    \t\t\tmaxBones: maxBones,\n    \t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\n\n    \t\t\tmorphTargets: material.morphTargets,\n    \t\t\tmorphNormals: material.morphNormals,\n    \t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n    \t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n    \t\t\tnumDirLights: lights.directional.length,\n    \t\t\tnumPointLights: lights.point.length,\n    \t\t\tnumSpotLights: lights.spot.length,\n    \t\t\tnumHemiLights: lights.hemi.length,\n\n    \t\t\tnumClippingPlanes: nClipPlanes,\n\n    \t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\n    \t\t\tshadowMapType: renderer.shadowMap.type,\n\n    \t\t\ttoneMapping: renderer.toneMapping,\n    \t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n    \t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n    \t\t\talphaTest: material.alphaTest,\n    \t\t\tdoubleSided: material.side === DoubleSide,\n    \t\t\tflipSided: material.side === BackSide,\n\n    \t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n    \t\t};\n\n    \t\treturn parameters;\n\n    \t};\n\n    \tthis.getProgramCode = function ( material, parameters ) {\n\n    \t\tvar array = [];\n\n    \t\tif ( parameters.shaderID ) {\n\n    \t\t\tarray.push( parameters.shaderID );\n\n    \t\t} else {\n\n    \t\t\tarray.push( material.fragmentShader );\n    \t\t\tarray.push( material.vertexShader );\n\n    \t\t}\n\n    \t\tif ( material.defines !== undefined ) {\n\n    \t\t\tfor ( var name in material.defines ) {\n\n    \t\t\t\tarray.push( name );\n    \t\t\t\tarray.push( material.defines[ name ] );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n    \t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n    \t\t}\n\n    \t\treturn array.join();\n\n    \t};\n\n    \tthis.acquireProgram = function ( material, parameters, code ) {\n\n    \t\tvar program;\n\n    \t\t// Check if code has been already compiled\n    \t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n    \t\t\tvar programInfo = programs[ p ];\n\n    \t\t\tif ( programInfo.code === code ) {\n\n    \t\t\t\tprogram = programInfo;\n    \t\t\t\t++ program.usedTimes;\n\n    \t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( program === undefined ) {\n\n    \t\t\tprogram = new WebGLProgram( renderer, code, material, parameters );\n    \t\t\tprograms.push( program );\n\n    \t\t}\n\n    \t\treturn program;\n\n    \t};\n\n    \tthis.releaseProgram = function( program ) {\n\n    \t\tif ( -- program.usedTimes === 0 ) {\n\n    \t\t\t// Remove from unordered set\n    \t\t\tvar i = programs.indexOf( program );\n    \t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n    \t\t\tprograms.pop();\n\n    \t\t\t// Free WebGL resources\n    \t\t\tprogram.destroy();\n\n    \t\t}\n\n    \t};\n\n    \t// Exposed for resource monitoring & error feedback via renderer.info:\n    \tthis.programs = programs;\n\n    }\n\n    function WebGLGeometries( gl, properties, info ) {\n\n    \tvar geometries = {};\n\n    \tfunction onGeometryDispose( event ) {\n\n    \t\tvar geometry = event.target;\n    \t\tvar buffergeometry = geometries[ geometry.id ];\n\n    \t\tif ( buffergeometry.index !== null ) {\n\n    \t\t\tdeleteAttribute( buffergeometry.index );\n\n    \t\t}\n\n    \t\tdeleteAttributes( buffergeometry.attributes );\n\n    \t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n    \t\tdelete geometries[ geometry.id ];\n\n    \t\t// TODO\n\n    \t\tvar property = properties.get( geometry );\n\n    \t\tif ( property.wireframe ) {\n\n    \t\t\tdeleteAttribute( property.wireframe );\n\n    \t\t}\n\n    \t\tproperties.delete( geometry );\n\n    \t\tvar bufferproperty = properties.get( buffergeometry );\n\n    \t\tif ( bufferproperty.wireframe ) {\n\n    \t\t\tdeleteAttribute( bufferproperty.wireframe );\n\n    \t\t}\n\n    \t\tproperties.delete( buffergeometry );\n\n    \t\t//\n\n    \t\tinfo.memory.geometries --;\n\n    \t}\n\n    \tfunction getAttributeBuffer( attribute ) {\n\n    \t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n    \t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n    \t\t}\n\n    \t\treturn properties.get( attribute ).__webglBuffer;\n\n    \t}\n\n    \tfunction deleteAttribute( attribute ) {\n\n    \t\tvar buffer = getAttributeBuffer( attribute );\n\n    \t\tif ( buffer !== undefined ) {\n\n    \t\t\tgl.deleteBuffer( buffer );\n    \t\t\tremoveAttributeBuffer( attribute );\n\n    \t\t}\n\n    \t}\n\n    \tfunction deleteAttributes( attributes ) {\n\n    \t\tfor ( var name in attributes ) {\n\n    \t\t\tdeleteAttribute( attributes[ name ] );\n\n    \t\t}\n\n    \t}\n\n    \tfunction removeAttributeBuffer( attribute ) {\n\n    \t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n    \t\t\tproperties.delete( attribute.data );\n\n    \t\t} else {\n\n    \t\t\tproperties.delete( attribute );\n\n    \t\t}\n\n    \t}\n\n    \treturn {\n\n    \t\tget: function ( object ) {\n\n    \t\t\tvar geometry = object.geometry;\n\n    \t\t\tif ( geometries[ geometry.id ] !== undefined ) {\n\n    \t\t\t\treturn geometries[ geometry.id ];\n\n    \t\t\t}\n\n    \t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n    \t\t\tvar buffergeometry;\n\n    \t\t\tif ( geometry.isBufferGeometry ) {\n\n    \t\t\t\tbuffergeometry = geometry;\n\n    \t\t\t} else if ( geometry.isGeometry ) {\n\n    \t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n    \t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n    \t\t\t\t}\n\n    \t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n    \t\t\t}\n\n    \t\t\tgeometries[ geometry.id ] = buffergeometry;\n\n    \t\t\tinfo.memory.geometries ++;\n\n    \t\t\treturn buffergeometry;\n\n    \t\t}\n\n    \t};\n\n    }\n\n    function WebGLObjects( gl, properties, info ) {\n\n    \tvar geometries = new WebGLGeometries( gl, properties, info );\n\n    \t//\n\n    \tfunction update( object ) {\n\n    \t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\n\n    \t\tvar geometry = geometries.get( object );\n\n    \t\tif ( object.geometry.isGeometry ) {\n\n    \t\t\tgeometry.updateFromObject( object );\n\n    \t\t}\n\n    \t\tvar index = geometry.index;\n    \t\tvar attributes = geometry.attributes;\n\n    \t\tif ( index !== null ) {\n\n    \t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\n\n    \t\t}\n\n    \t\tfor ( var name in attributes ) {\n\n    \t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\n\n    \t\t}\n\n    \t\t// morph targets\n\n    \t\tvar morphAttributes = geometry.morphAttributes;\n\n    \t\tfor ( var name in morphAttributes ) {\n\n    \t\t\tvar array = morphAttributes[ name ];\n\n    \t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n    \t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn geometry;\n\n    \t}\n\n    \tfunction updateAttribute( attribute, bufferType ) {\n\n    \t\tvar data = ( attribute.isInterleavedBufferAttribute ) ? attribute.data : attribute;\n\n    \t\tvar attributeProperties = properties.get( data );\n\n    \t\tif ( attributeProperties.__webglBuffer === undefined ) {\n\n    \t\t\tcreateBuffer( attributeProperties, data, bufferType );\n\n    \t\t} else if ( attributeProperties.version !== data.version ) {\n\n    \t\t\tupdateBuffer( attributeProperties, data, bufferType );\n\n    \t\t}\n\n    \t}\n\n    \tfunction createBuffer( attributeProperties, data, bufferType ) {\n\n    \t\tattributeProperties.__webglBuffer = gl.createBuffer();\n    \t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n    \t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n    \t\tgl.bufferData( bufferType, data.array, usage );\n\n    \t\tattributeProperties.version = data.version;\n\n    \t}\n\n    \tfunction updateBuffer( attributeProperties, data, bufferType ) {\n\n    \t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\n\n    \t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\n\n    \t\t\t// Not using update ranges\n\n    \t\t\tgl.bufferSubData( bufferType, 0, data.array );\n\n    \t\t} else if ( data.updateRange.count === 0 ) {\n\n    \t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n    \t\t} else {\n\n    \t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\n    \t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\n\n    \t\t\tdata.updateRange.count = 0; // reset range\n\n    \t\t}\n\n    \t\tattributeProperties.version = data.version;\n\n    \t}\n\n    \tfunction getAttributeBuffer( attribute ) {\n\n    \t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n    \t\t\treturn properties.get( attribute.data ).__webglBuffer;\n\n    \t\t}\n\n    \t\treturn properties.get( attribute ).__webglBuffer;\n\n    \t}\n\n    \tfunction getWireframeAttribute( geometry ) {\n\n    \t\tvar property = properties.get( geometry );\n\n    \t\tif ( property.wireframe !== undefined ) {\n\n    \t\t\treturn property.wireframe;\n\n    \t\t}\n\n    \t\tvar indices = [];\n\n    \t\tvar index = geometry.index;\n    \t\tvar attributes = geometry.attributes;\n    \t\tvar position = attributes.position;\n\n    \t\t// console.time( 'wireframe' );\n\n    \t\tif ( index !== null ) {\n\n    \t\t\tvar edges = {};\n    \t\t\tvar array = index.array;\n\n    \t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n    \t\t\t\tvar a = array[ i + 0 ];\n    \t\t\t\tvar b = array[ i + 1 ];\n    \t\t\t\tvar c = array[ i + 2 ];\n\n    \t\t\t\tindices.push( a, b, b, c, c, a );\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tvar array = attributes.position.array;\n\n    \t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n    \t\t\t\tvar a = i + 0;\n    \t\t\t\tvar b = i + 1;\n    \t\t\t\tvar c = i + 2;\n\n    \t\t\t\tindices.push( a, b, b, c, c, a );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// console.timeEnd( 'wireframe' );\n\n    \t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\n    \t\tvar attribute = new BufferAttribute( new TypeArray( indices ), 1 );\n\n    \t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n    \t\tproperty.wireframe = attribute;\n\n    \t\treturn attribute;\n\n    \t}\n\n    \treturn {\n\n    \t\tgetAttributeBuffer: getAttributeBuffer,\n    \t\tgetWireframeAttribute: getWireframeAttribute,\n\n    \t\tupdate: update\n\n    \t};\n\n    }\n\n    function WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, info ) {\n\n    \tvar _infoMemory = info.memory;\n    \tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext );\n\n    \t//\n\n    \tfunction clampToMaxSize( image, maxSize ) {\n\n    \t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n    \t\t\t// Warning: Scaling through the canvas will only work with images that use\n    \t\t\t// premultiplied alpha.\n\n    \t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n    \t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n    \t\t\tcanvas.width = Math.floor( image.width * scale );\n    \t\t\tcanvas.height = Math.floor( image.height * scale );\n\n    \t\t\tvar context = canvas.getContext( '2d' );\n    \t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n    \t\t\treturn canvas;\n\n    \t\t}\n\n    \t\treturn image;\n\n    \t}\n\n    \tfunction isPowerOfTwo( image ) {\n\n    \t\treturn exports.Math.isPowerOfTwo( image.width ) && exports.Math.isPowerOfTwo( image.height );\n\n    \t}\n\n    \tfunction makePowerOfTwo( image ) {\n\n    \t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\n\n    \t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n    \t\t\tcanvas.width = exports.Math.nearestPowerOfTwo( image.width );\n    \t\t\tcanvas.height = exports.Math.nearestPowerOfTwo( image.height );\n\n    \t\t\tvar context = canvas.getContext( '2d' );\n    \t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n    \t\t\treturn canvas;\n\n    \t\t}\n\n    \t\treturn image;\n\n    \t}\n\n    \tfunction textureNeedsPowerOfTwo( texture ) {\n\n    \t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) return true;\n    \t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) return true;\n\n    \t\treturn false;\n\n    \t}\n\n    \t// Fallback filters for non-power-of-2 textures\n\n    \tfunction filterFallback( f ) {\n\n    \t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n    \t\t\treturn _gl.NEAREST;\n\n    \t\t}\n\n    \t\treturn _gl.LINEAR;\n\n    \t}\n\n    \t//\n\n    \tfunction onTextureDispose( event ) {\n\n    \t\tvar texture = event.target;\n\n    \t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n    \t\tdeallocateTexture( texture );\n\n    \t\t_infoMemory.textures --;\n\n\n    \t}\n\n    \tfunction onRenderTargetDispose( event ) {\n\n    \t\tvar renderTarget = event.target;\n\n    \t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n    \t\tdeallocateRenderTarget( renderTarget );\n\n    \t\t_infoMemory.textures --;\n\n    \t}\n\n    \t//\n\n    \tfunction deallocateTexture( texture ) {\n\n    \t\tvar textureProperties = properties.get( texture );\n\n    \t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n    \t\t\t// cube texture\n\n    \t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n    \t\t} else {\n\n    \t\t\t// 2D texture\n\n    \t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n    \t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n    \t\t}\n\n    \t\t// remove all webgl properties\n    \t\tproperties.delete( texture );\n\n    \t}\n\n    \tfunction deallocateRenderTarget( renderTarget ) {\n\n    \t\tvar renderTargetProperties = properties.get( renderTarget );\n    \t\tvar textureProperties = properties.get( renderTarget.texture );\n\n    \t\tif ( ! renderTarget ) return;\n\n    \t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n    \t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n    \t\t}\n\n    \t\tif ( renderTarget.depthTexture ) {\n\n    \t\t\trenderTarget.depthTexture.dispose();\n\n    \t\t}\n\n    \t\tif ( (renderTarget && renderTarget.isWebGLRenderTargetCube) ) {\n\n    \t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n    \t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n    \t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n    \t\t}\n\n    \t\tproperties.delete( renderTarget.texture );\n    \t\tproperties.delete( renderTarget );\n\n    \t}\n\n    \t//\n\n\n\n    \tfunction setTexture2D( texture, slot ) {\n\n    \t\tvar textureProperties = properties.get( texture );\n\n    \t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n    \t\t\tvar image = texture.image;\n\n    \t\t\tif ( image === undefined ) {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n    \t\t\t} else if ( image.complete === false ) {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n    \t\t\t} else {\n\n    \t\t\t\tuploadTexture( textureProperties, texture, slot );\n    \t\t\t\treturn;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n    \t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n    \t}\n\n    \tfunction setTextureCube( texture, slot ) {\n\n    \t\tvar textureProperties = properties.get( texture );\n\n    \t\tif ( texture.image.length === 6 ) {\n\n    \t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n    \t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n    \t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n    \t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n    \t\t\t\t\t_infoMemory.textures ++;\n\n    \t\t\t\t}\n\n    \t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n    \t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n    \t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n    \t\t\t\tvar isCompressed = (texture && texture.isCompressedTexture);\n    \t\t\t\tvar isDataTexture = (texture.image[ 0 ] && texture.image[ 0 ].isDataTexture);\n\n    \t\t\t\tvar cubeImage = [];\n\n    \t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n    \t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t\tvar image = cubeImage[ 0 ],\n    \t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n    \t\t\t\tglFormat = paramThreeToGL( texture.format ),\n    \t\t\t\tglType = paramThreeToGL( texture.type );\n\n    \t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n    \t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\t\t\tif ( ! isCompressed ) {\n\n    \t\t\t\t\t\tif ( isDataTexture ) {\n\n    \t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n    \t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n    \t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n    \t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n    \t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n    \t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n    \t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n    \t\t\t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\n\n    \t\t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\n\n    \t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n    \t\t\t\t}\n\n    \t\t\t\ttextureProperties.__version = texture.version;\n\n    \t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n    \t\t\t} else {\n\n    \t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n    \t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \tfunction setTextureCubeDynamic( texture, slot ) {\n\n    \t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n    \t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n    \t}\n\n    \tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n    \t\tvar extension;\n\n    \t\tif ( isPowerOfTwoImage ) {\n\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\n\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\n\n    \t\t} else {\n\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n    \t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n    \t\t\t}\n\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n    \t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n    \t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n    \t\tif ( extension ) {\n\n    \t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n    \t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n    \t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n    \t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n    \t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \tfunction uploadTexture( textureProperties, texture, slot ) {\n\n    \t\tif ( textureProperties.__webglInit === undefined ) {\n\n    \t\t\ttextureProperties.__webglInit = true;\n\n    \t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n    \t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n    \t\t\t_infoMemory.textures ++;\n\n    \t\t}\n\n    \t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n    \t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n    \t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n    \t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n    \t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n    \t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n    \t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n    \t\t\timage = makePowerOfTwo( image );\n\n    \t\t}\n\n    \t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n    \t\tglFormat = paramThreeToGL( texture.format ),\n    \t\tglType = paramThreeToGL( texture.type );\n\n    \t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n    \t\tvar mipmap, mipmaps = texture.mipmaps;\n\n    \t\tif ( (texture && texture.isDepthTexture) ) {\n\n    \t\t\t// populate depth texture with dummy data\n\n    \t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n    \t\t\tif ( texture.type === FloatType ) {\n\n    \t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\n    \t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n    \t\t\t} else if ( _isWebGL2 ) {\n\n    \t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n    \t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n    \t\t\t}\n\n    \t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n    \t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n    \t\t\tif ( texture.format === DepthStencilFormat ) {\n\n    \t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n    \t\t\t}\n\n    \t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n    \t\t} else if ( (texture && texture.isDataTexture) ) {\n\n    \t\t\t// use manually created mipmaps if available\n    \t\t\t// if there are no manual mipmaps\n    \t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n    \t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n    \t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n    \t\t\t\t\tmipmap = mipmaps[ i ];\n    \t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n    \t\t\t\t}\n\n    \t\t\t\ttexture.generateMipmaps = false;\n\n    \t\t\t} else {\n\n    \t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n    \t\t\t}\n\n    \t\t} else if ( (texture && texture.isCompressedTexture) ) {\n\n    \t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n    \t\t\t\tmipmap = mipmaps[ i ];\n\n    \t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n    \t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n    \t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\t// regular Texture (image, video, canvas)\n\n    \t\t\t// use manually created mipmaps if available\n    \t\t\t// if there are no manual mipmaps\n    \t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n    \t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n    \t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n    \t\t\t\t\tmipmap = mipmaps[ i ];\n    \t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n    \t\t\t\t}\n\n    \t\t\t\ttexture.generateMipmaps = false;\n\n    \t\t\t} else {\n\n    \t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n    \t\ttextureProperties.__version = texture.version;\n\n    \t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n    \t}\n\n    \t// Render targets\n\n    \t// Setup storage for target texture and bind it to correct framebuffer\n    \tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n    \t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\n    \t\tvar glType = paramThreeToGL( renderTarget.texture.type );\n    \t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n    \t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n    \t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n    \t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n    \t}\n\n    \t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n    \tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n    \t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n    \t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n    \t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n    \t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n    \t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n    \t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n    \t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n    \t\t} else {\n\n    \t\t\t// FIXME: We don't support !depth !stencil\n    \t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n    \t\t}\n\n    \t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n    \t}\n\n    \t// Setup resources for a Depth Texture for a FBO (needs an extension)\n    \tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n    \t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n    \t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\n\n    \t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n    \t\tif ( !( (renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture) ) ) {\n\n    \t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\n    \t\t}\n\n    \t\t// upload an empty depth texture with framebuffer size\n    \t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\n    \t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n    \t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n    \t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n    \t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n    \t\t\trenderTarget.depthTexture.needsUpdate = true;\n    \t\t}\n\n    \t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n    \t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n    \t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n    \t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n    \t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n    \t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n    \t\t} else {\n\n    \t\t\tthrow new Error('Unknown depthTexture format')\n\n    \t\t}\n\n    \t}\n\n    \t// Setup GL resources for a non-texture depth buffer\n    \tfunction setupDepthRenderbuffer( renderTarget ) {\n\n    \t\tvar renderTargetProperties = properties.get( renderTarget );\n\n    \t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n\n    \t\tif ( renderTarget.depthTexture ) {\n\n    \t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\n\n    \t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n    \t\t} else {\n\n    \t\t\tif ( isCube ) {\n\n    \t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n    \t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n    \t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n    \t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n    \t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n    \t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n    \t}\n\n    \t// Set up GL resources for the render target\n    \tfunction setupRenderTarget( renderTarget ) {\n\n    \t\tvar renderTargetProperties = properties.get( renderTarget );\n    \t\tvar textureProperties = properties.get( renderTarget.texture );\n\n    \t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n    \t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n    \t\t_infoMemory.textures ++;\n\n    \t\tvar isCube = ( (renderTarget && renderTarget.isWebGLRenderTargetCube) );\n    \t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n    \t\t// Setup framebuffer\n\n    \t\tif ( isCube ) {\n\n    \t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n    \t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n    \t\t}\n\n    \t\t// Setup color buffer\n\n    \t\tif ( isCube ) {\n\n    \t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n    \t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n    \t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n    \t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n    \t\t\t}\n\n    \t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n    \t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n    \t\t} else {\n\n    \t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n    \t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n    \t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n    \t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\n    \t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n    \t\t}\n\n    \t\t// Setup depth and stencil buffers\n\n    \t\tif ( renderTarget.depthBuffer ) {\n\n    \t\t\tsetupDepthRenderbuffer( renderTarget );\n\n    \t\t}\n\n    \t}\n\n    \tfunction updateRenderTargetMipmap( renderTarget ) {\n\n    \t\tvar texture = renderTarget.texture;\n\n    \t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\n    \t\t\t\ttexture.minFilter !== NearestFilter &&\n    \t\t\t\ttexture.minFilter !== LinearFilter ) {\n\n    \t\t\tvar target = (renderTarget && renderTarget.isWebGLRenderTargetCube) ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n    \t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n    \t\t\tstate.bindTexture( target, webglTexture );\n    \t\t\t_gl.generateMipmap( target );\n    \t\t\tstate.bindTexture( target, null );\n\n    \t\t}\n\n    \t}\n\n    \tthis.setTexture2D = setTexture2D;\n    \tthis.setTextureCube = setTextureCube;\n    \tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n    \tthis.setupRenderTarget = setupRenderTarget;\n    \tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n    }\n\n    /**\n     * @author fordacious / fordacious.github.io\n     */\n\n    function WebGLProperties() {\n\n    \tvar properties = {};\n\n    \treturn {\n\n    \t\tget: function ( object ) {\n\n    \t\t\tvar uuid = object.uuid;\n    \t\t\tvar map = properties[ uuid ];\n\n    \t\t\tif ( map === undefined ) {\n\n    \t\t\t\tmap = {};\n    \t\t\t\tproperties[ uuid ] = map;\n\n    \t\t\t}\n\n    \t\t\treturn map;\n\n    \t\t},\n\n    \t\tdelete: function ( object ) {\n\n    \t\t\tdelete properties[ object.uuid ];\n\n    \t\t},\n\n    \t\tclear: function () {\n\n    \t\t\tproperties = {};\n\n    \t\t}\n\n    \t};\n\n    }\n\n    function WebGLState( gl, extensions, paramThreeToGL ) {\n\n    \tfunction ColorBuffer() {\n\n    \t\tvar locked = false;\n\n    \t\tvar color = new Vector4();\n    \t\tvar currentColorMask = null;\n    \t\tvar currentColorClear = new Vector4();\n\n    \t\treturn {\n\n    \t\t\tsetMask: function ( colorMask ) {\n\n    \t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n    \t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n    \t\t\t\t\tcurrentColorMask = colorMask;\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tsetLocked: function ( lock ) {\n\n    \t\t\t\tlocked = lock;\n\n    \t\t\t},\n\n    \t\t\tsetClear: function ( r, g, b, a ) {\n\n    \t\t\t\tcolor.set( r, g, b, a );\n\n    \t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n    \t\t\t\t\tgl.clearColor( r, g, b, a );\n    \t\t\t\t\tcurrentColorClear.copy( color );\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\treset: function () {\n\n    \t\t\t\tlocked = false;\n\n    \t\t\t\tcurrentColorMask = null;\n    \t\t\t\tcurrentColorClear.set( 0, 0, 0, 1 );\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}\n\n    \tfunction DepthBuffer() {\n\n    \t\tvar locked = false;\n\n    \t\tvar currentDepthMask = null;\n    \t\tvar currentDepthFunc = null;\n    \t\tvar currentDepthClear = null;\n\n    \t\treturn {\n\n    \t\t\tsetTest: function ( depthTest ) {\n\n    \t\t\t\tif ( depthTest ) {\n\n    \t\t\t\t\tenable( gl.DEPTH_TEST );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tsetMask: function ( depthMask ) {\n\n    \t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n    \t\t\t\t\tgl.depthMask( depthMask );\n    \t\t\t\t\tcurrentDepthMask = depthMask;\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tsetFunc: function ( depthFunc ) {\n\n    \t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n    \t\t\t\t\tif ( depthFunc ) {\n\n    \t\t\t\t\t\tswitch ( depthFunc ) {\n\n    \t\t\t\t\t\t\tcase NeverDepth:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase AlwaysDepth:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase LessDepth:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase LessEqualDepth:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase EqualDepth:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase GreaterDepth:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase NotEqualDepth:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tdefault:\n\n    \t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tsetLocked: function ( lock ) {\n\n    \t\t\t\tlocked = lock;\n\n    \t\t\t},\n\n    \t\t\tsetClear: function ( depth ) {\n\n    \t\t\t\tif ( currentDepthClear !== depth ) {\n\n    \t\t\t\t\tgl.clearDepth( depth );\n    \t\t\t\t\tcurrentDepthClear = depth;\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\treset: function () {\n\n    \t\t\t\tlocked = false;\n\n    \t\t\t\tcurrentDepthMask = null;\n    \t\t\t\tcurrentDepthFunc = null;\n    \t\t\t\tcurrentDepthClear = null;\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}\n\n    \tfunction StencilBuffer() {\n\n    \t\tvar locked = false;\n\n    \t\tvar currentStencilMask = null;\n    \t\tvar currentStencilFunc = null;\n    \t\tvar currentStencilRef = null;\n    \t\tvar currentStencilFuncMask = null;\n    \t\tvar currentStencilFail  = null;\n    \t\tvar currentStencilZFail = null;\n    \t\tvar currentStencilZPass = null;\n    \t\tvar currentStencilClear = null;\n\n    \t\treturn {\n\n    \t\t\tsetTest: function ( stencilTest ) {\n\n    \t\t\t\tif ( stencilTest ) {\n\n    \t\t\t\t\tenable( gl.STENCIL_TEST );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tsetMask: function ( stencilMask ) {\n\n    \t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n    \t\t\t\t\tgl.stencilMask( stencilMask );\n    \t\t\t\t\tcurrentStencilMask = stencilMask;\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n    \t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n    \t\t\t\t     currentStencilRef \t!== stencilRef \t||\n    \t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n    \t\t\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\n\n    \t\t\t\t\tcurrentStencilFunc = stencilFunc;\n    \t\t\t\t\tcurrentStencilRef  = stencilRef;\n    \t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n    \t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n    \t\t\t\t     currentStencilZFail !== stencilZFail ||\n    \t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n    \t\t\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\n\n    \t\t\t\t\tcurrentStencilFail  = stencilFail;\n    \t\t\t\t\tcurrentStencilZFail = stencilZFail;\n    \t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tsetLocked: function ( lock ) {\n\n    \t\t\t\tlocked = lock;\n\n    \t\t\t},\n\n    \t\t\tsetClear: function ( stencil ) {\n\n    \t\t\t\tif ( currentStencilClear !== stencil ) {\n\n    \t\t\t\t\tgl.clearStencil( stencil );\n    \t\t\t\t\tcurrentStencilClear = stencil;\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\treset: function () {\n\n    \t\t\t\tlocked = false;\n\n    \t\t\t\tcurrentStencilMask = null;\n    \t\t\t\tcurrentStencilFunc = null;\n    \t\t\t\tcurrentStencilRef = null;\n    \t\t\t\tcurrentStencilFuncMask = null;\n    \t\t\t\tcurrentStencilFail = null;\n    \t\t\t\tcurrentStencilZFail = null;\n    \t\t\t\tcurrentStencilZPass = null;\n    \t\t\t\tcurrentStencilClear = null;\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}\n\n    \t//\n\n    \tvar colorBuffer = new ColorBuffer();\n    \tvar depthBuffer = new DepthBuffer();\n    \tvar stencilBuffer = new StencilBuffer();\n\n    \tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n    \tvar newAttributes = new Uint8Array( maxVertexAttributes );\n    \tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n    \tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n    \tvar capabilities = {};\n\n    \tvar compressedTextureFormats = null;\n\n    \tvar currentBlending = null;\n    \tvar currentBlendEquation = null;\n    \tvar currentBlendSrc = null;\n    \tvar currentBlendDst = null;\n    \tvar currentBlendEquationAlpha = null;\n    \tvar currentBlendSrcAlpha = null;\n    \tvar currentBlendDstAlpha = null;\n    \tvar currentPremultipledAlpha = false;\n\n    \tvar currentFlipSided = null;\n    \tvar currentCullFace = null;\n\n    \tvar currentLineWidth = null;\n\n    \tvar currentPolygonOffsetFactor = null;\n    \tvar currentPolygonOffsetUnits = null;\n\n    \tvar currentScissorTest = null;\n\n    \tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\n    \tvar currentTextureSlot = null;\n    \tvar currentBoundTextures = {};\n\n    \tvar currentScissor = new Vector4();\n    \tvar currentViewport = new Vector4();\n\n    \tfunction createTexture( type, target, count ) {\n\n    \t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n    \t\tvar texture = gl.createTexture();\n\n    \t\tgl.bindTexture( type, texture );\n    \t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n    \t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n    \t\tfor ( var i = 0; i < count; i ++ ) {\n\n    \t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n    \t\t}\n\n    \t\treturn texture;\n\n    \t}\n\n    \tvar emptyTextures = {};\n    \temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n    \temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n    \t//\n\n    \tfunction init() {\n\n    \t\tclearColor( 0, 0, 0, 1 );\n    \t\tclearDepth( 1 );\n    \t\tclearStencil( 0 );\n\n    \t\tenable( gl.DEPTH_TEST );\n    \t\tsetDepthFunc( LessEqualDepth );\n\n    \t\tsetFlipSided( false );\n    \t\tsetCullFace( CullFaceBack );\n    \t\tenable( gl.CULL_FACE );\n\n    \t\tenable( gl.BLEND );\n    \t\tsetBlending( NormalBlending );\n\n    \t}\n\n    \tfunction initAttributes() {\n\n    \t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n    \t\t\tnewAttributes[ i ] = 0;\n\n    \t\t}\n\n    \t}\n\n    \tfunction enableAttribute( attribute ) {\n\n    \t\tnewAttributes[ attribute ] = 1;\n\n    \t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n    \t\t\tgl.enableVertexAttribArray( attribute );\n    \t\t\tenabledAttributes[ attribute ] = 1;\n\n    \t\t}\n\n    \t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n    \t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n    \t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n    \t\t\tattributeDivisors[ attribute ] = 0;\n\n    \t\t}\n\n    \t}\n\n    \tfunction enableAttributeAndDivisor( attribute, meshPerAttribute, extension ) {\n\n    \t\tnewAttributes[ attribute ] = 1;\n\n    \t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n    \t\t\tgl.enableVertexAttribArray( attribute );\n    \t\t\tenabledAttributes[ attribute ] = 1;\n\n    \t\t}\n\n    \t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n    \t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n    \t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n    \t\t}\n\n    \t}\n\n    \tfunction disableUnusedAttributes() {\n\n    \t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n    \t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n    \t\t\t\tgl.disableVertexAttribArray( i );\n    \t\t\t\tenabledAttributes[ i ] = 0;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \tfunction enable( id ) {\n\n    \t\tif ( capabilities[ id ] !== true ) {\n\n    \t\t\tgl.enable( id );\n    \t\t\tcapabilities[ id ] = true;\n\n    \t\t}\n\n    \t}\n\n    \tfunction disable( id ) {\n\n    \t\tif ( capabilities[ id ] !== false ) {\n\n    \t\t\tgl.disable( id );\n    \t\t\tcapabilities[ id ] = false;\n\n    \t\t}\n\n    \t}\n\n    \tfunction getCompressedTextureFormats() {\n\n    \t\tif ( compressedTextureFormats === null ) {\n\n    \t\t\tcompressedTextureFormats = [];\n\n    \t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n    \t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n    \t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n    \t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n    \t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n    \t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn compressedTextureFormats;\n\n    \t}\n\n    \tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n    \t\tif ( blending !== NoBlending ) {\n\n    \t\t\tenable( gl.BLEND );\n\n    \t\t} else {\n\n    \t\t\tdisable( gl.BLEND );\n    \t\t\tcurrentBlending = blending; // no blending, that is\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n    \t\t\tif ( blending === AdditiveBlending ) {\n\n    \t\t\t\tif ( premultipliedAlpha ) {\n\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n    \t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n    \t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( blending === SubtractiveBlending ) {\n\n    \t\t\t\tif ( premultipliedAlpha ) {\n\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n    \t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n    \t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( blending === MultiplyBlending ) {\n\n    \t\t\t\tif ( premultipliedAlpha ) {\n\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n    \t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n    \t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\tif ( premultipliedAlpha ) {\n\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n    \t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n    \t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tcurrentBlending = blending;\n    \t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n    \t\t}\n\n    \t\tif ( blending === CustomBlending ) {\n\n    \t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n    \t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n    \t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n    \t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n    \t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\n\n    \t\t\t\tcurrentBlendEquation = blendEquation;\n    \t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n    \t\t\t}\n\n    \t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n    \t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\n\n    \t\t\t\tcurrentBlendSrc = blendSrc;\n    \t\t\t\tcurrentBlendDst = blendDst;\n    \t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n    \t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tcurrentBlendEquation = null;\n    \t\t\tcurrentBlendSrc = null;\n    \t\t\tcurrentBlendDst = null;\n    \t\t\tcurrentBlendEquationAlpha = null;\n    \t\t\tcurrentBlendSrcAlpha = null;\n    \t\t\tcurrentBlendDstAlpha = null;\n\n    \t\t}\n\n    \t}\n\n    \t// TODO Deprecate\n\n    \tfunction setColorWrite( colorWrite ) {\n\n    \t\tcolorBuffer.setMask( colorWrite );\n\n    \t}\n\n    \tfunction setDepthTest( depthTest ) {\n\n    \t\tdepthBuffer.setTest( depthTest );\n\n    \t}\n\n    \tfunction setDepthWrite( depthWrite ) {\n\n    \t\tdepthBuffer.setMask( depthWrite );\n\n    \t}\n\n    \tfunction setDepthFunc( depthFunc ) {\n\n    \t\tdepthBuffer.setFunc( depthFunc );\n\n    \t}\n\n    \tfunction setStencilTest( stencilTest ) {\n\n    \t\tstencilBuffer.setTest( stencilTest );\n\n    \t}\n\n    \tfunction setStencilWrite( stencilWrite ) {\n\n    \t\tstencilBuffer.setMask( stencilWrite );\n\n    \t}\n\n    \tfunction setStencilFunc( stencilFunc, stencilRef, stencilMask ) {\n\n    \t\tstencilBuffer.setFunc( stencilFunc, stencilRef, stencilMask );\n\n    \t}\n\n    \tfunction setStencilOp( stencilFail, stencilZFail, stencilZPass ) {\n\n    \t\tstencilBuffer.setOp( stencilFail, stencilZFail, stencilZPass );\n\n    \t}\n\n    \t//\n\n    \tfunction setFlipSided( flipSided ) {\n\n    \t\tif ( currentFlipSided !== flipSided ) {\n\n    \t\t\tif ( flipSided ) {\n\n    \t\t\t\tgl.frontFace( gl.CW );\n\n    \t\t\t} else {\n\n    \t\t\t\tgl.frontFace( gl.CCW );\n\n    \t\t\t}\n\n    \t\t\tcurrentFlipSided = flipSided;\n\n    \t\t}\n\n    \t}\n\n    \tfunction setCullFace( cullFace ) {\n\n    \t\tif ( cullFace !== CullFaceNone ) {\n\n    \t\t\tenable( gl.CULL_FACE );\n\n    \t\t\tif ( cullFace !== currentCullFace ) {\n\n    \t\t\t\tif ( cullFace === CullFaceBack ) {\n\n    \t\t\t\t\tgl.cullFace( gl.BACK );\n\n    \t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n    \t\t\t\t\tgl.cullFace( gl.FRONT );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tdisable( gl.CULL_FACE );\n\n    \t\t}\n\n    \t\tcurrentCullFace = cullFace;\n\n    \t}\n\n    \tfunction setLineWidth( width ) {\n\n    \t\tif ( width !== currentLineWidth ) {\n\n    \t\t\tgl.lineWidth( width );\n\n    \t\t\tcurrentLineWidth = width;\n\n    \t\t}\n\n    \t}\n\n    \tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n    \t\tif ( polygonOffset ) {\n\n    \t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n    \t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n    \t\t\t\tgl.polygonOffset( factor, units );\n\n    \t\t\t\tcurrentPolygonOffsetFactor = factor;\n    \t\t\t\tcurrentPolygonOffsetUnits = units;\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n    \t\t}\n\n    \t}\n\n    \tfunction getScissorTest() {\n\n    \t\treturn currentScissorTest;\n\n    \t}\n\n    \tfunction setScissorTest( scissorTest ) {\n\n    \t\tcurrentScissorTest = scissorTest;\n\n    \t\tif ( scissorTest ) {\n\n    \t\t\tenable( gl.SCISSOR_TEST );\n\n    \t\t} else {\n\n    \t\t\tdisable( gl.SCISSOR_TEST );\n\n    \t\t}\n\n    \t}\n\n    \t// texture\n\n    \tfunction activeTexture( webglSlot ) {\n\n    \t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n    \t\tif ( currentTextureSlot !== webglSlot ) {\n\n    \t\t\tgl.activeTexture( webglSlot );\n    \t\t\tcurrentTextureSlot = webglSlot;\n\n    \t\t}\n\n    \t}\n\n    \tfunction bindTexture( webglType, webglTexture ) {\n\n    \t\tif ( currentTextureSlot === null ) {\n\n    \t\t\tactiveTexture();\n\n    \t\t}\n\n    \t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n    \t\tif ( boundTexture === undefined ) {\n\n    \t\t\tboundTexture = { type: undefined, texture: undefined };\n    \t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n    \t\t}\n\n    \t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n    \t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n    \t\t\tboundTexture.type = webglType;\n    \t\t\tboundTexture.texture = webglTexture;\n\n    \t\t}\n\n    \t}\n\n    \tfunction compressedTexImage2D() {\n\n    \t\ttry {\n\n    \t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n    \t\t} catch ( error ) {\n\n    \t\t\tconsole.error( error );\n\n    \t\t}\n\n    \t}\n\n    \tfunction texImage2D() {\n\n    \t\ttry {\n\n    \t\t\tgl.texImage2D.apply( gl, arguments );\n\n    \t\t} catch ( error ) {\n\n    \t\t\tconsole.error( error );\n\n    \t\t}\n\n    \t}\n\n    \t// TODO Deprecate\n\n    \tfunction clearColor( r, g, b, a ) {\n\n    \t\tcolorBuffer.setClear( r, g, b, a );\n\n    \t}\n\n    \tfunction clearDepth( depth ) {\n\n    \t\tdepthBuffer.setClear( depth );\n\n    \t}\n\n    \tfunction clearStencil( stencil ) {\n\n    \t\tstencilBuffer.setClear( stencil );\n\n    \t}\n\n    \t//\n\n    \tfunction scissor( scissor ) {\n\n    \t\tif ( currentScissor.equals( scissor ) === false ) {\n\n    \t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n    \t\t\tcurrentScissor.copy( scissor );\n\n    \t\t}\n\n    \t}\n\n    \tfunction viewport( viewport ) {\n\n    \t\tif ( currentViewport.equals( viewport ) === false ) {\n\n    \t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n    \t\t\tcurrentViewport.copy( viewport );\n\n    \t\t}\n\n    \t}\n\n    \t//\n\n    \tfunction reset() {\n\n    \t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n    \t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n    \t\t\t\tgl.disableVertexAttribArray( i );\n    \t\t\t\tenabledAttributes[ i ] = 0;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tcapabilities = {};\n\n    \t\tcompressedTextureFormats = null;\n\n    \t\tcurrentTextureSlot = null;\n    \t\tcurrentBoundTextures = {};\n\n    \t\tcurrentBlending = null;\n\n    \t\tcurrentFlipSided = null;\n    \t\tcurrentCullFace = null;\n\n    \t\tcolorBuffer.reset();\n    \t\tdepthBuffer.reset();\n    \t\tstencilBuffer.reset();\n\n    \t}\n\n    \treturn {\n\n    \t\tbuffers: {\n    \t\t\tcolor: colorBuffer,\n    \t\t\tdepth: depthBuffer,\n    \t\t\tstencil: stencilBuffer\n    \t\t},\n\n    \t\tinit: init,\n    \t\tinitAttributes: initAttributes,\n    \t\tenableAttribute: enableAttribute,\n    \t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n    \t\tdisableUnusedAttributes: disableUnusedAttributes,\n    \t\tenable: enable,\n    \t\tdisable: disable,\n    \t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n    \t\tsetBlending: setBlending,\n\n    \t\tsetColorWrite: setColorWrite,\n    \t\tsetDepthTest: setDepthTest,\n    \t\tsetDepthWrite: setDepthWrite,\n    \t\tsetDepthFunc: setDepthFunc,\n    \t\tsetStencilTest: setStencilTest,\n    \t\tsetStencilWrite: setStencilWrite,\n    \t\tsetStencilFunc: setStencilFunc,\n    \t\tsetStencilOp: setStencilOp,\n\n    \t\tsetFlipSided: setFlipSided,\n    \t\tsetCullFace: setCullFace,\n\n    \t\tsetLineWidth: setLineWidth,\n    \t\tsetPolygonOffset: setPolygonOffset,\n\n    \t\tgetScissorTest: getScissorTest,\n    \t\tsetScissorTest: setScissorTest,\n\n    \t\tactiveTexture: activeTexture,\n    \t\tbindTexture: bindTexture,\n    \t\tcompressedTexImage2D: compressedTexImage2D,\n    \t\ttexImage2D: texImage2D,\n\n    \t\tclearColor: clearColor,\n    \t\tclearDepth: clearDepth,\n    \t\tclearStencil: clearStencil,\n\n    \t\tscissor: scissor,\n    \t\tviewport: viewport,\n\n    \t\treset: reset\n\n    \t};\n\n    }\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function WebGLCapabilities( gl, extensions, parameters ) {\n\n    \tvar maxAnisotropy;\n\n    \tfunction getMaxAnisotropy() {\n\n    \t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n    \t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n    \t\tif ( extension !== null ) {\n\n    \t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n    \t\t} else {\n\n    \t\t\tmaxAnisotropy = 0;\n\n    \t\t}\n\n    \t\treturn maxAnisotropy;\n\n    \t}\n\n    \tfunction getMaxPrecision( precision ) {\n\n    \t\tif ( precision === 'highp' ) {\n\n    \t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n    \t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n    \t\t\t\treturn 'highp';\n\n    \t\t\t}\n\n    \t\t\tprecision = 'mediump';\n\n    \t\t}\n\n    \t\tif ( precision === 'mediump' ) {\n\n    \t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n    \t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n    \t\t\t\treturn 'mediump';\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn 'lowp';\n\n    \t}\n\n    \tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    \tvar maxPrecision = getMaxPrecision( precision );\n\n    \tif ( maxPrecision !== precision ) {\n\n    \t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n    \t\tprecision = maxPrecision;\n\n    \t}\n\n    \tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true && !! extensions.get( 'EXT_frag_depth' );\n\n    \tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n    \tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n    \tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n    \tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n    \tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n    \tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n    \tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n    \tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n    \tvar vertexTextures = maxVertexTextures > 0;\n    \tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n    \tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n    \treturn {\n\n    \t\tgetMaxAnisotropy: getMaxAnisotropy,\n    \t\tgetMaxPrecision: getMaxPrecision,\n\n    \t\tprecision: precision,\n    \t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n    \t\tmaxTextures: maxTextures,\n    \t\tmaxVertexTextures: maxVertexTextures,\n    \t\tmaxTextureSize: maxTextureSize,\n    \t\tmaxCubemapSize: maxCubemapSize,\n\n    \t\tmaxAttributes: maxAttributes,\n    \t\tmaxVertexUniforms: maxVertexUniforms,\n    \t\tmaxVaryings: maxVaryings,\n    \t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n    \t\tvertexTextures: vertexTextures,\n    \t\tfloatFragmentTextures: floatFragmentTextures,\n    \t\tfloatVertexTextures: floatVertexTextures\n\n    \t};\n\n    }\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function WebGLExtensions( gl ) {\n\n    \tvar extensions = {};\n\n    \treturn {\n\n    \t\tget: function ( name ) {\n\n    \t\t\tif ( extensions[ name ] !== undefined ) {\n\n    \t\t\t\treturn extensions[ name ];\n\n    \t\t\t}\n\n    \t\t\tvar extension;\n\n    \t\t\tswitch ( name ) {\n\n    \t\t\t\tcase 'WEBGL_depth_texture':\n    \t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'EXT_texture_filter_anisotropic':\n    \t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n    \t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n    \t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n    \t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tdefault:\n    \t\t\t\t\textension = gl.getExtension( name );\n\n    \t\t\t}\n\n    \t\t\tif ( extension === null ) {\n\n    \t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n    \t\t\t}\n\n    \t\t\textensions[ name ] = extension;\n\n    \t\t\treturn extension;\n\n    \t\t}\n\n    \t};\n\n    }\n\n    function WebGLClipping() {\n\n    \tvar scope = this,\n\n    \t\tglobalState = null,\n    \t\tnumGlobalPlanes = 0,\n    \t\tlocalClippingEnabled = false,\n    \t\trenderingShadows = false,\n\n    \t\tplane = new Plane(),\n    \t\tviewNormalMatrix = new Matrix3(),\n\n    \t\tuniform = { value: null, needsUpdate: false };\n\n    \tthis.uniform = uniform;\n    \tthis.numPlanes = 0;\n\n    \tthis.init = function( planes, enableLocalClipping, camera ) {\n\n    \t\tvar enabled =\n    \t\t\tplanes.length !== 0 ||\n    \t\t\tenableLocalClipping ||\n    \t\t\t// enable state of previous frame - the clipping code has to\n    \t\t\t// run another frame in order to reset the state:\n    \t\t\tnumGlobalPlanes !== 0 ||\n    \t\t\tlocalClippingEnabled;\n\n    \t\tlocalClippingEnabled = enableLocalClipping;\n\n    \t\tglobalState = projectPlanes( planes, camera, 0 );\n    \t\tnumGlobalPlanes = planes.length;\n\n    \t\treturn enabled;\n\n    \t};\n\n    \tthis.beginShadows = function() {\n\n    \t\trenderingShadows = true;\n    \t\tprojectPlanes( null );\n\n    \t};\n\n    \tthis.endShadows = function() {\n\n    \t\trenderingShadows = false;\n    \t\tresetGlobalState();\n\n    \t};\n\n    \tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\n\n    \t\tif ( ! localClippingEnabled ||\n    \t\t\t\tplanes === null || planes.length === 0 ||\n    \t\t\t\trenderingShadows && ! clipShadows ) {\n    \t\t\t// there's no local clipping\n\n    \t\t\tif ( renderingShadows ) {\n    \t\t\t\t// there's no global clipping\n\n    \t\t\t\tprojectPlanes( null );\n\n    \t\t\t} else {\n\n    \t\t\t\tresetGlobalState();\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n    \t\t\t\tlGlobal = nGlobal * 4,\n\n    \t\t\t\tdstArray = cache.clippingState || null;\n\n    \t\t\tuniform.value = dstArray; // ensure unique state\n\n    \t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n    \t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n    \t\t\t\tdstArray[ i ] = globalState[ i ];\n\n    \t\t\t}\n\n    \t\t\tcache.clippingState = dstArray;\n    \t\t\tthis.numPlanes += nGlobal;\n\n    \t\t}\n\n\n    \t};\n\n    \tfunction resetGlobalState() {\n\n    \t\tif ( uniform.value !== globalState ) {\n\n    \t\t\tuniform.value = globalState;\n    \t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n    \t\t}\n\n    \t\tscope.numPlanes = numGlobalPlanes;\n\n    \t}\n\n    \tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n    \t\tvar nPlanes = planes !== null ? planes.length : 0,\n    \t\t\tdstArray = null;\n\n    \t\tif ( nPlanes !== 0 ) {\n\n    \t\t\tdstArray = uniform.value;\n\n    \t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n    \t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n    \t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n    \t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n    \t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n    \t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n    \t\t\t\t}\n\n    \t\t\t\tfor ( var i = 0, i4 = dstOffset;\n    \t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\n\n    \t\t\t\t\tplane.copy( planes[ i ] ).\n    \t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\n\n    \t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n    \t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tuniform.value = dstArray;\n    \t\t\tuniform.needsUpdate = true;\n\n    \t\t}\n\n    \t\tscope.numPlanes = nPlanes;\n    \t\treturn dstArray;\n\n    \t}\n\n    }\n\n    /**\n     * @author supereggbert / http://www.paulbrunt.co.uk/\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     * @author szimek / https://github.com/szimek/\n     * @author tschw\n     */\n\n    function WebGLRenderer( parameters ) {\n\n    \tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n    \tparameters = parameters || {};\n\n    \tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n    \t_context = parameters.context !== undefined ? parameters.context : null,\n\n    \t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n    \t_depth = parameters.depth !== undefined ? parameters.depth : true,\n    \t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n    \t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n    \t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n    \t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n    \tvar lights = [];\n\n    \tvar opaqueObjects = [];\n    \tvar opaqueObjectsLastIndex = - 1;\n    \tvar transparentObjects = [];\n    \tvar transparentObjectsLastIndex = - 1;\n\n    \tvar morphInfluences = new Float32Array( 8 );\n\n    \tvar sprites = [];\n    \tvar lensFlares = [];\n\n    \t// public properties\n\n    \tthis.domElement = _canvas;\n    \tthis.context = null;\n\n    \t// clearing\n\n    \tthis.autoClear = true;\n    \tthis.autoClearColor = true;\n    \tthis.autoClearDepth = true;\n    \tthis.autoClearStencil = true;\n\n    \t// scene graph\n\n    \tthis.sortObjects = true;\n\n    \t// user-defined clipping\n\n    \tthis.clippingPlanes = [];\n    \tthis.localClippingEnabled = false;\n\n    \t// physically based shading\n\n    \tthis.gammaFactor = 2.0;\t// for backwards compatibility\n    \tthis.gammaInput = false;\n    \tthis.gammaOutput = false;\n\n    \t// physical lights\n\n    \tthis.physicallyCorrectLights = false;\n\n    \t// tone mapping\n\n    \tthis.toneMapping = LinearToneMapping;\n    \tthis.toneMappingExposure = 1.0;\n    \tthis.toneMappingWhitePoint = 1.0;\n\n    \t// morphs\n\n    \tthis.maxMorphTargets = 8;\n    \tthis.maxMorphNormals = 4;\n\n    \t// internal properties\n\n    \tvar _this = this,\n\n    \t// internal state cache\n\n    \t_currentProgram = null,\n    \t_currentRenderTarget = null,\n    \t_currentFramebuffer = null,\n    \t_currentMaterialId = - 1,\n    \t_currentGeometryProgram = '',\n    \t_currentCamera = null,\n\n    \t_currentScissor = new Vector4(),\n    \t_currentScissorTest = null,\n\n    \t_currentViewport = new Vector4(),\n\n    \t//\n\n    \t_usedTextureUnits = 0,\n\n    \t//\n\n    \t_clearColor = new Color( 0x000000 ),\n    \t_clearAlpha = 0,\n\n    \t_width = _canvas.width,\n    \t_height = _canvas.height,\n\n    \t_pixelRatio = 1,\n\n    \t_scissor = new Vector4( 0, 0, _width, _height ),\n    \t_scissorTest = false,\n\n    \t_viewport = new Vector4( 0, 0, _width, _height ),\n\n    \t// frustum\n\n    \t_frustum = new Frustum(),\n\n    \t// clipping\n\n    \t_clipping = new WebGLClipping(),\n    \t_clippingEnabled = false,\n    \t_localClippingEnabled = false,\n\n    \t_sphere = new Sphere(),\n\n    \t// camera matrices cache\n\n    \t_projScreenMatrix = new Matrix4(),\n\n    \t_vector3 = new Vector3(),\n\n    \t// light arrays cache\n\n    \t_lights = {\n\n    \t\thash: '',\n\n    \t\tambient: [ 0, 0, 0 ],\n    \t\tdirectional: [],\n    \t\tdirectionalShadowMap: [],\n    \t\tdirectionalShadowMatrix: [],\n    \t\tspot: [],\n    \t\tspotShadowMap: [],\n    \t\tspotShadowMatrix: [],\n    \t\tpoint: [],\n    \t\tpointShadowMap: [],\n    \t\tpointShadowMatrix: [],\n    \t\themi: [],\n\n    \t\tshadows: []\n\n    \t},\n\n    \t// info\n\n    \t_infoRender = {\n\n    \t\tcalls: 0,\n    \t\tvertices: 0,\n    \t\tfaces: 0,\n    \t\tpoints: 0\n\n    \t};\n\n    \tthis.info = {\n\n    \t\trender: _infoRender,\n    \t\tmemory: {\n\n    \t\t\tgeometries: 0,\n    \t\t\ttextures: 0\n\n    \t\t},\n    \t\tprograms: null\n\n    \t};\n\n\n    \t// initialize\n\n    \tvar _gl;\n\n    \ttry {\n\n    \t\tvar attributes = {\n    \t\t\talpha: _alpha,\n    \t\t\tdepth: _depth,\n    \t\t\tstencil: _stencil,\n    \t\t\tantialias: _antialias,\n    \t\t\tpremultipliedAlpha: _premultipliedAlpha,\n    \t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n    \t\t};\n\n    \t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\n\n    \t\tif ( _gl === null ) {\n\n    \t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n    \t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n    \t\t\t} else {\n\n    \t\t\t\tthrow 'Error creating WebGL context.';\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n    \t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n    \t\t\t_gl.getShaderPrecisionFormat = function () {\n\n    \t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n    \t\t\t};\n\n    \t\t}\n\n    \t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\n    \t} catch ( error ) {\n\n    \t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n    \t}\n\n    \tvar extensions = new WebGLExtensions( _gl );\n\n    \textensions.get( 'WEBGL_depth_texture' );\n    \textensions.get( 'OES_texture_float' );\n    \textensions.get( 'OES_texture_float_linear' );\n    \textensions.get( 'OES_texture_half_float' );\n    \textensions.get( 'OES_texture_half_float_linear' );\n    \textensions.get( 'OES_standard_derivatives' );\n    \textensions.get( 'ANGLE_instanced_arrays' );\n\n    \tif ( extensions.get( 'OES_element_index_uint' ) ) {\n\n    \t\tBufferGeometry.MaxIndex = 4294967296;\n\n    \t}\n\n    \tvar capabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n    \tvar state = new WebGLState( _gl, extensions, paramThreeToGL );\n    \tvar properties = new WebGLProperties();\n    \tvar textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, paramThreeToGL, this.info );\n    \tvar objects = new WebGLObjects( _gl, properties, this.info );\n    \tvar programCache = new WebGLPrograms( this, capabilities );\n    \tvar lightCache = new WebGLLights();\n\n    \tthis.info.programs = programCache.programs;\n\n    \tvar bufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n    \tvar indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n    \t//\n\n    \tvar backgroundCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n    \tvar backgroundCamera2 = new PerspectiveCamera();\n    \tvar backgroundPlaneMesh = new Mesh(\n    \t\tnew PlaneBufferGeometry( 2, 2 ),\n    \t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n    \t);\n    \tvar backgroundBoxShader = ShaderLib[ 'cube' ];\n    \tvar backgroundBoxMesh = new Mesh(\n    \t\tnew BoxBufferGeometry( 5, 5, 5 ),\n    \t\tnew ShaderMaterial( {\n    \t\t\tuniforms: backgroundBoxShader.uniforms,\n    \t\t\tvertexShader: backgroundBoxShader.vertexShader,\n    \t\t\tfragmentShader: backgroundBoxShader.fragmentShader,\n    \t\t\tside: BackSide,\n    \t\t\tdepthTest: false,\n    \t\t\tdepthWrite: false,\n    \t\t\tfog: false\n    \t\t} )\n    \t);\n\n    \t//\n\n    \tfunction getTargetPixelRatio() {\n\n    \t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n    \t}\n\n    \tfunction glClearColor( r, g, b, a ) {\n\n    \t\tif ( _premultipliedAlpha === true ) {\n\n    \t\t\tr *= a; g *= a; b *= a;\n\n    \t\t}\n\n    \t\tstate.clearColor( r, g, b, a );\n\n    \t}\n\n    \tfunction setDefaultGLState() {\n\n    \t\tstate.init();\n\n    \t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n    \t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n    \t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n    \t}\n\n    \tfunction resetGLState() {\n\n    \t\t_currentProgram = null;\n    \t\t_currentCamera = null;\n\n    \t\t_currentGeometryProgram = '';\n    \t\t_currentMaterialId = - 1;\n\n    \t\tstate.reset();\n\n    \t}\n\n    \tsetDefaultGLState();\n\n    \tthis.context = _gl;\n    \tthis.capabilities = capabilities;\n    \tthis.extensions = extensions;\n    \tthis.properties = properties;\n    \tthis.state = state;\n\n    \t// shadow map\n\n    \tvar shadowMap = new WebGLShadowMap( this, _lights, objects, capabilities );\n\n    \tthis.shadowMap = shadowMap;\n\n\n    \t// Plugins\n\n    \tvar spritePlugin = new SpritePlugin( this, sprites );\n    \tvar lensFlarePlugin = new LensFlarePlugin( this, lensFlares );\n\n    \t// API\n\n    \tthis.getContext = function () {\n\n    \t\treturn _gl;\n\n    \t};\n\n    \tthis.getContextAttributes = function () {\n\n    \t\treturn _gl.getContextAttributes();\n\n    \t};\n\n    \tthis.forceContextLoss = function () {\n\n    \t\textensions.get( 'WEBGL_lose_context' ).loseContext();\n\n    \t};\n\n    \tthis.getMaxAnisotropy = function () {\n\n    \t\treturn capabilities.getMaxAnisotropy();\n\n    \t};\n\n    \tthis.getPrecision = function () {\n\n    \t\treturn capabilities.precision;\n\n    \t};\n\n    \tthis.getPixelRatio = function () {\n\n    \t\treturn _pixelRatio;\n\n    \t};\n\n    \tthis.setPixelRatio = function ( value ) {\n\n    \t\tif ( value === undefined ) return;\n\n    \t\t_pixelRatio = value;\n\n    \t\tthis.setSize( _viewport.z, _viewport.w, false );\n\n    \t};\n\n    \tthis.getSize = function () {\n\n    \t\treturn {\n    \t\t\twidth: _width,\n    \t\t\theight: _height\n    \t\t};\n\n    \t};\n\n    \tthis.setSize = function ( width, height, updateStyle ) {\n\n    \t\t_width = width;\n    \t\t_height = height;\n\n    \t\t_canvas.width = width * _pixelRatio;\n    \t\t_canvas.height = height * _pixelRatio;\n\n    \t\tif ( updateStyle !== false ) {\n\n    \t\t\t_canvas.style.width = width + 'px';\n    \t\t\t_canvas.style.height = height + 'px';\n\n    \t\t}\n\n    \t\tthis.setViewport( 0, 0, width, height );\n\n    \t};\n\n    \tthis.setViewport = function ( x, y, width, height ) {\n\n    \t\tstate.viewport( _viewport.set( x, y, width, height ) );\n\n    \t};\n\n    \tthis.setScissor = function ( x, y, width, height ) {\n\n    \t\tstate.scissor( _scissor.set( x, y, width, height ) );\n\n    \t};\n\n    \tthis.setScissorTest = function ( boolean ) {\n\n    \t\tstate.setScissorTest( _scissorTest = boolean );\n\n    \t};\n\n    \t// Clearing\n\n    \tthis.getClearColor = function () {\n\n    \t\treturn _clearColor;\n\n    \t};\n\n    \tthis.setClearColor = function ( color, alpha ) {\n\n    \t\t_clearColor.set( color );\n\n    \t\t_clearAlpha = alpha !== undefined ? alpha : 1;\n\n    \t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n    \t};\n\n    \tthis.getClearAlpha = function () {\n\n    \t\treturn _clearAlpha;\n\n    \t};\n\n    \tthis.setClearAlpha = function ( alpha ) {\n\n    \t\t_clearAlpha = alpha;\n\n    \t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n    \t};\n\n    \tthis.clear = function ( color, depth, stencil ) {\n\n    \t\tvar bits = 0;\n\n    \t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n    \t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n    \t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n    \t\t_gl.clear( bits );\n\n    \t};\n\n    \tthis.clearColor = function () {\n\n    \t\tthis.clear( true, false, false );\n\n    \t};\n\n    \tthis.clearDepth = function () {\n\n    \t\tthis.clear( false, true, false );\n\n    \t};\n\n    \tthis.clearStencil = function () {\n\n    \t\tthis.clear( false, false, true );\n\n    \t};\n\n    \tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n    \t\tthis.setRenderTarget( renderTarget );\n    \t\tthis.clear( color, depth, stencil );\n\n    \t};\n\n    \t// Reset\n\n    \tthis.resetGLState = resetGLState;\n\n    \tthis.dispose = function() {\n\n    \t\ttransparentObjects = [];\n    \t\ttransparentObjectsLastIndex = -1;\n    \t\topaqueObjects = [];\n    \t\topaqueObjectsLastIndex = -1;\n\n    \t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\n    \t};\n\n    \t// Events\n\n    \tfunction onContextLost( event ) {\n\n    \t\tevent.preventDefault();\n\n    \t\tresetGLState();\n    \t\tsetDefaultGLState();\n\n    \t\tproperties.clear();\n\n    \t}\n\n    \tfunction onMaterialDispose( event ) {\n\n    \t\tvar material = event.target;\n\n    \t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n    \t\tdeallocateMaterial( material );\n\n    \t}\n\n    \t// Buffer deallocation\n\n    \tfunction deallocateMaterial( material ) {\n\n    \t\treleaseMaterialProgramReference( material );\n\n    \t\tproperties.delete( material );\n\n    \t}\n\n\n    \tfunction releaseMaterialProgramReference( material ) {\n\n    \t\tvar programInfo = properties.get( material ).program;\n\n    \t\tmaterial.program = undefined;\n\n    \t\tif ( programInfo !== undefined ) {\n\n    \t\t\tprogramCache.releaseProgram( programInfo );\n\n    \t\t}\n\n    \t}\n\n    \t// Buffer rendering\n\n    \tthis.renderBufferImmediate = function ( object, program, material ) {\n\n    \t\tstate.initAttributes();\n\n    \t\tvar buffers = properties.get( object );\n\n    \t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n    \t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n    \t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n    \t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n    \t\tvar attributes = program.getAttributes();\n\n    \t\tif ( object.hasPositions ) {\n\n    \t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n    \t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n    \t\t\tstate.enableAttribute( attributes.position );\n    \t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n    \t\t}\n\n    \t\tif ( object.hasNormals ) {\n\n    \t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n    \t\t\tif ( ! material.isMeshPhongMaterial &&\n    \t\t\t     ! material.isMeshStandardMaterial &&\n    \t\t\t       material.shading === FlatShading ) {\n\n    \t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n    \t\t\t\t\tvar array = object.normalArray;\n\n    \t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n    \t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n    \t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n    \t\t\t\t\tarray[ i + 0 ] = nx;\n    \t\t\t\t\tarray[ i + 1 ] = ny;\n    \t\t\t\t\tarray[ i + 2 ] = nz;\n\n    \t\t\t\t\tarray[ i + 3 ] = nx;\n    \t\t\t\t\tarray[ i + 4 ] = ny;\n    \t\t\t\t\tarray[ i + 5 ] = nz;\n\n    \t\t\t\t\tarray[ i + 6 ] = nx;\n    \t\t\t\t\tarray[ i + 7 ] = ny;\n    \t\t\t\t\tarray[ i + 8 ] = nz;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n    \t\t\tstate.enableAttribute( attributes.normal );\n\n    \t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n    \t\t}\n\n    \t\tif ( object.hasUvs && material.map ) {\n\n    \t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n    \t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n    \t\t\tstate.enableAttribute( attributes.uv );\n\n    \t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n    \t\t}\n\n    \t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n    \t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n    \t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n    \t\t\tstate.enableAttribute( attributes.color );\n\n    \t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n    \t\t}\n\n    \t\tstate.disableUnusedAttributes();\n\n    \t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n    \t\tobject.count = 0;\n\n    \t};\n\n    \tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n    \t\tsetMaterial( material );\n\n    \t\tvar program = setProgram( camera, fog, material, object );\n\n    \t\tvar updateBuffers = false;\n    \t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\n\n    \t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n    \t\t\t_currentGeometryProgram = geometryProgram;\n    \t\t\tupdateBuffers = true;\n\n    \t\t}\n\n    \t\t// morph targets\n\n    \t\tvar morphTargetInfluences = object.morphTargetInfluences;\n\n    \t\tif ( morphTargetInfluences !== undefined ) {\n\n    \t\t\tvar activeInfluences = [];\n\n    \t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\n\n    \t\t\t\tvar influence = morphTargetInfluences[ i ];\n    \t\t\t\tactiveInfluences.push( [ influence, i ] );\n\n    \t\t\t}\n\n    \t\t\tactiveInfluences.sort( absNumericalSort );\n\n    \t\t\tif ( activeInfluences.length > 8 ) {\n\n    \t\t\t\tactiveInfluences.length = 8;\n\n    \t\t\t}\n\n    \t\t\tvar morphAttributes = geometry.morphAttributes;\n\n    \t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\n\n    \t\t\t\tvar influence = activeInfluences[ i ];\n    \t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\n\n    \t\t\t\tif ( influence[ 0 ] !== 0 ) {\n\n    \t\t\t\t\tvar index = influence[ 1 ];\n\n    \t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\n    \t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\n    \t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tfor ( var i = activeInfluences.length, il = morphInfluences.length; i < il; i ++ ) {\n\n    \t\t\t\tmorphInfluences[ i ] = 0.0;\n\n    \t\t\t}\n\n    \t\t\tprogram.getUniforms().setValue(\n    \t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\n\n    \t\t\tupdateBuffers = true;\n\n    \t\t}\n\n    \t\t//\n\n    \t\tvar index = geometry.index;\n    \t\tvar position = geometry.attributes.position;\n    \t\tvar rangeFactor = 1;\n\n    \t\tif ( material.wireframe === true ) {\n\n    \t\t\tindex = objects.getWireframeAttribute( geometry );\n    \t\t\trangeFactor = 2;\n\n    \t\t}\n\n    \t\tvar renderer;\n\n    \t\tif ( index !== null ) {\n\n    \t\t\trenderer = indexedBufferRenderer;\n    \t\t\trenderer.setIndex( index );\n\n    \t\t} else {\n\n    \t\t\trenderer = bufferRenderer;\n\n    \t\t}\n\n    \t\tif ( updateBuffers ) {\n\n    \t\t\tsetupVertexAttributes( material, program, geometry );\n\n    \t\t\tif ( index !== null ) {\n\n    \t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t//\n\n    \t\tvar dataCount = 0;\n\n    \t\tif ( index !== null ) {\n\n    \t\t\tdataCount = index.count;\n\n    \t\t} else if ( position !== undefined ) {\n\n    \t\t\tdataCount = position.count;\n\n    \t\t}\n\n    \t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n    \t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n    \t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n    \t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n    \t\tvar drawStart = Math.max( rangeStart, groupStart );\n    \t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n    \t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n    \t\tif ( drawCount === 0 ) return;\n\n    \t\t//\n\n    \t\tif ( object.isMesh ) {\n\n    \t\t\tif ( material.wireframe === true ) {\n\n    \t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n    \t\t\t\trenderer.setMode( _gl.LINES );\n\n    \t\t\t} else {\n\n    \t\t\t\tswitch ( object.drawMode ) {\n\n    \t\t\t\t\tcase TrianglesDrawMode:\n    \t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase TriangleStripDrawMode:\n    \t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase TriangleFanDrawMode:\n    \t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n\n    \t\t} else if ( object.isLine ) {\n\n    \t\t\tvar lineWidth = material.linewidth;\n\n    \t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n    \t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n    \t\t\tif ( object.isLineSegments ) {\n\n    \t\t\t\trenderer.setMode( _gl.LINES );\n\n    \t\t\t} else {\n\n    \t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n    \t\t\t}\n\n    \t\t} else if ( object.isPoints ) {\n\n    \t\t\trenderer.setMode( _gl.POINTS );\n\n    \t\t}\n\n    \t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n    \t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n    \t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\trenderer.render( drawStart, drawCount );\n\n    \t\t}\n\n    \t};\n\n    \tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n    \t\tvar extension;\n\n    \t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n    \t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\n    \t\t\tif ( extension === null ) {\n\n    \t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n    \t\t\t\treturn;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( startIndex === undefined ) startIndex = 0;\n\n    \t\tstate.initAttributes();\n\n    \t\tvar geometryAttributes = geometry.attributes;\n\n    \t\tvar programAttributes = program.getAttributes();\n\n    \t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n    \t\tfor ( var name in programAttributes ) {\n\n    \t\t\tvar programAttribute = programAttributes[ name ];\n\n    \t\t\tif ( programAttribute >= 0 ) {\n\n    \t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n    \t\t\t\tif ( geometryAttribute !== undefined ) {\n\n    \t\t\t\t\tvar type = _gl.FLOAT;\n    \t\t\t\t\tvar array = geometryAttribute.array;\n    \t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\n    \t\t\t\t\tif ( array instanceof Float32Array ) {\n\n    \t\t\t\t\t\ttype = _gl.FLOAT;\n\n    \t\t\t\t\t} else if ( array instanceof Float64Array ) {\n\n    \t\t\t\t\t\tconsole.warn( \"Unsupported data buffer format: Float64Array\" );\n\n    \t\t\t\t\t} else if ( array instanceof Uint16Array ) {\n\n    \t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\n\n    \t\t\t\t\t} else if ( array instanceof Int16Array ) {\n\n    \t\t\t\t\t\ttype = _gl.SHORT;\n\n    \t\t\t\t\t} else if ( array instanceof Uint32Array ) {\n\n    \t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\n\n    \t\t\t\t\t} else if ( array instanceof Int32Array ) {\n\n    \t\t\t\t\t\ttype = _gl.INT;\n\n    \t\t\t\t\t} else if ( array instanceof Int8Array ) {\n\n    \t\t\t\t\t\ttype = _gl.BYTE;\n\n    \t\t\t\t\t} else if ( array instanceof Uint8Array ) {\n\n    \t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tvar size = geometryAttribute.itemSize;\n    \t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\n\n    \t\t\t\t\tif ( geometryAttribute && geometryAttribute.isInterleavedBufferAttribute ) {\n\n    \t\t\t\t\t\tvar data = geometryAttribute.data;\n    \t\t\t\t\t\tvar stride = data.stride;\n    \t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n    \t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n    \t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\n\n    \t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n    \t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n    \t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tif ( geometryAttribute && geometryAttribute.isInstancedBufferAttribute ) {\n\n    \t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\n\n    \t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n    \t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n    \t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n    \t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n    \t\t\t\t\tif ( value !== undefined ) {\n\n    \t\t\t\t\t\tswitch ( value.length ) {\n\n    \t\t\t\t\t\t\tcase 2:\n    \t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase 3:\n    \t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tcase 4:\n    \t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n    \t\t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t\tdefault:\n    \t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tstate.disableUnusedAttributes();\n\n    \t}\n\n    \t// Sorting\n\n    \tfunction absNumericalSort( a, b ) {\n\n    \t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\n\n    \t}\n\n    \tfunction painterSortStable( a, b ) {\n\n    \t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n    \t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n    \t\t} else if ( a.material.program && b.material.program && a.material.program !== b.material.program ) {\n\n    \t\t\treturn a.material.program.id - b.material.program.id;\n\n    \t\t} else if ( a.material.id !== b.material.id ) {\n\n    \t\t\treturn a.material.id - b.material.id;\n\n    \t\t} else if ( a.z !== b.z ) {\n\n    \t\t\treturn a.z - b.z;\n\n    \t\t} else {\n\n    \t\t\treturn a.id - b.id;\n\n    \t\t}\n\n    \t}\n\n    \tfunction reversePainterSortStable( a, b ) {\n\n    \t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\n\n    \t\t\treturn a.object.renderOrder - b.object.renderOrder;\n\n    \t\t} if ( a.z !== b.z ) {\n\n    \t\t\treturn b.z - a.z;\n\n    \t\t} else {\n\n    \t\t\treturn a.id - b.id;\n\n    \t\t}\n\n    \t}\n\n    \t// Rendering\n\n    \tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n    \t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n    \t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tvar fog = scene.fog;\n\n    \t\t// reset caching for this frame\n\n    \t\t_currentGeometryProgram = '';\n    \t\t_currentMaterialId = - 1;\n    \t\t_currentCamera = null;\n\n    \t\t// update scene graph\n\n    \t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n    \t\t// update camera matrices and frustum\n\n    \t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n    \t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n    \t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n    \t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n    \t\tlights.length = 0;\n\n    \t\topaqueObjectsLastIndex = - 1;\n    \t\ttransparentObjectsLastIndex = - 1;\n\n    \t\tsprites.length = 0;\n    \t\tlensFlares.length = 0;\n\n    \t\t_localClippingEnabled = this.localClippingEnabled;\n    \t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n    \t\tprojectObject( scene, camera );\n\n    \t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\n    \t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\n\n    \t\tif ( _this.sortObjects === true ) {\n\n    \t\t\topaqueObjects.sort( painterSortStable );\n    \t\t\ttransparentObjects.sort( reversePainterSortStable );\n\n    \t\t}\n\n    \t\t//\n\n    \t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n    \t\tsetupShadows( lights );\n\n    \t\tshadowMap.render( scene, camera );\n\n    \t\tsetupLights( lights, camera );\n\n    \t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n    \t\t//\n\n    \t\t_infoRender.calls = 0;\n    \t\t_infoRender.vertices = 0;\n    \t\t_infoRender.faces = 0;\n    \t\t_infoRender.points = 0;\n\n    \t\tif ( renderTarget === undefined ) {\n\n    \t\t\trenderTarget = null;\n\n    \t\t}\n\n    \t\tthis.setRenderTarget( renderTarget );\n\n    \t\t//\n\n    \t\tvar background = scene.background;\n\n    \t\tif ( background === null ) {\n\n    \t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\n\n    \t\t} else if ( background && background.isColor ) {\n\n    \t\t\tglClearColor( background.r, background.g, background.b, 1 );\n    \t\t\tforceClear = true;\n\n    \t\t}\n\n    \t\tif ( this.autoClear || forceClear ) {\n\n    \t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\n\n    \t\t}\n\n    \t\tif ( background && background.isCubeTexture ) {\n\n    \t\t\tbackgroundCamera2.projectionMatrix.copy( camera.projectionMatrix );\n\n    \t\t\tbackgroundCamera2.matrixWorld.extractRotation( camera.matrixWorld );\n    \t\t\tbackgroundCamera2.matrixWorldInverse.getInverse( backgroundCamera2.matrixWorld );\n\n    \t\t\tbackgroundBoxMesh.material.uniforms[ \"tCube\" ].value = background;\n    \t\t\tbackgroundBoxMesh.modelViewMatrix.multiplyMatrices( backgroundCamera2.matrixWorldInverse, backgroundBoxMesh.matrixWorld );\n\n    \t\t\tobjects.update( backgroundBoxMesh );\n\n    \t\t\t_this.renderBufferDirect( backgroundCamera2, null, backgroundBoxMesh.geometry, backgroundBoxMesh.material, backgroundBoxMesh, null );\n\n    \t\t} else if ( background && background.isTexture ) {\n\n    \t\t\tbackgroundPlaneMesh.material.map = background;\n\n    \t\t\tobjects.update( backgroundPlaneMesh );\n\n    \t\t\t_this.renderBufferDirect( backgroundCamera, null, backgroundPlaneMesh.geometry, backgroundPlaneMesh.material, backgroundPlaneMesh, null );\n\n    \t\t}\n\n    \t\t//\n\n    \t\tif ( scene.overrideMaterial ) {\n\n    \t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n    \t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\n    \t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\n\n    \t\t} else {\n\n    \t\t\t// opaque pass (front-to-back order)\n\n    \t\t\tstate.setBlending( NoBlending );\n    \t\t\trenderObjects( opaqueObjects, camera, fog );\n\n    \t\t\t// transparent pass (back-to-front order)\n\n    \t\t\trenderObjects( transparentObjects, camera, fog );\n\n    \t\t}\n\n    \t\t// custom render plugins (post pass)\n\n    \t\tspritePlugin.render( scene, camera );\n    \t\tlensFlarePlugin.render( scene, camera, _currentViewport );\n\n    \t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n    \t\tif ( renderTarget ) {\n\n    \t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n    \t\t}\n\n    \t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n    \t\tstate.setDepthTest( true );\n    \t\tstate.setDepthWrite( true );\n    \t\tstate.setColorWrite( true );\n\n    \t\t// _gl.finish();\n\n    \t};\n\n    \tfunction pushRenderItem( object, geometry, material, z, group ) {\n\n    \t\tvar array, index;\n\n    \t\t// allocate the next position in the appropriate array\n\n    \t\tif ( material.transparent ) {\n\n    \t\t\tarray = transparentObjects;\n    \t\t\tindex = ++ transparentObjectsLastIndex;\n\n    \t\t} else {\n\n    \t\t\tarray = opaqueObjects;\n    \t\t\tindex = ++ opaqueObjectsLastIndex;\n\n    \t\t}\n\n    \t\t// recycle existing render item or grow the array\n\n    \t\tvar renderItem = array[ index ];\n\n    \t\tif ( renderItem !== undefined ) {\n\n    \t\t\trenderItem.id = object.id;\n    \t\t\trenderItem.object = object;\n    \t\t\trenderItem.geometry = geometry;\n    \t\t\trenderItem.material = material;\n    \t\t\trenderItem.z = _vector3.z;\n    \t\t\trenderItem.group = group;\n\n    \t\t} else {\n\n    \t\t\trenderItem = {\n    \t\t\t\tid: object.id,\n    \t\t\t\tobject: object,\n    \t\t\t\tgeometry: geometry,\n    \t\t\t\tmaterial: material,\n    \t\t\t\tz: _vector3.z,\n    \t\t\t\tgroup: group\n    \t\t\t};\n\n    \t\t\t// assert( index === array.length );\n    \t\t\tarray.push( renderItem );\n\n    \t\t}\n\n    \t}\n\n    \t// TODO Duplicated code (Frustum)\n\n    \tfunction isObjectViewable( object ) {\n\n    \t\tvar geometry = object.geometry;\n\n    \t\tif ( geometry.boundingSphere === null )\n    \t\t\tgeometry.computeBoundingSphere();\n\n    \t\t_sphere.copy( geometry.boundingSphere ).\n    \t\t\tapplyMatrix4( object.matrixWorld );\n\n    \t\treturn isSphereViewable( _sphere );\n\n    \t}\n\n    \tfunction isSpriteViewable( sprite ) {\n\n    \t\t_sphere.center.set( 0, 0, 0 );\n    \t\t_sphere.radius = 0.7071067811865476;\n    \t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n    \t\treturn isSphereViewable( _sphere );\n\n    \t}\n\n    \tfunction isSphereViewable( sphere ) {\n\n    \t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n    \t\tvar numPlanes = _clipping.numPlanes;\n\n    \t\tif ( numPlanes === 0 ) return true;\n\n    \t\tvar planes = _this.clippingPlanes,\n\n    \t\t\tcenter = sphere.center,\n    \t\t\tnegRad = - sphere.radius,\n    \t\t\ti = 0;\n\n    \t\tdo {\n\n    \t\t\t// out when deeper than radius in the negative halfspace\n    \t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n    \t\t} while ( ++ i !== numPlanes );\n\n    \t\treturn true;\n\n    \t}\n\n    \tfunction projectObject( object, camera ) {\n\n    \t\tif ( object.visible === false ) return;\n\n    \t\tvar visible = ( object.layers.mask & camera.layers.mask ) !== 0;\n\n    \t\tif ( visible ) {\n\n    \t\t\tif ( object.isLight ) {\n\n    \t\t\t\tlights.push( object );\n\n    \t\t\t} else if ( object.isSprite ) {\n\n    \t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\n\n    \t\t\t\t\tsprites.push( object );\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( object.isLensFlare ) {\n\n    \t\t\t\tlensFlares.push( object );\n\n    \t\t\t} else if ( object.isImmediateRenderObject ) {\n\n    \t\t\t\tif ( _this.sortObjects === true ) {\n\n    \t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n    \t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n    \t\t\t\t}\n\n    \t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\n\n    \t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n    \t\t\t\tif ( object.isSkinnedMesh ) {\n\n    \t\t\t\t\tobject.skeleton.update();\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\n\n    \t\t\t\t\tvar material = object.material;\n\n    \t\t\t\t\tif ( material.visible === true ) {\n\n    \t\t\t\t\t\tif ( _this.sortObjects === true ) {\n\n    \t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\n    \t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\tvar geometry = objects.update( object );\n\n    \t\t\t\t\t\tif ( material.isMultiMaterial ) {\n\n    \t\t\t\t\t\t\tvar groups = geometry.groups;\n    \t\t\t\t\t\t\tvar materials = material.materials;\n\n    \t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n    \t\t\t\t\t\t\t\tvar group = groups[ i ];\n    \t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\n\n    \t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\n\n    \t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\n\n    \t\t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar children = object.children;\n\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n    \t\t\tprojectObject( children[ i ], camera );\n\n    \t\t}\n\n    \t}\n\n    \tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\n\n    \t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n    \t\t\tvar renderItem = renderList[ i ];\n\n    \t\t\tvar object = renderItem.object;\n    \t\t\tvar geometry = renderItem.geometry;\n    \t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n    \t\t\tvar group = renderItem.group;\n\n    \t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n    \t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n    \t\t\tif ( object.isImmediateRenderObject ) {\n\n    \t\t\t\tsetMaterial( material );\n\n    \t\t\t\tvar program = setProgram( camera, fog, material, object );\n\n    \t\t\t\t_currentGeometryProgram = '';\n\n    \t\t\t\tobject.render( function ( object ) {\n\n    \t\t\t\t\t_this.renderBufferImmediate( object, program, material );\n\n    \t\t\t\t} );\n\n    \t\t\t} else {\n\n    \t\t\t\tif ( object.onBeforeRender !== null ) object.onBeforeRender();\n\n    \t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \tfunction initMaterial( material, fog, object ) {\n\n    \t\tvar materialProperties = properties.get( material );\n\n    \t\tvar parameters = programCache.getParameters(\n    \t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, object );\n\n    \t\tvar code = programCache.getProgramCode( material, parameters );\n\n    \t\tvar program = materialProperties.program;\n    \t\tvar programChange = true;\n\n    \t\tif ( program === undefined ) {\n\n    \t\t\t// new material\n    \t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n    \t\t} else if ( program.code !== code ) {\n\n    \t\t\t// changed glsl or parameters\n    \t\t\treleaseMaterialProgramReference( material );\n\n    \t\t} else if ( parameters.shaderID !== undefined ) {\n\n    \t\t\t// same glsl and uniform list\n    \t\t\treturn;\n\n    \t\t} else {\n\n    \t\t\t// only rebuild uniform list\n    \t\t\tprogramChange = false;\n\n    \t\t}\n\n    \t\tif ( programChange ) {\n\n    \t\t\tif ( parameters.shaderID ) {\n\n    \t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n    \t\t\t\tmaterialProperties.__webglShader = {\n    \t\t\t\t\tname: material.type,\n    \t\t\t\t\tuniforms: exports.UniformsUtils.clone( shader.uniforms ),\n    \t\t\t\t\tvertexShader: shader.vertexShader,\n    \t\t\t\t\tfragmentShader: shader.fragmentShader\n    \t\t\t\t};\n\n    \t\t\t} else {\n\n    \t\t\t\tmaterialProperties.__webglShader = {\n    \t\t\t\t\tname: material.type,\n    \t\t\t\t\tuniforms: material.uniforms,\n    \t\t\t\t\tvertexShader: material.vertexShader,\n    \t\t\t\t\tfragmentShader: material.fragmentShader\n    \t\t\t\t};\n\n    \t\t\t}\n\n    \t\t\tmaterial.__webglShader = materialProperties.__webglShader;\n\n    \t\t\tprogram = programCache.acquireProgram( material, parameters, code );\n\n    \t\t\tmaterialProperties.program = program;\n    \t\t\tmaterial.program = program;\n\n    \t\t}\n\n    \t\tvar attributes = program.getAttributes();\n\n    \t\tif ( material.morphTargets ) {\n\n    \t\t\tmaterial.numSupportedMorphTargets = 0;\n\n    \t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n    \t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\n\n    \t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( material.morphNormals ) {\n\n    \t\t\tmaterial.numSupportedMorphNormals = 0;\n\n    \t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n    \t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\n\n    \t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar uniforms = materialProperties.__webglShader.uniforms;\n\n    \t\tif ( ! material.isShaderMaterial &&\n    \t\t     ! material.isRawShaderMaterial ||\n    \t\t       material.clipping === true ) {\n\n    \t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n    \t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n    \t\t}\n\n    \t\tmaterialProperties.fog = fog;\n\n    \t\t// store the light setup it was created for\n\n    \t\tmaterialProperties.lightsHash = _lights.hash;\n\n    \t\tif ( material.lights ) {\n\n    \t\t\t// wire up the material to this renderer's lighting state\n\n    \t\t\tuniforms.ambientLightColor.value = _lights.ambient;\n    \t\t\tuniforms.directionalLights.value = _lights.directional;\n    \t\t\tuniforms.spotLights.value = _lights.spot;\n    \t\t\tuniforms.pointLights.value = _lights.point;\n    \t\t\tuniforms.hemisphereLights.value = _lights.hemi;\n\n    \t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\n    \t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\n    \t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\n    \t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\n    \t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\n    \t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\n\n    \t\t}\n\n    \t\tvar progUniforms = materialProperties.program.getUniforms(),\n    \t\t\tuniformsList =\n    \t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n    \t\tmaterialProperties.uniformsList = uniformsList;\n    \t\tmaterialProperties.dynamicUniforms =\n    \t\t\t\tWebGLUniforms.splitDynamic( uniformsList, uniforms );\n\n    \t}\n\n    \tfunction setMaterial( material ) {\n\n    \t\tmaterial.side === DoubleSide\n    \t\t\t? state.disable( _gl.CULL_FACE )\n    \t\t\t: state.enable( _gl.CULL_FACE );\n\n    \t\tstate.setFlipSided( material.side === BackSide );\n\n    \t\tmaterial.transparent === true\n    \t\t\t? state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n    \t\t\t: state.setBlending( NoBlending );\n\n    \t\tstate.setDepthFunc( material.depthFunc );\n    \t\tstate.setDepthTest( material.depthTest );\n    \t\tstate.setDepthWrite( material.depthWrite );\n    \t\tstate.setColorWrite( material.colorWrite );\n    \t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n    \t}\n\n    \tfunction setProgram( camera, fog, material, object ) {\n\n    \t\t_usedTextureUnits = 0;\n\n    \t\tvar materialProperties = properties.get( material );\n\n    \t\tif ( _clippingEnabled ) {\n\n    \t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n    \t\t\t\tvar useCache =\n    \t\t\t\t\t\tcamera === _currentCamera &&\n    \t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n    \t\t\t\t// we might want to call this function with some ClippingGroup\n    \t\t\t\t// object instead of the material, once it becomes feasible\n    \t\t\t\t// (#8465, #8379)\n    \t\t\t\t_clipping.setState(\n    \t\t\t\t\t\tmaterial.clippingPlanes, material.clipShadows,\n    \t\t\t\t\t\tcamera, materialProperties, useCache );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( material.needsUpdate === false ) {\n\n    \t\t\tif ( materialProperties.program === undefined ) {\n\n    \t\t\t\tmaterial.needsUpdate = true;\n\n    \t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n    \t\t\t\tmaterial.needsUpdate = true;\n\n    \t\t\t} else if ( material.lights && materialProperties.lightsHash !== _lights.hash ) {\n\n    \t\t\t\tmaterial.needsUpdate = true;\n\n    \t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n    \t\t\t\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\n\n    \t\t\t\tmaterial.needsUpdate = true;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( material.needsUpdate ) {\n\n    \t\t\tinitMaterial( material, fog, object );\n    \t\t\tmaterial.needsUpdate = false;\n\n    \t\t}\n\n    \t\tvar refreshProgram = false;\n    \t\tvar refreshMaterial = false;\n    \t\tvar refreshLights = false;\n\n    \t\tvar program = materialProperties.program,\n    \t\t\tp_uniforms = program.getUniforms(),\n    \t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\n\n    \t\tif ( program.id !== _currentProgram ) {\n\n    \t\t\t_gl.useProgram( program.program );\n    \t\t\t_currentProgram = program.id;\n\n    \t\t\trefreshProgram = true;\n    \t\t\trefreshMaterial = true;\n    \t\t\trefreshLights = true;\n\n    \t\t}\n\n    \t\tif ( material.id !== _currentMaterialId ) {\n\n    \t\t\t_currentMaterialId = material.id;\n\n    \t\t\trefreshMaterial = true;\n\n    \t\t}\n\n    \t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n    \t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\n\n    \t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n    \t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n    \t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n    \t\t\t}\n\n\n    \t\t\tif ( camera !== _currentCamera ) {\n\n    \t\t\t\t_currentCamera = camera;\n\n    \t\t\t\t// lighting uniforms depend on the camera so enforce an update\n    \t\t\t\t// now, in case this material supports lights - or later, when\n    \t\t\t\t// the next material that does gets activated:\n\n    \t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n    \t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n    \t\t\t}\n\n    \t\t\t// load material specific uniforms\n    \t\t\t// (shader material also gets them for the sake of genericity)\n\n    \t\t\tif ( material.isShaderMaterial ||\n    \t\t\t     material.isMeshPhongMaterial ||\n    \t\t\t     material.isMeshStandardMaterial ||\n    \t\t\t     material.envMap ) {\n\n    \t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n    \t\t\t\tif ( uCamPos !== undefined ) {\n\n    \t\t\t\t\tuCamPos.setValue( _gl,\n    \t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( material.isMeshPhongMaterial ||\n    \t\t\t     material.isMeshLambertMaterial ||\n    \t\t\t     material.isMeshBasicMaterial ||\n    \t\t\t     material.isMeshStandardMaterial ||\n    \t\t\t     material.isShaderMaterial ||\n    \t\t\t     material.skinning ) {\n\n    \t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n    \t\t\t}\n\n    \t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\n    \t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\n\n    \t\t}\n\n    \t\t// skinning uniforms must be set even if material didn't change\n    \t\t// auto-setting of texture unit for bone texture must go before other textures\n    \t\t// not sure why, but otherwise weird things happen\n\n    \t\tif ( material.skinning ) {\n\n    \t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n    \t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n    \t\t\tvar skeleton = object.skeleton;\n\n    \t\t\tif ( skeleton ) {\n\n    \t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\n\n    \t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\n    \t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\n    \t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( refreshMaterial ) {\n\n    \t\t\tif ( material.lights ) {\n\n    \t\t\t\t// the current material requires lighting info\n\n    \t\t\t\t// note: all lighting uniforms are always set correctly\n    \t\t\t\t// they simply reference the renderer's state for their\n    \t\t\t\t// values\n    \t\t\t\t//\n    \t\t\t\t// use the current material's .needsUpdate flags to set\n    \t\t\t\t// the GL state when required\n\n    \t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n    \t\t\t}\n\n    \t\t\t// refresh uniforms common to several materials\n\n    \t\t\tif ( fog && material.fog ) {\n\n    \t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n    \t\t\t}\n\n    \t\t\tif ( material.isMeshBasicMaterial ||\n    \t\t\t     material.isMeshLambertMaterial ||\n    \t\t\t     material.isMeshPhongMaterial ||\n    \t\t\t     material.isMeshStandardMaterial ||\n    \t\t\t     material.isMeshDepthMaterial ) {\n\n    \t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n    \t\t\t}\n\n    \t\t\t// refresh single material specific uniforms\n\n    \t\t\tif ( material.isLineBasicMaterial ) {\n\n    \t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n    \t\t\t} else if ( material.isLineDashedMaterial ) {\n\n    \t\t\t\trefreshUniformsLine( m_uniforms, material );\n    \t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n    \t\t\t} else if ( material.isPointsMaterial ) {\n\n    \t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n    \t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n    \t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n    \t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n    \t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n    \t\t\t} else if ( material.isMeshPhysicalMaterial ) {\n\n    \t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n    \t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n    \t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n    \t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n    \t\t\t\tif ( material.displacementMap ) {\n\n    \t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\n    \t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\n    \t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n    \t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n    \t\t\t}\n\n    \t\t\tWebGLUniforms.upload(\n    \t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n    \t\t}\n\n\n    \t\t// common matrices\n\n    \t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\n    \t\tp_uniforms.set( _gl, object, 'normalMatrix' );\n    \t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\n    \t\t// dynamic uniforms\n\n    \t\tvar dynUniforms = materialProperties.dynamicUniforms;\n\n    \t\tif ( dynUniforms !== null ) {\n\n    \t\t\tWebGLUniforms.evalDynamic( dynUniforms, m_uniforms, object, material, camera );\n    \t\t\tWebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\n\n    \t\t}\n\n    \t\treturn program;\n\n    \t}\n\n    \t// Uniforms (refresh uniforms objects)\n\n    \tfunction refreshUniformsCommon( uniforms, material ) {\n\n    \t\tuniforms.opacity.value = material.opacity;\n\n    \t\tuniforms.diffuse.value = material.color;\n\n    \t\tif ( material.emissive ) {\n\n    \t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n    \t\t}\n\n    \t\tuniforms.map.value = material.map;\n    \t\tuniforms.specularMap.value = material.specularMap;\n    \t\tuniforms.alphaMap.value = material.alphaMap;\n\n    \t\tif ( material.aoMap ) {\n\n    \t\t\tuniforms.aoMap.value = material.aoMap;\n    \t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n    \t\t}\n\n    \t\t// uv repeat and offset setting priorities\n    \t\t// 1. color map\n    \t\t// 2. specular map\n    \t\t// 3. normal map\n    \t\t// 4. bump map\n    \t\t// 5. alpha map\n    \t\t// 6. emissive map\n\n    \t\tvar uvScaleMap;\n\n    \t\tif ( material.map ) {\n\n    \t\t\tuvScaleMap = material.map;\n\n    \t\t} else if ( material.specularMap ) {\n\n    \t\t\tuvScaleMap = material.specularMap;\n\n    \t\t} else if ( material.displacementMap ) {\n\n    \t\t\tuvScaleMap = material.displacementMap;\n\n    \t\t} else if ( material.normalMap ) {\n\n    \t\t\tuvScaleMap = material.normalMap;\n\n    \t\t} else if ( material.bumpMap ) {\n\n    \t\t\tuvScaleMap = material.bumpMap;\n\n    \t\t} else if ( material.roughnessMap ) {\n\n    \t\t\tuvScaleMap = material.roughnessMap;\n\n    \t\t} else if ( material.metalnessMap ) {\n\n    \t\t\tuvScaleMap = material.metalnessMap;\n\n    \t\t} else if ( material.alphaMap ) {\n\n    \t\t\tuvScaleMap = material.alphaMap;\n\n    \t\t} else if ( material.emissiveMap ) {\n\n    \t\t\tuvScaleMap = material.emissiveMap;\n\n    \t\t}\n\n    \t\tif ( uvScaleMap !== undefined ) {\n\n    \t\t\t// backwards compatibility\n    \t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n    \t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n    \t\t\t}\n\n    \t\t\tvar offset = uvScaleMap.offset;\n    \t\t\tvar repeat = uvScaleMap.repeat;\n\n    \t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n    \t\t}\n\n    \t\tuniforms.envMap.value = material.envMap;\n\n    \t\t// don't flip CubeTexture envMaps, flip everything else:\n    \t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n    \t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n    \t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n    \t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n    \t\tuniforms.reflectivity.value = material.reflectivity;\n    \t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n    \t}\n\n    \tfunction refreshUniformsLine( uniforms, material ) {\n\n    \t\tuniforms.diffuse.value = material.color;\n    \t\tuniforms.opacity.value = material.opacity;\n\n    \t}\n\n    \tfunction refreshUniformsDash( uniforms, material ) {\n\n    \t\tuniforms.dashSize.value = material.dashSize;\n    \t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n    \t\tuniforms.scale.value = material.scale;\n\n    \t}\n\n    \tfunction refreshUniformsPoints( uniforms, material ) {\n\n    \t\tuniforms.diffuse.value = material.color;\n    \t\tuniforms.opacity.value = material.opacity;\n    \t\tuniforms.size.value = material.size * _pixelRatio;\n    \t\tuniforms.scale.value = _canvas.clientHeight * 0.5;\n\n    \t\tuniforms.map.value = material.map;\n\n    \t\tif ( material.map !== null ) {\n\n    \t\t\tvar offset = material.map.offset;\n    \t\t\tvar repeat = material.map.repeat;\n\n    \t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n    \t\t}\n\n    \t}\n\n    \tfunction refreshUniformsFog( uniforms, fog ) {\n\n    \t\tuniforms.fogColor.value = fog.color;\n\n    \t\tif ( fog.isFog ) {\n\n    \t\t\tuniforms.fogNear.value = fog.near;\n    \t\t\tuniforms.fogFar.value = fog.far;\n\n    \t\t} else if ( fog.isFogExp2 ) {\n\n    \t\t\tuniforms.fogDensity.value = fog.density;\n\n    \t\t}\n\n    \t}\n\n    \tfunction refreshUniformsLambert( uniforms, material ) {\n\n    \t\tif ( material.lightMap ) {\n\n    \t\t\tuniforms.lightMap.value = material.lightMap;\n    \t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n    \t\t}\n\n    \t\tif ( material.emissiveMap ) {\n\n    \t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n    \t\t}\n\n    \t}\n\n    \tfunction refreshUniformsPhong( uniforms, material ) {\n\n    \t\tuniforms.specular.value = material.specular;\n    \t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n    \t\tif ( material.lightMap ) {\n\n    \t\t\tuniforms.lightMap.value = material.lightMap;\n    \t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n    \t\t}\n\n    \t\tif ( material.emissiveMap ) {\n\n    \t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n    \t\t}\n\n    \t\tif ( material.bumpMap ) {\n\n    \t\t\tuniforms.bumpMap.value = material.bumpMap;\n    \t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n    \t\t}\n\n    \t\tif ( material.normalMap ) {\n\n    \t\t\tuniforms.normalMap.value = material.normalMap;\n    \t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n    \t\t}\n\n    \t\tif ( material.displacementMap ) {\n\n    \t\t\tuniforms.displacementMap.value = material.displacementMap;\n    \t\t\tuniforms.displacementScale.value = material.displacementScale;\n    \t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n    \t\t}\n\n    \t}\n\n    \tfunction refreshUniformsStandard( uniforms, material ) {\n\n    \t\tuniforms.roughness.value = material.roughness;\n    \t\tuniforms.metalness.value = material.metalness;\n\n    \t\tif ( material.roughnessMap ) {\n\n    \t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n    \t\t}\n\n    \t\tif ( material.metalnessMap ) {\n\n    \t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n    \t\t}\n\n    \t\tif ( material.lightMap ) {\n\n    \t\t\tuniforms.lightMap.value = material.lightMap;\n    \t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n    \t\t}\n\n    \t\tif ( material.emissiveMap ) {\n\n    \t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n    \t\t}\n\n    \t\tif ( material.bumpMap ) {\n\n    \t\t\tuniforms.bumpMap.value = material.bumpMap;\n    \t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n    \t\t}\n\n    \t\tif ( material.normalMap ) {\n\n    \t\t\tuniforms.normalMap.value = material.normalMap;\n    \t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n    \t\t}\n\n    \t\tif ( material.displacementMap ) {\n\n    \t\t\tuniforms.displacementMap.value = material.displacementMap;\n    \t\t\tuniforms.displacementScale.value = material.displacementScale;\n    \t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n    \t\t}\n\n    \t\tif ( material.envMap ) {\n\n    \t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n    \t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n    \t\t}\n\n    \t}\n\n    \tfunction refreshUniformsPhysical( uniforms, material ) {\n\n    \t\tuniforms.clearCoat.value = material.clearCoat;\n    \t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n    \t\trefreshUniformsStandard( uniforms, material );\n\n    \t}\n\n    \t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n    \tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n    \t\tuniforms.ambientLightColor.needsUpdate = value;\n\n    \t\tuniforms.directionalLights.needsUpdate = value;\n    \t\tuniforms.pointLights.needsUpdate = value;\n    \t\tuniforms.spotLights.needsUpdate = value;\n    \t\tuniforms.hemisphereLights.needsUpdate = value;\n\n    \t}\n\n    \t// Lighting\n\n    \tfunction setupShadows( lights ) {\n\n    \t\tvar lightShadowsLength = 0;\n\n    \t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n    \t\t\tvar light = lights[ i ];\n\n    \t\t\tif ( light.castShadow ) {\n\n    \t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t_lights.shadows.length = lightShadowsLength;\n\n    \t}\n\n    \tfunction setupLights( lights, camera ) {\n\n    \t\tvar l, ll, light,\n    \t\tr = 0, g = 0, b = 0,\n    \t\tcolor,\n    \t\tintensity,\n    \t\tdistance,\n    \t\tshadowMap,\n\n    \t\tviewMatrix = camera.matrixWorldInverse,\n\n    \t\tdirectionalLength = 0,\n    \t\tpointLength = 0,\n    \t\tspotLength = 0,\n    \t\themiLength = 0;\n\n    \t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\n\n    \t\t\tlight = lights[ l ];\n\n    \t\t\tcolor = light.color;\n    \t\t\tintensity = light.intensity;\n    \t\t\tdistance = light.distance;\n\n    \t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n    \t\t\tif ( light.isAmbientLight ) {\n\n    \t\t\t\tr += color.r * intensity;\n    \t\t\t\tg += color.g * intensity;\n    \t\t\t\tb += color.b * intensity;\n\n    \t\t\t} else if ( light.isDirectionalLight ) {\n\n    \t\t\t\tvar uniforms = lightCache.get( light );\n\n    \t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n    \t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n    \t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n    \t\t\t\tuniforms.direction.sub( _vector3 );\n    \t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n    \t\t\t\tuniforms.shadow = light.castShadow;\n\n    \t\t\t\tif ( light.castShadow ) {\n\n    \t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n    \t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n    \t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n    \t\t\t\t}\n\n    \t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\n    \t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n    \t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\n\n    \t\t\t} else if ( light.isSpotLight ) {\n\n    \t\t\t\tvar uniforms = lightCache.get( light );\n\n    \t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n    \t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n    \t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n    \t\t\t\tuniforms.distance = distance;\n\n    \t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n    \t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\n    \t\t\t\tuniforms.direction.sub( _vector3 );\n    \t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n    \t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n    \t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n    \t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n    \t\t\t\tuniforms.shadow = light.castShadow;\n\n    \t\t\t\tif ( light.castShadow ) {\n\n    \t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n    \t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n    \t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n    \t\t\t\t}\n\n    \t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\n    \t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n    \t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\n\n    \t\t\t} else if ( light.isPointLight ) {\n\n    \t\t\t\tvar uniforms = lightCache.get( light );\n\n    \t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n    \t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n    \t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n    \t\t\t\tuniforms.distance = light.distance;\n    \t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n    \t\t\t\tuniforms.shadow = light.castShadow;\n\n    \t\t\t\tif ( light.castShadow ) {\n\n    \t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\n    \t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\n    \t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\n\n    \t\t\t\t}\n\n    \t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\n\n    \t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\n\n    \t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new Matrix4();\n\n    \t\t\t\t}\n\n    \t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n    \t\t\t\t// equal to inverse of the light's position\n    \t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\n    \t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\n\n    \t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\n\n    \t\t\t} else if ( light.isHemisphereLight ) {\n\n    \t\t\t\tvar uniforms = lightCache.get( light );\n\n    \t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n    \t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n    \t\t\t\tuniforms.direction.normalize();\n\n    \t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n    \t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n    \t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t_lights.ambient[ 0 ] = r;\n    \t\t_lights.ambient[ 1 ] = g;\n    \t\t_lights.ambient[ 2 ] = b;\n\n    \t\t_lights.directional.length = directionalLength;\n    \t\t_lights.spot.length = spotLength;\n    \t\t_lights.point.length = pointLength;\n    \t\t_lights.hemi.length = hemiLength;\n\n    \t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\n\n    \t}\n\n    \t// GL state setting\n\n    \tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n    \t\tstate.setCullFace( cullFace );\n    \t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n    \t};\n\n    \t// Textures\n\n    \tfunction allocTextureUnit() {\n\n    \t\tvar textureUnit = _usedTextureUnits;\n\n    \t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n    \t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n    \t\t}\n\n    \t\t_usedTextureUnits += 1;\n\n    \t\treturn textureUnit;\n\n    \t}\n\n    \tthis.allocTextureUnit = allocTextureUnit;\n\n    \t// this.setTexture2D = setTexture2D;\n    \tthis.setTexture2D = ( function() {\n\n    \t\tvar warned = false;\n\n    \t\t// backwards compatibility: peel texture.texture\n    \t\treturn function setTexture2D( texture, slot ) {\n\n    \t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n    \t\t\t\tif ( ! warned ) {\n\n    \t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n    \t\t\t\t\twarned = true;\n\n    \t\t\t\t}\n\n    \t\t\t\ttexture = texture.texture;\n\n    \t\t\t}\n\n    \t\t\ttextures.setTexture2D( texture, slot );\n\n    \t\t};\n\n    \t}() );\n\n    \tthis.setTexture = ( function() {\n\n    \t\tvar warned = false;\n\n    \t\treturn function setTexture( texture, slot ) {\n\n    \t\t\tif ( ! warned ) {\n\n    \t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n    \t\t\t\twarned = true;\n\n    \t\t\t}\n\n    \t\t\ttextures.setTexture2D( texture, slot );\n\n    \t\t};\n\n    \t}() );\n\n    \tthis.setTextureCube = ( function() {\n\n    \t\tvar warned = false;\n\n    \t\treturn function setTextureCube( texture, slot ) {\n\n    \t\t\t// backwards compatibility: peel texture.texture\n    \t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n    \t\t\t\tif ( ! warned ) {\n\n    \t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n    \t\t\t\t\twarned = true;\n\n    \t\t\t\t}\n\n    \t\t\t\ttexture = texture.texture;\n\n    \t\t\t}\n\n    \t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n    \t\t\t// TODO: unify these code paths\n    \t\t\tif ( ( texture && texture.isCubeTexture ) ||\n    \t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n    \t\t\t\t// CompressedTexture can have Array in image :/\n\n    \t\t\t\t// this function alone should take care of cube textures\n    \t\t\t\ttextures.setTextureCube( texture, slot );\n\n    \t\t\t} else {\n\n    \t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n    \t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}() );\n\n    \tthis.getCurrentRenderTarget = function() {\n\n    \t\treturn _currentRenderTarget;\n\n    \t};\n\n    \tthis.setRenderTarget = function ( renderTarget ) {\n\n    \t\t_currentRenderTarget = renderTarget;\n\n    \t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n    \t\t\ttextures.setupRenderTarget( renderTarget );\n\n    \t\t}\n\n    \t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n    \t\tvar framebuffer;\n\n    \t\tif ( renderTarget ) {\n\n    \t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n    \t\t\tif ( isCube ) {\n\n    \t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\n\n    \t\t\t} else {\n\n    \t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\n\n    \t\t\t}\n\n    \t\t\t_currentScissor.copy( renderTarget.scissor );\n    \t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n    \t\t\t_currentViewport.copy( renderTarget.viewport );\n\n    \t\t} else {\n\n    \t\t\tframebuffer = null;\n\n    \t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n    \t\t\t_currentScissorTest = _scissorTest;\n\n    \t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\n    \t\t}\n\n    \t\tif ( _currentFramebuffer !== framebuffer ) {\n\n    \t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n    \t\t\t_currentFramebuffer = framebuffer;\n\n    \t\t}\n\n    \t\tstate.scissor( _currentScissor );\n    \t\tstate.setScissorTest( _currentScissorTest );\n\n    \t\tstate.viewport( _currentViewport );\n\n    \t\tif ( isCube ) {\n\n    \t\t\tvar textureProperties = properties.get( renderTarget.texture );\n    \t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n    \t\t}\n\n    \t};\n\n    \tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n    \t\tif ( ( renderTarget && renderTarget.isWebGLRenderTarget ) === false ) {\n\n    \t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n    \t\tif ( framebuffer ) {\n\n    \t\t\tvar restore = false;\n\n    \t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n    \t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n    \t\t\t\trestore = true;\n\n    \t\t\t}\n\n    \t\t\ttry {\n\n    \t\t\t\tvar texture = renderTarget.texture;\n    \t\t\t\tvar textureFormat = texture.format;\n    \t\t\t\tvar textureType = texture.type;\n\n    \t\t\t\tif ( textureFormat !== RGBAFormat && paramThreeToGL( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n    \t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n    \t\t\t\t\treturn;\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( textureType !== UnsignedByteType && paramThreeToGL( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n    \t\t\t\t     ! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n    \t\t\t\t     ! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n    \t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n    \t\t\t\t\treturn;\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n    \t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n    \t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n    \t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( textureFormat ), paramThreeToGL( textureType ), buffer );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n    \t\t\t\t}\n\n    \t\t\t} finally {\n\n    \t\t\t\tif ( restore ) {\n\n    \t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t};\n\n    \t// Map three.js constants to WebGL constants\n\n    \tfunction paramThreeToGL( p ) {\n\n    \t\tvar extension;\n\n    \t\tif ( p === RepeatWrapping ) return _gl.REPEAT;\n    \t\tif ( p === ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\n    \t\tif ( p === MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\n\n    \t\tif ( p === NearestFilter ) return _gl.NEAREST;\n    \t\tif ( p === NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\n    \t\tif ( p === NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\n\n    \t\tif ( p === LinearFilter ) return _gl.LINEAR;\n    \t\tif ( p === LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\n    \t\tif ( p === LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\n\n    \t\tif ( p === UnsignedByteType ) return _gl.UNSIGNED_BYTE;\n    \t\tif ( p === UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\n    \t\tif ( p === UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\n    \t\tif ( p === UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\n\n    \t\tif ( p === ByteType ) return _gl.BYTE;\n    \t\tif ( p === ShortType ) return _gl.SHORT;\n    \t\tif ( p === UnsignedShortType ) return _gl.UNSIGNED_SHORT;\n    \t\tif ( p === IntType ) return _gl.INT;\n    \t\tif ( p === UnsignedIntType ) return _gl.UNSIGNED_INT;\n    \t\tif ( p === FloatType ) return _gl.FLOAT;\n\n    \t\textension = extensions.get( 'OES_texture_half_float' );\n\n    \t\tif ( extension !== null ) {\n\n    \t\t\tif ( p === HalfFloatType ) return extension.HALF_FLOAT_OES;\n\n    \t\t}\n\n    \t\tif ( p === AlphaFormat ) return _gl.ALPHA;\n    \t\tif ( p === RGBFormat ) return _gl.RGB;\n    \t\tif ( p === RGBAFormat ) return _gl.RGBA;\n    \t\tif ( p === LuminanceFormat ) return _gl.LUMINANCE;\n    \t\tif ( p === LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\n    \t\tif ( p === DepthFormat ) return _gl.DEPTH_COMPONENT;\n    \t\tif ( p === DepthStencilFormat ) return _gl.DEPTH_STENCIL;\n\n    \t\tif ( p === AddEquation ) return _gl.FUNC_ADD;\n    \t\tif ( p === SubtractEquation ) return _gl.FUNC_SUBTRACT;\n    \t\tif ( p === ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\n\n    \t\tif ( p === ZeroFactor ) return _gl.ZERO;\n    \t\tif ( p === OneFactor ) return _gl.ONE;\n    \t\tif ( p === SrcColorFactor ) return _gl.SRC_COLOR;\n    \t\tif ( p === OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\n    \t\tif ( p === SrcAlphaFactor ) return _gl.SRC_ALPHA;\n    \t\tif ( p === OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\n    \t\tif ( p === DstAlphaFactor ) return _gl.DST_ALPHA;\n    \t\tif ( p === OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\n\n    \t\tif ( p === DstColorFactor ) return _gl.DST_COLOR;\n    \t\tif ( p === OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\n    \t\tif ( p === SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\n\n    \t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n    \t\tif ( extension !== null ) {\n\n    \t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n    \t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n    \t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n    \t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n    \t\t}\n\n    \t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n    \t\tif ( extension !== null ) {\n\n    \t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n    \t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n    \t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n    \t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n    \t\t}\n\n    \t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n    \t\tif ( extension !== null ) {\n\n    \t\t\tif ( p === RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n    \t\t}\n\n    \t\textension = extensions.get( 'EXT_blend_minmax' );\n\n    \t\tif ( extension !== null ) {\n\n    \t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n    \t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n    \t\t}\n\n    \t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n    \t\tif ( extension !== null ){\n\n    \t\t\tif ( p === UnsignedInt248Type ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n    \t\t}\n\n    \t\treturn 0;\n\n    \t}\n\n    }\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function FogExp2 ( color, density ) {\n\n    \tthis.name = '';\n\n    \tthis.color = new Color( color );\n    \tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n    }\n\n    FogExp2.prototype.isFogExp2 = true;\n\n    FogExp2.prototype.clone = function () {\n\n    \treturn new FogExp2( this.color.getHex(), this.density );\n\n    };\n\n    FogExp2.prototype.toJSON = function ( meta ) {\n\n    \treturn {\n    \t\ttype: 'FogExp2',\n    \t\tcolor: this.color.getHex(),\n    \t\tdensity: this.density\n    \t};\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Fog ( color, near, far ) {\n\n    \tthis.name = '';\n\n    \tthis.color = new Color( color );\n\n    \tthis.near = ( near !== undefined ) ? near : 1;\n    \tthis.far = ( far !== undefined ) ? far : 1000;\n\n    }\n\n    Fog.prototype.isFog = true;\n\n    Fog.prototype.clone = function () {\n\n    \treturn new Fog( this.color.getHex(), this.near, this.far );\n\n    };\n\n    Fog.prototype.toJSON = function ( meta ) {\n\n    \treturn {\n    \t\ttype: 'Fog',\n    \t\tcolor: this.color.getHex(),\n    \t\tnear: this.near,\n    \t\tfar: this.far\n    \t};\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Scene () {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Scene';\n\n    \tthis.background = null;\n    \tthis.fog = null;\n    \tthis.overrideMaterial = null;\n\n    \tthis.autoUpdate = true; // checked by the renderer\n\n    }\n\n    Scene.prototype = Object.create( Object3D.prototype );\n\n    Scene.prototype.constructor = Scene;\n\n    Scene.prototype.copy = function ( source, recursive ) {\n\n    \tObject3D.prototype.copy.call( this, source, recursive );\n\n    \tif ( source.background !== null ) this.background = source.background.clone();\n    \tif ( source.fog !== null ) this.fog = source.fog.clone();\n    \tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n    \tthis.autoUpdate = source.autoUpdate;\n    \tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n    \treturn this;\n\n    };\n\n    Scene.prototype.toJSON = function ( meta ) {\n\n    \tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n    \tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n    \tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n    \treturn data;\n\n    };\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function LensFlare( texture, size, distance, blending, color ) {\n\n    \tObject3D.call( this );\n\n    \tthis.lensFlares = [];\n\n    \tthis.positionScreen = new Vector3();\n    \tthis.customUpdateCallback = undefined;\n\n    \tif ( texture !== undefined ) {\n\n    \t\tthis.add( texture, size, distance, blending, color );\n\n    \t}\n\n    }\n\n    LensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: LensFlare,\n\n    \tisLensFlare: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tObject3D.prototype.copy.call( this, source );\n\n    \t\tthis.positionScreen.copy( source.positionScreen );\n    \t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n    \t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n    \t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n    \t\tif ( size === undefined ) size = - 1;\n    \t\tif ( distance === undefined ) distance = 0;\n    \t\tif ( opacity === undefined ) opacity = 1;\n    \t\tif ( color === undefined ) color = new Color( 0xffffff );\n    \t\tif ( blending === undefined ) blending = NormalBlending;\n\n    \t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n    \t\tthis.lensFlares.push( {\n    \t\t\ttexture: texture,\t// THREE.Texture\n    \t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n    \t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n    \t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n    \t\t\tscale: 1, \t\t// scale\n    \t\t\trotation: 0, \t\t// rotation\n    \t\t\topacity: opacity,\t// opacity\n    \t\t\tcolor: color,\t\t// color\n    \t\t\tblending: blending\t// blending\n    \t\t} );\n\n    \t},\n\n    \t/*\n    \t * Update lens flares update positions on all flares based on the screen position\n    \t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n    \t */\n\n    \tupdateLensFlares: function () {\n\n    \t\tvar f, fl = this.lensFlares.length;\n    \t\tvar flare;\n    \t\tvar vecX = - this.positionScreen.x * 2;\n    \t\tvar vecY = - this.positionScreen.y * 2;\n\n    \t\tfor ( f = 0; f < fl; f ++ ) {\n\n    \t\t\tflare = this.lensFlares[ f ];\n\n    \t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n    \t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n    \t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n    \t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n    \t\t}\n\n    \t}\n\n    } );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * parameters = {\n     *  color: <hex>,\n     *  opacity: <float>,\n     *  map: new THREE.Texture( <Image> ),\n     *\n     *\tuvOffset: new THREE.Vector2(),\n     *\tuvScale: new THREE.Vector2()\n     * }\n     */\n\n    function SpriteMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'SpriteMaterial';\n\n    \tthis.color = new Color( 0xffffff );\n    \tthis.map = null;\n\n    \tthis.rotation = 0;\n\n    \tthis.fog = false;\n    \tthis.lights = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    SpriteMaterial.prototype = Object.create( Material.prototype );\n    SpriteMaterial.prototype.constructor = SpriteMaterial;\n\n    SpriteMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.color.copy( source.color );\n    \tthis.map = source.map;\n\n    \tthis.rotation = source.rotation;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Sprite( material ) {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Sprite';\n\n    \tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n    }\n\n    Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: Sprite,\n\n    \tisSprite: true,\n\n    \traycast: ( function () {\n\n    \t\tvar matrixPosition = new Vector3();\n\n    \t\treturn function raycast( raycaster, intersects ) {\n\n    \t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n    \t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\n    \t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\n\n    \t\t\tif ( distanceSq > guessSizeSq ) {\n\n    \t\t\t\treturn;\n\n    \t\t\t}\n\n    \t\t\tintersects.push( {\n\n    \t\t\t\tdistance: Math.sqrt( distanceSq ),\n    \t\t\t\tpoint: this.position,\n    \t\t\t\tface: null,\n    \t\t\t\tobject: this\n\n    \t\t\t} );\n\n    \t\t};\n\n    \t}() ),\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this.material ).copy( this );\n\n    \t}\n\n    } );\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function LOD() {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'LOD';\n\n    \tObject.defineProperties( this, {\n    \t\tlevels: {\n    \t\t\tenumerable: true,\n    \t\t\tvalue: []\n    \t\t}\n    \t} );\n\n    }\n\n\n    LOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: LOD,\n\n    \tcopy: function ( source ) {\n\n    \t\tObject3D.prototype.copy.call( this, source, false );\n\n    \t\tvar levels = source.levels;\n\n    \t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n    \t\t\tvar level = levels[ i ];\n\n    \t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \taddLevel: function ( object, distance ) {\n\n    \t\tif ( distance === undefined ) distance = 0;\n\n    \t\tdistance = Math.abs( distance );\n\n    \t\tvar levels = this.levels;\n\n    \t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n    \t\t\tif ( distance < levels[ l ].distance ) {\n\n    \t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n    \t\tthis.add( object );\n\n    \t},\n\n    \tgetObjectForDistance: function ( distance ) {\n\n    \t\tvar levels = this.levels;\n\n    \t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n    \t\t\tif ( distance < levels[ i ].distance ) {\n\n    \t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn levels[ i - 1 ].object;\n\n    \t},\n\n    \traycast: ( function () {\n\n    \t\tvar matrixPosition = new Vector3();\n\n    \t\treturn function raycast( raycaster, intersects ) {\n\n    \t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n    \t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n    \t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n    \t\t};\n\n    \t}() ),\n\n    \tupdate: function () {\n\n    \t\tvar v1 = new Vector3();\n    \t\tvar v2 = new Vector3();\n\n    \t\treturn function update( camera ) {\n\n    \t\t\tvar levels = this.levels;\n\n    \t\t\tif ( levels.length > 1 ) {\n\n    \t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n    \t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n    \t\t\t\tvar distance = v1.distanceTo( v2 );\n\n    \t\t\t\tlevels[ 0 ].object.visible = true;\n\n    \t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n    \t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n    \t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n    \t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t\tfor ( ; i < l; i ++ ) {\n\n    \t\t\t\t\tlevels[ i ].object.visible = false;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}(),\n\n    \ttoJSON: function ( meta ) {\n\n    \t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n    \t\tdata.object.levels = [];\n\n    \t\tvar levels = this.levels;\n\n    \t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n    \t\t\tvar level = levels[ i ];\n\n    \t\t\tdata.object.levels.push( {\n    \t\t\t\tobject: level.object.uuid,\n    \t\t\t\tdistance: level.distance\n    \t\t\t} );\n\n    \t\t}\n\n    \t\treturn data;\n\n    \t}\n\n    } );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n    \tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n    \tthis.image = { data: data, width: width, height: height };\n\n    \tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    \tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n    \tthis.flipY = false;\n    \tthis.generateMipmaps  = false;\n\n    }\n\n    DataTexture.prototype = Object.create( Texture.prototype );\n    DataTexture.prototype.constructor = DataTexture;\n\n    DataTexture.prototype.isDataTexture = true;\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     * @author michael guerrero / http://realitymeltdown.com\n     * @author ikerr / http://verold.com\n     */\n\n    function Skeleton( bones, boneInverses, useVertexTexture ) {\n\n    \tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\n\n    \tthis.identityMatrix = new Matrix4();\n\n    \t// copy the bone array\n\n    \tbones = bones || [];\n\n    \tthis.bones = bones.slice( 0 );\n\n    \t// create a bone texture or an array of floats\n\n    \tif ( this.useVertexTexture ) {\n\n    \t\t// layout (1 matrix = 4 pixels)\n    \t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n    \t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n    \t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n    \t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n    \t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n    \t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n    \t\tsize = exports.Math.nextPowerOfTwo( Math.ceil( size ) );\n    \t\tsize = Math.max( size, 4 );\n\n    \t\tthis.boneTextureWidth = size;\n    \t\tthis.boneTextureHeight = size;\n\n    \t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\n    \t\tthis.boneTexture = new DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, RGBAFormat, FloatType );\n\n    \t} else {\n\n    \t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\n\n    \t}\n\n    \t// use the supplied bone inverses or calculate the inverses\n\n    \tif ( boneInverses === undefined ) {\n\n    \t\tthis.calculateInverses();\n\n    \t} else {\n\n    \t\tif ( this.bones.length === boneInverses.length ) {\n\n    \t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n    \t\t} else {\n\n    \t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\n\n    \t\t\tthis.boneInverses = [];\n\n    \t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    \t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    }\n\n    Object.assign( Skeleton.prototype, {\n\n    \tcalculateInverses: function () {\n\n    \t\tthis.boneInverses = [];\n\n    \t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    \t\t\tvar inverse = new Matrix4();\n\n    \t\t\tif ( this.bones[ b ] ) {\n\n    \t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\n\n    \t\t\t}\n\n    \t\t\tthis.boneInverses.push( inverse );\n\n    \t\t}\n\n    \t},\n\n    \tpose: function () {\n\n    \t\tvar bone;\n\n    \t\t// recover the bind-time world matrices\n\n    \t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    \t\t\tbone = this.bones[ b ];\n\n    \t\t\tif ( bone ) {\n\n    \t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// compute the local matrices, positions, rotations and scales\n\n    \t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    \t\t\tbone = this.bones[ b ];\n\n    \t\t\tif ( bone ) {\n\n    \t\t\t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n    \t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n    \t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n    \t\t\t\t}\n\n    \t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \tupdate: ( function () {\n\n    \t\tvar offsetMatrix = new Matrix4();\n\n    \t\treturn function update() {\n\n    \t\t\t// flatten bone matrices to array\n\n    \t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\n\n    \t\t\t\t// compute the offset between the current and the original transform\n\n    \t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\n\n    \t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\n    \t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\n\n    \t\t\t}\n\n    \t\t\tif ( this.useVertexTexture ) {\n\n    \t\t\t\tthis.boneTexture.needsUpdate = true;\n\n    \t\t\t}\n\n    \t\t};\n\n    \t} )(),\n\n    \tclone: function () {\n\n    \t\treturn new Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\n\n    \t}\n\n    } );\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     * @author ikerr / http://verold.com\n     */\n\n    function Bone( skin ) {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Bone';\n\n    \tthis.skin = skin;\n\n    }\n\n    Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: Bone,\n\n    \tisBone: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tObject3D.prototype.copy.call( this, source );\n\n    \t\tthis.skin = source.skin;\n\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mikael emtinger / http://gomo.se/\n     * @author alteredq / http://alteredqualia.com/\n     * @author ikerr / http://verold.com\n     */\n\n    function SkinnedMesh( geometry, material, useVertexTexture ) {\n\n    \tMesh.call( this, geometry, material );\n\n    \tthis.type = 'SkinnedMesh';\n\n    \tthis.bindMode = \"attached\";\n    \tthis.bindMatrix = new Matrix4();\n    \tthis.bindMatrixInverse = new Matrix4();\n\n    \t// init bones\n\n    \t// TODO: remove bone creation as there is no reason (other than\n    \t// convenience) for THREE.SkinnedMesh to do this.\n\n    \tvar bones = [];\n\n    \tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n    \t\tvar bone, gbone;\n\n    \t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n    \t\t\tgbone = this.geometry.bones[ b ];\n\n    \t\t\tbone = new Bone( this );\n    \t\t\tbones.push( bone );\n\n    \t\t\tbone.name = gbone.name;\n    \t\t\tbone.position.fromArray( gbone.pos );\n    \t\t\tbone.quaternion.fromArray( gbone.rotq );\n    \t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n    \t\t}\n\n    \t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\n\n    \t\t\tgbone = this.geometry.bones[ b ];\n\n    \t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\n    \t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\n\n    \t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\n\n    \t\t\t} else {\n\n    \t\t\t\tthis.add( bones[ b ] );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \tthis.normalizeSkinWeights();\n\n    \tthis.updateMatrixWorld( true );\n    \tthis.bind( new Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\n\n    }\n\n\n    SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n    \tconstructor: SkinnedMesh,\n\n    \tisSkinnedMesh: true,\n\n    \tbind: function( skeleton, bindMatrix ) {\n\n    \t\tthis.skeleton = skeleton;\n\n    \t\tif ( bindMatrix === undefined ) {\n\n    \t\t\tthis.updateMatrixWorld( true );\n\n    \t\t\tthis.skeleton.calculateInverses();\n\n    \t\t\tbindMatrix = this.matrixWorld;\n\n    \t\t}\n\n    \t\tthis.bindMatrix.copy( bindMatrix );\n    \t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n    \t},\n\n    \tpose: function () {\n\n    \t\tthis.skeleton.pose();\n\n    \t},\n\n    \tnormalizeSkinWeights: function () {\n\n    \t\tif ( (this.geometry && this.geometry.isGeometry) ) {\n\n    \t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n    \t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n    \t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\n\n    \t\t\t\tif ( scale !== Infinity ) {\n\n    \t\t\t\t\tsw.multiplyScalar( scale );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t} else if ( (this.geometry && this.geometry.isBufferGeometry) ) {\n\n    \t\t\tvar vec = new Vector4();\n\n    \t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n    \t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\n\n    \t\t\t\tvec.x = skinWeight.getX( i );\n    \t\t\t\tvec.y = skinWeight.getY( i );\n    \t\t\t\tvec.z = skinWeight.getZ( i );\n    \t\t\t\tvec.w = skinWeight.getW( i );\n\n    \t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\n\n    \t\t\t\tif ( scale !== Infinity ) {\n\n    \t\t\t\t\tvec.multiplyScalar( scale );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n    \t\t\t\t}\n\n    \t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \tupdateMatrixWorld: function( force ) {\n\n    \t\tMesh.prototype.updateMatrixWorld.call( this, true );\n\n    \t\tif ( this.bindMode === \"attached\" ) {\n\n    \t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n    \t\t} else if ( this.bindMode === \"detached\" ) {\n\n    \t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n    \t\t} else {\n\n    \t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\n\n    \t\t}\n\n    \t},\n\n    \tclone: function() {\n\n    \t\treturn new this.constructor( this.geometry, this.material, this.skeleton.useVertexTexture ).copy( this );\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * parameters = {\n     *  color: <hex>,\n     *  opacity: <float>,\n     *\n     *  linewidth: <float>,\n     *  linecap: \"round\",\n     *  linejoin: \"round\"\n     * }\n     */\n\n    function LineBasicMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'LineBasicMaterial';\n\n    \tthis.color = new Color( 0xffffff );\n\n    \tthis.linewidth = 1;\n    \tthis.linecap = 'round';\n    \tthis.linejoin = 'round';\n\n    \tthis.lights = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    LineBasicMaterial.prototype = Object.create( Material.prototype );\n    LineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n    LineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n    LineBasicMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.color.copy( source.color );\n\n    \tthis.linewidth = source.linewidth;\n    \tthis.linecap = source.linecap;\n    \tthis.linejoin = source.linejoin;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Line( geometry, material, mode ) {\n\n    \tif ( mode === 1 ) {\n\n    \t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n    \t\treturn new LineSegments( geometry, material );\n\n    \t}\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Line';\n\n    \tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    \tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n    }\n\n    Line.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: Line,\n\n    \tisLine: true,\n\n    \traycast: ( function () {\n\n    \t\tvar inverseMatrix = new Matrix4();\n    \t\tvar ray = new Ray();\n    \t\tvar sphere = new Sphere();\n\n    \t\treturn function raycast( raycaster, intersects ) {\n\n    \t\t\tvar precision = raycaster.linePrecision;\n    \t\t\tvar precisionSq = precision * precision;\n\n    \t\t\tvar geometry = this.geometry;\n    \t\t\tvar matrixWorld = this.matrixWorld;\n\n    \t\t\t// Checking boundingSphere distance to ray\n\n    \t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n    \t\t\tsphere.copy( geometry.boundingSphere );\n    \t\t\tsphere.applyMatrix4( matrixWorld );\n\n    \t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n    \t\t\t//\n\n    \t\t\tinverseMatrix.getInverse( matrixWorld );\n    \t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n    \t\t\tvar vStart = new Vector3();\n    \t\t\tvar vEnd = new Vector3();\n    \t\t\tvar interSegment = new Vector3();\n    \t\t\tvar interRay = new Vector3();\n    \t\t\tvar step = (this && this.isLineSegments) ? 2 : 1;\n\n    \t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n    \t\t\t\tvar index = geometry.index;\n    \t\t\t\tvar attributes = geometry.attributes;\n    \t\t\t\tvar positions = attributes.position.array;\n\n    \t\t\t\tif ( index !== null ) {\n\n    \t\t\t\t\tvar indices = index.array;\n\n    \t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n    \t\t\t\t\t\tvar a = indices[ i ];\n    \t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n    \t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n    \t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n    \t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n    \t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n    \t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n    \t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n    \t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n    \t\t\t\t\t\tintersects.push( {\n\n    \t\t\t\t\t\t\tdistance: distance,\n    \t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n    \t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n    \t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n    \t\t\t\t\t\t\tindex: i,\n    \t\t\t\t\t\t\tface: null,\n    \t\t\t\t\t\t\tfaceIndex: null,\n    \t\t\t\t\t\t\tobject: this\n\n    \t\t\t\t\t\t} );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n    \t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n    \t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n    \t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n    \t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n    \t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n    \t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n    \t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n    \t\t\t\t\t\tintersects.push( {\n\n    \t\t\t\t\t\t\tdistance: distance,\n    \t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n    \t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n    \t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n    \t\t\t\t\t\t\tindex: i,\n    \t\t\t\t\t\t\tface: null,\n    \t\t\t\t\t\t\tfaceIndex: null,\n    \t\t\t\t\t\t\tobject: this\n\n    \t\t\t\t\t\t} );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( (geometry && geometry.isGeometry) ) {\n\n    \t\t\t\tvar vertices = geometry.vertices;\n    \t\t\t\tvar nbVertices = vertices.length;\n\n    \t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n    \t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n    \t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n    \t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n    \t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n    \t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n    \t\t\t\t\tintersects.push( {\n\n    \t\t\t\t\t\tdistance: distance,\n    \t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n    \t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n    \t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n    \t\t\t\t\t\tindex: i,\n    \t\t\t\t\t\tface: null,\n    \t\t\t\t\t\tfaceIndex: null,\n    \t\t\t\t\t\tobject: this\n\n    \t\t\t\t\t} );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}() ),\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function LineSegments( geometry, material ) {\n\n    \tLine.call( this, geometry, material );\n\n    \tthis.type = 'LineSegments';\n\n    }\n\n    LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n    \tconstructor: LineSegments,\n\n    \tisLineSegments: true\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * parameters = {\n     *  color: <hex>,\n     *  opacity: <float>,\n     *  map: new THREE.Texture( <Image> ),\n     *\n     *  size: <float>,\n     *  sizeAttenuation: <bool>\n     * }\n     */\n\n    function PointsMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'PointsMaterial';\n\n    \tthis.color = new Color( 0xffffff );\n\n    \tthis.map = null;\n\n    \tthis.size = 1;\n    \tthis.sizeAttenuation = true;\n\n    \tthis.lights = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    PointsMaterial.prototype = Object.create( Material.prototype );\n    PointsMaterial.prototype.constructor = PointsMaterial;\n\n    PointsMaterial.prototype.isPointsMaterial = true;\n\n    PointsMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.color.copy( source.color );\n\n    \tthis.map = source.map;\n\n    \tthis.size = source.size;\n    \tthis.sizeAttenuation = source.sizeAttenuation;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Points( geometry, material ) {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Points';\n\n    \tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    \tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n    }\n\n    Points.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: Points,\n\n    \tisPoints: true,\n\n    \traycast: ( function () {\n\n    \t\tvar inverseMatrix = new Matrix4();\n    \t\tvar ray = new Ray();\n    \t\tvar sphere = new Sphere();\n\n    \t\treturn function raycast( raycaster, intersects ) {\n\n    \t\t\tvar object = this;\n    \t\t\tvar geometry = this.geometry;\n    \t\t\tvar matrixWorld = this.matrixWorld;\n    \t\t\tvar threshold = raycaster.params.Points.threshold;\n\n    \t\t\t// Checking boundingSphere distance to ray\n\n    \t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n    \t\t\tsphere.copy( geometry.boundingSphere );\n    \t\t\tsphere.applyMatrix4( matrixWorld );\n\n    \t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n    \t\t\t//\n\n    \t\t\tinverseMatrix.getInverse( matrixWorld );\n    \t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n    \t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n    \t\t\tvar localThresholdSq = localThreshold * localThreshold;\n    \t\t\tvar position = new Vector3();\n\n    \t\t\tfunction testPoint( point, index ) {\n\n    \t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n    \t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n    \t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n    \t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n    \t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n    \t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n    \t\t\t\t\tintersects.push( {\n\n    \t\t\t\t\t\tdistance: distance,\n    \t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n    \t\t\t\t\t\tpoint: intersectPoint.clone(),\n    \t\t\t\t\t\tindex: index,\n    \t\t\t\t\t\tface: null,\n    \t\t\t\t\t\tobject: object\n\n    \t\t\t\t\t} );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( (geometry && geometry.isBufferGeometry) ) {\n\n    \t\t\t\tvar index = geometry.index;\n    \t\t\t\tvar attributes = geometry.attributes;\n    \t\t\t\tvar positions = attributes.position.array;\n\n    \t\t\t\tif ( index !== null ) {\n\n    \t\t\t\t\tvar indices = index.array;\n\n    \t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n    \t\t\t\t\t\tvar a = indices[ i ];\n\n    \t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n    \t\t\t\t\t\ttestPoint( position, a );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n    \t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n    \t\t\t\t\t\ttestPoint( position, i );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\tvar vertices = geometry.vertices;\n\n    \t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n    \t\t\t\t\ttestPoint( vertices[ i ], i );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t};\n\n    \t}() ),\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Group() {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Group';\n\n    }\n\n    Group.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: Group\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n    \tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n    \tthis.generateMipmaps = false;\n\n    \tvar scope = this;\n\n    \tfunction update() {\n\n    \t\trequestAnimationFrame( update );\n\n    \t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n    \t\t\tscope.needsUpdate = true;\n\n    \t\t}\n\n    \t}\n\n    \tupdate();\n\n    }\n\n    VideoTexture.prototype = Object.create( Texture.prototype );\n    VideoTexture.prototype.constructor = VideoTexture;\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n    \tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n    \tthis.image = { width: width, height: height };\n    \tthis.mipmaps = mipmaps;\n\n    \t// no flipping for cube textures\n    \t// (also flipping doesn't work for compressed textures )\n\n    \tthis.flipY = false;\n\n    \t// can't generate mipmaps for compressed textures\n    \t// mips must be embedded in DDS files\n\n    \tthis.generateMipmaps = false;\n\n    }\n\n    CompressedTexture.prototype = Object.create( Texture.prototype );\n    CompressedTexture.prototype.constructor = CompressedTexture;\n\n    CompressedTexture.prototype.isCompressedTexture = true;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n    \tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n    \tthis.needsUpdate = true;\n\n    }\n\n    CanvasTexture.prototype = Object.create( Texture.prototype );\n    CanvasTexture.prototype.constructor = CanvasTexture;\n\n    /**\n     * @author Matt DesLauriers / @mattdesl\n     * @author atix / arthursilber.de\n     */\n\n    function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n    \tformat = format !== undefined ? format : DepthFormat;\n\n    \tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n    \t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' )\n\n    \t}\n\n    \tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n    \tthis.image = { width: width, height: height };\n\n    \tthis.type = type !== undefined ? type : UnsignedShortType;\n\n    \tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    \tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n    \tthis.flipY = false;\n    \tthis.generateMipmaps\t= false;\n\n    }\n\n    DepthTexture.prototype = Object.create( Texture.prototype );\n    DepthTexture.prototype.constructor = DepthTexture;\n    DepthTexture.prototype.isDepthTexture = true;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function WireframeGeometry( geometry ) {\n\n    \tBufferGeometry.call( this );\n\n    \tvar edge = [ 0, 0 ], hash = {};\n\n    \tfunction sortFunction( a, b ) {\n\n    \t\treturn a - b;\n\n    \t}\n\n    \tvar keys = [ 'a', 'b', 'c' ];\n\n    \tif ( (geometry && geometry.isGeometry) ) {\n\n    \t\tvar vertices = geometry.vertices;\n    \t\tvar faces = geometry.faces;\n    \t\tvar numEdges = 0;\n\n    \t\t// allocate maximal size\n    \t\tvar edges = new Uint32Array( 6 * faces.length );\n\n    \t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    \t\t\tvar face = faces[ i ];\n\n    \t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n    \t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\n    \t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n    \t\t\t\tedge.sort( sortFunction );\n\n    \t\t\t\tvar key = edge.toString();\n\n    \t\t\t\tif ( hash[ key ] === undefined ) {\n\n    \t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n    \t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n    \t\t\t\t\thash[ key ] = true;\n    \t\t\t\t\tnumEdges ++;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n    \t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n    \t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n    \t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\n\n    \t\t\t\tvar index = 6 * i + 3 * j;\n    \t\t\t\tcoords[ index + 0 ] = vertex.x;\n    \t\t\t\tcoords[ index + 1 ] = vertex.y;\n    \t\t\t\tcoords[ index + 2 ] = vertex.z;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n    \t} else if ( (geometry && geometry.isBufferGeometry) ) {\n\n    \t\tif ( geometry.index !== null ) {\n\n    \t\t\t// Indexed BufferGeometry\n\n    \t\t\tvar indices = geometry.index.array;\n    \t\t\tvar vertices = geometry.attributes.position;\n    \t\t\tvar groups = geometry.groups;\n    \t\t\tvar numEdges = 0;\n\n    \t\t\tif ( groups.length === 0 ) {\n\n    \t\t\t\tgeometry.addGroup( 0, indices.length );\n\n    \t\t\t}\n\n    \t\t\t// allocate maximal size\n    \t\t\tvar edges = new Uint32Array( 2 * indices.length );\n\n    \t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\n\n    \t\t\t\tvar group = groups[ o ];\n\n    \t\t\t\tvar start = group.start;\n    \t\t\t\tvar count = group.count;\n\n    \t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n    \t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n    \t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\n    \t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\n    \t\t\t\t\t\tedge.sort( sortFunction );\n\n    \t\t\t\t\t\tvar key = edge.toString();\n\n    \t\t\t\t\t\tif ( hash[ key ] === undefined ) {\n\n    \t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\n    \t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\n    \t\t\t\t\t\t\thash[ key ] = true;\n    \t\t\t\t\t\t\tnumEdges ++;\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n    \t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\n\n    \t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\n\n    \t\t\t\t\tvar index = 6 * i + 3 * j;\n    \t\t\t\t\tvar index2 = edges[ 2 * i + j ];\n\n    \t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\n    \t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\n    \t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n    \t\t} else {\n\n    \t\t\t// non-indexed BufferGeometry\n\n    \t\t\tvar vertices = geometry.attributes.position.array;\n    \t\t\tvar numEdges = vertices.length / 3;\n    \t\t\tvar numTris = numEdges / 3;\n\n    \t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\n\n    \t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\n\n    \t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n    \t\t\t\t\tvar index = 18 * i + 6 * j;\n\n    \t\t\t\t\tvar index1 = 9 * i + 3 * j;\n    \t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\n    \t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\n    \t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\n\n    \t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\n    \t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\n    \t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\n    \t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tthis.addAttribute( 'position', new BufferAttribute( coords, 3 ) );\n\n    \t\t}\n\n    \t}\n\n    }\n\n    WireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n    WireframeGeometry.prototype.constructor = WireframeGeometry;\n\n    /**\n     * @author zz85 / https://github.com/zz85\n     * Parametric Surfaces Geometry\n     * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n     *\n     * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\n     *\n     */\n\n    function ParametricGeometry( func, slices, stacks ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'ParametricGeometry';\n\n    \tthis.parameters = {\n    \t\tfunc: func,\n    \t\tslices: slices,\n    \t\tstacks: stacks\n    \t};\n\n    \tvar verts = this.vertices;\n    \tvar faces = this.faces;\n    \tvar uvs = this.faceVertexUvs[ 0 ];\n\n    \tvar i, j, p;\n    \tvar u, v;\n\n    \tvar sliceCount = slices + 1;\n\n    \tfor ( i = 0; i <= stacks; i ++ ) {\n\n    \t\tv = i / stacks;\n\n    \t\tfor ( j = 0; j <= slices; j ++ ) {\n\n    \t\t\tu = j / slices;\n\n    \t\t\tp = func( u, v );\n    \t\t\tverts.push( p );\n\n    \t\t}\n\n    \t}\n\n    \tvar a, b, c, d;\n    \tvar uva, uvb, uvc, uvd;\n\n    \tfor ( i = 0; i < stacks; i ++ ) {\n\n    \t\tfor ( j = 0; j < slices; j ++ ) {\n\n    \t\t\ta = i * sliceCount + j;\n    \t\t\tb = i * sliceCount + j + 1;\n    \t\t\tc = ( i + 1 ) * sliceCount + j + 1;\n    \t\t\td = ( i + 1 ) * sliceCount + j;\n\n    \t\t\tuva = new Vector2( j / slices, i / stacks );\n    \t\t\tuvb = new Vector2( ( j + 1 ) / slices, i / stacks );\n    \t\t\tuvc = new Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\n    \t\t\tuvd = new Vector2( j / slices, ( i + 1 ) / stacks );\n\n    \t\t\tfaces.push( new Face3( a, b, d ) );\n    \t\t\tuvs.push( [ uva, uvb, uvd ] );\n\n    \t\t\tfaces.push( new Face3( b, c, d ) );\n    \t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n    \t\t}\n\n    \t}\n\n    \t// console.log(this);\n\n    \t// magic bullet\n    \t// var diff = this.mergeVertices();\n    \t// console.log('removed ', diff, ' vertices by merging');\n\n    \tthis.computeFaceNormals();\n    \tthis.computeVertexNormals();\n\n    }\n\n    ParametricGeometry.prototype = Object.create( Geometry.prototype );\n    ParametricGeometry.prototype.constructor = ParametricGeometry;\n\n    /**\n     * @author clockworkgeek / https://github.com/clockworkgeek\n     * @author timothypratley / https://github.com/timothypratley\n     * @author WestLangley / http://github.com/WestLangley\n    */\n\n    function PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'PolyhedronGeometry';\n\n    \tthis.parameters = {\n    \t\tvertices: vertices,\n    \t\tindices: indices,\n    \t\tradius: radius,\n    \t\tdetail: detail\n    \t};\n\n    \tradius = radius || 1;\n    \tdetail = detail || 0;\n\n    \tvar that = this;\n\n    \tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\n\n    \t\tprepare( new Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\n\n    \t}\n\n    \tvar p = this.vertices;\n\n    \tvar faces = [];\n\n    \tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\n\n    \t\tvar v1 = p[ indices[ i ] ];\n    \t\tvar v2 = p[ indices[ i + 1 ] ];\n    \t\tvar v3 = p[ indices[ i + 2 ] ];\n\n    \t\tfaces[ j ] = new Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n\n    \t}\n\n    \tvar centroid = new Vector3();\n\n    \tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    \t\tsubdivide( faces[ i ], detail );\n\n    \t}\n\n\n    \t// Handle case when face straddles the seam\n\n    \tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\n\n    \t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\n\n    \t\tvar x0 = uvs[ 0 ].x;\n    \t\tvar x1 = uvs[ 1 ].x;\n    \t\tvar x2 = uvs[ 2 ].x;\n\n    \t\tvar max = Math.max( x0, x1, x2 );\n    \t\tvar min = Math.min( x0, x1, x2 );\n\n    \t\tif ( max > 0.9 && min < 0.1 ) {\n\n    \t\t\t// 0.9 is somewhat arbitrary\n\n    \t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\n    \t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\n    \t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\n\n    \t\t}\n\n    \t}\n\n\n    \t// Apply radius\n\n    \tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\n\n    \t\tthis.vertices[ i ].multiplyScalar( radius );\n\n    \t}\n\n\n    \t// Merge vertices\n\n    \tthis.mergeVertices();\n\n    \tthis.computeFaceNormals();\n\n    \tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n\n    \t// Project vector onto sphere's surface\n\n    \tfunction prepare( vector ) {\n\n    \t\tvar vertex = vector.normalize().clone();\n    \t\tvertex.index = that.vertices.push( vertex ) - 1;\n\n    \t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\n\n    \t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\n    \t\tvar v = inclination( vector ) / Math.PI + 0.5;\n    \t\tvertex.uv = new Vector2( u, 1 - v );\n\n    \t\treturn vertex;\n\n    \t}\n\n\n    \t// Approximate a curved face with recursively sub-divided triangles.\n\n    \tfunction make( v1, v2, v3 ) {\n\n    \t\tvar face = new Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\n    \t\tthat.faces.push( face );\n\n    \t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\n\n    \t\tvar azi = azimuth( centroid );\n\n    \t\tthat.faceVertexUvs[ 0 ].push( [\n    \t\t\tcorrectUV( v1.uv, v1, azi ),\n    \t\t\tcorrectUV( v2.uv, v2, azi ),\n    \t\t\tcorrectUV( v3.uv, v3, azi )\n    \t\t] );\n\n    \t}\n\n\n    \t// Analytically subdivide a face to the required detail level.\n\n    \tfunction subdivide( face, detail ) {\n\n    \t\tvar cols = Math.pow( 2, detail );\n    \t\tvar a = prepare( that.vertices[ face.a ] );\n    \t\tvar b = prepare( that.vertices[ face.b ] );\n    \t\tvar c = prepare( that.vertices[ face.c ] );\n    \t\tvar v = [];\n\n    \t\t// Construct all of the vertices for this subdivision.\n\n    \t\tfor ( var i = 0 ; i <= cols; i ++ ) {\n\n    \t\t\tv[ i ] = [];\n\n    \t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\n    \t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\n    \t\t\tvar rows = cols - i;\n\n    \t\t\tfor ( var j = 0; j <= rows; j ++ ) {\n\n    \t\t\t\tif ( j === 0 && i === cols ) {\n\n    \t\t\t\t\tv[ i ][ j ] = aj;\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// Construct all of the faces.\n\n    \t\tfor ( var i = 0; i < cols ; i ++ ) {\n\n    \t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n    \t\t\t\tvar k = Math.floor( j / 2 );\n\n    \t\t\t\tif ( j % 2 === 0 ) {\n\n    \t\t\t\t\tmake(\n    \t\t\t\t\t\tv[ i ][ k + 1 ],\n    \t\t\t\t\t\tv[ i + 1 ][ k ],\n    \t\t\t\t\t\tv[ i ][ k ]\n    \t\t\t\t\t);\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tmake(\n    \t\t\t\t\t\tv[ i ][ k + 1 ],\n    \t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\n    \t\t\t\t\t\tv[ i + 1 ][ k ]\n    \t\t\t\t\t);\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n\n    \t// Angle around the Y axis, counter-clockwise when looking from above.\n\n    \tfunction azimuth( vector ) {\n\n    \t\treturn Math.atan2( vector.z, - vector.x );\n\n    \t}\n\n\n    \t// Angle above the XZ plane.\n\n    \tfunction inclination( vector ) {\n\n    \t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n    \t}\n\n\n    \t// Texture fixing helper. Spheres have some odd behaviours.\n\n    \tfunction correctUV( uv, vector, azimuth ) {\n\n    \t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new Vector2( uv.x - 1, uv.y );\n    \t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\n    \t\treturn uv.clone();\n\n    \t}\n\n    }\n\n    PolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n    PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n    /**\n     * @author timothypratley / https://github.com/timothypratley\n     */\n\n    function TetrahedronGeometry( radius, detail ) {\n\n    \tvar vertices = [\n    \t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\n    \t];\n\n    \tvar indices = [\n    \t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\n    \t];\n\n    \tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n    \tthis.type = 'TetrahedronGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\tdetail: detail\n    \t};\n\n    }\n\n    TetrahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\n    TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n    /**\n     * @author timothypratley / https://github.com/timothypratley\n     */\n\n    function OctahedronGeometry( radius, detail ) {\n\n    \tvar vertices = [\n    \t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\n    \t];\n\n    \tvar indices = [\n    \t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\n    \t];\n\n    \tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n    \tthis.type = 'OctahedronGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\tdetail: detail\n    \t};\n\n    }\n\n    OctahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\n    OctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n    /**\n     * @author timothypratley / https://github.com/timothypratley\n     */\n\n    function IcosahedronGeometry( radius, detail ) {\n\n    \tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n    \tvar vertices = [\n    \t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\n    \t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\n    \t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\n    \t];\n\n    \tvar indices = [\n    \t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\n    \t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\n    \t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\n    \t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\n    \t];\n\n    \tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n    \tthis.type = 'IcosahedronGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\tdetail: detail\n    \t};\n\n    }\n\n    IcosahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\n    IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n    /**\n     * @author Abe Pazos / https://hamoid.com\n     */\n\n    function DodecahedronGeometry( radius, detail ) {\n\n    \tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n    \tvar r = 1 / t;\n\n    \tvar vertices = [\n\n    \t\t// (±1, ±1, ±1)\n    \t\t- 1, - 1, - 1,    - 1, - 1,  1,\n    \t\t- 1,  1, - 1,    - 1,  1,  1,\n    \t\t 1, - 1, - 1,     1, - 1,  1,\n    \t\t 1,  1, - 1,     1,  1,  1,\n\n    \t\t// (0, ±1/φ, ±φ)\n    \t\t 0, - r, - t,     0, - r,  t,\n    \t\t 0,  r, - t,     0,  r,  t,\n\n    \t\t// (±1/φ, ±φ, 0)\n    \t\t- r, - t,  0,    - r,  t,  0,\n    \t\t r, - t,  0,     r,  t,  0,\n\n    \t\t// (±φ, 0, ±1/φ)\n    \t\t- t,  0, - r,     t,  0, - r,\n    \t\t- t,  0,  r,     t,  0,  r\n    \t];\n\n    \tvar indices = [\n    \t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\n    \t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\n    \t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\n    \t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\n    \t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\n    \t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\n    \t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\n    \t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\n    \t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\n    \t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\n    \t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\n    \t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\n    \t];\n\n    \tPolyhedronGeometry.call( this, vertices, indices, radius, detail );\n\n    \tthis.type = 'DodecahedronGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\tdetail: detail\n    \t};\n\n    }\n\n    DodecahedronGeometry.prototype = Object.create( PolyhedronGeometry.prototype );\n    DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n    /**\n     * @author WestLangley / https://github.com/WestLangley\n     * @author zz85 / https://github.com/zz85\n     * @author miningold / https://github.com/miningold\n     * @author jonobr1 / https://github.com/jonobr1\n     *\n     * Modified from the TorusKnotGeometry by @oosmoxiecode\n     *\n     * Creates a tube which extrudes along a 3d spline\n     *\n     * Uses parallel transport frames as described in\n     * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n     */\n\n    function TubeGeometry( path, segments, radius, radialSegments, closed, taper ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'TubeGeometry';\n\n    \tthis.parameters = {\n    \t\tpath: path,\n    \t\tsegments: segments,\n    \t\tradius: radius,\n    \t\tradialSegments: radialSegments,\n    \t\tclosed: closed,\n    \t\ttaper: taper\n    \t};\n\n    \tsegments = segments || 64;\n    \tradius = radius || 1;\n    \tradialSegments = radialSegments || 8;\n    \tclosed = closed || false;\n    \ttaper = taper || TubeGeometry.NoTaper;\n\n    \tvar grid = [];\n\n    \tvar scope = this,\n\n    \t\ttangent,\n    \t\tnormal,\n    \t\tbinormal,\n\n    \t\tnumpoints = segments + 1,\n\n    \t\tu, v, r,\n\n    \t\tcx, cy,\n    \t\tpos, pos2 = new Vector3(),\n    \t\ti, j,\n    \t\tip, jp,\n    \t\ta, b, c, d,\n    \t\tuva, uvb, uvc, uvd;\n\n    \tvar frames = new TubeGeometry.FrenetFrames( path, segments, closed ),\n    \t\ttangents = frames.tangents,\n    \t\tnormals = frames.normals,\n    \t\tbinormals = frames.binormals;\n\n    \t// proxy internals\n    \tthis.tangents = tangents;\n    \tthis.normals = normals;\n    \tthis.binormals = binormals;\n\n    \tfunction vert( x, y, z ) {\n\n    \t\treturn scope.vertices.push( new Vector3( x, y, z ) ) - 1;\n\n    \t}\n\n    \t// construct the grid\n\n    \tfor ( i = 0; i < numpoints; i ++ ) {\n\n    \t\tgrid[ i ] = [];\n\n    \t\tu = i / ( numpoints - 1 );\n\n    \t\tpos = path.getPointAt( u );\n\n    \t\ttangent = tangents[ i ];\n    \t\tnormal = normals[ i ];\n    \t\tbinormal = binormals[ i ];\n\n    \t\tr = radius * taper( u );\n\n    \t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n    \t\t\tv = j / radialSegments * 2 * Math.PI;\n\n    \t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\n    \t\t\tcy = r * Math.sin( v );\n\n    \t\t\tpos2.copy( pos );\n    \t\t\tpos2.x += cx * normal.x + cy * binormal.x;\n    \t\t\tpos2.y += cx * normal.y + cy * binormal.y;\n    \t\t\tpos2.z += cx * normal.z + cy * binormal.z;\n\n    \t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\n\n    \t\t}\n\n    \t}\n\n\n    \t// construct the mesh\n\n    \tfor ( i = 0; i < segments; i ++ ) {\n\n    \t\tfor ( j = 0; j < radialSegments; j ++ ) {\n\n    \t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\n    \t\t\tjp = ( j + 1 ) % radialSegments;\n\n    \t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\n    \t\t\tb = grid[ ip ][ j ];\n    \t\t\tc = grid[ ip ][ jp ];\n    \t\t\td = grid[ i ][ jp ];\n\n    \t\t\tuva = new Vector2( i / segments, j / radialSegments );\n    \t\t\tuvb = new Vector2( ( i + 1 ) / segments, j / radialSegments );\n    \t\t\tuvc = new Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\n    \t\t\tuvd = new Vector2( i / segments, ( j + 1 ) / radialSegments );\n\n    \t\t\tthis.faces.push( new Face3( a, b, d ) );\n    \t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\n\n    \t\t\tthis.faces.push( new Face3( b, c, d ) );\n    \t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\n\n    \t\t}\n\n    \t}\n\n    \tthis.computeFaceNormals();\n    \tthis.computeVertexNormals();\n\n    }\n\n    TubeGeometry.prototype = Object.create( Geometry.prototype );\n    TubeGeometry.prototype.constructor = TubeGeometry;\n\n    TubeGeometry.NoTaper = function ( u ) {\n\n    \treturn 1;\n\n    };\n\n    TubeGeometry.SinusoidalTaper = function ( u ) {\n\n    \treturn Math.sin( Math.PI * u );\n\n    };\n\n    // For computing of Frenet frames, exposing the tangents, normals and binormals the spline\n    TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\n\n    \tvar\tnormal = new Vector3(),\n\n    \t\ttangents = [],\n    \t\tnormals = [],\n    \t\tbinormals = [],\n\n    \t\tvec = new Vector3(),\n    \t\tmat = new Matrix4(),\n\n    \t\tnumpoints = segments + 1,\n    \t\ttheta,\n    \t\tsmallest,\n\n    \t\ttx, ty, tz,\n    \t\ti, u;\n\n\n    \t// expose internals\n    \tthis.tangents = tangents;\n    \tthis.normals = normals;\n    \tthis.binormals = binormals;\n\n    \t// compute the tangent vectors for each segment on the path\n\n    \tfor ( i = 0; i < numpoints; i ++ ) {\n\n    \t\tu = i / ( numpoints - 1 );\n\n    \t\ttangents[ i ] = path.getTangentAt( u );\n    \t\ttangents[ i ].normalize();\n\n    \t}\n\n    \tinitialNormal3();\n\n    \t/*\n    \tfunction initialNormal1(lastBinormal) {\n    \t\t// fixed start binormal. Has dangers of 0 vectors\n    \t\tnormals[ 0 ] = new THREE.Vector3();\n    \t\tbinormals[ 0 ] = new THREE.Vector3();\n    \t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\n    \t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\n    \t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n    \t}\n\n    \tfunction initialNormal2() {\n\n    \t\t// This uses the Frenet-Serret formula for deriving binormal\n    \t\tvar t2 = path.getTangentAt( epsilon );\n\n    \t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\n    \t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n    \t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\n    \t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\n\n    \t}\n    \t*/\n\n    \tfunction initialNormal3() {\n\n    \t\t// select an initial normal vector perpendicular to the first tangent vector,\n    \t\t// and in the direction of the smallest tangent xyz component\n\n    \t\tnormals[ 0 ] = new Vector3();\n    \t\tbinormals[ 0 ] = new Vector3();\n    \t\tsmallest = Number.MAX_VALUE;\n    \t\ttx = Math.abs( tangents[ 0 ].x );\n    \t\tty = Math.abs( tangents[ 0 ].y );\n    \t\ttz = Math.abs( tangents[ 0 ].z );\n\n    \t\tif ( tx <= smallest ) {\n\n    \t\t\tsmallest = tx;\n    \t\t\tnormal.set( 1, 0, 0 );\n\n    \t\t}\n\n    \t\tif ( ty <= smallest ) {\n\n    \t\t\tsmallest = ty;\n    \t\t\tnormal.set( 0, 1, 0 );\n\n    \t\t}\n\n    \t\tif ( tz <= smallest ) {\n\n    \t\t\tnormal.set( 0, 0, 1 );\n\n    \t\t}\n\n    \t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n    \t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n    \t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n    \t}\n\n\n    \t// compute the slowly-varying normal and binormal vectors for each segment on the path\n\n    \tfor ( i = 1; i < numpoints; i ++ ) {\n\n    \t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n    \t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n    \t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n    \t\tif ( vec.length() > Number.EPSILON ) {\n\n    \t\t\tvec.normalize();\n\n    \t\t\ttheta = Math.acos( exports.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n    \t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n    \t\t}\n\n    \t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n    \t}\n\n\n    \t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n    \tif ( closed ) {\n\n    \t\ttheta = Math.acos( exports.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\n    \t\ttheta /= ( numpoints - 1 );\n\n    \t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\n\n    \t\t\ttheta = - theta;\n\n    \t\t}\n\n    \t\tfor ( i = 1; i < numpoints; i ++ ) {\n\n    \t\t\t// twist a little...\n    \t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n    \t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n    \t\t}\n\n    \t}\n\n    };\n\n    /**\n     * @author Mugen87 / https://github.com/Mugen87\n     *\n     * see: http://www.blackpawn.com/texts/pqtorus/\n     */\n    function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'TorusKnotBufferGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\ttube: tube,\n    \t\ttubularSegments: tubularSegments,\n    \t\tradialSegments: radialSegments,\n    \t\tp: p,\n    \t\tq: q\n    \t};\n\n    \tradius = radius || 100;\n    \ttube = tube || 40;\n    \ttubularSegments = Math.floor( tubularSegments ) || 64;\n    \tradialSegments = Math.floor( radialSegments ) || 8;\n    \tp = p || 2;\n    \tq = q || 3;\n\n    \t// used to calculate buffer length\n    \tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n    \tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n    \t// buffers\n    \tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n    \tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n    \t// helper variables\n    \tvar i, j, index = 0, indexOffset = 0;\n\n    \tvar vertex = new Vector3();\n    \tvar normal = new Vector3();\n    \tvar uv = new Vector2();\n\n    \tvar P1 = new Vector3();\n    \tvar P2 = new Vector3();\n\n    \tvar B = new Vector3();\n    \tvar T = new Vector3();\n    \tvar N = new Vector3();\n\n    \t// generate vertices, normals and uvs\n\n    \tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n    \t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n    \t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n    \t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n    \t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n    \t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n    \t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n    \t\t// calculate orthonormal basis\n\n    \t\tT.subVectors( P2, P1 );\n    \t\tN.addVectors( P2, P1 );\n    \t\tB.crossVectors( T, N );\n    \t\tN.crossVectors( B, T );\n\n    \t\t// normalize B, N. T can be ignored, we don't use it\n\n    \t\tB.normalize();\n    \t\tN.normalize();\n\n    \t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n    \t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n    \t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n    \t\t\tvar v = j / radialSegments * Math.PI * 2;\n    \t\t\tvar cx = - tube * Math.cos( v );\n    \t\t\tvar cy = tube * Math.sin( v );\n\n    \t\t\t// now calculate the final vertex position.\n    \t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n    \t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n    \t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n    \t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n    \t\t\t// vertex\n    \t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n    \t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n    \t\t\tnormal.subVectors( vertex, P1 ).normalize();\n    \t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n    \t\t\t// uv\n    \t\t\tuv.x = i / tubularSegments;\n    \t\t\tuv.y = j / radialSegments;\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\n\n    \t\t\t// increase index\n    \t\t\tindex ++;\n\n    \t\t}\n\n    \t}\n\n    \t// generate indices\n\n    \tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n    \t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n    \t\t\t// indices\n    \t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n    \t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n    \t\t\tvar c = ( radialSegments + 1 ) * j + i;\n    \t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n    \t\t\t// face one\n    \t\t\tindices.setX( indexOffset, a ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n    \t\t\t// face two\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, c ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n    \t\t}\n\n    \t}\n\n    \t// build geometry\n\n    \tthis.setIndex( indices );\n    \tthis.addAttribute( 'position', vertices );\n    \tthis.addAttribute( 'normal', normals );\n    \tthis.addAttribute( 'uv', uvs );\n\n    \t// this function calculates the current position on the torus curve\n\n    \tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n    \t\tvar cu = Math.cos( u );\n    \t\tvar su = Math.sin( u );\n    \t\tvar quOverP = q / p * u;\n    \t\tvar cs = Math.cos( quOverP );\n\n    \t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n    \t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n    \t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n    \t}\n\n    }\n\n    TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n    /**\n     * @author oosmoxiecode\n     */\n\n    function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'TorusKnotGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\ttube: tube,\n    \t\ttubularSegments: tubularSegments,\n    \t\tradialSegments: radialSegments,\n    \t\tp: p,\n    \t\tq: q\n    \t};\n\n    \tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n    \tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n    \tthis.mergeVertices();\n\n    }\n\n    TorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n    TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n    /**\n     * @author Mugen87 / https://github.com/Mugen87\n     */\n\n    function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'TorusBufferGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\ttube: tube,\n    \t\tradialSegments: radialSegments,\n    \t\ttubularSegments: tubularSegments,\n    \t\tarc: arc\n    \t};\n\n    \tradius = radius || 100;\n    \ttube = tube || 40;\n    \tradialSegments = Math.floor( radialSegments ) || 8;\n    \ttubularSegments = Math.floor( tubularSegments ) || 6;\n    \tarc = arc || Math.PI * 2;\n\n    \t// used to calculate buffer length\n    \tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\n    \tvar indexCount = radialSegments * tubularSegments * 2 * 3;\n\n    \t// buffers\n    \tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\n    \tvar vertices = new Float32Array( vertexCount * 3 );\n    \tvar normals = new Float32Array( vertexCount * 3 );\n    \tvar uvs = new Float32Array( vertexCount * 2 );\n\n    \t// offset variables\n    \tvar vertexBufferOffset = 0;\n    \tvar uvBufferOffset = 0;\n    \tvar indexBufferOffset = 0;\n\n    \t// helper variables\n    \tvar center = new Vector3();\n    \tvar vertex = new Vector3();\n    \tvar normal = new Vector3();\n\n    \tvar j, i;\n\n    \t// generate vertices, normals and uvs\n\n    \tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n    \t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n    \t\t\tvar u = i / tubularSegments * arc;\n    \t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n    \t\t\t// vertex\n    \t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n    \t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n    \t\t\tvertex.z = tube * Math.sin( v );\n\n    \t\t\tvertices[ vertexBufferOffset ] = vertex.x;\n    \t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\n    \t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\n\n    \t\t\t// this vector is used to calculate the normal\n    \t\t\tcenter.x = radius * Math.cos( u );\n    \t\t\tcenter.y = radius * Math.sin( u );\n\n    \t\t\t// normal\n    \t\t\tnormal.subVectors( vertex, center ).normalize();\n\n    \t\t\tnormals[ vertexBufferOffset ] = normal.x;\n    \t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\n    \t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\n\n    \t\t\t// uv\n    \t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\n    \t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\n\n    \t\t\t// update offsets\n    \t\t\tvertexBufferOffset += 3;\n    \t\t\tuvBufferOffset += 2;\n\n    \t\t}\n\n    \t}\n\n    \t// generate indices\n\n    \tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n    \t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n    \t\t\t// indices\n    \t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n    \t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n    \t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n    \t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n    \t\t\t// face one\n    \t\t\tindices[ indexBufferOffset ] = a;\n    \t\t\tindices[ indexBufferOffset + 1 ] = b;\n    \t\t\tindices[ indexBufferOffset + 2 ] = d;\n\n    \t\t\t// face two\n    \t\t\tindices[ indexBufferOffset + 3 ] = b;\n    \t\t\tindices[ indexBufferOffset + 4 ] = c;\n    \t\t\tindices[ indexBufferOffset + 5 ] = d;\n\n    \t\t\t// update offset\n    \t\t\tindexBufferOffset += 6;\n\n    \t\t}\n\n    \t}\n\n    \t// build geometry\n    \tthis.setIndex( new BufferAttribute( indices, 1 ) );\n    \tthis.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n    \tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n    \tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n    }\n\n    TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n    /**\n     * @author oosmoxiecode\n     * @author mrdoob / http://mrdoob.com/\n     * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\n     */\n\n    function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'TorusGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\ttube: tube,\n    \t\tradialSegments: radialSegments,\n    \t\ttubularSegments: tubularSegments,\n    \t\tarc: arc\n    \t};\n\n    \tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\n    }\n\n    TorusGeometry.prototype = Object.create( Geometry.prototype );\n    TorusGeometry.prototype.constructor = TorusGeometry;\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     */\n\n    exports.ShapeUtils = {\n\n    \t// calculate area of the contour polygon\n\n    \tarea: function ( contour ) {\n\n    \t\tvar n = contour.length;\n    \t\tvar a = 0.0;\n\n    \t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n    \t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n    \t\t}\n\n    \t\treturn a * 0.5;\n\n    \t},\n\n    \ttriangulate: ( function () {\n\n    \t\t/**\n    \t\t * This code is a quick port of code written in C++ which was submitted to\n    \t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n    \t\t * See original code and more information here:\n    \t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n    \t\t *\n    \t\t * ported to actionscript by Zevan Rosser\n    \t\t * www.actionsnippet.com\n    \t\t *\n    \t\t * ported to javascript by Joshua Koo\n    \t\t * http://www.lab4games.net/zz85/blog\n    \t\t *\n    \t\t */\n\n    \t\tfunction snip( contour, u, v, w, n, verts ) {\n\n    \t\t\tvar p;\n    \t\t\tvar ax, ay, bx, by;\n    \t\t\tvar cx, cy, px, py;\n\n    \t\t\tax = contour[ verts[ u ] ].x;\n    \t\t\tay = contour[ verts[ u ] ].y;\n\n    \t\t\tbx = contour[ verts[ v ] ].x;\n    \t\t\tby = contour[ verts[ v ] ].y;\n\n    \t\t\tcx = contour[ verts[ w ] ].x;\n    \t\t\tcy = contour[ verts[ w ] ].y;\n\n    \t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\n\n    \t\t\tvar aX, aY, bX, bY, cX, cY;\n    \t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n    \t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n    \t\t\taX = cx - bx;  aY = cy - by;\n    \t\t\tbX = ax - cx;  bY = ay - cy;\n    \t\t\tcX = bx - ax;  cY = by - ay;\n\n    \t\t\tfor ( p = 0; p < n; p ++ ) {\n\n    \t\t\t\tpx = contour[ verts[ p ] ].x;\n    \t\t\t\tpy = contour[ verts[ p ] ].y;\n\n    \t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n    \t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n    \t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n    \t\t\t\tapx = px - ax;  apy = py - ay;\n    \t\t\t\tbpx = px - bx;  bpy = py - by;\n    \t\t\t\tcpx = px - cx;  cpy = py - cy;\n\n    \t\t\t\t// see if p is inside triangle abc\n\n    \t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n    \t\t\t\tcCROSSap = cX * apy - cY * apx;\n    \t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n    \t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n    \t\t\t}\n\n    \t\t\treturn true;\n\n    \t\t}\n\n    \t\t// takes in an contour array and returns\n\n    \t\treturn function triangulate( contour, indices ) {\n\n    \t\t\tvar n = contour.length;\n\n    \t\t\tif ( n < 3 ) return null;\n\n    \t\t\tvar result = [],\n    \t\t\t\tverts = [],\n    \t\t\t\tvertIndices = [];\n\n    \t\t\t/* we want a counter-clockwise polygon in verts */\n\n    \t\t\tvar u, v, w;\n\n    \t\t\tif ( exports.ShapeUtils.area( contour ) > 0.0 ) {\n\n    \t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n    \t\t\t} else {\n\n    \t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n    \t\t\t}\n\n    \t\t\tvar nv = n;\n\n    \t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n    \t\t\tvar count = 2 * nv;   /* error detection */\n\n    \t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n    \t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n    \t\t\t\tif ( ( count -- ) <= 0 ) {\n\n    \t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n    \t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n    \t\t\t\t\t//return null;\n    \t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n    \t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n    \t\t\t\t\tif ( indices ) return vertIndices;\n    \t\t\t\t\treturn result;\n\n    \t\t\t\t}\n\n    \t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n    \t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\n    \t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\n    \t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\n\n    \t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n    \t\t\t\t\tvar a, b, c, s, t;\n\n    \t\t\t\t\t/* true names of the vertices */\n\n    \t\t\t\t\ta = verts[ u ];\n    \t\t\t\t\tb = verts[ v ];\n    \t\t\t\t\tc = verts[ w ];\n\n    \t\t\t\t\t/* output Triangle */\n\n    \t\t\t\t\tresult.push( [ contour[ a ],\n    \t\t\t\t\t\tcontour[ b ],\n    \t\t\t\t\t\tcontour[ c ] ] );\n\n\n    \t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n    \t\t\t\t\t/* remove v from the remaining polygon */\n\n    \t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n    \t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tnv --;\n\n    \t\t\t\t\t/* reset error detection counter */\n\n    \t\t\t\t\tcount = 2 * nv;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( indices ) return vertIndices;\n    \t\t\treturn result;\n\n    \t\t}\n\n    \t} )(),\n\n    \ttriangulateShape: function ( contour, holes ) {\n\n    \t\tfunction removeDupEndPts(points) {\n\n    \t\t\tvar l = points.length;\n\n    \t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n    \t\t\t\tpoints.pop();\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tremoveDupEndPts( contour );\n    \t\tholes.forEach( removeDupEndPts );\n\n    \t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n    \t\t\t// inOtherPt needs to be collinear to the inSegment\n    \t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n    \t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n    \t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n    \t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n    \t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n    \t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n    \t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n    \t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n    \t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n    \t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n    \t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n    \t\t\t\t// not parallel\n\n    \t\t\t\tvar perpSeg2;\n    \t\t\t\tif ( limit > 0 ) {\n\n    \t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n    \t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n    \t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n    \t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n    \t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n    \t\t\t\t}\n\n    \t\t\t\t// i.e. to reduce rounding errors\n    \t\t\t\t// intersection at endpoint of segment#1?\n    \t\t\t\tif ( perpSeg2 === 0 ) {\n\n    \t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n    \t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n    \t\t\t\t\treturn [ inSeg1Pt1 ];\n\n    \t\t\t\t}\n    \t\t\t\tif ( perpSeg2 === limit ) {\n\n    \t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n    \t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n    \t\t\t\t\treturn [ inSeg1Pt2 ];\n\n    \t\t\t\t}\n    \t\t\t\t// intersection at endpoint of segment#2?\n    \t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n    \t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n    \t\t\t\t// return real intersection point\n    \t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n    \t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\n    \t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n    \t\t\t} else {\n\n    \t\t\t\t// parallel or collinear\n    \t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n    \t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n    \t\t\t\t// they are collinear or degenerate\n    \t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n    \t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n    \t\t\t\t// both segments are points\n    \t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n    \t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n    \t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n    \t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\n\n    \t\t\t\t}\n    \t\t\t\t// segment#1  is a single point\n    \t\t\t\tif ( seg1Pt ) {\n\n    \t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n    \t\t\t\t\treturn [ inSeg1Pt1 ];\n\n    \t\t\t\t}\n    \t\t\t\t// segment#2  is a single point\n    \t\t\t\tif ( seg2Pt ) {\n\n    \t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n    \t\t\t\t\treturn [ inSeg2Pt1 ];\n\n    \t\t\t\t}\n\n    \t\t\t\t// they are collinear segments, which might overlap\n    \t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n    \t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n    \t\t\t\tif ( seg1dx !== 0 ) {\n\n    \t\t\t\t\t// the segments are NOT on a vertical line\n    \t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n    \t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n    \t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n    \t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n    \t\t\t\t\t}\n    \t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n    \t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n    \t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n    \t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\t// the segments are on a vertical line\n    \t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n    \t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n    \t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n    \t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n    \t\t\t\t\t}\n    \t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n    \t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n    \t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n    \t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n    \t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n    \t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\n    \t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n    \t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n    \t\t\t\t\t\treturn [ seg2min ];\n\n    \t\t\t\t\t}\n    \t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n    \t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\n    \t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n    \t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n    \t\t\t\t\t\treturn [ seg1min ];\n\n    \t\t\t\t\t}\n    \t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n    \t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n    \t\t\t// The order of legs is important\n\n    \t\t\t// translation of all points, so that Vertex is at (0,0)\n    \t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\n    \t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\n    \t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\n\n    \t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n    \t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n    \t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n    \t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n    \t\t\t\t// angle != 180 deg.\n\n    \t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n    \t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n    \t\t\t\tif ( from2toAngle > 0 ) {\n\n    \t\t\t\t\t// main angle < 180 deg.\n    \t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\t// main angle > 180 deg.\n    \t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\t// angle == 180 deg.\n    \t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n    \t\t\t\treturn\t( from2otherAngle > 0 );\n\n    \t\t\t}\n\n    \t\t}\n\n\n    \t\tfunction removeHoles( contour, holes ) {\n\n    \t\t\tvar shape = contour.concat(); // work on this shape\n    \t\t\tvar hole;\n\n    \t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n    \t\t\t\t// Check if hole point lies within angle around shape point\n    \t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n    \t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n    \t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n    \t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n    \t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n    \t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n    \t\t\t\tif ( ! insideAngle ) {\n\n    \t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n    \t\t\t\t\treturn\tfalse;\n\n    \t\t\t\t}\n\n    \t\t\t\t// Check if shape point lies within angle around hole point\n    \t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n    \t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n    \t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n    \t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n    \t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n    \t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n    \t\t\t\tif ( ! insideAngle ) {\n\n    \t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n    \t\t\t\t\treturn\tfalse;\n\n    \t\t\t\t}\n\n    \t\t\t\treturn\ttrue;\n\n    \t\t\t}\n\n    \t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n    \t\t\t\t// checks for intersections with shape edges\n    \t\t\t\tvar sIdx, nextIdx, intersection;\n    \t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n    \t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n    \t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n    \t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n    \t\t\t\t}\n\n    \t\t\t\treturn\tfalse;\n\n    \t\t\t}\n\n    \t\t\tvar indepHoles = [];\n\n    \t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n    \t\t\t\t// checks for intersections with hole edges\n    \t\t\t\tvar ihIdx, chkHole,\n    \t\t\t\t\thIdx, nextIdx, intersection;\n    \t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n    \t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\n    \t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n    \t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n    \t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n    \t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n    \t\t\t\treturn\tfalse;\n\n    \t\t\t}\n\n    \t\t\tvar holeIndex, shapeIndex,\n    \t\t\t\tshapePt, holePt,\n    \t\t\t\tholeIdx, cutKey, failedCuts = [],\n    \t\t\t\ttmpShape1, tmpShape2,\n    \t\t\t\ttmpHole1, tmpHole2;\n\n    \t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    \t\t\t\tindepHoles.push( h );\n\n    \t\t\t}\n\n    \t\t\tvar minShapeIndex = 0;\n    \t\t\tvar counter = indepHoles.length * 2;\n    \t\t\twhile ( indepHoles.length > 0 ) {\n\n    \t\t\t\tcounter --;\n    \t\t\t\tif ( counter < 0 ) {\n\n    \t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\n    \t\t\t\t\tbreak;\n\n    \t\t\t\t}\n\n    \t\t\t\t// search for shape-vertex and hole-vertex,\n    \t\t\t\t// which can be connected without intersections\n    \t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n    \t\t\t\t\tshapePt = shape[ shapeIndex ];\n    \t\t\t\t\tholeIndex\t= - 1;\n\n    \t\t\t\t\t// search for hole which can be reached without intersections\n    \t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n    \t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n    \t\t\t\t\t\t// prevent multiple checks\n    \t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\n    \t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n    \t\t\t\t\t\thole = holes[ holeIdx ];\n    \t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n    \t\t\t\t\t\t\tholePt = hole[ h2 ];\n    \t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n    \t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n    \t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n    \t\t\t\t\t\t\tholeIndex = h2;\n    \t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n    \t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n    \t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n    \t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n    \t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n    \t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n    \t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n    \t\t\t\t\t\t\t// Debug only, to show the selected cuts\n    \t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n    \t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t}\n    \t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n    \t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n    \t\t\t\t\t}\n    \t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn shape; \t\t\t/* shape with no holes */\n\n    \t\t}\n\n\n    \t\tvar i, il, f, face,\n    \t\t\tkey, index,\n    \t\t\tallPointsMap = {};\n\n    \t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n    \t\tvar allpoints = contour.concat();\n\n    \t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    \t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n    \t\t}\n\n    \t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n    \t\t// prepare all points map\n\n    \t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n    \t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\n\n    \t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n    \t\t\t\tconsole.warn( \"THREE.ShapeUtils: Duplicate point\", key, i );\n\n    \t\t\t}\n\n    \t\t\tallPointsMap[ key ] = i;\n\n    \t\t}\n\n    \t\t// remove holes by cutting paths to holes and adding them to the shape\n    \t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n    \t\tvar triangles = exports.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n    \t\t//console.log( \"triangles\",triangles, triangles.length );\n\n    \t\t// check all face vertices against all points map\n\n    \t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n    \t\t\tface = triangles[ i ];\n\n    \t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n    \t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\n\n    \t\t\t\tindex = allPointsMap[ key ];\n\n    \t\t\t\tif ( index !== undefined ) {\n\n    \t\t\t\t\tface[ f ] = index;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn triangles.concat();\n\n    \t},\n\n    \tisClockWise: function ( pts ) {\n\n    \t\treturn exports.ShapeUtils.area( pts ) < 0;\n\n    \t},\n\n    \t// Bezier Curves formulas obtained from\n    \t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\n\n    \t// Quad Bezier Functions\n\n    \tb2: ( function () {\n\n    \t\tfunction b2p0( t, p ) {\n\n    \t\t\tvar k = 1 - t;\n    \t\t\treturn k * k * p;\n\n    \t\t}\n\n    \t\tfunction b2p1( t, p ) {\n\n    \t\t\treturn 2 * ( 1 - t ) * t * p;\n\n    \t\t}\n\n    \t\tfunction b2p2( t, p ) {\n\n    \t\t\treturn t * t * p;\n\n    \t\t}\n\n    \t\treturn function b2( t, p0, p1, p2 ) {\n\n    \t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\n\n    \t\t};\n\n    \t} )(),\n\n    \t// Cubic Bezier Functions\n\n    \tb3: ( function () {\n\n    \t\tfunction b3p0( t, p ) {\n\n    \t\t\tvar k = 1 - t;\n    \t\t\treturn k * k * k * p;\n\n    \t\t}\n\n    \t\tfunction b3p1( t, p ) {\n\n    \t\t\tvar k = 1 - t;\n    \t\t\treturn 3 * k * k * t * p;\n\n    \t\t}\n\n    \t\tfunction b3p2( t, p ) {\n\n    \t\t\tvar k = 1 - t;\n    \t\t\treturn 3 * k * t * t * p;\n\n    \t\t}\n\n    \t\tfunction b3p3( t, p ) {\n\n    \t\t\treturn t * t * t * p;\n\n    \t\t}\n\n    \t\treturn function b3( t, p0, p1, p2, p3 ) {\n\n    \t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\n\n    \t\t};\n\n    \t} )()\n\n    };\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     *\n     * Creates extruded geometry from a path shape.\n     *\n     * parameters = {\n     *\n     *  curveSegments: <int>, // number of points on the curves\n     *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n     *  amount: <int>, // Depth to extrude the shape\n     *\n     *  bevelEnabled: <bool>, // turn on bevel\n     *  bevelThickness: <float>, // how deep into the original shape bevel goes\n     *  bevelSize: <float>, // how far from shape outline is bevel\n     *  bevelSegments: <int>, // number of bevel layers\n     *\n     *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\n     *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\n     *\n     *  uvGenerator: <Object> // object that provides UV generator functions\n     *\n     * }\n     **/\n\n    function ExtrudeGeometry( shapes, options ) {\n\n    \tif ( typeof( shapes ) === \"undefined\" ) {\n\n    \t\tshapes = [];\n    \t\treturn;\n\n    \t}\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'ExtrudeGeometry';\n\n    \tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n    \tthis.addShapeList( shapes, options );\n\n    \tthis.computeFaceNormals();\n\n    \t// can't really use automatic vertex normals\n    \t// as then front and back sides get smoothed too\n    \t// should do separate smoothing just for sides\n\n    \t//this.computeVertexNormals();\n\n    \t//console.log( \"took\", ( Date.now() - startTime ) );\n\n    }\n\n    ExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n    ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n    ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n    \tvar sl = shapes.length;\n\n    \tfor ( var s = 0; s < sl; s ++ ) {\n\n    \t\tvar shape = shapes[ s ];\n    \t\tthis.addShape( shape, options );\n\n    \t}\n\n    };\n\n    ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\n\n    \tvar amount = options.amount !== undefined ? options.amount : 100;\n\n    \tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n    \tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n    \tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n    \tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n    \tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n    \tvar steps = options.steps !== undefined ? options.steps : 1;\n\n    \tvar extrudePath = options.extrudePath;\n    \tvar extrudePts, extrudeByPath = false;\n\n    \t// Use default WorldUVGenerator if no UV generators are specified.\n    \tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n    \tvar splineTube, binormal, normal, position2;\n    \tif ( extrudePath ) {\n\n    \t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n    \t\textrudeByPath = true;\n    \t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n    \t\t// SETUP TNB variables\n\n    \t\t// Reuse TNB from TubeGeomtry for now.\n    \t\t// TODO1 - have a .isClosed in spline?\n\n    \t\tsplineTube = options.frames !== undefined ? options.frames : new TubeGeometry.FrenetFrames( extrudePath, steps, false );\n\n    \t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n    \t\tbinormal = new Vector3();\n    \t\tnormal = new Vector3();\n    \t\tposition2 = new Vector3();\n\n    \t}\n\n    \t// Safeguards if bevels are not enabled\n\n    \tif ( ! bevelEnabled ) {\n\n    \t\tbevelSegments = 0;\n    \t\tbevelThickness = 0;\n    \t\tbevelSize = 0;\n\n    \t}\n\n    \t// Variables initialization\n\n    \tvar ahole, h, hl; // looping of holes\n    \tvar scope = this;\n\n    \tvar shapesOffset = this.vertices.length;\n\n    \tvar shapePoints = shape.extractPoints( curveSegments );\n\n    \tvar vertices = shapePoints.shape;\n    \tvar holes = shapePoints.holes;\n\n    \tvar reverse = ! exports.ShapeUtils.isClockWise( vertices );\n\n    \tif ( reverse ) {\n\n    \t\tvertices = vertices.reverse();\n\n    \t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n    \t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    \t\t\tahole = holes[ h ];\n\n    \t\t\tif ( exports.ShapeUtils.isClockWise( ahole ) ) {\n\n    \t\t\t\tholes[ h ] = ahole.reverse();\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\n\n    \t}\n\n\n    \tvar faces = exports.ShapeUtils.triangulateShape( vertices, holes );\n\n    \t/* Vertices */\n\n    \tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n    \tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    \t\tahole = holes[ h ];\n\n    \t\tvertices = vertices.concat( ahole );\n\n    \t}\n\n\n    \tfunction scalePt2( pt, vec, size ) {\n\n    \t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n    \t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n    \t}\n\n    \tvar b, bs, t, z,\n    \t\tvert, vlen = vertices.length,\n    \t\tface, flen = faces.length;\n\n\n    \t// Find directions for point movement\n\n\n    \tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n    \t\t// computes for inPt the corresponding point inPt' on a new contour\n    \t\t//   shifted by 1 unit (length of normalized vector) to the left\n    \t\t// if we walk along contour clockwise, this new contour is outside the old one\n    \t\t//\n    \t\t// inPt' is the intersection of the two lines parallel to the two\n    \t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n    \t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\n\n    \t\t// good reading for geometry algorithms (here: line-line intersection)\n    \t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n    \t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\n    \t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\n\n    \t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n    \t\t// check for collinear edges\n    \t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n    \t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n    \t\t\t// not collinear\n\n    \t\t\t// length of vectors for normalizing\n\n    \t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n    \t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n    \t\t\t// shift adjacent points by unit vectors to the left\n\n    \t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n    \t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n    \t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n    \t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n    \t\t\t// scaling factor for v_prev to intersection point\n\n    \t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n    \t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\n    \t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n    \t\t\t// vector from inPt to intersection point\n\n    \t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n    \t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n    \t\t\t// Don't normalize!, otherwise sharp corners become ugly\n    \t\t\t//  but prevent crazy spikes\n    \t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n    \t\t\tif ( v_trans_lensq <= 2 ) {\n\n    \t\t\t\treturn\tnew Vector2( v_trans_x, v_trans_y );\n\n    \t\t\t} else {\n\n    \t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\t// handle special case of collinear edges\n\n    \t\t\tvar direction_eq = false;\t\t// assumes: opposite\n    \t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n    \t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n    \t\t\t\t\tdirection_eq = true;\n\n    \t\t\t\t}\n\n    \t\t\t} else {\n\n    \t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n    \t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n    \t\t\t\t\t\tdirection_eq = true;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n    \t\t\t\t\t\tdirection_eq = true;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( direction_eq ) {\n\n    \t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n    \t\t\t\tv_trans_x = - v_prev_y;\n    \t\t\t\tv_trans_y =  v_prev_x;\n    \t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n    \t\t\t} else {\n\n    \t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n    \t\t\t\tv_trans_x = v_prev_x;\n    \t\t\t\tv_trans_y = v_prev_y;\n    \t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn\tnew Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n    \t}\n\n\n    \tvar contourMovements = [];\n\n    \tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n    \t\tif ( j === il ) j = 0;\n    \t\tif ( k === il ) k = 0;\n\n    \t\t//  (j)---(i)---(k)\n    \t\t// console.log('i,j,k', i, j , k)\n\n    \t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n    \t}\n\n    \tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\n\n    \tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    \t\tahole = holes[ h ];\n\n    \t\toneHoleMovements = [];\n\n    \t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n    \t\t\tif ( j === il ) j = 0;\n    \t\t\tif ( k === il ) k = 0;\n\n    \t\t\t//  (j)---(i)---(k)\n    \t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n    \t\t}\n\n    \t\tholesMovements.push( oneHoleMovements );\n    \t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n    \t}\n\n\n    \t// Loop bevelSegments, 1 for the front, 1 for the back\n\n    \tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n    \t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n    \t\tt = b / bevelSegments;\n    \t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n    \t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n    \t\t// contract shape\n\n    \t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n    \t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n    \t\t\tv( vert.x, vert.y,  - z );\n\n    \t\t}\n\n    \t\t// expand holes\n\n    \t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    \t\t\tahole = holes[ h ];\n    \t\t\toneHoleMovements = holesMovements[ h ];\n\n    \t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n    \t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n    \t\t\t\tv( vert.x, vert.y,  - z );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \tbs = bevelSize;\n\n    \t// Back facing vertices\n\n    \tfor ( i = 0; i < vlen; i ++ ) {\n\n    \t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n    \t\tif ( ! extrudeByPath ) {\n\n    \t\t\tv( vert.x, vert.y, 0 );\n\n    \t\t} else {\n\n    \t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n    \t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n    \t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n    \t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n    \t\t\tv( position2.x, position2.y, position2.z );\n\n    \t\t}\n\n    \t}\n\n    \t// Add stepped vertices...\n    \t// Including front facing vertices\n\n    \tvar s;\n\n    \tfor ( s = 1; s <= steps; s ++ ) {\n\n    \t\tfor ( i = 0; i < vlen; i ++ ) {\n\n    \t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n    \t\t\tif ( ! extrudeByPath ) {\n\n    \t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n    \t\t\t} else {\n\n    \t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n    \t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n    \t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n    \t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n    \t\t\t\tv( position2.x, position2.y, position2.z );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n\n    \t// Add bevel segments planes\n\n    \t//for ( b = 1; b <= bevelSegments; b ++ ) {\n    \tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n    \t\tt = b / bevelSegments;\n    \t\tz = bevelThickness * Math.cos ( t * Math.PI / 2 );\n    \t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n    \t\t// contract shape\n\n    \t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n    \t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n    \t\t\tv( vert.x, vert.y,  amount + z );\n\n    \t\t}\n\n    \t\t// expand holes\n\n    \t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    \t\t\tahole = holes[ h ];\n    \t\t\toneHoleMovements = holesMovements[ h ];\n\n    \t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n    \t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n    \t\t\t\tif ( ! extrudeByPath ) {\n\n    \t\t\t\t\tv( vert.x, vert.y,  amount + z );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \t/* Faces */\n\n    \t// Top and bottom faces\n\n    \tbuildLidFaces();\n\n    \t// Sides faces\n\n    \tbuildSideFaces();\n\n\n    \t/////  Internal functions\n\n    \tfunction buildLidFaces() {\n\n    \t\tif ( bevelEnabled ) {\n\n    \t\t\tvar layer = 0; // steps + 1\n    \t\t\tvar offset = vlen * layer;\n\n    \t\t\t// Bottom faces\n\n    \t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n    \t\t\t\tface = faces[ i ];\n    \t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n    \t\t\t}\n\n    \t\t\tlayer = steps + bevelSegments * 2;\n    \t\t\toffset = vlen * layer;\n\n    \t\t\t// Top faces\n\n    \t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n    \t\t\t\tface = faces[ i ];\n    \t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\t// Bottom faces\n\n    \t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n    \t\t\t\tface = faces[ i ];\n    \t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n    \t\t\t}\n\n    \t\t\t// Top faces\n\n    \t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n    \t\t\t\tface = faces[ i ];\n    \t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \t// Create faces for the z-sides of the shape\n\n    \tfunction buildSideFaces() {\n\n    \t\tvar layeroffset = 0;\n    \t\tsidewalls( contour, layeroffset );\n    \t\tlayeroffset += contour.length;\n\n    \t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n    \t\t\tahole = holes[ h ];\n    \t\t\tsidewalls( ahole, layeroffset );\n\n    \t\t\t//, true\n    \t\t\tlayeroffset += ahole.length;\n\n    \t\t}\n\n    \t}\n\n    \tfunction sidewalls( contour, layeroffset ) {\n\n    \t\tvar j, k;\n    \t\ti = contour.length;\n\n    \t\twhile ( -- i >= 0 ) {\n\n    \t\t\tj = i;\n    \t\t\tk = i - 1;\n    \t\t\tif ( k < 0 ) k = contour.length - 1;\n\n    \t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n    \t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\n\n    \t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n    \t\t\t\tvar slen1 = vlen * s;\n    \t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n    \t\t\t\tvar a = layeroffset + j + slen1,\n    \t\t\t\t\tb = layeroffset + k + slen1,\n    \t\t\t\t\tc = layeroffset + k + slen2,\n    \t\t\t\t\td = layeroffset + j + slen2;\n\n    \t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n\n    \tfunction v( x, y, z ) {\n\n    \t\tscope.vertices.push( new Vector3( x, y, z ) );\n\n    \t}\n\n    \tfunction f3( a, b, c ) {\n\n    \t\ta += shapesOffset;\n    \t\tb += shapesOffset;\n    \t\tc += shapesOffset;\n\n    \t\tscope.faces.push( new Face3( a, b, c, null, null, 0 ) );\n\n    \t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\n\n    \t\tscope.faceVertexUvs[ 0 ].push( uvs );\n\n    \t}\n\n    \tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\n\n    \t\ta += shapesOffset;\n    \t\tb += shapesOffset;\n    \t\tc += shapesOffset;\n    \t\td += shapesOffset;\n\n    \t\tscope.faces.push( new Face3( a, b, d, null, null, 1 ) );\n    \t\tscope.faces.push( new Face3( b, c, d, null, null, 1 ) );\n\n    \t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\n\n    \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\n    \t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\n\n    \t}\n\n    };\n\n    ExtrudeGeometry.WorldUVGenerator = {\n\n    \tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\n\n    \t\tvar vertices = geometry.vertices;\n\n    \t\tvar a = vertices[ indexA ];\n    \t\tvar b = vertices[ indexB ];\n    \t\tvar c = vertices[ indexC ];\n\n    \t\treturn [\n    \t\t\tnew Vector2( a.x, a.y ),\n    \t\t\tnew Vector2( b.x, b.y ),\n    \t\t\tnew Vector2( c.x, c.y )\n    \t\t];\n\n    \t},\n\n    \tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\n\n    \t\tvar vertices = geometry.vertices;\n\n    \t\tvar a = vertices[ indexA ];\n    \t\tvar b = vertices[ indexB ];\n    \t\tvar c = vertices[ indexC ];\n    \t\tvar d = vertices[ indexD ];\n\n    \t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\n\n    \t\t\treturn [\n    \t\t\t\tnew Vector2( a.x, 1 - a.z ),\n    \t\t\t\tnew Vector2( b.x, 1 - b.z ),\n    \t\t\t\tnew Vector2( c.x, 1 - c.z ),\n    \t\t\t\tnew Vector2( d.x, 1 - d.z )\n    \t\t\t];\n\n    \t\t} else {\n\n    \t\t\treturn [\n    \t\t\t\tnew Vector2( a.y, 1 - a.z ),\n    \t\t\t\tnew Vector2( b.y, 1 - b.z ),\n    \t\t\t\tnew Vector2( c.y, 1 - c.z ),\n    \t\t\t\tnew Vector2( d.y, 1 - d.z )\n    \t\t\t];\n\n    \t\t}\n\n    \t}\n    };\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * Text = 3D Text\n     *\n     * parameters = {\n     *  font: <THREE.Font>, // font\n     *\n     *  size: <float>, // size of the text\n     *  height: <float>, // thickness to extrude text\n     *  curveSegments: <int>, // number of points on the curves\n     *\n     *  bevelEnabled: <bool>, // turn on bevel\n     *  bevelThickness: <float>, // how deep into text bevel goes\n     *  bevelSize: <float> // how far from text outline is bevel\n     * }\n     */\n\n    function TextGeometry( text, parameters ) {\n\n    \tparameters = parameters || {};\n\n    \tvar font = parameters.font;\n\n    \tif ( (font && font.isFont) === false ) {\n\n    \t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n    \t\treturn new Geometry();\n\n    \t}\n\n    \tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n    \t// translate parameters to ExtrudeGeometry API\n\n    \tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n    \t// defaults\n\n    \tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n    \tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n    \tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n    \tExtrudeGeometry.call( this, shapes, parameters );\n\n    \tthis.type = 'TextGeometry';\n\n    }\n\n    TextGeometry.prototype = Object.create( ExtrudeGeometry.prototype );\n    TextGeometry.prototype.constructor = TextGeometry;\n\n    /**\n     * @author benaadams / https://twitter.com/ben_a_adams\n     * based on THREE.SphereGeometry\n     */\n\n    function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'SphereBufferGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\twidthSegments: widthSegments,\n    \t\theightSegments: heightSegments,\n    \t\tphiStart: phiStart,\n    \t\tphiLength: phiLength,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    \tradius = radius || 50;\n\n    \twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n    \theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n    \tphiStart = phiStart !== undefined ? phiStart : 0;\n    \tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n    \tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n    \tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n    \tvar thetaEnd = thetaStart + thetaLength;\n\n    \tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\n\n    \tvar positions = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n    \tvar index = 0, vertices = [], normal = new Vector3();\n\n    \tfor ( var y = 0; y <= heightSegments; y ++ ) {\n\n    \t\tvar verticesRow = [];\n\n    \t\tvar v = y / heightSegments;\n\n    \t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\n\n    \t\t\tvar u = x / widthSegments;\n\n    \t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n    \t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\n    \t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n    \t\t\tnormal.set( px, py, pz ).normalize();\n\n    \t\t\tpositions.setXYZ( index, px, py, pz );\n    \t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n    \t\t\tuvs.setXY( index, u, 1 - v );\n\n    \t\t\tverticesRow.push( index );\n\n    \t\t\tindex ++;\n\n    \t\t}\n\n    \t\tvertices.push( verticesRow );\n\n    \t}\n\n    \tvar indices = [];\n\n    \tfor ( var y = 0; y < heightSegments; y ++ ) {\n\n    \t\tfor ( var x = 0; x < widthSegments; x ++ ) {\n\n    \t\t\tvar v1 = vertices[ y ][ x + 1 ];\n    \t\t\tvar v2 = vertices[ y ][ x ];\n    \t\t\tvar v3 = vertices[ y + 1 ][ x ];\n    \t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\n\n    \t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\n    \t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\n\n    \t\t}\n\n    \t}\n\n    \tthis.setIndex( new ( positions.count > 65535 ? Uint32Attribute : Uint16Attribute )( indices, 1 ) );\n    \tthis.addAttribute( 'position', positions );\n    \tthis.addAttribute( 'normal', normals );\n    \tthis.addAttribute( 'uv', uvs );\n\n    \tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n    }\n\n    SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'SphereGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\twidthSegments: widthSegments,\n    \t\theightSegments: heightSegments,\n    \t\tphiStart: phiStart,\n    \t\tphiLength: phiLength,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    \tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\n    }\n\n    SphereGeometry.prototype = Object.create( Geometry.prototype );\n    SphereGeometry.prototype.constructor = SphereGeometry;\n\n    /**\n     * @author Mugen87 / https://github.com/Mugen87\n     */\n\n    function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'RingBufferGeometry';\n\n    \tthis.parameters = {\n    \t\tinnerRadius: innerRadius,\n    \t\touterRadius: outerRadius,\n    \t\tthetaSegments: thetaSegments,\n    \t\tphiSegments: phiSegments,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    \tinnerRadius = innerRadius || 20;\n    \touterRadius = outerRadius || 50;\n\n    \tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n    \tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n    \tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n    \tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n    \t// these are used to calculate buffer length\n    \tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\n    \tvar indexCount = thetaSegments * phiSegments * 2 * 3;\n\n    \t// buffers\n    \tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n    \tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n    \t// some helper variables\n    \tvar index = 0, indexOffset = 0, segment;\n    \tvar radius = innerRadius;\n    \tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n    \tvar vertex = new Vector3();\n    \tvar uv = new Vector2();\n    \tvar j, i;\n\n    \t// generate vertices, normals and uvs\n\n    \t// values are generate from the inside of the ring to the outside\n\n    \tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n    \t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n    \t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n    \t\t\t// vertex\n    \t\t\tvertex.x = radius * Math.cos( segment );\n    \t\t\tvertex.y = radius * Math.sin( segment );\n    \t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n    \t\t\t// normal\n    \t\t\tnormals.setXYZ( index, 0, 0, 1 );\n\n    \t\t\t// uv\n    \t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n    \t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\n\n    \t\t\t// increase index\n    \t\t\tindex++;\n\n    \t\t}\n\n    \t\t// increase the radius for next row of vertices\n    \t\tradius += radiusStep;\n\n    \t}\n\n    \t// generate indices\n\n    \tfor ( j = 0; j < phiSegments; j ++ ) {\n\n    \t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n    \t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n    \t\t\tsegment = i + thetaSegmentLevel;\n\n    \t\t\t// indices\n    \t\t\tvar a = segment;\n    \t\t\tvar b = segment + thetaSegments + 1;\n    \t\t\tvar c = segment + thetaSegments + 2;\n    \t\t\tvar d = segment + 1;\n\n    \t\t\t// face one\n    \t\t\tindices.setX( indexOffset, a ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, c ); indexOffset++;\n\n    \t\t\t// face two\n    \t\t\tindices.setX( indexOffset, a ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, c ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n    \t\t}\n\n    \t}\n\n    \t// build geometry\n\n    \tthis.setIndex( indices );\n    \tthis.addAttribute( 'position', vertices );\n    \tthis.addAttribute( 'normal', normals );\n    \tthis.addAttribute( 'uv', uvs );\n\n    }\n\n    RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    RingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n    /**\n     * @author Kaleb Murphy\n     */\n\n    function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'RingGeometry';\n\n    \tthis.parameters = {\n    \t\tinnerRadius: innerRadius,\n    \t\touterRadius: outerRadius,\n    \t\tthetaSegments: thetaSegments,\n    \t\tphiSegments: phiSegments,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    \tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\n    }\n\n    RingGeometry.prototype = Object.create( Geometry.prototype );\n    RingGeometry.prototype.constructor = RingGeometry;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\n     */\n\n    function PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'PlaneGeometry';\n\n    \tthis.parameters = {\n    \t\twidth: width,\n    \t\theight: height,\n    \t\twidthSegments: widthSegments,\n    \t\theightSegments: heightSegments\n    \t};\n\n    \tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\n    }\n\n    PlaneGeometry.prototype = Object.create( Geometry.prototype );\n    PlaneGeometry.prototype.constructor = PlaneGeometry;\n\n    /**\n     * @author Mugen87 / https://github.com/Mugen87\n     */\n\n     // points - to create a closed torus, one must use a set of points\n     //    like so: [ a, b, c, d, a ], see first is the same as last.\n     // segments - the number of circumference segments to create\n     // phiStart - the starting radian\n     // phiLength - the radian (0 to 2PI) range of the lathed section\n     //    2PI is a closed lathe, less than 2PI is a portion.\n\n    function LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'LatheBufferGeometry';\n\n    \tthis.parameters = {\n    \t\tpoints: points,\n    \t\tsegments: segments,\n    \t\tphiStart: phiStart,\n    \t\tphiLength: phiLength\n    \t};\n\n    \tsegments = Math.floor( segments ) || 12;\n    \tphiStart = phiStart || 0;\n    \tphiLength = phiLength || Math.PI * 2;\n\n    \t// clamp phiLength so it's in range of [ 0, 2PI ]\n    \tphiLength = exports.Math.clamp( phiLength, 0, Math.PI * 2 );\n\n    \t// these are used to calculate buffer length\n    \tvar vertexCount = ( segments + 1 ) * points.length;\n    \tvar indexCount = segments * points.length * 2 * 3;\n\n    \t// buffers\n    \tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\n    \tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n    \t// helper variables\n    \tvar index = 0, indexOffset = 0, base;\n    \tvar inverseSegments = 1.0 / segments;\n    \tvar vertex = new Vector3();\n    \tvar uv = new Vector2();\n    \tvar i, j;\n\n    \t// generate vertices and uvs\n\n    \tfor ( i = 0; i <= segments; i ++ ) {\n\n    \t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n    \t\tvar sin = Math.sin( phi );\n    \t\tvar cos = Math.cos( phi );\n\n    \t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n    \t\t\t// vertex\n    \t\t\tvertex.x = points[ j ].x * sin;\n    \t\t\tvertex.y = points[ j ].y;\n    \t\t\tvertex.z = points[ j ].x * cos;\n    \t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n    \t\t\t// uv\n    \t\t\tuv.x = i / segments;\n    \t\t\tuv.y = j / ( points.length - 1 );\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\n\n    \t\t\t// increase index\n    \t\t\tindex ++;\n\n    \t\t}\n\n    \t}\n\n    \t// generate indices\n\n    \tfor ( i = 0; i < segments; i ++ ) {\n\n    \t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n    \t\t\tbase = j + i * points.length;\n\n    \t\t\t// indices\n    \t\t\tvar a = base;\n    \t\t\tvar b = base + points.length;\n    \t\t\tvar c = base + points.length + 1;\n    \t\t\tvar d = base + 1;\n\n    \t\t\t// face one\n    \t\t\tindices.setX( indexOffset, a ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n    \t\t\t// face two\n    \t\t\tindices.setX( indexOffset, b ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, c ); indexOffset++;\n    \t\t\tindices.setX( indexOffset, d ); indexOffset++;\n\n    \t\t}\n\n    \t}\n\n    \t// build geometry\n\n    \tthis.setIndex( indices );\n    \tthis.addAttribute( 'position', vertices );\n    \tthis.addAttribute( 'uv', uvs );\n\n    \t// generate normals\n\n    \tthis.computeVertexNormals();\n\n    \t// if the geometry is closed, we need to average the normals along the seam.\n    \t// because the corresponding vertices are identical (but still have different UVs).\n\n    \tif( phiLength === Math.PI * 2 ) {\n\n    \t\tvar normals = this.attributes.normal.array;\n    \t\tvar n1 = new Vector3();\n    \t\tvar n2 = new Vector3();\n    \t\tvar n = new Vector3();\n\n    \t\t// this is the buffer offset for the last line of vertices\n    \t\tbase = segments * points.length * 3;\n\n    \t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n    \t\t\t// select the normal of the vertex in the first line\n    \t\t\tn1.x = normals[ j + 0 ];\n    \t\t\tn1.y = normals[ j + 1 ];\n    \t\t\tn1.z = normals[ j + 2 ];\n\n    \t\t\t// select the normal of the vertex in the last line\n    \t\t\tn2.x = normals[ base + j + 0 ];\n    \t\t\tn2.y = normals[ base + j + 1 ];\n    \t\t\tn2.z = normals[ base + j + 2 ];\n\n    \t\t\t// average normals\n    \t\t\tn.addVectors( n1, n2 ).normalize();\n\n    \t\t\t// assign the new values to both normals\n    \t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n    \t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n    \t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n    \t\t} // next row\n\n    \t}\n\n    }\n\n    LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n    /**\n     * @author astrodud / http://astrodud.isgreat.org/\n     * @author zz85 / https://github.com/zz85\n     * @author bhouston / http://clara.io\n     */\n\n    // points - to create a closed torus, one must use a set of points\n    //    like so: [ a, b, c, d, a ], see first is the same as last.\n    // segments - the number of circumference segments to create\n    // phiStart - the starting radian\n    // phiLength - the radian (0 to 2PI) range of the lathed section\n    //    2PI is a closed lathe, less than 2PI is a portion.\n\n    function LatheGeometry( points, segments, phiStart, phiLength ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'LatheGeometry';\n\n    \tthis.parameters = {\n    \t\tpoints: points,\n    \t\tsegments: segments,\n    \t\tphiStart: phiStart,\n    \t\tphiLength: phiLength\n    \t};\n\n    \tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n    \tthis.mergeVertices();\n\n    }\n\n    LatheGeometry.prototype = Object.create( Geometry.prototype );\n    LatheGeometry.prototype.constructor = LatheGeometry;\n\n    /**\n     * @author jonobr1 / http://jonobr1.com\n     *\n     * Creates a one-sided polygonal geometry from a path shape. Similar to\n     * ExtrudeGeometry.\n     *\n     * parameters = {\n     *\n     *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\n     *\n     *\tmaterial: <int> // material index for front and back faces\n     *\tuvGenerator: <Object> // object that provides UV generator functions\n     *\n     * }\n     **/\n\n    function ShapeGeometry( shapes, options ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'ShapeGeometry';\n\n    \tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\n\n    \tthis.addShapeList( shapes, options );\n\n    \tthis.computeFaceNormals();\n\n    }\n\n    ShapeGeometry.prototype = Object.create( Geometry.prototype );\n    ShapeGeometry.prototype.constructor = ShapeGeometry;\n\n    /**\n     * Add an array of shapes to THREE.ShapeGeometry.\n     */\n    ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n    \tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n    \t\tthis.addShape( shapes[ i ], options );\n\n    \t}\n\n    \treturn this;\n\n    };\n\n    /**\n     * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\n     */\n    ShapeGeometry.prototype.addShape = function ( shape, options ) {\n\n    \tif ( options === undefined ) options = {};\n    \tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n    \tvar material = options.material;\n    \tvar uvgen = options.UVGenerator === undefined ? ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\n\n    \t//\n\n    \tvar i, l, hole;\n\n    \tvar shapesOffset = this.vertices.length;\n    \tvar shapePoints = shape.extractPoints( curveSegments );\n\n    \tvar vertices = shapePoints.shape;\n    \tvar holes = shapePoints.holes;\n\n    \tvar reverse = ! exports.ShapeUtils.isClockWise( vertices );\n\n    \tif ( reverse ) {\n\n    \t\tvertices = vertices.reverse();\n\n    \t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\n\n    \t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n    \t\t\thole = holes[ i ];\n\n    \t\t\tif ( exports.ShapeUtils.isClockWise( hole ) ) {\n\n    \t\t\t\tholes[ i ] = hole.reverse();\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treverse = false;\n\n    \t}\n\n    \tvar faces = exports.ShapeUtils.triangulateShape( vertices, holes );\n\n    \t// Vertices\n\n    \tfor ( i = 0, l = holes.length; i < l; i ++ ) {\n\n    \t\thole = holes[ i ];\n    \t\tvertices = vertices.concat( hole );\n\n    \t}\n\n    \t//\n\n    \tvar vert, vlen = vertices.length;\n    \tvar face, flen = faces.length;\n\n    \tfor ( i = 0; i < vlen; i ++ ) {\n\n    \t\tvert = vertices[ i ];\n\n    \t\tthis.vertices.push( new Vector3( vert.x, vert.y, 0 ) );\n\n    \t}\n\n    \tfor ( i = 0; i < flen; i ++ ) {\n\n    \t\tface = faces[ i ];\n\n    \t\tvar a = face[ 0 ] + shapesOffset;\n    \t\tvar b = face[ 1 ] + shapesOffset;\n    \t\tvar c = face[ 2 ] + shapesOffset;\n\n    \t\tthis.faces.push( new Face3( a, b, c, null, null, material ) );\n    \t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\n\n    \t}\n\n    };\n\n    /**\n     * @author WestLangley / http://github.com/WestLangley\n     */\n\n    function EdgesGeometry( geometry, thresholdAngle ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n    \tvar thresholdDot = Math.cos( exports.Math.DEG2RAD * thresholdAngle );\n\n    \tvar edge = [ 0, 0 ], hash = {};\n\n    \tfunction sortFunction( a, b ) {\n\n    \t\treturn a - b;\n\n    \t}\n\n    \tvar keys = [ 'a', 'b', 'c' ];\n\n    \tvar geometry2;\n\n    \tif ( (geometry && geometry.isBufferGeometry) ) {\n\n    \t\tgeometry2 = new Geometry();\n    \t\tgeometry2.fromBufferGeometry( geometry );\n\n    \t} else {\n\n    \t\tgeometry2 = geometry.clone();\n\n    \t}\n\n    \tgeometry2.mergeVertices();\n    \tgeometry2.computeFaceNormals();\n\n    \tvar vertices = geometry2.vertices;\n    \tvar faces = geometry2.faces;\n\n    \tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    \t\tvar face = faces[ i ];\n\n    \t\tfor ( var j = 0; j < 3; j ++ ) {\n\n    \t\t\tedge[ 0 ] = face[ keys[ j ] ];\n    \t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\n    \t\t\tedge.sort( sortFunction );\n\n    \t\t\tvar key = edge.toString();\n\n    \t\t\tif ( hash[ key ] === undefined ) {\n\n    \t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\n\n    \t\t\t} else {\n\n    \t\t\t\thash[ key ].face2 = i;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \tvar coords = [];\n\n    \tfor ( var key in hash ) {\n\n    \t\tvar h = hash[ key ];\n\n    \t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\n\n    \t\t\tvar vertex = vertices[ h.vert1 ];\n    \t\t\tcoords.push( vertex.x );\n    \t\t\tcoords.push( vertex.y );\n    \t\t\tcoords.push( vertex.z );\n\n    \t\t\tvertex = vertices[ h.vert2 ];\n    \t\t\tcoords.push( vertex.x );\n    \t\t\tcoords.push( vertex.y );\n    \t\t\tcoords.push( vertex.z );\n\n    \t\t}\n\n    \t}\n\n    \tthis.addAttribute( 'position', new BufferAttribute( new Float32Array( coords ), 3 ) );\n\n    }\n\n    EdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n    EdgesGeometry.prototype.constructor = EdgesGeometry;\n\n    /**\n     * @author Mugen87 / https://github.com/Mugen87\n     */\n\n    function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'CylinderBufferGeometry';\n\n    \tthis.parameters = {\n    \t\tradiusTop: radiusTop,\n    \t\tradiusBottom: radiusBottom,\n    \t\theight: height,\n    \t\tradialSegments: radialSegments,\n    \t\theightSegments: heightSegments,\n    \t\topenEnded: openEnded,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    \tvar scope = this;\n\n    \tradiusTop = radiusTop !== undefined ? radiusTop : 20;\n    \tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\n    \theight = height !== undefined ? height : 100;\n\n    \tradialSegments = Math.floor( radialSegments ) || 8;\n    \theightSegments = Math.floor( heightSegments ) || 1;\n\n    \topenEnded = openEnded !== undefined ? openEnded : false;\n    \tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n    \tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\n\n    \t// used to calculate buffer length\n\n    \tvar nbCap = 0;\n\n    \tif ( openEnded === false ) {\n\n    \t\tif ( radiusTop > 0 ) nbCap ++;\n    \t\tif ( radiusBottom > 0 ) nbCap ++;\n\n    \t}\n\n    \tvar vertexCount = calculateVertexCount();\n    \tvar indexCount = calculateIndexCount();\n\n    \t// buffers\n\n    \tvar indices = new BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\n    \tvar vertices = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar normals = new BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\n    \tvar uvs = new BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\n\n    \t// helper variables\n\n    \tvar index = 0,\n    \t    indexOffset = 0,\n    \t    indexArray = [],\n    \t    halfHeight = height / 2;\n\n    \t// group variables\n    \tvar groupStart = 0;\n\n    \t// generate geometry\n\n    \tgenerateTorso();\n\n    \tif ( openEnded === false ) {\n\n    \t\tif ( radiusTop > 0 ) generateCap( true );\n    \t\tif ( radiusBottom > 0 ) generateCap( false );\n\n    \t}\n\n    \t// build geometry\n\n    \tthis.setIndex( indices );\n    \tthis.addAttribute( 'position', vertices );\n    \tthis.addAttribute( 'normal', normals );\n    \tthis.addAttribute( 'uv', uvs );\n\n    \t// helper functions\n\n    \tfunction calculateVertexCount() {\n\n    \t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\n\n    \t\tif ( openEnded === false ) {\n\n    \t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\n\n    \t\t}\n\n    \t\treturn count;\n\n    \t}\n\n    \tfunction calculateIndexCount() {\n\n    \t\tvar count = radialSegments * heightSegments * 2 * 3;\n\n    \t\tif ( openEnded === false ) {\n\n    \t\t\tcount += radialSegments * nbCap * 3;\n\n    \t\t}\n\n    \t\treturn count;\n\n    \t}\n\n    \tfunction generateTorso() {\n\n    \t\tvar x, y;\n    \t\tvar normal = new Vector3();\n    \t\tvar vertex = new Vector3();\n\n    \t\tvar groupCount = 0;\n\n    \t\t// this will be used to calculate the normal\n    \t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n    \t\t// generate vertices, normals and uvs\n\n    \t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n    \t\t\tvar indexRow = [];\n\n    \t\t\tvar v = y / heightSegments;\n\n    \t\t\t// calculate the radius of the current row\n    \t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n    \t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n    \t\t\t\tvar u = x / radialSegments;\n\n    \t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n    \t\t\t\tvar sinTheta = Math.sin( theta );\n    \t\t\t\tvar cosTheta = Math.cos( theta );\n\n    \t\t\t\t// vertex\n    \t\t\t\tvertex.x = radius * sinTheta;\n    \t\t\t\tvertex.y = - v * height + halfHeight;\n    \t\t\t\tvertex.z = radius * cosTheta;\n    \t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n    \t\t\t\t// normal\n    \t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n    \t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\n\n    \t\t\t\t// uv\n    \t\t\t\tuvs.setXY( index, u, 1 - v );\n\n    \t\t\t\t// save index of vertex in respective row\n    \t\t\t\tindexRow.push( index );\n\n    \t\t\t\t// increase index\n    \t\t\t\tindex ++;\n\n    \t\t\t}\n\n    \t\t\t// now save vertices of the row in our index array\n    \t\t\tindexArray.push( indexRow );\n\n    \t\t}\n\n    \t\t// generate indices\n\n    \t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n    \t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n    \t\t\t\t// we use the index array to access the correct indices\n    \t\t\t\tvar i1 = indexArray[ y ][ x ];\n    \t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\n    \t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\n    \t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\n\n    \t\t\t\t// face one\n    \t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\n    \t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n    \t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n    \t\t\t\t// face two\n    \t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\n    \t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\n    \t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\n\n    \t\t\t\t// update counters\n    \t\t\t\tgroupCount += 6;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// add a group to the geometry. this will ensure multi material support\n    \t\tscope.addGroup( groupStart, groupCount, 0 );\n\n    \t\t// calculate new start value for groups\n    \t\tgroupStart += groupCount;\n\n    \t}\n\n    \tfunction generateCap( top ) {\n\n    \t\tvar x, centerIndexStart, centerIndexEnd;\n\n    \t\tvar uv = new Vector2();\n    \t\tvar vertex = new Vector3();\n\n    \t\tvar groupCount = 0;\n\n    \t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n    \t\tvar sign = ( top === true ) ? 1 : - 1;\n\n    \t\t// save the index of the first center vertex\n    \t\tcenterIndexStart = index;\n\n    \t\t// first we generate the center vertex data of the cap.\n    \t\t// because the geometry needs one set of uvs per face,\n    \t\t// we must generate a center vertex per face/segment\n\n    \t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n    \t\t\t// vertex\n    \t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\n\n    \t\t\t// normal\n    \t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n    \t\t\t// uv\n    \t\t\tuv.x = 0.5;\n    \t\t\tuv.y = 0.5;\n\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\n\n    \t\t\t// increase index\n    \t\t\tindex ++;\n\n    \t\t}\n\n    \t\t// save the index of the last center vertex\n    \t\tcenterIndexEnd = index;\n\n    \t\t// now we generate the surrounding vertices, normals and uvs\n\n    \t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n    \t\t\tvar u = x / radialSegments;\n    \t\t\tvar theta = u * thetaLength + thetaStart;\n\n    \t\t\tvar cosTheta = Math.cos( theta );\n    \t\t\tvar sinTheta = Math.sin( theta );\n\n    \t\t\t// vertex\n    \t\t\tvertex.x = radius * sinTheta;\n    \t\t\tvertex.y = halfHeight * sign;\n    \t\t\tvertex.z = radius * cosTheta;\n    \t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\n\n    \t\t\t// normal\n    \t\t\tnormals.setXYZ( index, 0, sign, 0 );\n\n    \t\t\t// uv\n    \t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n    \t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n    \t\t\tuvs.setXY( index, uv.x, uv.y );\n\n    \t\t\t// increase index\n    \t\t\tindex ++;\n\n    \t\t}\n\n    \t\t// generate indices\n\n    \t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n    \t\t\tvar c = centerIndexStart + x;\n    \t\t\tvar i = centerIndexEnd + x;\n\n    \t\t\tif ( top === true ) {\n\n    \t\t\t\t// face top\n    \t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n    \t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n    \t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n    \t\t\t} else {\n\n    \t\t\t\t// face bottom\n    \t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\n    \t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\n    \t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\n\n    \t\t\t}\n\n    \t\t\t// update counters\n    \t\t\tgroupCount += 3;\n\n    \t\t}\n\n    \t\t// add a group to the geometry. this will ensure multi material support\n    \t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n    \t\t// calculate new start value for groups\n    \t\tgroupStart += groupCount;\n\n    \t}\n\n    }\n\n    CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'CylinderGeometry';\n\n    \tthis.parameters = {\n    \t\tradiusTop: radiusTop,\n    \t\tradiusBottom: radiusBottom,\n    \t\theight: height,\n    \t\tradialSegments: radialSegments,\n    \t\theightSegments: heightSegments,\n    \t\topenEnded: openEnded,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    \tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n    \tthis.mergeVertices();\n\n    }\n\n    CylinderGeometry.prototype = Object.create( Geometry.prototype );\n    CylinderGeometry.prototype.constructor = CylinderGeometry;\n\n    /**\n     * @author abelnation / http://github.com/abelnation\n     */\n\n    function ConeGeometry(\n    \tradius, height,\n    \tradialSegments, heightSegments,\n    \topenEnded, thetaStart, thetaLength ) {\n\n    \tCylinderGeometry.call( this,\n    \t\t0, radius, height,\n    \t\tradialSegments, heightSegments,\n    \t\topenEnded, thetaStart, thetaLength );\n\n    \tthis.type = 'ConeGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\theight: height,\n    \t\tradialSegments: radialSegments,\n    \t\theightSegments: heightSegments,\n    \t\topenEnded: openEnded,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    }\n\n    ConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n    ConeGeometry.prototype.constructor = ConeGeometry;\n\n    /*\n     * @author: abelnation / http://github.com/abelnation\n     */\n\n    function ConeBufferGeometry(\n    \tradius, height,\n    \tradialSegments, heightSegments,\n    \topenEnded, thetaStart, thetaLength ) {\n\n    \tCylinderBufferGeometry.call( this,\n    \t\t0, radius, height,\n    \t\tradialSegments, heightSegments,\n    \t\topenEnded, thetaStart, thetaLength );\n\n    \tthis.type = 'ConeBufferGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\theight: height,\n    \t\tradialSegments: radialSegments,\n    \t\theightSegments: heightSegments,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    }\n\n    ConeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n    /**\n     * @author benaadams / https://twitter.com/ben_a_adams\n     */\n\n    function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'CircleBufferGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\tsegments: segments,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    \tradius = radius || 50;\n    \tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n    \tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n    \tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n    \tvar vertices = segments + 2;\n\n    \tvar positions = new Float32Array( vertices * 3 );\n    \tvar normals = new Float32Array( vertices * 3 );\n    \tvar uvs = new Float32Array( vertices * 2 );\n\n    \t// center data is already zero, but need to set a few extras\n    \tnormals[ 2 ] = 1.0;\n    \tuvs[ 0 ] = 0.5;\n    \tuvs[ 1 ] = 0.5;\n\n    \tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\n\n    \t\tvar segment = thetaStart + s / segments * thetaLength;\n\n    \t\tpositions[ i ] = radius * Math.cos( segment );\n    \t\tpositions[ i + 1 ] = radius * Math.sin( segment );\n\n    \t\tnormals[ i + 2 ] = 1; // normal z\n\n    \t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\n    \t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\n\n    \t}\n\n    \tvar indices = [];\n\n    \tfor ( var i = 1; i <= segments; i ++ ) {\n\n    \t\tindices.push( i, i + 1, 0 );\n\n    \t}\n\n    \tthis.setIndex( new BufferAttribute( new Uint16Array( indices ), 1 ) );\n    \tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n    \tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n    \tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ) );\n\n    \tthis.boundingSphere = new Sphere( new Vector3(), radius );\n\n    }\n\n    CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n    /**\n     * @author hughes\n     */\n\n    function CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'CircleGeometry';\n\n    \tthis.parameters = {\n    \t\tradius: radius,\n    \t\tsegments: segments,\n    \t\tthetaStart: thetaStart,\n    \t\tthetaLength: thetaLength\n    \t};\n\n    \tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\n    }\n\n    CircleGeometry.prototype = Object.create( Geometry.prototype );\n    CircleGeometry.prototype.constructor = CircleGeometry;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\n     */\n\n    function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n    \tGeometry.call( this );\n\n    \tthis.type = 'BoxGeometry';\n\n    \tthis.parameters = {\n    \t\twidth: width,\n    \t\theight: height,\n    \t\tdepth: depth,\n    \t\twidthSegments: widthSegments,\n    \t\theightSegments: heightSegments,\n    \t\tdepthSegments: depthSegments\n    \t};\n\n    \tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n    \tthis.mergeVertices();\n\n    }\n\n    BoxGeometry.prototype = Object.create( Geometry.prototype );\n    BoxGeometry.prototype.constructor = BoxGeometry;\n\n\n\n    var Geometries = Object.freeze({\n    \tWireframeGeometry: WireframeGeometry,\n    \tParametricGeometry: ParametricGeometry,\n    \tTetrahedronGeometry: TetrahedronGeometry,\n    \tOctahedronGeometry: OctahedronGeometry,\n    \tIcosahedronGeometry: IcosahedronGeometry,\n    \tDodecahedronGeometry: DodecahedronGeometry,\n    \tPolyhedronGeometry: PolyhedronGeometry,\n    \tTubeGeometry: TubeGeometry,\n    \tTorusKnotGeometry: TorusKnotGeometry,\n    \tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n    \tTorusGeometry: TorusGeometry,\n    \tTorusBufferGeometry: TorusBufferGeometry,\n    \tTextGeometry: TextGeometry,\n    \tSphereBufferGeometry: SphereBufferGeometry,\n    \tSphereGeometry: SphereGeometry,\n    \tRingGeometry: RingGeometry,\n    \tRingBufferGeometry: RingBufferGeometry,\n    \tPlaneBufferGeometry: PlaneBufferGeometry,\n    \tPlaneGeometry: PlaneGeometry,\n    \tLatheGeometry: LatheGeometry,\n    \tLatheBufferGeometry: LatheBufferGeometry,\n    \tShapeGeometry: ShapeGeometry,\n    \tExtrudeGeometry: ExtrudeGeometry,\n    \tEdgesGeometry: EdgesGeometry,\n    \tConeGeometry: ConeGeometry,\n    \tConeBufferGeometry: ConeBufferGeometry,\n    \tCylinderGeometry: CylinderGeometry,\n    \tCylinderBufferGeometry: CylinderBufferGeometry,\n    \tCircleBufferGeometry: CircleBufferGeometry,\n    \tCircleGeometry: CircleGeometry,\n    \tBoxBufferGeometry: BoxBufferGeometry,\n    \tBoxGeometry: BoxGeometry\n    });\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function ShadowMaterial() {\n\n    \tShaderMaterial.call( this, {\n    \t\tuniforms: exports.UniformsUtils.merge( [\n    \t\t\tUniformsLib[ \"lights\" ],\n    \t\t\t{\n    \t\t\t\topacity: { value: 1.0 }\n    \t\t\t}\n    \t\t] ),\n    \t\tvertexShader: ShaderChunk[ 'shadow_vert' ],\n    \t\tfragmentShader: ShaderChunk[ 'shadow_frag' ]\n    \t} );\n\n    \tthis.lights = true;\n    \tthis.transparent = true;\n\n    \tObject.defineProperties( this, {\n    \t\topacity: {\n    \t\t\tenumerable: true,\n    \t\t\tget: function () {\n    \t\t\t\treturn this.uniforms.opacity.value;\n    \t\t\t},\n    \t\t\tset: function ( value ) {\n    \t\t\t\tthis.uniforms.opacity.value = value;\n    \t\t\t}\n    \t\t}\n    \t} );\n\n    }\n\n    ShadowMaterial.prototype = Object.create( ShaderMaterial.prototype );\n    ShadowMaterial.prototype.constructor = ShadowMaterial;\n\n    ShadowMaterial.prototype.isShadowMaterial = true;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function RawShaderMaterial( parameters ) {\n\n    \tShaderMaterial.call( this, parameters );\n\n    \tthis.type = 'RawShaderMaterial';\n\n    }\n\n    RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n    RawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n    RawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function MultiMaterial( materials ) {\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.type = 'MultiMaterial';\n\n    \tthis.materials = materials instanceof Array ? materials : [];\n\n    \tthis.visible = true;\n\n    }\n\n    MultiMaterial.prototype = {\n\n    \tconstructor: MultiMaterial,\n\n    \tisMultiMaterial: true,\n\n    \ttoJSON: function ( meta ) {\n\n    \t\tvar output = {\n    \t\t\tmetadata: {\n    \t\t\t\tversion: 4.2,\n    \t\t\t\ttype: 'material',\n    \t\t\t\tgenerator: 'MaterialExporter'\n    \t\t\t},\n    \t\t\tuuid: this.uuid,\n    \t\t\ttype: this.type,\n    \t\t\tmaterials: []\n    \t\t};\n\n    \t\tvar materials = this.materials;\n\n    \t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n    \t\t\tvar material = materials[ i ].toJSON( meta );\n    \t\t\tdelete material.metadata;\n\n    \t\t\toutput.materials.push( material );\n\n    \t\t}\n\n    \t\toutput.visible = this.visible;\n\n    \t\treturn output;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\tvar material = new this.constructor();\n\n    \t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\n\n    \t\t\tmaterial.materials.push( this.materials[ i ].clone() );\n\n    \t\t}\n\n    \t\tmaterial.visible = this.visible;\n\n    \t\treturn material;\n\n    \t}\n\n    };\n\n    /**\n     * @author WestLangley / http://github.com/WestLangley\n     *\n     * parameters = {\n     *  color: <hex>,\n     *  roughness: <float>,\n     *  metalness: <float>,\n     *  opacity: <float>,\n     *\n     *  map: new THREE.Texture( <Image> ),\n     *\n     *  lightMap: new THREE.Texture( <Image> ),\n     *  lightMapIntensity: <float>\n     *\n     *  aoMap: new THREE.Texture( <Image> ),\n     *  aoMapIntensity: <float>\n     *\n     *  emissive: <hex>,\n     *  emissiveIntensity: <float>\n     *  emissiveMap: new THREE.Texture( <Image> ),\n     *\n     *  bumpMap: new THREE.Texture( <Image> ),\n     *  bumpScale: <float>,\n     *\n     *  normalMap: new THREE.Texture( <Image> ),\n     *  normalScale: <Vector2>,\n     *\n     *  displacementMap: new THREE.Texture( <Image> ),\n     *  displacementScale: <float>,\n     *  displacementBias: <float>,\n     *\n     *  roughnessMap: new THREE.Texture( <Image> ),\n     *\n     *  metalnessMap: new THREE.Texture( <Image> ),\n     *\n     *  alphaMap: new THREE.Texture( <Image> ),\n     *\n     *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n     *  envMapIntensity: <float>\n     *\n     *  refractionRatio: <float>,\n     *\n     *  wireframe: <boolean>,\n     *  wireframeLinewidth: <float>,\n     *\n     *  skinning: <bool>,\n     *  morphTargets: <bool>,\n     *  morphNormals: <bool>\n     * }\n     */\n\n    function MeshStandardMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.defines = { 'STANDARD': '' };\n\n    \tthis.type = 'MeshStandardMaterial';\n\n    \tthis.color = new Color( 0xffffff ); // diffuse\n    \tthis.roughness = 0.5;\n    \tthis.metalness = 0.5;\n\n    \tthis.map = null;\n\n    \tthis.lightMap = null;\n    \tthis.lightMapIntensity = 1.0;\n\n    \tthis.aoMap = null;\n    \tthis.aoMapIntensity = 1.0;\n\n    \tthis.emissive = new Color( 0x000000 );\n    \tthis.emissiveIntensity = 1.0;\n    \tthis.emissiveMap = null;\n\n    \tthis.bumpMap = null;\n    \tthis.bumpScale = 1;\n\n    \tthis.normalMap = null;\n    \tthis.normalScale = new Vector2( 1, 1 );\n\n    \tthis.displacementMap = null;\n    \tthis.displacementScale = 1;\n    \tthis.displacementBias = 0;\n\n    \tthis.roughnessMap = null;\n\n    \tthis.metalnessMap = null;\n\n    \tthis.alphaMap = null;\n\n    \tthis.envMap = null;\n    \tthis.envMapIntensity = 1.0;\n\n    \tthis.refractionRatio = 0.98;\n\n    \tthis.wireframe = false;\n    \tthis.wireframeLinewidth = 1;\n    \tthis.wireframeLinecap = 'round';\n    \tthis.wireframeLinejoin = 'round';\n\n    \tthis.skinning = false;\n    \tthis.morphTargets = false;\n    \tthis.morphNormals = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    MeshStandardMaterial.prototype = Object.create( Material.prototype );\n    MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n    MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n    MeshStandardMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.defines = { 'STANDARD': '' };\n\n    \tthis.color.copy( source.color );\n    \tthis.roughness = source.roughness;\n    \tthis.metalness = source.metalness;\n\n    \tthis.map = source.map;\n\n    \tthis.lightMap = source.lightMap;\n    \tthis.lightMapIntensity = source.lightMapIntensity;\n\n    \tthis.aoMap = source.aoMap;\n    \tthis.aoMapIntensity = source.aoMapIntensity;\n\n    \tthis.emissive.copy( source.emissive );\n    \tthis.emissiveMap = source.emissiveMap;\n    \tthis.emissiveIntensity = source.emissiveIntensity;\n\n    \tthis.bumpMap = source.bumpMap;\n    \tthis.bumpScale = source.bumpScale;\n\n    \tthis.normalMap = source.normalMap;\n    \tthis.normalScale.copy( source.normalScale );\n\n    \tthis.displacementMap = source.displacementMap;\n    \tthis.displacementScale = source.displacementScale;\n    \tthis.displacementBias = source.displacementBias;\n\n    \tthis.roughnessMap = source.roughnessMap;\n\n    \tthis.metalnessMap = source.metalnessMap;\n\n    \tthis.alphaMap = source.alphaMap;\n\n    \tthis.envMap = source.envMap;\n    \tthis.envMapIntensity = source.envMapIntensity;\n\n    \tthis.refractionRatio = source.refractionRatio;\n\n    \tthis.wireframe = source.wireframe;\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\n    \tthis.wireframeLinecap = source.wireframeLinecap;\n    \tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n    \tthis.skinning = source.skinning;\n    \tthis.morphTargets = source.morphTargets;\n    \tthis.morphNormals = source.morphNormals;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author WestLangley / http://github.com/WestLangley\n     *\n     * parameters = {\n     *  reflectivity: <float>\n     * }\n     */\n\n    function MeshPhysicalMaterial( parameters ) {\n\n    \tMeshStandardMaterial.call( this );\n\n    \tthis.defines = { 'PHYSICAL': '' };\n\n    \tthis.type = 'MeshPhysicalMaterial';\n\n    \tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n    \tthis.clearCoat = 0.0;\n    \tthis.clearCoatRoughness = 0.0;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n    MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n    MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n    MeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n    \tMeshStandardMaterial.prototype.copy.call( this, source );\n\n    \tthis.defines = { 'PHYSICAL': '' };\n\n    \tthis.reflectivity = source.reflectivity;\n\n    \tthis.clearCoat = source.clearCoat;\n    \tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * parameters = {\n     *  color: <hex>,\n     *  specular: <hex>,\n     *  shininess: <float>,\n     *  opacity: <float>,\n     *\n     *  map: new THREE.Texture( <Image> ),\n     *\n     *  lightMap: new THREE.Texture( <Image> ),\n     *  lightMapIntensity: <float>\n     *\n     *  aoMap: new THREE.Texture( <Image> ),\n     *  aoMapIntensity: <float>\n     *\n     *  emissive: <hex>,\n     *  emissiveIntensity: <float>\n     *  emissiveMap: new THREE.Texture( <Image> ),\n     *\n     *  bumpMap: new THREE.Texture( <Image> ),\n     *  bumpScale: <float>,\n     *\n     *  normalMap: new THREE.Texture( <Image> ),\n     *  normalScale: <Vector2>,\n     *\n     *  displacementMap: new THREE.Texture( <Image> ),\n     *  displacementScale: <float>,\n     *  displacementBias: <float>,\n     *\n     *  specularMap: new THREE.Texture( <Image> ),\n     *\n     *  alphaMap: new THREE.Texture( <Image> ),\n     *\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n     *  combine: THREE.Multiply,\n     *  reflectivity: <float>,\n     *  refractionRatio: <float>,\n     *\n     *  wireframe: <boolean>,\n     *  wireframeLinewidth: <float>,\n     *\n     *  skinning: <bool>,\n     *  morphTargets: <bool>,\n     *  morphNormals: <bool>\n     * }\n     */\n\n    function MeshPhongMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'MeshPhongMaterial';\n\n    \tthis.color = new Color( 0xffffff ); // diffuse\n    \tthis.specular = new Color( 0x111111 );\n    \tthis.shininess = 30;\n\n    \tthis.map = null;\n\n    \tthis.lightMap = null;\n    \tthis.lightMapIntensity = 1.0;\n\n    \tthis.aoMap = null;\n    \tthis.aoMapIntensity = 1.0;\n\n    \tthis.emissive = new Color( 0x000000 );\n    \tthis.emissiveIntensity = 1.0;\n    \tthis.emissiveMap = null;\n\n    \tthis.bumpMap = null;\n    \tthis.bumpScale = 1;\n\n    \tthis.normalMap = null;\n    \tthis.normalScale = new Vector2( 1, 1 );\n\n    \tthis.displacementMap = null;\n    \tthis.displacementScale = 1;\n    \tthis.displacementBias = 0;\n\n    \tthis.specularMap = null;\n\n    \tthis.alphaMap = null;\n\n    \tthis.envMap = null;\n    \tthis.combine = MultiplyOperation;\n    \tthis.reflectivity = 1;\n    \tthis.refractionRatio = 0.98;\n\n    \tthis.wireframe = false;\n    \tthis.wireframeLinewidth = 1;\n    \tthis.wireframeLinecap = 'round';\n    \tthis.wireframeLinejoin = 'round';\n\n    \tthis.skinning = false;\n    \tthis.morphTargets = false;\n    \tthis.morphNormals = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    MeshPhongMaterial.prototype = Object.create( Material.prototype );\n    MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n    MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n    MeshPhongMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.color.copy( source.color );\n    \tthis.specular.copy( source.specular );\n    \tthis.shininess = source.shininess;\n\n    \tthis.map = source.map;\n\n    \tthis.lightMap = source.lightMap;\n    \tthis.lightMapIntensity = source.lightMapIntensity;\n\n    \tthis.aoMap = source.aoMap;\n    \tthis.aoMapIntensity = source.aoMapIntensity;\n\n    \tthis.emissive.copy( source.emissive );\n    \tthis.emissiveMap = source.emissiveMap;\n    \tthis.emissiveIntensity = source.emissiveIntensity;\n\n    \tthis.bumpMap = source.bumpMap;\n    \tthis.bumpScale = source.bumpScale;\n\n    \tthis.normalMap = source.normalMap;\n    \tthis.normalScale.copy( source.normalScale );\n\n    \tthis.displacementMap = source.displacementMap;\n    \tthis.displacementScale = source.displacementScale;\n    \tthis.displacementBias = source.displacementBias;\n\n    \tthis.specularMap = source.specularMap;\n\n    \tthis.alphaMap = source.alphaMap;\n\n    \tthis.envMap = source.envMap;\n    \tthis.combine = source.combine;\n    \tthis.reflectivity = source.reflectivity;\n    \tthis.refractionRatio = source.refractionRatio;\n\n    \tthis.wireframe = source.wireframe;\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\n    \tthis.wireframeLinecap = source.wireframeLinecap;\n    \tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n    \tthis.skinning = source.skinning;\n    \tthis.morphTargets = source.morphTargets;\n    \tthis.morphNormals = source.morphNormals;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     *\n     * parameters = {\n     *  opacity: <float>,\n     *\n     *  wireframe: <boolean>,\n     *  wireframeLinewidth: <float>\n     * }\n     */\n\n    function MeshNormalMaterial( parameters ) {\n\n    \tMaterial.call( this, parameters );\n\n    \tthis.type = 'MeshNormalMaterial';\n\n    \tthis.wireframe = false;\n    \tthis.wireframeLinewidth = 1;\n\n    \tthis.fog = false;\n    \tthis.lights = false;\n    \tthis.morphTargets = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    MeshNormalMaterial.prototype = Object.create( Material.prototype );\n    MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n    MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n    MeshNormalMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.wireframe = source.wireframe;\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * parameters = {\n     *  color: <hex>,\n     *  opacity: <float>,\n     *\n     *  map: new THREE.Texture( <Image> ),\n     *\n     *  lightMap: new THREE.Texture( <Image> ),\n     *  lightMapIntensity: <float>\n     *\n     *  aoMap: new THREE.Texture( <Image> ),\n     *  aoMapIntensity: <float>\n     *\n     *  emissive: <hex>,\n     *  emissiveIntensity: <float>\n     *  emissiveMap: new THREE.Texture( <Image> ),\n     *\n     *  specularMap: new THREE.Texture( <Image> ),\n     *\n     *  alphaMap: new THREE.Texture( <Image> ),\n     *\n     *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n     *  combine: THREE.Multiply,\n     *  reflectivity: <float>,\n     *  refractionRatio: <float>,\n     *\n     *  wireframe: <boolean>,\n     *  wireframeLinewidth: <float>,\n     *\n     *  skinning: <bool>,\n     *  morphTargets: <bool>,\n     *  morphNormals: <bool>\n     * }\n     */\n\n    function MeshLambertMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'MeshLambertMaterial';\n\n    \tthis.color = new Color( 0xffffff ); // diffuse\n\n    \tthis.map = null;\n\n    \tthis.lightMap = null;\n    \tthis.lightMapIntensity = 1.0;\n\n    \tthis.aoMap = null;\n    \tthis.aoMapIntensity = 1.0;\n\n    \tthis.emissive = new Color( 0x000000 );\n    \tthis.emissiveIntensity = 1.0;\n    \tthis.emissiveMap = null;\n\n    \tthis.specularMap = null;\n\n    \tthis.alphaMap = null;\n\n    \tthis.envMap = null;\n    \tthis.combine = MultiplyOperation;\n    \tthis.reflectivity = 1;\n    \tthis.refractionRatio = 0.98;\n\n    \tthis.wireframe = false;\n    \tthis.wireframeLinewidth = 1;\n    \tthis.wireframeLinecap = 'round';\n    \tthis.wireframeLinejoin = 'round';\n\n    \tthis.skinning = false;\n    \tthis.morphTargets = false;\n    \tthis.morphNormals = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    MeshLambertMaterial.prototype = Object.create( Material.prototype );\n    MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n    MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n    MeshLambertMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.color.copy( source.color );\n\n    \tthis.map = source.map;\n\n    \tthis.lightMap = source.lightMap;\n    \tthis.lightMapIntensity = source.lightMapIntensity;\n\n    \tthis.aoMap = source.aoMap;\n    \tthis.aoMapIntensity = source.aoMapIntensity;\n\n    \tthis.emissive.copy( source.emissive );\n    \tthis.emissiveMap = source.emissiveMap;\n    \tthis.emissiveIntensity = source.emissiveIntensity;\n\n    \tthis.specularMap = source.specularMap;\n\n    \tthis.alphaMap = source.alphaMap;\n\n    \tthis.envMap = source.envMap;\n    \tthis.combine = source.combine;\n    \tthis.reflectivity = source.reflectivity;\n    \tthis.refractionRatio = source.refractionRatio;\n\n    \tthis.wireframe = source.wireframe;\n    \tthis.wireframeLinewidth = source.wireframeLinewidth;\n    \tthis.wireframeLinecap = source.wireframeLinecap;\n    \tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n    \tthis.skinning = source.skinning;\n    \tthis.morphTargets = source.morphTargets;\n    \tthis.morphNormals = source.morphNormals;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     *\n     * parameters = {\n     *  color: <hex>,\n     *  opacity: <float>,\n     *\n     *  linewidth: <float>,\n     *\n     *  scale: <float>,\n     *  dashSize: <float>,\n     *  gapSize: <float>\n     * }\n     */\n\n    function LineDashedMaterial( parameters ) {\n\n    \tMaterial.call( this );\n\n    \tthis.type = 'LineDashedMaterial';\n\n    \tthis.color = new Color( 0xffffff );\n\n    \tthis.linewidth = 1;\n\n    \tthis.scale = 1;\n    \tthis.dashSize = 3;\n    \tthis.gapSize = 1;\n\n    \tthis.lights = false;\n\n    \tthis.setValues( parameters );\n\n    }\n\n    LineDashedMaterial.prototype = Object.create( Material.prototype );\n    LineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n    LineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n    LineDashedMaterial.prototype.copy = function ( source ) {\n\n    \tMaterial.prototype.copy.call( this, source );\n\n    \tthis.color.copy( source.color );\n\n    \tthis.linewidth = source.linewidth;\n\n    \tthis.scale = source.scale;\n    \tthis.dashSize = source.dashSize;\n    \tthis.gapSize = source.gapSize;\n\n    \treturn this;\n\n    };\n\n\n\n    var Materials = Object.freeze({\n    \tShadowMaterial: ShadowMaterial,\n    \tSpriteMaterial: SpriteMaterial,\n    \tRawShaderMaterial: RawShaderMaterial,\n    \tShaderMaterial: ShaderMaterial,\n    \tPointsMaterial: PointsMaterial,\n    \tMultiMaterial: MultiMaterial,\n    \tMeshPhysicalMaterial: MeshPhysicalMaterial,\n    \tMeshStandardMaterial: MeshStandardMaterial,\n    \tMeshPhongMaterial: MeshPhongMaterial,\n    \tMeshNormalMaterial: MeshNormalMaterial,\n    \tMeshLambertMaterial: MeshLambertMaterial,\n    \tMeshDepthMaterial: MeshDepthMaterial,\n    \tMeshBasicMaterial: MeshBasicMaterial,\n    \tLineDashedMaterial: LineDashedMaterial,\n    \tLineBasicMaterial: LineBasicMaterial,\n    \tMaterial: Material\n    });\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    exports.Cache = {\n\n    \tenabled: false,\n\n    \tfiles: {},\n\n    \tadd: function ( key, file ) {\n\n    \t\tif ( this.enabled === false ) return;\n\n    \t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n    \t\tthis.files[ key ] = file;\n\n    \t},\n\n    \tget: function ( key ) {\n\n    \t\tif ( this.enabled === false ) return;\n\n    \t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n    \t\treturn this.files[ key ];\n\n    \t},\n\n    \tremove: function ( key ) {\n\n    \t\tdelete this.files[ key ];\n\n    \t},\n\n    \tclear: function () {\n\n    \t\tthis.files = {};\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function LoadingManager( onLoad, onProgress, onError ) {\n\n    \tvar scope = this;\n\n    \tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\n\n    \tthis.onStart = undefined;\n    \tthis.onLoad = onLoad;\n    \tthis.onProgress = onProgress;\n    \tthis.onError = onError;\n\n    \tthis.itemStart = function ( url ) {\n\n    \t\titemsTotal ++;\n\n    \t\tif ( isLoading === false ) {\n\n    \t\t\tif ( scope.onStart !== undefined ) {\n\n    \t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tisLoading = true;\n\n    \t};\n\n    \tthis.itemEnd = function ( url ) {\n\n    \t\titemsLoaded ++;\n\n    \t\tif ( scope.onProgress !== undefined ) {\n\n    \t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n    \t\t}\n\n    \t\tif ( itemsLoaded === itemsTotal ) {\n\n    \t\t\tisLoading = false;\n\n    \t\t\tif ( scope.onLoad !== undefined ) {\n\n    \t\t\t\tscope.onLoad();\n\n    \t\t\t}\n\n    \t\t}\n\n    \t};\n\n    \tthis.itemError = function ( url ) {\n\n    \t\tif ( scope.onError !== undefined ) {\n\n    \t\t\tscope.onError( url );\n\n    \t\t}\n\n    \t};\n\n    }\n\n    exports.DefaultLoadingManager = new LoadingManager();\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function XHRLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    }\n\n    Object.assign( XHRLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tif ( this.path !== undefined ) url = this.path + url;\n\n    \t\tvar scope = this;\n\n    \t\tvar cached = exports.Cache.get( url );\n\n    \t\tif ( cached !== undefined ) {\n\n    \t\t\tscope.manager.itemStart( url );\n\n    \t\t\tsetTimeout( function () {\n\n    \t\t\t\tif ( onLoad ) onLoad( cached );\n\n    \t\t\t\tscope.manager.itemEnd( url );\n\n    \t\t\t}, 0 );\n\n    \t\t\treturn cached;\n\n    \t\t}\n\n    \t\tvar request = new XMLHttpRequest();\n    \t\trequest.open( 'GET', url, true );\n\n    \t\trequest.addEventListener( 'load', function ( event ) {\n\n    \t\t\tvar response = event.target.response;\n\n    \t\t\texports.Cache.add( url, response );\n\n    \t\t\tif ( this.status === 200 ) {\n\n    \t\t\t\tif ( onLoad ) onLoad( response );\n\n    \t\t\t\tscope.manager.itemEnd( url );\n\n    \t\t\t} else if ( this.status === 0 ) {\n\n    \t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n    \t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n    \t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\n\n    \t\t\t\tif ( onLoad ) onLoad( response );\n\n    \t\t\t\tscope.manager.itemEnd( url );\n\n    \t\t\t} else {\n\n    \t\t\t\tif ( onError ) onError( event );\n\n    \t\t\t\tscope.manager.itemError( url );\n\n    \t\t\t}\n\n    \t\t}, false );\n\n    \t\tif ( onProgress !== undefined ) {\n\n    \t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n    \t\t\t\tonProgress( event );\n\n    \t\t\t}, false );\n\n    \t\t}\n\n    \t\trequest.addEventListener( 'error', function ( event ) {\n\n    \t\t\tif ( onError ) onError( event );\n\n    \t\t\tscope.manager.itemError( url );\n\n    \t\t}, false );\n\n    \t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n    \t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n    \t\tif ( request.overrideMimeType ) request.overrideMimeType( 'text/plain' );\n\n    \t\trequest.send( null );\n\n    \t\tscope.manager.itemStart( url );\n\n    \t\treturn request;\n\n    \t},\n\n    \tsetPath: function ( value ) {\n\n    \t\tthis.path = value;\n    \t\treturn this;\n\n    \t},\n\n    \tsetResponseType: function ( value ) {\n\n    \t\tthis.responseType = value;\n    \t\treturn this;\n\n    \t},\n\n    \tsetWithCredentials: function ( value ) {\n\n    \t\tthis.withCredentials = value;\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     *\n     * Abstract Base class to block based textures loader (dds, pvr, ...)\n     */\n\n    function CompressedTextureLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    \t// override in sub classes\n    \tthis._parser = null;\n\n    }\n\n    Object.assign( CompressedTextureLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tvar scope = this;\n\n    \t\tvar images = [];\n\n    \t\tvar texture = new CompressedTexture();\n    \t\ttexture.image = images;\n\n    \t\tvar loader = new XHRLoader( this.manager );\n    \t\tloader.setPath( this.path );\n    \t\tloader.setResponseType( 'arraybuffer' );\n\n    \t\tfunction loadTexture( i ) {\n\n    \t\t\tloader.load( url[ i ], function ( buffer ) {\n\n    \t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n    \t\t\t\timages[ i ] = {\n    \t\t\t\t\twidth: texDatas.width,\n    \t\t\t\t\theight: texDatas.height,\n    \t\t\t\t\tformat: texDatas.format,\n    \t\t\t\t\tmipmaps: texDatas.mipmaps\n    \t\t\t\t};\n\n    \t\t\t\tloaded += 1;\n\n    \t\t\t\tif ( loaded === 6 ) {\n\n    \t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n    \t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n    \t\t\t\t\ttexture.format = texDatas.format;\n    \t\t\t\t\ttexture.needsUpdate = true;\n\n    \t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n    \t\t\t\t}\n\n    \t\t\t}, onProgress, onError );\n\n    \t\t}\n\n    \t\tif ( Array.isArray( url ) ) {\n\n    \t\t\tvar loaded = 0;\n\n    \t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n    \t\t\t\tloadTexture( i );\n\n    \t\t\t}\n\n    \t\t} else {\n\n    \t\t\t// compressed cubemap texture stored in a single DDS file\n\n    \t\t\tloader.load( url, function ( buffer ) {\n\n    \t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n    \t\t\t\tif ( texDatas.isCubemap ) {\n\n    \t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n    \t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n    \t\t\t\t\t\timages[ f ] = { mipmaps : [] };\n\n    \t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n    \t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n    \t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n    \t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n    \t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\ttexture.image.width = texDatas.width;\n    \t\t\t\t\ttexture.image.height = texDatas.height;\n    \t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n    \t\t\t\t\ttexture.minFilter = LinearFilter;\n\n    \t\t\t\t}\n\n    \t\t\t\ttexture.format = texDatas.format;\n    \t\t\t\ttexture.needsUpdate = true;\n\n    \t\t\t\tif ( onLoad ) onLoad( texture );\n\n    \t\t\t}, onProgress, onError );\n\n    \t\t}\n\n    \t\treturn texture;\n\n    \t},\n\n    \tsetPath: function ( value ) {\n\n    \t\tthis.path = value;\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author Nikos M. / https://github.com/foo123/\n     *\n     * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n     */\n\n    var DataTextureLoader = BinaryTextureLoader;\n    function BinaryTextureLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    \t// override in sub classes\n    \tthis._parser = null;\n\n    }\n\n    Object.assign( BinaryTextureLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tvar scope = this;\n\n    \t\tvar texture = new DataTexture();\n\n    \t\tvar loader = new XHRLoader( this.manager );\n    \t\tloader.setResponseType( 'arraybuffer' );\n\n    \t\tloader.load( url, function ( buffer ) {\n\n    \t\t\tvar texData = scope._parser( buffer );\n\n    \t\t\tif ( ! texData ) return;\n\n    \t\t\tif ( undefined !== texData.image ) {\n\n    \t\t\t\ttexture.image = texData.image;\n\n    \t\t\t} else if ( undefined !== texData.data ) {\n\n    \t\t\t\ttexture.image.width = texData.width;\n    \t\t\t\ttexture.image.height = texData.height;\n    \t\t\t\ttexture.image.data = texData.data;\n\n    \t\t\t}\n\n    \t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n    \t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n    \t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n    \t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n    \t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n    \t\t\tif ( undefined !== texData.format ) {\n\n    \t\t\t\ttexture.format = texData.format;\n\n    \t\t\t}\n    \t\t\tif ( undefined !== texData.type ) {\n\n    \t\t\t\ttexture.type = texData.type;\n\n    \t\t\t}\n\n    \t\t\tif ( undefined !== texData.mipmaps ) {\n\n    \t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n    \t\t\t}\n\n    \t\t\tif ( 1 === texData.mipmapCount ) {\n\n    \t\t\t\ttexture.minFilter = LinearFilter;\n\n    \t\t\t}\n\n    \t\t\ttexture.needsUpdate = true;\n\n    \t\t\tif ( onLoad ) onLoad( texture, texData );\n\n    \t\t}, onProgress, onError );\n\n\n    \t\treturn texture;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function ImageLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    }\n\n    Object.assign( ImageLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tvar scope = this;\n\n    \t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n    \t\timage.onload = function () {\n\n    \t\t\timage.onload = null;\n\n    \t\t\tURL.revokeObjectURL( image.src );\n\n    \t\t\tif ( onLoad ) onLoad( image );\n\n    \t\t\tscope.manager.itemEnd( url );\n\n    \t\t};\n\n    \t\tif ( url.indexOf( 'data:' ) === 0 ) {\n\n    \t\t\timage.src = url;\n\n    \t\t} else {\n\n    \t\t\tvar loader = new XHRLoader();\n    \t\t\tloader.setPath( this.path );\n    \t\t\tloader.setResponseType( 'blob' );\n    \t\t\tloader.setWithCredentials( this.withCredentials );\n    \t\t\tloader.load( url, function ( blob ) {\n\n    \t\t\t\timage.src = URL.createObjectURL( blob );\n\n    \t\t\t}, onProgress, onError );\n\n    \t\t}\n\n    \t\tscope.manager.itemStart( url );\n\n    \t\treturn image;\n\n    \t},\n\n    \tsetCrossOrigin: function ( value ) {\n\n    \t\tthis.crossOrigin = value;\n    \t\treturn this;\n\n    \t},\n\n    \tsetWithCredentials: function ( value ) {\n\n    \t\tthis.withCredentials = value;\n    \t\treturn this;\n\n    \t},\n\n    \tsetPath: function ( value ) {\n\n    \t\tthis.path = value;\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function CubeTextureLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    }\n\n    Object.assign( CubeTextureLoader.prototype, {\n\n    \tload: function ( urls, onLoad, onProgress, onError ) {\n\n    \t\tvar texture = new CubeTexture();\n\n    \t\tvar loader = new ImageLoader( this.manager );\n    \t\tloader.setCrossOrigin( this.crossOrigin );\n    \t\tloader.setPath( this.path );\n\n    \t\tvar loaded = 0;\n\n    \t\tfunction loadTexture( i ) {\n\n    \t\t\tloader.load( urls[ i ], function ( image ) {\n\n    \t\t\t\ttexture.images[ i ] = image;\n\n    \t\t\t\tloaded ++;\n\n    \t\t\t\tif ( loaded === 6 ) {\n\n    \t\t\t\t\ttexture.needsUpdate = true;\n\n    \t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n    \t\t\t\t}\n\n    \t\t\t}, undefined, onError );\n\n    \t\t}\n\n    \t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n    \t\t\tloadTexture( i );\n\n    \t\t}\n\n    \t\treturn texture;\n\n    \t},\n\n    \tsetCrossOrigin: function ( value ) {\n\n    \t\tthis.crossOrigin = value;\n    \t\treturn this;\n\n    \t},\n\n    \tsetPath: function ( value ) {\n\n    \t\tthis.path = value;\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function TextureLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    }\n\n    Object.assign( TextureLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tvar texture = new Texture();\n\n    \t\tvar loader = new ImageLoader( this.manager );\n    \t\tloader.setCrossOrigin( this.crossOrigin );\n    \t\tloader.setWithCredentials( this.withCredentials );\n    \t\tloader.setPath( this.path );\n    \t\tloader.load( url, function ( image ) {\n\n    \t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n    \t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n    \t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n    \t\t\ttexture.image = image;\n    \t\t\ttexture.needsUpdate = true;\n\n    \t\t\tif ( onLoad !== undefined ) {\n\n    \t\t\t\tonLoad( texture );\n\n    \t\t\t}\n\n    \t\t}, onProgress, onError );\n\n    \t\treturn texture;\n\n    \t},\n\n    \tsetCrossOrigin: function ( value ) {\n\n    \t\tthis.crossOrigin = value;\n    \t\treturn this;\n\n    \t},\n\n    \tsetWithCredentials: function ( value ) {\n\n    \t\tthis.withCredentials = value;\n    \t\treturn this;\n\n    \t},\n\n    \tsetPath: function ( value ) {\n\n    \t\tthis.path = value;\n    \t\treturn this;\n\n    \t}\n\n\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Light( color, intensity ) {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Light';\n\n    \tthis.color = new Color( color );\n    \tthis.intensity = intensity !== undefined ? intensity : 1;\n\n    \tthis.receiveShadow = undefined;\n\n    }\n\n    Light.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: Light,\n\n    \tisLight: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tObject3D.prototype.copy.call( this, source );\n\n    \t\tthis.color.copy( source.color );\n    \t\tthis.intensity = source.intensity;\n\n    \t\treturn this;\n\n    \t},\n\n    \ttoJSON: function ( meta ) {\n\n    \t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n    \t\tdata.object.color = this.color.getHex();\n    \t\tdata.object.intensity = this.intensity;\n\n    \t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n    \t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n    \t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n    \t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n    \t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n    \t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n    \t\treturn data;\n\n    \t}\n\n    } );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function HemisphereLight( skyColor, groundColor, intensity ) {\n\n    \tLight.call( this, skyColor, intensity );\n\n    \tthis.type = 'HemisphereLight';\n\n    \tthis.castShadow = undefined;\n\n    \tthis.position.copy( Object3D.DefaultUp );\n    \tthis.updateMatrix();\n\n    \tthis.groundColor = new Color( groundColor );\n\n    }\n\n    HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n    \tconstructor: HemisphereLight,\n\n    \tisHemisphereLight: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tLight.prototype.copy.call( this, source );\n\n    \t\tthis.groundColor.copy( source.groundColor );\n\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function LightShadow( camera ) {\n\n    \tthis.camera = camera;\n\n    \tthis.bias = 0;\n    \tthis.radius = 1;\n\n    \tthis.mapSize = new Vector2( 512, 512 );\n\n    \tthis.map = null;\n    \tthis.matrix = new Matrix4();\n\n    }\n\n    Object.assign( LightShadow.prototype, {\n\n    \tcopy: function ( source ) {\n\n    \t\tthis.camera = source.camera.clone();\n\n    \t\tthis.bias = source.bias;\n    \t\tthis.radius = source.radius;\n\n    \t\tthis.mapSize.copy( source.mapSize );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \ttoJSON: function () {\n\n    \t\tvar object = {};\n\n    \t\tif ( this.bias !== 0 ) object.bias = this.bias;\n    \t\tif ( this.radius !== 1 ) object.radius = this.radius;\n    \t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n    \t\tobject.camera = this.camera.toJSON( false ).object;\n    \t\tdelete object.camera.matrix;\n\n    \t\treturn object;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function SpotLightShadow() {\n\n    \tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n    }\n\n    SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n    \tconstructor: SpotLightShadow,\n\n    \tisSpotLightShadow: true,\n\n    \tupdate: function ( light ) {\n\n    \t\tvar fov = exports.Math.RAD2DEG * 2 * light.angle;\n    \t\tvar aspect = this.mapSize.width / this.mapSize.height;\n    \t\tvar far = light.distance || 500;\n\n    \t\tvar camera = this.camera;\n\n    \t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n    \t\t\tcamera.fov = fov;\n    \t\t\tcamera.aspect = aspect;\n    \t\t\tcamera.far = far;\n    \t\t\tcamera.updateProjectionMatrix();\n\n    \t\t}\n\n    \t}\n\n    } );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n    \tLight.call( this, color, intensity );\n\n    \tthis.type = 'SpotLight';\n\n    \tthis.position.copy( Object3D.DefaultUp );\n    \tthis.updateMatrix();\n\n    \tthis.target = new Object3D();\n\n    \tObject.defineProperty( this, 'power', {\n    \t\tget: function () {\n    \t\t\t// intensity = power per solid angle.\n    \t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n    \t\t\treturn this.intensity * Math.PI;\n    \t\t},\n    \t\tset: function ( power ) {\n    \t\t\t// intensity = power per solid angle.\n    \t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n    \t\t\tthis.intensity = power / Math.PI;\n    \t\t}\n    \t} );\n\n    \tthis.distance = ( distance !== undefined ) ? distance : 0;\n    \tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n    \tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n    \tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n    \tthis.shadow = new SpotLightShadow();\n\n    }\n\n    SpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n    \tconstructor: SpotLight,\n\n    \tisSpotLight: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tLight.prototype.copy.call( this, source );\n\n    \t\tthis.distance = source.distance;\n    \t\tthis.angle = source.angle;\n    \t\tthis.penumbra = source.penumbra;\n    \t\tthis.decay = source.decay;\n\n    \t\tthis.target = source.target.clone();\n\n    \t\tthis.shadow = source.shadow.clone();\n\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n\n    function PointLight( color, intensity, distance, decay ) {\n\n    \tLight.call( this, color, intensity );\n\n    \tthis.type = 'PointLight';\n\n    \tObject.defineProperty( this, 'power', {\n    \t\tget: function () {\n    \t\t\t// intensity = power per solid angle.\n    \t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n    \t\t\treturn this.intensity * 4 * Math.PI;\n\n    \t\t},\n    \t\tset: function ( power ) {\n    \t\t\t// intensity = power per solid angle.\n    \t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n    \t\t\tthis.intensity = power / ( 4 * Math.PI );\n    \t\t}\n    \t} );\n\n    \tthis.distance = ( distance !== undefined ) ? distance : 0;\n    \tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n    \tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n    }\n\n    PointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n    \tconstructor: PointLight,\n\n    \tisPointLight: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tLight.prototype.copy.call( this, source );\n\n    \t\tthis.distance = source.distance;\n    \t\tthis.decay = source.decay;\n\n    \t\tthis.shadow = source.shadow.clone();\n\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function DirectionalLightShadow( light ) {\n\n    \tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n    }\n\n    DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n    \tconstructor: DirectionalLightShadow\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function DirectionalLight( color, intensity ) {\n\n    \tLight.call( this, color, intensity );\n\n    \tthis.type = 'DirectionalLight';\n\n    \tthis.position.copy( Object3D.DefaultUp );\n    \tthis.updateMatrix();\n\n    \tthis.target = new Object3D();\n\n    \tthis.shadow = new DirectionalLightShadow();\n\n    }\n\n    DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n    \tconstructor: DirectionalLight,\n\n    \tisDirectionalLight: true,\n\n    \tcopy: function ( source ) {\n\n    \t\tLight.prototype.copy.call( this, source );\n\n    \t\tthis.target = source.target.clone();\n\n    \t\tthis.shadow = source.shadow.clone();\n\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function AmbientLight( color, intensity ) {\n\n    \tLight.call( this, color, intensity );\n\n    \tthis.type = 'AmbientLight';\n\n    \tthis.castShadow = undefined;\n\n    }\n\n    AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n    \tconstructor: AmbientLight,\n\n    \tisAmbientLight: true,\n\n    } );\n\n    /**\n     * @author tschw\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     */\n\n    exports.AnimationUtils = {\n\n    \t// same as Array.prototype.slice, but also works on typed arrays\n    \tarraySlice: function( array, from, to ) {\n\n    \t\tif ( exports.AnimationUtils.isTypedArray( array ) ) {\n\n    \t\t\treturn new array.constructor( array.subarray( from, to ) );\n\n    \t\t}\n\n    \t\treturn array.slice( from, to );\n\n    \t},\n\n    \t// converts an array to a specific type\n    \tconvertArray: function( array, type, forceClone ) {\n\n    \t\tif ( ! array || // let 'undefined' and 'null' pass\n    \t\t\t\t! forceClone && array.constructor === type ) return array;\n\n    \t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n    \t\t\treturn new type( array ); // create typed array\n\n    \t\t}\n\n    \t\treturn Array.prototype.slice.call( array ); // create Array\n\n    \t},\n\n    \tisTypedArray: function( object ) {\n\n    \t\treturn ArrayBuffer.isView( object ) &&\n    \t\t\t\t! ( object instanceof DataView );\n\n    \t},\n\n    \t// returns an array by which times and values can be sorted\n    \tgetKeyframeOrder: function( times ) {\n\n    \t\tfunction compareTime( i, j ) {\n\n    \t\t\treturn times[ i ] - times[ j ];\n\n    \t\t}\n\n    \t\tvar n = times.length;\n    \t\tvar result = new Array( n );\n    \t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n    \t\tresult.sort( compareTime );\n\n    \t\treturn result;\n\n    \t},\n\n    \t// uses the array previously returned by 'getKeyframeOrder' to sort data\n    \tsortedArray: function( values, stride, order ) {\n\n    \t\tvar nValues = values.length;\n    \t\tvar result = new values.constructor( nValues );\n\n    \t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n    \t\t\tvar srcOffset = order[ i ] * stride;\n\n    \t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n    \t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn result;\n\n    \t},\n\n    \t// function for parsing AOS keyframe formats\n    \tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\n\n    \t\tvar i = 1, key = jsonKeys[ 0 ];\n\n    \t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n    \t\t\tkey = jsonKeys[ i ++ ];\n\n    \t\t}\n\n    \t\tif ( key === undefined ) return; // no data\n\n    \t\tvar value = key[ valuePropertyName ];\n    \t\tif ( value === undefined ) return; // no data\n\n    \t\tif ( Array.isArray( value ) ) {\n\n    \t\t\tdo {\n\n    \t\t\t\tvalue = key[ valuePropertyName ];\n\n    \t\t\t\tif ( value !== undefined ) {\n\n    \t\t\t\t\ttimes.push( key.time );\n    \t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n    \t\t\t\t}\n\n    \t\t\t\tkey = jsonKeys[ i ++ ];\n\n    \t\t\t} while ( key !== undefined );\n\n    \t\t} else if ( value.toArray !== undefined ) {\n    \t\t\t// ...assume THREE.Math-ish\n\n    \t\t\tdo {\n\n    \t\t\t\tvalue = key[ valuePropertyName ];\n\n    \t\t\t\tif ( value !== undefined ) {\n\n    \t\t\t\t\ttimes.push( key.time );\n    \t\t\t\t\tvalue.toArray( values, values.length );\n\n    \t\t\t\t}\n\n    \t\t\t\tkey = jsonKeys[ i ++ ];\n\n    \t\t\t} while ( key !== undefined );\n\n    \t\t} else {\n    \t\t\t// otherwise push as-is\n\n    \t\t\tdo {\n\n    \t\t\t\tvalue = key[ valuePropertyName ];\n\n    \t\t\t\tif ( value !== undefined ) {\n\n    \t\t\t\t\ttimes.push( key.time );\n    \t\t\t\t\tvalues.push( value );\n\n    \t\t\t\t}\n\n    \t\t\t\tkey = jsonKeys[ i ++ ];\n\n    \t\t\t} while ( key !== undefined );\n\n    \t\t}\n\n    \t}\n\n    };\n\n    /**\n     * Abstract base class of interpolants over parametric samples.\n     *\n     * The parameter domain is one dimensional, typically the time or a path\n     * along a curve defined by the data.\n     *\n     * The sample values can have any dimensionality and derived classes may\n     * apply special interpretations to the data.\n     *\n     * This class provides the interval seek in a Template Method, deferring\n     * the actual interpolation to derived classes.\n     *\n     * Time complexity is O(1) for linear access crossing at most two points\n     * and O(log N) for random access, where N is the number of positions.\n     *\n     * References:\n     *\n     * \t\thttp://www.oodesign.com/template-method-pattern.html\n     *\n     * @author tschw\n     */\n\n    function Interpolant(\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n    \tthis.parameterPositions = parameterPositions;\n    \tthis._cachedIndex = 0;\n\n    \tthis.resultBuffer = resultBuffer !== undefined ?\n    \t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n    \tthis.sampleValues = sampleValues;\n    \tthis.valueSize = sampleSize;\n\n    }\n\n    Interpolant.prototype = {\n\n    \tconstructor: Interpolant,\n\n    \tevaluate: function( t ) {\n\n    \t\tvar pp = this.parameterPositions,\n    \t\t\ti1 = this._cachedIndex,\n\n    \t\t\tt1 = pp[   i1   ],\n    \t\t\tt0 = pp[ i1 - 1 ];\n\n    \t\tvalidate_interval: {\n\n    \t\t\tseek: {\n\n    \t\t\t\tvar right;\n\n    \t\t\t\tlinear_scan: {\n    //- See http://jsperf.com/comparison-to-undefined/3\n    //- slower code:\n    //-\n    //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n    \t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n    \t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\n\n    \t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n    \t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n    \t\t\t\t\t\t\t\t// after end\n\n    \t\t\t\t\t\t\t\ti1 = pp.length;\n    \t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n    \t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n    \t\t\t\t\t\t\tt0 = t1;\n    \t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n    \t\t\t\t\t\t\tif ( t < t1 ) {\n\n    \t\t\t\t\t\t\t\t// we have arrived at the sought interval\n    \t\t\t\t\t\t\t\tbreak seek;\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\t// prepare binary search on the right side of the index\n    \t\t\t\t\t\tright = pp.length;\n    \t\t\t\t\t\tbreak linear_scan;\n\n    \t\t\t\t\t}\n\n    //- slower code:\n    //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n    \t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n    \t\t\t\t\t\t// looping?\n\n    \t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n    \t\t\t\t\t\tif ( t < t1global ) {\n\n    \t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n    \t\t\t\t\t\t\tt0 = t1global;\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\t// linear reverse scan\n\n    \t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\n\n    \t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n    \t\t\t\t\t\t\t\t// before start\n\n    \t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n    \t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n    \t\t\t\t\t\t\tt1 = t0;\n    \t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n    \t\t\t\t\t\t\tif ( t >= t0 ) {\n\n    \t\t\t\t\t\t\t\t// we have arrived at the sought interval\n    \t\t\t\t\t\t\t\tbreak seek;\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t\t// prepare binary search on the left side of the index\n    \t\t\t\t\t\tright = i1;\n    \t\t\t\t\t\ti1 = 0;\n    \t\t\t\t\t\tbreak linear_scan;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\t// the interval is valid\n\n    \t\t\t\t\tbreak validate_interval;\n\n    \t\t\t\t} // linear scan\n\n    \t\t\t\t// binary search\n\n    \t\t\t\twhile ( i1 < right ) {\n\n    \t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n    \t\t\t\t\tif ( t < pp[ mid ] ) {\n\n    \t\t\t\t\t\tright = mid;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\ti1 = mid + 1;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t\tt1 = pp[   i1   ];\n    \t\t\t\tt0 = pp[ i1 - 1 ];\n\n    \t\t\t\t// check boundary cases, again\n\n    \t\t\t\tif ( t0 === undefined ) {\n\n    \t\t\t\t\tthis._cachedIndex = 0;\n    \t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( t1 === undefined ) {\n\n    \t\t\t\t\ti1 = pp.length;\n    \t\t\t\t\tthis._cachedIndex = i1;\n    \t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n    \t\t\t\t}\n\n    \t\t\t} // seek\n\n    \t\t\tthis._cachedIndex = i1;\n\n    \t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n    \t\t} // validate_interval\n\n    \t\treturn this.interpolate_( i1, t0, t, t1 );\n\n    \t},\n\n    \tsettings: null, // optional, subclass-specific settings structure\n    \t// Note: The indirection allows central control of many interpolants.\n\n    \t// --- Protected interface\n\n    \tDefaultSettings_: {},\n\n    \tgetSettings_: function() {\n\n    \t\treturn this.settings || this.DefaultSettings_;\n\n    \t},\n\n    \tcopySampleValue_: function( index ) {\n\n    \t\t// copies a sample value to the result buffer\n\n    \t\tvar result = this.resultBuffer,\n    \t\t\tvalues = this.sampleValues,\n    \t\t\tstride = this.valueSize,\n    \t\t\toffset = index * stride;\n\n    \t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n    \t\t\tresult[ i ] = values[ offset + i ];\n\n    \t\t}\n\n    \t\treturn result;\n\n    \t},\n\n    \t// Template methods for derived classes:\n\n    \tinterpolate_: function( i1, t0, t, t1 ) {\n\n    \t\tthrow new Error( \"call to abstract method\" );\n    \t\t// implementations shall return this.resultBuffer\n\n    \t},\n\n    \tintervalChanged_: function( i1, t0, t1 ) {\n\n    \t\t// empty\n\n    \t}\n\n    };\n\n    Object.assign( Interpolant.prototype, {\n\n    \tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\n    \t\tInterpolant.prototype.copySampleValue_,\n\n    \tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\n    \t\tInterpolant.prototype.copySampleValue_\n\n    } );\n\n    /**\n     * Fast and simple cubic spline interpolant.\n     *\n     * It was derived from a Hermitian construction setting the first derivative\n     * at each sample position to the linear slope between neighboring positions\n     * over their parameter interval.\n     *\n     * @author tschw\n     */\n\n    function CubicInterpolant(\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n    \tInterpolant.call(\n    \t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n    \tthis._weightPrev = -0;\n    \tthis._offsetPrev = -0;\n    \tthis._weightNext = -0;\n    \tthis._offsetNext = -0;\n\n    }\n\n    CubicInterpolant.prototype =\n    \t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n    \tconstructor: CubicInterpolant,\n\n    \tDefaultSettings_: {\n\n    \t\tendingStart: \tZeroCurvatureEnding,\n    \t\tendingEnd:\t\tZeroCurvatureEnding\n\n    \t},\n\n    \tintervalChanged_: function( i1, t0, t1 ) {\n\n    \t\tvar pp = this.parameterPositions,\n    \t\t\tiPrev = i1 - 2,\n    \t\t\tiNext = i1 + 1,\n\n    \t\t\ttPrev = pp[ iPrev ],\n    \t\t\ttNext = pp[ iNext ];\n\n    \t\tif ( tPrev === undefined ) {\n\n    \t\t\tswitch ( this.getSettings_().endingStart ) {\n\n    \t\t\t\tcase ZeroSlopeEnding:\n\n    \t\t\t\t\t// f'(t0) = 0\n    \t\t\t\t\tiPrev = i1;\n    \t\t\t\t\ttPrev = 2 * t0 - t1;\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase WrapAroundEnding:\n\n    \t\t\t\t\t// use the other end of the curve\n    \t\t\t\t\tiPrev = pp.length - 2;\n    \t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tdefault: // ZeroCurvatureEnding\n\n    \t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n    \t\t\t\t\tiPrev = i1;\n    \t\t\t\t\ttPrev = t1;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( tNext === undefined ) {\n\n    \t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n    \t\t\t\tcase ZeroSlopeEnding:\n\n    \t\t\t\t\t// f'(tN) = 0\n    \t\t\t\t\tiNext = i1;\n    \t\t\t\t\ttNext = 2 * t1 - t0;\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase WrapAroundEnding:\n\n    \t\t\t\t\t// use the other end of the curve\n    \t\t\t\t\tiNext = 1;\n    \t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tdefault: // ZeroCurvatureEnding\n\n    \t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n    \t\t\t\t\tiNext = i1 - 1;\n    \t\t\t\t\ttNext = t0;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar halfDt = ( t1 - t0 ) * 0.5,\n    \t\t\tstride = this.valueSize;\n\n    \t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n    \t\tthis._weightNext = halfDt / ( tNext - t1 );\n    \t\tthis._offsetPrev = iPrev * stride;\n    \t\tthis._offsetNext = iNext * stride;\n\n    \t},\n\n    \tinterpolate_: function( i1, t0, t, t1 ) {\n\n    \t\tvar result = this.resultBuffer,\n    \t\t\tvalues = this.sampleValues,\n    \t\t\tstride = this.valueSize,\n\n    \t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n    \t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n    \t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n    \t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n    \t\t\tpp = p * p,\n    \t\t\tppp = pp * p;\n\n    \t\t// evaluate polynomials\n\n    \t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\n    \t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\n    \t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\n    \t\tvar sN =       wN   * ppp   -           wN      * pp;\n\n    \t\t// combine data linearly\n\n    \t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n    \t\t\tresult[ i ] =\n    \t\t\t\t\tsP * values[ oP + i ] +\n    \t\t\t\t\ts0 * values[ o0 + i ] +\n    \t\t\t\t\ts1 * values[ o1 + i ] +\n    \t\t\t\t\tsN * values[ oN + i ];\n\n    \t\t}\n\n    \t\treturn result;\n\n    \t}\n\n    } );\n\n    /**\n     * @author tschw\n     */\n\n    function LinearInterpolant(\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n    \tInterpolant.call(\n    \t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n    }\n\n    LinearInterpolant.prototype =\n    \t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n    \tconstructor: LinearInterpolant,\n\n    \tinterpolate_: function( i1, t0, t, t1 ) {\n\n    \t\tvar result = this.resultBuffer,\n    \t\t\tvalues = this.sampleValues,\n    \t\t\tstride = this.valueSize,\n\n    \t\t\toffset1 = i1 * stride,\n    \t\t\toffset0 = offset1 - stride,\n\n    \t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n    \t\t\tweight0 = 1 - weight1;\n\n    \t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n    \t\t\tresult[ i ] =\n    \t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n    \t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n    \t\t}\n\n    \t\treturn result;\n\n    \t}\n\n    } );\n\n    /**\n     *\n     * Interpolant that evaluates to the sample value at the position preceeding\n     * the parameter.\n     *\n     * @author tschw\n     */\n\n    function DiscreteInterpolant(\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n    \tInterpolant.call(\n    \t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n    }\n\n    DiscreteInterpolant.prototype =\n    \t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n    \tconstructor: DiscreteInterpolant,\n\n    \tinterpolate_: function( i1, t0, t, t1 ) {\n\n    \t\treturn this.copySampleValue_( i1 - 1 );\n\n    \t}\n\n    } );\n\n    var KeyframeTrackPrototype;\n\n    KeyframeTrackPrototype = {\n\n    \tTimeBufferType: Float32Array,\n    \tValueBufferType: Float32Array,\n\n    \tDefaultInterpolation: InterpolateLinear,\n\n    \tInterpolantFactoryMethodDiscrete: function( result ) {\n\n    \t\treturn new DiscreteInterpolant(\n    \t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n    \t},\n\n    \tInterpolantFactoryMethodLinear: function( result ) {\n\n    \t\treturn new LinearInterpolant(\n    \t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n    \t},\n\n    \tInterpolantFactoryMethodSmooth: function( result ) {\n\n    \t\treturn new CubicInterpolant(\n    \t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n    \t},\n\n    \tsetInterpolation: function( interpolation ) {\n\n    \t\tvar factoryMethod;\n\n    \t\tswitch ( interpolation ) {\n\n    \t\t\tcase InterpolateDiscrete:\n\n    \t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n    \t\t\t\tbreak;\n\n    \t\t\tcase InterpolateLinear:\n\n    \t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n    \t\t\t\tbreak;\n\n    \t\t\tcase InterpolateSmooth:\n\n    \t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n    \t\t\t\tbreak;\n\n    \t\t}\n\n    \t\tif ( factoryMethod === undefined ) {\n\n    \t\t\tvar message = \"unsupported interpolation for \" +\n    \t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n    \t\t\tif ( this.createInterpolant === undefined ) {\n\n    \t\t\t\t// fall back to default, unless the default itself is messed up\n    \t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n    \t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tconsole.warn( message );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tthis.createInterpolant = factoryMethod;\n\n    \t},\n\n    \tgetInterpolation: function() {\n\n    \t\tswitch ( this.createInterpolant ) {\n\n    \t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n    \t\t\t\treturn InterpolateDiscrete;\n\n    \t\t\tcase this.InterpolantFactoryMethodLinear:\n\n    \t\t\t\treturn InterpolateLinear;\n\n    \t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n    \t\t\t\treturn InterpolateSmooth;\n\n    \t\t}\n\n    \t},\n\n    \tgetValueSize: function() {\n\n    \t\treturn this.values.length / this.times.length;\n\n    \t},\n\n    \t// move all keyframes either forwards or backwards in time\n    \tshift: function( timeOffset ) {\n\n    \t\tif( timeOffset !== 0.0 ) {\n\n    \t\t\tvar times = this.times;\n\n    \t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n    \t\t\t\ttimes[ i ] += timeOffset;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n    \tscale: function( timeScale ) {\n\n    \t\tif( timeScale !== 1.0 ) {\n\n    \t\t\tvar times = this.times;\n\n    \t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\n\n    \t\t\t\ttimes[ i ] *= timeScale;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n    \t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n    \ttrim: function( startTime, endTime ) {\n\n    \t\tvar times = this.times,\n    \t\t\tnKeys = times.length,\n    \t\t\tfrom = 0,\n    \t\t\tto = nKeys - 1;\n\n    \t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n    \t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\n\n    \t\t++ to; // inclusive -> exclusive bound\n\n    \t\tif( from !== 0 || to !== nKeys ) {\n\n    \t\t\t// empty tracks are forbidden, so keep at least one keyframe\n    \t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\n\n    \t\t\tvar stride = this.getValueSize();\n    \t\t\tthis.times = exports.AnimationUtils.arraySlice( times, from, to );\n    \t\t\tthis.values = exports.AnimationUtils.\n    \t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n    \tvalidate: function() {\n\n    \t\tvar valid = true;\n\n    \t\tvar valueSize = this.getValueSize();\n    \t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n    \t\t\tconsole.error( \"invalid value size in track\", this );\n    \t\t\tvalid = false;\n\n    \t\t}\n\n    \t\tvar times = this.times,\n    \t\t\tvalues = this.values,\n\n    \t\t\tnKeys = times.length;\n\n    \t\tif( nKeys === 0 ) {\n\n    \t\t\tconsole.error( \"track is empty\", this );\n    \t\t\tvalid = false;\n\n    \t\t}\n\n    \t\tvar prevTime = null;\n\n    \t\tfor( var i = 0; i !== nKeys; i ++ ) {\n\n    \t\t\tvar currTime = times[ i ];\n\n    \t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n    \t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\n    \t\t\t\tvalid = false;\n    \t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t\tif( prevTime !== null && prevTime > currTime ) {\n\n    \t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\n    \t\t\t\tvalid = false;\n    \t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t\tprevTime = currTime;\n\n    \t\t}\n\n    \t\tif ( values !== undefined ) {\n\n    \t\t\tif ( exports.AnimationUtils.isTypedArray( values ) ) {\n\n    \t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n    \t\t\t\t\tvar value = values[ i ];\n\n    \t\t\t\t\tif ( isNaN( value ) ) {\n\n    \t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\n    \t\t\t\t\t\tvalid = false;\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn valid;\n\n    \t},\n\n    \t// removes equivalent sequential keys as common in morph target sequences\n    \t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n    \toptimize: function() {\n\n    \t\tvar times = this.times,\n    \t\t\tvalues = this.values,\n    \t\t\tstride = this.getValueSize(),\n\n    \t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n    \t\t\twriteIndex = 1,\n    \t\t\tlastIndex = times.length - 1;\n\n    \t\tfor( var i = 1; i < lastIndex; ++ i ) {\n\n    \t\t\tvar keep = false;\n\n    \t\t\tvar time = times[ i ];\n    \t\t\tvar timeNext = times[ i + 1 ];\n\n    \t\t\t// remove adjacent keyframes scheduled at the same time\n\n    \t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n    \t\t\t\tif ( ! smoothInterpolation ) {\n\n    \t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n    \t\t\t\t\tvar offset = i * stride,\n    \t\t\t\t\t\toffsetP = offset - stride,\n    \t\t\t\t\t\toffsetN = offset + stride;\n\n    \t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n    \t\t\t\t\t\tvar value = values[ offset + j ];\n\n    \t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n    \t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n    \t\t\t\t\t\t\tkeep = true;\n    \t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else keep = true;\n\n    \t\t\t}\n\n    \t\t\t// in-place compaction\n\n    \t\t\tif ( keep ) {\n\n    \t\t\t\tif ( i !== writeIndex ) {\n\n    \t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n    \t\t\t\t\tvar readOffset = i * stride,\n    \t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n    \t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n    \t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n    \t\t\t\t}\n\n    \t\t\t\t++ writeIndex;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// flush last keyframe (compaction looks ahead)\n\n    \t\tif ( lastIndex > 0 ) {\n\n    \t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n    \t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n    \t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n    \t\t\t++ writeIndex;\n\n    \t\t}\n\n    \t\tif ( writeIndex !== times.length ) {\n\n    \t\t\tthis.times = exports.AnimationUtils.arraySlice( times, 0, writeIndex );\n    \t\t\tthis.values = exports.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t}\n\n    }\n\n    function KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n    \tif( name === undefined ) throw new Error( \"track name is undefined\" );\n\n    \tif( times === undefined || times.length === 0 ) {\n\n    \t\tthrow new Error( \"no keyframes in track named \" + name );\n\n    \t}\n\n    \tthis.name = name;\n\n    \tthis.times = exports.AnimationUtils.convertArray( times, this.TimeBufferType );\n    \tthis.values = exports.AnimationUtils.convertArray( values, this.ValueBufferType );\n\n    \tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n    \tthis.validate();\n    \tthis.optimize();\n\n    }\n\n    /**\n     *\n     * A Track of vectored keyframe values.\n     *\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function VectorKeyframeTrack( name, times, values, interpolation ) {\n\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n    }\n\n    VectorKeyframeTrack.prototype =\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n    \tconstructor: VectorKeyframeTrack,\n\n    \tValueTypeName: 'vector'\n\n    \t// ValueBufferType is inherited\n\n    \t// DefaultInterpolation is inherited\n\n    } );\n\n    /**\n     * Spherical linear unit quaternion interpolant.\n     *\n     * @author tschw\n     */\n\n    function QuaternionLinearInterpolant(\n    \t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n    \tInterpolant.call(\n    \t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n    }\n\n    QuaternionLinearInterpolant.prototype =\n    \t\tObject.assign( Object.create( Interpolant.prototype ), {\n\n    \tconstructor: QuaternionLinearInterpolant,\n\n    \tinterpolate_: function( i1, t0, t, t1 ) {\n\n    \t\tvar result = this.resultBuffer,\n    \t\t\tvalues = this.sampleValues,\n    \t\t\tstride = this.valueSize,\n\n    \t\t\toffset = i1 * stride,\n\n    \t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n    \t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n    \t\t\tQuaternion.slerpFlat( result, 0,\n    \t\t\t\t\tvalues, offset - stride, values, offset, alpha );\n\n    \t\t}\n\n    \t\treturn result;\n\n    \t}\n\n    } );\n\n    /**\n     *\n     * A Track of quaternion keyframe values.\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n    }\n\n    QuaternionKeyframeTrack.prototype =\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n    \tconstructor: QuaternionKeyframeTrack,\n\n    \tValueTypeName: 'quaternion',\n\n    \t// ValueBufferType is inherited\n\n    \tDefaultInterpolation: InterpolateLinear,\n\n    \tInterpolantFactoryMethodLinear: function( result ) {\n\n    \t\treturn new QuaternionLinearInterpolant(\n    \t\t\t\tthis.times, this.values, this.getValueSize(), result );\n\n    \t},\n\n    \tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n    } );\n\n    /**\n     *\n     * A Track of numeric keyframe values.\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function NumberKeyframeTrack( name, times, values, interpolation ) {\n\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n    }\n\n    NumberKeyframeTrack.prototype =\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n    \tconstructor: NumberKeyframeTrack,\n\n    \tValueTypeName: 'number',\n\n    \t// ValueBufferType is inherited\n\n    \t// DefaultInterpolation is inherited\n\n    } );\n\n    /**\n     *\n     * A Track that interpolates Strings\n     *\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function StringKeyframeTrack( name, times, values, interpolation ) {\n\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n    }\n\n    StringKeyframeTrack.prototype =\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n    \tconstructor: StringKeyframeTrack,\n\n    \tValueTypeName: 'string',\n    \tValueBufferType: Array,\n\n    \tDefaultInterpolation: InterpolateDiscrete,\n\n    \tInterpolantFactoryMethodLinear: undefined,\n\n    \tInterpolantFactoryMethodSmooth: undefined\n\n    } );\n\n    /**\n     *\n     * A Track of Boolean keyframe values.\n     *\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function BooleanKeyframeTrack( name, times, values ) {\n\n    \tKeyframeTrackConstructor.call( this, name, times, values );\n\n    }\n\n    BooleanKeyframeTrack.prototype =\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n    \tconstructor: BooleanKeyframeTrack,\n\n    \tValueTypeName: 'bool',\n    \tValueBufferType: Array,\n\n    \tDefaultInterpolation: InterpolateDiscrete,\n\n    \tInterpolantFactoryMethodLinear: undefined,\n    \tInterpolantFactoryMethodSmooth: undefined\n\n    \t// Note: Actually this track could have a optimized / compressed\n    \t// representation of a single value and a custom interpolant that\n    \t// computes \"firstValue ^ isOdd( index )\".\n\n    } );\n\n    /**\n     *\n     * A Track of keyframe values that represent color.\n     *\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function ColorKeyframeTrack( name, times, values, interpolation ) {\n\n    \tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n    }\n\n    ColorKeyframeTrack.prototype =\n    \t\tObject.assign( Object.create( KeyframeTrackPrototype ), {\n\n    \tconstructor: ColorKeyframeTrack,\n\n    \tValueTypeName: 'color'\n\n    \t// ValueBufferType is inherited\n\n    \t// DefaultInterpolation is inherited\n\n\n    \t// Note: Very basic implementation and nothing special yet.\n    \t// However, this is the place for color space parameterization.\n\n    } );\n\n    /**\n     *\n     * A timed sequence of keyframes for a specific property.\n     *\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function KeyframeTrack( name, times, values, interpolation ) {\n\n    \tKeyframeTrackConstructor.apply( this, arguments );\n\n    }\n\n    KeyframeTrack.prototype = KeyframeTrackPrototype;\n    KeyframeTrackPrototype.constructor = KeyframeTrack;\n\n    // Static methods:\n\n    Object.assign( KeyframeTrack, {\n\n    \t// Serialization (in static context, because of constructor invocation\n    \t// and automatic invocation of .toJSON):\n\n    \tparse: function( json ) {\n\n    \t\tif( json.type === undefined ) {\n\n    \t\t\tthrow new Error( \"track type undefined, can not parse\" );\n\n    \t\t}\n\n    \t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n    \t\tif ( json.times === undefined ) {\n\n    \t\t\tvar times = [], values = [];\n\n    \t\t\texports.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n    \t\t\tjson.times = times;\n    \t\t\tjson.values = values;\n\n    \t\t}\n\n    \t\t// derived classes can define a static parse method\n    \t\tif ( trackType.parse !== undefined ) {\n\n    \t\t\treturn trackType.parse( json );\n\n    \t\t} else {\n\n    \t\t\t// by default, we asssume a constructor compatible with the base\n    \t\t\treturn new trackType(\n    \t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\n\n    \t\t}\n\n    \t},\n\n    \ttoJSON: function( track ) {\n\n    \t\tvar trackType = track.constructor;\n\n    \t\tvar json;\n\n    \t\t// derived classes can define a static toJSON method\n    \t\tif ( trackType.toJSON !== undefined ) {\n\n    \t\t\tjson = trackType.toJSON( track );\n\n    \t\t} else {\n\n    \t\t\t// by default, we assume the data can be serialized as-is\n    \t\t\tjson = {\n\n    \t\t\t\t'name': track.name,\n    \t\t\t\t'times': exports.AnimationUtils.convertArray( track.times, Array ),\n    \t\t\t\t'values': exports.AnimationUtils.convertArray( track.values, Array )\n\n    \t\t\t};\n\n    \t\t\tvar interpolation = track.getInterpolation();\n\n    \t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n    \t\t\t\tjson.interpolation = interpolation;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tjson.type = track.ValueTypeName; // mandatory\n\n    \t\treturn json;\n\n    \t},\n\n    \t_getTrackTypeForValueTypeName: function( typeName ) {\n\n    \t\tswitch( typeName.toLowerCase() ) {\n\n    \t\t\tcase \"scalar\":\n    \t\t\tcase \"double\":\n    \t\t\tcase \"float\":\n    \t\t\tcase \"number\":\n    \t\t\tcase \"integer\":\n\n    \t\t\t\treturn NumberKeyframeTrack;\n\n    \t\t\tcase \"vector\":\n    \t\t\tcase \"vector2\":\n    \t\t\tcase \"vector3\":\n    \t\t\tcase \"vector4\":\n\n    \t\t\t\treturn VectorKeyframeTrack;\n\n    \t\t\tcase \"color\":\n\n    \t\t\t\treturn ColorKeyframeTrack;\n\n    \t\t\tcase \"quaternion\":\n\n    \t\t\t\treturn QuaternionKeyframeTrack;\n\n    \t\t\tcase \"bool\":\n    \t\t\tcase \"boolean\":\n\n    \t\t\t\treturn BooleanKeyframeTrack;\n\n    \t\t\tcase \"string\":\n\n    \t\t\t\treturn StringKeyframeTrack;\n\n    \t\t}\n\n    \t\tthrow new Error( \"Unsupported typeName: \" + typeName );\n\n    \t}\n\n    } );\n\n    /**\n     *\n     * Reusable set of Tracks that represent an animation.\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     */\n\n    function AnimationClip( name, duration, tracks ) {\n\n    \tthis.name = name;\n    \tthis.tracks = tracks;\n    \tthis.duration = ( duration !== undefined ) ? duration : -1;\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \t// this means it should figure out its duration by scanning the tracks\n    \tif ( this.duration < 0 ) {\n\n    \t\tthis.resetDuration();\n\n    \t}\n\n    \tthis.optimize();\n\n    }\n\n    AnimationClip.prototype = {\n\n    \tconstructor: AnimationClip,\n\n    \tresetDuration: function() {\n\n    \t\tvar tracks = this.tracks,\n    \t\t\tduration = 0;\n\n    \t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n    \t\t\tvar track = this.tracks[ i ];\n\n    \t\t\tduration = Math.max(\n    \t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\n\n    \t\t}\n\n    \t\tthis.duration = duration;\n\n    \t},\n\n    \ttrim: function() {\n\n    \t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n    \t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \toptimize: function() {\n\n    \t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n    \t\t\tthis.tracks[ i ].optimize();\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t}\n\n    };\n\n    // Static methods:\n\n    Object.assign( AnimationClip, {\n\n    \tparse: function( json ) {\n\n    \t\tvar tracks = [],\n    \t\t\tjsonTracks = json.tracks,\n    \t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n    \t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n    \t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n    \t\t}\n\n    \t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n    \t},\n\n\n    \ttoJSON: function( clip ) {\n\n    \t\tvar tracks = [],\n    \t\t\tclipTracks = clip.tracks;\n\n    \t\tvar json = {\n\n    \t\t\t'name': clip.name,\n    \t\t\t'duration': clip.duration,\n    \t\t\t'tracks': tracks\n\n    \t\t};\n\n    \t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n    \t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n    \t\t}\n\n    \t\treturn json;\n\n    \t},\n\n\n    \tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\n\n    \t\tvar numMorphTargets = morphTargetSequence.length;\n    \t\tvar tracks = [];\n\n    \t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n    \t\t\tvar times = [];\n    \t\t\tvar values = [];\n\n    \t\t\ttimes.push(\n    \t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n    \t\t\t\t\ti,\n    \t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n    \t\t\tvalues.push( 0, 1, 0 );\n\n    \t\t\tvar order = exports.AnimationUtils.getKeyframeOrder( times );\n    \t\t\ttimes = exports.AnimationUtils.sortedArray( times, 1, order );\n    \t\t\tvalues = exports.AnimationUtils.sortedArray( values, 1, order );\n\n    \t\t\t// if there is a key at the first frame, duplicate it as the\n    \t\t\t// last frame as well for perfect loop.\n    \t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n    \t\t\t\ttimes.push( numMorphTargets );\n    \t\t\t\tvalues.push( values[ 0 ] );\n\n    \t\t\t}\n\n    \t\t\ttracks.push(\n    \t\t\t\t\tnew NumberKeyframeTrack(\n    \t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n    \t\t\t\t\t\ttimes, values\n    \t\t\t\t\t).scale( 1.0 / fps ) );\n    \t\t}\n\n    \t\treturn new AnimationClip( name, -1, tracks );\n\n    \t},\n\n    \tfindByName: function( objectOrClipArray, name ) {\n\n    \t\tvar clipArray = objectOrClipArray;\n\n    \t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n    \t\t\tvar o = objectOrClipArray;\n    \t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n    \t\t}\n\n    \t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n    \t\t\tif ( clipArray[ i ].name === name ) {\n\n    \t\t\t\treturn clipArray[ i ];\n\n    \t\t\t}\n    \t\t}\n\n    \t\treturn null;\n\n    \t},\n\n    \tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\n\n    \t\tvar animationToMorphTargets = {};\n\n    \t\t// tested with https://regex101.com/ on trick sequences\n    \t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n    \t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n    \t\t// sort morph target names into animation groups based\n    \t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n    \t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n    \t\t\tvar morphTarget = morphTargets[ i ];\n    \t\t\tvar parts = morphTarget.name.match( pattern );\n\n    \t\t\tif ( parts && parts.length > 1 ) {\n\n    \t\t\t\tvar name = parts[ 1 ];\n\n    \t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n    \t\t\t\tif ( ! animationMorphTargets ) {\n\n    \t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n    \t\t\t\t}\n\n    \t\t\t\tanimationMorphTargets.push( morphTarget );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar clips = [];\n\n    \t\tfor ( var name in animationToMorphTargets ) {\n\n    \t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n    \t\t}\n\n    \t\treturn clips;\n\n    \t},\n\n    \t// parse the animation.hierarchy format\n    \tparseAnimation: function( animation, bones ) {\n\n    \t\tif ( ! animation ) {\n\n    \t\t\tconsole.error( \"  no animation in JSONLoader data\" );\n    \t\t\treturn null;\n\n    \t\t}\n\n    \t\tvar addNonemptyTrack = function(\n    \t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\n\n    \t\t\t// only return track if there are actually keys.\n    \t\t\tif ( animationKeys.length !== 0 ) {\n\n    \t\t\t\tvar times = [];\n    \t\t\t\tvar values = [];\n\n    \t\t\t\texports.AnimationUtils.flattenJSON(\n    \t\t\t\t\t\tanimationKeys, times, values, propertyName );\n\n    \t\t\t\t// empty keys are filtered out, so check again\n    \t\t\t\tif ( times.length !== 0 ) {\n\n    \t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t};\n\n    \t\tvar tracks = [];\n\n    \t\tvar clipName = animation.name || 'default';\n    \t\t// automatic length determination in AnimationClip.\n    \t\tvar duration = animation.length || -1;\n    \t\tvar fps = animation.fps || 30;\n\n    \t\tvar hierarchyTracks = animation.hierarchy || [];\n\n    \t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n    \t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n    \t\t\t// skip empty tracks\n    \t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n    \t\t\t// process morph targets in a way exactly compatible\n    \t\t\t// with AnimationHandler.init( animation )\n    \t\t\tif ( animationKeys[0].morphTargets ) {\n\n    \t\t\t\t// figure out all morph targets used in this track\n    \t\t\t\tvar morphTargetNames = {};\n    \t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n    \t\t\t\t\tif ( animationKeys[k].morphTargets ) {\n\n    \t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\n\n    \t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t\t// create a track for each morph target with all zero\n    \t\t\t\t// morphTargetInfluences except for the keys in which\n    \t\t\t\t// the morphTarget is named.\n    \t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n    \t\t\t\t\tvar times = [];\n    \t\t\t\t\tvar values = [];\n\n    \t\t\t\t\tfor ( var m = 0;\n    \t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\n\n    \t\t\t\t\t\tvar animationKey = animationKeys[k];\n\n    \t\t\t\t\t\ttimes.push( animationKey.time );\n    \t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\ttracks.push( new NumberKeyframeTrack(\n    \t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n    \t\t\t\t}\n\n    \t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n    \t\t\t} else {\n    \t\t\t\t// ...assume skeletal animation\n\n    \t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n    \t\t\t\taddNonemptyTrack(\n    \t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n    \t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n    \t\t\t\taddNonemptyTrack(\n    \t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n    \t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n    \t\t\t\taddNonemptyTrack(\n    \t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n    \t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( tracks.length === 0 ) {\n\n    \t\t\treturn null;\n\n    \t\t}\n\n    \t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n    \t\treturn clip;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function MaterialLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n    \tthis.textures = {};\n\n    }\n\n    Object.assign( MaterialLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tvar scope = this;\n\n    \t\tvar loader = new XHRLoader( scope.manager );\n    \t\tloader.load( url, function ( text ) {\n\n    \t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n    \t\t}, onProgress, onError );\n\n    \t},\n\n    \tsetTextures: function ( value ) {\n\n    \t\tthis.textures = value;\n\n    \t},\n\n    \tparse: function ( json ) {\n\n    \t\tvar textures = this.textures;\n\n    \t\tfunction getTexture( name ) {\n\n    \t\t\tif ( textures[ name ] === undefined ) {\n\n    \t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n    \t\t\t}\n\n    \t\t\treturn textures[ name ];\n\n    \t\t}\n\n    \t\tvar material = new Materials[ json.type ]();\n\n    \t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n    \t\tif ( json.name !== undefined ) material.name = json.name;\n    \t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n    \t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n    \t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n    \t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n    \t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n    \t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n    \t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n    \t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n    \t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n    \t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n    \t\tif ( json.fog !== undefined ) material.fog = json.fog;\n    \t\tif ( json.shading !== undefined ) material.shading = json.shading;\n    \t\tif ( json.blending !== undefined ) material.blending = json.blending;\n    \t\tif ( json.side !== undefined ) material.side = json.side;\n    \t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n    \t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n    \t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n    \t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n    \t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n    \t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n    \t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n    \t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n    \t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n    \t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n    \t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n    \t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\n    \t\t// for PointsMaterial\n\n    \t\tif ( json.size !== undefined ) material.size = json.size;\n    \t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n    \t\t// maps\n\n    \t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n    \t\tif ( json.alphaMap !== undefined ) {\n\n    \t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n    \t\t\tmaterial.transparent = true;\n\n    \t\t}\n\n    \t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n    \t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n    \t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n    \t\tif ( json.normalScale !== undefined ) {\n\n    \t\t\tvar normalScale = json.normalScale;\n\n    \t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n    \t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n    \t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n    \t\t\t}\n\n    \t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n    \t\t}\n\n    \t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n    \t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n    \t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n    \t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n    \t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n    \t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n    \t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n    \t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n    \t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n    \t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n    \t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n    \t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n    \t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n    \t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n    \t\t// MultiMaterial\n\n    \t\tif ( json.materials !== undefined ) {\n\n    \t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\n\n    \t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn material;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function BufferGeometryLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    }\n\n    Object.assign( BufferGeometryLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tvar scope = this;\n\n    \t\tvar loader = new XHRLoader( scope.manager );\n    \t\tloader.load( url, function ( text ) {\n\n    \t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n    \t\t}, onProgress, onError );\n\n    \t},\n\n    \tparse: function ( json ) {\n\n    \t\tvar geometry = new BufferGeometry();\n\n    \t\tvar index = json.data.index;\n\n    \t\tvar TYPED_ARRAYS = {\n    \t\t\t'Int8Array': Int8Array,\n    \t\t\t'Uint8Array': Uint8Array,\n    \t\t\t'Uint8ClampedArray': Uint8ClampedArray,\n    \t\t\t'Int16Array': Int16Array,\n    \t\t\t'Uint16Array': Uint16Array,\n    \t\t\t'Int32Array': Int32Array,\n    \t\t\t'Uint32Array': Uint32Array,\n    \t\t\t'Float32Array': Float32Array,\n    \t\t\t'Float64Array': Float64Array\n    \t\t};\n\n    \t\tif ( index !== undefined ) {\n\n    \t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n    \t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n    \t\t}\n\n    \t\tvar attributes = json.data.attributes;\n\n    \t\tfor ( var key in attributes ) {\n\n    \t\t\tvar attribute = attributes[ key ];\n    \t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n    \t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n    \t\t}\n\n    \t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n    \t\tif ( groups !== undefined ) {\n\n    \t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n    \t\t\t\tvar group = groups[ i ];\n\n    \t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar boundingSphere = json.data.boundingSphere;\n\n    \t\tif ( boundingSphere !== undefined ) {\n\n    \t\t\tvar center = new Vector3();\n\n    \t\t\tif ( boundingSphere.center !== undefined ) {\n\n    \t\t\t\tcenter.fromArray( boundingSphere.center );\n\n    \t\t\t}\n\n    \t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n    \t\t}\n\n    \t\treturn geometry;\n\n    \t}\n\n    } );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Loader() {\n\n    \tthis.onLoadStart = function () {};\n    \tthis.onLoadProgress = function () {};\n    \tthis.onLoadComplete = function () {};\n\n    }\n\n    Loader.prototype = {\n\n    \tconstructor: Loader,\n\n    \tcrossOrigin: undefined,\n\n    \textractUrlBase: function ( url ) {\n\n    \t\tvar parts = url.split( '/' );\n\n    \t\tif ( parts.length === 1 ) return './';\n\n    \t\tparts.pop();\n\n    \t\treturn parts.join( '/' ) + '/';\n\n    \t},\n\n    \tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n    \t\tvar array = [];\n\n    \t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n    \t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n    \t\t}\n\n    \t\treturn array;\n\n    \t},\n\n    \tcreateMaterial: ( function () {\n\n    \t\tvar color, textureLoader, materialLoader;\n\n    \t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n    \t\t\tif ( color === undefined ) color = new Color();\n    \t\t\tif ( textureLoader === undefined ) textureLoader = new TextureLoader();\n    \t\t\tif ( materialLoader === undefined ) materialLoader = new MaterialLoader();\n\n    \t\t\t// convert from old material format\n\n    \t\t\tvar textures = {};\n\n    \t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n    \t\t\t\tvar fullPath = texturePath + path;\n    \t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n    \t\t\t\tvar texture;\n\n    \t\t\t\tif ( loader !== null ) {\n\n    \t\t\t\t\ttexture = loader.load( fullPath );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n    \t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( repeat !== undefined ) {\n\n    \t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n    \t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n    \t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( offset !== undefined ) {\n\n    \t\t\t\t\ttexture.offset.fromArray( offset );\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( wrap !== undefined ) {\n\n    \t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n    \t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n    \t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n    \t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( anisotropy !== undefined ) {\n\n    \t\t\t\t\ttexture.anisotropy = anisotropy;\n\n    \t\t\t\t}\n\n    \t\t\t\tvar uuid = exports.Math.generateUUID();\n\n    \t\t\t\ttextures[ uuid ] = texture;\n\n    \t\t\t\treturn uuid;\n\n    \t\t\t}\n\n    \t\t\t//\n\n    \t\t\tvar json = {\n    \t\t\t\tuuid: exports.Math.generateUUID(),\n    \t\t\t\ttype: 'MeshLambertMaterial'\n    \t\t\t};\n\n    \t\t\tfor ( var name in m ) {\n\n    \t\t\t\tvar value = m[ name ];\n\n    \t\t\t\tswitch ( name ) {\n    \t\t\t\t\tcase 'DbgColor':\n    \t\t\t\t\tcase 'DbgIndex':\n    \t\t\t\t\tcase 'opticalDensity':\n    \t\t\t\t\tcase 'illumination':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'DbgName':\n    \t\t\t\t\t\tjson.name = value;\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'blending':\n    \t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'colorAmbient':\n    \t\t\t\t\tcase 'mapAmbient':\n    \t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'colorDiffuse':\n    \t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'colorSpecular':\n    \t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'colorEmissive':\n    \t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'specularCoef':\n    \t\t\t\t\t\tjson.shininess = value;\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'shading':\n    \t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n    \t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n    \t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapDiffuse':\n    \t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapDiffuseRepeat':\n    \t\t\t\t\tcase 'mapDiffuseOffset':\n    \t\t\t\t\tcase 'mapDiffuseWrap':\n    \t\t\t\t\tcase 'mapDiffuseAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapEmissive':\n    \t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapEmissiveRepeat':\n    \t\t\t\t\tcase 'mapEmissiveOffset':\n    \t\t\t\t\tcase 'mapEmissiveWrap':\n    \t\t\t\t\tcase 'mapEmissiveAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapLight':\n    \t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapLightRepeat':\n    \t\t\t\t\tcase 'mapLightOffset':\n    \t\t\t\t\tcase 'mapLightWrap':\n    \t\t\t\t\tcase 'mapLightAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapAO':\n    \t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapAORepeat':\n    \t\t\t\t\tcase 'mapAOOffset':\n    \t\t\t\t\tcase 'mapAOWrap':\n    \t\t\t\t\tcase 'mapAOAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapBump':\n    \t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapBumpScale':\n    \t\t\t\t\t\tjson.bumpScale = value;\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapBumpRepeat':\n    \t\t\t\t\tcase 'mapBumpOffset':\n    \t\t\t\t\tcase 'mapBumpWrap':\n    \t\t\t\t\tcase 'mapBumpAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapNormal':\n    \t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapNormalFactor':\n    \t\t\t\t\t\tjson.normalScale = [ value, value ];\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapNormalRepeat':\n    \t\t\t\t\tcase 'mapNormalOffset':\n    \t\t\t\t\tcase 'mapNormalWrap':\n    \t\t\t\t\tcase 'mapNormalAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapSpecular':\n    \t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapSpecularRepeat':\n    \t\t\t\t\tcase 'mapSpecularOffset':\n    \t\t\t\t\tcase 'mapSpecularWrap':\n    \t\t\t\t\tcase 'mapSpecularAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapMetalness':\n    \t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapMetalnessRepeat':\n    \t\t\t\t\tcase 'mapMetalnessOffset':\n    \t\t\t\t\tcase 'mapMetalnessWrap':\n    \t\t\t\t\tcase 'mapMetalnessAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapRoughness':\n    \t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapRoughnessRepeat':\n    \t\t\t\t\tcase 'mapRoughnessOffset':\n    \t\t\t\t\tcase 'mapRoughnessWrap':\n    \t\t\t\t\tcase 'mapRoughnessAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapAlpha':\n    \t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'mapAlphaRepeat':\n    \t\t\t\t\tcase 'mapAlphaOffset':\n    \t\t\t\t\tcase 'mapAlphaWrap':\n    \t\t\t\t\tcase 'mapAlphaAnisotropy':\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'flipSided':\n    \t\t\t\t\t\tjson.side = BackSide;\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'doubleSided':\n    \t\t\t\t\t\tjson.side = DoubleSide;\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'transparency':\n    \t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n    \t\t\t\t\t\tjson.opacity = value;\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'depthTest':\n    \t\t\t\t\tcase 'depthWrite':\n    \t\t\t\t\tcase 'colorWrite':\n    \t\t\t\t\tcase 'opacity':\n    \t\t\t\t\tcase 'reflectivity':\n    \t\t\t\t\tcase 'transparent':\n    \t\t\t\t\tcase 'visible':\n    \t\t\t\t\tcase 'wireframe':\n    \t\t\t\t\t\tjson[ name ] = value;\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tcase 'vertexColors':\n    \t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n    \t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t\tdefault:\n    \t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n    \t\t\t\t\t\tbreak;\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n    \t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n    \t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n    \t\t\tmaterialLoader.setTextures( textures );\n\n    \t\t\treturn materialLoader.parse( json );\n\n    \t\t};\n\n    \t} )()\n\n    };\n\n    Loader.Handlers = {\n\n    \thandlers: [],\n\n    \tadd: function ( regex, loader ) {\n\n    \t\tthis.handlers.push( regex, loader );\n\n    \t},\n\n    \tget: function ( file ) {\n\n    \t\tvar handlers = this.handlers;\n\n    \t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n    \t\t\tvar regex = handlers[ i ];\n    \t\t\tvar loader  = handlers[ i + 1 ];\n\n    \t\t\tif ( regex.test( file ) ) {\n\n    \t\t\t\treturn loader;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn null;\n\n    \t}\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function JSONLoader( manager ) {\n\n    \tif ( typeof manager === 'boolean' ) {\n\n    \t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n    \t\tmanager = undefined;\n\n    \t}\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    \tthis.withCredentials = false;\n\n    }\n\n    Object.assign( JSONLoader.prototype, {\n\n    \tload: function( url, onLoad, onProgress, onError ) {\n\n    \t\tvar scope = this;\n\n    \t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n    \t\tvar loader = new XHRLoader( this.manager );\n    \t\tloader.setWithCredentials( this.withCredentials );\n    \t\tloader.load( url, function ( text ) {\n\n    \t\t\tvar json = JSON.parse( text );\n    \t\t\tvar metadata = json.metadata;\n\n    \t\t\tif ( metadata !== undefined ) {\n\n    \t\t\t\tvar type = metadata.type;\n\n    \t\t\t\tif ( type !== undefined ) {\n\n    \t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n    \t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n    \t\t\t\t\t\treturn;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n    \t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n    \t\t\t\t\t\treturn;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tvar object = scope.parse( json, texturePath );\n    \t\t\tonLoad( object.geometry, object.materials );\n\n    \t\t}, onProgress, onError );\n\n    \t},\n\n    \tsetTexturePath: function ( value ) {\n\n    \t\tthis.texturePath = value;\n\n    \t},\n\n    \tparse: function ( json, texturePath ) {\n\n    \t\tvar geometry = new Geometry(),\n    \t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\n\n    \t\tparseModel( scale );\n\n    \t\tparseSkin();\n    \t\tparseMorphing( scale );\n    \t\tparseAnimations();\n\n    \t\tgeometry.computeFaceNormals();\n    \t\tgeometry.computeBoundingSphere();\n\n    \t\tfunction parseModel( scale ) {\n\n    \t\t\tfunction isBitSet( value, position ) {\n\n    \t\t\t\treturn value & ( 1 << position );\n\n    \t\t\t}\n\n    \t\t\tvar i, j, fi,\n\n    \t\t\toffset, zLength,\n\n    \t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n    \t\t\ttype,\n    \t\t\tisQuad,\n    \t\t\thasMaterial,\n    \t\t\thasFaceVertexUv,\n    \t\t\thasFaceNormal, hasFaceVertexNormal,\n    \t\t\thasFaceColor, hasFaceVertexColor,\n\n    \t\tvertex, face, faceA, faceB, hex, normal,\n\n    \t\t\tuvLayer, uv, u, v,\n\n    \t\t\tfaces = json.faces,\n    \t\t\tvertices = json.vertices,\n    \t\t\tnormals = json.normals,\n    \t\t\tcolors = json.colors,\n\n    \t\t\tnUvLayers = 0;\n\n    \t\t\tif ( json.uvs !== undefined ) {\n\n    \t\t\t\t// disregard empty arrays\n\n    \t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n    \t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n    \t\t\t\t}\n\n    \t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n    \t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\toffset = 0;\n    \t\t\tzLength = vertices.length;\n\n    \t\t\twhile ( offset < zLength ) {\n\n    \t\t\t\tvertex = new Vector3();\n\n    \t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n    \t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n    \t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n    \t\t\t\tgeometry.vertices.push( vertex );\n\n    \t\t\t}\n\n    \t\t\toffset = 0;\n    \t\t\tzLength = faces.length;\n\n    \t\t\twhile ( offset < zLength ) {\n\n    \t\t\t\ttype = faces[ offset ++ ];\n\n\n    \t\t\t\tisQuad              = isBitSet( type, 0 );\n    \t\t\t\thasMaterial         = isBitSet( type, 1 );\n    \t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\n    \t\t\t\thasFaceNormal       = isBitSet( type, 4 );\n    \t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n    \t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\n    \t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\n\n    \t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n    \t\t\t\tif ( isQuad ) {\n\n    \t\t\t\t\tfaceA = new Face3();\n    \t\t\t\t\tfaceA.a = faces[ offset ];\n    \t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n    \t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n    \t\t\t\t\tfaceB = new Face3();\n    \t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n    \t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n    \t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n    \t\t\t\t\toffset += 4;\n\n    \t\t\t\t\tif ( hasMaterial ) {\n\n    \t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n    \t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n    \t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\t// to get face <=> uv index correspondence\n\n    \t\t\t\t\tfi = geometry.faces.length;\n\n    \t\t\t\t\tif ( hasFaceVertexUv ) {\n\n    \t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n    \t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n    \t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n    \t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n    \t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n    \t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n    \t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n    \t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n    \t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n    \t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n    \t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif ( hasFaceNormal ) {\n\n    \t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n    \t\t\t\t\t\tfaceA.normal.set(\n    \t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n    \t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n    \t\t\t\t\t\t\tnormals[ normalIndex ]\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n    \t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n    \t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n    \t\t\t\t\t\t\tnormal = new Vector3(\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ]\n    \t\t\t\t\t\t\t);\n\n\n    \t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n    \t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n\n    \t\t\t\t\tif ( hasFaceColor ) {\n\n    \t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n    \t\t\t\t\t\thex = colors[ colorIndex ];\n\n    \t\t\t\t\t\tfaceA.color.setHex( hex );\n    \t\t\t\t\t\tfaceB.color.setHex( hex );\n\n    \t\t\t\t\t}\n\n\n    \t\t\t\t\tif ( hasFaceVertexColor ) {\n\n    \t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n    \t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n    \t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n    \t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n    \t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tgeometry.faces.push( faceA );\n    \t\t\t\t\tgeometry.faces.push( faceB );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tface = new Face3();\n    \t\t\t\t\tface.a = faces[ offset ++ ];\n    \t\t\t\t\tface.b = faces[ offset ++ ];\n    \t\t\t\t\tface.c = faces[ offset ++ ];\n\n    \t\t\t\t\tif ( hasMaterial ) {\n\n    \t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n    \t\t\t\t\t\tface.materialIndex = materialIndex;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\t// to get face <=> uv index correspondence\n\n    \t\t\t\t\tfi = geometry.faces.length;\n\n    \t\t\t\t\tif ( hasFaceVertexUv ) {\n\n    \t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n    \t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n    \t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n    \t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n    \t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n    \t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n    \t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n    \t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n    \t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif ( hasFaceNormal ) {\n\n    \t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n    \t\t\t\t\t\tface.normal.set(\n    \t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n    \t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n    \t\t\t\t\t\t\tnormals[ normalIndex ]\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n    \t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n    \t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n    \t\t\t\t\t\t\tnormal = new Vector3(\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n    \t\t\t\t\t\t\t\tnormals[ normalIndex ]\n    \t\t\t\t\t\t\t);\n\n    \t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n\n    \t\t\t\t\tif ( hasFaceColor ) {\n\n    \t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n    \t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n    \t\t\t\t\t}\n\n\n    \t\t\t\t\tif ( hasFaceVertexColor ) {\n\n    \t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n    \t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n    \t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tgeometry.faces.push( face );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfunction parseSkin() {\n\n    \t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n    \t\t\tif ( json.skinWeights ) {\n\n    \t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n    \t\t\t\t\tvar x =                               json.skinWeights[ i ];\n    \t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n    \t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n    \t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n    \t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( json.skinIndices ) {\n\n    \t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n    \t\t\t\t\tvar a =                               json.skinIndices[ i ];\n    \t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n    \t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n    \t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n    \t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tgeometry.bones = json.bones;\n\n    \t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n    \t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n    \t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfunction parseMorphing( scale ) {\n\n    \t\t\tif ( json.morphTargets !== undefined ) {\n\n    \t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n    \t\t\t\t\tgeometry.morphTargets[ i ] = {};\n    \t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n    \t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n    \t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n    \t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n    \t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n    \t\t\t\t\t\tvar vertex = new Vector3();\n    \t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n    \t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n    \t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n    \t\t\t\t\t\tdstVertices.push( vertex );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n    \t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n    \t\t\t\tvar faces = geometry.faces;\n    \t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n    \t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    \t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tfunction parseAnimations() {\n\n    \t\t\tvar outputAnimations = [];\n\n    \t\t\t// parse old style Bone/Hierarchy animations\n    \t\t\tvar animations = [];\n\n    \t\t\tif ( json.animation !== undefined ) {\n\n    \t\t\t\tanimations.push( json.animation );\n\n    \t\t\t}\n\n    \t\t\tif ( json.animations !== undefined ) {\n\n    \t\t\t\tif ( json.animations.length ) {\n\n    \t\t\t\t\tanimations = animations.concat( json.animations );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\tanimations.push( json.animations );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n    \t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n    \t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n    \t\t\t}\n\n    \t\t\t// parse implicit morph animations\n    \t\t\tif ( geometry.morphTargets ) {\n\n    \t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n    \t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n    \t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n    \t\t\t}\n\n    \t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n    \t\t}\n\n    \t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n    \t\t\treturn { geometry: geometry };\n\n    \t\t} else {\n\n    \t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n    \t\t\treturn { geometry: geometry, materials: materials };\n\n    \t\t}\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function ObjectLoader ( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n    \tthis.texturePath = '';\n\n    }\n\n    Object.assign( ObjectLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tif ( this.texturePath === '' ) {\n\n    \t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n    \t\t}\n\n    \t\tvar scope = this;\n\n    \t\tvar loader = new XHRLoader( scope.manager );\n    \t\tloader.load( url, function ( text ) {\n\n    \t\t\tscope.parse( JSON.parse( text ), onLoad );\n\n    \t\t}, onProgress, onError );\n\n    \t},\n\n    \tsetTexturePath: function ( value ) {\n\n    \t\tthis.texturePath = value;\n\n    \t},\n\n    \tsetCrossOrigin: function ( value ) {\n\n    \t\tthis.crossOrigin = value;\n\n    \t},\n\n    \tparse: function ( json, onLoad ) {\n\n    \t\tvar geometries = this.parseGeometries( json.geometries );\n\n    \t\tvar images = this.parseImages( json.images, function () {\n\n    \t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n    \t\t} );\n\n    \t\tvar textures  = this.parseTextures( json.textures, images );\n    \t\tvar materials = this.parseMaterials( json.materials, textures );\n\n    \t\tvar object = this.parseObject( json.object, geometries, materials );\n\n    \t\tif ( json.animations ) {\n\n    \t\t\tobject.animations = this.parseAnimations( json.animations );\n\n    \t\t}\n\n    \t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n    \t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n    \t\t}\n\n    \t\treturn object;\n\n    \t},\n\n    \tparseGeometries: function ( json ) {\n\n    \t\tvar geometries = {};\n\n    \t\tif ( json !== undefined ) {\n\n    \t\t\tvar geometryLoader = new JSONLoader();\n    \t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n    \t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n    \t\t\t\tvar geometry;\n    \t\t\t\tvar data = json[ i ];\n\n    \t\t\t\tswitch ( data.type ) {\n\n    \t\t\t\t\tcase 'PlaneGeometry':\n    \t\t\t\t\tcase 'PlaneBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.width,\n    \t\t\t\t\t\t\tdata.height,\n    \t\t\t\t\t\t\tdata.widthSegments,\n    \t\t\t\t\t\t\tdata.heightSegments\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'BoxGeometry':\n    \t\t\t\t\tcase 'BoxBufferGeometry':\n    \t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.width,\n    \t\t\t\t\t\t\tdata.height,\n    \t\t\t\t\t\t\tdata.depth,\n    \t\t\t\t\t\t\tdata.widthSegments,\n    \t\t\t\t\t\t\tdata.heightSegments,\n    \t\t\t\t\t\t\tdata.depthSegments\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'CircleGeometry':\n    \t\t\t\t\tcase 'CircleBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.radius,\n    \t\t\t\t\t\t\tdata.segments,\n    \t\t\t\t\t\t\tdata.thetaStart,\n    \t\t\t\t\t\t\tdata.thetaLength\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'CylinderGeometry':\n    \t\t\t\t\tcase 'CylinderBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.radiusTop,\n    \t\t\t\t\t\t\tdata.radiusBottom,\n    \t\t\t\t\t\t\tdata.height,\n    \t\t\t\t\t\t\tdata.radialSegments,\n    \t\t\t\t\t\t\tdata.heightSegments,\n    \t\t\t\t\t\t\tdata.openEnded,\n    \t\t\t\t\t\t\tdata.thetaStart,\n    \t\t\t\t\t\t\tdata.thetaLength\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'ConeGeometry':\n    \t\t\t\t\tcase 'ConeBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.radius,\n    \t\t\t\t\t\t\tdata.height,\n    \t\t\t\t\t\t\tdata.radialSegments,\n    \t\t\t\t\t\t\tdata.heightSegments,\n    \t\t\t\t\t\t\tdata.openEnded,\n    \t\t\t\t\t\t\tdata.thetaStart,\n    \t\t\t\t\t\t\tdata.thetaLength\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'SphereGeometry':\n    \t\t\t\t\tcase 'SphereBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.radius,\n    \t\t\t\t\t\t\tdata.widthSegments,\n    \t\t\t\t\t\t\tdata.heightSegments,\n    \t\t\t\t\t\t\tdata.phiStart,\n    \t\t\t\t\t\t\tdata.phiLength,\n    \t\t\t\t\t\t\tdata.thetaStart,\n    \t\t\t\t\t\t\tdata.thetaLength\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'DodecahedronGeometry':\n    \t\t\t\t\tcase 'IcosahedronGeometry':\n    \t\t\t\t\tcase 'OctahedronGeometry':\n    \t\t\t\t\tcase 'TetrahedronGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.radius,\n    \t\t\t\t\t\t\tdata.detail\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'RingGeometry':\n    \t\t\t\t\tcase 'RingBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.innerRadius,\n    \t\t\t\t\t\t\tdata.outerRadius,\n    \t\t\t\t\t\t\tdata.thetaSegments,\n    \t\t\t\t\t\t\tdata.phiSegments,\n    \t\t\t\t\t\t\tdata.thetaStart,\n    \t\t\t\t\t\t\tdata.thetaLength\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'TorusGeometry':\n    \t\t\t\t\tcase 'TorusBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.radius,\n    \t\t\t\t\t\t\tdata.tube,\n    \t\t\t\t\t\t\tdata.radialSegments,\n    \t\t\t\t\t\t\tdata.tubularSegments,\n    \t\t\t\t\t\t\tdata.arc\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'TorusKnotGeometry':\n    \t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.radius,\n    \t\t\t\t\t\t\tdata.tube,\n    \t\t\t\t\t\t\tdata.tubularSegments,\n    \t\t\t\t\t\t\tdata.radialSegments,\n    \t\t\t\t\t\t\tdata.p,\n    \t\t\t\t\t\t\tdata.q\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'LatheGeometry':\n    \t\t\t\t\tcase 'LatheBufferGeometry':\n\n    \t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n    \t\t\t\t\t\t\tdata.points,\n    \t\t\t\t\t\t\tdata.segments,\n    \t\t\t\t\t\t\tdata.phiStart,\n    \t\t\t\t\t\t\tdata.phiLength\n    \t\t\t\t\t\t);\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'BufferGeometry':\n\n    \t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tcase 'Geometry':\n\n    \t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\n\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\tdefault:\n\n    \t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n    \t\t\t\t\t\tcontinue;\n\n    \t\t\t\t}\n\n    \t\t\t\tgeometry.uuid = data.uuid;\n\n    \t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n    \t\t\t\tgeometries[ data.uuid ] = geometry;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn geometries;\n\n    \t},\n\n    \tparseMaterials: function ( json, textures ) {\n\n    \t\tvar materials = {};\n\n    \t\tif ( json !== undefined ) {\n\n    \t\t\tvar loader = new MaterialLoader();\n    \t\t\tloader.setTextures( textures );\n\n    \t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n    \t\t\t\tvar material = loader.parse( json[ i ] );\n    \t\t\t\tmaterials[ material.uuid ] = material;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn materials;\n\n    \t},\n\n    \tparseAnimations: function ( json ) {\n\n    \t\tvar animations = [];\n\n    \t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n    \t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n    \t\t\tanimations.push( clip );\n\n    \t\t}\n\n    \t\treturn animations;\n\n    \t},\n\n    \tparseImages: function ( json, onLoad ) {\n\n    \t\tvar scope = this;\n    \t\tvar images = {};\n\n    \t\tfunction loadImage( url ) {\n\n    \t\t\tscope.manager.itemStart( url );\n\n    \t\t\treturn loader.load( url, function () {\n\n    \t\t\t\tscope.manager.itemEnd( url );\n\n    \t\t\t}, undefined, function () {\n\n    \t\t\t\tscope.manager.itemError( url );\n\n    \t\t\t} );\n\n    \t\t}\n\n    \t\tif ( json !== undefined && json.length > 0 ) {\n\n    \t\t\tvar manager = new LoadingManager( onLoad );\n\n    \t\t\tvar loader = new ImageLoader( manager );\n    \t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n    \t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n    \t\t\t\tvar image = json[ i ];\n    \t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n    \t\t\t\timages[ image.uuid ] = loadImage( path );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn images;\n\n    \t},\n\n    \tparseTextures: function ( json, images ) {\n\n    \t\tfunction parseConstant( value, type ) {\n\n    \t\t\tif ( typeof( value ) === 'number' ) return value;\n\n    \t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n    \t\t\treturn type[ value ];\n\n    \t\t}\n\n    \t\tvar textures = {};\n\n    \t\tif ( json !== undefined ) {\n\n    \t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n    \t\t\t\tvar data = json[ i ];\n\n    \t\t\t\tif ( data.image === undefined ) {\n\n    \t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( images[ data.image ] === undefined ) {\n\n    \t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n    \t\t\t\t}\n\n    \t\t\t\tvar texture = new Texture( images[ data.image ] );\n    \t\t\t\ttexture.needsUpdate = true;\n\n    \t\t\t\ttexture.uuid = data.uuid;\n\n    \t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n    \t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TextureMapping );\n\n    \t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n    \t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n    \t\t\t\tif ( data.wrap !== undefined ) {\n\n    \t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TextureWrapping );\n    \t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TextureWrapping );\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TextureFilter );\n    \t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TextureFilter );\n    \t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n    \t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n    \t\t\t\ttextures[ data.uuid ] = texture;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\treturn textures;\n\n    \t},\n\n    \tparseObject: function () {\n\n    \t\tvar matrix = new Matrix4();\n\n    \t\treturn function parseObject( data, geometries, materials ) {\n\n    \t\t\tvar object;\n\n    \t\t\tfunction getGeometry( name ) {\n\n    \t\t\t\tif ( geometries[ name ] === undefined ) {\n\n    \t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n    \t\t\t\t}\n\n    \t\t\t\treturn geometries[ name ];\n\n    \t\t\t}\n\n    \t\t\tfunction getMaterial( name ) {\n\n    \t\t\t\tif ( name === undefined ) return undefined;\n\n    \t\t\t\tif ( materials[ name ] === undefined ) {\n\n    \t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n    \t\t\t\t}\n\n    \t\t\t\treturn materials[ name ];\n\n    \t\t\t}\n\n    \t\t\tswitch ( data.type ) {\n\n    \t\t\t\tcase 'Scene':\n\n    \t\t\t\t\tobject = new Scene();\n\n    \t\t\t\t\tif ( data.background !== undefined ) {\n\n    \t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n    \t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif ( data.fog !== undefined ) {\n\n    \t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n    \t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n    \t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n    \t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'PerspectiveCamera':\n\n    \t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n    \t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n    \t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n    \t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n    \t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n    \t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'OrthographicCamera':\n\n    \t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'AmbientLight':\n\n    \t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'DirectionalLight':\n\n    \t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'PointLight':\n\n    \t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'SpotLight':\n\n    \t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'HemisphereLight':\n\n    \t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'Mesh':\n\n    \t\t\t\t\tvar geometry = getGeometry( data.geometry );\n    \t\t\t\t\tvar material = getMaterial( data.material );\n\n    \t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n    \t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'LOD':\n\n    \t\t\t\t\tobject = new LOD();\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'Line':\n\n    \t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'LineSegments':\n\n    \t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'PointCloud':\n    \t\t\t\tcase 'Points':\n\n    \t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'Sprite':\n\n    \t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'Group':\n\n    \t\t\t\t\tobject = new Group();\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tdefault:\n\n    \t\t\t\t\tobject = new Object3D();\n\n    \t\t\t}\n\n    \t\t\tobject.uuid = data.uuid;\n\n    \t\t\tif ( data.name !== undefined ) object.name = data.name;\n    \t\t\tif ( data.matrix !== undefined ) {\n\n    \t\t\t\tmatrix.fromArray( data.matrix );\n    \t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n    \t\t\t} else {\n\n    \t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n    \t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n    \t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n    \t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n    \t\t\t}\n\n    \t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n    \t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n    \t\t\tif ( data.shadow ) {\n\n    \t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n    \t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n    \t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n    \t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n    \t\t\t}\n\n    \t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n    \t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n    \t\t\tif ( data.children !== undefined ) {\n\n    \t\t\t\tfor ( var child in data.children ) {\n\n    \t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( data.type === 'LOD' ) {\n\n    \t\t\t\tvar levels = data.levels;\n\n    \t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n    \t\t\t\t\tvar level = levels[ l ];\n    \t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n    \t\t\t\t\tif ( child !== undefined ) {\n\n    \t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn object;\n\n    \t\t};\n\n    \t}()\n\n    } );\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     * Extensible curve object\n     *\n     * Some common of Curve methods\n     * .getPoint(t), getTangent(t)\n     * .getPointAt(u), getTangentAt(u)\n     * .getPoints(), .getSpacedPoints()\n     * .getLength()\n     * .updateArcLengths()\n     *\n     * This following classes subclasses THREE.Curve:\n     *\n     * -- 2d classes --\n     * THREE.LineCurve\n     * THREE.QuadraticBezierCurve\n     * THREE.CubicBezierCurve\n     * THREE.SplineCurve\n     * THREE.ArcCurve\n     * THREE.EllipseCurve\n     *\n     * -- 3d classes --\n     * THREE.LineCurve3\n     * THREE.QuadraticBezierCurve3\n     * THREE.CubicBezierCurve3\n     * THREE.SplineCurve3\n     *\n     * A series of curves can be represented as a THREE.CurvePath\n     *\n     **/\n\n    /**************************************************************\n     *\tAbstract Curve base class\n     **************************************************************/\n\n    function Curve() {}\n\n    Curve.prototype = {\n\n    \tconstructor: Curve,\n\n    \t// Virtual base class method to overwrite and implement in subclasses\n    \t//\t- t [0 .. 1]\n\n    \tgetPoint: function ( t ) {\n\n    \t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\n    \t\treturn null;\n\n    \t},\n\n    \t// Get point at relative position in curve according to arc length\n    \t// - u [0 .. 1]\n\n    \tgetPointAt: function ( u ) {\n\n    \t\tvar t = this.getUtoTmapping( u );\n    \t\treturn this.getPoint( t );\n\n    \t},\n\n    \t// Get sequence of points using getPoint( t )\n\n    \tgetPoints: function ( divisions ) {\n\n    \t\tif ( ! divisions ) divisions = 5;\n\n    \t\tvar points = [];\n\n    \t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n    \t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n    \t\t}\n\n    \t\treturn points;\n\n    \t},\n\n    \t// Get sequence of points using getPointAt( u )\n\n    \tgetSpacedPoints: function ( divisions ) {\n\n    \t\tif ( ! divisions ) divisions = 5;\n\n    \t\tvar points = [];\n\n    \t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n    \t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n    \t\t}\n\n    \t\treturn points;\n\n    \t},\n\n    \t// Get total curve arc length\n\n    \tgetLength: function () {\n\n    \t\tvar lengths = this.getLengths();\n    \t\treturn lengths[ lengths.length - 1 ];\n\n    \t},\n\n    \t// Get list of cumulative segment lengths\n\n    \tgetLengths: function ( divisions ) {\n\n    \t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\n\n    \t\tif ( this.cacheArcLengths\n    \t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\n    \t\t\t&& ! this.needsUpdate ) {\n\n    \t\t\t//console.log( \"cached\", this.cacheArcLengths );\n    \t\t\treturn this.cacheArcLengths;\n\n    \t\t}\n\n    \t\tthis.needsUpdate = false;\n\n    \t\tvar cache = [];\n    \t\tvar current, last = this.getPoint( 0 );\n    \t\tvar p, sum = 0;\n\n    \t\tcache.push( 0 );\n\n    \t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n    \t\t\tcurrent = this.getPoint ( p / divisions );\n    \t\t\tsum += current.distanceTo( last );\n    \t\t\tcache.push( sum );\n    \t\t\tlast = current;\n\n    \t\t}\n\n    \t\tthis.cacheArcLengths = cache;\n\n    \t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\n\n    \t},\n\n    \tupdateArcLengths: function() {\n\n    \t\tthis.needsUpdate = true;\n    \t\tthis.getLengths();\n\n    \t},\n\n    \t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n    \tgetUtoTmapping: function ( u, distance ) {\n\n    \t\tvar arcLengths = this.getLengths();\n\n    \t\tvar i = 0, il = arcLengths.length;\n\n    \t\tvar targetArcLength; // The targeted u distance value to get\n\n    \t\tif ( distance ) {\n\n    \t\t\ttargetArcLength = distance;\n\n    \t\t} else {\n\n    \t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n    \t\t}\n\n    \t\t//var time = Date.now();\n\n    \t\t// binary search for the index with largest value smaller than target u distance\n\n    \t\tvar low = 0, high = il - 1, comparison;\n\n    \t\twhile ( low <= high ) {\n\n    \t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n    \t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n    \t\t\tif ( comparison < 0 ) {\n\n    \t\t\t\tlow = i + 1;\n\n    \t\t\t} else if ( comparison > 0 ) {\n\n    \t\t\t\thigh = i - 1;\n\n    \t\t\t} else {\n\n    \t\t\t\thigh = i;\n    \t\t\t\tbreak;\n\n    \t\t\t\t// DONE\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\ti = high;\n\n    \t\t//console.log('b' , i, low, high, Date.now()- time);\n\n    \t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n    \t\t\tvar t = i / ( il - 1 );\n    \t\t\treturn t;\n\n    \t\t}\n\n    \t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n    \t\tvar lengthBefore = arcLengths[ i ];\n    \t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n    \t\tvar segmentLength = lengthAfter - lengthBefore;\n\n    \t\t// determine where we are between the 'before' and 'after' points\n\n    \t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n    \t\t// add that fractional amount to t\n\n    \t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n    \t\treturn t;\n\n    \t},\n\n    \t// Returns a unit vector tangent at t\n    \t// In case any sub curve does not implement its tangent derivation,\n    \t// 2 points a small delta apart will be used to find its gradient\n    \t// which seems to give a reasonable approximation\n\n    \tgetTangent: function( t ) {\n\n    \t\tvar delta = 0.0001;\n    \t\tvar t1 = t - delta;\n    \t\tvar t2 = t + delta;\n\n    \t\t// Capping in case of danger\n\n    \t\tif ( t1 < 0 ) t1 = 0;\n    \t\tif ( t2 > 1 ) t2 = 1;\n\n    \t\tvar pt1 = this.getPoint( t1 );\n    \t\tvar pt2 = this.getPoint( t2 );\n\n    \t\tvar vec = pt2.clone().sub( pt1 );\n    \t\treturn vec.normalize();\n\n    \t},\n\n    \tgetTangentAt: function ( u ) {\n\n    \t\tvar t = this.getUtoTmapping( u );\n    \t\treturn this.getTangent( t );\n\n    \t}\n\n    };\n\n    // TODO: Transformation for Curves?\n\n    /**************************************************************\n     *\t3D Curves\n     **************************************************************/\n\n    // A Factory method for creating new curve subclasses\n\n    Curve.create = function ( constructor, getPointFunc ) {\n\n    \tconstructor.prototype = Object.create( Curve.prototype );\n    \tconstructor.prototype.constructor = constructor;\n    \tconstructor.prototype.getPoint = getPointFunc;\n\n    \treturn constructor;\n\n    };\n\n    /**************************************************************\n     *\tLine\n     **************************************************************/\n\n    function LineCurve( v1, v2 ) {\n\n    \tthis.v1 = v1;\n    \tthis.v2 = v2;\n\n    }\n\n    LineCurve.prototype = Object.create( Curve.prototype );\n    LineCurve.prototype.constructor = LineCurve;\n\n    LineCurve.prototype.isLineCurve = true;\n\n    LineCurve.prototype.getPoint = function ( t ) {\n\n    \tif ( t === 1 ) {\n\n    \t\treturn this.v2.clone();\n\n    \t}\n\n    \tvar point = this.v2.clone().sub( this.v1 );\n    \tpoint.multiplyScalar( t ).add( this.v1 );\n\n    \treturn point;\n\n    };\n\n    // Line curve is linear, so we can overwrite default getPointAt\n\n    LineCurve.prototype.getPointAt = function ( u ) {\n\n    \treturn this.getPoint( u );\n\n    };\n\n    LineCurve.prototype.getTangent = function( t ) {\n\n    \tvar tangent = this.v2.clone().sub( this.v1 );\n\n    \treturn tangent.normalize();\n\n    };\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     *\n     **/\n\n    /**************************************************************\n     *\tCurved Path - a curve path is simply a array of connected\n     *  curves, but retains the api of a curve\n     **************************************************************/\n\n    function CurvePath() {\n\n    \tthis.curves = [];\n\n    \tthis.autoClose = false; // Automatically closes the path\n\n    }\n\n    CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n    \tconstructor: CurvePath,\n\n    \tadd: function ( curve ) {\n\n    \t\tthis.curves.push( curve );\n\n    \t},\n\n    \tclosePath: function () {\n\n    \t\t// Add a line curve if start and end of lines are not connected\n    \t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n    \t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n    \t\tif ( ! startPoint.equals( endPoint ) ) {\n\n    \t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n    \t\t}\n\n    \t},\n\n    \t// To get accurate point with reference to\n    \t// entire path distance at time t,\n    \t// following has to be done:\n\n    \t// 1. Length of each sub path have to be known\n    \t// 2. Locate and identify type of curve\n    \t// 3. Get t for the curve\n    \t// 4. Return curve.getPointAt(t')\n\n    \tgetPoint: function ( t ) {\n\n    \t\tvar d = t * this.getLength();\n    \t\tvar curveLengths = this.getCurveLengths();\n    \t\tvar i = 0;\n\n    \t\t// To think about boundaries points.\n\n    \t\twhile ( i < curveLengths.length ) {\n\n    \t\t\tif ( curveLengths[ i ] >= d ) {\n\n    \t\t\t\tvar diff = curveLengths[ i ] - d;\n    \t\t\t\tvar curve = this.curves[ i ];\n\n    \t\t\t\tvar segmentLength = curve.getLength();\n    \t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n    \t\t\t\treturn curve.getPointAt( u );\n\n    \t\t\t}\n\n    \t\t\ti ++;\n\n    \t\t}\n\n    \t\treturn null;\n\n    \t\t// loop where sum != 0, sum > d , sum+1 <d\n\n    \t},\n\n    \t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n    \t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n    \t// getPoint() depends on getLength\n\n    \tgetLength: function () {\n\n    \t\tvar lens = this.getCurveLengths();\n    \t\treturn lens[ lens.length - 1 ];\n\n    \t},\n\n    \t// cacheLengths must be recalculated.\n    \tupdateArcLengths: function () {\n\n    \t\tthis.needsUpdate = true;\n    \t\tthis.cacheLengths = null;\n    \t\tthis.getLengths();\n\n    \t},\n\n    \t// Compute lengths and cache them\n    \t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n    \tgetCurveLengths: function () {\n\n    \t\t// We use cache values if curves and cache array are same length\n\n    \t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n    \t\t\treturn this.cacheLengths;\n\n    \t\t}\n\n    \t\t// Get length of sub-curve\n    \t\t// Push sums into cached array\n\n    \t\tvar lengths = [], sums = 0;\n\n    \t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n    \t\t\tsums += this.curves[ i ].getLength();\n    \t\t\tlengths.push( sums );\n\n    \t\t}\n\n    \t\tthis.cacheLengths = lengths;\n\n    \t\treturn lengths;\n\n    \t},\n\n    \tgetSpacedPoints: function ( divisions ) {\n\n    \t\tif ( ! divisions ) divisions = 40;\n\n    \t\tvar points = [];\n\n    \t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n    \t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n    \t\t}\n\n    \t\tif ( this.autoClose ) {\n\n    \t\t\tpoints.push( points[ 0 ] );\n\n    \t\t}\n\n    \t\treturn points;\n\n    \t},\n\n    \tgetPoints: function ( divisions ) {\n\n    \t\tdivisions = divisions || 12;\n\n    \t\tvar points = [], last;\n\n    \t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n    \t\t\tvar curve = curves[ i ];\n    \t\t\tvar resolution = (curve && curve.isEllipseCurve) ? divisions * 2\n    \t\t\t\t: (curve && curve.isLineCurve) ? 1\n    \t\t\t\t: (curve && curve.isSplineCurve) ? divisions * curve.points.length\n    \t\t\t\t: divisions;\n\n    \t\t\tvar pts = curve.getPoints( resolution );\n\n    \t\t\tfor ( var j = 0; j < pts.length; j++ ) {\n\n    \t\t\t\tvar point = pts[ j ];\n\n    \t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n    \t\t\t\tpoints.push( point );\n    \t\t\t\tlast = point;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tif ( this.autoClose && points.length > 1 && !points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n    \t\t\tpoints.push( points[ 0 ] );\n\n    \t\t}\n\n    \t\treturn points;\n\n    \t},\n\n    \t/**************************************************************\n    \t *\tCreate Geometries Helpers\n    \t **************************************************************/\n\n    \t/// Generate geometry from path points (for Line or Points objects)\n\n    \tcreatePointsGeometry: function ( divisions ) {\n\n    \t\tvar pts = this.getPoints( divisions );\n    \t\treturn this.createGeometry( pts );\n\n    \t},\n\n    \t// Generate geometry from equidistant sampling along the path\n\n    \tcreateSpacedPointsGeometry: function ( divisions ) {\n\n    \t\tvar pts = this.getSpacedPoints( divisions );\n    \t\treturn this.createGeometry( pts );\n\n    \t},\n\n    \tcreateGeometry: function ( points ) {\n\n    \t\tvar geometry = new Geometry();\n\n    \t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n    \t\t\tvar point = points[ i ];\n    \t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n    \t\t}\n\n    \t\treturn geometry;\n\n    \t}\n\n    } );\n\n    /**************************************************************\n     *\tEllipse curve\n     **************************************************************/\n\n    function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n    \tthis.aX = aX;\n    \tthis.aY = aY;\n\n    \tthis.xRadius = xRadius;\n    \tthis.yRadius = yRadius;\n\n    \tthis.aStartAngle = aStartAngle;\n    \tthis.aEndAngle = aEndAngle;\n\n    \tthis.aClockwise = aClockwise;\n\n    \tthis.aRotation = aRotation || 0;\n\n    }\n\n    EllipseCurve.prototype = Object.create( Curve.prototype );\n    EllipseCurve.prototype.constructor = EllipseCurve;\n\n    EllipseCurve.prototype.isEllipseCurve = true;\n\n    EllipseCurve.prototype.getPoint = function( t ) {\n\n    \tvar twoPi = Math.PI * 2;\n    \tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n    \tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n    \t// ensures that deltaAngle is 0 .. 2 PI\n    \twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n    \twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n    \tif ( deltaAngle < Number.EPSILON ) {\n\n    \t\tif ( samePoints ) {\n\n    \t\t\tdeltaAngle = 0;\n\n    \t\t} else {\n\n    \t\t\tdeltaAngle = twoPi;\n\n    \t\t}\n\n    \t}\n\n    \tif ( this.aClockwise === true && ! samePoints ) {\n\n    \t\tif ( deltaAngle === twoPi ) {\n\n    \t\t\tdeltaAngle = - twoPi;\n\n    \t\t} else {\n\n    \t\t\tdeltaAngle = deltaAngle - twoPi;\n\n    \t\t}\n\n    \t}\n\n    \tvar angle = this.aStartAngle + t * deltaAngle;\n    \tvar x = this.aX + this.xRadius * Math.cos( angle );\n    \tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n    \tif ( this.aRotation !== 0 ) {\n\n    \t\tvar cos = Math.cos( this.aRotation );\n    \t\tvar sin = Math.sin( this.aRotation );\n\n    \t\tvar tx = x - this.aX;\n    \t\tvar ty = y - this.aY;\n\n    \t\t// Rotate the point about the center of the ellipse.\n    \t\tx = tx * cos - ty * sin + this.aX;\n    \t\ty = tx * sin + ty * cos + this.aY;\n\n    \t}\n\n    \treturn new Vector2( x, y );\n\n    };\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     */\n\n    exports.CurveUtils = {\n\n    \ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\n\n    \t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\n\n    \t},\n\n    \t// Puay Bing, thanks for helping with this derivative!\n\n    \ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\n\n    \t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\n    \t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\n    \t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\n    \t\t\t3 * t * t * p3;\n\n    \t},\n\n    \ttangentSpline: function ( t, p0, p1, p2, p3 ) {\n\n    \t\t// To check if my formulas are correct\n\n    \t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\n    \t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\n    \t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\n    \t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\n\n    \t\treturn h00 + h10 + h01 + h11;\n\n    \t},\n\n    \t// Catmull-Rom\n\n    \tinterpolate: function( p0, p1, p2, p3, t ) {\n\n    \t\tvar v0 = ( p2 - p0 ) * 0.5;\n    \t\tvar v1 = ( p3 - p1 ) * 0.5;\n    \t\tvar t2 = t * t;\n    \t\tvar t3 = t * t2;\n    \t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n    \t}\n\n    };\n\n    /**************************************************************\n     *\tSpline curve\n     **************************************************************/\n\n    function SplineCurve( points /* array of Vector2 */ ) {\n\n    \tthis.points = ( points === undefined ) ? [] : points;\n\n    }\n\n    SplineCurve.prototype = Object.create( Curve.prototype );\n    SplineCurve.prototype.constructor = SplineCurve;\n\n    SplineCurve.prototype.isSplineCurve = true;\n\n    SplineCurve.prototype.getPoint = function ( t ) {\n\n    \tvar points = this.points;\n    \tvar point = ( points.length - 1 ) * t;\n\n    \tvar intPoint = Math.floor( point );\n    \tvar weight = point - intPoint;\n\n    \tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n    \tvar point1 = points[ intPoint ];\n    \tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n    \tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n    \tvar interpolate = exports.CurveUtils.interpolate;\n\n    \treturn new Vector2(\n    \t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n    \t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\n    \t);\n\n    };\n\n    /**************************************************************\n     *\tCubic Bezier curve\n     **************************************************************/\n\n    function CubicBezierCurve( v0, v1, v2, v3 ) {\n\n    \tthis.v0 = v0;\n    \tthis.v1 = v1;\n    \tthis.v2 = v2;\n    \tthis.v3 = v3;\n\n    }\n\n    CubicBezierCurve.prototype = Object.create( Curve.prototype );\n    CubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n    CubicBezierCurve.prototype.getPoint = function ( t ) {\n\n    \tvar b3 = exports.ShapeUtils.b3;\n\n    \treturn new Vector2(\n    \t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n    \t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n    \t);\n\n    };\n\n    CubicBezierCurve.prototype.getTangent = function( t ) {\n\n    \tvar tangentCubicBezier = exports.CurveUtils.tangentCubicBezier;\n\n    \treturn new Vector2(\n    \t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n    \t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\n    \t).normalize();\n\n    };\n\n    /**************************************************************\n     *\tQuadratic Bezier curve\n     **************************************************************/\n\n\n    function QuadraticBezierCurve( v0, v1, v2 ) {\n\n    \tthis.v0 = v0;\n    \tthis.v1 = v1;\n    \tthis.v2 = v2;\n\n    }\n\n    QuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n    QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\n    QuadraticBezierCurve.prototype.getPoint = function ( t ) {\n\n    \tvar b2 = exports.ShapeUtils.b2;\n\n    \treturn new Vector2(\n    \t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n    \t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\n    \t);\n\n    };\n\n\n    QuadraticBezierCurve.prototype.getTangent = function( t ) {\n\n    \tvar tangentQuadraticBezier = exports.CurveUtils.tangentQuadraticBezier;\n\n    \treturn new Vector2(\n    \t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\n    \t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\n    \t).normalize();\n\n    };\n\n    var PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n    \tfromPoints: function ( vectors ) {\n\n    \t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\n\n    \t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\n\n    \t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\n\n    \t\t}\n\n    \t},\n\n    \tmoveTo: function ( x, y ) {\n\n    \t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n    \t},\n\n    \tlineTo: function ( x, y ) {\n\n    \t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n    \t\tthis.curves.push( curve );\n\n    \t\tthis.currentPoint.set( x, y );\n\n    \t},\n\n    \tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n    \t\tvar curve = new QuadraticBezierCurve(\n    \t\t\tthis.currentPoint.clone(),\n    \t\t\tnew Vector2( aCPx, aCPy ),\n    \t\t\tnew Vector2( aX, aY )\n    \t\t);\n\n    \t\tthis.curves.push( curve );\n\n    \t\tthis.currentPoint.set( aX, aY );\n\n    \t},\n\n    \tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n    \t\tvar curve = new CubicBezierCurve(\n    \t\t\tthis.currentPoint.clone(),\n    \t\t\tnew Vector2( aCP1x, aCP1y ),\n    \t\t\tnew Vector2( aCP2x, aCP2y ),\n    \t\t\tnew Vector2( aX, aY )\n    \t\t);\n\n    \t\tthis.curves.push( curve );\n\n    \t\tthis.currentPoint.set( aX, aY );\n\n    \t},\n\n    \tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n    \t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n    \t\tvar curve = new SplineCurve( npts );\n    \t\tthis.curves.push( curve );\n\n    \t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n    \t},\n\n    \tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n    \t\tvar x0 = this.currentPoint.x;\n    \t\tvar y0 = this.currentPoint.y;\n\n    \t\tthis.absarc( aX + x0, aY + y0, aRadius,\n    \t\t\taStartAngle, aEndAngle, aClockwise );\n\n    \t},\n\n    \tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n    \t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n    \t},\n\n    \tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n    \t\tvar x0 = this.currentPoint.x;\n    \t\tvar y0 = this.currentPoint.y;\n\n    \t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n    \t},\n\n    \tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n    \t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n    \t\tif ( this.curves.length > 0 ) {\n\n    \t\t\t// if a previous curve is present, attempt to join\n    \t\t\tvar firstPoint = curve.getPoint( 0 );\n\n    \t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n    \t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tthis.curves.push( curve );\n\n    \t\tvar lastPoint = curve.getPoint( 1 );\n    \t\tthis.currentPoint.copy( lastPoint );\n\n    \t}\n\n    } );\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     * Defines a 2d shape plane using paths.\n     **/\n\n    // STEP 1 Create a path.\n    // STEP 2 Turn path into shape.\n    // STEP 3 ExtrudeGeometry takes in Shape/Shapes\n    // STEP 3a - Extract points from each shape, turn to vertices\n    // STEP 3b - Triangulate each shape, add faces.\n\n    function Shape() {\n\n    \tPath.apply( this, arguments );\n\n    \tthis.holes = [];\n\n    }\n\n    Shape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n    \tconstructor: Shape,\n\n    \tgetPointsHoles: function ( divisions ) {\n\n    \t\tvar holesPts = [];\n\n    \t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n    \t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n    \t\t}\n\n    \t\treturn holesPts;\n\n    \t},\n\n    \t// Get points of shape and holes (keypoints based on segments parameter)\n\n    \textractAllPoints: function ( divisions ) {\n\n    \t\treturn {\n\n    \t\t\tshape: this.getPoints( divisions ),\n    \t\t\tholes: this.getPointsHoles( divisions )\n\n    \t\t};\n\n    \t},\n\n    \textractPoints: function ( divisions ) {\n\n    \t\treturn this.extractAllPoints( divisions );\n\n    \t}\n\n    } );\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     * Creates free form 2d path using series of points, lines or curves.\n     *\n     **/\n\n    function Path( points ) {\n\n    \tCurvePath.call( this );\n    \tthis.currentPoint = new Vector2();\n\n    \tif ( points ) {\n\n    \t\tthis.fromPoints( points );\n\n    \t}\n\n    }\n\n    Path.prototype = PathPrototype;\n    PathPrototype.constructor = Path;\n\n\n    // minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n    function ShapePath() {\n    \tthis.subPaths = [];\n    \tthis.currentPath = null;\n    }\n\n    ShapePath.prototype = {\n    \tmoveTo: function ( x, y ) {\n    \t\tthis.currentPath = new Path();\n    \t\tthis.subPaths.push(this.currentPath);\n    \t\tthis.currentPath.moveTo( x, y );\n    \t},\n    \tlineTo: function ( x, y ) {\n    \t\tthis.currentPath.lineTo( x, y );\n    \t},\n    \tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n    \t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n    \t},\n    \tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n    \t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n    \t},\n    \tsplineThru: function ( pts ) {\n    \t\tthis.currentPath.splineThru( pts );\n    \t},\n\n    \ttoShapes: function ( isCCW, noHoles ) {\n\n    \t\tfunction toShapesNoHoles( inSubpaths ) {\n\n    \t\t\tvar shapes = [];\n\n    \t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n    \t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n    \t\t\t\tvar tmpShape = new Shape();\n    \t\t\t\ttmpShape.curves = tmpPath.curves;\n\n    \t\t\t\tshapes.push( tmpShape );\n\n    \t\t\t}\n\n    \t\t\treturn shapes;\n\n    \t\t}\n\n    \t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n    \t\t\tvar polyLen = inPolygon.length;\n\n    \t\t\t// inPt on polygon contour => immediate success    or\n    \t\t\t// toggling of inside/outside at every single! intersection point of an edge\n    \t\t\t//  with the horizontal line through inPt, left of inPt\n    \t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n    \t\t\tvar inside = false;\n    \t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n    \t\t\t\tvar edgeLowPt  = inPolygon[ p ];\n    \t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n    \t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n    \t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n    \t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n    \t\t\t\t\t// not parallel\n    \t\t\t\t\tif ( edgeDy < 0 ) {\n\n    \t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\n    \t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n    \t\t\t\t\t}\n    \t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n    \t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n    \t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n    \t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n    \t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n    \t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n    \t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\t// parallel or collinear\n    \t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n    \t\t\t\t\t// edge lies on the same horizontal line as inPt\n    \t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n    \t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n    \t\t\t\t\t// continue;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn\tinside;\n\n    \t\t}\n\n    \t\tvar isClockWise = exports.ShapeUtils.isClockWise;\n\n    \t\tvar subPaths = this.subPaths;\n    \t\tif ( subPaths.length === 0 ) return [];\n\n    \t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n    \t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n    \t\tif ( subPaths.length === 1 ) {\n\n    \t\t\ttmpPath = subPaths[ 0 ];\n    \t\t\ttmpShape = new Shape();\n    \t\t\ttmpShape.curves = tmpPath.curves;\n    \t\t\tshapes.push( tmpShape );\n    \t\t\treturn shapes;\n\n    \t\t}\n\n    \t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n    \t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n    \t\t// console.log(\"Holes first\", holesFirst);\n\n    \t\tvar betterShapeHoles = [];\n    \t\tvar newShapes = [];\n    \t\tvar newShapeHoles = [];\n    \t\tvar mainIdx = 0;\n    \t\tvar tmpPoints;\n\n    \t\tnewShapes[ mainIdx ] = undefined;\n    \t\tnewShapeHoles[ mainIdx ] = [];\n\n    \t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n    \t\t\ttmpPath = subPaths[ i ];\n    \t\t\ttmpPoints = tmpPath.getPoints();\n    \t\t\tsolid = isClockWise( tmpPoints );\n    \t\t\tsolid = isCCW ? ! solid : solid;\n\n    \t\t\tif ( solid ) {\n\n    \t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n    \t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n    \t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n    \t\t\t\tif ( holesFirst )\tmainIdx ++;\n    \t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n    \t\t\t\t//console.log('cw', i);\n\n    \t\t\t} else {\n\n    \t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n    \t\t\t\t//console.log('ccw', i);\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// only Holes? -> probably all Shapes with wrong orientation\n    \t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n    \t\tif ( newShapes.length > 1 ) {\n\n    \t\t\tvar ambiguous = false;\n    \t\t\tvar toChange = [];\n\n    \t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n    \t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n    \t\t\t}\n\n    \t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n    \t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n    \t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n    \t\t\t\t\tvar ho = sho[ hIdx ];\n    \t\t\t\t\tvar hole_unassigned = true;\n\n    \t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n    \t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n    \t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n    \t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n    \t\t\t\t\t\t\t\thole_unassigned = false;\n    \t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n    \t\t\t\t\t\t\t} else {\n\n    \t\t\t\t\t\t\t\tambiguous = true;\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n    \t\t\t\t\tif ( hole_unassigned ) {\n\n    \t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n    \t\t\t// console.log(\"ambiguous: \", ambiguous);\n    \t\t\tif ( toChange.length > 0 ) {\n\n    \t\t\t\t// console.log(\"to change: \", toChange);\n    \t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar tmpHoles;\n\n    \t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n    \t\t\ttmpShape = newShapes[ i ].s;\n    \t\t\tshapes.push( tmpShape );\n    \t\t\ttmpHoles = newShapeHoles[ i ];\n\n    \t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n    \t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t//console.log(\"shape\", shapes);\n\n    \t\treturn shapes;\n\n    \t}\n    }\n\n    /**\n     * @author zz85 / http://www.lab4games.net/zz85/blog\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Font( data ) {\n\n    \tthis.data = data;\n\n    }\n\n    Object.assign( Font.prototype, {\n\n    \tisFont: true,\n\n    \tgenerateShapes: function ( text, size, divisions ) {\n\n    \t\tfunction createPaths( text ) {\n\n    \t\t\tvar chars = String( text ).split( '' );\n    \t\t\tvar scale = size / data.resolution;\n    \t\t\tvar offset = 0;\n\n    \t\t\tvar paths = [];\n\n    \t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n    \t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\n    \t\t\t\toffset += ret.offset;\n\n    \t\t\t\tpaths.push( ret.path );\n\n    \t\t\t}\n\n    \t\t\treturn paths;\n\n    \t\t}\n\n    \t\tfunction createPath( c, scale, offset ) {\n\n    \t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n    \t\t\tif ( ! glyph ) return;\n\n    \t\t\tvar path = new ShapePath();\n\n    \t\t\tvar pts = [], b2 = exports.ShapeUtils.b2, b3 = exports.ShapeUtils.b3;\n    \t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n    \t\t\tif ( glyph.o ) {\n\n    \t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n    \t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n    \t\t\t\t\tvar action = outline[ i ++ ];\n\n    \t\t\t\t\tswitch ( action ) {\n\n    \t\t\t\t\t\tcase 'm': // moveTo\n\n    \t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n    \t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n    \t\t\t\t\t\t\tpath.moveTo( x, y );\n\n    \t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\tcase 'l': // lineTo\n\n    \t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\n    \t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\n\n    \t\t\t\t\t\t\tpath.lineTo( x, y );\n\n    \t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n    \t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n    \t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n    \t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n    \t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n\n    \t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n    \t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n    \t\t\t\t\t\t\tif ( laste ) {\n\n    \t\t\t\t\t\t\t\tcpx0 = laste.x;\n    \t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n    \t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n    \t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n    \t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\n    \t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\n\n    \t\t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n    \t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\n    \t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\n    \t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\n    \t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\n    \t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\n    \t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\n\n    \t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n    \t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n    \t\t\t\t\t\t\tif ( laste ) {\n\n    \t\t\t\t\t\t\t\tcpx0 = laste.x;\n    \t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n    \t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\n\n    \t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\n    \t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\n    \t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\n\n    \t\t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\t}\n\n    \t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\treturn { offset: glyph.ha * scale, path: path };\n\n    \t\t}\n\n    \t\t//\n\n    \t\tif ( size === undefined ) size = 100;\n    \t\tif ( divisions === undefined ) divisions = 4;\n\n    \t\tvar data = this.data;\n\n    \t\tvar paths = createPaths( text );\n    \t\tvar shapes = [];\n\n    \t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n    \t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n    \t\t}\n\n    \t\treturn shapes;\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function FontLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    }\n\n    Object.assign( FontLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tvar scope = this;\n\n    \t\tvar loader = new XHRLoader( this.manager );\n    \t\tloader.load( url, function ( text ) {\n\n    \t\t\tvar json;\n\n    \t\t\ttry {\n\n    \t\t\t\tjson = JSON.parse( text );\n\n    \t\t\t} catch ( e ) {\n\n    \t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n    \t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n    \t\t\t}\n\n    \t\t\tvar font = scope.parse( json );\n\n    \t\t\tif ( onLoad ) onLoad( font );\n\n    \t\t}, onProgress, onError );\n\n    \t},\n\n    \tparse: function ( json ) {\n\n    \t\treturn new Font( json );\n\n    \t}\n\n    } );\n\n    var context;\n\n    function getAudioContext() {\n\n    \tif ( context === undefined ) {\n\n    \t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n    \t}\n\n    \treturn context;\n\n    }\n\n    /**\n     * @author Reece Aaron Lecrivain / http://reecenotes.com/\n     */\n\n    function AudioLoader( manager ) {\n\n    \tthis.manager = ( manager !== undefined ) ? manager : exports.DefaultLoadingManager;\n\n    }\n\n    Object.assign( AudioLoader.prototype, {\n\n    \tload: function ( url, onLoad, onProgress, onError ) {\n\n    \t\tvar loader = new XHRLoader( this.manager );\n    \t\tloader.setResponseType( 'arraybuffer' );\n    \t\tloader.load( url, function ( buffer ) {\n\n    \t\t\tvar context = getAudioContext();\n\n    \t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n    \t\t\t\tonLoad( audioBuffer );\n\n    \t\t\t} );\n\n    \t\t}, onProgress, onError );\n\n    \t}\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function StereoCamera() {\n\n    \tthis.type = 'StereoCamera';\n\n    \tthis.aspect = 1;\n\n    \tthis.eyeSep = 0.064;\n\n    \tthis.cameraL = new PerspectiveCamera();\n    \tthis.cameraL.layers.enable( 1 );\n    \tthis.cameraL.matrixAutoUpdate = false;\n\n    \tthis.cameraR = new PerspectiveCamera();\n    \tthis.cameraR.layers.enable( 2 );\n    \tthis.cameraR.matrixAutoUpdate = false;\n\n    }\n\n    Object.assign( StereoCamera.prototype, {\n\n    \tupdate: ( function () {\n\n    \t\tvar instance, focus, fov, aspect, near, far, zoom;\n\n    \t\tvar eyeRight = new Matrix4();\n    \t\tvar eyeLeft = new Matrix4();\n\n    \t\treturn function update( camera ) {\n\n    \t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n    \t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n    \t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom;\n\n    \t\t\tif ( needsUpdate ) {\n\n    \t\t\t\tinstance = this;\n    \t\t\t\tfocus = camera.focus;\n    \t\t\t\tfov = camera.fov;\n    \t\t\t\taspect = camera.aspect * this.aspect;\n    \t\t\t\tnear = camera.near;\n    \t\t\t\tfar = camera.far;\n    \t\t\t\tzoom = camera.zoom;\n\n    \t\t\t\t// Off-axis stereoscopic effect based on\n    \t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n    \t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n    \t\t\t\tvar eyeSep = this.eyeSep / 2;\n    \t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n    \t\t\t\tvar ymax = ( near * Math.tan( exports.Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n    \t\t\t\tvar xmin, xmax;\n\n    \t\t\t\t// translate xOffset\n\n    \t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n    \t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n    \t\t\t\t// for left eye\n\n    \t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n    \t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n    \t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n    \t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n    \t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n    \t\t\t\t// for right eye\n\n    \t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n    \t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n    \t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n    \t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n    \t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n    \t\t\t}\n\n    \t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n    \t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n    \t\t};\n\n    \t} )()\n\n    } );\n\n    /**\n     * Camera for rendering cube maps\n     *\t- renders scene into axis-aligned cube\n     *\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function CubeCamera( near, far, cubeResolution ) {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'CubeCamera';\n\n    \tvar fov = 90, aspect = 1;\n\n    \tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n    \tcameraPX.up.set( 0, - 1, 0 );\n    \tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n    \tthis.add( cameraPX );\n\n    \tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n    \tcameraNX.up.set( 0, - 1, 0 );\n    \tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n    \tthis.add( cameraNX );\n\n    \tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n    \tcameraPY.up.set( 0, 0, 1 );\n    \tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n    \tthis.add( cameraPY );\n\n    \tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n    \tcameraNY.up.set( 0, 0, - 1 );\n    \tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n    \tthis.add( cameraNY );\n\n    \tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n    \tcameraPZ.up.set( 0, - 1, 0 );\n    \tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n    \tthis.add( cameraPZ );\n\n    \tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n    \tcameraNZ.up.set( 0, - 1, 0 );\n    \tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n    \tthis.add( cameraNZ );\n\n    \tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n    \tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\n    \tthis.updateCubeMap = function ( renderer, scene ) {\n\n    \t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n    \t\tvar renderTarget = this.renderTarget;\n    \t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n    \t\trenderTarget.texture.generateMipmaps = false;\n\n    \t\trenderTarget.activeCubeFace = 0;\n    \t\trenderer.render( scene, cameraPX, renderTarget );\n\n    \t\trenderTarget.activeCubeFace = 1;\n    \t\trenderer.render( scene, cameraNX, renderTarget );\n\n    \t\trenderTarget.activeCubeFace = 2;\n    \t\trenderer.render( scene, cameraPY, renderTarget );\n\n    \t\trenderTarget.activeCubeFace = 3;\n    \t\trenderer.render( scene, cameraNY, renderTarget );\n\n    \t\trenderTarget.activeCubeFace = 4;\n    \t\trenderer.render( scene, cameraPZ, renderTarget );\n\n    \t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n    \t\trenderTarget.activeCubeFace = 5;\n    \t\trenderer.render( scene, cameraNZ, renderTarget );\n\n    \t\trenderer.setRenderTarget( null );\n\n    \t};\n\n    }\n\n    CubeCamera.prototype = Object.create( Object3D.prototype );\n    CubeCamera.prototype.constructor = CubeCamera;\n\n    function AudioListener() {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'AudioListener';\n\n    \tthis.context = getAudioContext();\n\n    \tthis.gain = this.context.createGain();\n    \tthis.gain.connect( this.context.destination );\n\n    \tthis.filter = null;\n\n    }\n\n    AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: AudioListener,\n\n    \tgetInput: function () {\n\n    \t\treturn this.gain;\n\n    \t},\n\n    \tremoveFilter: function ( ) {\n\n    \t\tif ( this.filter !== null ) {\n\n    \t\t\tthis.gain.disconnect( this.filter );\n    \t\t\tthis.filter.disconnect( this.context.destination );\n    \t\t\tthis.gain.connect( this.context.destination );\n    \t\t\tthis.filter = null;\n\n    \t\t}\n\n    \t},\n\n    \tgetFilter: function () {\n\n    \t\treturn this.filter;\n\n    \t},\n\n    \tsetFilter: function ( value ) {\n\n    \t\tif ( this.filter !== null ) {\n\n    \t\t\tthis.gain.disconnect( this.filter );\n    \t\t\tthis.filter.disconnect( this.context.destination );\n\n    \t\t} else {\n\n    \t\t\tthis.gain.disconnect( this.context.destination );\n\n    \t\t}\n\n    \t\tthis.filter = value;\n    \t\tthis.gain.connect( this.filter );\n    \t\tthis.filter.connect( this.context.destination );\n\n    \t},\n\n    \tgetMasterVolume: function () {\n\n    \t\treturn this.gain.gain.value;\n\n    \t},\n\n    \tsetMasterVolume: function ( value ) {\n\n    \t\tthis.gain.gain.value = value;\n\n    \t},\n\n    \tupdateMatrixWorld: ( function () {\n\n    \t\tvar position = new Vector3();\n    \t\tvar quaternion = new Quaternion();\n    \t\tvar scale = new Vector3();\n\n    \t\tvar orientation = new Vector3();\n\n    \t\treturn function updateMatrixWorld( force ) {\n\n    \t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n    \t\t\tvar listener = this.context.listener;\n    \t\t\tvar up = this.up;\n\n    \t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n    \t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n    \t\t\tlistener.setPosition( position.x, position.y, position.z );\n    \t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n    \t\t};\n\n    \t} )()\n\n    } );\n\n    function Audio( listener ) {\n\n    \tObject3D.call( this );\n\n    \tthis.type = 'Audio';\n\n    \tthis.context = listener.context;\n    \tthis.source = this.context.createBufferSource();\n    \tthis.source.onended = this.onEnded.bind( this );\n\n    \tthis.gain = this.context.createGain();\n    \tthis.gain.connect( listener.getInput() );\n\n    \tthis.autoplay = false;\n\n    \tthis.startTime = 0;\n    \tthis.playbackRate = 1;\n    \tthis.isPlaying = false;\n    \tthis.hasPlaybackControl = true;\n    \tthis.sourceType = 'empty';\n\n    \tthis.filters = [];\n\n    }\n\n    Audio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n    \tconstructor: Audio,\n\n    \tgetOutput: function () {\n\n    \t\treturn this.gain;\n\n    \t},\n\n    \tsetNodeSource: function ( audioNode ) {\n\n    \t\tthis.hasPlaybackControl = false;\n    \t\tthis.sourceType = 'audioNode';\n    \t\tthis.source = audioNode;\n    \t\tthis.connect();\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetBuffer: function ( audioBuffer ) {\n\n    \t\tthis.source.buffer = audioBuffer;\n    \t\tthis.sourceType = 'buffer';\n\n    \t\tif ( this.autoplay ) this.play();\n\n    \t\treturn this;\n\n    \t},\n\n    \tplay: function () {\n\n    \t\tif ( this.isPlaying === true ) {\n\n    \t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tif ( this.hasPlaybackControl === false ) {\n\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tvar source = this.context.createBufferSource();\n\n    \t\tsource.buffer = this.source.buffer;\n    \t\tsource.loop = this.source.loop;\n    \t\tsource.onended = this.source.onended;\n    \t\tsource.start( 0, this.startTime );\n    \t\tsource.playbackRate.value = this.playbackRate;\n\n    \t\tthis.isPlaying = true;\n\n    \t\tthis.source = source;\n\n    \t\treturn this.connect();\n\n    \t},\n\n    \tpause: function () {\n\n    \t\tif ( this.hasPlaybackControl === false ) {\n\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tthis.source.stop();\n    \t\tthis.startTime = this.context.currentTime;\n    \t\tthis.isPlaying = false;\n\n    \t\treturn this;\n\n    \t},\n\n    \tstop: function () {\n\n    \t\tif ( this.hasPlaybackControl === false ) {\n\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tthis.source.stop();\n    \t\tthis.startTime = 0;\n    \t\tthis.isPlaying = false;\n\n    \t\treturn this;\n\n    \t},\n\n    \tconnect: function () {\n\n    \t\tif ( this.filters.length > 0 ) {\n\n    \t\t\tthis.source.connect( this.filters[ 0 ] );\n\n    \t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n    \t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n    \t\t\t}\n\n    \t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n    \t\t} else {\n\n    \t\t\tthis.source.connect( this.getOutput() );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tdisconnect: function () {\n\n    \t\tif ( this.filters.length > 0 ) {\n\n    \t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n    \t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n    \t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n    \t\t\t}\n\n    \t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n    \t\t} else {\n\n    \t\t\tthis.source.disconnect( this.getOutput() );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetFilters: function () {\n\n    \t\treturn this.filters;\n\n    \t},\n\n    \tsetFilters: function ( value ) {\n\n    \t\tif ( ! value ) value = [];\n\n    \t\tif ( this.isPlaying === true ) {\n\n    \t\t\tthis.disconnect();\n    \t\t\tthis.filters = value;\n    \t\t\tthis.connect();\n\n    \t\t} else {\n\n    \t\t\tthis.filters = value;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetFilter: function () {\n\n    \t\treturn this.getFilters()[ 0 ];\n\n    \t},\n\n    \tsetFilter: function ( filter ) {\n\n    \t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n    \t},\n\n    \tsetPlaybackRate: function ( value ) {\n\n    \t\tif ( this.hasPlaybackControl === false ) {\n\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tthis.playbackRate = value;\n\n    \t\tif ( this.isPlaying === true ) {\n\n    \t\t\tthis.source.playbackRate.value = this.playbackRate;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetPlaybackRate: function () {\n\n    \t\treturn this.playbackRate;\n\n    \t},\n\n    \tonEnded: function () {\n\n    \t\tthis.isPlaying = false;\n\n    \t},\n\n    \tgetLoop: function () {\n\n    \t\tif ( this.hasPlaybackControl === false ) {\n\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n    \t\t\treturn false;\n\n    \t\t}\n\n    \t\treturn this.source.loop;\n\n    \t},\n\n    \tsetLoop: function ( value ) {\n\n    \t\tif ( this.hasPlaybackControl === false ) {\n\n    \t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tthis.source.loop = value;\n\n    \t},\n\n    \tgetVolume: function () {\n\n    \t\treturn this.gain.gain.value;\n\n    \t},\n\n\n    \tsetVolume: function ( value ) {\n\n    \t\tthis.gain.gain.value = value;\n\n    \t\treturn this;\n\n    \t}\n\n    } );\n\n    function PositionalAudio( listener ) {\n\n    \tAudio.call( this, listener );\n\n    \tthis.panner = this.context.createPanner();\n    \tthis.panner.connect( this.gain );\n\n    }\n\n    PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n    \tconstructor: PositionalAudio,\n\n    \tgetOutput: function () {\n\n    \t\treturn this.panner;\n\n    \t},\n\n    \tgetRefDistance: function () {\n\n    \t\treturn this.panner.refDistance;\n\n    \t},\n\n    \tsetRefDistance: function ( value ) {\n\n    \t\tthis.panner.refDistance = value;\n\n    \t},\n\n    \tgetRolloffFactor: function () {\n\n    \t\treturn this.panner.rolloffFactor;\n\n    \t},\n\n    \tsetRolloffFactor: function ( value ) {\n\n    \t\tthis.panner.rolloffFactor = value;\n\n    \t},\n\n    \tgetDistanceModel: function () {\n\n    \t\treturn this.panner.distanceModel;\n\n    \t},\n\n    \tsetDistanceModel: function ( value ) {\n\n    \t\tthis.panner.distanceModel = value;\n\n    \t},\n\n    \tgetMaxDistance: function () {\n\n    \t\treturn this.panner.maxDistance;\n\n    \t},\n\n    \tsetMaxDistance: function ( value ) {\n\n    \t\tthis.panner.maxDistance = value;\n\n    \t},\n\n    \tupdateMatrixWorld: ( function () {\n\n    \t\tvar position = new Vector3();\n\n    \t\treturn function updateMatrixWorld( force ) {\n\n    \t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n    \t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n    \t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n    \t\t};\n\n    \t} )()\n\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function AudioAnalyser( audio, fftSize ) {\n\n    \tthis.analyser = audio.context.createAnalyser();\n    \tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n    \tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n    \taudio.getOutput().connect( this.analyser );\n\n    }\n\n    Object.assign( AudioAnalyser.prototype, {\n\n    \tgetFrequencyData: function () {\n\n    \t\tthis.analyser.getByteFrequencyData( this.data );\n\n    \t\treturn this.data;\n\n    \t},\n\n    \tgetAverageFrequency: function () {\n\n    \t\tvar value = 0, data = this.getFrequencyData();\n\n    \t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n    \t\t\tvalue += data[ i ];\n\n    \t\t}\n\n    \t\treturn value / data.length;\n\n    \t}\n\n    } );\n\n    /**\n     *\n     * Buffered scene graph property that allows weighted accumulation.\n     *\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function PropertyMixer( binding, typeName, valueSize ) {\n\n    \tthis.binding = binding;\n    \tthis.valueSize = valueSize;\n\n    \tvar bufferType = Float64Array,\n    \t\tmixFunction;\n\n    \tswitch ( typeName ) {\n\n    \t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\n\n    \t\tcase 'string':\n    \t\tcase 'bool':\n\n    \t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\n\n    \t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\n\n    \t}\n\n    \tthis.buffer = new bufferType( valueSize * 4 );\n    \t// layout: [ incoming | accu0 | accu1 | orig ]\n    \t//\n    \t// interpolators can use .buffer as their .result\n    \t// the data then goes to 'incoming'\n    \t//\n    \t// 'accu0' and 'accu1' are used frame-interleaved for\n    \t// the cumulative result and are compared to detect\n    \t// changes\n    \t//\n    \t// 'orig' stores the original state of the property\n\n    \tthis._mixBufferRegion = mixFunction;\n\n    \tthis.cumulativeWeight = 0;\n\n    \tthis.useCount = 0;\n    \tthis.referenceCount = 0;\n\n    }\n\n    PropertyMixer.prototype = {\n\n    \tconstructor: PropertyMixer,\n\n    \t// accumulate data in the 'incoming' region into 'accu<i>'\n    \taccumulate: function( accuIndex, weight ) {\n\n    \t\t// note: happily accumulating nothing when weight = 0, the caller knows\n    \t\t// the weight and shouldn't have made the call in the first place\n\n    \t\tvar buffer = this.buffer,\n    \t\t\tstride = this.valueSize,\n    \t\t\toffset = accuIndex * stride + stride,\n\n    \t\t\tcurrentWeight = this.cumulativeWeight;\n\n    \t\tif ( currentWeight === 0 ) {\n\n    \t\t\t// accuN := incoming * weight\n\n    \t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n    \t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n    \t\t\t}\n\n    \t\t\tcurrentWeight = weight;\n\n    \t\t} else {\n\n    \t\t\t// accuN := accuN + incoming * weight\n\n    \t\t\tcurrentWeight += weight;\n    \t\t\tvar mix = weight / currentWeight;\n    \t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n    \t\t}\n\n    \t\tthis.cumulativeWeight = currentWeight;\n\n    \t},\n\n    \t// apply the state of 'accu<i>' to the binding when accus differ\n    \tapply: function( accuIndex ) {\n\n    \t\tvar stride = this.valueSize,\n    \t\t\tbuffer = this.buffer,\n    \t\t\toffset = accuIndex * stride + stride,\n\n    \t\t\tweight = this.cumulativeWeight,\n\n    \t\t\tbinding = this.binding;\n\n    \t\tthis.cumulativeWeight = 0;\n\n    \t\tif ( weight < 1 ) {\n\n    \t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n    \t\t\tvar originalValueOffset = stride * 3;\n\n    \t\t\tthis._mixBufferRegion(\n    \t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n    \t\t}\n\n    \t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n    \t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n    \t\t\t\t// value has changed -> update scene graph\n\n    \t\t\t\tbinding.setValue( buffer, offset );\n    \t\t\t\tbreak;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \t// remember the state of the bound property and copy it to both accus\n    \tsaveOriginalState: function() {\n\n    \t\tvar binding = this.binding;\n\n    \t\tvar buffer = this.buffer,\n    \t\t\tstride = this.valueSize,\n\n    \t\t\toriginalValueOffset = stride * 3;\n\n    \t\tbinding.getValue( buffer, originalValueOffset );\n\n    \t\t// accu[0..1] := orig -- initially detect changes against the original\n    \t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n    \t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n    \t\t}\n\n    \t\tthis.cumulativeWeight = 0;\n\n    \t},\n\n    \t// apply the state previously taken via 'saveOriginalState' to the binding\n    \trestoreOriginalState: function() {\n\n    \t\tvar originalValueOffset = this.valueSize * 3;\n    \t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n    \t},\n\n\n    \t// mix functions\n\n    \t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n    \t\tif ( t >= 0.5 ) {\n\n    \t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n    \t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n    \t\tQuaternion.slerpFlat( buffer, dstOffset,\n    \t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\n\n    \t},\n\n    \t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\n\n    \t\tvar s = 1 - t;\n\n    \t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n    \t\t\tvar j = dstOffset + i;\n\n    \t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n    \t\t}\n\n    \t}\n\n    };\n\n    /**\n     *\n     * A reference to a real property in the scene graph.\n     *\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function PropertyBinding( rootNode, path, parsedPath ) {\n\n    \tthis.path = path;\n    \tthis.parsedPath = parsedPath ||\n    \t\t\tPropertyBinding.parseTrackName( path );\n\n    \tthis.node = PropertyBinding.findNode(\n    \t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\n\n    \tthis.rootNode = rootNode;\n\n    }\n\n    PropertyBinding.prototype = {\n\n    \tconstructor: PropertyBinding,\n\n    \tgetValue: function getValue_unbound( targetArray, offset ) {\n\n    \t\tthis.bind();\n    \t\tthis.getValue( targetArray, offset );\n\n    \t\t// Note: This class uses a State pattern on a per-method basis:\n    \t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n    \t\t// prototype version of these methods with one that represents\n    \t\t// the bound state. When the property is not found, the methods\n    \t\t// become no-ops.\n\n    \t},\n\n    \tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n    \t\tthis.bind();\n    \t\tthis.setValue( sourceArray, offset );\n\n    \t},\n\n    \t// create getter / setter pair for a property in the scene graph\n    \tbind: function() {\n\n    \t\tvar targetObject = this.node,\n    \t\t\tparsedPath = this.parsedPath,\n\n    \t\t\tobjectName = parsedPath.objectName,\n    \t\t\tpropertyName = parsedPath.propertyName,\n    \t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n    \t\tif ( ! targetObject ) {\n\n    \t\t\ttargetObject = PropertyBinding.findNode(\n    \t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n    \t\t\tthis.node = targetObject;\n\n    \t\t}\n\n    \t\t// set fail state so we can just 'return' on error\n    \t\tthis.getValue = this._getValue_unavailable;\n    \t\tthis.setValue = this._setValue_unavailable;\n\n     \t\t// ensure there is a value node\n    \t\tif ( ! targetObject ) {\n\n    \t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\tif ( objectName ) {\n\n    \t\t\tvar objectIndex = parsedPath.objectIndex;\n\n    \t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n    \t\t\tswitch ( objectName ) {\n\n    \t\t\t\tcase 'materials':\n\n    \t\t\t\t\tif ( ! targetObject.material ) {\n\n    \t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\n    \t\t\t\t\t\treturn;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n    \t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\n    \t\t\t\t\t\treturn;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\ttargetObject = targetObject.material.materials;\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tcase 'bones':\n\n    \t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n    \t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\n    \t\t\t\t\t\treturn;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n    \t\t\t\t\t// and convert the integer string to a true integer.\n\n    \t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n    \t\t\t\t\t// support resolving morphTarget names into indices.\n    \t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n    \t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n    \t\t\t\t\t\t\tobjectIndex = i;\n    \t\t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t\t}\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tbreak;\n\n    \t\t\t\tdefault:\n\n    \t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n    \t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\n    \t\t\t\t\t\treturn;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n    \t\t\t}\n\n\n    \t\t\tif ( objectIndex !== undefined ) {\n\n    \t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n    \t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\n    \t\t\t\t\treturn;\n\n    \t\t\t\t}\n\n    \t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// resolve property\n    \t\tvar nodeProperty = targetObject[ propertyName ];\n\n    \t\tif ( nodeProperty === undefined ) {\n\n    \t\t\tvar nodeName = parsedPath.nodeName;\n\n    \t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\n    \t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\n    \t\t\treturn;\n\n    \t\t}\n\n    \t\t// determine versioning scheme\n    \t\tvar versioning = this.Versioning.None;\n\n    \t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n    \t\t\tversioning = this.Versioning.NeedsUpdate;\n    \t\t\tthis.targetObject = targetObject;\n\n    \t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n    \t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n    \t\t\tthis.targetObject = targetObject;\n\n    \t\t}\n\n    \t\t// determine how the property gets bound\n    \t\tvar bindingType = this.BindingType.Direct;\n\n    \t\tif ( propertyIndex !== undefined ) {\n    \t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n    \t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n    \t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n    \t\t\t\t// support resolving morphTarget names into indices.\n    \t\t\t\tif ( ! targetObject.geometry ) {\n\n    \t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\n    \t\t\t\t\treturn;\n\n    \t\t\t\t}\n\n    \t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n    \t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\n    \t\t\t\t\treturn;\n\n    \t\t\t\t}\n\n    \t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n    \t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n    \t\t\t\t\t\tpropertyIndex = i;\n    \t\t\t\t\t\tbreak;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tbindingType = this.BindingType.ArrayElement;\n\n    \t\t\tthis.resolvedProperty = nodeProperty;\n    \t\t\tthis.propertyIndex = propertyIndex;\n\n    \t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n    \t\t\t// must use copy for Object3D.Euler/Quaternion\n\n    \t\t\tbindingType = this.BindingType.HasFromToArray;\n\n    \t\t\tthis.resolvedProperty = nodeProperty;\n\n    \t\t} else if ( nodeProperty.length !== undefined ) {\n\n    \t\t\tbindingType = this.BindingType.EntireArray;\n\n    \t\t\tthis.resolvedProperty = nodeProperty;\n\n    \t\t} else {\n\n    \t\t\tthis.propertyName = propertyName;\n\n    \t\t}\n\n    \t\t// select getter / setter\n    \t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n    \t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n    \t},\n\n    \tunbind: function() {\n\n    \t\tthis.node = null;\n\n    \t\t// back to the prototype version of getValue / setValue\n    \t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n    \t\tthis.getValue = this._getValue_unbound;\n    \t\tthis.setValue = this._setValue_unbound;\n\n    \t}\n\n    };\n\n    Object.assign( PropertyBinding.prototype, { // prototype, continued\n\n    \t// these are used to \"bind\" a nonexistent property\n    \t_getValue_unavailable: function() {},\n    \t_setValue_unavailable: function() {},\n\n    \t// initial state of these methods that calls 'bind'\n    \t_getValue_unbound: PropertyBinding.prototype.getValue,\n    \t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n    \tBindingType: {\n    \t\tDirect: 0,\n    \t\tEntireArray: 1,\n    \t\tArrayElement: 2,\n    \t\tHasFromToArray: 3\n    \t},\n\n    \tVersioning: {\n    \t\tNone: 0,\n    \t\tNeedsUpdate: 1,\n    \t\tMatrixWorldNeedsUpdate: 2\n    \t},\n\n    \tGetterByBindingType: [\n\n    \t\tfunction getValue_direct( buffer, offset ) {\n\n    \t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n    \t\t},\n\n    \t\tfunction getValue_array( buffer, offset ) {\n\n    \t\t\tvar source = this.resolvedProperty;\n\n    \t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n    \t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n    \t\t\t}\n\n    \t\t},\n\n    \t\tfunction getValue_arrayElement( buffer, offset ) {\n\n    \t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n    \t\t},\n\n    \t\tfunction getValue_toArray( buffer, offset ) {\n\n    \t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n    \t\t}\n\n    \t],\n\n    \tSetterByBindingTypeAndVersioning: [\n\n    \t\t[\n    \t\t\t// Direct\n\n    \t\t\tfunction setValue_direct( buffer, offset ) {\n\n    \t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n\n    \t\t\t},\n\n    \t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n    \t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n    \t\t\t\tthis.targetObject.needsUpdate = true;\n\n    \t\t\t},\n\n    \t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n    \t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\n    \t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n    \t\t\t}\n\n    \t\t], [\n\n    \t\t\t// EntireArray\n\n    \t\t\tfunction setValue_array( buffer, offset ) {\n\n    \t\t\t\tvar dest = this.resolvedProperty;\n\n    \t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n    \t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n    \t\t\t\t}\n\n    \t\t\t},\n\n    \t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n    \t\t\t\tvar dest = this.resolvedProperty;\n\n    \t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n    \t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n    \t\t\t\t}\n\n    \t\t\t\tthis.targetObject.needsUpdate = true;\n\n    \t\t\t},\n\n    \t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n    \t\t\t\tvar dest = this.resolvedProperty;\n\n    \t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n    \t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n    \t\t\t\t}\n\n    \t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n    \t\t\t}\n\n    \t\t], [\n\n    \t\t\t// ArrayElement\n\n    \t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n    \t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n    \t\t\t},\n\n    \t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n    \t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n    \t\t\t\tthis.targetObject.needsUpdate = true;\n\n    \t\t\t},\n\n    \t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n    \t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n    \t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n    \t\t\t}\n\n    \t\t], [\n\n    \t\t\t// HasToFromArray\n\n    \t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n    \t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n    \t\t\t},\n\n    \t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n    \t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n    \t\t\t\tthis.targetObject.needsUpdate = true;\n\n    \t\t\t},\n\n    \t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n    \t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n    \t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n    \t\t\t}\n\n    \t\t]\n\n    \t]\n\n    } );\n\n    PropertyBinding.Composite =\n    \t\tfunction( targetGroup, path, optionalParsedPath ) {\n\n    \tvar parsedPath = optionalParsedPath ||\n    \t\t\tPropertyBinding.parseTrackName( path );\n\n    \tthis._targetGroup = targetGroup;\n    \tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n    };\n\n    PropertyBinding.Composite.prototype = {\n\n    \tconstructor: PropertyBinding.Composite,\n\n    \tgetValue: function( array, offset ) {\n\n    \t\tthis.bind(); // bind all binding\n\n    \t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n    \t\t\tbinding = this._bindings[ firstValidIndex ];\n\n    \t\t// and only call .getValue on the first\n    \t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n    \t},\n\n    \tsetValue: function( array, offset ) {\n\n    \t\tvar bindings = this._bindings;\n\n    \t\tfor ( var i = this._targetGroup.nCachedObjects_,\n    \t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n    \t\t\tbindings[ i ].setValue( array, offset );\n\n    \t\t}\n\n    \t},\n\n    \tbind: function() {\n\n    \t\tvar bindings = this._bindings;\n\n    \t\tfor ( var i = this._targetGroup.nCachedObjects_,\n    \t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n    \t\t\tbindings[ i ].bind();\n\n    \t\t}\n\n    \t},\n\n    \tunbind: function() {\n\n    \t\tvar bindings = this._bindings;\n\n    \t\tfor ( var i = this._targetGroup.nCachedObjects_,\n    \t\t\t\tn = bindings.length; i !== n; ++ i ) {\n\n    \t\t\tbindings[ i ].unbind();\n\n    \t\t}\n\n    \t}\n\n    };\n\n    PropertyBinding.create = function( root, path, parsedPath ) {\n\n    \tif ( ! ( (root && root.isAnimationObjectGroup) ) ) {\n\n    \t\treturn new PropertyBinding( root, path, parsedPath );\n\n    \t} else {\n\n    \t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n    \t}\n\n    };\n\n    PropertyBinding.parseTrackName = function( trackName ) {\n\n    \t// matches strings in the form of:\n    \t//    nodeName.property\n    \t//    nodeName.property[accessor]\n    \t//    nodeName.material.property[accessor]\n    \t//    uuid.property[accessor]\n    \t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\n    \t//    parentName/nodeName.property\n    \t//    parentName/parentName/nodeName.property[index]\n    \t//    .bone[Armature.DEF_cog].position\n    \t//    scene:helium_balloon_model:helium_balloon_model.position\n    \t// created and tested via https://regex101.com/#javascript\n\n    \tvar re = /^((?:\\w+[\\/:])*)(\\w+)?(?:\\.(\\w+)(?:\\[(.+)\\])?)?\\.(\\w+)(?:\\[(.+)\\])?$/;\n    \tvar matches = re.exec( trackName );\n\n    \tif ( ! matches ) {\n\n    \t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\n\n    \t}\n\n    \tvar results = {\n    \t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n    \t\tnodeName: matches[ 2 ], \t// allowed to be null, specified root node.\n    \t\tobjectName: matches[ 3 ],\n    \t\tobjectIndex: matches[ 4 ],\n    \t\tpropertyName: matches[ 5 ],\n    \t\tpropertyIndex: matches[ 6 ]\t// allowed to be null, specifies that the whole property is set.\n    \t};\n\n    \tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n    \t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\n\n    \t}\n\n    \treturn results;\n\n    };\n\n    PropertyBinding.findNode = function( root, nodeName ) {\n\n    \tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\n\n    \t\treturn root;\n\n    \t}\n\n    \t// search into skeleton bones.\n    \tif ( root.skeleton ) {\n\n    \t\tvar searchSkeleton = function( skeleton ) {\n\n    \t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n    \t\t\t\tvar bone = skeleton.bones[ i ];\n\n    \t\t\t\tif ( bone.name === nodeName ) {\n\n    \t\t\t\t\treturn bone;\n\n    \t\t\t\t}\n    \t\t\t}\n\n    \t\t\treturn null;\n\n    \t\t};\n\n    \t\tvar bone = searchSkeleton( root.skeleton );\n\n    \t\tif ( bone ) {\n\n    \t\t\treturn bone;\n\n    \t\t}\n    \t}\n\n    \t// search into node subtree.\n    \tif ( root.children ) {\n\n    \t\tvar searchNodeSubtree = function( children ) {\n\n    \t\t\tfor( var i = 0; i < children.length; i ++ ) {\n\n    \t\t\t\tvar childNode = children[ i ];\n\n    \t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n    \t\t\t\t\treturn childNode;\n\n    \t\t\t\t}\n\n    \t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n    \t\t\t\tif ( result ) return result;\n\n    \t\t\t}\n\n    \t\t\treturn null;\n\n    \t\t};\n\n    \t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n    \t\tif ( subTreeNode ) {\n\n    \t\t\treturn subTreeNode;\n\n    \t\t}\n\n    \t}\n\n    \treturn null;\n\n    };\n\n    /**\n     *\n     * A group of objects that receives a shared animation state.\n     *\n     * Usage:\n     *\n     * \t-\tAdd objects you would otherwise pass as 'root' to the\n     * \t\tconstructor or the .clipAction method of AnimationMixer.\n     *\n     * \t-\tInstead pass this object as 'root'.\n     *\n     * \t-\tYou can also add and remove objects later when the mixer\n     * \t\tis running.\n     *\n     * Note:\n     *\n     *  \tObjects of this class appear as one object to the mixer,\n     *  \tso cache control of the individual objects must be done\n     *  \ton the group.\n     *\n     * Limitation:\n     *\n     * \t- \tThe animated properties must be compatible among the\n     * \t\tall objects in the group.\n     *\n     *  -\tA single property can either be controlled through a\n     *  \ttarget group or directly, but not both.\n     *\n     * @author tschw\n     */\n\n    function AnimationObjectGroup( var_args ) {\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \t// cached objects followed by the active ones\n    \tthis._objects = Array.prototype.slice.call( arguments );\n\n    \tthis.nCachedObjects_ = 0;\t\t\t// threshold\n    \t// note: read by PropertyBinding.Composite\n\n    \tvar indices = {};\n    \tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n    \tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n    \t\tindices[ arguments[ i ].uuid ] = i;\n\n    \t}\n\n    \tthis._paths = [];\t\t\t\t\t// inside: string\n    \tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n    \tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n    \tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n    \tvar scope = this;\n\n    \tthis.stats = {\n\n    \t\tobjects: {\n    \t\t\tget total() { return scope._objects.length; },\n    \t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\n    \t\t},\n\n    \t\tget bindingsPerObject() { return scope._bindings.length; }\n\n    \t};\n\n    }\n\n    AnimationObjectGroup.prototype = {\n\n    \tconstructor: AnimationObjectGroup,\n\n    \tisAnimationObjectGroup: true,\n\n    \tadd: function( var_args ) {\n\n    \t\tvar objects = this._objects,\n    \t\t\tnObjects = objects.length,\n    \t\t\tnCachedObjects = this.nCachedObjects_,\n    \t\t\tindicesByUUID = this._indicesByUUID,\n    \t\t\tpaths = this._paths,\n    \t\t\tparsedPaths = this._parsedPaths,\n    \t\t\tbindings = this._bindings,\n    \t\t\tnBindings = bindings.length;\n\n    \t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n    \t\t\tvar object = arguments[ i ],\n    \t\t\t\tuuid = object.uuid,\n    \t\t\t\tindex = indicesByUUID[ uuid ];\n\n    \t\t\tif ( index === undefined ) {\n\n    \t\t\t\t// unknown object -> add it to the ACTIVE region\n\n    \t\t\t\tindex = nObjects ++;\n    \t\t\t\tindicesByUUID[ uuid ] = index;\n    \t\t\t\tobjects.push( object );\n\n    \t\t\t\t// accounting is done, now do the same for all bindings\n\n    \t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n    \t\t\t\t\tbindings[ j ].push(\n    \t\t\t\t\t\t\tnew PropertyBinding(\n    \t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( index < nCachedObjects ) {\n\n    \t\t\t\tvar knownObject = objects[ index ];\n\n    \t\t\t\t// move existing object to the ACTIVE region\n\n    \t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n    \t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n    \t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n    \t\t\t\tobjects[ index ] = lastCachedObject;\n\n    \t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n    \t\t\t\tobjects[ firstActiveIndex ] = object;\n\n    \t\t\t\t// accounting is done, now do the same for all bindings\n\n    \t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n    \t\t\t\t\tvar bindingsForPath = bindings[ j ],\n    \t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n    \t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n    \t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n    \t\t\t\t\tif ( binding === undefined ) {\n\n    \t\t\t\t\t\t// since we do not bother to create new bindings\n    \t\t\t\t\t\t// for objects that are cached, the binding may\n    \t\t\t\t\t\t// or may not exist\n\n    \t\t\t\t\t\tbinding = new PropertyBinding(\n    \t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n    \t\t\t\t}\n\n    \t\t\t} else if ( objects[ index ] !== knownObject) {\n\n    \t\t\t\tconsole.error( \"Different objects with the same UUID \" +\n    \t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\n    \t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\n\n    \t\t\t} // else the object is already where we want it to be\n\n    \t\t} // for arguments\n\n    \t\tthis.nCachedObjects_ = nCachedObjects;\n\n    \t},\n\n    \tremove: function( var_args ) {\n\n    \t\tvar objects = this._objects,\n    \t\t\tnCachedObjects = this.nCachedObjects_,\n    \t\t\tindicesByUUID = this._indicesByUUID,\n    \t\t\tbindings = this._bindings,\n    \t\t\tnBindings = bindings.length;\n\n    \t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n    \t\t\tvar object = arguments[ i ],\n    \t\t\t\tuuid = object.uuid,\n    \t\t\t\tindex = indicesByUUID[ uuid ];\n\n    \t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n    \t\t\t\t// move existing object into the CACHED region\n\n    \t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n    \t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n    \t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n    \t\t\t\tobjects[ index ] = firstActiveObject;\n\n    \t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n    \t\t\t\tobjects[ lastCachedIndex ] = object;\n\n    \t\t\t\t// accounting is done, now do the same for all bindings\n\n    \t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n    \t\t\t\t\tvar bindingsForPath = bindings[ j ],\n    \t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n    \t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n    \t\t\t\t\tbindingsForPath[ index ] = firstActive;\n    \t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t} // for arguments\n\n    \t\tthis.nCachedObjects_ = nCachedObjects;\n\n    \t},\n\n    \t// remove & forget\n    \tuncache: function( var_args ) {\n\n    \t\tvar objects = this._objects,\n    \t\t\tnObjects = objects.length,\n    \t\t\tnCachedObjects = this.nCachedObjects_,\n    \t\t\tindicesByUUID = this._indicesByUUID,\n    \t\t\tbindings = this._bindings,\n    \t\t\tnBindings = bindings.length;\n\n    \t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n    \t\t\tvar object = arguments[ i ],\n    \t\t\t\tuuid = object.uuid,\n    \t\t\t\tindex = indicesByUUID[ uuid ];\n\n    \t\t\tif ( index !== undefined ) {\n\n    \t\t\t\tdelete indicesByUUID[ uuid ];\n\n    \t\t\t\tif ( index < nCachedObjects ) {\n\n    \t\t\t\t\t// object is cached, shrink the CACHED region\n\n    \t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n    \t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n    \t\t\t\t\t\tlastIndex = -- nObjects,\n    \t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n    \t\t\t\t\t// last cached object takes this object's place\n    \t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n    \t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n    \t\t\t\t\t// last object goes to the activated slot and pop\n    \t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n    \t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n    \t\t\t\t\tobjects.pop();\n\n    \t\t\t\t\t// accounting is done, now do the same for all bindings\n\n    \t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n    \t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n    \t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n    \t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n    \t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n    \t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n    \t\t\t\t\t\tbindingsForPath.pop();\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\t// object is active, just swap with the last and pop\n\n    \t\t\t\t\tvar lastIndex = -- nObjects,\n    \t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n    \t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n    \t\t\t\t\tobjects[ index ] = lastObject;\n    \t\t\t\t\tobjects.pop();\n\n    \t\t\t\t\t// accounting is done, now do the same for all bindings\n\n    \t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n    \t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n    \t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n    \t\t\t\t\t\tbindingsForPath.pop();\n\n    \t\t\t\t\t}\n\n    \t\t\t\t} // cached or active\n\n    \t\t\t} // if object is known\n\n    \t\t} // for arguments\n\n    \t\tthis.nCachedObjects_ = nCachedObjects;\n\n    \t},\n\n    \t// Internal interface used by befriended PropertyBinding.Composite:\n\n    \tsubscribe_: function( path, parsedPath ) {\n    \t\t// returns an array of bindings for the given path that is changed\n    \t\t// according to the contained objects in the group\n\n    \t\tvar indicesByPath = this._bindingsIndicesByPath,\n    \t\t\tindex = indicesByPath[ path ],\n    \t\t\tbindings = this._bindings;\n\n    \t\tif ( index !== undefined ) return bindings[ index ];\n\n    \t\tvar paths = this._paths,\n    \t\t\tparsedPaths = this._parsedPaths,\n    \t\t\tobjects = this._objects,\n    \t\t\tnObjects = objects.length,\n    \t\t\tnCachedObjects = this.nCachedObjects_,\n    \t\t\tbindingsForPath = new Array( nObjects );\n\n    \t\tindex = bindings.length;\n\n    \t\tindicesByPath[ path ] = index;\n\n    \t\tpaths.push( path );\n    \t\tparsedPaths.push( parsedPath );\n    \t\tbindings.push( bindingsForPath );\n\n    \t\tfor ( var i = nCachedObjects,\n    \t\t\t\tn = objects.length; i !== n; ++ i ) {\n\n    \t\t\tvar object = objects[ i ];\n\n    \t\t\tbindingsForPath[ i ] =\n    \t\t\t\t\tnew PropertyBinding( object, path, parsedPath );\n\n    \t\t}\n\n    \t\treturn bindingsForPath;\n\n    \t},\n\n    \tunsubscribe_: function( path ) {\n    \t\t// tells the group to forget about a property path and no longer\n    \t\t// update the array previously obtained with 'subscribe_'\n\n    \t\tvar indicesByPath = this._bindingsIndicesByPath,\n    \t\t\tindex = indicesByPath[ path ];\n\n    \t\tif ( index !== undefined ) {\n\n    \t\t\tvar paths = this._paths,\n    \t\t\t\tparsedPaths = this._parsedPaths,\n    \t\t\t\tbindings = this._bindings,\n    \t\t\t\tlastBindingsIndex = bindings.length - 1,\n    \t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n    \t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n    \t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n    \t\t\tbindings[ index ] = lastBindings;\n    \t\t\tbindings.pop();\n\n    \t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n    \t\t\tparsedPaths.pop();\n\n    \t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n    \t\t\tpaths.pop();\n\n    \t\t}\n\n    \t}\n\n    };\n\n    /**\n     *\n     * Action provided by AnimationMixer for scheduling clip playback on specific\n     * objects.\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     *\n     */\n\n    function AnimationAction( mixer, clip, localRoot ) {\n\n    \tthis._mixer = mixer;\n    \tthis._clip = clip;\n    \tthis._localRoot = localRoot || null;\n\n    \tvar tracks = clip.tracks,\n    \t\tnTracks = tracks.length,\n    \t\tinterpolants = new Array( nTracks );\n\n    \tvar interpolantSettings = {\n    \t\t\tendingStart: \tZeroCurvatureEnding,\n    \t\t\tendingEnd:\t\tZeroCurvatureEnding\n    \t};\n\n    \tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n    \t\tvar interpolant = tracks[ i ].createInterpolant( null );\n    \t\tinterpolants[ i ] = interpolant;\n    \t\tinterpolant.settings = interpolantSettings;\n\n    \t}\n\n    \tthis._interpolantSettings = interpolantSettings;\n\n    \tthis._interpolants = interpolants;\t// bound by the mixer\n\n    \t// inside: PropertyMixer (managed by the mixer)\n    \tthis._propertyBindings = new Array( nTracks );\n\n    \tthis._cacheIndex = null;\t\t\t// for the memory manager\n    \tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n    \tthis._timeScaleInterpolant = null;\n    \tthis._weightInterpolant = null;\n\n    \tthis.loop = LoopRepeat;\n    \tthis._loopCount = -1;\n\n    \t// global mixer time when the action is to be started\n    \t// it's set back to 'null' upon start of the action\n    \tthis._startTime = null;\n\n    \t// scaled local time of the action\n    \t// gets clamped or wrapped to 0..clip.duration according to loop\n    \tthis.time = 0;\n\n    \tthis.timeScale = 1;\n    \tthis._effectiveTimeScale = 1;\n\n    \tthis.weight = 1;\n    \tthis._effectiveWeight = 1;\n\n    \tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n    \tthis.paused = false;\t\t\t\t// false -> zero effective time scale\n    \tthis.enabled = true;\t\t\t\t// true -> zero effective weight\n\n    \tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n    \tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n    \tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n    };\n\n    AnimationAction.prototype = {\n\n    \tconstructor: AnimationAction,\n\n    \t// State & Scheduling\n\n    \tplay: function() {\n\n    \t\tthis._mixer._activateAction( this );\n\n    \t\treturn this;\n\n    \t},\n\n    \tstop: function() {\n\n    \t\tthis._mixer._deactivateAction( this );\n\n    \t\treturn this.reset();\n\n    \t},\n\n    \treset: function() {\n\n    \t\tthis.paused = false;\n    \t\tthis.enabled = true;\n\n    \t\tthis.time = 0;\t\t\t// restart clip\n    \t\tthis._loopCount = -1;\t// forget previous loops\n    \t\tthis._startTime = null;\t// forget scheduling\n\n    \t\treturn this.stopFading().stopWarping();\n\n    \t},\n\n    \tisRunning: function() {\n\n    \t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n    \t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n    \t},\n\n    \t// return true when play has been called\n    \tisScheduled: function() {\n\n    \t\treturn this._mixer._isActiveAction( this );\n\n    \t},\n\n    \tstartAt: function( time ) {\n\n    \t\tthis._startTime = time;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetLoop: function( mode, repetitions ) {\n\n    \t\tthis.loop = mode;\n    \t\tthis.repetitions = repetitions;\n\n    \t\treturn this;\n\n    \t},\n\n    \t// Weight\n\n    \t// set the weight stopping any scheduled fading\n    \t// although .enabled = false yields an effective weight of zero, this\n    \t// method does *not* change .enabled, because it would be confusing\n    \tsetEffectiveWeight: function( weight ) {\n\n    \t\tthis.weight = weight;\n\n    \t\t// note: same logic as when updated at runtime\n    \t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n    \t\treturn this.stopFading();\n\n    \t},\n\n    \t// return the weight considering fading and .enabled\n    \tgetEffectiveWeight: function() {\n\n    \t\treturn this._effectiveWeight;\n\n    \t},\n\n    \tfadeIn: function( duration ) {\n\n    \t\treturn this._scheduleFading( duration, 0, 1 );\n\n    \t},\n\n    \tfadeOut: function( duration ) {\n\n    \t\treturn this._scheduleFading( duration, 1, 0 );\n\n    \t},\n\n    \tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\n\n    \t\tfadeOutAction.fadeOut( duration );\n    \t\tthis.fadeIn( duration );\n\n    \t\tif( warp ) {\n\n    \t\t\tvar fadeInDuration = this._clip.duration,\n    \t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n    \t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n    \t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n    \t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n    \t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tcrossFadeTo: function( fadeInAction, duration, warp ) {\n\n    \t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n    \t},\n\n    \tstopFading: function() {\n\n    \t\tvar weightInterpolant = this._weightInterpolant;\n\n    \t\tif ( weightInterpolant !== null ) {\n\n    \t\t\tthis._weightInterpolant = null;\n    \t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \t// Time Scale Control\n\n    \t// set the weight stopping any scheduled warping\n    \t// although .paused = true yields an effective time scale of zero, this\n    \t// method does *not* change .paused, because it would be confusing\n    \tsetEffectiveTimeScale: function( timeScale ) {\n\n    \t\tthis.timeScale = timeScale;\n    \t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\n\n    \t\treturn this.stopWarping();\n\n    \t},\n\n    \t// return the time scale considering warping and .paused\n    \tgetEffectiveTimeScale: function() {\n\n    \t\treturn this._effectiveTimeScale;\n\n    \t},\n\n    \tsetDuration: function( duration ) {\n\n    \t\tthis.timeScale = this._clip.duration / duration;\n\n    \t\treturn this.stopWarping();\n\n    \t},\n\n    \tsyncWith: function( action ) {\n\n    \t\tthis.time = action.time;\n    \t\tthis.timeScale = action.timeScale;\n\n    \t\treturn this.stopWarping();\n\n    \t},\n\n    \thalt: function( duration ) {\n\n    \t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n    \t},\n\n    \twarp: function( startTimeScale, endTimeScale, duration ) {\n\n    \t\tvar mixer = this._mixer, now = mixer.time,\n    \t\t\tinterpolant = this._timeScaleInterpolant,\n\n    \t\t\ttimeScale = this.timeScale;\n\n    \t\tif ( interpolant === null ) {\n\n    \t\t\tinterpolant = mixer._lendControlInterpolant(),\n    \t\t\tthis._timeScaleInterpolant = interpolant;\n\n    \t\t}\n\n    \t\tvar times = interpolant.parameterPositions,\n    \t\t\tvalues = interpolant.sampleValues;\n\n    \t\ttimes[ 0 ] = now;\n    \t\ttimes[ 1 ] = now + duration;\n\n    \t\tvalues[ 0 ] = startTimeScale / timeScale;\n    \t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n    \t\treturn this;\n\n    \t},\n\n    \tstopWarping: function() {\n\n    \t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n    \t\tif ( timeScaleInterpolant !== null ) {\n\n    \t\t\tthis._timeScaleInterpolant = null;\n    \t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \t// Object Accessors\n\n    \tgetMixer: function() {\n\n    \t\treturn this._mixer;\n\n    \t},\n\n    \tgetClip: function() {\n\n    \t\treturn this._clip;\n\n    \t},\n\n    \tgetRoot: function() {\n\n    \t\treturn this._localRoot || this._mixer._root;\n\n    \t},\n\n    \t// Interna\n\n    \t_update: function( time, deltaTime, timeDirection, accuIndex ) {\n    \t\t// called by the mixer\n\n    \t\tvar startTime = this._startTime;\n\n    \t\tif ( startTime !== null ) {\n\n    \t\t\t// check for scheduled start of action\n\n    \t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n    \t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n    \t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n    \t\t\t}\n\n    \t\t\t// start\n\n    \t\t\tthis._startTime = null; // unschedule\n    \t\t\tdeltaTime = timeDirection * timeRunning;\n\n    \t\t}\n\n    \t\t// apply time scale and advance time\n\n    \t\tdeltaTime *= this._updateTimeScale( time );\n    \t\tvar clipTime = this._updateTime( deltaTime );\n\n    \t\t// note: _updateTime may disable the action resulting in\n    \t\t// an effective weight of 0\n\n    \t\tvar weight = this._updateWeight( time );\n\n    \t\tif ( weight > 0 ) {\n\n    \t\t\tvar interpolants = this._interpolants;\n    \t\t\tvar propertyMixers = this._propertyBindings;\n\n    \t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n    \t\t\t\tinterpolants[ j ].evaluate( clipTime );\n    \t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \t_updateWeight: function( time ) {\n\n    \t\tvar weight = 0;\n\n    \t\tif ( this.enabled ) {\n\n    \t\t\tweight = this.weight;\n    \t\t\tvar interpolant = this._weightInterpolant;\n\n    \t\t\tif ( interpolant !== null ) {\n\n    \t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n    \t\t\t\tweight *= interpolantValue;\n\n    \t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n    \t\t\t\t\tthis.stopFading();\n\n    \t\t\t\t\tif ( interpolantValue === 0 ) {\n\n    \t\t\t\t\t\t// faded out, disable\n    \t\t\t\t\t\tthis.enabled = false;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tthis._effectiveWeight = weight;\n    \t\treturn weight;\n\n    \t},\n\n    \t_updateTimeScale: function( time ) {\n\n    \t\tvar timeScale = 0;\n\n    \t\tif ( ! this.paused ) {\n\n    \t\t\ttimeScale = this.timeScale;\n\n    \t\t\tvar interpolant = this._timeScaleInterpolant;\n\n    \t\t\tif ( interpolant !== null ) {\n\n    \t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n    \t\t\t\ttimeScale *= interpolantValue;\n\n    \t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n    \t\t\t\t\tthis.stopWarping();\n\n    \t\t\t\t\tif ( timeScale === 0 ) {\n\n    \t\t\t\t\t\t// motion has halted, pause\n    \t\t\t\t\t\tthis.paused = true;\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\t// warp done - apply final time scale\n    \t\t\t\t\t\tthis.timeScale = timeScale;\n\n    \t\t\t\t\t}\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tthis._effectiveTimeScale = timeScale;\n    \t\treturn timeScale;\n\n    \t},\n\n    \t_updateTime: function( deltaTime ) {\n\n    \t\tvar time = this.time + deltaTime;\n\n    \t\tif ( deltaTime === 0 ) return time;\n\n    \t\tvar duration = this._clip.duration,\n\n    \t\t\tloop = this.loop,\n    \t\t\tloopCount = this._loopCount;\n\n    \t\tif ( loop === LoopOnce ) {\n\n    \t\t\tif ( loopCount === -1 ) {\n    \t\t\t\t// just started\n\n    \t\t\t\tthis.loopCount = 0;\n    \t\t\t\tthis._setEndings( true, true, false );\n\n    \t\t\t}\n\n    \t\t\thandle_stop: {\n\n    \t\t\t\tif ( time >= duration ) {\n\n    \t\t\t\t\ttime = duration;\n\n    \t\t\t\t} else if ( time < 0 ) {\n\n    \t\t\t\t\ttime = 0;\n\n    \t\t\t\t} else break handle_stop;\n\n    \t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n    \t\t\t\telse this.enabled = false;\n\n    \t\t\t\tthis._mixer.dispatchEvent( {\n    \t\t\t\t\ttype: 'finished', action: this,\n    \t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n    \t\t\t\t} );\n\n    \t\t\t}\n\n    \t\t} else { // repetitive Repeat or PingPong\n\n    \t\t\tvar pingPong = ( loop === LoopPingPong );\n\n    \t\t\tif ( loopCount === -1 ) {\n    \t\t\t\t// just started\n\n    \t\t\t\tif ( deltaTime >= 0 ) {\n\n    \t\t\t\t\tloopCount = 0;\n\n    \t\t\t\t\tthis._setEndings(\n    \t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\n\n    \t\t\t\t} else {\n\n    \t\t\t\t\t// when looping in reverse direction, the initial\n    \t\t\t\t\t// transition through zero counts as a repetition,\n    \t\t\t\t\t// so leave loopCount at -1\n\n    \t\t\t\t\tthis._setEndings(\n    \t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( time >= duration || time < 0 ) {\n    \t\t\t\t// wrap around\n\n    \t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n    \t\t\t\ttime -= duration * loopDelta;\n\n    \t\t\t\tloopCount += Math.abs( loopDelta );\n\n    \t\t\t\tvar pending = this.repetitions - loopCount;\n\n    \t\t\t\tif ( pending < 0 ) {\n    \t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n    \t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n    \t\t\t\t\telse this.enabled = false;\n\n    \t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n    \t\t\t\t\tthis._mixer.dispatchEvent( {\n    \t\t\t\t\t\ttype: 'finished', action: this,\n    \t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n    \t\t\t\t\t} );\n\n    \t\t\t\t} else {\n    \t\t\t\t\t// keep running\n\n    \t\t\t\t\tif ( pending === 0 ) {\n    \t\t\t\t\t\t// entering the last round\n\n    \t\t\t\t\t\tvar atStart = deltaTime < 0;\n    \t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n    \t\t\t\t\t} else {\n\n    \t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tthis._loopCount = loopCount;\n\n    \t\t\t\t\tthis._mixer.dispatchEvent( {\n    \t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n    \t\t\t\t\t} );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n    \t\t\t\t// invert time for the \"pong round\"\n\n    \t\t\t\tthis.time = time;\n    \t\t\t\treturn duration - time;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tthis.time = time;\n    \t\treturn time;\n\n    \t},\n\n    \t_setEndings: function( atStart, atEnd, pingPong ) {\n\n    \t\tvar settings = this._interpolantSettings;\n\n    \t\tif ( pingPong ) {\n\n    \t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n    \t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n    \t\t} else {\n\n    \t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n    \t\t\tif ( atStart ) {\n\n    \t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\n    \t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n    \t\t\t} else {\n\n    \t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n    \t\t\t}\n\n    \t\t\tif ( atEnd ) {\n\n    \t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\n    \t\t\t\t\t\tZeroSlopeEnding : ZeroCurvatureEnding;\n\n    \t\t\t} else {\n\n    \t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \t_scheduleFading: function( duration, weightNow, weightThen ) {\n\n    \t\tvar mixer = this._mixer, now = mixer.time,\n    \t\t\tinterpolant = this._weightInterpolant;\n\n    \t\tif ( interpolant === null ) {\n\n    \t\t\tinterpolant = mixer._lendControlInterpolant(),\n    \t\t\tthis._weightInterpolant = interpolant;\n\n    \t\t}\n\n    \t\tvar times = interpolant.parameterPositions,\n    \t\t\tvalues = interpolant.sampleValues;\n\n    \t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n    \t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n    \t\treturn this;\n\n    \t}\n\n    };\n\n    /**\n     *\n     * Player for AnimationClips.\n     *\n     *\n     * @author Ben Houston / http://clara.io/\n     * @author David Sarno / http://lighthaus.us/\n     * @author tschw\n     */\n\n    function AnimationMixer( root ) {\n\n    \tthis._root = root;\n    \tthis._initMemoryManager();\n    \tthis._accuIndex = 0;\n\n    \tthis.time = 0;\n\n    \tthis.timeScale = 1.0;\n\n    }\n\n    Object.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n    \t// return an action for a clip optionally using a custom root target\n    \t// object (this method allocates a lot of dynamic memory in case a\n    \t// previously unknown clip/root combination is specified)\n    \tclipAction: function( clip, optionalRoot ) {\n\n    \t\tvar root = optionalRoot || this._root,\n    \t\t\trootUuid = root.uuid,\n\n    \t\t\tclipObject = typeof clip === 'string' ?\n    \t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n    \t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n    \t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n    \t\t\tprototypeAction = null;\n\n    \t\tif ( actionsForClip !== undefined ) {\n\n    \t\t\tvar existingAction =\n    \t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n    \t\t\tif ( existingAction !== undefined ) {\n\n    \t\t\t\treturn existingAction;\n\n    \t\t\t}\n\n    \t\t\t// we know the clip, so we don't have to parse all\n    \t\t\t// the bindings again but can just copy\n    \t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n    \t\t\t// also, take the clip from the prototype action\n    \t\t\tif ( clipObject === null )\n    \t\t\t\tclipObject = prototypeAction._clip;\n\n    \t\t}\n\n    \t\t// clip must be known when specified via string\n    \t\tif ( clipObject === null ) return null;\n\n    \t\t// allocate all resources required to run it\n    \t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n    \t\tthis._bindAction( newAction, prototypeAction );\n\n    \t\t// and make the action known to the memory manager\n    \t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n    \t\treturn newAction;\n\n    \t},\n\n    \t// get an existing action\n    \texistingAction: function( clip, optionalRoot ) {\n\n    \t\tvar root = optionalRoot || this._root,\n    \t\t\trootUuid = root.uuid,\n\n    \t\t\tclipObject = typeof clip === 'string' ?\n    \t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n    \t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n    \t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n    \t\tif ( actionsForClip !== undefined ) {\n\n    \t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n    \t\t}\n\n    \t\treturn null;\n\n    \t},\n\n    \t// deactivates all previously scheduled actions\n    \tstopAllAction: function() {\n\n    \t\tvar actions = this._actions,\n    \t\t\tnActions = this._nActiveActions,\n    \t\t\tbindings = this._bindings,\n    \t\t\tnBindings = this._nActiveBindings;\n\n    \t\tthis._nActiveActions = 0;\n    \t\tthis._nActiveBindings = 0;\n\n    \t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n    \t\t\tactions[ i ].reset();\n\n    \t\t}\n\n    \t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n    \t\t\tbindings[ i ].useCount = 0;\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \t// advance the time and update apply the animation\n    \tupdate: function( deltaTime ) {\n\n    \t\tdeltaTime *= this.timeScale;\n\n    \t\tvar actions = this._actions,\n    \t\t\tnActions = this._nActiveActions,\n\n    \t\t\ttime = this.time += deltaTime,\n    \t\t\ttimeDirection = Math.sign( deltaTime ),\n\n    \t\t\taccuIndex = this._accuIndex ^= 1;\n\n    \t\t// run active actions\n\n    \t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n    \t\t\tvar action = actions[ i ];\n\n    \t\t\tif ( action.enabled ) {\n\n    \t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// update scene graph\n\n    \t\tvar bindings = this._bindings,\n    \t\t\tnBindings = this._nActiveBindings;\n\n    \t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n    \t\t\tbindings[ i ].apply( accuIndex );\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \t// return this mixer's root target object\n    \tgetRoot: function() {\n\n    \t\treturn this._root;\n\n    \t},\n\n    \t// free all resources specific to a particular clip\n    \tuncacheClip: function( clip ) {\n\n    \t\tvar actions = this._actions,\n    \t\t\tclipUuid = clip.uuid,\n    \t\t\tactionsByClip = this._actionsByClip,\n    \t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n    \t\tif ( actionsForClip !== undefined ) {\n\n    \t\t\t// note: just calling _removeInactiveAction would mess up the\n    \t\t\t// iteration state and also require updating the state we can\n    \t\t\t// just throw away\n\n    \t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n    \t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n    \t\t\t\tvar action = actionsToRemove[ i ];\n\n    \t\t\t\tthis._deactivateAction( action );\n\n    \t\t\t\tvar cacheIndex = action._cacheIndex,\n    \t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n    \t\t\t\taction._cacheIndex = null;\n    \t\t\t\taction._byClipCacheIndex = null;\n\n    \t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n    \t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n    \t\t\t\tactions.pop();\n\n    \t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n    \t\t\t}\n\n    \t\t\tdelete actionsByClip[ clipUuid ];\n\n    \t\t}\n\n    \t},\n\n    \t// free all resources specific to a particular root target object\n    \tuncacheRoot: function( root ) {\n\n    \t\tvar rootUuid = root.uuid,\n    \t\t\tactionsByClip = this._actionsByClip;\n\n    \t\tfor ( var clipUuid in actionsByClip ) {\n\n    \t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n    \t\t\t\taction = actionByRoot[ rootUuid ];\n\n    \t\t\tif ( action !== undefined ) {\n\n    \t\t\t\tthis._deactivateAction( action );\n    \t\t\t\tthis._removeInactiveAction( action );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tvar bindingsByRoot = this._bindingsByRootAndName,\n    \t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n    \t\tif ( bindingByName !== undefined ) {\n\n    \t\t\tfor ( var trackName in bindingByName ) {\n\n    \t\t\t\tvar binding = bindingByName[ trackName ];\n    \t\t\t\tbinding.restoreOriginalState();\n    \t\t\t\tthis._removeInactiveBinding( binding );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \t// remove a targeted clip from the cache\n    \tuncacheAction: function( clip, optionalRoot ) {\n\n    \t\tvar action = this.existingAction( clip, optionalRoot );\n\n    \t\tif ( action !== null ) {\n\n    \t\t\tthis._deactivateAction( action );\n    \t\t\tthis._removeInactiveAction( action );\n\n    \t\t}\n\n    \t}\n\n    } );\n\n    // Implementation details:\n\n    Object.assign( AnimationMixer.prototype, {\n\n    \t_bindAction: function( action, prototypeAction ) {\n\n    \t\tvar root = action._localRoot || this._root,\n    \t\t\ttracks = action._clip.tracks,\n    \t\t\tnTracks = tracks.length,\n    \t\t\tbindings = action._propertyBindings,\n    \t\t\tinterpolants = action._interpolants,\n    \t\t\trootUuid = root.uuid,\n    \t\t\tbindingsByRoot = this._bindingsByRootAndName,\n    \t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n    \t\tif ( bindingsByName === undefined ) {\n\n    \t\t\tbindingsByName = {};\n    \t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n    \t\t}\n\n    \t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n    \t\t\tvar track = tracks[ i ],\n    \t\t\t\ttrackName = track.name,\n    \t\t\t\tbinding = bindingsByName[ trackName ];\n\n    \t\t\tif ( binding !== undefined ) {\n\n    \t\t\t\tbindings[ i ] = binding;\n\n    \t\t\t} else {\n\n    \t\t\t\tbinding = bindings[ i ];\n\n    \t\t\t\tif ( binding !== undefined ) {\n\n    \t\t\t\t\t// existing binding, make sure the cache knows\n\n    \t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n    \t\t\t\t\t\t++ binding.referenceCount;\n    \t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n    \t\t\t\t\t}\n\n    \t\t\t\t\tcontinue;\n\n    \t\t\t\t}\n\n    \t\t\t\tvar path = prototypeAction && prototypeAction.\n    \t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n    \t\t\t\tbinding = new PropertyMixer(\n    \t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n    \t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n    \t\t\t\t++ binding.referenceCount;\n    \t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n    \t\t\t\tbindings[ i ] = binding;\n\n    \t\t\t}\n\n    \t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n    \t\t}\n\n    \t},\n\n    \t_activateAction: function( action ) {\n\n    \t\tif ( ! this._isActiveAction( action ) ) {\n\n    \t\t\tif ( action._cacheIndex === null ) {\n\n    \t\t\t\t// this action has been forgotten by the cache, but the user\n    \t\t\t\t// appears to be still using it -> rebind\n\n    \t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n    \t\t\t\t\tclipUuid = action._clip.uuid,\n    \t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n    \t\t\t\tthis._bindAction( action,\n    \t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n    \t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n    \t\t\t}\n\n    \t\t\tvar bindings = action._propertyBindings;\n\n    \t\t\t// increment reference counts / sort out state\n    \t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n    \t\t\t\tvar binding = bindings[ i ];\n\n    \t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n    \t\t\t\t\tthis._lendBinding( binding );\n    \t\t\t\t\tbinding.saveOriginalState();\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tthis._lendAction( action );\n\n    \t\t}\n\n    \t},\n\n    \t_deactivateAction: function( action ) {\n\n    \t\tif ( this._isActiveAction( action ) ) {\n\n    \t\t\tvar bindings = action._propertyBindings;\n\n    \t\t\t// decrement reference counts / sort out state\n    \t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n    \t\t\t\tvar binding = bindings[ i ];\n\n    \t\t\t\tif ( -- binding.useCount === 0 ) {\n\n    \t\t\t\t\tbinding.restoreOriginalState();\n    \t\t\t\t\tthis._takeBackBinding( binding );\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t\tthis._takeBackAction( action );\n\n    \t\t}\n\n    \t},\n\n    \t// Memory manager\n\n    \t_initMemoryManager: function() {\n\n    \t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n    \t\tthis._nActiveActions = 0;\n\n    \t\tthis._actionsByClip = {};\n    \t\t// inside:\n    \t\t// {\n    \t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n    \t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n    \t\t// }\n\n\n    \t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n    \t\tthis._nActiveBindings = 0;\n\n    \t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n    \t\tthis._controlInterpolants = []; // same game as above\n    \t\tthis._nActiveControlInterpolants = 0;\n\n    \t\tvar scope = this;\n\n    \t\tthis.stats = {\n\n    \t\t\tactions: {\n    \t\t\t\tget total() { return scope._actions.length; },\n    \t\t\t\tget inUse() { return scope._nActiveActions; }\n    \t\t\t},\n    \t\t\tbindings: {\n    \t\t\t\tget total() { return scope._bindings.length; },\n    \t\t\t\tget inUse() { return scope._nActiveBindings; }\n    \t\t\t},\n    \t\t\tcontrolInterpolants: {\n    \t\t\t\tget total() { return scope._controlInterpolants.length; },\n    \t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\n    \t\t\t}\n\n    \t\t};\n\n    \t},\n\n    \t// Memory management for AnimationAction objects\n\n    \t_isActiveAction: function( action ) {\n\n    \t\tvar index = action._cacheIndex;\n    \t\treturn index !== null && index < this._nActiveActions;\n\n    \t},\n\n    \t_addInactiveAction: function( action, clipUuid, rootUuid ) {\n\n    \t\tvar actions = this._actions,\n    \t\t\tactionsByClip = this._actionsByClip,\n    \t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n    \t\tif ( actionsForClip === undefined ) {\n\n    \t\t\tactionsForClip = {\n\n    \t\t\t\tknownActions: [ action ],\n    \t\t\t\tactionByRoot: {}\n\n    \t\t\t};\n\n    \t\t\taction._byClipCacheIndex = 0;\n\n    \t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n    \t\t} else {\n\n    \t\t\tvar knownActions = actionsForClip.knownActions;\n\n    \t\t\taction._byClipCacheIndex = knownActions.length;\n    \t\t\tknownActions.push( action );\n\n    \t\t}\n\n    \t\taction._cacheIndex = actions.length;\n    \t\tactions.push( action );\n\n    \t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n    \t},\n\n    \t_removeInactiveAction: function( action ) {\n\n    \t\tvar actions = this._actions,\n    \t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n    \t\t\tcacheIndex = action._cacheIndex;\n\n    \t\tlastInactiveAction._cacheIndex = cacheIndex;\n    \t\tactions[ cacheIndex ] = lastInactiveAction;\n    \t\tactions.pop();\n\n    \t\taction._cacheIndex = null;\n\n\n    \t\tvar clipUuid = action._clip.uuid,\n    \t\t\tactionsByClip = this._actionsByClip,\n    \t\t\tactionsForClip = actionsByClip[ clipUuid ],\n    \t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n    \t\t\tlastKnownAction =\n    \t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n    \t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n    \t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n    \t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n    \t\tknownActionsForClip.pop();\n\n    \t\taction._byClipCacheIndex = null;\n\n\n    \t\tvar actionByRoot = actionsForClip.actionByRoot,\n    \t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\n\n    \t\tdelete actionByRoot[ rootUuid ];\n\n    \t\tif ( knownActionsForClip.length === 0 ) {\n\n    \t\t\tdelete actionsByClip[ clipUuid ];\n\n    \t\t}\n\n    \t\tthis._removeInactiveBindingsForAction( action );\n\n    \t},\n\n    \t_removeInactiveBindingsForAction: function( action ) {\n\n    \t\tvar bindings = action._propertyBindings;\n    \t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n    \t\t\tvar binding = bindings[ i ];\n\n    \t\t\tif ( -- binding.referenceCount === 0 ) {\n\n    \t\t\t\tthis._removeInactiveBinding( binding );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t},\n\n    \t_lendAction: function( action ) {\n\n    \t\t// [ active actions |  inactive actions  ]\n    \t\t// [  active actions >| inactive actions ]\n    \t\t//                 s        a\n    \t\t//                  <-swap->\n    \t\t//                 a        s\n\n    \t\tvar actions = this._actions,\n    \t\t\tprevIndex = action._cacheIndex,\n\n    \t\t\tlastActiveIndex = this._nActiveActions ++,\n\n    \t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n    \t\taction._cacheIndex = lastActiveIndex;\n    \t\tactions[ lastActiveIndex ] = action;\n\n    \t\tfirstInactiveAction._cacheIndex = prevIndex;\n    \t\tactions[ prevIndex ] = firstInactiveAction;\n\n    \t},\n\n    \t_takeBackAction: function( action ) {\n\n    \t\t// [  active actions  | inactive actions ]\n    \t\t// [ active actions |< inactive actions  ]\n    \t\t//        a        s\n    \t\t//         <-swap->\n    \t\t//        s        a\n\n    \t\tvar actions = this._actions,\n    \t\t\tprevIndex = action._cacheIndex,\n\n    \t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n    \t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n    \t\taction._cacheIndex = firstInactiveIndex;\n    \t\tactions[ firstInactiveIndex ] = action;\n\n    \t\tlastActiveAction._cacheIndex = prevIndex;\n    \t\tactions[ prevIndex ] = lastActiveAction;\n\n    \t},\n\n    \t// Memory management for PropertyMixer objects\n\n    \t_addInactiveBinding: function( binding, rootUuid, trackName ) {\n\n    \t\tvar bindingsByRoot = this._bindingsByRootAndName,\n    \t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n    \t\t\tbindings = this._bindings;\n\n    \t\tif ( bindingByName === undefined ) {\n\n    \t\t\tbindingByName = {};\n    \t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n    \t\t}\n\n    \t\tbindingByName[ trackName ] = binding;\n\n    \t\tbinding._cacheIndex = bindings.length;\n    \t\tbindings.push( binding );\n\n    \t},\n\n    \t_removeInactiveBinding: function( binding ) {\n\n    \t\tvar bindings = this._bindings,\n    \t\t\tpropBinding = binding.binding,\n    \t\t\trootUuid = propBinding.rootNode.uuid,\n    \t\t\ttrackName = propBinding.path,\n    \t\t\tbindingsByRoot = this._bindingsByRootAndName,\n    \t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n    \t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n    \t\t\tcacheIndex = binding._cacheIndex;\n\n    \t\tlastInactiveBinding._cacheIndex = cacheIndex;\n    \t\tbindings[ cacheIndex ] = lastInactiveBinding;\n    \t\tbindings.pop();\n\n    \t\tdelete bindingByName[ trackName ];\n\n    \t\tremove_empty_map: {\n\n    \t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\n\n    \t\t\tdelete bindingsByRoot[ rootUuid ];\n\n    \t\t}\n\n    \t},\n\n    \t_lendBinding: function( binding ) {\n\n    \t\tvar bindings = this._bindings,\n    \t\t\tprevIndex = binding._cacheIndex,\n\n    \t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n    \t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n    \t\tbinding._cacheIndex = lastActiveIndex;\n    \t\tbindings[ lastActiveIndex ] = binding;\n\n    \t\tfirstInactiveBinding._cacheIndex = prevIndex;\n    \t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n    \t},\n\n    \t_takeBackBinding: function( binding ) {\n\n    \t\tvar bindings = this._bindings,\n    \t\t\tprevIndex = binding._cacheIndex,\n\n    \t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n    \t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n    \t\tbinding._cacheIndex = firstInactiveIndex;\n    \t\tbindings[ firstInactiveIndex ] = binding;\n\n    \t\tlastActiveBinding._cacheIndex = prevIndex;\n    \t\tbindings[ prevIndex ] = lastActiveBinding;\n\n    \t},\n\n\n    \t// Memory management of Interpolants for weight and time scale\n\n    \t_lendControlInterpolant: function() {\n\n    \t\tvar interpolants = this._controlInterpolants,\n    \t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n    \t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n    \t\tif ( interpolant === undefined ) {\n\n    \t\t\tinterpolant = new LinearInterpolant(\n    \t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n    \t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n    \t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n    \t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n    \t\t}\n\n    \t\treturn interpolant;\n\n    \t},\n\n    \t_takeBackControlInterpolant: function( interpolant ) {\n\n    \t\tvar interpolants = this._controlInterpolants,\n    \t\t\tprevIndex = interpolant.__cacheIndex,\n\n    \t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n    \t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n    \t\tinterpolant.__cacheIndex = firstInactiveIndex;\n    \t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n    \t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n    \t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n    \t},\n\n    \t_controlInterpolantsResultBuffer: new Float32Array( 1 )\n\n    } );\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function Uniform( value ) {\n\n    \tif ( typeof value === 'string' ) {\n\n    \t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n    \t\tvalue = arguments[ 1 ];\n\n    \t}\n\n    \tthis.value = value;\n\n    \tthis.dynamic = false;\n\n    }\n\n    Uniform.prototype = {\n\n    \tconstructor: Uniform,\n\n    \tonUpdate: function ( callback ) {\n\n    \t\tthis.dynamic = true;\n    \t\tthis.onUpdateCallback = callback;\n\n    \t\treturn this;\n\n    \t}\n\n    };\n\n    /**\n     * @author benaadams / https://twitter.com/ben_a_adams\n     */\n\n    function InstancedBufferGeometry() {\n\n    \tBufferGeometry.call( this );\n\n    \tthis.type = 'InstancedBufferGeometry';\n    \tthis.maxInstancedCount = undefined;\n\n    }\n\n    InstancedBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n    InstancedBufferGeometry.prototype.constructor = InstancedBufferGeometry;\n\n    InstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n    InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\n\n    \tthis.groups.push( {\n\n    \t\tstart: start,\n    \t\tcount: count,\n    \t\tinstances: instances\n\n    \t} );\n\n    };\n\n    InstancedBufferGeometry.prototype.copy = function ( source ) {\n\n    \tvar index = source.index;\n\n    \tif ( index !== null ) {\n\n    \t\tthis.setIndex( index.clone() );\n\n    \t}\n\n    \tvar attributes = source.attributes;\n\n    \tfor ( var name in attributes ) {\n\n    \t\tvar attribute = attributes[ name ];\n    \t\tthis.addAttribute( name, attribute.clone() );\n\n    \t}\n\n    \tvar groups = source.groups;\n\n    \tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n    \t\tvar group = groups[ i ];\n    \t\tthis.addGroup( group.start, group.count, group.instances );\n\n    \t}\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author benaadams / https://twitter.com/ben_a_adams\n     */\n\n    function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.data = interleavedBuffer;\n    \tthis.itemSize = itemSize;\n    \tthis.offset = offset;\n\n    \tthis.normalized = normalized === true;\n\n    }\n\n\n    InterleavedBufferAttribute.prototype = {\n\n    \tconstructor: InterleavedBufferAttribute,\n\n    \tisInterleavedBufferAttribute: true,\n\n    \tget count() {\n\n    \t\treturn this.data.count;\n\n    \t},\n\n    \tget array() {\n\n    \t\treturn this.data.array;\n\n    \t},\n\n    \tsetX: function ( index, x ) {\n\n    \t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetY: function ( index, y ) {\n\n    \t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetZ: function ( index, z ) {\n\n    \t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetW: function ( index, w ) {\n\n    \t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n    \t\treturn this;\n\n    \t},\n\n    \tgetX: function ( index ) {\n\n    \t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n    \t},\n\n    \tgetY: function ( index ) {\n\n    \t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n    \t},\n\n    \tgetZ: function ( index ) {\n\n    \t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n    \t},\n\n    \tgetW: function ( index ) {\n\n    \t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n    \t},\n\n    \tsetXY: function ( index, x, y ) {\n\n    \t\tindex = index * this.data.stride + this.offset;\n\n    \t\tthis.data.array[ index + 0 ] = x;\n    \t\tthis.data.array[ index + 1 ] = y;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetXYZ: function ( index, x, y, z ) {\n\n    \t\tindex = index * this.data.stride + this.offset;\n\n    \t\tthis.data.array[ index + 0 ] = x;\n    \t\tthis.data.array[ index + 1 ] = y;\n    \t\tthis.data.array[ index + 2 ] = z;\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetXYZW: function ( index, x, y, z, w ) {\n\n    \t\tindex = index * this.data.stride + this.offset;\n\n    \t\tthis.data.array[ index + 0 ] = x;\n    \t\tthis.data.array[ index + 1 ] = y;\n    \t\tthis.data.array[ index + 2 ] = z;\n    \t\tthis.data.array[ index + 3 ] = w;\n\n    \t\treturn this;\n\n    \t}\n\n    };\n\n    /**\n     * @author benaadams / https://twitter.com/ben_a_adams\n     */\n\n    function InterleavedBuffer( array, stride ) {\n\n    \tthis.uuid = exports.Math.generateUUID();\n\n    \tthis.array = array;\n    \tthis.stride = stride;\n    \tthis.count = array !== undefined ? array.length / stride : 0;\n\n    \tthis.dynamic = false;\n    \tthis.updateRange = { offset: 0, count: - 1 };\n\n    \tthis.version = 0;\n\n    }\n\n    InterleavedBuffer.prototype = {\n\n    \tconstructor: InterleavedBuffer,\n\n    \tisInterleavedBuffer: true,\n\n    \tset needsUpdate( value ) {\n\n    \t\tif ( value === true ) this.version ++;\n\n    \t},\n\n    \tsetDynamic: function ( value ) {\n\n    \t\tthis.dynamic = value;\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopy: function ( source ) {\n\n    \t\tthis.array = new source.array.constructor( source.array );\n    \t\tthis.count = source.count;\n    \t\tthis.stride = source.stride;\n    \t\tthis.dynamic = source.dynamic;\n\n    \t\treturn this;\n\n    \t},\n\n    \tcopyAt: function ( index1, attribute, index2 ) {\n\n    \t\tindex1 *= this.stride;\n    \t\tindex2 *= attribute.stride;\n\n    \t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n    \t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    \tset: function ( value, offset ) {\n\n    \t\tif ( offset === undefined ) offset = 0;\n\n    \t\tthis.array.set( value, offset );\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t}\n\n    };\n\n    /**\n     * @author benaadams / https://twitter.com/ben_a_adams\n     */\n\n    function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n    \tInterleavedBuffer.call( this, array, stride );\n\n    \tthis.meshPerAttribute = meshPerAttribute || 1;\n\n    }\n\n    InstancedInterleavedBuffer.prototype = Object.create( InterleavedBuffer.prototype );\n    InstancedInterleavedBuffer.prototype.constructor = InstancedInterleavedBuffer;\n\n    InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n    InstancedInterleavedBuffer.prototype.copy = function ( source ) {\n\n    \tInterleavedBuffer.prototype.copy.call( this, source );\n\n    \tthis.meshPerAttribute = source.meshPerAttribute;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author benaadams / https://twitter.com/ben_a_adams\n     */\n\n    function InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n    \tBufferAttribute.call( this, array, itemSize );\n\n    \tthis.meshPerAttribute = meshPerAttribute || 1;\n\n    }\n\n    InstancedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n    InstancedBufferAttribute.prototype.constructor = InstancedBufferAttribute;\n\n    InstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n    InstancedBufferAttribute.prototype.copy = function ( source ) {\n\n    \tBufferAttribute.prototype.copy.call( this, source );\n\n    \tthis.meshPerAttribute = source.meshPerAttribute;\n\n    \treturn this;\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author bhouston / http://clara.io/\n     * @author stephomi / http://stephaneginier.com/\n     */\n\n    function Raycaster( origin, direction, near, far ) {\n\n    \tthis.ray = new Ray( origin, direction );\n    \t// direction is assumed to be normalized (for accurate distance calculations)\n\n    \tthis.near = near || 0;\n    \tthis.far = far || Infinity;\n\n    \tthis.params = {\n    \t\tMesh: {},\n    \t\tLine: {},\n    \t\tLOD: {},\n    \t\tPoints: { threshold: 1 },\n    \t\tSprite: {}\n    \t};\n\n    \tObject.defineProperties( this.params, {\n    \t\tPointCloud: {\n    \t\t\tget: function () {\n    \t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n    \t\t\t\treturn this.Points;\n    \t\t\t}\n    \t\t}\n    \t} );\n\n    }\n\n    function ascSort( a, b ) {\n\n    \treturn a.distance - b.distance;\n\n    }\n\n    function intersectObject( object, raycaster, intersects, recursive ) {\n\n    \tif ( object.visible === false ) return;\n\n    \tobject.raycast( raycaster, intersects );\n\n    \tif ( recursive === true ) {\n\n    \t\tvar children = object.children;\n\n    \t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n    \t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n    \t\t}\n\n    \t}\n\n    }\n\n    //\n\n    Raycaster.prototype = {\n\n    \tconstructor: Raycaster,\n\n    \tlinePrecision: 1,\n\n    \tset: function ( origin, direction ) {\n\n    \t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n    \t\tthis.ray.set( origin, direction );\n\n    \t},\n\n    \tsetFromCamera: function ( coords, camera ) {\n\n    \t\tif ( (camera && camera.isPerspectiveCamera) ) {\n\n    \t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n    \t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n    \t\t} else if ( (camera && camera.isOrthographicCamera) ) {\n\n    \t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n    \t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n    \t\t} else {\n\n    \t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n    \t\t}\n\n    \t},\n\n    \tintersectObject: function ( object, recursive ) {\n\n    \t\tvar intersects = [];\n\n    \t\tintersectObject( object, this, intersects, recursive );\n\n    \t\tintersects.sort( ascSort );\n\n    \t\treturn intersects;\n\n    \t},\n\n    \tintersectObjects: function ( objects, recursive ) {\n\n    \t\tvar intersects = [];\n\n    \t\tif ( Array.isArray( objects ) === false ) {\n\n    \t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n    \t\t\treturn intersects;\n\n    \t\t}\n\n    \t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n    \t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n    \t\t}\n\n    \t\tintersects.sort( ascSort );\n\n    \t\treturn intersects;\n\n    \t}\n\n    };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Clock( autoStart ) {\n\n    \tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n    \tthis.startTime = 0;\n    \tthis.oldTime = 0;\n    \tthis.elapsedTime = 0;\n\n    \tthis.running = false;\n\n    }\n\n    Clock.prototype = {\n\n    \tconstructor: Clock,\n\n    \tstart: function () {\n\n    \t\tthis.startTime = ( performance || Date ).now();\n\n    \t\tthis.oldTime = this.startTime;\n    \t\tthis.running = true;\n\n    \t},\n\n    \tstop: function () {\n\n    \t\tthis.getElapsedTime();\n    \t\tthis.running = false;\n\n    \t},\n\n    \tgetElapsedTime: function () {\n\n    \t\tthis.getDelta();\n    \t\treturn this.elapsedTime;\n\n    \t},\n\n    \tgetDelta: function () {\n\n    \t\tvar diff = 0;\n\n    \t\tif ( this.autoStart && ! this.running ) {\n\n    \t\t\tthis.start();\n\n    \t\t}\n\n    \t\tif ( this.running ) {\n\n    \t\t\tvar newTime = ( performance || Date ).now();\n\n    \t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n    \t\t\tthis.oldTime = newTime;\n\n    \t\t\tthis.elapsedTime += diff;\n\n    \t\t}\n\n    \t\treturn diff;\n\n    \t}\n\n    };\n\n    /**\n     * Spline from Tween.js, slightly optimized (and trashed)\n     * http://sole.github.com/tween.js/examples/05_spline.html\n     *\n     * @author mrdoob / http://mrdoob.com/\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function Spline( points ) {\n\n    \tthis.points = points;\n\n    \tvar c = [], v3 = { x: 0, y: 0, z: 0 },\n    \tpoint, intPoint, weight, w2, w3,\n    \tpa, pb, pc, pd;\n\n    \tthis.initFromArray = function ( a ) {\n\n    \t\tthis.points = [];\n\n    \t\tfor ( var i = 0; i < a.length; i ++ ) {\n\n    \t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\n\n    \t\t}\n\n    \t};\n\n    \tthis.getPoint = function ( k ) {\n\n    \t\tpoint = ( this.points.length - 1 ) * k;\n    \t\tintPoint = Math.floor( point );\n    \t\tweight = point - intPoint;\n\n    \t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\n    \t\tc[ 1 ] = intPoint;\n    \t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\n    \t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\n\n    \t\tpa = this.points[ c[ 0 ] ];\n    \t\tpb = this.points[ c[ 1 ] ];\n    \t\tpc = this.points[ c[ 2 ] ];\n    \t\tpd = this.points[ c[ 3 ] ];\n\n    \t\tw2 = weight * weight;\n    \t\tw3 = weight * w2;\n\n    \t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\n    \t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\n    \t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\n\n    \t\treturn v3;\n\n    \t};\n\n    \tthis.getControlPointsArray = function () {\n\n    \t\tvar i, p, l = this.points.length,\n    \t\t\tcoords = [];\n\n    \t\tfor ( i = 0; i < l; i ++ ) {\n\n    \t\t\tp = this.points[ i ];\n    \t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\n\n    \t\t}\n\n    \t\treturn coords;\n\n    \t};\n\n    \t// approximate length by summing linear segments\n\n    \tthis.getLength = function ( nSubDivisions ) {\n\n    \t\tvar i, index, nSamples, position,\n    \t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\n    \t\t\toldPosition = new Vector3(),\n    \t\t\ttmpVec = new Vector3(),\n    \t\t\tchunkLengths = [],\n    \t\t\ttotalLength = 0;\n\n    \t\t// first point has 0 length\n\n    \t\tchunkLengths[ 0 ] = 0;\n\n    \t\tif ( ! nSubDivisions ) nSubDivisions = 100;\n\n    \t\tnSamples = this.points.length * nSubDivisions;\n\n    \t\toldPosition.copy( this.points[ 0 ] );\n\n    \t\tfor ( i = 1; i < nSamples; i ++ ) {\n\n    \t\t\tindex = i / nSamples;\n\n    \t\t\tposition = this.getPoint( index );\n    \t\t\ttmpVec.copy( position );\n\n    \t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\n\n    \t\t\toldPosition.copy( position );\n\n    \t\t\tpoint = ( this.points.length - 1 ) * index;\n    \t\t\tintPoint = Math.floor( point );\n\n    \t\t\tif ( intPoint !== oldIntPoint ) {\n\n    \t\t\t\tchunkLengths[ intPoint ] = totalLength;\n    \t\t\t\toldIntPoint = intPoint;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\t// last point ends with total length\n\n    \t\tchunkLengths[ chunkLengths.length ] = totalLength;\n\n    \t\treturn { chunks: chunkLengths, total: totalLength };\n\n    \t};\n\n    \tthis.reparametrizeByArcLength = function ( samplingCoef ) {\n\n    \t\tvar i, j,\n    \t\t\tindex, indexCurrent, indexNext,\n    \t\t\trealDistance,\n    \t\t\tsampling, position,\n    \t\t\tnewpoints = [],\n    \t\t\ttmpVec = new Vector3(),\n    \t\t\tsl = this.getLength();\n\n    \t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\n\n    \t\tfor ( i = 1; i < this.points.length; i ++ ) {\n\n    \t\t\t//tmpVec.copy( this.points[ i - 1 ] );\n    \t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\n\n    \t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\n\n    \t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\n\n    \t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\n    \t\t\tindexNext = i / ( this.points.length - 1 );\n\n    \t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\n\n    \t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\n\n    \t\t\t\tposition = this.getPoint( index );\n    \t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\n\n    \t\t\t}\n\n    \t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\n\n    \t\t}\n\n    \t\tthis.points = newpoints;\n\n    \t};\n\n    \t// Catmull-Rom\n\n    \tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\n\n    \t\tvar v0 = ( p2 - p0 ) * 0.5,\n    \t\t\tv1 = ( p3 - p1 ) * 0.5;\n\n    \t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n    \t}\n\n    }\n\n    /**\n     * @author bhouston / http://clara.io\n     * @author WestLangley / http://github.com/WestLangley\n     *\n     * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n     *\n     * The poles (phi) are at the positive and negative y axis.\n     * The equator starts at positive z.\n     */\n\n    function Spherical( radius, phi, theta ) {\n\n    \tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n    \tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n    \tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n    \treturn this;\n\n    }\n\n    Spherical.prototype = {\n\n    \tconstructor: Spherical,\n\n    \tset: function ( radius, phi, theta ) {\n\n    \t\tthis.radius = radius;\n    \t\tthis.phi = phi;\n    \t\tthis.theta = theta;\n\n    \t\treturn this;\n\n    \t},\n\n    \tclone: function () {\n\n    \t\treturn new this.constructor().copy( this );\n\n    \t},\n\n    \tcopy: function ( other ) {\n\n    \t\tthis.radius.copy( other.radius );\n    \t\tthis.phi.copy( other.phi );\n    \t\tthis.theta.copy( other.theta );\n\n    \t\treturn this;\n\n    \t},\n\n    \t// restrict phi to be betwee EPS and PI-EPS\n    \tmakeSafe: function() {\n\n    \t\tvar EPS = 0.000001;\n    \t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n    \t\treturn this;\n\n    \t},\n\n    \tsetFromVector3: function( vec3 ) {\n\n    \t\tthis.radius = vec3.length();\n\n    \t\tif ( this.radius === 0 ) {\n\n    \t\t\tthis.theta = 0;\n    \t\t\tthis.phi = 0;\n\n    \t\t} else {\n\n    \t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n    \t\t\tthis.phi = Math.acos( exports.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n    \t\t}\n\n    \t\treturn this;\n\n    \t},\n\n    };\n\n    /**\r\n     * @author alteredq / http://alteredqualia.com/\r\n     */\r\n\r\n    function MorphBlendMesh( geometry, material ) {\n\r\n    \tMesh.call( this, geometry, material );\r\n\r\n    \tthis.animationsMap = {};\r\n    \tthis.animationsList = [];\r\n\r\n    \t// prepare default animation\r\n    \t// (all frames played together in 1 second)\r\n\r\n    \tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n    \tvar name = \"__default\";\r\n\r\n    \tvar startFrame = 0;\r\n    \tvar endFrame = numFrames - 1;\r\n\r\n    \tvar fps = numFrames / 1;\r\n\r\n    \tthis.createAnimation( name, startFrame, endFrame, fps );\r\n    \tthis.setAnimationWeight( name, 1 );\r\n\r\n    }\r\n\r\n    MorphBlendMesh.prototype = Object.create( Mesh.prototype );\r\n    MorphBlendMesh.prototype.constructor = MorphBlendMesh;\r\n\r\n    MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n    \tvar animation = {\r\n\r\n    \t\tstart: start,\r\n    \t\tend: end,\r\n\r\n    \t\tlength: end - start + 1,\r\n\r\n    \t\tfps: fps,\r\n    \t\tduration: ( end - start ) / fps,\r\n\r\n    \t\tlastFrame: 0,\r\n    \t\tcurrentFrame: 0,\r\n\r\n    \t\tactive: false,\r\n\r\n    \t\ttime: 0,\r\n    \t\tdirection: 1,\r\n    \t\tweight: 1,\r\n\r\n    \t\tdirectionBackwards: false,\r\n    \t\tmirroredLoop: false\r\n\r\n    \t};\r\n\r\n    \tthis.animationsMap[ name ] = animation;\r\n    \tthis.animationsList.push( animation );\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n    \tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n    \tvar firstAnimation, frameRanges = {};\r\n\r\n    \tvar geometry = this.geometry;\r\n\r\n    \tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n    \t\tvar morph = geometry.morphTargets[ i ];\r\n    \t\tvar chunks = morph.name.match( pattern );\r\n\r\n    \t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n    \t\t\tvar name = chunks[ 1 ];\r\n\r\n    \t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n    \t\t\tvar range = frameRanges[ name ];\r\n\r\n    \t\t\tif ( i < range.start ) range.start = i;\r\n    \t\t\tif ( i > range.end ) range.end = i;\r\n\r\n    \t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    \tfor ( var name in frameRanges ) {\r\n\r\n    \t\tvar range = frameRanges[ name ];\r\n    \t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n    \t}\r\n\r\n    \tthis.firstAnimation = firstAnimation;\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.direction = 1;\r\n    \t\tanimation.directionBackwards = false;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.direction = - 1;\r\n    \t\tanimation.directionBackwards = true;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.fps = fps;\r\n    \t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.duration = duration;\r\n    \t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.weight = weight;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.time = time;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n    \tvar time = 0;\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\ttime = animation.time;\r\n\r\n    \t}\r\n\r\n    \treturn time;\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n    \tvar duration = - 1;\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tduration = animation.duration;\r\n\r\n    \t}\r\n\r\n    \treturn duration;\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.time = 0;\r\n    \t\tanimation.active = true;\r\n\r\n    \t} else {\r\n\r\n    \t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n    \tvar animation = this.animationsMap[ name ];\r\n\r\n    \tif ( animation ) {\r\n\r\n    \t\tanimation.active = false;\r\n\r\n    \t}\r\n\r\n    };\r\n\r\n    MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n    \tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n    \t\tvar animation = this.animationsList[ i ];\r\n\r\n    \t\tif ( ! animation.active ) continue;\r\n\r\n    \t\tvar frameTime = animation.duration / animation.length;\r\n\r\n    \t\tanimation.time += animation.direction * delta;\r\n\r\n    \t\tif ( animation.mirroredLoop ) {\r\n\r\n    \t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n    \t\t\t\tanimation.direction *= - 1;\r\n\r\n    \t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n    \t\t\t\t\tanimation.time = animation.duration;\r\n    \t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t\tif ( animation.time < 0 ) {\r\n\r\n    \t\t\t\t\tanimation.time = 0;\r\n    \t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n    \t\t\t\t}\r\n\r\n    \t\t\t}\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n    \t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar keyframe = animation.start + exports.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n    \t\tvar weight = animation.weight;\r\n\r\n    \t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n    \t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n    \t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n    \t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n    \t\t\tanimation.lastFrame = animation.currentFrame;\r\n    \t\t\tanimation.currentFrame = keyframe;\r\n\r\n    \t\t}\r\n\r\n    \t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n    \t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n    \t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n    \t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n    \t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n    \t\t} else {\r\n\r\n    \t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n    \t\t}\r\n\r\n    \t}\r\n\r\n    };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    function ImmediateRenderObject( material ) {\n\n    \tObject3D.call( this );\n\n    \tthis.material = material;\n    \tthis.render = function ( renderCallback ) {};\n\n    }\n\n    ImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n    ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n    ImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author WestLangley / http://github.com/WestLangley\n    */\n\n    function VertexNormalsHelper( object, size, hex, linewidth ) {\n\n    \tthis.object = object;\n\n    \tthis.size = ( size !== undefined ) ? size : 1;\n\n    \tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n    \tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n    \t//\n\n    \tvar nNormals = 0;\n\n    \tvar objGeometry = this.object.geometry;\n\n    \tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n    \t\tnNormals = objGeometry.faces.length * 3;\n\n    \t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\n\n    \t\tnNormals = objGeometry.attributes.normal.count;\n\n    \t}\n\n    \t//\n\n    \tvar geometry = new BufferGeometry();\n\n    \tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\n\n    \tgeometry.addAttribute( 'position', positions );\n\n    \tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n    \t//\n\n    \tthis.matrixAutoUpdate = false;\n\n    \tthis.update();\n\n    }\n\n    VertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n    VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n    VertexNormalsHelper.prototype.update = ( function () {\n\n    \tvar v1 = new Vector3();\n    \tvar v2 = new Vector3();\n    \tvar normalMatrix = new Matrix3();\n\n    \treturn function update() {\n\n    \t\tvar keys = [ 'a', 'b', 'c' ];\n\n    \t\tthis.object.updateMatrixWorld( true );\n\n    \t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n    \t\tvar matrixWorld = this.object.matrixWorld;\n\n    \t\tvar position = this.geometry.attributes.position;\n\n    \t\t//\n\n    \t\tvar objGeometry = this.object.geometry;\n\n    \t\tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n    \t\t\tvar vertices = objGeometry.vertices;\n\n    \t\t\tvar faces = objGeometry.faces;\n\n    \t\t\tvar idx = 0;\n\n    \t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    \t\t\t\tvar face = faces[ i ];\n\n    \t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n    \t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n    \t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n    \t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n    \t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n    \t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n    \t\t\t\t\tidx = idx + 1;\n\n    \t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n    \t\t\t\t\tidx = idx + 1;\n\n    \t\t\t\t}\n\n    \t\t\t}\n\n    \t\t} else if ( (objGeometry && objGeometry.isBufferGeometry) ) {\n\n    \t\t\tvar objPos = objGeometry.attributes.position;\n\n    \t\t\tvar objNorm = objGeometry.attributes.normal;\n\n    \t\t\tvar idx = 0;\n\n    \t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n    \t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n    \t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n    \t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n    \t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n    \t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n    \t\t\t\tidx = idx + 1;\n\n    \t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n    \t\t\t\tidx = idx + 1;\n\n    \t\t\t}\n\n    \t\t}\n\n    \t\tposition.needsUpdate = true;\n\n    \t\treturn this;\n\n    \t};\n\n    }() );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author mrdoob / http://mrdoob.com/\n     * @author WestLangley / http://github.com/WestLangley\n    */\n\n    function SpotLightHelper( light ) {\n\n    \tObject3D.call( this );\n\n    \tthis.light = light;\n    \tthis.light.updateMatrixWorld();\n\n    \tthis.matrix = light.matrixWorld;\n    \tthis.matrixAutoUpdate = false;\n\n    \tvar geometry = new BufferGeometry();\n\n    \tvar positions = [\n    \t\t0, 0, 0,   0,   0,   1,\n    \t\t0, 0, 0,   1,   0,   1,\n    \t\t0, 0, 0, - 1,   0,   1,\n    \t\t0, 0, 0,   0,   1,   1,\n    \t\t0, 0, 0,   0, - 1,   1\n    \t];\n\n    \tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n    \t\tvar p1 = ( i / l ) * Math.PI * 2;\n    \t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n    \t\tpositions.push(\n    \t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n    \t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n    \t\t);\n\n    \t}\n\n    \tgeometry.addAttribute( 'position', new Float32Attribute( positions, 3 ) );\n\n    \tvar material = new LineBasicMaterial( { fog: false } );\n\n    \tthis.cone = new LineSegments( geometry, material );\n    \tthis.add( this.cone );\n\n    \tthis.update();\n\n    }\n\n    SpotLightHelper.prototype = Object.create( Object3D.prototype );\n    SpotLightHelper.prototype.constructor = SpotLightHelper;\n\n    SpotLightHelper.prototype.dispose = function () {\n\n    \tthis.cone.geometry.dispose();\n    \tthis.cone.material.dispose();\n\n    };\n\n    SpotLightHelper.prototype.update = function () {\n\n    \tvar vector = new Vector3();\n    \tvar vector2 = new Vector3();\n\n    \treturn function update() {\n\n    \t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n    \t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n    \t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n    \t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n    \t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n    \t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n    \t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n    \t};\n\n    }();\n\n    /**\n     * @author Sean Griffin / http://twitter.com/sgrif\n     * @author Michael Guerrero / http://realitymeltdown.com\n     * @author mrdoob / http://mrdoob.com/\n     * @author ikerr / http://verold.com\n     */\n\n    function SkeletonHelper( object ) {\n\n    \tthis.bones = this.getBoneList( object );\n\n    \tvar geometry = new Geometry();\n\n    \tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n    \t\tvar bone = this.bones[ i ];\n\n    \t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n    \t\t\tgeometry.vertices.push( new Vector3() );\n    \t\t\tgeometry.vertices.push( new Vector3() );\n    \t\t\tgeometry.colors.push( new Color( 0, 0, 1 ) );\n    \t\t\tgeometry.colors.push( new Color( 0, 1, 0 ) );\n\n    \t\t}\n\n    \t}\n\n    \tgeometry.dynamic = true;\n\n    \tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n    \tLineSegments.call( this, geometry, material );\n\n    \tthis.root = object;\n\n    \tthis.matrix = object.matrixWorld;\n    \tthis.matrixAutoUpdate = false;\n\n    \tthis.update();\n\n    }\n\n\n    SkeletonHelper.prototype = Object.create( LineSegments.prototype );\n    SkeletonHelper.prototype.constructor = SkeletonHelper;\n\n    SkeletonHelper.prototype.getBoneList = function( object ) {\n\n    \tvar boneList = [];\n\n    \tif ( (object && object.isBone) ) {\n\n    \t\tboneList.push( object );\n\n    \t}\n\n    \tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n    \t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\n\n    \t}\n\n    \treturn boneList;\n\n    };\n\n    SkeletonHelper.prototype.update = function () {\n\n    \tvar geometry = this.geometry;\n\n    \tvar matrixWorldInv = new Matrix4().getInverse( this.root.matrixWorld );\n\n    \tvar boneMatrix = new Matrix4();\n\n    \tvar j = 0;\n\n    \tfor ( var i = 0; i < this.bones.length; i ++ ) {\n\n    \t\tvar bone = this.bones[ i ];\n\n    \t\tif ( (bone.parent && bone.parent.isBone) ) {\n\n    \t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n    \t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\n\n    \t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n    \t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\n\n    \t\t\tj += 2;\n\n    \t\t}\n\n    \t}\n\n    \tgeometry.verticesNeedUpdate = true;\n\n    \tgeometry.computeBoundingSphere();\n\n    };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function PointLightHelper( light, sphereSize ) {\n\n    \tthis.light = light;\n    \tthis.light.updateMatrixWorld();\n\n    \tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n    \tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n    \tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n    \tMesh.call( this, geometry, material );\n\n    \tthis.matrix = this.light.matrixWorld;\n    \tthis.matrixAutoUpdate = false;\n\n    \t/*\n    \tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n    \tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n    \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n    \tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n    \tvar d = light.distance;\n\n    \tif ( d === 0.0 ) {\n\n    \t\tthis.lightDistance.visible = false;\n\n    \t} else {\n\n    \t\tthis.lightDistance.scale.set( d, d, d );\n\n    \t}\n\n    \tthis.add( this.lightDistance );\n    \t*/\n\n    }\n\n    PointLightHelper.prototype = Object.create( Mesh.prototype );\n    PointLightHelper.prototype.constructor = PointLightHelper;\n\n    PointLightHelper.prototype.dispose = function () {\n\n    \tthis.geometry.dispose();\n    \tthis.material.dispose();\n\n    };\n\n    PointLightHelper.prototype.update = function () {\n\n    \tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n    \t/*\n    \tvar d = this.light.distance;\n\n    \tif ( d === 0.0 ) {\n\n    \t\tthis.lightDistance.visible = false;\n\n    \t} else {\n\n    \t\tthis.lightDistance.visible = true;\n    \t\tthis.lightDistance.scale.set( d, d, d );\n\n    \t}\n    \t*/\n\n    };\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function HemisphereLightHelper( light, sphereSize ) {\n\n    \tObject3D.call( this );\n\n    \tthis.light = light;\n    \tthis.light.updateMatrixWorld();\n\n    \tthis.matrix = light.matrixWorld;\n    \tthis.matrixAutoUpdate = false;\n\n    \tthis.colors = [ new Color(), new Color() ];\n\n    \tvar geometry = new SphereGeometry( sphereSize, 4, 2 );\n    \tgeometry.rotateX( - Math.PI / 2 );\n\n    \tfor ( var i = 0, il = 8; i < il; i ++ ) {\n\n    \t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\n\n    \t}\n\n    \tvar material = new MeshBasicMaterial( { vertexColors: FaceColors, wireframe: true } );\n\n    \tthis.lightSphere = new Mesh( geometry, material );\n    \tthis.add( this.lightSphere );\n\n    \tthis.update();\n\n    }\n\n    HemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n    HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n    HemisphereLightHelper.prototype.dispose = function () {\n\n    \tthis.lightSphere.geometry.dispose();\n    \tthis.lightSphere.material.dispose();\n\n    };\n\n    HemisphereLightHelper.prototype.update = function () {\n\n    \tvar vector = new Vector3();\n\n    \treturn function update() {\n\n    \t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\n    \t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\n\n    \t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n    \t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\n\n    \t};\n\n    }();\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function GridHelper( size, divisions, color1, color2 ) {\n\n    \tdivisions = divisions || 1;\n    \tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n    \tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n    \tvar center = divisions / 2;\n    \tvar step = ( size * 2 ) / divisions;\n    \tvar vertices = [], colors = [];\n\n    \tfor ( var i = 0, j = 0, k = - size; i <= divisions; i ++, k += step ) {\n\n    \t\tvertices.push( - size, 0, k, size, 0, k );\n    \t\tvertices.push( k, 0, - size, k, 0, size );\n\n    \t\tvar color = i === center ? color1 : color2;\n\n    \t\tcolor.toArray( colors, j ); j += 3;\n    \t\tcolor.toArray( colors, j ); j += 3;\n    \t\tcolor.toArray( colors, j ); j += 3;\n    \t\tcolor.toArray( colors, j ); j += 3;\n\n    \t}\n\n    \tvar geometry = new BufferGeometry();\n    \tgeometry.addAttribute( 'position', new Float32Attribute( vertices, 3 ) );\n    \tgeometry.addAttribute( 'color', new Float32Attribute( colors, 3 ) );\n\n    \tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n    \tLineSegments.call( this, geometry, material );\n\n    }\n\n    GridHelper.prototype = Object.create( LineSegments.prototype );\n    GridHelper.prototype.constructor = GridHelper;\n\n    GridHelper.prototype.setColors = function () {\n\n    \tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     * @author WestLangley / http://github.com/WestLangley\n    */\n\n    function FaceNormalsHelper( object, size, hex, linewidth ) {\n\n    \t// FaceNormalsHelper only supports THREE.Geometry\n\n    \tthis.object = object;\n\n    \tthis.size = ( size !== undefined ) ? size : 1;\n\n    \tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n    \tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n    \t//\n\n    \tvar nNormals = 0;\n\n    \tvar objGeometry = this.object.geometry;\n\n    \tif ( (objGeometry && objGeometry.isGeometry) ) {\n\n    \t\tnNormals = objGeometry.faces.length;\n\n    \t} else {\n\n    \t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n    \t}\n\n    \t//\n\n    \tvar geometry = new BufferGeometry();\n\n    \tvar positions = new Float32Attribute( nNormals * 2 * 3, 3 );\n\n    \tgeometry.addAttribute( 'position', positions );\n\n    \tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n    \t//\n\n    \tthis.matrixAutoUpdate = false;\n    \tthis.update();\n\n    }\n\n    FaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n    FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n    FaceNormalsHelper.prototype.update = ( function () {\n\n    \tvar v1 = new Vector3();\n    \tvar v2 = new Vector3();\n    \tvar normalMatrix = new Matrix3();\n\n    \treturn function update() {\n\n    \t\tthis.object.updateMatrixWorld( true );\n\n    \t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n    \t\tvar matrixWorld = this.object.matrixWorld;\n\n    \t\tvar position = this.geometry.attributes.position;\n\n    \t\t//\n\n    \t\tvar objGeometry = this.object.geometry;\n\n    \t\tvar vertices = objGeometry.vertices;\n\n    \t\tvar faces = objGeometry.faces;\n\n    \t\tvar idx = 0;\n\n    \t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n    \t\t\tvar face = faces[ i ];\n\n    \t\t\tvar normal = face.normal;\n\n    \t\t\tv1.copy( vertices[ face.a ] )\n    \t\t\t\t.add( vertices[ face.b ] )\n    \t\t\t\t.add( vertices[ face.c ] )\n    \t\t\t\t.divideScalar( 3 )\n    \t\t\t\t.applyMatrix4( matrixWorld );\n\n    \t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n    \t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n    \t\t\tidx = idx + 1;\n\n    \t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n    \t\t\tidx = idx + 1;\n\n    \t\t}\n\n    \t\tposition.needsUpdate = true;\n\n    \t\treturn this;\n\n    \t};\n\n    }() );\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     * @author mrdoob / http://mrdoob.com/\n     * @author WestLangley / http://github.com/WestLangley\n     */\n\n    function DirectionalLightHelper( light, size ) {\n\n    \tObject3D.call( this );\n\n    \tthis.light = light;\n    \tthis.light.updateMatrixWorld();\n\n    \tthis.matrix = light.matrixWorld;\n    \tthis.matrixAutoUpdate = false;\n\n    \tif ( size === undefined ) size = 1;\n\n    \tvar geometry = new BufferGeometry();\n    \tgeometry.addAttribute( 'position', new Float32Attribute( [\n    \t\t- size,   size, 0,\n    \t\t  size,   size, 0,\n    \t\t  size, - size, 0,\n    \t\t- size, - size, 0,\n    \t\t- size,   size, 0\n    \t], 3 ) );\n\n    \tvar material = new LineBasicMaterial( { fog: false } );\n\n    \tthis.add( new Line( geometry, material ) );\n\n    \tgeometry = new BufferGeometry();\n    \tgeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n    \tthis.add( new Line( geometry, material ));\n\n    \tthis.update();\n\n    }\n\n    DirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n    DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n    DirectionalLightHelper.prototype.dispose = function () {\n\n    \tvar lightPlane = this.children[ 0 ];\n    \tvar targetLine = this.children[ 1 ];\n\n    \tlightPlane.geometry.dispose();\n    \tlightPlane.material.dispose();\n    \ttargetLine.geometry.dispose();\n    \ttargetLine.material.dispose();\n\n    };\n\n    DirectionalLightHelper.prototype.update = function () {\n\n    \tvar v1 = new Vector3();\n    \tvar v2 = new Vector3();\n    \tvar v3 = new Vector3();\n\n    \treturn function update() {\n\n    \t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n    \t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n    \t\tv3.subVectors( v2, v1 );\n\n    \t\tvar lightPlane = this.children[ 0 ];\n    \t\tvar targetLine = this.children[ 1 ];\n\n    \t\tlightPlane.lookAt( v3 );\n    \t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n    \t\ttargetLine.lookAt( v3 );\n    \t\ttargetLine.scale.z = v3.length();\n\n    \t};\n\n    }();\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     *\n     *\t- shows frustum, line of sight and up of the camera\n     *\t- suitable for fast updates\n     * \t- based on frustum visualization in lightgl.js shadowmap example\n     *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n     */\n\n    function CameraHelper( camera ) {\n\n    \tvar geometry = new Geometry();\n    \tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n    \tvar pointMap = {};\n\n    \t// colors\n\n    \tvar hexFrustum = 0xffaa00;\n    \tvar hexCone = 0xff0000;\n    \tvar hexUp = 0x00aaff;\n    \tvar hexTarget = 0xffffff;\n    \tvar hexCross = 0x333333;\n\n    \t// near\n\n    \taddLine( \"n1\", \"n2\", hexFrustum );\n    \taddLine( \"n2\", \"n4\", hexFrustum );\n    \taddLine( \"n4\", \"n3\", hexFrustum );\n    \taddLine( \"n3\", \"n1\", hexFrustum );\n\n    \t// far\n\n    \taddLine( \"f1\", \"f2\", hexFrustum );\n    \taddLine( \"f2\", \"f4\", hexFrustum );\n    \taddLine( \"f4\", \"f3\", hexFrustum );\n    \taddLine( \"f3\", \"f1\", hexFrustum );\n\n    \t// sides\n\n    \taddLine( \"n1\", \"f1\", hexFrustum );\n    \taddLine( \"n2\", \"f2\", hexFrustum );\n    \taddLine( \"n3\", \"f3\", hexFrustum );\n    \taddLine( \"n4\", \"f4\", hexFrustum );\n\n    \t// cone\n\n    \taddLine( \"p\", \"n1\", hexCone );\n    \taddLine( \"p\", \"n2\", hexCone );\n    \taddLine( \"p\", \"n3\", hexCone );\n    \taddLine( \"p\", \"n4\", hexCone );\n\n    \t// up\n\n    \taddLine( \"u1\", \"u2\", hexUp );\n    \taddLine( \"u2\", \"u3\", hexUp );\n    \taddLine( \"u3\", \"u1\", hexUp );\n\n    \t// target\n\n    \taddLine( \"c\", \"t\", hexTarget );\n    \taddLine( \"p\", \"c\", hexCross );\n\n    \t// cross\n\n    \taddLine( \"cn1\", \"cn2\", hexCross );\n    \taddLine( \"cn3\", \"cn4\", hexCross );\n\n    \taddLine( \"cf1\", \"cf2\", hexCross );\n    \taddLine( \"cf3\", \"cf4\", hexCross );\n\n    \tfunction addLine( a, b, hex ) {\n\n    \t\taddPoint( a, hex );\n    \t\taddPoint( b, hex );\n\n    \t}\n\n    \tfunction addPoint( id, hex ) {\n\n    \t\tgeometry.vertices.push( new Vector3() );\n    \t\tgeometry.colors.push( new Color( hex ) );\n\n    \t\tif ( pointMap[ id ] === undefined ) {\n\n    \t\t\tpointMap[ id ] = [];\n\n    \t\t}\n\n    \t\tpointMap[ id ].push( geometry.vertices.length - 1 );\n\n    \t}\n\n    \tLineSegments.call( this, geometry, material );\n\n    \tthis.camera = camera;\n    \tif( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n    \tthis.matrix = camera.matrixWorld;\n    \tthis.matrixAutoUpdate = false;\n\n    \tthis.pointMap = pointMap;\n\n    \tthis.update();\n\n    }\n\n    CameraHelper.prototype = Object.create( LineSegments.prototype );\n    CameraHelper.prototype.constructor = CameraHelper;\n\n    CameraHelper.prototype.update = function () {\n\n    \tvar geometry, pointMap;\n\n    \tvar vector = new Vector3();\n    \tvar camera = new Camera();\n\n    \tfunction setPoint( point, x, y, z ) {\n\n    \t\tvector.set( x, y, z ).unproject( camera );\n\n    \t\tvar points = pointMap[ point ];\n\n    \t\tif ( points !== undefined ) {\n\n    \t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n    \t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\n\n    \t\t\t}\n\n    \t\t}\n\n    \t}\n\n    \treturn function update() {\n\n    \t\tgeometry = this.geometry;\n    \t\tpointMap = this.pointMap;\n\n    \t\tvar w = 1, h = 1;\n\n    \t\t// we need just camera projection matrix\n    \t\t// world matrix must be identity\n\n    \t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n    \t\t// center / target\n\n    \t\tsetPoint( \"c\", 0, 0, - 1 );\n    \t\tsetPoint( \"t\", 0, 0,  1 );\n\n    \t\t// near\n\n    \t\tsetPoint( \"n1\", - w, - h, - 1 );\n    \t\tsetPoint( \"n2\",   w, - h, - 1 );\n    \t\tsetPoint( \"n3\", - w,   h, - 1 );\n    \t\tsetPoint( \"n4\",   w,   h, - 1 );\n\n    \t\t// far\n\n    \t\tsetPoint( \"f1\", - w, - h, 1 );\n    \t\tsetPoint( \"f2\",   w, - h, 1 );\n    \t\tsetPoint( \"f3\", - w,   h, 1 );\n    \t\tsetPoint( \"f4\",   w,   h, 1 );\n\n    \t\t// up\n\n    \t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\n    \t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\n    \t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\n\n    \t\t// cross\n\n    \t\tsetPoint( \"cf1\", - w,   0, 1 );\n    \t\tsetPoint( \"cf2\",   w,   0, 1 );\n    \t\tsetPoint( \"cf3\",   0, - h, 1 );\n    \t\tsetPoint( \"cf4\",   0,   h, 1 );\n\n    \t\tsetPoint( \"cn1\", - w,   0, - 1 );\n    \t\tsetPoint( \"cn2\",   w,   0, - 1 );\n    \t\tsetPoint( \"cn3\",   0, - h, - 1 );\n    \t\tsetPoint( \"cn4\",   0,   h, - 1 );\n\n    \t\tgeometry.verticesNeedUpdate = true;\n\n    \t};\n\n    }();\n\n    /**\n     * @author WestLangley / http://github.com/WestLangley\n     */\n\n    // a helper to show the world-axis-aligned bounding box for an object\n\n    function BoundingBoxHelper( object, hex ) {\n\n    \tvar color = ( hex !== undefined ) ? hex : 0x888888;\n\n    \tthis.object = object;\n\n    \tthis.box = new Box3();\n\n    \tMesh.call( this, new BoxGeometry( 1, 1, 1 ), new MeshBasicMaterial( { color: color, wireframe: true } ) );\n\n    }\n\n    BoundingBoxHelper.prototype = Object.create( Mesh.prototype );\n    BoundingBoxHelper.prototype.constructor = BoundingBoxHelper;\n\n    BoundingBoxHelper.prototype.update = function () {\n\n    \tthis.box.setFromObject( this.object );\n\n    \tthis.box.size( this.scale );\n\n    \tthis.box.getCenter( this.position );\n\n    };\n\n    /**\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function BoxHelper( object, color ) {\n\n    \tif ( color === undefined ) color = 0xffff00;\n\n    \tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n    \tvar positions = new Float32Array( 8 * 3 );\n\n    \tvar geometry = new BufferGeometry();\n    \tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n    \tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n    \tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n    \tif ( object !== undefined ) {\n\n    \t\tthis.update( object );\n\n    \t}\n\n    }\n\n    BoxHelper.prototype = Object.create( LineSegments.prototype );\n    BoxHelper.prototype.constructor = BoxHelper;\n\n    BoxHelper.prototype.update = ( function () {\n\n    \tvar box = new Box3();\n\n    \treturn function update( object ) {\n\n    \t\tif ( (object && object.isBox3) ) {\n\n    \t\t\tbox.copy( object );\n\n    \t\t} else {\n\n    \t\t\tbox.setFromObject( object );\n\n    \t\t}\n\n    \t\tif ( box.isEmpty() ) return;\n\n    \t\tvar min = box.min;\n    \t\tvar max = box.max;\n\n    \t\t/*\n    \t\t  5____4\n    \t\t1/___0/|\n    \t\t| 6__|_7\n    \t\t2/___3/\n\n    \t\t0: max.x, max.y, max.z\n    \t\t1: min.x, max.y, max.z\n    \t\t2: min.x, min.y, max.z\n    \t\t3: max.x, min.y, max.z\n    \t\t4: max.x, max.y, min.z\n    \t\t5: min.x, max.y, min.z\n    \t\t6: min.x, min.y, min.z\n    \t\t7: max.x, min.y, min.z\n    \t\t*/\n\n    \t\tvar position = this.geometry.attributes.position;\n    \t\tvar array = position.array;\n\n    \t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\n    \t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\n    \t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\n    \t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n    \t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n    \t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n    \t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n    \t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n    \t\tposition.needsUpdate = true;\n\n    \t\tthis.geometry.computeBoundingSphere();\n\n    \t};\n\n    } )();\n\n    var lineGeometry = new BufferGeometry();\n    lineGeometry.addAttribute( 'position', new Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n    var coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n    coneGeometry.translate( 0, - 0.5, 0 );\n\n    function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n    \t// dir is assumed to be normalized\n\n    \tObject3D.call( this );\n\n    \tif ( color === undefined ) color = 0xffff00;\n    \tif ( length === undefined ) length = 1;\n    \tif ( headLength === undefined ) headLength = 0.2 * length;\n    \tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n    \tthis.position.copy( origin );\n\n    \tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n    \tthis.line.matrixAutoUpdate = false;\n    \tthis.add( this.line );\n\n    \tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n    \tthis.cone.matrixAutoUpdate = false;\n    \tthis.add( this.cone );\n\n    \tthis.setDirection( dir );\n    \tthis.setLength( length, headLength, headWidth );\n\n    }\n\n    ArrowHelper.prototype = Object.create( Object3D.prototype );\n    ArrowHelper.prototype.constructor = ArrowHelper;\n\n    ArrowHelper.prototype.setDirection = ( function () {\n\n    \tvar axis = new Vector3();\n    \tvar radians;\n\n    \treturn function setDirection( dir ) {\n\n    \t\t// dir is assumed to be normalized\n\n    \t\tif ( dir.y > 0.99999 ) {\n\n    \t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n    \t\t} else if ( dir.y < - 0.99999 ) {\n\n    \t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n    \t\t} else {\n\n    \t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n    \t\t\tradians = Math.acos( dir.y );\n\n    \t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n    \t\t}\n\n    \t};\n\n    }() );\n\n    ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n    \tif ( headLength === undefined ) headLength = 0.2 * length;\n    \tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n    \tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n    \tthis.line.updateMatrix();\n\n    \tthis.cone.scale.set( headWidth, headLength, headWidth );\n    \tthis.cone.position.y = length;\n    \tthis.cone.updateMatrix();\n\n    };\n\n    ArrowHelper.prototype.setColor = function ( color ) {\n\n    \tthis.line.material.color.copy( color );\n    \tthis.cone.material.color.copy( color );\n\n    };\n\n    /**\n     * @author sroucheray / http://sroucheray.org/\n     * @author mrdoob / http://mrdoob.com/\n     */\n\n    function AxisHelper( size ) {\n\n    \tsize = size || 1;\n\n    \tvar vertices = new Float32Array( [\n    \t\t0, 0, 0,  size, 0, 0,\n    \t\t0, 0, 0,  0, size, 0,\n    \t\t0, 0, 0,  0, 0, size\n    \t] );\n\n    \tvar colors = new Float32Array( [\n    \t\t1, 0, 0,  1, 0.6, 0,\n    \t\t0, 1, 0,  0.6, 1, 0,\n    \t\t0, 0, 1,  0, 0.6, 1\n    \t] );\n\n    \tvar geometry = new BufferGeometry();\n    \tgeometry.addAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n    \tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n    \tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n    \tLineSegments.call( this, geometry, material );\n\n    }\n\n    AxisHelper.prototype = Object.create( LineSegments.prototype );\n    AxisHelper.prototype.constructor = AxisHelper;\n\n    /**\n     * @author zz85 https://github.com/zz85\n     *\n     * Centripetal CatmullRom Curve - which is useful for avoiding\n     * cusps and self-intersections in non-uniform catmull rom curves.\n     * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n     *\n     * curve.type accepts centripetal(default), chordal and catmullrom\n     * curve.tension is used for catmullrom which defaults to 0.5\n     */\n\n    exports.CatmullRomCurve3 = ( function() {\n\n    \tvar\n    \t\ttmp = new Vector3(),\n    \t\tpx = new CubicPoly(),\n    \t\tpy = new CubicPoly(),\n    \t\tpz = new CubicPoly();\n\n    \t/*\n    \tBased on an optimized c++ solution in\n    \t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n    \t - http://ideone.com/NoEbVM\n\n    \tThis CubicPoly class could be used for reusing some variables and calculations,\n    \tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n    \twhich can be placed in CurveUtils.\n    \t*/\n\n    \tfunction CubicPoly() {\n\n    \t}\n\n    \t/*\n    \t * Compute coefficients for a cubic polynomial\n    \t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n    \t * such that\n    \t *   p(0) = x0, p(1) = x1\n    \t *  and\n    \t *   p'(0) = t0, p'(1) = t1.\n    \t */\n    \tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\n\n    \t\tthis.c0 = x0;\n    \t\tthis.c1 = t0;\n    \t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n    \t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n    \t};\n\n    \tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n    \t\t// compute tangents when parameterized in [t1,t2]\n    \t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n    \t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n    \t\t// rescale tangents for parametrization in [0,1]\n    \t\tt1 *= dt1;\n    \t\tt2 *= dt1;\n\n    \t\t// initCubicPoly\n    \t\tthis.init( x1, x2, t1, t2 );\n\n    \t};\n\n    \t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\n    \tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\n\n    \t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n    \t};\n\n    \tCubicPoly.prototype.calc = function( t ) {\n\n    \t\tvar t2 = t * t;\n    \t\tvar t3 = t2 * t;\n    \t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\n\n    \t};\n\n    \t// Subclass Three.js curve\n    \treturn Curve.create(\n\n    \t\tfunction ( p /* array of Vector3 */ ) {\n\n    \t\t\tthis.points = p || [];\n    \t\t\tthis.closed = false;\n\n    \t\t},\n\n    \t\tfunction ( t ) {\n\n    \t\t\tvar points = this.points,\n    \t\t\t\tpoint, intPoint, weight, l;\n\n    \t\t\tl = points.length;\n\n    \t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\n\n    \t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\n    \t\t\tintPoint = Math.floor( point );\n    \t\t\tweight = point - intPoint;\n\n    \t\t\tif ( this.closed ) {\n\n    \t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n    \t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n    \t\t\t\tintPoint = l - 2;\n    \t\t\t\tweight = 1;\n\n    \t\t\t}\n\n    \t\t\tvar p0, p1, p2, p3; // 4 points\n\n    \t\t\tif ( this.closed || intPoint > 0 ) {\n\n    \t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n    \t\t\t} else {\n\n    \t\t\t\t// extrapolate first point\n    \t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n    \t\t\t\tp0 = tmp;\n\n    \t\t\t}\n\n    \t\t\tp1 = points[ intPoint % l ];\n    \t\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n    \t\t\tif ( this.closed || intPoint + 2 < l ) {\n\n    \t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n    \t\t\t} else {\n\n    \t\t\t\t// extrapolate last point\n    \t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n    \t\t\t\tp3 = tmp;\n\n    \t\t\t}\n\n    \t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\n\n    \t\t\t\t// init Centripetal / Chordal Catmull-Rom\n    \t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\n    \t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n    \t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n    \t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n    \t\t\t\t// safety check for repeated points\n    \t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n    \t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n    \t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n    \t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n    \t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n    \t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n    \t\t\t} else if ( this.type === 'catmullrom' ) {\n\n    \t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\n    \t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\n    \t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\n    \t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\n\n    \t\t\t}\n\n    \t\t\tvar v = new Vector3(\n    \t\t\t\tpx.calc( weight ),\n    \t\t\t\tpy.calc( weight ),\n    \t\t\t\tpz.calc( weight )\n    \t\t\t);\n\n    \t\t\treturn v;\n\n    \t\t}\n\n    \t);\n\n    } )();\n\n    /**************************************************************\n     *\tClosed Spline 3D curve\n     **************************************************************/\n\n\n    function ClosedSplineCurve3( points ) {\n\n    \tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\n\n    \texports.CatmullRomCurve3.call( this, points );\n    \tthis.type = 'catmullrom';\n    \tthis.closed = true;\n\n    }\n\n    ClosedSplineCurve3.prototype = Object.create( exports.CatmullRomCurve3.prototype );\n\n    /**************************************************************\n     *\tSpline 3D curve\n     **************************************************************/\n\n\n    var SplineCurve3 = Curve.create(\n\n    \tfunction ( points /* array of Vector3 */ ) {\n\n    \t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\n    \t\tthis.points = ( points === undefined ) ? [] : points;\n\n    \t},\n\n    \tfunction ( t ) {\n\n    \t\tvar points = this.points;\n    \t\tvar point = ( points.length - 1 ) * t;\n\n    \t\tvar intPoint = Math.floor( point );\n    \t\tvar weight = point - intPoint;\n\n    \t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\n    \t\tvar point1 = points[ intPoint ];\n    \t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n    \t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n    \t\tvar interpolate = exports.CurveUtils.interpolate;\n\n    \t\treturn new Vector3(\n    \t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\n    \t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\n    \t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\n    \t\t);\n\n    \t}\n\n    );\n\n    /**************************************************************\n     *\tCubic Bezier 3D curve\n     **************************************************************/\n\n    exports.CubicBezierCurve3 = Curve.create(\n\n    \tfunction ( v0, v1, v2, v3 ) {\n\n    \t\tthis.v0 = v0;\n    \t\tthis.v1 = v1;\n    \t\tthis.v2 = v2;\n    \t\tthis.v3 = v3;\n\n    \t},\n\n    \tfunction ( t ) {\n\n    \t\tvar b3 = exports.ShapeUtils.b3;\n\n    \t\treturn new Vector3(\n    \t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\n    \t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\n    \t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\n    \t\t);\n\n    \t}\n\n    );\n\n    /**************************************************************\n     *\tQuadratic Bezier 3D curve\n     **************************************************************/\n\n    exports.QuadraticBezierCurve3 = Curve.create(\n\n    \tfunction ( v0, v1, v2 ) {\n\n    \t\tthis.v0 = v0;\n    \t\tthis.v1 = v1;\n    \t\tthis.v2 = v2;\n\n    \t},\n\n    \tfunction ( t ) {\n\n    \t\tvar b2 = exports.ShapeUtils.b2;\t\t\n\n    \t\treturn new Vector3(\n    \t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\n    \t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\n    \t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\n    \t\t);\n\n    \t}\n\n    );\n\n    /**************************************************************\n     *\tLine3D\n     **************************************************************/\n\n    exports.LineCurve3 = Curve.create(\n\n    \tfunction ( v1, v2 ) {\n\n    \t\tthis.v1 = v1;\n    \t\tthis.v2 = v2;\n\n    \t},\n\n    \tfunction ( t ) {\n\n    \t\tif ( t === 1 ) {\n\n    \t\t\treturn this.v2.clone();\n\n    \t\t}\n\n    \t\tvar vector = new Vector3();\n\n    \t\tvector.subVectors( this.v2, this.v1 ); // diff\n    \t\tvector.multiplyScalar( t );\n    \t\tvector.add( this.v1 );\n\n    \t\treturn vector;\n\n    \t}\n\n    );\n\n    /**************************************************************\n     *\tArc curve\n     **************************************************************/\n\n    function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n    \tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n    }\n\n    ArcCurve.prototype = Object.create( EllipseCurve.prototype );\n    ArcCurve.prototype.constructor = ArcCurve;\n\n    /**\n     * @author alteredq / http://alteredqualia.com/\n     */\n\n    exports.SceneUtils = {\n\n    \tcreateMultiMaterialObject: function ( geometry, materials ) {\n\n    \t\tvar group = new Group();\n\n    \t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n    \t\t\tgroup.add( new Mesh( geometry, materials[ i ] ) );\n\n    \t\t}\n\n    \t\treturn group;\n\n    \t},\n\n    \tdetach: function ( child, parent, scene ) {\n\n    \t\tchild.applyMatrix( parent.matrixWorld );\n    \t\tparent.remove( child );\n    \t\tscene.add( child );\n\n    \t},\n\n    \tattach: function ( child, scene, parent ) {\n\n    \t\tvar matrixWorldInverse = new Matrix4();\n    \t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n    \t\tchild.applyMatrix( matrixWorldInverse );\n\n    \t\tscene.remove( child );\n    \t\tparent.add( child );\n\n    \t}\n\n    };\n\n    function Face4 ( a, b, c, d, normal, color, materialIndex ) {\n    \tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n    \treturn new Face3( a, b, c, normal, color, materialIndex );\n    }\n\n    var LineStrip = 0;\n\n    var LinePieces = 1;\n\n    function PointCloud ( geometry, material ) {\n    \tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n    \treturn new Points( geometry, material );\n    }\n\n    function ParticleSystem ( geometry, material ) {\n    \tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n    \treturn new Points( geometry, material );\n    }\n\n    function PointCloudMaterial ( parameters ) {\n    \tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n    \treturn new PointsMaterial( parameters );\n    }\n\n    function ParticleBasicMaterial ( parameters ) {\n    \tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n    \treturn new PointsMaterial( parameters );\n    }\n\n    function ParticleSystemMaterial ( parameters ) {\n    \tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n    \treturn new PointsMaterial( parameters );\n    }\n\n    function Vertex ( x, y, z ) {\n    \tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n    \treturn new Vector3( x, y, z );\n    }\n\n    //\n\n    function EdgesHelper( object, hex ) {\n    \tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n    \treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n    }\n\n    function WireframeHelper( object, hex ) {\n    \tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n    \treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n    }\n\n    //\n\n    Object.assign( Box2.prototype, {\n    \tcenter: function ( optionalTarget ) {\n    \t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n    \t\treturn this.getCenter( optionalTarget );\n    \t},\n    \tempty: function () {\n    \t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n    \t\treturn this.isEmpty();\n    \t},\n    \tisIntersectionBox: function ( box ) {\n    \t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n    \t\treturn this.intersectsBox( box );\n    \t},\n    \tsize: function ( optionalTarget ) {\n    \t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n    \t\treturn this.getSize( optionalTarget );\n    \t}\n    } );\n\n    Object.assign( Box3.prototype, {\n    \tcenter: function ( optionalTarget ) {\n    \t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n    \t\treturn this.getCenter( optionalTarget );\n    \t},\n    \tempty: function () {\n    \t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n    \t\treturn this.isEmpty();\n    \t},\n    \tisIntersectionBox: function ( box ) {\n    \t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n    \t\treturn this.intersectsBox( box );\n    \t},\n    \tisIntersectionSphere: function ( sphere ) {\n    \t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n    \t\treturn this.intersectsSphere( sphere );\n    \t},\n    \tsize: function ( optionalTarget ) {\n    \t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n    \t\treturn this.getSize( optionalTarget );\n    \t}\n    } );\n\n    Object.assign( Line3.prototype, {\n    \tcenter: function ( optionalTarget ) {\n    \t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n    \t\treturn this.getCenter( optionalTarget );\n    \t}\n    } );\n\n    Object.assign( Matrix3.prototype, {\n    \tmultiplyVector3: function ( vector ) {\n    \t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n    \t\treturn vector.applyMatrix3( this );\n    \t},\n    \tmultiplyVector3Array: function ( a ) {\n    \t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n    \t\treturn this.applyToVector3Array( a );\n    \t}\n    } );\n\n    Object.assign( Matrix4.prototype, {\n    \textractPosition: function ( m ) {\n    \t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n    \t\treturn this.copyPosition( m );\n    \t},\n    \tsetRotationFromQuaternion: function ( q ) {\n    \t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n    \t\treturn this.makeRotationFromQuaternion( q );\n    \t},\n    \tmultiplyVector3: function ( vector ) {\n    \t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\n    \t\treturn vector.applyProjection( this );\n    \t},\n    \tmultiplyVector4: function ( vector ) {\n    \t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n    \t\treturn vector.applyMatrix4( this );\n    \t},\n    \tmultiplyVector3Array: function ( a ) {\n    \t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\n    \t\treturn this.applyToVector3Array( a );\n    \t},\n    \trotateAxis: function ( v ) {\n    \t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n    \t\tv.transformDirection( this );\n    \t},\n    \tcrossVector: function ( vector ) {\n    \t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n    \t\treturn vector.applyMatrix4( this );\n    \t},\n    \ttranslate: function ( v ) {\n    \t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n    \t},\n    \trotateX: function ( angle ) {\n    \t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n    \t},\n    \trotateY: function ( angle ) {\n    \t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n    \t},\n    \trotateZ: function ( angle ) {\n    \t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n    \t},\n    \trotateByAxis: function ( axis, angle ) {\n    \t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n    \t}\n    } );\n\n    Object.assign( Plane.prototype, {\n    \tisIntersectionLine: function ( line ) {\n    \t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n    \t\treturn this.intersectsLine( line );\n    \t}\n    } );\n\n    Object.assign( Quaternion.prototype, {\n    \tmultiplyVector3: function ( vector ) {\n    \t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n    \t\treturn vector.applyQuaternion( this );\n    \t}\n    } );\n\n    Object.assign( Ray.prototype, {\n    \tisIntersectionBox: function ( box ) {\n    \t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n    \t\treturn this.intersectsBox( box );\n    \t},\n    \tisIntersectionPlane: function ( plane ) {\n    \t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n    \t\treturn this.intersectsPlane( plane );\n    \t},\n    \tisIntersectionSphere: function ( sphere ) {\n    \t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n    \t\treturn this.intersectsSphere( sphere );\n    \t}\n    } );\n\n    Object.assign( Shape.prototype, {\n    \textrude: function ( options ) {\n    \t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n    \t\treturn new ExtrudeGeometry( this, options );\n    \t},\n    \tmakeGeometry: function ( options ) {\n    \t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n    \t\treturn new ShapeGeometry( this, options );\n    \t}\n    } );\n\n    Object.assign( Vector3.prototype, {\n    \tsetEulerFromRotationMatrix: function () {\n    \t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n    \t},\n    \tsetEulerFromQuaternion: function () {\n    \t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n    \t},\n    \tgetPositionFromMatrix: function ( m ) {\n    \t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n    \t\treturn this.setFromMatrixPosition( m );\n    \t},\n    \tgetScaleFromMatrix: function ( m ) {\n    \t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n    \t\treturn this.setFromMatrixScale( m );\n    \t},\n    \tgetColumnFromMatrix: function ( index, matrix ) {\n    \t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n    \t\treturn this.setFromMatrixColumn( matrix, index );\n    \t}\n    } );\n\n    //\n\n    Object.assign( Object3D.prototype, {\n    \tgetChildByName: function ( name ) {\n    \t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n    \t\treturn this.getObjectByName( name );\n    \t},\n    \trenderDepth: function ( value ) {\n    \t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n    \t},\n    \ttranslate: function ( distance, axis ) {\n    \t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n    \t\treturn this.translateOnAxis( axis, distance );\n    \t}\n    } );\n\n    Object.defineProperties( Object3D.prototype, {\n    \teulerOrder: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n    \t\t\treturn this.rotation.order;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n    \t\t\tthis.rotation.order = value;\n    \t\t}\n    \t},\n    \tuseQuaternion: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n    \t\t}\n    \t}\n    } );\n\n    Object.defineProperties( LOD.prototype, {\n    \tobjects: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n    \t\t\treturn this.levels;\n    \t\t}\n    \t}\n    } );\n\n    //\n\n    PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n    \tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n    \t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n    \tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n    \tthis.setFocalLength( focalLength );\n\n    };\n\n    //\n\n    Object.defineProperties( Light.prototype, {\n    \tonlyShadow: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n    \t\t}\n    \t},\n    \tshadowCameraFov: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n    \t\t\tthis.shadow.camera.fov = value;\n    \t\t}\n    \t},\n    \tshadowCameraLeft: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n    \t\t\tthis.shadow.camera.left = value;\n    \t\t}\n    \t},\n    \tshadowCameraRight: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n    \t\t\tthis.shadow.camera.right = value;\n    \t\t}\n    \t},\n    \tshadowCameraTop: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n    \t\t\tthis.shadow.camera.top = value;\n    \t\t}\n    \t},\n    \tshadowCameraBottom: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n    \t\t\tthis.shadow.camera.bottom = value;\n    \t\t}\n    \t},\n    \tshadowCameraNear: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n    \t\t\tthis.shadow.camera.near = value;\n    \t\t}\n    \t},\n    \tshadowCameraFar: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n    \t\t\tthis.shadow.camera.far = value;\n    \t\t}\n    \t},\n    \tshadowCameraVisible: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n    \t\t}\n    \t},\n    \tshadowBias: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n    \t\t\tthis.shadow.bias = value;\n    \t\t}\n    \t},\n    \tshadowDarkness: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n    \t\t}\n    \t},\n    \tshadowMapWidth: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n    \t\t\tthis.shadow.mapSize.width = value;\n    \t\t}\n    \t},\n    \tshadowMapHeight: {\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n    \t\t\tthis.shadow.mapSize.height = value;\n    \t\t}\n    \t}\n    } );\n\n    //\n\n    Object.defineProperties( BufferAttribute.prototype, {\n    \tlength: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\n    \t\t\treturn this.array.length;\n    \t\t}\n    \t}\n    } );\n\n    Object.assign( BufferGeometry.prototype, {\n    \taddIndex: function ( index ) {\n    \t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n    \t\tthis.setIndex( index );\n    \t},\n    \taddDrawCall: function ( start, count, indexOffset ) {\n    \t\tif ( indexOffset !== undefined ) {\n    \t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n    \t\t}\n    \t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n    \t\tthis.addGroup( start, count );\n    \t},\n    \tclearDrawCalls: function () {\n    \t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n    \t\tthis.clearGroups();\n    \t},\n    \tcomputeTangents: function () {\n    \t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n    \t},\n    \tcomputeOffsets: function () {\n    \t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n    \t}\n    } );\n\n    Object.defineProperties( BufferGeometry.prototype, {\n    \tdrawcalls: {\n    \t\tget: function () {\n    \t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n    \t\t\treturn this.groups;\n    \t\t}\n    \t},\n    \toffsets: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n    \t\t\treturn this.groups;\n    \t\t}\n    \t}\n    } );\n\n    //\n\n    Object.defineProperties( Material.prototype, {\n    \twrapAround: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\n    \t\t}\n    \t},\n    \twrapRGB: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\n    \t\t\treturn new Color();\n    \t\t}\n    \t}\n    } );\n\n    Object.defineProperties( MeshPhongMaterial.prototype, {\n    \tmetal: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n    \t\t\treturn false;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n    \t\t}\n    \t}\n    } );\n\n    Object.defineProperties( ShaderMaterial.prototype, {\n    \tderivatives: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n    \t\t\treturn this.extensions.derivatives;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n    \t\t\tthis.extensions.derivatives = value;\n    \t\t}\n    \t}\n    } );\n\n    //\n\n    EventDispatcher.prototype = Object.assign( Object.create( {\n\n    \t// Note: Extra base ensures these properties are not 'assign'ed.\n\n    \tconstructor: EventDispatcher,\n\n    \tapply: function ( target ) {\n\n    \t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\n    \t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\n\n    \t\tObject.assign( target, this );\n\n    \t}\n\n    } ), EventDispatcher.prototype );\n\n    //\n\n    Object.assign( WebGLRenderer.prototype, {\n    \tsupportsFloatTextures: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n    \t\treturn this.extensions.get( 'OES_texture_float' );\n    \t},\n    \tsupportsHalfFloatTextures: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n    \t\treturn this.extensions.get( 'OES_texture_half_float' );\n    \t},\n    \tsupportsStandardDerivatives: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n    \t\treturn this.extensions.get( 'OES_standard_derivatives' );\n    \t},\n    \tsupportsCompressedTextureS3TC: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n    \t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n    \t},\n    \tsupportsCompressedTexturePVRTC: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n    \t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n    \t},\n    \tsupportsBlendMinMax: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n    \t\treturn this.extensions.get( 'EXT_blend_minmax' );\n    \t},\n    \tsupportsVertexTextures: function () {\n    \t\treturn this.capabilities.vertexTextures;\n    \t},\n    \tsupportsInstancedArrays: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n    \t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n    \t},\n    \tenableScissorTest: function ( boolean ) {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n    \t\tthis.setScissorTest( boolean );\n    \t},\n    \tinitMaterial: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n    \t},\n    \taddPrePlugin: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n    \t},\n    \taddPostPlugin: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n    \t},\n    \tupdateShadowMap: function () {\n    \t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n    \t}\n    } );\n\n    Object.defineProperties( WebGLRenderer.prototype, {\n    \tshadowMapEnabled: {\n    \t\tget: function () {\n    \t\t\treturn this.shadowMap.enabled;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n    \t\t\tthis.shadowMap.enabled = value;\n    \t\t}\n    \t},\n    \tshadowMapType: {\n    \t\tget: function () {\n    \t\t\treturn this.shadowMap.type;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n    \t\t\tthis.shadowMap.type = value;\n    \t\t}\n    \t},\n    \tshadowMapCullFace: {\n    \t\tget: function () {\n    \t\t\treturn this.shadowMap.cullFace;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n    \t\t\tthis.shadowMap.cullFace = value;\n    \t\t}\n    \t}\n    } );\n\n    Object.defineProperties( WebGLShadowMap.prototype, {\n    \tcullFace: {\n    \t\tget: function () {\n    \t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n    \t\t},\n    \t\tset: function ( cullFace ) {\n    \t\t\tvar value = ( cullFace !== CullFaceBack );\n    \t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n    \t\t\tthis.renderReverseSided = value;\n    \t\t}\n    \t}\n    } );\n\n    //\n\n    Object.defineProperties( WebGLRenderTarget.prototype, {\n    \twrapS: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n    \t\t\treturn this.texture.wrapS;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n    \t\t\tthis.texture.wrapS = value;\n    \t\t}\n    \t},\n    \twrapT: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n    \t\t\treturn this.texture.wrapT;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n    \t\t\tthis.texture.wrapT = value;\n    \t\t}\n    \t},\n    \tmagFilter: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n    \t\t\treturn this.texture.magFilter;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n    \t\t\tthis.texture.magFilter = value;\n    \t\t}\n    \t},\n    \tminFilter: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n    \t\t\treturn this.texture.minFilter;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n    \t\t\tthis.texture.minFilter = value;\n    \t\t}\n    \t},\n    \tanisotropy: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n    \t\t\treturn this.texture.anisotropy;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n    \t\t\tthis.texture.anisotropy = value;\n    \t\t}\n    \t},\n    \toffset: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n    \t\t\treturn this.texture.offset;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n    \t\t\tthis.texture.offset = value;\n    \t\t}\n    \t},\n    \trepeat: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n    \t\t\treturn this.texture.repeat;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n    \t\t\tthis.texture.repeat = value;\n    \t\t}\n    \t},\n    \tformat: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n    \t\t\treturn this.texture.format;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n    \t\t\tthis.texture.format = value;\n    \t\t}\n    \t},\n    \ttype: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n    \t\t\treturn this.texture.type;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n    \t\t\tthis.texture.type = value;\n    \t\t}\n    \t},\n    \tgenerateMipmaps: {\n    \t\tget: function () {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n    \t\t\treturn this.texture.generateMipmaps;\n    \t\t},\n    \t\tset: function ( value ) {\n    \t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n    \t\t\tthis.texture.generateMipmaps = value;\n    \t\t}\n    \t}\n    } );\n\n    //\n\n    Object.assign( Audio.prototype, {\n    \tload: function ( file ) {\n    \t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\n    \t\tvar scope = this;\n    \t\tvar audioLoader = new AudioLoader();\n    \t\taudioLoader.load( file, function ( buffer ) {\n    \t\t\tscope.setBuffer( buffer );\n    \t\t} );\n    \t\treturn this;\n    \t}\n    } );\n\n    Object.assign( AudioAnalyser.prototype, {\n    \tgetData: function ( file ) {\n    \t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n    \t\treturn this.getFrequencyData();\n    \t}\n    } );\n\n    //\n\n    var GeometryUtils = {\n\n    \tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n    \t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\n    \t\tvar matrix;\n\n    \t\tif ( geometry2.isMesh ) {\n\n    \t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n    \t\t\tmatrix = geometry2.matrix;\n    \t\t\tgeometry2 = geometry2.geometry;\n\n    \t\t}\n\n    \t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n    \t},\n\n    \tcenter: function ( geometry ) {\n\n    \t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n    \t\treturn geometry.center();\n\n    \t}\n\n    };\n\n    var ImageUtils = {\n\n    \tcrossOrigin: undefined,\n\n    \tloadTexture: function ( url, mapping, onLoad, onError ) {\n\n    \t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n    \t\tvar loader = new TextureLoader();\n    \t\tloader.setCrossOrigin( this.crossOrigin );\n\n    \t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n    \t\tif ( mapping ) texture.mapping = mapping;\n\n    \t\treturn texture;\n\n    \t},\n\n    \tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\n\n    \t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n    \t\tvar loader = new CubeTextureLoader();\n    \t\tloader.setCrossOrigin( this.crossOrigin );\n\n    \t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n    \t\tif ( mapping ) texture.mapping = mapping;\n\n    \t\treturn texture;\n\n    \t},\n\n    \tloadCompressedTexture: function () {\n\n    \t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n    \t},\n\n    \tloadCompressedTextureCube: function () {\n\n    \t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n    \t}\n\n    };\n\n    //\n\n    function Projector () {\n\n    \tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\n\n    \tthis.projectVector = function ( vector, camera ) {\n\n    \t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\n    \t\tvector.project( camera );\n\n    \t};\n\n    \tthis.unprojectVector = function ( vector, camera ) {\n\n    \t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\n    \t\tvector.unproject( camera );\n\n    \t};\n\n    \tthis.pickingRay = function ( vector, camera ) {\n\n    \t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\n\n    \t};\n\n    }\n\n    //\n\n    function CanvasRenderer () {\n\n    \tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\n\n    \tthis.domElement = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n    \tthis.clear = function () {};\n    \tthis.render = function () {};\n    \tthis.setClearColor = function () {};\n    \tthis.setSize = function () {};\n\n    }\n\n    Object.defineProperty( exports, 'AudioContext', {\n    \tget: function () {\n    \t\treturn exports.getAudioContext();\n    \t}\n    });\n\n    exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n    exports.WebGLRenderTarget = WebGLRenderTarget;\n    exports.WebGLRenderer = WebGLRenderer;\n    exports.ShaderLib = ShaderLib;\n    exports.UniformsLib = UniformsLib;\n    exports.ShaderChunk = ShaderChunk;\n    exports.FogExp2 = FogExp2;\n    exports.Fog = Fog;\n    exports.Scene = Scene;\n    exports.LensFlare = LensFlare;\n    exports.Sprite = Sprite;\n    exports.LOD = LOD;\n    exports.SkinnedMesh = SkinnedMesh;\n    exports.Skeleton = Skeleton;\n    exports.Bone = Bone;\n    exports.Mesh = Mesh;\n    exports.LineSegments = LineSegments;\n    exports.Line = Line;\n    exports.Points = Points;\n    exports.Group = Group;\n    exports.VideoTexture = VideoTexture;\n    exports.DataTexture = DataTexture;\n    exports.CompressedTexture = CompressedTexture;\n    exports.CubeTexture = CubeTexture;\n    exports.CanvasTexture = CanvasTexture;\n    exports.DepthTexture = DepthTexture;\n    exports.TextureIdCount = TextureIdCount;\n    exports.Texture = Texture;\n    exports.MaterialIdCount = MaterialIdCount;\n    exports.CompressedTextureLoader = CompressedTextureLoader;\n    exports.BinaryTextureLoader = BinaryTextureLoader;\n    exports.DataTextureLoader = DataTextureLoader;\n    exports.CubeTextureLoader = CubeTextureLoader;\n    exports.TextureLoader = TextureLoader;\n    exports.ObjectLoader = ObjectLoader;\n    exports.MaterialLoader = MaterialLoader;\n    exports.BufferGeometryLoader = BufferGeometryLoader;\n    exports.LoadingManager = LoadingManager;\n    exports.JSONLoader = JSONLoader;\n    exports.ImageLoader = ImageLoader;\n    exports.FontLoader = FontLoader;\n    exports.XHRLoader = XHRLoader;\n    exports.Loader = Loader;\n    exports.AudioLoader = AudioLoader;\n    exports.SpotLightShadow = SpotLightShadow;\n    exports.SpotLight = SpotLight;\n    exports.PointLight = PointLight;\n    exports.HemisphereLight = HemisphereLight;\n    exports.DirectionalLightShadow = DirectionalLightShadow;\n    exports.DirectionalLight = DirectionalLight;\n    exports.AmbientLight = AmbientLight;\n    exports.LightShadow = LightShadow;\n    exports.Light = Light;\n    exports.StereoCamera = StereoCamera;\n    exports.PerspectiveCamera = PerspectiveCamera;\n    exports.OrthographicCamera = OrthographicCamera;\n    exports.CubeCamera = CubeCamera;\n    exports.Camera = Camera;\n    exports.AudioListener = AudioListener;\n    exports.PositionalAudio = PositionalAudio;\n    exports.getAudioContext = getAudioContext;\n    exports.AudioAnalyser = AudioAnalyser;\n    exports.Audio = Audio;\n    exports.VectorKeyframeTrack = VectorKeyframeTrack;\n    exports.StringKeyframeTrack = StringKeyframeTrack;\n    exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n    exports.NumberKeyframeTrack = NumberKeyframeTrack;\n    exports.ColorKeyframeTrack = ColorKeyframeTrack;\n    exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n    exports.PropertyMixer = PropertyMixer;\n    exports.PropertyBinding = PropertyBinding;\n    exports.KeyframeTrack = KeyframeTrack;\n    exports.AnimationObjectGroup = AnimationObjectGroup;\n    exports.AnimationMixer = AnimationMixer;\n    exports.AnimationClip = AnimationClip;\n    exports.Uniform = Uniform;\n    exports.InstancedBufferGeometry = InstancedBufferGeometry;\n    exports.BufferGeometry = BufferGeometry;\n    exports.GeometryIdCount = GeometryIdCount;\n    exports.Geometry = Geometry;\n    exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n    exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n    exports.InterleavedBuffer = InterleavedBuffer;\n    exports.InstancedBufferAttribute = InstancedBufferAttribute;\n    exports.DynamicBufferAttribute = DynamicBufferAttribute;\n    exports.Float64Attribute = Float64Attribute;\n    exports.Float32Attribute = Float32Attribute;\n    exports.Uint32Attribute = Uint32Attribute;\n    exports.Int32Attribute = Int32Attribute;\n    exports.Uint16Attribute = Uint16Attribute;\n    exports.Int16Attribute = Int16Attribute;\n    exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n    exports.Uint8Attribute = Uint8Attribute;\n    exports.Int8Attribute = Int8Attribute;\n    exports.BufferAttribute = BufferAttribute;\n    exports.Face3 = Face3;\n    exports.Object3DIdCount = Object3DIdCount;\n    exports.Object3D = Object3D;\n    exports.Raycaster = Raycaster;\n    exports.Layers = Layers;\n    exports.EventDispatcher = EventDispatcher;\n    exports.Clock = Clock;\n    exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n    exports.LinearInterpolant = LinearInterpolant;\n    exports.DiscreteInterpolant = DiscreteInterpolant;\n    exports.CubicInterpolant = CubicInterpolant;\n    exports.Interpolant = Interpolant;\n    exports.Triangle = Triangle;\n    exports.Spline = Spline;\n    exports.Spherical = Spherical;\n    exports.Plane = Plane;\n    exports.Frustum = Frustum;\n    exports.Sphere = Sphere;\n    exports.Ray = Ray;\n    exports.Matrix4 = Matrix4;\n    exports.Matrix3 = Matrix3;\n    exports.Box3 = Box3;\n    exports.Box2 = Box2;\n    exports.Line3 = Line3;\n    exports.Euler = Euler;\n    exports.Vector4 = Vector4;\n    exports.Vector3 = Vector3;\n    exports.Vector2 = Vector2;\n    exports.Quaternion = Quaternion;\n    exports.Color = Color;\n    exports.MorphBlendMesh = MorphBlendMesh;\n    exports.ImmediateRenderObject = ImmediateRenderObject;\n    exports.VertexNormalsHelper = VertexNormalsHelper;\n    exports.SpotLightHelper = SpotLightHelper;\n    exports.SkeletonHelper = SkeletonHelper;\n    exports.PointLightHelper = PointLightHelper;\n    exports.HemisphereLightHelper = HemisphereLightHelper;\n    exports.GridHelper = GridHelper;\n    exports.FaceNormalsHelper = FaceNormalsHelper;\n    exports.DirectionalLightHelper = DirectionalLightHelper;\n    exports.CameraHelper = CameraHelper;\n    exports.BoundingBoxHelper = BoundingBoxHelper;\n    exports.BoxHelper = BoxHelper;\n    exports.ArrowHelper = ArrowHelper;\n    exports.AxisHelper = AxisHelper;\n    exports.ClosedSplineCurve3 = ClosedSplineCurve3;\n    exports.SplineCurve3 = SplineCurve3;\n    exports.ArcCurve = ArcCurve;\n    exports.EllipseCurve = EllipseCurve;\n    exports.SplineCurve = SplineCurve;\n    exports.CubicBezierCurve = CubicBezierCurve;\n    exports.QuadraticBezierCurve = QuadraticBezierCurve;\n    exports.LineCurve = LineCurve;\n    exports.Shape = Shape;\n    exports.ShapePath = ShapePath;\n    exports.Path = Path;\n    exports.Font = Font;\n    exports.CurvePath = CurvePath;\n    exports.Curve = Curve;\n    exports.WireframeGeometry = WireframeGeometry;\n    exports.ParametricGeometry = ParametricGeometry;\n    exports.TetrahedronGeometry = TetrahedronGeometry;\n    exports.OctahedronGeometry = OctahedronGeometry;\n    exports.IcosahedronGeometry = IcosahedronGeometry;\n    exports.DodecahedronGeometry = DodecahedronGeometry;\n    exports.PolyhedronGeometry = PolyhedronGeometry;\n    exports.TubeGeometry = TubeGeometry;\n    exports.TorusKnotGeometry = TorusKnotGeometry;\n    exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n    exports.TorusGeometry = TorusGeometry;\n    exports.TorusBufferGeometry = TorusBufferGeometry;\n    exports.TextGeometry = TextGeometry;\n    exports.SphereBufferGeometry = SphereBufferGeometry;\n    exports.SphereGeometry = SphereGeometry;\n    exports.RingGeometry = RingGeometry;\n    exports.RingBufferGeometry = RingBufferGeometry;\n    exports.PlaneBufferGeometry = PlaneBufferGeometry;\n    exports.PlaneGeometry = PlaneGeometry;\n    exports.LatheGeometry = LatheGeometry;\n    exports.LatheBufferGeometry = LatheBufferGeometry;\n    exports.ShapeGeometry = ShapeGeometry;\n    exports.ExtrudeGeometry = ExtrudeGeometry;\n    exports.EdgesGeometry = EdgesGeometry;\n    exports.ConeGeometry = ConeGeometry;\n    exports.ConeBufferGeometry = ConeBufferGeometry;\n    exports.CylinderGeometry = CylinderGeometry;\n    exports.CylinderBufferGeometry = CylinderBufferGeometry;\n    exports.CircleBufferGeometry = CircleBufferGeometry;\n    exports.CircleGeometry = CircleGeometry;\n    exports.BoxBufferGeometry = BoxBufferGeometry;\n    exports.BoxGeometry = BoxGeometry;\n    exports.ShadowMaterial = ShadowMaterial;\n    exports.SpriteMaterial = SpriteMaterial;\n    exports.RawShaderMaterial = RawShaderMaterial;\n    exports.ShaderMaterial = ShaderMaterial;\n    exports.PointsMaterial = PointsMaterial;\n    exports.MultiMaterial = MultiMaterial;\n    exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n    exports.MeshStandardMaterial = MeshStandardMaterial;\n    exports.MeshPhongMaterial = MeshPhongMaterial;\n    exports.MeshNormalMaterial = MeshNormalMaterial;\n    exports.MeshLambertMaterial = MeshLambertMaterial;\n    exports.MeshDepthMaterial = MeshDepthMaterial;\n    exports.MeshBasicMaterial = MeshBasicMaterial;\n    exports.LineDashedMaterial = LineDashedMaterial;\n    exports.LineBasicMaterial = LineBasicMaterial;\n    exports.Material = Material;\n    exports.REVISION = REVISION;\n    exports.MOUSE = MOUSE;\n    exports.CullFaceNone = CullFaceNone;\n    exports.CullFaceBack = CullFaceBack;\n    exports.CullFaceFront = CullFaceFront;\n    exports.CullFaceFrontBack = CullFaceFrontBack;\n    exports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n    exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n    exports.BasicShadowMap = BasicShadowMap;\n    exports.PCFShadowMap = PCFShadowMap;\n    exports.PCFSoftShadowMap = PCFSoftShadowMap;\n    exports.FrontSide = FrontSide;\n    exports.BackSide = BackSide;\n    exports.DoubleSide = DoubleSide;\n    exports.FlatShading = FlatShading;\n    exports.SmoothShading = SmoothShading;\n    exports.NoColors = NoColors;\n    exports.FaceColors = FaceColors;\n    exports.VertexColors = VertexColors;\n    exports.NoBlending = NoBlending;\n    exports.NormalBlending = NormalBlending;\n    exports.AdditiveBlending = AdditiveBlending;\n    exports.SubtractiveBlending = SubtractiveBlending;\n    exports.MultiplyBlending = MultiplyBlending;\n    exports.CustomBlending = CustomBlending;\n    exports.BlendingMode = BlendingMode;\n    exports.AddEquation = AddEquation;\n    exports.SubtractEquation = SubtractEquation;\n    exports.ReverseSubtractEquation = ReverseSubtractEquation;\n    exports.MinEquation = MinEquation;\n    exports.MaxEquation = MaxEquation;\n    exports.ZeroFactor = ZeroFactor;\n    exports.OneFactor = OneFactor;\n    exports.SrcColorFactor = SrcColorFactor;\n    exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n    exports.SrcAlphaFactor = SrcAlphaFactor;\n    exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n    exports.DstAlphaFactor = DstAlphaFactor;\n    exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n    exports.DstColorFactor = DstColorFactor;\n    exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n    exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n    exports.NeverDepth = NeverDepth;\n    exports.AlwaysDepth = AlwaysDepth;\n    exports.LessDepth = LessDepth;\n    exports.LessEqualDepth = LessEqualDepth;\n    exports.EqualDepth = EqualDepth;\n    exports.GreaterEqualDepth = GreaterEqualDepth;\n    exports.GreaterDepth = GreaterDepth;\n    exports.NotEqualDepth = NotEqualDepth;\n    exports.MultiplyOperation = MultiplyOperation;\n    exports.MixOperation = MixOperation;\n    exports.AddOperation = AddOperation;\n    exports.NoToneMapping = NoToneMapping;\n    exports.LinearToneMapping = LinearToneMapping;\n    exports.ReinhardToneMapping = ReinhardToneMapping;\n    exports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n    exports.CineonToneMapping = CineonToneMapping;\n    exports.UVMapping = UVMapping;\n    exports.CubeReflectionMapping = CubeReflectionMapping;\n    exports.CubeRefractionMapping = CubeRefractionMapping;\n    exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n    exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n    exports.SphericalReflectionMapping = SphericalReflectionMapping;\n    exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n    exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n    exports.TextureMapping = TextureMapping;\n    exports.RepeatWrapping = RepeatWrapping;\n    exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n    exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n    exports.TextureWrapping = TextureWrapping;\n    exports.NearestFilter = NearestFilter;\n    exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n    exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n    exports.LinearFilter = LinearFilter;\n    exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n    exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n    exports.TextureFilter = TextureFilter;\n    exports.UnsignedByteType = UnsignedByteType;\n    exports.ByteType = ByteType;\n    exports.ShortType = ShortType;\n    exports.UnsignedShortType = UnsignedShortType;\n    exports.IntType = IntType;\n    exports.UnsignedIntType = UnsignedIntType;\n    exports.FloatType = FloatType;\n    exports.HalfFloatType = HalfFloatType;\n    exports.UnsignedShort4444Type = UnsignedShort4444Type;\n    exports.UnsignedShort5551Type = UnsignedShort5551Type;\n    exports.UnsignedShort565Type = UnsignedShort565Type;\n    exports.UnsignedInt248Type = UnsignedInt248Type;\n    exports.AlphaFormat = AlphaFormat;\n    exports.RGBFormat = RGBFormat;\n    exports.RGBAFormat = RGBAFormat;\n    exports.LuminanceFormat = LuminanceFormat;\n    exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n    exports.RGBEFormat = RGBEFormat;\n    exports.DepthFormat = DepthFormat;\n    exports.DepthStencilFormat = DepthStencilFormat;\n    exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n    exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n    exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n    exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n    exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n    exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n    exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n    exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n    exports.RGB_ETC1_Format = RGB_ETC1_Format;\n    exports.LoopOnce = LoopOnce;\n    exports.LoopRepeat = LoopRepeat;\n    exports.LoopPingPong = LoopPingPong;\n    exports.InterpolateDiscrete = InterpolateDiscrete;\n    exports.InterpolateLinear = InterpolateLinear;\n    exports.InterpolateSmooth = InterpolateSmooth;\n    exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n    exports.ZeroSlopeEnding = ZeroSlopeEnding;\n    exports.WrapAroundEnding = WrapAroundEnding;\n    exports.TrianglesDrawMode = TrianglesDrawMode;\n    exports.TriangleStripDrawMode = TriangleStripDrawMode;\n    exports.TriangleFanDrawMode = TriangleFanDrawMode;\n    exports.LinearEncoding = LinearEncoding;\n    exports.sRGBEncoding = sRGBEncoding;\n    exports.GammaEncoding = GammaEncoding;\n    exports.RGBEEncoding = RGBEEncoding;\n    exports.LogLuvEncoding = LogLuvEncoding;\n    exports.RGBM7Encoding = RGBM7Encoding;\n    exports.RGBM16Encoding = RGBM16Encoding;\n    exports.RGBDEncoding = RGBDEncoding;\n    exports.BasicDepthPacking = BasicDepthPacking;\n    exports.RGBADepthPacking = RGBADepthPacking;\n    exports.CubeGeometry = BoxGeometry;\n    exports.Face4 = Face4;\n    exports.LineStrip = LineStrip;\n    exports.LinePieces = LinePieces;\n    exports.MeshFaceMaterial = MultiMaterial;\n    exports.PointCloud = PointCloud;\n    exports.Particle = Sprite;\n    exports.ParticleSystem = ParticleSystem;\n    exports.PointCloudMaterial = PointCloudMaterial;\n    exports.ParticleBasicMaterial = ParticleBasicMaterial;\n    exports.ParticleSystemMaterial = ParticleSystemMaterial;\n    exports.Vertex = Vertex;\n    exports.EdgesHelper = EdgesHelper;\n    exports.WireframeHelper = WireframeHelper;\n    exports.GeometryUtils = GeometryUtils;\n    exports.ImageUtils = ImageUtils;\n    exports.Projector = Projector;\n    exports.CanvasRenderer = CanvasRenderer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('3js0').factory('utilFactory', UtilityFactoryFunction);\r\n\r\n    /** @ngInject */\r\n    function UtilityFactoryFunction() {\r\n        var svc = this;\r\n\r\n        svc.getRandomDecimal = function (min, max) {\r\n            return (Math.random() * (min - max) + max);\r\n        };\r\n\r\n        svc.resetLimits = function (shapeObj, xLimit, yLimit, zLimit) {\r\n            if (shapeObj.shape.position.x >= xLimit || shapeObj.shape.position.x <= (-1 * xLimit)) {\r\n                shapeObj.locationVelocity.x *= -1;\r\n            }\r\n            if (shapeObj.shape.position.y >= yLimit || shapeObj.shape.position.y <= (-1 * yLimit)) {\r\n                shapeObj.locationVelocity.y *= -1;\r\n            }\r\n            if (shapeObj.shape.position.z >= zLimit || shapeObj.shape.position.z <= (-1 * zLimit)) {\r\n                shapeObj.locationVelocity.z *= -1;\r\n            }\r\n        };\r\n\r\n        return svc;\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('3js0').factory('shapesFactory', ShapesFactoryFunction);\r\n\r\n    /** @ngInject */\r\n    function ShapesFactoryFunction($window, utilFactory) {\r\n        var svc = this;\r\n\r\n        var three = $window.THREE;\r\n        var MIN = 0.01;\r\n        var MAX = 0.05;\r\n\r\n        svc.shapeObjs = [];\r\n\r\n        var getDefaultMaterial = function () {\r\n            return new three.MeshPhongMaterial({\r\n                color: 0xffffff,\r\n                specular: 0x555555,\r\n                shininess: 30\r\n            });\r\n        };\r\n\r\n        var getRandomVector = function () {\r\n            return {\r\n                x: utilFactory.getRandomDecimal(MIN, MAX),\r\n                y: utilFactory.getRandomDecimal(MIN, MAX),\r\n                z: utilFactory.getRandomDecimal(MIN, MAX)\r\n            };\r\n        };\r\n\r\n        svc.getCube = function (material) {\r\n            if (!material) {\r\n                material = getDefaultMaterial();\r\n            }\r\n            var geometry = new three.BoxGeometry(1, 1, 1);\r\n            return {\r\n                shape: new three.Mesh(geometry, material),\r\n                rotation: getRandomVector(),\r\n                locationVelocity: getRandomVector()\r\n            };\r\n        };\r\n\r\n        svc.getTorus = function (material) {\r\n            if (!material) {\r\n                material = getDefaultMaterial();\r\n            }\r\n            var geometry = new three.TorusGeometry(0.25, 0.1, 32, 24);\r\n            return {\r\n                shape: new three.Mesh(geometry, material),\r\n                rotation: getRandomVector(),\r\n                locationVelocity: getRandomVector()\r\n            }\r\n        };\r\n\r\n        svc.getSphere = function (material) {\r\n            if (!material) {\r\n                material = getDefaultMaterial();\r\n            }\r\n            var geometry = new three.SphereGeometry(0.25, 32, 24);\r\n            return {\r\n                shape: new three.Mesh(geometry, material),\r\n                rotation: getRandomVector(),\r\n                locationVelocity: getRandomVector()\r\n            }\r\n        };\r\n\r\n        svc.getCone = function (material) {\r\n            if (!material) {\r\n                material = getDefaultMaterial();\r\n            }\r\n            var geometry = new three.ConeGeometry(0.3, 0.5, 24);\r\n            return {\r\n                shape: new three.Mesh(geometry, material),\r\n                rotation: getRandomVector(),\r\n                locationVelocity: getRandomVector()\r\n            }\r\n        };\r\n\r\n        svc.buildShapes = function () {\r\n            for (var i = 0; i < 5; i++) {\r\n                svc.shapeObjs.push(svc.getCube());\r\n                svc.shapeObjs.push(svc.getTorus());\r\n                svc.shapeObjs.push(svc.getSphere());\r\n                svc.shapeObjs.push(svc.getCone());\r\n            }\r\n        };\r\n\r\n        svc.updatePos = function () {\r\n            angular.forEach(svc.shapeObjs, function (shapeObj) {\r\n                if (shapeObj.shape.rotation) { // ensure it's a THREE shape\r\n\r\n                    shapeObj.shape.rotation.x += shapeObj.rotation.x;\r\n                    shapeObj.shape.rotation.y += shapeObj.rotation.y;\r\n                    shapeObj.shape.rotation.z += shapeObj.rotation.z;\r\n\r\n                    shapeObj.shape.position.x += shapeObj.locationVelocity.x;\r\n                    shapeObj.shape.position.y += shapeObj.locationVelocity.y;\r\n                    shapeObj.shape.position.z += shapeObj.locationVelocity.z;\r\n\r\n                    utilFactory.resetLimits(shapeObj, 2.0, 2.0, 2.0);\r\n                }\r\n            });\r\n        };\r\n\r\n        return svc;\r\n    }\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('3js0').factory('threeDApiFactory', threeDApi);\r\n\r\n    /** @ngInject */\r\n    function threeDApi($window, $document, shapesFactory) {\r\n        var svc = this;\r\n\r\n        if ($window.THREE) {\r\n\r\n            var three = $window.THREE;\r\n\r\n            svc.initRenderer = function (canvas, width, height) {\r\n                svc.renderer = new three.WebGLRenderer({\r\n                    canvas: canvas\r\n                });\r\n                svc.renderer.setSize(width, height);\r\n            };\r\n\r\n            svc.handleResizeEvent = function (width, height) {\r\n                svc.renderer.setSize(width, height);\r\n                svc.camera.aspect = width / height;\r\n                svc.camera.updateProjectionMatrix();\r\n            };\r\n\r\n            svc.setUpScene = function (width, height) {\r\n\r\n                // scene\r\n                svc.scene = new three.Scene();\r\n\r\n                // lights\r\n                var dirLight = new three.DirectionalLight(0xffffff, 1);\r\n                dirLight.position.set(100, 100, 50);\r\n                svc.scene.add(dirLight);\r\n\r\n                var ambLight = new three.AmbientLight(0x404040);\r\n                svc.scene.add(ambLight);\r\n\r\n                // camera\r\n                svc.camera = new three.PerspectiveCamera(45, width / height, 0.1, 100);\r\n                svc.camera.position.z = 3;\r\n            };\r\n\r\n            svc.addShapes = function (shapeObjs) {\r\n                angular.forEach(shapeObjs, function (shapeObj) {\r\n                    svc.scene.add(shapeObj.shape);\r\n                });\r\n            };\r\n\r\n            svc.render = function () {\r\n                requestAnimationFrame(svc.render);\r\n                shapesFactory.updatePos();\r\n                svc.renderer.render(svc.scene, svc.camera);\r\n            };\r\n        }\r\n\r\n        return svc;\r\n    }\r\n\r\n})();\n(function() {\n  'use strict';\n\n  angular\n    .module('3js0')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock(/*$log*/) {\n\n    //$log.debug('runBlock end');\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('3js0')\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('3js0')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n  }\n\n})();\n\nangular.module(\"3js0\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/components/canvas/3D_canvas.html\",\"<canvas id=main-rendering-canvas width={{$ctrl.width}} height={{$ctrl.height}}></canvas>\");}]);"],"sourceRoot":"/source/"}